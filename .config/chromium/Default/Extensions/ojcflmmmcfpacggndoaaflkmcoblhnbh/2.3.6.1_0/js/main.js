
;
define("bootstraps/main", function(){});

// because lodash and underscore do some stupids
define('wunderbits/Wunderscore',[

  'vendor/lodash'

], function (_) {

  

  var arrRef = [];

  return {

    // just returns functions, unlike lodash/underscore which sorts
    'functions': function (obj) {

      var funcs = [obj];
      for (var key in obj) {
        if (typeof obj[key] === 'function') {
          funcs.push(key);
        }
      }
      return funcs;
    },

    // always use native bind regardless of "speed", we want less closures!
    'bindAll': (function () {

      var wBindAll = function (object) {

        var self = this;
        var functions = arguments.length > 1 ? arrRef.concat.apply(arrRef, arrRef.slice.call(arguments, 1)) : self.functions(object);
        var key;

        while (functions.length) {
          key = functions.shift();
          if (key !== 'constructor') {
            object[key] = object[key].bind(object);
          }
        }
      };

      // calculate now vs. at runtime which should be used
      return ('bind' in Function.prototype) ? wBindAll : _.bindAll;
    })(),

    'merge': function (object) {

      // add every property from all sources left to right
      // http://jsperf.com/wunderscore-merge
      var sources = arrRef.concat.apply(arrRef, arrRef.slice.call(arguments, 1));
      var source;
      while (sources.length) {
        source = sources.shift();
        for (var key in source) {
          if (source.hasOwnProperty(key)) {
            object[key] = source[key];
          }
        }
      }

      return object;
    },

    'defer': function () {
      var args = arrRef.slice.call(arguments);
      var callback = args.shift();
      var context = args.shift();

      if (context) {
        _.defer(function () {
          callback.apply(context, args);
        });
      }
      else {
        _.defer(callback);
      }
    },

    'delay': function () {
      var args = arrRef.slice.call(arguments);
      var callback = args.shift();
      var wait = args.shift() || 1;
      var context = args.shift();

      if (context) {
        _.delay(function () {
          callback.apply(context, args);
        }, wait);
      }
      else {
        _.delay(callback, wait);
      }
    }
  };
});
define('wunderbits/lib/dependencies',[

  'vendor/backbone',
  'vendor/lodash',
  'vendor/jquery',

  '../Wunderscore'

],function (backbone, lodash, jquery, Wunderscore) {

  

  return {
    '$': jquery,
    '_': lodash,
    'Backbone': backbone,
    'w_': Wunderscore
  };
});
define('wunderbits/helpers/console',[], function (undefined) {

  

  // HTML5 builerplate - MIT
  // Avoid `console` errors in browsers that lack a console - e.g. < IE 10
  var method;
  var noop = function () {};
  var methods = [

    'assert', 'clear', 'count', 'debug', 'dir', 'dirxml', 'error',
    'exception', 'group', 'groupCollapsed', 'groupEnd', 'info', 'log',
    'markTimeline', 'profile', 'profileEnd', 'table', 'time', 'timeEnd',
    'timeStamp', 'trace', 'warn'
  ];
  var length = methods.length;
  var console = (window.console = window.console || {});

  while (length--) {

    method = methods[length];

    // Only stub undefined methods.
    if (!console[method]) {

      console[method] = noop;
    }
  }

  return console;
});
// Helper method to create the UID

define('wunderbits/lib/createUID',[],function () {

  

  return function createUID () {

    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {

      var r = Math.random()*16|0, v = c == 'x' ? r : (r&0x3|0x8);
      return v.toString(16);
    });
  };
});
define('wunderbits/lib/WBEvents',[

  '../lib/dependencies'

], function (dependencies, undefined) {

  

  var Backbone = dependencies.Backbone;
  var _ = dependencies._;
  var _events = Backbone.Events;
  var _eventSplitter = /\s+/;

  return {

    '_eventArgsMap': {},

    'on': function (events, callback, context) {

      var self = this;

      if (!events || !_.isString(events)) {
        throw new Error('Cannot bind callback without event name(s)');
      }

      if (!callback || !_.isFunction(callback)) {
        throw new Error('Cannot bind callback to event without valid callback');
      }

      self.iterateOverEvents(events, function (event) {

        var args = self._eventArgsMap[event];
        args && _.isFunction(callback) && callback.apply(context || self, args);
      });

      _events.on.apply(this, arguments);

      return self;
    },

    'trigger': function (events) {

      var self = this;
      var params = _.toArray(arguments);

      if (!events || !_.isString(events)) {
        throw new Error('Cannot trigger event(s) without event name(s)');
      }

      self.iterateOverEvents(events, function (eventName) {

        var channelName = '';
        var queue = [];
        var storedFragments;
        var message, part, fragments;

        // Iterate the parts of the eventName to create
        // a queue of all channels to trigger event on
        var channelFragments = eventName.split(':');
        for (var i2 = 0, len2 = channelFragments.length; i2 < len2; i2++ ) {

          part = channelFragments[i2];
          message = {};
          if (channelName) {
            channelName += ':';
          }
          channelName += part;

          storedFragments = _.rest(storedFragments || channelFragments);
          message.fragments = storedFragments;
          message.channel = channelName;

          queue.push(message);
        }

        // Reverse the queue, to make sure "bubbling"
        // occurs from inside out, up to the parent channel
        queue.reverse();
        while (queue.length) {

          message = queue.shift();
          // Always send the current channel name as the first argument, to be triggered
          fragments = [message.channel];

          // Put the arguments back together with the fragment as the second argument
          // This will work recursively, pushing the fragments onto the arguments
          if (message.fragments.length) {
            fragments.push(message.fragments);
          }
          fragments.push.apply(fragments, params.slice(1));

          _events.trigger.apply(self, fragments);
        }

        self.triggered && self.triggered.apply(self, [eventName].concat(_.rest(params)));
      });

      return self;
    },

    'off': function (events) {

      var self = this;

      if (events !== undefined && !_.isString(events)) {
        throw new Error('Cannot unsubscribe event(s) with invalid event name(s)');
      }

      // backbone has a funny way of unbinding events, looping
      // the whole list and then applying #on on the events that
      // shouldn't be unbound - so, we have to temporarily replace
      // self's #on, since the on method will re-trigger any
      // published event...
      var _on = self.on;
      self.on = _events.on;
      _events.off.apply(self, arguments);
      self.on = _on;

      return self;
    },

    'once': function () {

      var self = this;
      var args = _.toArray(arguments);
      var callback = args[1];

      if (_.isFunction(callback)) {
        args[1] = function () {
          _events.off.apply(self, args);
          callback.apply(args[2] || self, arguments);
        };
      }

      self.on.apply(self, args);

      return self;
    },

    'publish': function (events) {

      var self = this;
      var args = Array.prototype.slice.call(arguments, 1);

      if (!events || !_.isString(events)) {
        throw new Error('Cannot publish event(s) without event name(s)');
      }

      self.iterateOverEvents(events, function (event) {

        if (!self._eventArgsMap[event]) {
          self._eventArgsMap[event] = args;
          var payload = [event].concat(args);
          _events.trigger.apply(self, payload);
        }
      });

      return self;
    },

    'unpublish': function (events) {

      var self = this;

      if (!events || !_.isString(events)) {
        throw new Error('Cannot unpublish event(s) without event name(s)');
      }

      self.iterateOverEvents(events, function (event) {
        delete self._eventArgsMap[event];
      });

      return self;
    },

    'unpublishAll': function () {

      var self = this;
      self._eventArgsMap = {};

      return self;
    },

    'iterateOverEvents': function (events, callback) {

      var eventsArray = events.split(_eventSplitter);
      var event;
      while (eventsArray.length) {
        event = eventsArray.shift();
        callback(event);
      }
    }
  };
});
// Based on https://github.com/jimmydo/js-toolbox
define('wunderbits/WBClass',[

  './lib/dependencies',
  './lib/createUID'

], function (dependencies, createUID, undefined) {

  

  var _ = dependencies._;
  var w_ = dependencies.w_;

  // Shared empty constructor function to aid in prototype-chain creation.
  var Ctor = function () {};

  // Helper function to correctly set up the prototype chain, for subclasses.
  // Similar to `goog.inherits`, but uses a hash of prototype properties and
  // class properties to be extended.
  var inherits = function (parent, protoProps, staticProps) {

    var child;

    // The constructor function for the new subclass is either defined by you
    // (the "constructor" property in your `extend` definition), or defaulted
    // by us to simply call `super()`.
    if (protoProps && protoProps.hasOwnProperty('constructor')) {
      child = protoProps.constructor;
    }
    else {
      child = function () { return parent.apply(this, arguments); };
    }

    // Inherit class (static) properties from parent.
    _.extend(child, parent);

    // Set the prototype chain to inherit from `parent`, without calling
    // `parent`'s constructor function.
    Ctor.prototype = parent.prototype;
    child.prototype = new Ctor();

    // Add prototype properties (instance properties) to the subclass,
    // if supplied.
    protoProps &&_.extend(child.prototype, protoProps);

    // Add static properties to the constructor function, if supplied.
    staticProps && _.extend(child, staticProps);

    // Correctly set child's `prototype.constructor`.
    child.prototype.constructor = child;

    // Set a convenience property in case the parent's prototype is needed later.
    child.__super__ = parent.prototype;

    return child;
  };

  // Self-propagating extend function.
  // Create a new class that inherits from the class found in the `this` context object.
  // This function is meant to be called in the context of a constructor function.
  function extendSelf (protoProps, staticProps) {
    /* jshint validthis:true */

    protoProps = protoProps || {};

    // extract mixins, if any
    var mixins = protoProps.mixins || [];
    delete protoProps.mixins;

    // create the derived class
    var child = inherits(this, protoProps, staticProps);

    // apply mixins to the derived class
    var mixin;
    while (mixins.length) {
      mixin = mixins.shift();
      if (_.isFunction(mixin.applyToClass)) {
        mixin.applyToClass(child);
      }
    }

    // make the child class extensible
    child.extend = extendSelf;
    return child;
  }

  function WBClass (options) {

    var self = this;

    // Assign a unique identifier to the instance
    self.uid = createUID();

    // save options, make sure it's at least an empty object
    self.options = options || self.options;

    // Bind all methods to self
    w_.bindAll.apply(self, w_.functions(self));

    // initialize the instance
    self.initialize.apply(self, arguments);

    // initialize all the mixins, if needed
    // don't keep this in the initialize,
    // initialize can be overwritten
    self.initMixins.apply(self, arguments);
  }

  _.extend(WBClass.prototype, {

    'initialize': function () {

      // Return self to allow for subclass to assign
      // super initializer value to self
      var self = this;
      return self;
    },

    // If any mixins were applied to the prototype, initialize them
    'initMixins': function () {

      var self = this;

      var initializers = self.initializers || [];

      var initializer;
      while (initializers.length) {
        initializer = initializers.shift();
        if (_.isFunction(initializer)) {
          initializer.apply(self, arguments);
        }
      }
    }
  });

  WBClass.extend = extendSelf;

  return WBClass;
});
define('wunderbits/WBSingleton',[

  './lib/dependencies',
  './lib/createUID',
  './lib/WBEvents',
  './WBClass'

], function (dependencies, createUID, WBEvents, WBClass, undefined) {

  

  var _ = dependencies._;

  var Singleton = WBClass.extend({

    'initialize': function () {

      throw new Error('Cannot create instance of singleton class');
    }
  });

  Singleton.extend = function (staticProps) {

    var singleton = WBClass.extend.call(this, {});

    // apply mixins to the derived class
    staticProps = staticProps || {};
    var mixins = staticProps.mixins || [];
    staticProps.mixins = undefined;

    var mixin;
    while (mixins.length) {
      mixin = mixins.shift();
      if (typeof mixin.applyTo === 'function') {
        mixin.applyTo(singleton);
      }
    }

    // make the singleton extendable
    // Do this after applying mixins,
    // to ensure that no mixin can override `extend` method
    singleton.extend = Singleton.extend;

    // make the singleton an EventEmitter
    _.extend(singleton, WBEvents, staticProps);

    // every signleton gets a UID
    singleton.uid = createUID();

    return singleton;
  };

  _.extend(Singleton, WBEvents);

  return Singleton;
});
define('wunderbits/WBMixin',[

  './lib/dependencies',
  './WBSingleton'

], function (dependencies, WBSingleton, undefined) {

  

  var _ = dependencies._;

  var Mixin = WBSingleton.extend({

    // Apply the mixin to an instance of a class
    'applyTo': function (instance) {

      var behavior = _.clone(this.Behavior || {});

      // apply mixin's initialize & remove it from the instance
      var initializer;
      if (typeof behavior.initialize === 'function') {
        initializer = behavior.initialize;
        delete behavior.initialize;
      }

      // mixin the behavior
      _.extend(instance, behavior);

      // bind all mixed in methods to the instance
      var property;
      for (var key in behavior) {
        property = behavior[key];
        if (typeof property === 'function') {
          instance[key] = _.bind(property, instance);
        }
      }

      initializer && initializer.apply(instance);

      return instance;
    },

    // Apply the mixin to the class directly
    'applyToClass': function (klass) {

      var proto = klass.prototype;
      if (!proto || !proto.constructor) {
        throw new Error('applyToClass expects a class');
      }

      var behavior = _.clone(this.Behavior || {});

      // cache the mixin's initializer, to be applied later
      var initialize = behavior.initialize;
      if (typeof initialize === 'function') {
        var initializers = proto.initializers = proto.initializers || [];
        initializers.push(initialize);
        delete behavior.initialize;
      }

      // extend the prototype
      _.extend(proto, behavior);

      return klass;
    }
  });

  // The only real change from a simple singleton is
  // the altered extend class method, which will save
  // "mixinProps" into a specific member, for easy
  // and clean application using #applyTo
  Mixin.extend = function (mixinProps, staticProps) {

    mixinProps || (mixinProps = {});
    staticProps || (staticProps = {});

    var current = _.clone(this.Behavior || {});
    var behavior = _.extend(current, mixinProps);
    var props = _.extend(staticProps, { Behavior: behavior });
    var mixin = WBSingleton.extend.call(this, props);

    mixin.extend = Mixin.extend;

    return mixin;
  };

  return Mixin;
});
// Based on Marionette's EventBinder
// https://raw.github.com/derickbailey/backbone.marionette/master/lib/backbone.marionette.js

define('wunderbits/mixins/WBBindableMixin',[

  '../lib/dependencies',
  '../WBMixin',
  '../lib/createUID'

], function (dependencies, WBMixin, createUID) {

  

  var _ = dependencies._;
  var Backbone = dependencies.Backbone;

  function _initBindings (self) {

    if (!self._bindings) {
      self._bindings = {};
      self._namedEvents = {};
    }
  }

  // keeps callback closure in own execution context with
  // only callback and context
  function _callbackFactory (callback, context) {

    var bindCallback;

    var forString = function stringCallback () {
      context[callback].apply(context, arguments);
    };

    var forFunction = function functionCallback () {
      callback.apply(context, arguments);
    };

    if (typeof callback === 'string') {
      bindCallback = forString;
      // cancel alternate closure immediately
      forFunction = null;
    }
    else {
      bindCallback = forFunction;
      forString = null;
    }

    return bindCallback;
  }

  return WBMixin.extend({

    'bindTo': function (target, event, callback, context) {

      var self = this;
      _initBindings(self);
      self.checkBindingArgs.apply(self, arguments);

      // if this binding already made, return it
      var bound = self.isAlreadyBound(target, event, callback);
      if (bound) {
        return bound;
      }

      // default to self if context not provided
      context = context || self;

      var callbackFunc, args;

      if (self.instanceOfBackbone(target)) {
        // Backbone accepts context when binding, simply pass it on
        callbackFunc = _.isString(callback) ? context[callback] : callback;
        args = [event, callbackFunc, context];
      }
      else {
        // jquery does not take context in .on()
        // cannot assume on takes context as a param for bindable object
        // create a callback which will apply the original callback in the correct context
        callbackFunc = _callbackFactory(callback, context);
        args = [event, callbackFunc];
      }

      // create binding on target
      target.on.apply(target, args);

      var binding = {
        'uid': createUID(),
        'target': target,
        'event': event,
        'originalCallback': callback,
        'callback': callbackFunc,
        'context': context
      };

      self._bindings[binding.uid] = binding;
      self.addToNamedBindings(event, binding);

      return binding;
    },

    'bindOnceTo': function (target, event, callback, context) {

      var self = this;
      _initBindings(self);
      self.checkBindingArgs.apply(self, arguments);

      // if this binding already made, return it
      var bound = self.isAlreadyBound(target, event, callback);
      if (bound) {
        return bound;
      }

      context = context || self;

      // this is a wrapper
      var onceBinding = function () {

        (_.isString(callback) ? context[callback] : callback).apply(context, arguments);
        self.unbindFrom.call(self, binding);
      };

      var binding = {

        'uid': createUID(),
        'target': target,
        'event': event,
        'originalCallback': callback,
        'callback': onceBinding,
        'context': context
      };

      target.on(event, onceBinding);

      self._bindings[binding.uid] = binding;
      self.addToNamedBindings(event, binding);

      return binding;
    },

    'unbindFrom': function (binding) {

      var self = this;
      _initBindings(self);

      if (!binding || !_.isString(binding.uid)) {
        throw new Error('Cannot unbind from undefined or invalid binding');
      }

      // a binding object with only uid, i.e. a destroyed/unbound
      // binding object has been passed - just do nothing
      if (!binding.event || !binding.callback || !binding.target) {
        return;
      }

      var event = binding.event;
      binding.target.off(event, binding.callback);

      // clean up binding object, but keep uid to
      // make sure old bindings, that have already been
      // cleaned, are still recognized as bindings
      for (var key in binding) {
        if (key !== 'uid') {
          delete binding[key];
        }
      }

      delete self._bindings[binding.uid];

      self._namedEvents[event] = _.filter(self._namedEvents[event], function (_binding) {
        if (_binding.cid === binding.cid) {
          return false;
        }
      });

      return undefined;
    },

    'unbindFromTarget': function (target) {

      var self = this;
      _initBindings(self);

      if (!target || !_.isFunction(target.on)) {
        throw new Error('Cannot unbind from undefined or invalid binding target');
      }

      var binding;
      for (var key in self._bindings) {
        binding = self._bindings[key];
        if (binding.target === target) {
          self.unbindFrom(binding);
        }
      }
    },

    'unbindAll': function () {

      var self = this;
      _initBindings(self);

      var binding;
      for (var key in self._bindings) {
        binding = self._bindings[key];
        self.unbindFrom(binding);
      }
    },

    'checkBindingArgs': function (target, event, callback, context) {

      context = context || this;

      // do not change these messages without updating the specs
      if (!target || !_.isFunction(target.on)) {
        throw new Error('Cannot bind to undefined target or target without #on method');
      }

      if (!event || !_.isString(event)) {
        throw new Error('Cannot bind to target event without event name');
      }

      if (!callback || (!_.isFunction(callback) && !_.isString(callback))) {
        throw new Error('Cannot bind to target event without a function or method name as callback');
      }

      if (_.isString(callback) && !context[callback]) {
        throw new Error('Cannot bind to target using a method name that does not exist for the context');
      }
    },

    'isAlreadyBound': function (target, event, callback) {

      var self = this;
      // check for same callback on the same target instance
      // return early withthe event binding
      var events = self._namedEvents[event];
      if (events) {
        for (var i = 0, max = events.length; i < max; i++) {
          
          // TODO all of our classes should have a cid or uid
          // and we need to pick one and mixin to all base classes
          // for now let targets without uid/cid rebind
          var boundTarget = events[i].target;
          if (!boundTarget) {
            return false;
          }
          var targetBound = target.cid ? target.cid === boundTarget.cid : target.uid ? target.uid === boundTarget.uid : false;
          if (events[i].originalCallback === callback && targetBound) {
            return events[i];
          }
        }
      }

      return false;
    },

    'instanceOfBackbone': function (target) {

      var B = Backbone;
      var t = target;

      return t instanceof B.Model || t instanceof B.View || t instanceof B.Collection || t instanceof B.Router;
    },

    'addToNamedBindings': function (event, binding) {

      var self = this;
      if (!self._namedEvents[event]) {
        self._namedEvents[event] = [];
      }
      self._namedEvents[event].push(binding);
    }
  });
});
define('wunderbits/WBEnvironmentModel',[

  './lib/dependencies',
  './global',

  // don't import and get core dependencies from runtime,
  // since runtime requires this file - circular dependencies
  'vendor/ua-detector',

  './mixins/WBBindableMixin',
  './WBSingleton'

], function (dependencies, global, UADetector, WBBindableMixin, WBSingleton, undefined) {

  

  var _ = dependencies._;
  var $ = dependencies.$;

  var _$window = $(global);

  var _context = false;
  var _isAnimationEnabled = false;
  var _envInfo = {};
  var _isTouch;
  var _ieVersion;
  var _webkitSpeech;

  var self = WBSingleton.extend({

    'mixins': [
      WBBindableMixin
    ],

    'init': function () {

      self.on('destroy', self._onDestroy);

      self.bindTo(_$window, 'resize', self._onWindowResize);

      // resize is not a valid event on ipad, use onorientationchange instead
      self.bindTo(_$window, 'onorientationchange', self._onWindowResize);
      self._onWindowResize();

      self._bindConnectionEvents();
      self._gatherEnvInfo(window.navigator, window.document);
      self._isOnline = true;

      _.delay(self._enableAnimations, 1000);

      // add browser class to the body
      var browser = self.getBrowser();
      $('body').addClass(browser);

      return self;
    },

    '_gatherEnvInfo': function (navigator, document) {

      var self = this;

      // TODO: (for aditya)
      // We should respect navigator.doNotTrack
      // We should check browsers without going through the user agent

      // Don't gather user's env info if Do-Not-Track is enabled
      // if(!!navigator.doNotTrack) {
      //   return;
      // }

      var chrome = global.chrome;
      _.extend(_envInfo, {

        'language': navigator.userLanguage || navigator.language || 'en-US',
        'UA': navigator.userAgent, // For extrating browser/platform info
        'platform': navigator.platform, // Faking UA doesn't alter this
        'referer': document.referer || '',
        'OS': UADetector.os.toLowerCase(),
        'browser': UADetector.browser.toLowerCase(),
        'version': UADetector.version,
        'retina': window.devicePixelRatio >= 2,
        'touch': self.isTouchDevice(),
        'chromeApp': !!(chrome && chrome.app && chrome.app.runtime),
        // TODO: find a better way to detect firefox OS.. MozActivity is lazy loaded now
        // (typeof global.MozActivity === 'function' && !!navigator.mozApps)
        'firefoxApp': false
      });
    },

    'getBrowser': function () {

      return UADetector.browser.toLowerCase();
    },

    'getTransitionEndEvent': function () {

      var self = this;
      var transitionEndEvent =  self.isWebkit() ? 'webkitTransitionEnd' : self.isFirefox() ? 'transitionend' : self.isOpera() ? 'oTransitionEnd otransitionend': self.isIE() ? 'transitionend' :'transitionend';
      return transitionEndEvent;
    },

    '_onWindowResize': function () {

      try {

        var context = window.getComputedStyle(document.body,':after').getPropertyValue('content');
        var oldContext = _context || '';

        if (context && (_context !== context)) {

          _context = context;

          self.trigger('change:context', {

            'context': _context,
            'oldContext': oldContext
          });
        }
      }
      catch (e) {

        // suppressing errors
      }
      self._setupSwipeDistance();
      self._enableAnimations();
      self.isTouchDevice();
    },

    '_onDestroy': function () {

      _$window.off('resize', self._onDocumentResize);
    },

    '_setupSwipeDistance': function () {

      var self = this;
      var newSwipevalues = {};
      var oldSwipevalues = $.event.swipe;
      var docWidth = self.getCurrentWidth();

      newSwipevalues.min = 100;
      newSwipevalues.max = docWidth;
      newSwipevalues.delay = 800;

      _.extend(oldSwipevalues, newSwipevalues);
    },

    '_onOnlineConnection': function () {

      if (!self._isOnline) {

        self._isOnline = true;
        self.trigger('online');
      }
    },

    '_onOfflineConnection': function () {

      if (self._isOnline) {

        self._isOnline = false;
        self.trigger('offline');
      }
    },

    '_bindConnectionEvents': function () {

      $(document).ajaxSuccess(self._onOnlineConnection).ajaxError(function (e, xhr) {

        (xhr.status === 0) && self._onOfflineConnection();
      });

      self.bindTo(_$window, 'online', self._onOnlineConnection);
      self.bindTo(_$window, 'offline', self._onOfflineConnection);
    },

    'getCurrentWidth': function () {

      return _$window.width();
    },

    '_enableAnimations': function () {

      var $body = $('body');

      if ((self.isTouchDevice() || self.isPointerEnabled())) {

        _isAnimationEnabled = true;
      }
      else if (_context === 'large' || !self.isTouchDevice()) {

        _isAnimationEnabled = true;
      }
      else {

        _isAnimationEnabled = false;
      }

      if (_isAnimationEnabled) {

        $body.addClass('animate');
        $.fx.off = false;
      }
      else {

        $body.removeClass('animate');
        $.fx.off = true;
      }
    },

    'isAnimationEnabled': function() {

      return _isAnimationEnabled;
    },

    'isOnline': function () {

      return !!self._isOnline;
    },

    'isMicro': function () {

      var self = this;
      if (self.isIE() || self.isFirefox() || self.isOpera()) {

        return _context && /micro/.test(_context);
      }

      return _context === 'micro';
    },

    'isMini': function () {

      var self = this;

      if (self.isIE() || self.isFirefox() || self.isOpera()) {

        return _context && /mini/.test(_context);
      }

      return _context === 'mini';
    },

    'isMedium': function () {

      var self = this;

      if (self.isIE() || self.isFirefox() || self.isOpera()) {

        return _context && /medium/.test(_context);
      }

      return _context === 'medium';
    },

    'isLarge': function () {

      var self = this;
      if (self.isIE() || self.isFirefox() || self.isOpera()) {

        return _context && /large/.test(_context);
      }

      return _context === 'large';
    },

    'isRetina': function () {

      return _envInfo.retina;
    },

    'isOpera': function () {

      return _envInfo.browser === 'opera';
    },

    'isFirefox': function() {

      return _envInfo.browser === 'firefox';
    },

    'isFirefoxApp': function () {

      return _envInfo.firefoxApp;
    },

    'isSafari': function() {

      return _envInfo.browser === 'safari';
    },

    'isChrome': function () {

      return _envInfo.browser === 'chrome';
    },

    'isChromeApp': function () {

      return _envInfo.chromeApp;
    },

    'isPackagedApp': function () {

      return _envInfo.firefoxApp || _envInfo.chromeApp;
    },

    'isIE': function () {

      return !!self.getIEVersion();
    },

    'isIE9': function () {

      var IE = self.isIE();
      return IE && self.getIEVersion() === 9;
    },

    'getIEVersion': function () {

      // cache is your friend!
      if (_ieVersion === undefined) {

        _ieVersion = (function () {

          var v = 3;
          var div = document.createElement('div');
          var all = div.getElementsByTagName('i');

          while ((div.innerHTML = '<!--[if gt IE ' + (++v) + ']><i></i><![endif]-->') && all[0]) {

            // ha ha this is some convulted shit right here!
          }

          return v > 4 ? v : false;
        }());
      }

      // IE 10 check
      if (_ieVersion === false) {

        _ieVersion = _envInfo.browser === 'explorer' ? 10 : false;
      }

      // IE 11 check
      if (_ieVersion === false && _envInfo.OS === 'windows' && /Trident/.test(_envInfo.UA)) {

        _ieVersion = _envInfo.version;
      }

      return _ieVersion;
    },

    'isWindows': function () {

      return _envInfo.OS === 'windows';
    },

    'isMac': function () {

      return _envInfo.OS === 'mac';
    },

    'isChromeOS': function () {

      return (/cros/i).test(window.navigator.userAgent);
    },

    'isArmProcessor': function () {

      return (/armv/i).test(window.navigator.userAgent);
    },

    'hasTouchEvents': function () {

      return (('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch) || window.navigator.msMaxTouchPoints);
    },

    'disableAsTouchDevice': function () {

      _isTouch = false;
      _envInfo.isTouchDevice = _isTouch;

      $('body').toggleClass('touch', _isTouch);
    },

    'enabledAsTouchDevice': function () {

      var self = this;

      _isTouch = true;
      _envInfo.isTouchDevice = _isTouch;

      $('body').toggleClass('touch', self.isChromeOS() ? false : _isTouch);
    },

    'isTouchDevice': function () {

      var self = this;

      if (_isTouch === undefined) {

        if ((('ontouchstart' in window) || (window.DocumentTouch && document instanceof window.DocumentTouch) || window.navigator.msMaxTouchPoints)) {

          _isTouch = true;
        }
        else {

          _isTouch = false;
        }

        _envInfo.isTouchDevice = _isTouch;

        $('body').toggleClass('touch', self.isChromeOS() ? false : _isTouch);
      }

      return _isTouch;
    },

    'getEnvIdentifier': function () {

      var self = this;
      return (self.isChromeOS() ? 'chromeos': _envInfo.OS) + '_' + _envInfo.browser + '_touch';
    },

    'isWebkit': function () {

      return $.browser.webkit;
    },

    'isWebkitSpeechEnabled': function (){

      if (_webkitSpeech === undefined) {

        _webkitSpeech = document.createElement("input").webkitSpeech !== undefined;
      }

      return _webkitSpeech;
    },

    // pointer events are Microsoft's gift from hell. the need special logic
    'isPointerEnabled': function () {

      self.isPointerDevice = window.navigator.msPointerEnabled !== undefined && window.navigator.msMaxTouchPoints > 0 ? true: false;

      return self.isPointerDevice;
    },

    'getContext': function () {

      var self = this;

      if (!_context || _context === 'none') {

        self._onWindowResize();
      }

      return _context;
    },

    'getEnvInfo': function() {
      // return a copy of the env info
      return _.clone(_envInfo);
    },

    'relevantExtensionLink': function () {

      var self = this;
      if (self.isSafari()) {
        return 'http://wunderlist2-static.s3.amazonaws.com/extensions/add-to-wunderlist.safariextz';
      }
      if (self.isFirefox()) {
        return 'https://addons.mozilla.org/en-us/firefox/addon/add-to-wunderlist/';
      }
      if (self.isChrome()) {
        return 'https://chrome.google.com/webstore/detail/add-to-wunderlist/dmnddeddcgdllibmaodanoonljfdmooc?hl=en';
      }
      return false;
    }
  });

  return self;
});
define('wunderbits/mixins/WBEventsMixin',[

  '../WBMixin',
  '../lib/WBEvents'

], function (WBMixin, WBEvents, undefined) {

  

  return WBMixin.extend(WBEvents);
});
//
//  Logs timline events into storage
//  Log into the timline model of the storage DB store
//  From the model you can load by namespace
//  As an example, fetching the timeline model from the DB will allow you to fetch
//  the namespace 'test':
//  'test': {
//    'start': 1029382938,
//    'end': 9293819283,
//    'duration': 234234
//  }


// user_login: from app start to interface loaded and tasks rendered

// login_start: from app start to login view visible
// login_load_app: from click "login", to sending out the first batch
// login_latency: from click "login", to receive login endpoint result

// login_load_content: from first batch request out, to all tasks fetched,
//   no more before timestamp (runtime.beforeDone)

// login_full_display: from all tasks fetched, to interface and tasks rendered

// login_initial_display: from app start to first batch (whatever you wanted to see,
//   like the inbox, homie) rendered

// user_refresh: from app start to interface loaded and tasks rendered

// refresh_start: from app start to any interface visible
// refresh_db_load: from start db load, to db loaded (including sorting)

// refresh_update: first normal batch request after refresh, empty or not

define('wunderbits/mixins/WBTimelineMixin',[

  '../WBMixin',
  '../lib/dependencies',
  '../lib/createUID',

], function (WBMixin, dependencies, createUID) {

  

  var Backbone = dependencies.Backbone;
  var w_ = dependencies.w_;
  var $ = dependencies.$;

  return WBMixin.extend({

    // initialize is used by WBMixin, it does not override the class it is being applied to
    'initialize': function () {

      var self = this;

      self.timelineEnabled = false;

      self.timelineModelHasFetched = new $.Deferred();

      self.timelineModel = new Backbone.Model({
        'id': 'timeline'
      });

      self.timelineModel.storeName = 'storage';

      self.on('timeline:start', self.logStart);
      self.on('timeline:end', self.logEnd);

      // api benchmarks
      self.on('timeline:api', self.logAPI);

      // specific events
      self.once('sync:started', function () {

        self.logTimepoint('login_load_app', 'end');
      });

      self.once('lists:ready', function () {

        self.logTimepoint('lists_loaded', 'end');
      });

      self.once('before:done', function () {

        // not a range event
        self.logTimepoint('all_api_data_loaded', 'start');
      });

      self.once('sync:end', function () {

        self.logTimepoint('initial_sync_processed', 'start');
      });

      self.once('taskCounts:rendered', function () {

        self.logTimepoint('task_counts_rendered', 'start');
      });
    },

    'logStart': function (namespace) {
      var self = this;
      self.logTimepoint(namespace, 'start');
    },

    'logEnd': function (namespace) {
      var self = this;
      self.logTimepoint(namespace, 'end');
    },

    'logTimepoint': function (namespace, point) {

      var self = this;

      if (!self.isTimelineEnabled()) {return;}

      var now = self.now();

      self.fetchTimelineData().done(function () {

        var oldData = self.timelineModel.get(namespace) || {};

        var newData = {};
        newData[point] = now;

        if (point === 'end' && oldData.start) {
          newData.duration = now - oldData.start;
        }
        else if (point === 'end') {
          return;
        }

        var data = {};
        data[namespace] = w_.merge({}, oldData, newData);

        self.timelineModel.save(data);
      });
    },

    'duration': function (namespace, duration) {

      var self = this;

      if (!self.isTimelineEnabled()) {return;}

      self.fetchTimelineData().done(function () {

        var oldData = self.timelineModel.get(namespace) || {};

        var newData = {
          'duration': duration
        };

        var data = {};
        data[namespace] = w_.merge({}, oldData, newData);

        self.timelineModel.save(data);
      });
    },

    'logAPI': function (apiData) {

      var self = this;
      var data = {};

      if (!self.isTimelineEnabled()) {return;}

      data['apiBenchmark' + createUID()] = apiData;

      self.fetchTimelineData().done(function () {

        self.timelineModel.save(data);
      });
    },

    'now': function () {

      return Date.now();
    },

    'fetchTimelineData': function () {

      var self = this;

      if (self.timelineModelHasFetched.state() === 'pending' && !self.timelineFetchedOnce) {
        self.timelineFetchedOnce = true;
        self.timelineModel.fetch({
          'success': self.timelineModelHasFetched.resolve,
          'error': self.timelineModelHasFetched.resolve
        });
      }

      return self.timelineModelHasFetched.promise();
    },

    'resetTimeline': function () {

      this.timelineModel.clear().save({
        'id': 'timeline'
      });
    },

    'isTimelineEnabled': function () {
      return !!this.timelineEnabled;
    },

    'enableTimeline': function () {
      this.timelineEnabled = true;
    },

    'disableTimeline': function () {
      this.timelineEnabled = false;
    }
  });
});
define('wunderbits/WBRuntime',[

  './lib/dependencies',
  './global',
  './helpers/console',
  './WBEnvironmentModel',
  './WBSingleton',

  './mixins/WBBindableMixin',
  './mixins/WBEventsMixin',
  './mixins/WBTimelineMixin'

], function (

  dependencies,
  global, Console,
  WBEnvironmentModel,
  WBSingleton, WBEventsMixin, WBTimelineMixin,
  WBBindableMixin,
  undefined

) {

  

  var WBRuntime = WBSingleton.extend({

    'mixins': [
      WBBindableMixin,
      WBEventsMixin,
      WBTimelineMixin
    ],

    'init': function () {

      var self = this;

      // core dependencies
      self.global = global;
      self.console = Console;

      self._ = dependencies._;
      self.$ = dependencies.$;
      self.Backbone = dependencies.Backbone;
      self.w_ = dependencies.w_;

      self.env = WBEnvironmentModel.init();

      self.debouncedTriggerResize = self._.debounce(self.triggerResize, 250);
      self.bindTo(self.$(global), 'resize', self.debouncedTriggerResize);
    },

    'debouncedTriggerResize': undefined,

    'triggerResize': function () {

      var self = this;
      self.trigger('window:resize');
    },

    'currentRoute': function () {

      var self = this;
      return (self.global.location.hash || '').replace('#/', '').replace('#', '');
    },

    'currentDomain': function () {

      var self = this;
      return self.global.location.hostname || '';
    }
  });

  WBRuntime.init();
  return WBRuntime;
});
define('wunderbits/mixins/EmojiData',[

  '../WBSingleton'

], function (WBSingleton) {

  

  var rawEmojiData = {
    "100": "1f4af",
    "1234": "1f522",
    "+1": "1f44d",
    "-1": "1f44e",
    "8ball": "1f3b1",
    "a": "1f170",
    "ab": "1f18e",
    "abc": "1f524",
    "abcd": "1f521",
    "accept": "1f251",
    "aerial tramway": "1f6a1",
    "airplane": "2708",
    "alarm clock": "23f0",
    "alien": "1f47d",
    "ambulance": "1f691",
    "anchor": "2693",
    "angel": "1f47c",
    "anger": "1f4a2",
    "angry": "1f620",
    "anguished": "1f627",
    "ant": "1f41c",
    "apple": "1f34e",
    "aquarius": "2652",
    "aries": "2648",
    "arrow backward": "25c0",
    "arrow double down": "23ec",
    "arrow double up": "23eb",
    "arrow down": "2b07",
    "arrow down small": "1f53d",
    "arrow forward": "25b6",
    "arrow heading down": "2935",
    "arrow heading up": "2934",
    "arrow left": "2b05",
    "arrow lower left": "2199",
    "arrow lower right": "2198",
    "arrow right": "27a1",
    "arrow right hook": "21aa",
    "arrow up": "2b06",
    "arrow up down": "2195",
    "arrow up small": "1f53c",
    "arrow upper left": "2196",
    "arrow upper right": "2197",
    "arrows clockwise": "1f503",
    "arrows counterclockwise": "1f504",
    "art": "1f3a8",
    "articulated lorry": "1f69b",
    "astonished": "1f632",
    "athletic shoe": "1f45f",
    "atm": "1f3e7",
    "b": "1f171",
    "baby": "1f476",
    "baby bottle": "1f37c",
    "baby chick": "1f424",
    "baby symbol": "1f6bc",
    "back": "1f519",
    "baggage claim": "1f6c4",
    "balloon": "1f388",
    "ballot box with check": "2611",
    "bamboo": "1f38d",
    "banana": "1f34c",
    "bangbang": "203c",
    "bank": "1f3e6",
    "bar chart": "1f4ca",
    "barber": "1f488",
    "baseball": "26be",
    "basketball": "1f3c0",
    "bath": "1f6c0",
    "bathtub": "1f6c1",
    "battery": "1f50b",
    "bear": "1f43b",
    "bee": "1f41d",
    "beer": "1f37a",
    "beers": "1f37b",
    "beetle": "1f41e",
    "beginner": "1f530",
    "bell": "1f514",
    "bento": "1f371",
    "bicyclist": "1f6b4",
    "bike": "1f6b2",
    "bikini": "1f459",
    "bird": "1f426",
    "birthday": "1f382",
    "black circle": "26ab",
    "black joker": "1f0cf",
    "black large square": "2b1b",
    "black medium small square": "25fe",
    "black medium square": "25fc",
    "black nib": "2712",
    "black small square": "25aa",
    "black square button": "1f532",
    "blossom": "1f33c",
    "blowfish": "1f421",
    "blue book": "1f4d8",
    "blue car": "1f699",
    "blue heart": "1f499",
    "blush": "1f60a",
    "boar": "1f417",
    "boat": "26f5",
    "bomb": "1f4a3",
    "book": "1f4d6",
    "bookmark": "1f516",
    "bookmark tabs": "1f4d1",
    "books": "1f4da",
    "boom": "1f4a5",
    "boot": "1f462",
    "bouquet": "1f490",
    "bow": "1f647",
    "bowling": "1f3b3",
    "bowtie": "bowtie",
    "boy": "1f466",
    "bread": "1f35e",
    "bride with veil": "1f470",
    "bridge at night": "1f309",
    "briefcase": "1f4bc",
    "broken heart": "1f494",
    "bug": "1f41b",
    "bulb": "1f4a1",
    "bullettrain front": "1f685",
    "bullettrain side": "1f684",
    "bus": "1f68c",
    "busstop": "1f68f",
    "bust in silhouette": "1f464",
    "busts in silhouette": "1f465",
    "cactus": "1f335",
    "cake": "1f370",
    "calendar": "1f4c6",
    "calling": "1f4f2",
    "camel": "1f42b",
    "camera": "1f4f7",
    "cancer": "264b",
    "candy": "1f36c",
    "capital abcd": "1f520",
    "capricorn": "2651",
    "car": "1f697",
    "card index": "1f4c7",
    "carousel horse": "1f3a0",
    "cat": "1f431",
    "cat2": "1f408",
    "cd": "1f4bf",
    "chart": "1f4b9",
    "chart with downwards trend": "1f4c9",
    "chart with upwards trend": "1f4c8",
    "checkered flag": "1f3c1",
    "cherries": "1f352",
    "cherry blossom": "1f338",
    "chestnut": "1f330",
    "chicken": "1f414",
    "children crossing": "1f6b8",
    "chocolate bar": "1f36b",
    "christmas tree": "1f384",
    "church": "26ea",
    "cinema": "1f3a6",
    "circus tent": "1f3aa",
    "city sunrise": "1f307",
    "city sunset": "1f306",
    "cl": "1f191",
    "clap": "1f44f",
    "clapper": "1f3ac",
    "clipboard": "1f4cb",
    "clock1": "1f550",
    "clock10": "1f559",
    "clock1030": "1f565",
    "clock11": "1f55a",
    "clock1130": "1f566",
    "clock12": "1f55b",
    "clock1230": "1f567",
    "clock130": "1f55c",
    "clock2": "1f551",
    "clock230": "1f55d",
    "clock3": "1f552",
    "clock330": "1f55e",
    "clock4": "1f553",
    "clock430": "1f55f",
    "clock5": "1f554",
    "clock530": "1f560",
    "clock6": "1f555",
    "clock630": "1f561",
    "clock7": "1f556",
    "clock730": "1f562",
    "clock8": "1f557",
    "clock830": "1f563",
    "clock9": "1f558",
    "clock930": "1f564",
    "closed book": "1f4d5",
    "closed lock with key": "1f510",
    "closed umbrella": "1f302",
    "cloud": "2601",
    "clubs": "2663",
    "cn": "1f1e8-1f1f3",
    "cocktail": "1f378",
    "coffee": "2615",
    "cold sweat": "1f630",
    "collision": "1f4a5",
    "computer": "1f4bb",
    "confetti ball": "1f38a",
    "confounded": "1f616",
    "confused": "1f615",
    "congratulations": "3297",
    "construction": "1f6a7",
    "construction worker": "1f477",
    "convenience store": "1f3ea",
    "cookie": "1f36a",
    "cool": "1f192",
    "cop": "1f46e",
    "copyright": "00a9",
    "corn": "1f33d",
    "couple": "1f46b",
    "couple with heart": "1f491",
    "couplekiss": "1f48f",
    "cow": "1f42e",
    "cow2": "1f404",
    "credit card": "1f4b3",
    "crescent moon": "1f319",
    "crocodile": "1f40a",
    "crossed flags": "1f38c",
    "crown": "1f451",
    "cry": "1f622",
    "crying cat face": "1f63f",
    "crystal ball": "1f52e",
    "cupid": "1f498",
    "curly loop": "27b0",
    "currency exchange": "1f4b1",
    "curry": "1f35b",
    "custard": "1f36e",
    "customs": "1f6c3",
    "cyclone": "1f300",
    "dancer": "1f483",
    "dancers": "1f46f",
    "dango": "1f361",
    "dart": "1f3af",
    "dash": "1f4a8",
    "date": "1f4c5",
    "de": "1f1e9-1f1ea",
    "deciduous tree": "1f333",
    "department store": "1f3ec",
    "diamond shape with a dot inside": "1f4a0",
    "diamonds": "2666",
    "disappointed": "1f61e",
    "disappointed relieved": "1f625",
    "dizzy": "1f4ab",
    "dizzy face": "1f635",
    "do not litter": "1f6af",
    "dog": "1f436",
    "dog2": "1f415",
    "dollar": "1f4b5",
    "dolls": "1f38e",
    "dolphin": "1f42c",
    "door": "1f6aa",
    "doughnut": "1f369",
    "dragon": "1f409",
    "dragon face": "1f432",
    "dress": "1f457",
    "dromedary camel": "1f42a",
    "droplet": "1f4a7",
    "dvd": "1f4c0",
    "e-mail": "1f4e7",
    "ear": "1f442",
    "ear of rice": "1f33e",
    "earth africa": "1f30d",
    "earth americas": "1f30e",
    "earth asia": "1f30f",
    "egg": "1f373",
    "eggplant": "1f346",
    "eight": "0038",
    "eight pointed black star": "2734",
    "eight spoked asterisk": "2733",
    "electric plug": "1f50c",
    "elephant": "1f418",
    "email": "2709",
    "end": "1f51a",
    "envelope": "2709",
    "envelope with arrow": "1f4e9",
    "es": "1f1ea-1f1f8",
    "euro": "1f4b6",
    "european castle": "1f3f0",
    "european post office": "1f3e4",
    "evergreen tree": "1f332",
    "exclamation": "2757",
    "expressionless": "1f611",
    "eyeglasses": "1f453",
    "eyes": "1f440",
    "facepunch": "1f44a",
    "factory": "1f3ed",
    "fallen leaf": "1f342",
    "family": "1f46a",
    "fast forward": "23e9",
    "fax": "1f4e0",
    "fearful": "1f628",
    "feelsgood": "feelsgood",
    "feet": "1f43e",
    "ferris wheel": "1f3a1",
    "file folder": "1f4c1",
    "finnadie": "finnadie",
    "fire": "1f525",
    "fire engine": "1f692",
    "fireworks": "1f386",
    "first quarter moon": "1f313",
    "first quarter moon with face": "1f31b",
    "fish": "1f41f",
    "fish cake": "1f365",
    "fishing pole and fish": "1f3a3",
    "fist": "270a",
    "five": "0035",
    "flags": "1f38f",
    "flashlight": "1f526",
    "flipper": "1f42c",
    "floppy disk": "1f4be",
    "flower playing cards": "1f3b4",
    "flushed": "1f633",
    "foggy": "1f301",
    "football": "1f3c8",
    "footprints": "1f463",
    "fork and knife": "1f374",
    "fountain": "26f2",
    "four": "0034",
    "four leaf clover": "1f340",
    "fr": "1f1eb-1f1f7",
    "free": "1f193",
    "fried shrimp": "1f364",
    "fries": "1f35f",
    "frog": "1f438",
    "frowning": "1f626",
    // "fu": "fu",
    "fuelpump": "26fd",
    "full moon": "1f315",
    "full moon with face": "1f31d",
    "game die": "1f3b2",
    "gb": "1f1ec-1f1e7",
    "gem": "1f48e",
    "gemini": "264a",
    "ghost": "1f47b",
    "gift": "1f381",
    "gift heart": "1f49d",
    "girl": "1f467",
    "globe with meridians": "1f310",
    "goat": "1f410",
    "goberserk": "goberserk",
    // "godmode": "godmode",
    "golf": "26f3",
    "grapes": "1f347",
    "green apple": "1f34f",
    "green book": "1f4d7",
    "green heart": "1f49a",
    "grey exclamation": "2755",
    "grey question": "2754",
    "grimacing": "1f62c",
    "grin": "1f601",
    "grinning": "1f600",
    "guardsman": "1f482",
    "guitar": "1f3b8",
    "gun": "1f52b",
    "haircut": "1f487",
    "hamburger": "1f354",
    "hammer": "1f528",
    "hamster": "1f439",
    "hand": "270b",
    "handbag": "1f45c",
    "hankey": "1f4a9",
    "hash": "0023",
    "hatched chick": "1f425",
    "hatching chick": "1f423",
    "headphones": "1f3a7",
    "hear no evil": "1f649",
    "heart": "2764",
    "heart decoration": "1f49f",
    "heart eyes": "1f60d",
    "heart eyes cat": "1f63b",
    "heartbeat": "1f493",
    "heartpulse": "1f497",
    "hearts": "2665",
    "heavy check mark": "2714",
    "heavy division sign": "2797",
    "heavy dollar sign": "1f4b2",
    "heavy exclamation mark": "2757",
    "heavy minus sign": "2796",
    "heavy multiplication x": "2716",
    "heavy plus sign": "2795",
    "helicopter": "1f681",
    "herb": "1f33f",
    "hibiscus": "1f33a",
    "high brightness": "1f506",
    "high heel": "1f460",
    "hocho": "1f52a",
    "honey pot": "1f36f",
    "honeybee": "1f41d",
    "horse": "1f434",
    "horse racing": "1f3c7",
    "hospital": "1f3e5",
    "hotel": "1f3e8",
    "hotsprings": "2668",
    "hourglass": "231b",
    "hourglass flowing sand": "23f3",
    "house": "1f3e0",
    "house with garden": "1f3e1",
    "hurtrealbad": "hurtrealbad",
    "hushed": "1f62f",
    "ice cream": "1f368",
    "icecream": "1f366",
    "id": "1f194",
    "ideograph advantage": "1f250",
    "imp": "1f47f",
    "inbox tray": "1f4e5",
    "incoming envelope": "1f4e8",
    "information desk person": "1f481",
    "information source": "2139",
    "innocent": "1f607",
    "interrobang": "2049",
    "iphone": "1f4f1",
    "it": "1f1ee-1f1f9",
    "izakaya lantern": "1f3ee",
    "jack o lantern": "1f383",
    "japan": "1f5fe",
    "japanese castle": "1f3ef",
    "japanese goblin": "1f47a",
    "japanese ogre": "1f479",
    "jeans": "1f456",
    "joy": "1f602",
    "joy cat": "1f639",
    "jp": "1f1ef-1f1f5",
    "key": "1f511",
    "keycap ten": "1f51f",
    "kimono": "1f458",
    "kiss": "1f48b",
    "kissing": "1f617",
    "kissing cat": "1f63d",
    "kissing closed eyes": "1f61a",
    "kissing heart": "1f618",
    "kissing smiling eyes": "1f619",
    "koala": "1f428",
    "koko": "1f201",
    "kr": "1f1f0-1f1f7",
    "lantern": "1f3ee",
    "large blue circle": "1f535",
    "large blue diamond": "1f537",
    "large orange diamond": "1f536",
    "last quarter moon": "1f317",
    "last quarter moon with face": "1f31c",
    "laughing": "1f606",
    "leaves": "1f343",
    "ledger": "1f4d2",
    "left luggage": "1f6c5",
    "left right arrow": "2194",
    "leftwards arrow with hook": "21a9",
    "lemon": "1f34b",
    "leo": "264c",
    "leopard": "1f406",
    "libra": "264e",
    "light rail": "1f688",
    "link": "1f517",
    "lips": "1f444",
    "lipstick": "1f484",
    "lock": "1f512",
    "lock with ink pen": "1f50f",
    "lollipop": "1f36d",
    "loop": "27bf",
    "loudspeaker": "1f4e2",
    "love hotel": "1f3e9",
    "love letter": "1f48c",
    "low brightness": "1f505",
    "m": "24c2",
    "mag": "1f50d",
    "mag right": "1f50e",
    "mahjong": "1f004",
    "mailbox": "1f4eb",
    "mailbox closed": "1f4ea",
    "mailbox with mail": "1f4ec",
    "mailbox with no mail": "1f4ed",
    "man": "1f468",
    "man with gua pi mao": "1f472",
    "man with turban": "1f473",
    "mans shoe": "1f45e",
    "maple leaf": "1f341",
    "mask": "1f637",
    "massage": "1f486",
    "meat on bone": "1f356",
    "mega": "1f4e3",
    "melon": "1f348",
    "memo": "1f4dd",
    "mens": "1f6b9",
    "metal": "metal",
    "metro": "1f687",
    "microphone": "1f3a4",
    "microscope": "1f52c",
    "milky way": "1f30c",
    "minibus": "1f690",
    "minidisc": "1f4bd",
    "mobile phone off": "1f4f4",
    "money with wings": "1f4b8",
    "moneybag": "1f4b0",
    "monkey": "1f412",
    "monkey face": "1f435",
    "monorail": "1f69d",
    "moon": "1f314",
    "mortar board": "1f393",
    "mount fuji": "1f5fb",
    "mountain bicyclist": "1f6b5",
    "mountain cableway": "1f6a0",
    "mountain railway": "1f69e",
    "mouse": "1f42d",
    "mouse2": "1f401",
    "movie camera": "1f3a5",
    "moyai": "1f5ff",
    "muscle": "1f4aa",
    "mushroom": "1f344",
    "musical keyboard": "1f3b9",
    "musical note": "1f3b5",
    "musical score": "1f3bc",
    "mute": "1f507",
    "nail care": "1f485",
    "name badge": "1f4db",
    "neckbeard": "neckbeard",
    "necktie": "1f454",
    "negative squared cross mark": "274e",
    "neutral face": "1f610",
    "new": "1f195",
    "new moon": "1f311",
    "new moon with face": "1f31a",
    "newspaper": "1f4f0",
    "ng": "1f196",
    "nine": "0039",
    "no bell": "1f515",
    "no bicycles": "1f6b3",
    "no entry": "26d4",
    "no entry sign": "1f6ab",
    "no good": "1f645",
    "no mobile phones": "1f4f5",
    "no mouth": "1f636",
    "no pedestrians": "1f6b7",
    "no smoking": "1f6ad",
    "non-potable water": "1f6b1",
    "nose": "1f443",
    "notebook": "1f4d3",
    "notebook with decorative cover": "1f4d4",
    "notes": "1f3b6",
    "nut and bolt": "1f529",
    "o": "2b55",
    "o2": "1f17e",
    "ocean": "1f30a",
    "octocat": "octocat",
    "octopus": "1f419",
    "oden": "1f362",
    "office": "1f3e2",
    "ok": "1f197",
    "ok hand": "1f44c",
    "ok woman": "1f646",
    "older man": "1f474",
    "older woman": "1f475",
    "on": "1f51b",
    "oncoming automobile": "1f698",
    "oncoming bus": "1f68d",
    "oncoming police car": "1f694",
    "oncoming taxi": "1f696",
    "one": "0031",
    "open book": "1f4d6",
    "open file folder": "1f4c2",
    "open hands": "1f450",
    "open mouth": "1f62e",
    "ophiuchus": "26ce",
    "orange book": "1f4d9",
    "outbox tray": "1f4e4",
    "ox": "1f402",
    "package": "1f4e6",
    "page facing up": "1f4c4",
    "page with curl": "1f4c3",
    "pager": "1f4df",
    "palm tree": "1f334",
    "panda face": "1f43c",
    "paperclip": "1f4ce",
    "parking": "1f17f",
    "part alternation mark": "303d",
    "partly sunny": "26c5",
    "passport control": "1f6c2",
    "paw prints": "1f43e",
    "peach": "1f351",
    "pear": "1f350",
    "pencil": "1f4dd",
    "pencil2": "270f",
    "penguin": "1f427",
    "pensive": "1f614",
    "performing arts": "1f3ad",
    "persevere": "1f623",
    "person frowning": "1f64d",
    "person with blond hair": "1f471",
    "person with pouting face": "1f64e",
    "phone": "260e",
    "pig": "1f437",
    "pig2": "1f416",
    "pig nose": "1f43d",
    "pill": "1f48a",
    "pineapple": "1f34d",
    "pisces": "2653",
    "pizza": "1f355",
    "point down": "1f447",
    "point left": "1f448",
    "point right": "1f449",
    "point up": "261d",
    "point up 2": "1f446",
    "police car": "1f693",
    "poodle": "1f429",
    "poop": "1f4a9",
    "post office": "1f3e3",
    "postal horn": "1f4ef",
    "postbox": "1f4ee",
    "potable water": "1f6b0",
    "pouch": "1f45d",
    "poultry leg": "1f357",
    "pound": "1f4b7",
    "pouting cat": "1f63e",
    "pray": "1f64f",
    "princess": "1f478",
    "punch": "1f44a",
    "purple heart": "1f49c",
    "purse": "1f45b",
    "pushpin": "1f4cc",
    "put litter in its place": "1f6ae",
    "question": "2753",
    "rabbit": "1f430",
    "rabbit2": "1f407",
    "racehorse": "1f40e",
    "radio": "1f4fb",
    "radio button": "1f518",
    "rage": "1f621",
    "rage1": "rage1",
    "rage2": "rage2",
    "rage3": "rage3",
    "rage4": "rage4",
    "railway car": "1f683",
    "rainbow": "1f308",
    "raised hand": "270b",
    "raised hands": "1f64c",
    "raising hand": "1f64b",
    "ram": "1f40f",
    "ramen": "1f35c",
    "rat": "1f400",
    "recycle": "267b",
    "red car": "1f697",
    "red circle": "1f534",
    "registered": "00ae",
    "relaxed": "263a",
    "relieved": "1f60c",
    "repeat": "1f501",
    "repeat one": "1f502",
    "restroom": "1f6bb",
    "revolving hearts": "1f49e",
    "rewind": "23ea",
    "ribbon": "1f380",
    "rice": "1f35a",
    "rice ball": "1f359",
    "rice cracker": "1f358",
    "rice scene": "1f391",
    "ring": "1f48d",
    "rocket": "1f680",
    "roller coaster": "1f3a2",
    "rooster": "1f413",
    "rose": "1f339",
    "rotating light": "1f6a8",
    "round pushpin": "1f4cd",
    "rowboat": "1f6a3",
    "ru": "1f1f7-1f1fa",
    "rugby football": "1f3c9",
    "runner": "1f3c3",
    "running": "1f3c3",
    "running shirt with sash": "1f3bd",
    "sa": "1f202",
    "sagittarius": "2650",
    "sailboat": "26f5",
    "sake": "1f376",
    "sandal": "1f461",
    "santa": "1f385",
    "satellite": "1f4e1",
    "satisfied": "1f606",
    "saxophone": "1f3b7",
    "school": "1f3eb",
    "school satchel": "1f392",
    "scissors": "2702",
    "scorpius": "264f",
    "scream": "1f631",
    "scream cat": "1f640",
    "scroll": "1f4dc",
    "seat": "1f4ba",
    "secret": "3299",
    "see no evil": "1f648",
    "seedling": "1f331",
    "seven": "0037",
    "shaved ice": "1f367",
    "sheep": "1f411",
    "shell": "1f41a",
    "ship": "1f6a2",
    "shipit": "shipit",
    "shirt": "1f455",
    "shit": "1f4a9",
    "shoe": "1f45e",
    "shower": "1f6bf",
    "signal strength": "1f4f6",
    "six": "0036",
    "six pointed star": "1f52f",
    "ski": "1f3bf",
    "skull": "1f480",
    "sleeping": "1f634",
    "sleepy": "1f62a",
    "slot machine": "1f3b0",
    "small blue diamond": "1f539",
    "small orange diamond": "1f538",
    "small red triangle": "1f53a",
    "small red triangle down": "1f53b",
    "smile": "1f604",
    "smile cat": "1f638",
    "smiley": "1f603",
    "smiley cat": "1f63a",
    "smiling imp": "1f608",
    "smirk": "1f60f",
    "smirk cat": "1f63c",
    "smoking": "1f6ac",
    "snail": "1f40c",
    "snake": "1f40d",
    "snowboarder": "1f3c2",
    "snowflake": "2744",
    "snowman": "26c4",
    "sob": "1f62d",
    "soccer": "26bd",
    "soon": "1f51c",
    "sos": "1f198",
    "sound": "1f509",
    "space invader": "1f47e",
    "spades": "2660",
    "spaghetti": "1f35d",
    "sparkle": "2747",
    "sparkler": "1f387",
    "sparkles": "2728",
    "sparkling heart": "1f496",
    "speak no evil": "1f64a",
    "speaker": "1f50a",
    "speech balloon": "1f4ac",
    "speedboat": "1f6a4",
    // "squirrel": "squirrel",
    "star": "2b50",
    "star2": "1f31f",
    "stars": "1f303",
    "station": "1f689",
    "statue of liberty": "1f5fd",
    "steam locomotive": "1f682",
    "stew": "1f372",
    "straight ruler": "1f4cf",
    "strawberry": "1f353",
    "stuck out tongue": "1f61b",
    "stuck out tongue closed eyes": "1f61d",
    "stuck out tongue winking eye": "1f61c",
    "sun with face": "1f31e",
    "sunflower": "1f33b",
    "sunglasses": "1f60e",
    "sunny": "2600",
    "sunrise": "1f305",
    "sunrise over mountains": "1f304",
    "surfer": "1f3c4",
    "sushi": "1f363",
    // "suspect": "suspect",
    "suspension railway": "1f69f",
    "sweat": "1f613",
    "sweat drops": "1f4a6",
    "sweat smile": "1f605",
    "sweet potato": "1f360",
    "swimmer": "1f3ca",
    "symbols": "1f523",
    "syringe": "1f489",
    "tada": "1f389",
    "tanabata tree": "1f38b",
    "tangerine": "1f34a",
    "taurus": "2649",
    "taxi": "1f695",
    "tea": "1f375",
    "telephone": "260e",
    "telephone receiver": "1f4de",
    "telescope": "1f52d",
    "tennis": "1f3be",
    "tent": "26fa",
    "thought balloon": "1f4ad",
    "three": "0033",
    "thumbsdown": "1f44e",
    "thumbsup": "1f44d",
    "ticket": "1f3ab",
    "tiger": "1f42f",
    "tiger2": "1f405",
    "tired face": "1f62b",
    "tm": "2122",
    "toilet": "1f6bd",
    "tokyo tower": "1f5fc",
    "tomato": "1f345",
    "tongue": "1f445",
    "top": "1f51d",
    "tophat": "1f3a9",
    "tractor": "1f69c",
    "traffic light": "1f6a5",
    "train": "1f683",
    "train2": "1f686",
    "tram": "1f68a",
    "triangular flag on post": "1f6a9",
    "triangular ruler": "1f4d0",
    "trident": "1f531",
    "triumph": "1f624",
    "trolleybus": "1f68e",
    // "trollface": "trollface",
    "trophy": "1f3c6",
    "tropical drink": "1f379",
    "tropical fish": "1f420",
    "truck": "1f69a",
    "trumpet": "1f3ba",
    "tshirt": "1f455",
    "tulip": "1f337",
    "turtle": "1f422",
    "tv": "1f4fa",
    "twisted rightwards arrows": "1f500",
    "two": "0032",
    "two hearts": "1f495",
    "two men holding hands": "1f46c",
    "two women holding hands": "1f46d",
    "u5272": "1f239",
    "u5408": "1f234",
    "u55b6": "1f23a",
    "u6307": "1f22f",
    "u6708": "1f237",
    "u6709": "1f236",
    "u6e80": "1f235",
    "u7121": "1f21a",
    "u7533": "1f238",
    "u7981": "1f232",
    "u7a7a": "1f233",
    "uk": "1f1ec-1f1e7",
    "umbrella": "2614",
    "unamused": "1f612",
    "underage": "1f51e",
    // "unicode": "unicode",
    "unlock": "1f513",
    "up": "1f199",
    "us": "1f1fa-1f1f8",
    "v": "270c",
    "vertical traffic light": "1f6a6",
    "vhs": "1f4fc",
    "vibration mode": "1f4f3",
    "video camera": "1f4f9",
    "video game": "1f3ae",
    "violin": "1f3bb",
    "virgo": "264d",
    "volcano": "1f30b",
    "vs": "1f19a",
    "walking": "1f6b6",
    "waning crescent moon": "1f318",
    "waning gibbous moon": "1f316",
    "warning": "26a0",
    "watch": "231a",
    "water buffalo": "1f403",
    "watermelon": "1f349",
    "wave": "1f44b",
    "wavy dash": "3030",
    "waxing crescent moon": "1f312",
    "waxing gibbous moon": "1f314",
    "wc": "1f6be",
    "weary": "1f629",
    "wedding": "1f492",
    "whale": "1f433",
    "whale2": "1f40b",
    "wheelchair": "267f",
    "white check mark": "2705",
    "white circle": "26aa",
    "white flower": "1f4ae",
    "white large square": "2b1c",
    "white medium small square": "25fd",
    "white medium square": "25fb",
    "white small square": "25ab",
    "white square button": "1f533",
    "wind chime": "1f390",
    "wine glass": "1f377",
    "wink": "1f609",
    "wolf": "1f43a",
    "woman": "1f469",
    "womans clothes": "1f45a",
    "womans hat": "1f452",
    "womens": "1f6ba",
    "worried": "1f61f",
    "wrench": "1f527",
    "x": "274c",
    "yellow heart": "1f49b",
    "yen": "1f4b4",
    "yum": "1f60b",
    "zap": "26a1",
    "zero": "0030",
    "zzz": "1f4a4"
  };

  // create an inverse copy
  var reversed = {};
  for (var key in rawEmojiData) {
    reversed[rawEmojiData[key]] = key;
  }

  return WBSingleton.extend({

    'raw': rawEmojiData,
    'unicodeIndex': reversed,
    'nameIndex': rawEmojiData
  });
});
define('wunderbits/helpers/strings',[

  '../lib/dependencies',

  '../WBSingleton',

  '../mixins/EmojiData'

], function (dependencies, WBSingleton, EmojiData, undefined) {

  

  var $ = dependencies.$;
  var _ = dependencies._;

  return WBSingleton.extend({

    // https://gist.github.com/slevithan/2290602
    'fromCodePoint': function () {
      var chars = [], point, offset, units, i;
      for (i = 0; i < arguments.length; ++i) {
        point = arguments[i];
        offset = point - 0x10000;
        units = point > 0xFFFF ? [0xD800 + (offset >> 10), 0xDC00 + (offset & 0x3FF)] : [point];
        chars.push(String.fromCharCode.apply(null, units));
      }
      return chars.join("");
    },

    'emojiTokensToUnicode': function (string) {

      var self = this;

      string = string.replace(/:[^:|.]+:/g, function (match) {

        var name = match.replace(/:/g, '');
        var unicode = EmojiData.nameIndex[name];

        if (unicode) {
          match = self.fromCodePoint('0x' + unicode);
        }

        return match;
      });

      return string;
    },

    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/charCodeAt#Example_2.3A_Fixing_charCodeAt_to_handle_non-Basic-Multilingual-Plane_characters_if_their_presence_earlier_in_the_string_is_unknown
    'unicodeAt': function (str, idx) {
      // ex. fixedCharCodeAt ('\uD800\uDC00', 0); // 65536
      // ex. fixedCharCodeAt ('\uD800\uDC00', 1); // 65536
      idx = idx || 0;
      var code = str.charCodeAt(idx);
      var hi, low;
      if (0xD800 <= code && code <= 0xDBFF) { // High surrogate (could change last hex to 0xDB7F to treat high private surrogates as single characters)
        hi = code;
        low = str.charCodeAt(idx+1);
        if (isNaN(low)) {
          throw new Error('High surrogate not followed by low surrogate in unicodeAt()');
        }
        return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;
      }
      if (0xDC00 <= code && code <= 0xDFFF) { // Low surrogate
        // We return false to allow loops to skip this iteration since should have already handled high surrogate above in the previous iteration
        return false;
        /*hi = str.charCodeAt(idx-1);
        low = code;
        return ((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000;*/
      }
      return code;
    },

    'replaceAt': function (string, position, replacer, buffer) {

      var before = string.substring(0, position);
      var after = string.substring((position + 1 + buffer));

      string = before + replacer + after;

      return string;
    },

    'contains': function (haystack, needle) {

      var self = this;

      if (_.isArray(needle)) {

        return self.containsArray(haystack, needle);
      }
      else {

        return self.containsString(haystack, needle);
      }

    },

    // accepts single needle as argument
    'containsString': function (haystack, needle) {

      var found = false;
      for (var i = 0; i < haystack.length; i++) {

        if (haystack[i] === needle) {

          found = true;
          i = haystack.length;
        }
      }

      return found;
    },

    // similar to contains, but accepts array of needles
    'containsArray': function (haystack, needleArray) {

      var self = this;
      var found = false;

      for (var i = 0; i < needleArray.length; i++) {

        if (self.containsString(haystack, needleArray[i])) {

          found = true;
          i = needleArray.length;
        }
      }

      return found;
    },

    // trims whitespace, reduces inner newlines and spaces
    // and keeps string below defined length (def: 500 chars)
    'trim': function (string, length) {

      // default length to trim by is 500 chars
      length = length || 500;

      // get rid of stacked newlines
      string = (string || '').replace(/\n{3,}/g, '\n\n');

      // get rid of redonk spaces
      string = string.replace(/\s{3,}/g, ' ');
      string = $.trim(string);

      // only trim string length if it's
      if (string.length > length) {
        string = string.substring(0, length - 3) + '...';
      }

      return string;
    },

    // returns zero padded string (for numbers) - used by date stuff
    'pad': function (str, minLength, after) {

      str = String(str);

      while (str.length < minLength) {

        str = after ? str + '0' : '0' + str;
      }

      return str;
    },

    // helper method for overriden set to convert
    // all values but null to strings.
    // used a different way for bool, check this:
    // http://jsperf.com/boolean-to-string,
    'convertValueToString': function (value) {

      if (_.isString(value)) {
        return value;
      }
      else if (_.isNull(value)) {
        return 'null';
      }
      else if (_.isBoolean(value)) {
        return value ? 'true' : 'false';
      }
      else {
        return '' + value;
      }
    },

    'capitalizeFirstLetter': function (string) {

      return string.charAt(0).toUpperCase() + string.slice(1);
    },

    'sanitizeHash': function (hash) {

      var parts = hash.split('/');
      var filterString = 'FILTERED';
      var idPattern = /([lw]?.{30,32})/;
      var accessToken = /access_token/;

      if (parts[1] === 'login') {

        if (parts[2] && accessToken.test(parts[2])) {

          parts[2] = 'FACEBOOK_LOGIN';
        }
      }
      else if ((parts[1] === 'tasks' || parts[1] === 'lists') && idPattern.test(parts[2])) {

        parts[2] = filterString;
      }
      else if ((parts[1] === 'extension' && parts[2] === 'add') || (parts[1] === 'reset' && parts[2] === 'password') || (parts[1] === 'connect' && parts[2] === 'facebook')) {

        parts[3] && (parts[3] = filterString);
        parts[4] && (parts[4] = filterString);
        parts = parts.splice(0, 5);
      }
      else if ((parts[1] === 'add' || parts[1] === 'search')) {

        parts[2] && (parts[2] = filterString);
      }
      else if (parts[1] === 'shared') {

        if (parts[2] === 'fb') {

          parts[3] && (parts[3] = filterString);
        }
        else {

          parts[2] && (parts[2] = filterString);
          parts[3] && (parts[3] = filterString);
        }
      }

      // handle fb returns on share routes
      if (parts[1] === 'lists' && /share.+/.test(parts[3])) {

        if (/access_token/.test(parts[3])) {

          parts[3] = 'share/CONNECT_FACEBOOK_RETURN';
        }
        else if (parts[3] !== 'share') {

          parts[3] = 'share/FACEBOOK_SHARE_RETURN';
        }
      }

      return parts.join('/');
    },

    'dateString': function () {

      var self = this;
      var date = new Date();
      var time = self.pad((date.getHours() + 1), 2) + ':' +
                 self.pad(date.getMinutes(), 2) + ':' +
                 self.pad(date.getSeconds(), 2);
      return date.getFullYear() + self.pad((date.getMonth() + 1), 2) + self.pad(date.getDate()) + '-' + time;
    },

    'escapeForRegex': function (s) {

      return s.replace(/[-\/\\^$*+?.()|[\]{}]/g, '\\$&');
    }
  });
});
/*!
 * jQuery Migrate - v1.2.1 - 2013-05-08
 * https://github.com/jquery/jquery-migrate
 * Copyright 2005, 2013 jQuery Foundation, Inc. and other contributors; Licensed MIT
 */
 (function (init) {

  if (typeof define === "function" && define.amd) {

    define("vendor/jquery-migrate", ['vendor/jquery'], function (jQuery) {

      return init(jQuery, window);
    });
  }
  else {

    init();
  }
}).call(this, function (jQuery, window) {

	// See http://bugs.jquery.com/ticket/13335
	// 


	var warnedAbout = {};

	// List of warnings already given; public read only
	jQuery.migrateWarnings = [];

	// Set to true to prevent console output; migrateWarnings still maintained
	// jQuery.migrateMute = false;

	// Show a message on the console so devs know we're active
	if ( !jQuery.migrateMute && window.console && window.console.log ) {
		window.console.log("JQMIGRATE: Logging is active");
	}

	// Set to false to disable traces that appear with warnings
	if ( jQuery.migrateTrace === undefined ) {
		jQuery.migrateTrace = true;
	}

	// Forget any warnings we've already given; public
	jQuery.migrateReset = function() {
		warnedAbout = {};
		jQuery.migrateWarnings.length = 0;
	};

	function migrateWarn( msg) {
		var console = window.console;
		if ( !warnedAbout[ msg ] ) {
			warnedAbout[ msg ] = true;
			jQuery.migrateWarnings.push( msg );
			if ( console && console.warn && !jQuery.migrateMute ) {
				console.warn( "JQMIGRATE: " + msg );
				if ( jQuery.migrateTrace && console.trace ) {
					console.trace();
				}
			}
		}
	}

	function migrateWarnProp( obj, prop, value, msg ) {
		if ( Object.defineProperty ) {
			// On ES5 browsers (non-oldIE), warn if the code tries to get prop;
			// allow property to be overwritten in case some other plugin wants it
			try {
				Object.defineProperty( obj, prop, {
					configurable: true,
					enumerable: true,
					get: function() {
						migrateWarn( msg );
						return value;
					},
					set: function( newValue ) {
						migrateWarn( msg );
						value = newValue;
					}
				});
				return;
			} catch( err ) {
				// IE8 is a dope about Object.defineProperty, can't warn there
			}
		}

		// Non-ES5 (or broken) browser; just set the property
		jQuery._definePropertyBroken = true;
		obj[ prop ] = value;
	}

	if ( document.compatMode === "BackCompat" ) {
		// jQuery has never supported or tested Quirks Mode
		migrateWarn( "jQuery is not compatible with Quirks Mode" );
	}


	var attrFn = jQuery( "<input/>", { size: 1 } ).attr("size") && jQuery.attrFn,
		oldAttr = jQuery.attr,
		valueAttrGet = jQuery.attrHooks.value && jQuery.attrHooks.value.get ||
			function() { return null; },
		valueAttrSet = jQuery.attrHooks.value && jQuery.attrHooks.value.set ||
			function() { return undefined; },
		rnoType = /^(?:input|button)$/i,
		rnoAttrNodeType = /^[238]$/,
		rboolean = /^(?:autofocus|autoplay|async|checked|controls|defer|disabled|hidden|loop|multiple|open|readonly|required|scoped|selected)$/i,
		ruseDefault = /^(?:checked|selected)$/i;

	// jQuery.attrFn
	migrateWarnProp( jQuery, "attrFn", attrFn || {}, "jQuery.attrFn is deprecated" );

	jQuery.attr = function( elem, name, value, pass ) {
		var lowerName = name.toLowerCase(),
			nType = elem && elem.nodeType;

		if ( pass ) {
			// Since pass is used internally, we only warn for new jQuery
			// versions where there isn't a pass arg in the formal params
			if ( oldAttr.length < 4 ) {
				migrateWarn("jQuery.fn.attr( props, pass ) is deprecated");
			}
			if ( elem && !rnoAttrNodeType.test( nType ) &&
				(attrFn ? name in attrFn : jQuery.isFunction(jQuery.fn[name])) ) {
				return jQuery( elem )[ name ]( value );
			}
		}

		// Warn if user tries to set `type`, since it breaks on IE 6/7/8; by checking
		// for disconnected elements we don't warn on $( "<button>", { type: "button" } ).
		if ( name === "type" && value !== undefined && rnoType.test( elem.nodeName ) && elem.parentNode ) {
			migrateWarn("Can't change the 'type' of an input or button in IE 6/7/8");
		}

		// Restore boolHook for boolean property/attribute synchronization
		if ( !jQuery.attrHooks[ lowerName ] && rboolean.test( lowerName ) ) {
			jQuery.attrHooks[ lowerName ] = {
				get: function( elem, name ) {
					// Align boolean attributes with corresponding properties
					// Fall back to attribute presence where some booleans are not supported
					var attrNode,
						property = jQuery.prop( elem, name );
					return property === true || typeof property !== "boolean" &&
						( attrNode = elem.getAttributeNode(name) ) && attrNode.nodeValue !== false ?

						name.toLowerCase() :
						undefined;
				},
				set: function( elem, value, name ) {
					var propName;
					if ( value === false ) {
						// Remove boolean attributes when set to false
						jQuery.removeAttr( elem, name );
					} else {
						// value is true since we know at this point it's type boolean and not false
						// Set boolean attributes to the same name and set the DOM property
						propName = jQuery.propFix[ name ] || name;
						if ( propName in elem ) {
							// Only set the IDL specifically if it already exists on the element
							elem[ propName ] = true;
						}

						elem.setAttribute( name, name.toLowerCase() );
					}
					return name;
				}
			};

			// Warn only for attributes that can remain distinct from their properties post-1.9
			if ( ruseDefault.test( lowerName ) ) {
				migrateWarn( "jQuery.fn.attr('" + lowerName + "') may use property instead of attribute" );
			}
		}

		return oldAttr.call( jQuery, elem, name, value );
	};

	// attrHooks: value
	jQuery.attrHooks.value = {
		get: function( elem, name ) {
			var nodeName = ( elem.nodeName || "" ).toLowerCase();
			if ( nodeName === "button" ) {
				return valueAttrGet.apply( this, arguments );
			}
			if ( nodeName !== "input" && nodeName !== "option" ) {
				migrateWarn("jQuery.fn.attr('value') no longer gets properties");
			}
			return name in elem ?
				elem.value :
				null;
		},
		set: function( elem, value ) {
			var nodeName = ( elem.nodeName || "" ).toLowerCase();
			if ( nodeName === "button" ) {
				return valueAttrSet.apply( this, arguments );
			}
			if ( nodeName !== "input" && nodeName !== "option" ) {
				migrateWarn("jQuery.fn.attr('value', val) no longer sets properties");
			}
			// Does not return so that setAttribute is also used
			elem.value = value;
		}
	};


	var matched, browser,
		oldInit = jQuery.fn.init,
		oldParseJSON = jQuery.parseJSON,
		// Note: XSS check is done below after string is trimmed
		rquickExpr = /^([^<]*)(<[\w\W]+>)([^>]*)$/;

	// $(html) "looks like html" rule change
	jQuery.fn.init = function( selector, context, rootjQuery ) {
		var match;

		if ( selector && typeof selector === "string" && !jQuery.isPlainObject( context ) &&
				(match = rquickExpr.exec( jQuery.trim( selector ) )) && match[ 0 ] ) {
			// This is an HTML string according to the "old" rules; is it still?
			if ( selector.charAt( 0 ) !== "<" ) {
				migrateWarn("$(html) HTML strings must start with '<' character");
			}
			if ( match[ 3 ] ) {
				migrateWarn("$(html) HTML text after last tag is ignored");
			}
			// Consistently reject any HTML-like string starting with a hash (#9521)
			// Note that this may break jQuery 1.6.x code that otherwise would work.
			if ( match[ 0 ].charAt( 0 ) === "#" ) {
				migrateWarn("HTML string cannot start with a '#' character");
				jQuery.error("JQMIGRATE: Invalid selector string (XSS)");
			}
			// Now process using loose rules; let pre-1.8 play too
			if ( context && context.context ) {
				// jQuery object as context; parseHTML expects a DOM object
				context = context.context;
			}
			if ( jQuery.parseHTML ) {
				return oldInit.call( this, jQuery.parseHTML( match[ 2 ], context, true ),
						context, rootjQuery );
			}
		}
		return oldInit.apply( this, arguments );
	};
	jQuery.fn.init.prototype = jQuery.fn;

	// Let $.parseJSON(falsy_value) return null
	jQuery.parseJSON = function( json ) {
		if ( !json && json !== null ) {
			migrateWarn("jQuery.parseJSON requires a valid JSON string");
			return null;
		}
		return oldParseJSON.apply( this, arguments );
	};

	jQuery.uaMatch = function( ua ) {
		ua = ua.toLowerCase();

		var match = /(chrome)[ \/]([\w.]+)/.exec( ua ) ||
			/(webkit)[ \/]([\w.]+)/.exec( ua ) ||
			/(opera)(?:.*version|)[ \/]([\w.]+)/.exec( ua ) ||
			/(msie) ([\w.]+)/.exec( ua ) ||
			ua.indexOf("compatible") < 0 && /(mozilla)(?:.*? rv:([\w.]+)|)/.exec( ua ) ||
			[];

		return {
			browser: match[ 1 ] || "",
			version: match[ 2 ] || "0"
		};
	};

	// Don't clobber any existing jQuery.browser in case it's different
	if ( !jQuery.browser ) {
		matched = jQuery.uaMatch( navigator.userAgent );
		browser = {};

		if ( matched.browser ) {
			browser[ matched.browser ] = true;
			browser.version = matched.version;
		}

		// Chrome is Webkit, but Webkit is also Safari.
		if ( browser.chrome ) {
			browser.webkit = true;
		} else if ( browser.webkit ) {
			browser.safari = true;
		}

		jQuery.browser = browser;
	}

	// Warn if the code tries to get jQuery.browser
	migrateWarnProp( jQuery, "browser", jQuery.browser, "jQuery.browser is deprecated" );

	jQuery.sub = function() {
		function jQuerySub( selector, context ) {
			return new jQuerySub.fn.init( selector, context );
		}
		jQuery.extend( true, jQuerySub, this );
		jQuerySub.superclass = this;
		jQuerySub.fn = jQuerySub.prototype = this();
		jQuerySub.fn.constructor = jQuerySub;
		jQuerySub.sub = this.sub;
		jQuerySub.fn.init = function init( selector, context ) {
			if ( context && context instanceof jQuery && !(context instanceof jQuerySub) ) {
				context = jQuerySub( context );
			}

			return jQuery.fn.init.call( this, selector, context, rootjQuerySub );
		};
		jQuerySub.fn.init.prototype = jQuerySub.fn;
		var rootjQuerySub = jQuerySub(document);
		migrateWarn( "jQuery.sub() is deprecated" );
		return jQuerySub;
	};


	// Ensure that $.ajax gets the new parseJSON defined in core.js
	jQuery.ajaxSetup({
		converters: {
			"text json": jQuery.parseJSON
		}
	});


	var oldFnData = jQuery.fn.data;

	jQuery.fn.data = function( name ) {
		var ret, evt,
			elem = this[0];

		// Handles 1.7 which has this behavior and 1.8 which doesn't
		if ( elem && name === "events" && arguments.length === 1 ) {
			ret = jQuery.data( elem, name );
			evt = jQuery._data( elem, name );
			if ( ( ret === undefined || ret === evt ) && evt !== undefined ) {
				migrateWarn("Use of jQuery.fn.data('events') is deprecated");
				return evt;
			}
		}
		return oldFnData.apply( this, arguments );
	};


	var rscriptType = /\/(java|ecma)script/i,
		oldSelf = jQuery.fn.andSelf || jQuery.fn.addBack;

	jQuery.fn.andSelf = function() {
		migrateWarn("jQuery.fn.andSelf() replaced by jQuery.fn.addBack()");
		return oldSelf.apply( this, arguments );
	};

	// Since jQuery.clean is used internally on older versions, we only shim if it's missing
	if ( !jQuery.clean ) {
		jQuery.clean = function( elems, context, fragment, scripts ) {
			// Set context per 1.8 logic
			context = context || document;
			context = !context.nodeType && context[0] || context;
			context = context.ownerDocument || context;

			migrateWarn("jQuery.clean() is deprecated");

			var i, elem, handleScript, jsTags,
				ret = [];

			jQuery.merge( ret, jQuery.buildFragment( elems, context ).childNodes );

			// Complex logic lifted directly from jQuery 1.8
			if ( fragment ) {
				// Special handling of each script element
				handleScript = function( elem ) {
					// Check if we consider it executable
					if ( !elem.type || rscriptType.test( elem.type ) ) {
						// Detach the script and store it in the scripts array (if provided) or the fragment
						// Return truthy to indicate that it has been handled
						return scripts ?
							scripts.push( elem.parentNode ? elem.parentNode.removeChild( elem ) : elem ) :
							fragment.appendChild( elem );
					}
				};

				for ( i = 0; (elem = ret[i]) != null; i++ ) {
					// Check if we're done after handling an executable script
					if ( !( jQuery.nodeName( elem, "script" ) && handleScript( elem ) ) ) {
						// Append to fragment and handle embedded scripts
						fragment.appendChild( elem );
						if ( typeof elem.getElementsByTagName !== "undefined" ) {
							// handleScript alters the DOM, so use jQuery.merge to ensure snapshot iteration
							jsTags = jQuery.grep( jQuery.merge( [], elem.getElementsByTagName("script") ), handleScript );

							// Splice the scripts into ret after their former ancestor and advance our index beyond them
							ret.splice.apply( ret, [i + 1, 0].concat( jsTags ) );
							i += jsTags.length;
						}
					}
				}
			}

			return ret;
		};
	}

	var eventAdd = jQuery.event.add,
		eventRemove = jQuery.event.remove,
		eventTrigger = jQuery.event.trigger,
		oldToggle = jQuery.fn.toggle,
		oldLive = jQuery.fn.live,
		oldDie = jQuery.fn.die,
		ajaxEvents = "ajaxStart|ajaxStop|ajaxSend|ajaxComplete|ajaxError|ajaxSuccess",
		rajaxEvent = new RegExp( "\\b(?:" + ajaxEvents + ")\\b" ),
		rhoverHack = /(?:^|\s)hover(\.\S+|)\b/,
		hoverHack = function( events ) {
			if ( typeof( events ) !== "string" || jQuery.event.special.hover ) {
				return events;
			}
			if ( rhoverHack.test( events ) ) {
				migrateWarn("'hover' pseudo-event is deprecated, use 'mouseenter mouseleave'");
			}
			return events && events.replace( rhoverHack, "mouseenter$1 mouseleave$1" );
		};

	// Event props removed in 1.9, put them back if needed; no practical way to warn them
	if ( jQuery.event.props && jQuery.event.props[ 0 ] !== "attrChange" ) {
		jQuery.event.props.unshift( "attrChange", "attrName", "relatedNode", "srcElement" );
	}

	// Undocumented jQuery.event.handle was "deprecated" in jQuery 1.7
	if ( jQuery.event.dispatch ) {
		migrateWarnProp( jQuery.event, "handle", jQuery.event.dispatch, "jQuery.event.handle is undocumented and deprecated" );
	}

	// Support for 'hover' pseudo-event and ajax event warnings
	jQuery.event.add = function( elem, types, handler, data, selector ){
		if ( elem !== document && rajaxEvent.test( types ) ) {
			migrateWarn( "AJAX events should be attached to document: " + types );
		}
		eventAdd.call( this, elem, hoverHack( types || "" ), handler, data, selector );
	};
	jQuery.event.remove = function( elem, types, handler, selector, mappedTypes ){
		eventRemove.call( this, elem, hoverHack( types ) || "", handler, selector, mappedTypes );
	};

	jQuery.fn.error = function() {
		var args = Array.prototype.slice.call( arguments, 0);
		migrateWarn("jQuery.fn.error() is deprecated");
		args.splice( 0, 0, "error" );
		if ( arguments.length ) {
			return this.bind.apply( this, args );
		}
		// error event should not bubble to window, although it does pre-1.7
		this.triggerHandler.apply( this, args );
		return this;
	};

	jQuery.fn.toggle = function( fn, fn2 ) {

		// Don't mess with animation or css toggles
		if ( !jQuery.isFunction( fn ) || !jQuery.isFunction( fn2 ) ) {
			return oldToggle.apply( this, arguments );
		}
		migrateWarn("jQuery.fn.toggle(handler, handler...) is deprecated");

		// Save reference to arguments for access in closure
		var args = arguments,
			guid = fn.guid || jQuery.guid++,
			i = 0,
			toggler = function( event ) {
				// Figure out which function to execute
				var lastToggle = ( jQuery._data( this, "lastToggle" + fn.guid ) || 0 ) % i;
				jQuery._data( this, "lastToggle" + fn.guid, lastToggle + 1 );

				// Make sure that clicks stop
				event.preventDefault();

				// and execute the function
				return args[ lastToggle ].apply( this, arguments ) || false;
			};

		// link all the functions, so any of them can unbind this click handler
		toggler.guid = guid;
		while ( i < args.length ) {
			args[ i++ ].guid = guid;
		}

		return this.click( toggler );
	};

	jQuery.fn.live = function( types, data, fn ) {
		migrateWarn("jQuery.fn.live() is deprecated");
		if ( oldLive ) {
			return oldLive.apply( this, arguments );
		}
		jQuery( this.context ).on( types, this.selector, data, fn );
		return this;
	};

	jQuery.fn.die = function( types, fn ) {
		migrateWarn("jQuery.fn.die() is deprecated");
		if ( oldDie ) {
			return oldDie.apply( this, arguments );
		}
		jQuery( this.context ).off( types, this.selector || "**", fn );
		return this;
	};

	// Turn global events into document-triggered events
	jQuery.event.trigger = function( event, data, elem, onlyHandlers  ){
		if ( !elem && !rajaxEvent.test( event ) ) {
			migrateWarn( "Global events are undocumented and deprecated" );
		}
		return eventTrigger.call( this,  event, data, elem || document, onlyHandlers  );
	};
	jQuery.each( ajaxEvents.split("|"),
		function( _, name ) {
			jQuery.event.special[ name ] = {
				setup: function() {
					var elem = this;

					// The document needs no shimming; must be !== for oldIE
					if ( elem !== document ) {
						jQuery.event.add( document, name + "." + jQuery.guid, function() {
							jQuery.event.trigger( name, null, elem, true );
						});
						jQuery._data( this, name, jQuery.guid++ );
					}
					return false;
				},
				teardown: function() {
					if ( this !== document ) {
						jQuery.event.remove( document, name + "." + jQuery._data( this, name ) );
					}
					return false;
				}
			};
		}
	);

});
/*!
 * visibly - v0.6 Aug 2011 - Page Visibility API Polyfill
 * http://github.com/addyosmani
 * Copyright (c) 2011 Addy Osmani
 * Dual licensed under the MIT and GPL licenses.
 *
 * Methods supported:
 * visibly.onVisible(callback)
 * visibly.onHidden(callback)
 * visibly.hidden()
 * visibly.visibilityState()
 * visibly.visibilitychange(callback(state));
 */

define('vendor/visibly',[],function () {

    

    var global = window;
    var doc = window.document;

    var visibleCallbacks = [],
        hiddenCallbacks = [],
        genericCallbacks = [],
        cachedPrefix = "";


    var props = ['VisibilityState', 'visibilitychange', 'Hidden'];
    function _getProp(index){
        return doc[cachedPrefix + props[index]];
    }

    function visibilityState() {
        return  _getProp(0);
    }

    function hidden() {
        return _getProp(2);
    }

    function isSupported() {
        return ((cachedPrefix + props[2]) in doc);
    }

    function visibilitychange(fn) {
        if(typeof fn == 'function' ){
            genericCallbacks.push(fn);
        }

        var n = genericCallbacks.length;
        if(n){
            if(cachedPrefix){
                var state = visibilityState();
                 while(n--){
                    genericCallbacks[n](state);
                }
            }else{
                while(n--){
                    genericCallbacks[n](arguments[0]);
                }
            }
        }
    }

    function _execute(index) {
        var _callbacks;
        if (index) {
            _callbacks = (index == 1) ? visibleCallbacks : hiddenCallbacks;
            var n = _callbacks.length;
            while(n--) {
                _callbacks[n]();
            }
        }
    }

    function _visible() {
        _execute(1);
        visibilitychange('visible');
    }

    function _hidden() {
        _execute(2);
        visibilitychange('hidden');
    }

    function _nativeSwitch() {
        (_getProp(2) ? _hidden : _visible)();
    }

    // find the prefix to use
    var prefixes = ['webkit', 'ms','o','moz','khtml'];
    for(var l = 0, b; (b = prefixes[l++]);){
        if(b + props[2] in doc){
            cachedPrefix =  b;
            break;
        }
    }

    // start listening
    try { /*if no native page visibility support found..*/
        if (!(isSupported())) {
            if (doc.addEventListener) { /*for browsers without focusin/out support eg. firefox, opera use focus/blur*/
                global.addEventListener('focus', _visible, true);
                global.addEventListener('blur', _hidden, true);
            } else { /*IE <10s most reliable focus events are onfocusin/onfocusout*/
                if (doc.attachEvent) {
                    doc.attachEvent('onfocusin', _visible);
                    doc.attachEvent('onfocusout', _hidden);
                }
            }
        } else { /*switch support based on prefix detected earlier*/
            doc.addEventListener(cachedPrefix + props[1], _nativeSwitch, true);
        }
    } catch (e) {

    }

    function onVisible(callback) {
        if(typeof callback == 'function' ){
            visibleCallbacks.push(callback);
        }
    }

    function onHidden(callback) {
        if(typeof callback == 'function' ){
            hiddenCallbacks.push(callback);
        }
    }

    return {
        'hidden': hidden,
        'onVisible': onVisible,
        'onHidden': onHidden,
        'visibilityState': visibilityState,
        'visibilitychange': visibilitychange
    };
});
define('application/runtime',[

  'config',

  'wunderbits/WBRuntime',

  'wunderbits/helpers/strings',

  'vendor/jquery-migrate',
  'vendor/visibly'

], function (config, WBRuntime, strings, jqueryMigrate, visibly, undefined) {

  

  var $, _, Backbone;

  var _super = WBRuntime;
  var _strings = strings;
  var _started;

  var runtime = WBRuntime.extend({

    'init': function () {

      var self = this;

      // Useful for debugging the source of routing errors
      // when debugging from the router does not give a useful trace
      // self.on('route', function(r) {

      //   debugger;
      // });

      $ = self.$;
      _ = self._;
      Backbone = self.Backbone;

      self.started = _started = _.isFunction(Date.now) && Date.now();

      // link up the "event" methods from WBRuntime
      // So that they share the same event queue
      _.each([
        'on', 'off', 'trigger', 'once',
        'publish', 'unpublish', 'unpublishAll'
      ], function (fnName) {
        self[fnName] = _super[fnName];
      });

      // Make config available through runtime
      self.config = config;

      if (config.benchmarks) {
        self.enableTimeline();

        if (config.name === 'benchmarking') {
          var global = self.global;
          global.runtime = self;
          global.console.log('exposing runtime');
        }
      }

      if (config.features) {
        var suffix;
        for (var feature in config.features) {
          if (config.features.hasOwnProperty(feature)) {
            suffix = (config.features[feature] === false ? 'disabled' : 'enabled');
            runtime['feature_' + feature + '_' + suffix] = true;
          }
        }
      }

      self.smartLists = ['assigned', 'starred', 'today', 'week', 'all', 'completed', 'conversations'];

      if (self.feature_comments_disabled) {

        self.smartLists.pop();
      }

      self.syncCount = 0;
      self.hasSynced = new $.Deferred();
      self.beforeDone = false;

      self.hardSync = 15;
      self.softSync = 900;

      self.lastAuthRoute = '';

      var ready = new $.Deferred();
      self.ready = ready.promise();

      var interfaceReady = new $.Deferred();
      self.interfaceReady = interfaceReady.promise();

      self._createDataPromises(ready);

      self.bindTo(self, 'browser:render', function (listId) {

        self.listId = listId;
      });

      self.bindTo(self, 'sync:end', function () {

        self.lastSync = new Date();
        self.syncCount += 1;
      });

      self.bindOnceTo(self, 'sync:end', function () {

        self.hasSynced.resolve();
      });

      self.bindTo(self, 'browser:selectionChanged', function (count) {

        self.selectedTaskCount = count.selected;
      });

      self.bindTo(self, 'update:syncRate:hard', function (rate) {

        self.hardSync = rate;
      });

      self.bindTo(self, 'update:syncRate:soft', function (rate) {

        self.softSync = rate;
      });

      self.bindTo(self, 'focus:changed', function (focus) {

        self.focus = focus;
      });

      self.bindTo(self.env, 'change:context', function (data) {

        var change = String(data.oldContext).replace(/"/g, '') + ' > ' +
                     String(data.context).replace(/"/g, '');
        self.trigger('analytics:Application:changedContext', change);
      });

      self.bindTo(self, 'set:loadContext', function (context) {
        self.loadContext = context;
      });

      self.bindTo(self, 'update:lastAuthRoute', function (route) {

        self.lastAuthRoute = route;
      });

      self.bindTo(self, 'set:isSidebarVisible', function (bool) {

        self.isSidebarVisible = bool;
      });

      self.bindTo(self, 'before:done', function () {

        self.beforeDone = true;
      });

      self.bindTo(self, 'set:printType', function (type) {

        self.printType = type;
      });

      self.bindTo(self, 'interface:ready', function () {

        interfaceReady.resolve();

        // if ie9, notifiy them to upgrade
        if (self.env.isIE9()) {

          self.trigger('ie9:upgradeAlert');
        }

        self.trigger('update:touchSetting');
      });

      self.bindTo(self, 'update:touchSetting', function () {

        var touchSetByUser = self.settings.get(self.env.getEnvIdentifier());

        // if it is likely a hybrid touch device, give the option to enable/disable touch styles
        if (self.env.hasTouchEvents() && !touchSetByUser) {

          self.trigger('touch:styleAlert');
        }
        else if (self.env.hasTouchEvents() && (touchSetByUser === '1')) {

          self.env.enabledAsTouchDevice();
        }
        else {

          self.env.disableAsTouchDevice();
        }
      });

      self.bindTo(self, 'search:start', function (term) {

        self.currentSearchTerm = term;
        self.inSearchState = true;
      });

      self.bindTo(self, 'search:end', function () {

        self.inSearchState = false;
      });

      // cache this, in case we change the route within the app
      self._isBrowserExtension = self.currentRoute().indexOf('extension') === 0;
      self._isConfirm = self.currentRoute().indexOf('confirm') === 0;
      self._isResetPW = self.currentRoute().indexOf('reset/password/') === 0;

      // page visibility
      self._isVisible = !visibly.hidden();
      visibly.onVisible(function () {
        self._isVisible = true;
        self.trigger('page:visible');
      });

      visibly.onHidden(function () {
        self._isVisible = false;
        self.trigger('page:hidden');
      });

      // memory profiling
      self.bindTo(self, 'time:nextHour', self.reportHeapSize);
      self.bindOnceTo(self, 'sync:end', self.reportHeapSize);

      var $body = $('body');
      var isParent = $body.hasClass('wlapp-parent');

      if (isParent) {
        if (self.isFrame()) {
          $body.removeClass('wlapp-parent').addClass('wlapp-frame');
        }
      }
      else {
        $body.addClass('wlapp-embedded');
      }

      var handler = _.bind(self.handleWindowMessage, self);
      window.addEventListener && window.addEventListener('message', handler, false);
    },

    'handleWindowMessage': function (ev) {

      var self = this;

      if (typeof ev.data !== 'string') {
        // this is supposed to handle only string responses
        // ignore objects
        return;
      }

      var pieces = ev.data.split(':');
      var namespace = pieces.shift();

      if (namespace !== 'WLApp' || !pieces.length) {
        return;
      }

      self.trigger(pieces.join(':'));
    },

    '_createDataPromises': function (readyDeferred) {

      var self = this;
      var dataSources = ['shares', 'contacts', 'services', 'tasks'];
      var deferreds = [];

      _.each(dataSources, function (dataSource) {

        var dataDeferred = new $.Deferred();

        deferreds.push(dataDeferred);

        self.on(dataSource + ':ready', function (dataObject) {

          dataDeferred.resolveWith(null, [dataObject]);
        });

        self['when' + _strings.capitalizeFirstLetter(dataSource) + 'IsReady'] = function () {
          return dataDeferred.promise();
        };
      });

      // let's not break everything that uses runtime.user and those
      // user, settings and language are kept the old way
      var userPromise = new $.Deferred();
      var settingsPromise = new $.Deferred();
      var languagePromise = new $.Deferred();

      var userBind = self.bindTo(self, 'set:user', function (user) {

        self.user = user;
        user.hasFetched.done(userPromise.resolve);
        self.unbindFrom(userBind);
      });

      var settingsBind = self.bindTo(self, 'set:settings', function (settings) {

        self.settings = settings;
        settings.ready.done(settingsPromise.resolve);
        self.unbindFrom(settingsBind);
      });

      var languageBind = self.bindTo(self, 'set:language', function (language) {

        self.language = language;
        language.ready.done(languagePromise.resolve);
        self.unbindFrom(languageBind);
      });

      var contextPromise = self._getContextPromise();
      $.when(userPromise, settingsPromise, languagePromise, contextPromise).then(readyDeferred.resolve);
    },

    // this method is to make sure that we have a proper context
    // from the env model - otherwise, keeps calling itself until
    // it has one - which we have to have, for the app to run properly
    '_getContextPromise': function (deferred) {

      var self = this;
      deferred = deferred || new $.Deferred();

      var context = self.env.getContext();

      if (!context || context === 'none') {
        _.defer(function () {
          self._getContextPromise(deferred);
        });
      }
      else {
        deferred.resolve();
      }

      return deferred.promise();
    },

    'supressSidebarClose': function (state) {

      var self = this;

      if (state === undefined) {
        return self._supressSidebarClose;
      }

      self._supressSidebarClose = state;

      self.global.setTimeout(function () {
        self._supressSidebarClose = false;
      }, 100);
    },

    'enableAnimations': function () {

      var self = this;
      self.env._enableAnimations();
    },

    'isBrowserExtension': function () {

      var self = this;
      return self._isBrowserExtension;
    },

    'isConfirm': function () {

      var self = this;
      return self._isConfirm;
    },

    'isResetPW': function () {

      var self = this;
      return self._isResetPW;
    },

    'isVisible': function () {

      var self = this;
      return self._isVisible;
    },

    'isInstalledOnChrome': function () {

      var self = this;
      var chrome = self.global.chrome;
      return chrome && chrome.app && chrome.app.isInstalled;
    },

    'isOnListRoute': function () {

      return (/^lists\//).test(this.currentRoute());
    },

    'isOnTaskRoute': function () {

      return (/^tasks\//).test(this.currentRoute());
    },

    'getIdFromRoute': function () {

      return this.currentRoute().split('/')[1];
    },

    'reportHeapSize': function () {

      var self = this;
      var window = self.global;
      var performance = window.performance;
      var memory = performance && performance.memory;
      if (memory && memory.usedJSHeapSize > 0) {
        // quantized estimation, not exact but good enough info for tracking memory usage regressions
        // is updated by chrome only every 20 minutes, this function is triggered hourly
        var usedHeapMB = Math.round(memory.usedJSHeapSize / 1024 /1024);
        if (usedHeapMB > 0 && _.isFunction(Date.now)) {
          self.trigger('analytics:Performance:UsedHeapSize', usedHeapMB);
          // also report minutes running for good measure (metric in contrast to GA's active time on site)
          var minutesRunning = Math.round((Date.now() - _started) / 1000 / 60);
          self.trigger('analytics:Performance:MinutesRunning', minutesRunning);
        }
      }
    },

    'shouldShowIYF': function () {

      var self = this;
      var settings = self.settings.attributes;
      var isIYFEnabled = (settings.campaign_iyf2_sidebar_button === 'true' ||
                          settings.campaign_iyf2_notification === 'true');
      return !self.env.isPackagedApp() && !self.user.isPro() && isIYFEnabled;
    },

    'openUrl': function (url, newWindow) {

      var self = this;
      var global = self.global;
      var document = global.document;

      if (self.env.isPackagedApp()) {
        var link = document.createElement('a');
        link.href = url;
        link.target = '_blank';

        // append & click
        document.body.appendChild(link);
        link.click();

        // remove the link from dom, once done
        global.setTimeout(function () {
          document.body.removeChild(link);
        }, 200);
      }
      else if (newWindow) {
        global.open(url, '_blank');
      }
      else {
        global.location.href = url;
      }
    },

    // TODO: set the route rather than hard redirect,
    // but we can't do that now because of websql errors
    // on logout. waiting for https://wunderlist.lighthouseapp.com/projects/97517-web/tickets/865-on-dbtruncate-we-get-loads-of-websql-errors
    // and incomplete state cleanup
    // https://wunderlist.lighthouseapp.com/projects/97517-web/tickets/1041-state-in-order-to-logout-without-forcing-windowloacation-several-things-need-to-be-fixed
    'reload': function (hash, keepPath) {

      var self = this;

      if (self.reloading) {
        return;
      }

      if (keepPath === undefined) {
        keepPath = true;
      }

      self.reloading = true;
      var global = self.global;
      var app = global.chrome && global.chrome.app;

      // For chrome-app, just close the window & open a new one
      // PS: this is chrome specific, not in packaged apps specs
      if (runtime.env.isChromeApp() && app) {
        self.trigger('reload', hash);
      }
      else {
        var location = global.location;
        var history = global.history;
        if (keepPath || location.pathname === '/') {
          Backbone.history.stop();
          if (hash[0] !== '/') {
            hash = '/' + hash;
          }
          history.replaceState && history.replaceState(null, 'noParams', location.pathname + location.hash);
          location.hash = hash;
          location.reload();
        } else {
          location.href = '/#' + hash;
        }
      }
    },

    'isLabsEnabled': function (featureName) {

      if (runtime.config.name !== 'beta' || !runtime.user.isPro()) {
        return false;
      }

      if (featureName) {
        return runtime.settings.attributes['labs_' + featureName + '_enabled'] === 'true';
      }

      return true;
    },

    'isFrame': function () {

      return runtime.global !== runtime.global.top;
    },

    'isEmbedded': function () {

      return $('body').hasClass('wlapp-embedded');
    },

    'isLocalDev': function () {

      return !!runtime.global.wlLocalDev;
    },

    'post': function (event, data) {

      if (!event) {
        return;
      }

      var namespace = 'wunderlist:';

      if (event.indexOf(namespace) !== 0) {
        event = namespace + event;
      }

      runtime.global.top.postMessage(event, data || '*');
    }
  });

  runtime.init();
  return runtime;
});

define('wunderbits/WBEventEmitter',[

  './WBClass',
  './mixins/WBBindableMixin',
  './mixins/WBEventsMixin'

], function (WBClass, WBBindableMixin, WBEventsMixin) {

  

  return WBClass.extend({

    'mixins': [
      WBBindableMixin,
      WBEventsMixin
    ]
  });
});
define('application/Redirector',[

  'application/runtime',

  'wunderbits/WBEventEmitter',
  'wunderbits/mixins/WBBindableMixin'

], function (runtime, WBEventEmitter, WBBindableMixin, undefined) {

  

  var window = runtime.global;
  var $ = runtime.$;
  var _ = runtime._;

  var _super = WBEventEmitter.prototype;
  var _filters = ['starred', 'all', 'completed', 'assigned'];

  return WBEventEmitter.extend({

    'initialize': function () {

      var self = this;

      WBBindableMixin.applyTo(self);

      _super.initialize.apply(self, arguments);

      var listsReady = new $.Deferred();
      var tasksReady = new $.Deferred();

      self.bindTo(runtime, 'lists:ready', function (lists) {

        self.lists = lists;
        listsReady.resolve();
      });

      $.when(listsReady).then(function () {

        self.bindTo(self.lists, 'remove', self.onRemoveList);
      });

      self.bindTo(runtime, 'tasks:ready', function (tasks) {

        self.tasks = tasks;
        tasksReady.resolve();
      });

      $.when(tasksReady).then(function () {

        self.bindTo(self.tasks, 'remove', self.onRemoveTask);
        self.bindTo(self.tasks, 'change', self.onChangeTask);
      });

      self.bindTo(runtime, 'browser:render', self.trackBrowserState);
      self.bindTo(runtime, 'detail:rendered', self.trackDetailTask);
    },

    'routeToInbox': function () {

      _.delay(function () {
        runtime.trigger('route:lists/inbox');
      }, 250);
    },

    'trackDetailTask': function (id) {

      var self = this;
      self.lastDetailViewTaskId = id;
    },

    'trackBrowserState': function (id) {

      var self = this;
      self.lastBrowserState = id;
    },

    'onRemoveList': function (model, collection, options) {

      var self = this;
      var currentURL = window.location.href;
      var isListURLActive = currentURL.indexOf('lists/' + model.id) >= 0;
      var deletedBySync = options && options.fromSync;

      if (deletedBySync && isListURLActive) {
        self.routeToInbox();
      }
    },

    'onRemoveTask': function (model, collection, options) {

      var self = this;
      var currentURL = window.location.href;
      var isTaskURLActive = currentURL.indexOf('tasks/' + model.id) >= 0;
      var listID = model.attributes.list_id;
      var list = self.lists.get(listID);
      var deletedBySync = options && options.fromSync;

      if (deletedBySync && isTaskURLActive) {
        if (self.lastBrowserState === listID && list) {
          runtime.trigger('detail:close');
        }
        else {
          self.routeToInbox();
        }
      }
    },

    'onChangeTask': function (model) {

      var self = this;

      if (model.id === self.lastDetailViewTaskId && runtime.currentRoute().indexOf(model.id) > -1) {

        if (_.contains(_filters, self.lastBrowserState)) {

          if (!model.isInSmartList(self.lastBrowserState)) {
            runtime.trigger('detail:close');
          }
        }
        else if (self.lastBrowserState === 'today') {

          if (!model.isInTodayCollection()) {

            // runtime.trigger('route:lists/today');
            runtime.trigger('detail:close');
          }
        }
        else if (self.lastBrowserState === 'week') {

          if (!model.isInWeekCollection()) {

            // runtime.trigger('route:lists/week');
            runtime.trigger('detail:close');
          }
        }
      }
    }
  });
});
define('wunderbits/WBPromise',[
  './WBClass'
], function (WBClass) {

  

  function proxy (name) {
    return function () {
      var deferred = this.deferred;
      return deferred[name].apply(deferred, arguments);
    };
  }

  var proto = {
    'constructor': function (deferred) {
      this.deferred = deferred;
    }
  };

  [
    'state',
    'done',
    'fail',
    'then'
  ].forEach(function (name) {
    proto[name] = proxy(name);
  });

  return WBClass.extend(proto);

});
define('wunderbits/WBDeferred',[
  './WBClass',
  './WBPromise'
], function (WBClass, WBPromise) {

  

  var arrayRef = [];

  var states = {
    'pending': 0,
    'resolved': 2,
    'rejected': 4
  };

  var stateNames = {
    0: ['pending'],
    2: ['resolved', 'resolve'],
    4: ['rejected', 'reject']
  };

  var proto = {

    'constructor': function () {

      var self = this;
      self._state = states.pending;
      self._args = [];
      self.handlers = [];
    },

    'state': function () {
      var self = this;
      return stateNames[self._state][0];
    },

    'checkDeferredStatus': function (withContext) {

      var self = this;
      if (self._state === states.pending) {
        return;
      }

      var handlers = self.handlers, handle;
      while (handlers.length) {
        handle = handlers.shift();
        self.invoke(handle, withContext);
      }
    },

    'invoke': function (deferredResponse, withContext) {

      var self = this;
      var state = self._state;
      var context = deferredResponse.context || withContext || self;
      var args = deferredResponse.args;

      self._args.forEach(function (arg) {
        // send single arguments as the item, otherwise send it as an array
        args.push(arg);
      });

      var isCompleted = (deferredResponse.type === 'then') ||
        (deferredResponse.type === 'done' && state === states.resolved) ||
        (deferredResponse.type === 'fail' && state === states.rejected);

      isCompleted && deferredResponse.fn.apply(context, args);
    },

    'promise': function () {

      var self = this;
      self._promise = self._promise || new WBPromise(this);
      return self._promise;
    }
  };

  ['then', 'done', 'fail'].forEach(function (method) {
    proto[method] = function () {

      var self = this;

      // store references to the context, callbacks, and arbitrary arguments
      var args = arrayRef.slice.call(arguments);
      var fn = args.shift();
      var context = args.shift();
      self.handlers.push({
        'type': method,
        'context': context,
        'fn': fn,
        'args': args
      });

      // if the defered is not pending anymore, call the callbacks
      self.checkDeferredStatus();

      return self;
    };
  });

  // Alias `always` to `then` on Deferred's prototype
  proto.always = proto.then;

  [states.resolved, states.rejected].forEach(function (state) {
    var fnName = stateNames[state][1];
    proto[fnName] = function () {
      var self = this;
      if (self._state !== states.pending) {
        return self;
      }

      self._state = state;
      self._args = arrayRef.slice.call(arguments);
      self.checkDeferredStatus();
      return self;
    };

    proto[fnName + 'With'] = function () {
      var self = this;
      if (self._state !== states.pending) {
        return self;
      }

      self._args = arrayRef.slice.call(arguments);
      var context = self._args.shift();
      self._state = state;
      self.checkDeferredStatus(context);
      return self;
    };
  });

  return WBClass.extend(proto);
});
define('wunderbits/When',[
  './WBSingleton',
  './WBDeferred'
], function (WBSingleton, WBDeferred) {

  

  var arrayRef = [];

  var self = WBSingleton.extend({

    'when': function () {

      var context = this;
      var main = new WBDeferred(context);
      var deferreds = arrayRef.slice.call(arguments);

      var count = deferreds.length;
      var args = new Array(count);

      function Fail () {
        main.rejectWith(this);
      }

      function Done () {

        if (main.state() === 'rejected') {
          return;
        }

        var index = count - deferreds.length - 1;
        args[index] = arrayRef.slice.call(arguments);

        if (deferreds.length) {
          var next = deferreds.shift();
          next.done(Done);
        } else {
          args.unshift(this);
          main.resolveWith.apply(main, args);
        }
      }

      if (deferreds.length) {

        deferreds.forEach(function (deferred) {
          deferred.fail(Fail);
        });

        var current = deferreds.shift();
        current.done(Done);
      } else {
        main.resolve();
      }

      return main.promise();
    }
  });

  return self;
});
define('wunderbits/mixins/WBDeferrableMixin',[

  '../WBMixin',
  '../WBDeferred',
  '../When',
  '../lib/dependencies'

], function (WBMixin, WBDeferred, When, dependencies) {

  

  var arrRef = [];
  var w_ = dependencies.w_;

  return WBMixin.extend({

    'deferred': function () {
      var self = this;
      return new WBDeferred(self);
    },

    'when': function () {
      var self = this;
      return When.when.apply(self, arguments);
    },

    'defer': function () {
      var args = arrRef.slice.call(arguments);
      args[1] = args[1] || this;
      return w_.defer.apply(null, args);
    },

    'delay': function () {
      var args = arrRef.slice.call(arguments);
      args[2] = args[2] || this;
      return w_.delay.apply(null, args);
    }
  });
});
define('wunderbits/mixins/WBDestroyableMixin',[

  '../WBMixin'

], function (WBMixin) {

  

  function noop () {}

  function call (self, fn) {
    fn = self[fn];
    (typeof fn === 'function') && fn.call(self);
  }

  return WBMixin.extend({

    'destroy': function () {

      var self = this;

      self.trigger('destroy');

      call(self, 'unbind');
      call(self, 'unbindAll');
      call(self, 'onDestroy');

      for (var key in self) {
        if (self.hasOwnProperty(key) && key !== 'uid' && key !== 'cid') {
          // make functions noop
          if (typeof self[key] === 'function') {
            self[key] = noop;
          }
          // and others undefined
          else {
            self[key] = undefined;
          }
        }
      }

      self.destroyed = true;
    }
  });
});
define('wunderbits/WBController',[

  './WBEventEmitter',
  './mixins/WBDeferrableMixin',
  './mixins/WBDestroyableMixin'

], function (
  WBEventEmitter,
  WBDeferrableMixin, WBDestroyableMixin,
  undefined
) {

  

  var _super = WBEventEmitter.prototype;

  var controllers = {};
  var incrementalId = 0;

  return WBEventEmitter.extend({

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      WBDeferrableMixin.applyTo(self);
      WBDestroyableMixin.applyTo(self);

      self.cid = 'controller-' + incrementalId++;
      controllers[self.cid] = self;
    },

    'onDestroy': function () {

      var self = this;
      delete controllers[self.cid];
    },

    // useful helper for controllers
    'stopEventFully': function (e) {

      e.preventDefault();
      e.stopPropagation();
    }
  });
});
define('wunderbits/WBRoutesController',[

  './WBController'

], function (WBController, undefined) {

  

  var _super = WBController.prototype;

  return WBController.extend({

    'routes': {},

    'initialize': function (options) {

      var self = this;
      options || (options = {});
      _super.initialize.apply(self, arguments);

      self.outlet = options.outlet;
      self.router = options.router;
    },
  });
});
define('wunderbits/lib/isInstanceOf',[],function () {

  

  return function isInstanceOf (cls) {

    return this instanceof cls;
  };
});
define('wunderbits/mixins/WBInstanceUtilitiesMixin',[

  '../lib/isInstanceOf',
  '../WBMixin'

], function (isInstanceOf, WBMixin, undefined) {

  

  return WBMixin.extend({

    'isInstanceOf': isInstanceOf
  });
});
define('wunderbits/WBModel',[

  './lib/dependencies',
  './lib/createUID',
  './mixins/WBInstanceUtilitiesMixin',
  './mixins/WBBindableMixin',
  './mixins/WBDeferrableMixin'

], function (dependencies, createUID, WBInstanceUtilitiesMixin, WBBindableMixin, WBDeferrableMixin, undefined) {

  

  var Backbone = dependencies.Backbone;

  var _super = Backbone.Model.prototype;

  return Backbone.Model.extend({

    'initialize': function () {

      var self = this;
      self.uid = createUID();

      WBBindableMixin.applyTo(self);
      WBInstanceUtilitiesMixin.applyTo(self);
      WBDeferrableMixin.applyTo(self);
    },

    'destroy': function () {

      var self = this;
      self.destroying = true;
      _super.destroy.apply(self, arguments);
    },

    'save': function () {

      var self = this;
      !self.destroying && _super.save.apply(self, arguments);
    },

    'clear': function () {

      var self = this;

      _super.clear.apply(self, arguments);
      self.save(self.defaults);
    }
  });
});
define('languages/available',[],function() {
return {
'name': 'available',
'data': {"ar":{"file":"arabic","name":"‏العربية‏","dir":"rtl"},"bg_BG":{"file":"bulgarian","name":"Български"},"ca_ES":{"file":"catalan","name":"Català"},"cs_CZ":{"file":"czech","name":"Čeština"},"da_DK":{"file":"danish","name":"Dansk"},"de_DE":{"file":"german","name":"Deutsch"},"en_US":{"file":"english","name":"English"},"es_LA":{"file":"spanish","name":"Español"},"fa_IR":{"file":"persian","name":"‏فارسی‏","dir":"rtl"},"fr_FR":{"file":"french","name":"Français"},"el_GR":{"file":"greek","name":"Ελληνικά"},"he_IL":{"file":"hebrew","name":"‏עברית‏","dir":"rtl"},"hu_HU":{"file":"hungarian","name":"Magyar"},"is_IS":{"file":"icelandic","name":"Íslenska"},"it_IT":{"file":"italian","name":"Italiano"},"ja_JP":{"file":"japanese","name":"日本語"},"ka_GE":{"file":"georgian","name":"ქართული"},"ko_KR":{"file":"korean","name":"한국어"},"mt_MT":{"file":"maltese","name":"Malti"},"my_MY":{"file":"burmese","name":"မြန်မာဘာသာ"},"nl_NL":{"file":"dutch","name":"Nederlands"},"nb_NO":{"file":"norwegian-bokmal","name":"Norsk (bokmål)"},"pl_PL":{"file":"polish","name":"Polski"},"pt_BR":{"file":"portuguese-brazil","name":"Português (Brasil)"},"pt_PT":{"file":"portuguese","name":"Português"},"ru_RU":{"file":"russian","name":"Русский"},"sv_SE":{"file":"swedish","name":"Svenska"},"tr_TR":{"file":"turkish","name":"Türkçe"},"zh_CN":{"file":"simplified-chinese-china","name":"中文(简体)"},"zh_TW":{"file":"chinese-taiwan","name":"中文(台灣)"},"aliases":{"bg":"bg_BG","ca":"ca_ES","da":"da_DK","de":"de_DE","el":"el_GR","en":"en_US","es":"es_LA","fa":"fa_IR","fr":"fr_FR","grk":"el_GR","he":"he_IL","hu":"hu_HU","is":"is_IS","it":"it_IT","ja":"ja_JP","ka":"ka_GE","ko":"ko_KR","mt":"mt_MT","my":"my_MY","nl":"nl_NL","no":"nb_NO","pl":"pl_PL","pt":"pt_PT","ru":"ru_RU","sv":"sv_SE","tr":"tr_TR"}}
};
});
define('wunderbits/helpers/xss',[

  '../WBSingleton'

], function (WBSingleton, undefined) {

  

  return WBSingleton.extend({

    clean: function (string) {

      string || (string = '');
      string = string.replace(/&/g, '&amp;')
                     .replace(/</g, '&lt;')
                     .replace(/>/g, '&gt;')
                     .replace(/"/g, '&quot;')
                     .replace(/'/g, '&#x27;')
                     .replace(/\//g, '&#x2F;');

      return string;
    },

    reverseClean: function (string) {

      string || (string = '');
      string = string.replace(/\%/g, '&#37;');

      string = decodeURIComponent(string);

      return string.replace(/&amp;/g, '&')
                   .replace(/&lt;/g, '<')
                   .replace(/&gt;/g, '>')
                   .replace(/&quot;/g, '"')
                   .replace(/&#39;/g, '\'')
                   .replace(/&#x27;/g, '\'')
                   .replace(/&#x2F;/g, '\/')
                   .replace(/&#37;/g, '%');
    }
  });
});
define('wunderbits/WBLanguageManager',[

  './lib/dependencies',
  'vendor/handlebars',

  'languages/available',

  './mixins/WBBindableMixin',
  './mixins/WBEventsMixin',
  './WBSingleton',
  './helpers/xss'

], function (dependencies, Handlebars, available, WBBindableMixin, WBEventsMixin, WBSingleton, XSSHelper, undefined) {

  

  var global = window;
  var _ = dependencies._;

  var defaultLanguage = 'en_US';
  var availableLanguages = available.data || {};
  var languageAliases = availableLanguages.aliases || {};
  delete availableLanguages.aliases;

  var _langData = {};

  // This converts languages codes from RFC 4646 to ISO format
  function _convert (code) {

    if(code[2] === '-') {
      code = code.split('-');
      code[1] = code[1].toUpperCase();
      code = code.join('_');
    }

    return code;
  }

  var WBLanguageManager = WBSingleton.extend({

    'mixins': [
      WBBindableMixin,
      WBEventsMixin
    ],

    'getKeys': function () {
      return _langData.keys;
    },

    // Cross-broswer language detection
    'detectLang': function  () {

      var navigator = global.navigator;
      var langCode = _convert(navigator.userLanguage || navigator.language || defaultLanguage);

      // Resolve aliases
      while (langCode in languageAliases) {
        langCode = _convert(languageAliases[langCode]);
      }

      return langCode;
    },

    'fetchData': function (code) {

      var self = this;
      var available = availableLanguages;

      // default language if no code was passed
      code = code || defaultLanguage;

      // try 5 char code followed by 2 char code
      var meta = (available[code] || available[code.substr(0, 2)]);

      // if language isn't available, try the same as above for the default language
      meta = meta || available[defaultLanguage] || available[defaultLanguage.substr(0, 2)];

      require([
        'languages/' + meta.file
      ], function (data) {
        self._dataLoaded(code, meta, data);
      });
    },

    'getLabel': function () {

      var data = _.toArray(arguments);

      // localization key
      var key  = data.shift();

      // handlebars would send an options object as the last param
      var options = data[data.length - 1];
      if(options && options.hash) {
        options = data.pop();
      }

      // Just return blank placeholders right now, rendering will fill in the values
      var str = '<text rel="' + key + '"';
      if(data.length) {
        // seperate data with the "snowman" unicode character
        str += ' data="' + data.join('\u2603') + '"';
      }
      str += '></text>';
      return new Handlebars.SafeString(str);
    },

    'getText': function () {

      var self = this;
      var data = _.toArray(arguments);
      var theLangData = _langData.keys;

      // localization key
      var key  = data.shift();
      var value = theLangData[key];

      if (!value) {

        // console.error(key);
        return;
      }

      if (data && data.length) {

        // convert single $ symbols to $1, $2 etc.
        var index = 0;
        value = value.replace(/\$([^0-9]|$)/g, function ($, nextChar) {

          return '$' + (++index) + (nextChar || '');
        });

        data = self.localizationception(data);

        // Replace the $1, $2 tokens with actual values
        index = 0;
        value = value.replace(/\$([0-9])/g, function () {

          var cleanText = XSSHelper.clean(data[index].toString());
          var markup = cleanText;
          index++;

          return markup;
        });

        return value;
      }

      return value;
    },

    'localizationception': function (data) {

      var theLangData = _langData.keys;
      var param, value;

      // localizationception
      for (var i = 0, len = data.length; i < len; i++) {
        param = data[i].toString();
        value = theLangData[param.substr(1)];
        if (param[0] === '$' && value) {
          data[i] = value;
        }
      }

      return data;
    },

    '_dataLoaded': function (code, meta, lang) {

      var self = this;

      // store the data a local cache
      _langData.name = lang.name;
      _langData.keys = lang.data;

      // announce the ready event
      self.trigger('done', code, meta, lang);
    }
  });

  // getLabel is also the "localized" handlebars helper
  Handlebars.registerHelper('localized', WBLanguageManager.getLabel);

  return WBLanguageManager;
});

define('wunderbits/helpers/date',[

  'vendor/moment',

  '../WBLanguageManager',
  '../WBSingleton'

  // TODO implement language and settings

], function (moment, WBLanguageManager, WBSingleton, undefined) {

  

  return WBSingleton.extend({

    'humanizeDueDate': function (date, format, justKey) {

      var now = moment().sod();
      var due = moment(date).sod();
      var diff = now.diff(due, 'days');

      // pass user setting as format string to this function
      var fullDate = format || 'DD.MM.YYYY';
      var key;

      if (diff === 0) {

        key = 'today';
      }
      else if (diff === 1) {

        key = 'yesterday';
      }
      else if (diff === -1) {

        key = 'tomorrow';
      }
      else {

        return moment(date).format(fullDate);
      }

      key = 'label_relative_date_' + key;

      return justKey ? key : WBLanguageManager.getLabel(key).toString();
    },

    'isHumanizeable': function (date) {

      var now = moment().sod();
      var due = moment(date).sod();
      var diff = now.diff(due, 'days');

      if (diff === 0 || diff === 1 || diff === -1) {

        return true;
      }

      return false;
    },

    'humanizeDueIn': function (date) {

      var now = moment();
      var due = moment(date);

      var minutes = due.diff(now, 'minutes');

      return moment.duration(minutes, 'minutes').humanize();
    },

    'isOverdue': function (date) {

      var now = moment().sod().unix();
      var due = moment(date).sod().unix();

      return now > due;
    },

    'now': function (date) {

      date || (date = new Date());

      date.setHours(0);
      date.setMinutes(0);
      date.setSeconds(0);
      date.setMilliseconds(0);

      return Math.floor((date).getTime()/1000);
    },

    'getServerNow': function () {

      var serverTimestamp = moment()
        .add('minutes', moment().zone())
        .format('YYYY-MM-DDTHH:mm:ss');

      return serverTimestamp + 'Z';
    },

    'getServerNowWithMilliseconds': function () {

      var serverTimestamp = moment()
        .add('minutes', moment().zone())
        .format('YYYY-MM-DDTHH:mm:ss.SSS');

      return serverTimestamp + 'Z';
    },

    'convertLocalTimeToServerTime': function (timeStamp) {

      var serverTimestamp = moment(timeStamp)
        .add('minutes', moment(timeStamp, 'YYYY-MM-DDTHH:mm:ss').zone())
        .format('YYYY-MM-DDTHH:mm:ss');

      return serverTimestamp + 'Z';
    },

    'convertServerTimeToLocalTime': function (timeStamp) {

      timeStamp = timeStamp.replace('Z', '');

      var locaTimestamp = moment(timeStamp)
        .subtract('minutes', moment(timeStamp, 'YYYY-MM-DDTHH:mm:ss').zone())
        .format('YYYY-MM-DDTHH:mm:ss');

      return locaTimestamp;
    },

    'convertHourTo24HourTime': function (hour, ampm) {

      // takes hour plus 'am' or 'pm' and returns an hour in 24 hour time 0 - 23

      ampm = ampm ? ampm.toLowerCase() : null;

      var afterNoon = (hour !== 12 && ampm === 'pm');
      // 12:00 AM
      var midnight = hour === 12 && ampm === 'am';
      // we dont need to care about the time between midnight and noon
      // because that time is naturally handled (ex: 3:00am, 11:00am)

      hour = afterNoon ? hour + 12 : midnight ? 0 : hour;

      return hour;
    },

    'convertServerDateToLocalDate': function (date) {

      return date;

      // if (!date) {

      //   return date;
      // }

      // console.log('date in', date);

      // date = moment(date, 'YYYY-MM-DD').sod();

      // var offset = date.zone();
      // console.log('date offset', offset);

      // if (offset > 0 ) {

      //   date.subtract('days', 1);
      // }

      // console.log('date out', date.format('YYYY-MM-DD'))

      // return date.format('YYYY-MM-DD');
    },

    'convertLocalDateToServerDate': function (date) {

      return date;

      // if (!date) {

      //   return date;
      // }

      // date = moment(date, 'YYYY-MM-DD').sod();

      // var offset = date.zone();

      // if (offset > 0) {

      //   date.add('days', 1);
      // }

      // return date.format('YYYY-MM-DD');
    },

    'ISOString': function (date) {

      if(date) {
        !(date instanceof Date) && (date = new Date(date));
      }
      else {
        date = new Date();
      }
      date.setMilliseconds(0);
      return date.toISOString().replace('.000Z', 'Z');
    },

    'getDatesFromNow': function (momentDates, key) {

      var calucalatedDates = {};
      key = key + 'Date';

      calucalatedDates.today = momentDates[key].diff(momentDates.today, 'days') === 0;
      calucalatedDates.yesterday = momentDates[key].diff(momentDates.today, 'days') === -1;
      calucalatedDates.earlier = momentDates[key].diff(momentDates.thisYear) < 0;

      return calucalatedDates;
    }
  });
});
define('models/ShareModel',[

  'wunderbits/helpers/date',

  'wunderbits/WBModel'

], function (DateHelper, WBModel, undefined) {

  

  return WBModel.extend({

    'storeName': 'shares',

    'defaults': {

      'type': 'Share',
      'resource_type': 'List',
      'resource_id': null,
      'recipient': null,
      'sender': null,
      'accepted_at': null
    },

    'accept': function () {

      var self = this;

      // Can't re-accept a share
      if (self.attributes.accepted_at !== null) {

        return;
      }

      self.set('accepted_at', DateHelper.ISOString());
      self.collection.trigger('accepted', self, self.collection);
    }
  });
});
define('wunderbits/collections/WBCollection',[

  '../lib/dependencies',
  '../lib/createUID'

], function (dependencies, createUID, undefined) {

  

  var Backbone = dependencies.Backbone;
  var _ = dependencies._;
  var $ = dependencies.$;

  // cache all the collection instances for better memory management
  var allCollectionsMap = {};

  function WBCollection (url, options) {

    if (!(_.isString(url)) || !/(\/[a-z0-9]+)+\/?/.test(url)) {
      throw new Error('Every collections has to have a URL');
    }

    var collectionMap = allCollectionsMap;

    // if the collection exists, use it
    if (collectionMap[url] instanceof WBCollection) {
      return collectionMap[url];
    }
    // else create an instance of a new one
    else {
      Backbone.Collection.call(this, [], options);
      this.url = url;
      collectionMap[url] = this;
      this.trigger('change:url');
    }

    collectionMap = null;
  }

  var CollectionPrototype = Backbone.Collection.prototype;
  _.extend(WBCollection.prototype, CollectionPrototype, {

    '_altIdName': 'online_id',

    '_onAdd': function (model) {

      var self = this;
      var _oid = model.attributes[self._altIdName];
      _oid && (this._byOid[_oid] = model.id);
    },

    '_onRemove': function (model) {

      var self = this;
      var _oid = model.attributes[self._altIdName];
      _oid && (delete this._byOid[_oid]);
    },

    '_onReset': function () {

      var self = this;
      self._byOid = {};
      for (var i=0, len=self.models.length; i<len; i++) {
        self._onAdd(self.models[i]);
      }
    },

    'getIdByAltId': function (oid) {

      return oid && this._byOid[oid];
    },

    'isFull': function () {

      return this.limit ? this.models.length >= this.limit : false;
    },

    'initialize': function (models, options) {

      var self = this;

      self.storeName = self.storeName || options.storeName;
      self.model = self.model || options.model;

      if (!self.storeName) {
        throw new Error('No store defined');
      }

      self.models = [];
      self._byOid = {};

      self.on('add', self._onAdd, self);
      self.on('change:' + self._altIdName, self._onAdd, self);
      self.on('remove', self._onRemove, self);
      self.on('reset', self._onReset, self);

      self.uid = createUID();

      return CollectionPrototype.initialize.apply(self, arguments);
    },

    'hasUrl': function () {

      var self = this;
      var hasUrl = new $.Deferred();

      if (self.url !== undefined) {

        hasUrl.resolve();
      }
      else {

        self.on('change:url', function () {

          (self.url !== undefined) && hasUrl.resolve();
          self.off('change:url');
        });
      }

      return hasUrl.promise();
    },
  });

  // Since WBCollection doesn't extend Backbone collection
  // we have to write an extend method
  function Dummy() {}

  WBCollection.extend = function extend (protoProps) {
    var parent = this;

    var child = function() {
      return parent.apply(this, arguments);
    };

    _.extend(child, parent);

    Dummy.prototype = parent.prototype;
    child.prototype = new Dummy();

    if (protoProps) {
      _.extend(child.prototype, protoProps);
    }

    child.prototype.constructor = child;
    child.__super__ = parent.prototype;

    return child;
  };

  return WBCollection;
});
define('collections/ShareCollection',[

  'application/runtime',

  'models/ShareModel',

  'wunderbits/collections/WBCollection'

], function (
  runtime,
  ShareModel,
  WBCollection,
  undefined
) {

  

  var _ = runtime._;

  return WBCollection.extend({

    'storeName': 'shares',

    'model': ShareModel,

    'getByRecipientId': function (recipientId) {

      var self = this;

      // lookup for first model which either has recipient.id equal to the onlineId
      var validModel = _.filter(self.models, function(share) {
        var recipient = share.attributes.recipient;
        return (recipient.id === recipientId);
      });

      return validModel && validModel[0];
    }
  });
});
define('models/ListModel',[

  'application/runtime',

  'wunderbits/WBModel',

  'collections/ShareCollection'

], function (runtime, WBModel, ShareCollection, undefined) {

  

  var _ = runtime._;

  return WBModel.extend({

    'storeName': 'lists',

    'defaults': {
      'type': 'List'
    },

    'isSavedSearch': function () {

      // disabling for 2.3.0
      return false;
      // var title = this.attributes.title;
      // return title.indexOf('{{') === 0 && title.indexOf('}}') > 0;
    },

    'getCleanTitle': function () {

      // disabling for 2.3.0
      return this.attributes.title;
      // return this.attributes.title.replace('{{', '').replace('}}', '');
    },

    'isShared': function () {

      return !!this.attributes.share_id;
    },

    'isMember': function () {

      return this.attributes.role === 'member';
    },

    'isOwner': function () {

      return this.attributes.role === 'owner';
    },

    'isMemberOfList': function (userId) {

      var self = this;
      var shares = new ShareCollection('/shares/' + self.id + '/shares');

      var assignee = _.find(shares.models, function (shareModel) {

        return shareModel.attributes.recipient.id === userId || shareModel.attributes.sender.id === userId;
      });

      return assignee;
    }
  });
});
define('helpers/Positions',[

  'application/runtime',

  'wunderbits/WBSingleton'

], function (runtime, WBSingleton, undefined) {

  

  var _ = runtime._;

  return WBSingleton.extend({

    'containsInvalidPosition': function (collection) {

      var self = this;
      var models = collection.models;
      for (var i = 0, len = models.length; i < len; i++) {
        if (!self.isValidPosition(models[i].attributes.position) || self.hasDuplicatePosition(models[i], collection)) {
          return true;
        }
      }

      return false;
    },

    'hasDuplicatePosition': function (model, collection) {

      var filtered = collection.where({'position': model.attributes.position});
      return filtered.length > 1 || filtered[0].id !== model.id;
    },

    'isValidPosition': function (position) {

      return _.isNumber(position) && !_.isNaN(position);
    },
  });
});
define('collections/ListCollection',[

  'application/runtime',

  'models/ListModel',

  'wunderbits/collections/WBCollection',

  'helpers/Positions'

], function (
  runtime,
  ListModel,
  WBCollection,
  PositionsHelper,
  undefined
) {

  

  var _ = runtime._;
  var _super = WBCollection.prototype;

  return WBCollection.extend({

    'storeName': 'lists',

    'model': ListModel,

    'comparator': function (a, b) {

      var aVal = a.attributes.position;
      var bVal = b.attributes.position;

      return aVal > bVal ? 1 : aVal < bVal ? -1 : 0;
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.on('change:position add remove', self.sort);


      self.hasUrl().then(function () {

        if (self.url === '/lists/all/sortable') {
          self._debouncedCheckPositions = _.debounce(self.checkPositions, 500);
          self.on('change:position add', self._debouncedCheckPositions);
        }
      });
    },

    'hasSavedSearch': function (query) {

      var self = this;
      return !!self.find(function (model) {
        return model.isSavedSearch() && model.getCleanTitle() === query;
      });
    },

    'getNextPosition': function () {

      var self = this;
      var maxModel = self.max(function (model) {
        return model.attributes.position;
      });

      var max = maxModel ? maxModel.attributes.position : 0;
      return Math.round(max + 10);
    },

    'checkPositions': function () {

      var self = this;

      // check for duplicates
      if (PositionsHelper.containsInvalidPosition(self)) {
        runtime.trigger('destructive:sort', self, 'position', self.id);
      }
    }
  });
});
define('models/ServiceModel',[

  'wunderbits/WBModel'

], function ( WBModel, undefined) {

  

  return WBModel.extend({

    'storeName': 'services',

    'defaults': {

      'type': 'Service',
      'provider_id': null,
      'provider_type': null,
      'username': null,
      'oauth_access_token': null
    }
  });
});
define('collections/ServiceCollection',[

  'models/ServiceModel',

  'wunderbits/collections/WBCollection'

], function (
  ServiceModel,
  WBCollection,
  undefined
) {

  

  return WBCollection.extend({

    'storeName': 'services',

    'model': ServiceModel
  });
});
define('helpers/Auth/OAuthHelper',[

  'application/runtime',

  'wunderbits/WBSingleton'

], function (runtime, WBSingleton, undefined) {

  

  var global = runtime.global;
  var chrome = global.chrome;
  var location = global.location;
  var isChromeApp = runtime.env.isChromeApp();

  return WBSingleton.extend({

    'redirectUrl': isChromeApp ?
      'https://' + chrome.runtime.id + '.chromiumapp.org/':
      location.protocol + '//' + location.host + '/' + (!runtime.isLocalDev() ? 'webapp' : ''),

    'authUrl': function (baseUrl, params) {

      var self = this;
      params = params || {};
      params.redirect_uri = params.redirect_uri ? params.redirect_uri : self.redirectUrl;

      var args = [], param, value;
      for (param in params) {
        value = encodeURIComponent(params[param]);
        args.push(param + '=' + value);
      }
      return baseUrl + args.join('&');
    }
  });
});
define('helpers/ChromeIdentity',[

  'application/runtime',

  'wunderbits/WBSingleton'

], function (
  runtime,
  WBSingleton,
  undefined
) {

  

  var global = runtime.global;

  var identity = false;
  if (runtime.env.isChromeApp()) {
    var chrome = global.chrome;
    identity = chrome && chrome.identity;
  }

  return WBSingleton.extend({
    // false or chrome identity class
    'identity': identity
  });
});
define('helpers/Auth/facebook',[

  'application/runtime',

  'collections/ListCollection',
  'collections/ServiceCollection',

  'helpers/Auth/OAuthHelper',
  'helpers/ChromeIdentity',

  'wunderbits/WBSingleton'

], function (
  runtime,
  ListCollection, ServiceCollection,
  OAuthHelper, ChromeIdentity,
  WBSingleton,
  undefined
) {

  

  var global = runtime.global;
  var _ = runtime._;
  var $ = runtime.$;
  var config = runtime.config;

  var identity = ChromeIdentity.identity;

  var isPackagedApp = runtime.env.isPackagedApp();

  var services = new ServiceCollection('/services/all');

  return WBSingleton.extend({

    'providerName': 'facebook',

    'authBaseUrl': 'https://graph.facebook.com/oauth/authorize?',

    'authParams': function () {

      return {
        'client_id': config.facebook.appID,
        'redirect_uri': OAuthHelper.redirectUrl,
        'type': 'user_agent',
        'display': 'page'
      };
    },

    'authUrl': function () {

      var self = this;
      var params = self.authParams();
      return OAuthHelper.authUrl(self.authBaseUrl, params);
    },

    'getFacebookOAuthToken': function (returnPath, createService) {

      var self = this;

      // send and respond to facebook oauth url
      var location = global.location;

      var def = new $.Deferred();

      var pageUrl;
      var path;

      path = 'https://www.facebook.com/dialog/oauth?';
      pageUrl = location.protocol + '//' + location.hostname + (!runtime.isLocalDev() && !runtime.isBrowserExtension() ? '/webapp' : '');

      if (runtime.isBrowserExtension()) {
        // return to the currenct route on extension
        pageUrl = pageUrl + location.pathname + '?u=' + runtime.currentRoute();
      }
      else {
        // Append the hash after the return url
        // just in case we wanna use it on return
        pageUrl = pageUrl + '/?u=' + returnPath;
        if (location.hash.length) {
          pageUrl += location.hash;
        }
      }

      var queryParams = [
        'client_id=' + config.facebook.appID,
        'redirect_uri=' + encodeURIComponent(pageUrl)
      ];

      queryParams.push('response_type=token');

      var url = path + queryParams.join('&');
      if (isPackagedApp) {

        self.connectWithIdentity()
          .done(function (token) {

            if (createService) {
              self.registerFacebookService(token).done(def.resolve);
            }
            else {
              def.resolve(token);
            }
          })
          .fail(def.reject);
      }
      else {

        global.location.href = url;
      }

      return def.promise();
    },

    'connectWithIdentity': function () {

      var self = this;

      var def = new $.Deferred();

      identity.launchWebAuthFlow({
        'url': self.authUrl(),
        'interactive': true
      }, function (responseUrl) {

        var parsed = self.parseTokenString(responseUrl);

        // valid token found, continue with auth
        if (responseUrl !== undefined && parsed.token) {
          def.resolve(parsed.token);
        }
        // no token, no auth
        else {
          def.reject();
        }
      });

      return def.promise();
    },

    'getFacebookFriends': function (FBOauth, callback) {

      $.ajax({

        'url': 'https://graph.facebook.com/me/friends?access_token=' + FBOauth,
        'type': 'GET',
        'dataType': isPackagedApp ? 'json' : 'jsonp',
        'xhrFields': {
          'withCredentials': false
        },

        'success': function (data) {

          callback && _.isFunction(callback) && callback(data);
        }
      });
    },

    'sendAppRequest': function (fbId, listId) {

      var path = '//www.facebook.com/dialog/apprequests?';

      var lists = new ListCollection('/lists/all');
      var list = lists.get(listId);
      var listName = list.attributes.title;

      // todo need to find a better way of building complex strings like this
      var message = runtime.language.getText('sharing_facebook_apprequest_message_$user_$list');
      message = message.replace('$1', runtime.user.attributes.name).replace('$2', listName);

      var redirectUri;
      if (isPackagedApp) {
        redirectUri = 'https://www.wunderlist.com/webapp/?u=';
      } else {
        redirectUri = global.location.protocol + '//' + global.location.hostname + (!runtime.isLocalDev() ? '/webapp' : '') + '/#/';
      }

      var queryParams = [

        'app_id=' + config.facebook.appID,
        'to=' + fbId,
        'message=' + encodeURIComponent(message),
        // todo is it possible to get a signature token from the api before this point to redirect to the mini site instead?
        'redirect_uri=' + encodeURIComponent(redirectUri + 'lists/' + listId + '/share'),
        'data=' + encodeURIComponent(JSON.stringify({
          'to': fbId,
          'list_id': list.attributes.online_id
        }))
      ];

      var url = path + queryParams.join('&');
      if (isPackagedApp) {
        runtime.once('webview:close', function (route, params) {

          params.request && runtime.trigger('route:' + route, {
            'params': params
          });
        });

        runtime.trigger('webview:open', 'https:' + url);
      }
      else {
        global.location.href = url;
      }
    },

    'registerFacebookService': function (token) {

      console.trace();

      var self = this;
      var def = new $.Deferred();

      var callback = function (fbData) {

        var data = {

          'provider_id': fbData.id,
          'provider_type': 'facebook',
          'username': fbData.username,
          'oauth_access_token': token
        };

        fbData && services.add(data);

        def.resolve();
      };

      self.getFacebookUserGraph(token, callback);

      return def.promise();
    },

    'getFacebookUserGraph': function (FBOauth, callback) {

      $.ajax({

        'url': 'https://graph.facebook.com/me?access_token=' + FBOauth,
        'type': 'GET',
        'dataType': isPackagedApp ? 'json' : 'jsonp',
        'xhrFields': {
          'withCredentials': false
        },

        'success': function (data) {
          runtime.user.facebookData = data;
          runtime.user.facebookData.token = FBOauth;
          data.avatar = 'https://graph.facebook.com/' + data.username + '/picture?width=68&height=68';

          _.isFunction(callback) && callback(data);
        },
        'error': function () {
          // console.log('there was an error with facebook graph');
        }
      });
    },

    'parseTokenString': function (token) {

      var parsed = {};
      var pieces = token.split('&');

      _.each(pieces, function (piece) {

        if (piece.indexOf('/') >= 0) {
          var parts = piece.split('/');
          parsed.url = _.initial(parts).join('/');
        }

        if (piece.indexOf('access_token=') >= 0) {
          parsed.token = piece.split('=')[1];
        }
        else {
          var match = piece.match(/^lists((\/\w*)*)/);
          if (match) {
            parsed.url = match[0];
          }
        }
      });

      if (!parsed.url) {
        parsed.url = '';
      }

      return parsed;
    }
  });
});

define('helpers/Auth/google',[

  'application/runtime',

  'helpers/Auth/OAuthHelper',
  'helpers/ChromeIdentity',

  'wunderbits/WBSingleton',
  'wunderbits/mixins/WBDeferrableMixin',

], function (
  runtime,
  OAuthHelper, ChromeIdentity,
  WBSingleton,
  WBDeferrableMixin,
  undefined
) {

  

  var global = runtime.global;
  var $ = runtime.$;
  var _ = runtime._;

  var config = runtime.config;
  var identity = ChromeIdentity.identity;

  // helper to request data from google
  var gpBase = 'https://www.googleapis.com/';
  function requestGoogleData (token, url) {

    return runtime.$.ajax({

      'url': gpBase + url,

      'xhrFields': {
        'withCredentials': false
      },

      'headers': {
        'Authorization': 'Bearer ' + token
      }
    });

    // TODO: use runtime.io instead
    // return runtime.io.get(gpBase + url, undefined, {
    //   'Authorization': 'Bearer ' + token
    // });
  }

  return WBSingleton.extend({

    'mixins': [
      WBDeferrableMixin
    ],

    'providerName': 'google',

    'authBaseUrl': 'https://accounts.google.com/o/oauth2/auth?',

    'authParams': function (state) {

      return {
        'client_id': config.google.webAppId,
        'response_type' : 'token',
        'redirect_uri': OAuthHelper.redirectUrl,
        'scope' : config.google.scopes.join(' '),
        'state': state || 'googleOAuthLogin'
      };
    },

    'authUrl': function (state) {

      var self = this;
      var params = self.authParams(state);
      return OAuthHelper.authUrl(self.authBaseUrl, params);
    },

    'connectWithGoogle': function (state, createService) {

      var self = this;

      var def = self.deferred();

      // If chrome app & if identity is available
      if (runtime.env.isChromeApp() && identity) {

        // request oauth2 token
        identity.getAuthToken({
          'interactive': true
        }, function (token) {

          if (token === undefined) {
            return def.reject();
          }

          identity.removeCachedAuthToken({
            'token': token
          }, $.noop);

          if (createService) {
            self.requestProfile(token)
              .done(function (data) {

                data.providerId = data.sub;
                data.providerType = 'google';
                data.token = token;

                self.createService(data)
                  .done(def.resolve)
                  .fail(def.reject);
              })
              .fail(def.reject);
          }
          else {
            def.resolve(token);
          }
        });
      }
      // Otherwise try regular Google login
      else {
        _.defer(function () {
          global.location.href = self.authUrl(state);
        });
      }

      return def.promise();
    },

    'createService': function (data, callback) {

      data.providerId = data.sub;
      data.providerType = 'google';

      var postData = {
        'provider_id': data.providerId,
        'provider_type': data.providerType,
        'oauth_access_token': data.token,
        'username': data.name,
        'gmail': true
      };

      // create a auth service for the user
      var xhr = runtime.io.post('/me/services', postData)
        .done(function () {
          callback && callback(xhr);
        });

      return xhr;
    },

    'requestProfile': function (token) {

      return requestGoogleData(token, 'oauth2/v3/userinfo');
    },

    'requestPlusProfile': function (token) {

      return requestGoogleData(token, 'plus/v1/people/me');
    }
  });

});
define('routes/WelcomeRoutesController',[

  'application/runtime',
  'wunderbits/WBRoutesController',

  'helpers/Auth/facebook',
  'helpers/Auth/google'

], function (runtime, WBRoutesController, facebook, Google, undefined) {

  

  var _ = runtime._;

  var loaded = _.once(function () {

    runtime.trigger('timeline:end', 'login_start');
  });

  return WBRoutesController.extend({

    'showViews': function (views, data) {

      var self = this;
      var deferred = self.deferred();

      self.outlet.render();

      var deferreds = self.outlet.syncViews(views, data);
      if (deferreds) {
        self.when(deferreds).done(deferred.resolve, deferred);
      }
      else {
        deferred.resolve();
      }

      deferred.done(loaded);

      return deferred.promise();
    },

    'showSelector': function () {

      var self = this;
      return self.showViews(['selector']);
    },

    'showLogin': function (path) {

      var self = this;
      return self.showViews(['selector', 'login'], {
        'path': path
      });
    },

    'showSignup': function (path) {

      var self = this;
      return self.showViews(['selector', 'signup'], {
        'path': path
      });
    },

    'showFacebookSignup': function (token) {

      var self = this;
      var deferred = self.deferred();

      facebook.getFacebookUserGraph(token, function (data) {

        self.showViews(['selector', 'external-signup'], {
          'providerType': 'facebook',
          'providerId': data.id,
          'name': data.name,
          'email': data.email,
          'avatar': data.avatar,
          'locale': data.locale,
          'confirmed': data.email_verified,
          'token': token
        }).done(deferred.resolve, deferred);
      });

      return deferred.promise();
    },

    'showGoogleSignup': function (token) {

      var self = this;
      var deferred = self.deferred();

      // TODO: this is redundant code, somehow abstract it into a common place
      Google.requestProfile(token).done(function (data) {

        self.showViews(['selector', 'external-signup'], {
          'providerType': 'google',
          'providerId': data.sub,
          'name': data.name,
          'email': data.email,
          'avatar': data.picture,
          'locale': data.locale,
          'confirmed': data.email_verified,
          'token': token
        }).done(deferred.resolve, deferred);
      });

      return deferred.promise();
    },

    'showForgotPassword': function () {

      var self = this;
      return self.showViews(['selector', 'login', 'forgot']);
    },

    'startUnregisteredMode': function () {

      var self = this;
      runtime.user.startUnregistered();
      return self.deferred().promise();
    },

    // Set IYF signup token
    'handleSignupTokens': function (inviterId, inviteToken) {

      var self = this;
      inviterId && runtime.user.setInviterId(inviterId);
      inviteToken && runtime.user.setInviteToken(inviteToken);
      return self.showSignup();
    }
  });
});
define('routes/TryRoutesController',[

  'application/runtime',
  'routes/WelcomeRoutesController'

], function (runtime, WelcomeRoutesController, undefined) {

  

  var $ = runtime.$;

  return WelcomeRoutesController.extend({

    'showViews': function (views, data) {

      var self = this;
      var deferred = self.deferred();

      self.outlet.switchToView('Login', null, null, function (view) {
        $('body').addClass('unregistered');
        $.when(view.syncViews(views, data)).done(deferred.resolve);
      });

      return deferred.promise();
    },

    'startTryMode': function (path) {

      path = path || 'lists/inbox';
      runtime.publish('create:prepopulatedLists');
      runtime.trigger('route:' + path);
    }
  });
});
define('routes/OAuthRoutesController',[

  'application/runtime',
  'wunderbits/WBRoutesController',
  'helpers/Auth/facebook',
  'helpers/Auth/google'


], function (runtime, WBRoutesController, Facebook, Google, undefined) {

  

  var $ = runtime.$;

  return WBRoutesController.extend({

    // this is a poorly named function that tries to deal with facebook oddities
    'checkForToken': function (token) {

      var self = this;
      if (self.params.state && /^fetchingGoogleContacts/.test(self.params.state)) {

        var context = /:/.test(self.params.state) ? self.params.state.split(':')[1] : undefined;
        runtime.trigger('route:inviteYourFriends/' + self.params.access_token + '/' + context);
      }
      // handling for button on https://www.facebook.com/appcenter/wunderlist?fb_source=search&redirect_uri=http%3A%2F%2Fwww.wunderlist.com%2F&fref=ts
      else if (self.params.u && !runtime.env.isPackagedApp()) {

        var url = runtime.global.location.href;
        var parts = url.split('#');

        var hash = decodeURIComponent(self.params.u || '');
        self.params.u = null;

        if (hash[hash.length - 1] !== '/') {
          hash += '/';
        }

        url = hash + parts[1];

        runtime.reload(url);
      }
      else if (token.indexOf('access_token=') >= 0 || self.isToken(token)) {

        if (token.indexOf('googleOAuthLogin') >= 0 || token.indexOf('googleOAuthConnect') >= 0) {
          return;
        }

        if (token.indexOf('&') >= 0) {
          token = token.split('&')[0];
        }

        self.tryLoginWithFacebookToken(token);
      }
    },

    'isToken': function (token) {

      if (token.length < 30 || token && (token.indexOf('googleOAuthLogin') >= 0 || token.indexOf('googleOAuthConnect') >= 0)) {
        return false;
      }

      return !!token.match(/\d/);
    },

    'registerFacebookService': function (splat) {

      var parsed = Facebook.parseTokenString(splat);
      var route = parsed.url || 'preferences/account';

      Facebook.getFacebookUserGraph(parsed.token, function () {

        var service = runtime.user._createFacebookService();

        service.always(function () {
          runtime.reload('/' + route);
        });
      });
    },

    'registerGoogleService': function (token) {

      var route = 'preferences/account';

      var def = new $.Deferred();

      Google.requestProfile(token)
        .done(function (data) {

          data.token = token;

          Google.createService(data)
            .done(def.resolve)
            .fail(def.reject);
        })
        .fail(def.reject);

      def.always(function () {

        runtime.reload('/' + route);
      });
    },

    'tryLoginWithFacebookToken': function (token) {

      var auth = runtime.user.isLoggedIn();

      // when returning from FB app page, we sometimes get the whole query,
      // so we need to remove the pieces we don't need
      var parsed = Facebook.parseTokenString(token);
      token = parsed.token || token;

      auth.done(function () {
        runtime.trigger('route:lists/inbox');
      });

      auth.fail(function () {

        var login = runtime.user.loginWithFacebookOAuth(token);

        login.done(function () {

          runtime.reload('/lists/inbox');
        });

        login.fail(function () {
          runtime.trigger('route:signup/facebook/' + token);
        });
      });
    },

    // this is for the web app return routes
    'tryLoginWithGoogleToken': function (token) {

      var auth = runtime.user.isLoggedIn();

      auth.done(function () {
        runtime.trigger('route:lists/inbox');
      });

      auth.fail(function () {

        var login = runtime.user.loginWithOAuthToken(token, {'providerType': 'google'});

        login.done(function () {

          runtime.reload('/lists/inbox');
        });

        login.fail(function () {
          runtime.trigger('route:signup/google/' + token);
        });
      });
    }
  });
});
define('routes/StartRoutesController',[

  'application/runtime',
  'wunderbits/WBRoutesController'

], function (runtime, WBRoutesController, undefined) {

  

  var _ = runtime._;

  return WBRoutesController.extend({

    'startApp': function (path) {

      var self = this;
      var deferred = self.deferred().resolve();

      runtime.trigger('set:loadContext', 'login');

      path = path.replace('start/');
      _.defer(function () {
        runtime.trigger('route:' + path);
      });

      return deferred.promise();
    },

    'startAppFirstTime': function (path) {

      var self = this;
      var json = runtime.settings.toJSON();
      runtime.settings.changed = json;
      runtime.settings.trigger('change', runtime.settings, {});
      return self.startApp(path);
    }
  });
});
define('routes/ModalRoutesController',[

  'application/runtime',
  'wunderbits/WBRoutesController'

], function (
  runtime,
  WBRoutesController,
  undefined
) {

  

  var _ = runtime._;
  var _super = WBRoutesController.prototype;

  return WBRoutesController.extend({

    'name': undefined,

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      if (!self.name) {
        throw new Error('Cannot initialize without name');
      }
    },

    'show': function () {

      var self = this;
      var deferred = self.deferred();

      self.router.whenInterfaceHasLoaded().done(function () {

        self.beforeShow(deferred);

        if (deferred.state() === 'pending') {
          self.showModal();
          deferred.resolve();
        }
      });

      return deferred.promise();
    },

    'beforeShow': function () {

      runtime.trigger('sidebar:edit:cancel');
      runtime.trigger('confirmation:cancel');
      runtime.trigger('modal:close');
    },

    'showModal': function () {

      var self = this;
      runtime.trigger('modal:show', self.name, self.getOptions());

      _.defer(function () {
        runtime.trigger('focus:set', self.focus || self.name);
      });
    },

    'afterClose': function () {

      var self = this, router = self.router;
      var returnRoute = self.returnRoute || router.interfaceReturnRoute || router.defaultRoute;
      var shouldTrigger = !runtime.env.isMicro() && !runtime.env.isMini();

      router.setRoute(returnRoute, {
        'trigger': shouldTrigger
      });

      if (!shouldTrigger) {

        runtime.trigger('modal:close');

        if (runtime.focus === 'userMenu') {

          runtime.trigger('focus:set', 'sidebar');
        }
      }
    },

    'getOptions': function () {

      var self = this;

      return {
        'onClose': self.afterClose
      };
    }
  });
});
define('routes/FlashCardsRoutesController',[

  'application/runtime',
  './ModalRoutesController'

], function (
  runtime,
  ModalRoutesController,
  undefined
) {

  

  var _super = ModalRoutesController.prototype;
  
  return ModalRoutesController.extend({

    'name': 'flashCards',

    'runForList': function (id) {

      var self = this, router = self.router;
      var deferred = self.deferred();

      self.listId = id || 'inbox';

      router.whenListHasLoaded(self.listId).done(function () {

        self.returnRoute = 'lists/' + self.listId;
        
        self.show().done(deferred.resolve);
      });

      return deferred.promise();
    },

    'getOptions': function () {

      var self = this;
      var options = _super.getOptions.apply(self, arguments);

      options.listId = self.listId;

      return options;
    }
  });
});
define('routes/ResourceRoutesController',[

  'application/runtime',
  'wunderbits/WBRoutesController'

], function (runtime, WBRoutesController, undefined) {

  

  return WBRoutesController.extend({

    'getResource': function (id, deferred) {

      var self = this;
      deferred = deferred || self.deferred();

      self.router.whenAuthorized(function () {
        self.router[self.name + 'sDeferred'].done(function (items) {

          var item = items.get(id);

          if (item) {
            deferred.resolve(item);
          }
          else {

            item = items.get(items.getIdByAltId(id));

            if (item) {

              deferred.reject();
              item.route();
            }
            else if (self.syncTryLimit && runtime.syncCount < self.syncTryLimit) {

              self.bindOnceTo(runtime, 'sync:end', function () {
                self.getResource(id, deferred);
              });

              runtime.trigger('sync:start');
            }
            else {

              self.open404(deferred);
            }
          }
        });
      });

      return deferred.promise();
    },

    'open404': function (deferred) {

      var self = this;
      deferred.reject();
      self.router.open404(self.name);
    },

    'setFocus': function () {}
  });
});
define('routes/TasksRoutesController',[

  'application/runtime',
  'routes/ResourceRoutesController'

], function (runtime, ResourceRoutesController, undefined) {

  

  var _ = runtime._;

  return ResourceRoutesController.extend({

    'name': 'task',
    'syncTryLimit': 3,

    'show': function (id, attribute, fullscreen) {

      var self = this;
      var deferred = self.deferred();

      self.getResource(id).done(function (item) {

        self.open(item, {
          'attribute': attribute,
          'fullscreen': !!fullscreen
        }).done(deferred.resolve);
      }).fail(deferred.resolve);

      return deferred.promise();
    },

    'focus': function (id, attribute) {

      var self = this;
      var deferred = self.deferred();

      self.getResource(id).done(function (item) {

        self.open(item, {
          'focusAttribute': attribute
        }).done(deferred.resolve);

      }).fail(deferred.resolve);

      return deferred.promise();
    },

    'edit': function (id, attribute, fullscreen) {

      var self = this;
      var deferred = self.deferred();

      self.getResource(id).done(function (item) {

        if (item.attributes.completed) {
          deferred.resolve();
          return item.route();
        }

        self.open(item, {
          'attribute': attribute,
          'fullscreen': !!fullscreen
        }).done(deferred.resolve);
      }).fail(deferred.resolve);

      return deferred.promise();
    },

    'open': function (item, options) {

      var self = this;
      var deferred = self.deferred();
      var returnRoute = self.router.interfaceReturnRoute;

      options || (options = {});

      // only pass on the current route as the TDV return route
      // if it's not a route back to a task - in that case,
      // just keep whatever return route was set here before
      if (!returnRoute || returnRoute.indexOf('tasks/') < 0) {
        self.taskReturnRoute = returnRoute || 'lists/' + item.attributes.list_id;
      }

      self.requestComments(item);

      runtime.trigger('browser:taskId', item.id);

      self.outlet.openTask(item, {
        'editAttribute': options.attribute,
        'focusAttribute': options.focusAttribute,
        'returnRoute': self.taskReturnRoute,
        'options': {
          'fullscreen': options.fullscreen,
          'edit': options.openEdit
        }
      });

      self.setFocus(options);

      self.defer(deferred.resolve, deferred);

      return deferred.promise();
    },

    // send a runtime event to get the comments for this task, delayed
    // to avoid jank in the detail view
    'requestComments': function (task) {

      _.delay(function () {

        runtime.trigger('requestComments', task.attributes.online_id);
      }, 400);
    },

    'setFocus': function (options) {

      var focus = 'browser';

      if (options.fullscreen) {
        focus = 'fullscreenNote';
      }
      else if (options.attribute || options.focusAttribute) {
        focus = 'detail';
      }

      runtime.trigger('focus:set', focus);
    }
  });
});
define('routes/DebugRoutesController',[

  'application/runtime',
  './ModalRoutesController'

], function (
  runtime,
  ModalRoutesController,
  undefined
) {

  

  return ModalRoutesController.extend({

    'name': 'debug'
  });
});
define('routes/LabsRoutesController',[

  'application/runtime',
  './ModalRoutesController'

], function (
  runtime,
  ModalRoutesController,
  undefined
) {

  

  var _super = ModalRoutesController.prototype;

  return ModalRoutesController.extend({

    'name': 'labs',

    'beforeShow': function (deferred) {

      var self = this;

      if (!runtime.isLabsEnabled()) {

        deferred.resolve();
        runtime.trigger('route:lists/inbox');
      }
      else {

        _super.beforeShow.apply(self, arguments);
      }
    }
  });
});
define('routes/IYFRoutesController',[

  'application/runtime',
  './ModalRoutesController'

], function (
  runtime,
  ModalRoutesController,
  undefined
) {

  

  return ModalRoutesController.extend({

    'name': 'inviteYourFriends'
  });
});
define('routes/WhatsNewRoutesController',[

  'application/runtime',
  './ModalRoutesController'

], function (
  runtime,
  ModalRoutesController,
  undefined
) {

  

  return ModalRoutesController.extend({

    'name': 'whatsNew'
  });
});
define('routes/RateRoutesController',[

  'application/runtime',
  './ModalRoutesController'

], function (
  runtime,
  ModalRoutesController,
  undefined
) {

  

  return ModalRoutesController.extend({

    'name': 'rate'
  });
});
define('routes/TellRoutesController',[

  'application/runtime',
  './ModalRoutesController'

], function (
  runtime,
  ModalRoutesController,
  undefined
) {

  

  return ModalRoutesController.extend({

    'name': 'tell'
  });
});
define('routes/PreferencesRoutesController',[

  'application/runtime',
  './ModalRoutesController'

], function (
  runtime,
  ModalRoutesController,
  undefined
) {

  

  var _super = ModalRoutesController.prototype;

  return ModalRoutesController.extend({

    'name': 'preferences',
    'focus': 'settings',

    'show': function (section, subsection) {

      var self = this;

      self.section = section;
      self.subsection = subsection;
      self.translateSections();

      return _super.show.apply(self, arguments);
    },

    'beforeShow': function () {

      var self = this, router = self.router;

      if (router.previousRoute.indexOf('preferences') < 0) {
        _super.beforeShow.apply(self, arguments);
      }
    },

    'showModal': function () {

      var self = this, router = self.router;

      if (router.previousRoute.indexOf('preferences') < 0) {
        _super.showModal.apply(self, arguments);
      }

      runtime.trigger('settings:section', self.section, self.subsection);
    },

    'afterClose': function () {

      var self = this, router = self.router;

      if (self.returnRoute && self.returnRoute.indexOf('connect/facebook') >= 0) {
        self.returnRoute = router.defaultRoute;
      }

      _super.afterClose.apply(self, arguments);
    },

    'translateSections': function () {

      var self = this;

      if (self.section === 'account' && (self.subsection && self.subsection === 'pro') && !runtime.user.isUnregistered() && !runtime.user.isPro()) {
        self.section = 'account-pro';
      }

      if (self.section === 'teams' && (self.subsection && self.subsection === 'manage')) {
        self.section = 'team-manage';
      }

      if ((self.section === 'team-manage' || self.section === 'teams') && (runtime.user.isProTeamMember())) {
        self.section = 'account';
      }
    }
  });
});
define('routes/SearchRoutesController',[

  'application/runtime',
  'wunderbits/WBRoutesController'

], function (runtime, WBRoutesController, undefined) {

  

  return WBRoutesController.extend({

    'show': function (query) {

      var self = this;
      var deferred = self.deferred();
      var currentRoute = runtime.currentRoute();

      self.router.whenAuthorized(function () {

        var lastUrl = self.router.interfaceReturnRoute || self.router.defaultRoute;
        var interval = 2000;
        var shouldContinue = true;

        self.router.whenInterfaceHasLoaded().done(function () {

          self.router.outlet.goToPage('lists');
          self.router.outlet.activeView && self.router.outlet.activeView.toggleDetailView(false, false);

          self.router.whenDataHasLoaded().done(function () {

            shouldContinue = false;
          });

          function loop () {

            if (currentRoute !== runtime.currentRoute()) {
              return;
            }

            runtime.trigger('search:start', query, lastUrl, {
              'inboxID': 'inbox'
            });

            if (shouldContinue) {
              runtime.global.setTimeout(loop, interval);
            }
          }
          
          loop();

          deferred.resolve();
        });
      });

      return deferred.promise();
    }
  });
});
define('wunderbits/WBRouter',[

  './WBRuntime',
  './mixins/WBInstanceUtilitiesMixin',
  './mixins/WBBindableMixin',
  './mixins/WBEventsMixin',
  './mixins/WBDeferrableMixin'

], function (
  WBRuntime,
  WBInstanceUtilitiesMixin,
  WBBindableMixin, WBEventsMixin, WBDeferrableMixin,
  undefined
) {

  

  var runtime = WBRuntime;
  var $ = runtime.$;
  var _ = runtime._;
  var Backbone = runtime.Backbone;
  var window = runtime.global;

  var _super = Backbone.Router.prototype;
  var _hasReplaceState = window.history && window.history.replaceState;

  return Backbone.Router.extend({

    'implements': {},

    '_basicRoutes': {
      '': '_triggerDefault',
      '/': '_triggerDefault',
      ':route': '_trigger404',
      ':route/*subroute': '_trigger404'
    },

    'didFireSetRoute': {},

    'constructor': function (options) {

      var self = this;

      options || (options = {});
      self.outlet = options.outlet || self.outlet;

      WBInstanceUtilitiesMixin.applyTo(self);
      WBEventsMixin.applyTo(self);
      WBBindableMixin.applyTo(self);
      WBDeferrableMixin.applyTo(self);

//      w_.bindAll.apply(self, w_.functions(self));

      // Bind the router and the mediator for in-app route
      // changes using the mediators events
      self.bindTo(runtime, 'route', self.setRoute);

      this.isInitialRoute = true;

      _super.constructor.apply(self, arguments);

      self.params = {};

      self.implementControllers();

      return self;
    },

    // stub method to be implemented by subclasses
    // is called on route change, only when a callback exists
    // return false to prevent callback execution
    'before': function () {},

    // stub callback method for 404, to be implemented by subclasses
    'open404': function () {},

    // stub to be implemented by subclass, called when the router believes that a route is triggered by the user clicking the back or forward buttons, or when the browser history is programmatically changed - i.e. all route changes that did not pass through self.navigate
    'onBackOrForward': function () {},

    'triggerRoute': function () {

      var deferred = new $.Deferred();
      return deferred.resolve().promise();
    },

    'parseParams': function (query) {

      var params = {};
      var location = window.location;

      query = query || location.href.split(/\?|#/)[1] || '';

      if (query.length) {

        _.each(query.split('&'), function(fragment) {

          fragment = fragment.split('=');
          params[fragment[0]] = fragment[1] || null;
        });

        if(_hasReplaceState) {
          _.defer(function(){
            window.history.replaceState(null, 'noParams', location.pathname + location.hash);
          });
        }
      }

      return params;
    },

    'parseQueryString': function (string) {

      var vars = string.split('&');
      var params = {};

      for (var i = 0; i < vars.length; i++) {

        var pair = vars[i].split('=');
        if (pair[0].length && pair[1] && pair[1].length) {

          if (i === 0) {

            pair[0] = pair[0].indexOf('?') === 0 ? pair[0].substring(1) : pair[0];
          }

          params[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);
        }
      }

      return params;
    },

    'start': function () {

      var self = this;

      if (!self.hasStarted) {

        self.params = self.parseParams();

        // start the router, if not started already
        !Backbone.History.started && Backbone.history.start();
        self.hasStarted = true;
        self.trigger('started');
      }
    },

    '_trigger404': function () {

      this.open404();
    },

    '_triggerDefault': function () {

      var self = this;

      if (self.defaultRoute) {
        self.setRoute(self.defaultRoute);
      }
    },

    '_getRoutesHash': function () {

      var self = this;
      return _.extend(self.routes || {}, self._basicRoutes);
    },

    'implementControllers': function () {

      var self = this;
      self.controllers = {};

      for (var name in self.implements) {

        var Constructor = self.implements[name];

        self.controllers[name] = new Constructor({
          'outlet': self.outlet,
          'router': self
        });
      }
    },

    '_bindRoutes': function () {

      var self = this;
      self.routes = self._getRoutesHash();
      _super._bindRoutes.apply(self, arguments);
    },

    'route': function (route, callbackName) {

      var self = this;
      var wrapper = function () {

        var args = arguments;

        // if the route change came from browsers history back or forward,
        // then override any value set for this flag
        if (!self.didFireSetRoute[runtime.currentRoute()]) {

          self.shouldTriggerRoutes = null;
        }

        var beforeResult = self.before.apply(self, [route, callbackName]);

        var callback = typeof callbackName === 'function' ? callbackName : self[callbackName];

        // new rails style controller mapping
        if (callbackName.indexOf('#') > 0) {

          var parts = callbackName.split('#');
          var controller = self.controllers[parts[0]];
          var action = parts[1];
          callback = controller[action];
          controller.params = self.params;
        }

        if (beforeResult !== false && self.shouldTriggerRoutes !== false && typeof callback === 'function') {

          var doOpenRoute = function doOpenRoute () {

            var routing = new $.Deferred();
            self.routing = routing.promise();

            // cache the previous and current route before executing,
            // so that they're available in the callback
            self.previousRoute = self.currentRoute || '';
            self.currentRoute = runtime.currentRoute();

            var action = self.triggerRoute(self.currentRoute);

            action.done(function () {

              var done = callback.apply(self, args) || true;
              self.isInitialRoute = false;

              runtime.trigger('routed', self.currentRoute, self.previousRoute);

              $.when(done || true).then(routing.resolve);
            });
          };

          $.when(self.routing || true).then(doOpenRoute);
        }

        self.shouldTriggerRoutes = null;
      };

      _super.route.call(self, route, callbackName, wrapper);
    },

    'setRoute': function (route, options) {

      var self = this;

      options = options || {};

      options.params && _.each(options.params, function (value, key) {
        key = decodeURIComponent(key);
        value = decodeURIComponent(value);
        self.params[key] = value;
      });

      if (_.isArray(route)) {
        route = route[0];
      }

      // manually keep track of this flag to differentiate between
      // routes triggered by back/forward buttons and setRoute
      self.didFireSetRoute[route] = true;
      _.delay(function () {
        delete self.didFireSetRoute[route];
      }, 500);

      if (options.trigger === undefined) {
        options.trigger = true;
      }

      self.shouldTriggerRoutes = options.trigger;

      if (options.replace && _hasReplaceState) {

        window.history.replaceState(null, '', '#/' + route || '');
      }
      else if (!options.replaceOnly) {

        self.navigate('#/' + (route || ''), options);
      }
    }
  });
});
(function () {

  

  function _getFauxContentForType (type) {
    /* jshint indent: false */
    switch (type) {
      case 'string':
        return 'adjlksadklsaj';
      case 'array':
        return ['adas', 'kalsjd', 'lkasjda'];
      case 'number':
        return 718203;
      case 'date':
        return new Date();
      case 'boolean':
        return true;
      case 'function':
        return function () {};
      default:
        return {};
    }
  }

  function _errorFactory () {

    return {

      'classCheckAttribute': function (attribute, className) {
        return 'Attribute "' + attribute + '" must be instance of ' + className;
      },

      'typeCheckAttribute': function (attribute, type) {
        return 'Attribute "' + attribute + '" must be of type "' + type + '"';
      }
    };
  }

  define('wunderbits/errorFactory',_errorFactory);

})(window);
define('wunderbits/WBValidationHelper',[

  './lib/dependencies',
  './WBSingleton',
  './errorFactory'

], function (dependencies, WBSingleton, errorFactory, undefined) {

  

  var _ = dependencies._;

  function _capitalizeFirstLetter (string) {

    return string.charAt(0).toUpperCase() + string.slice(1);
  }

  return WBSingleton.extend({

    'isValidEmail': function(email){
      // this is a strict regex
      // var filter = /^([a-zA-Z0-9_\.\-\+])+\@(([a-zA-Z0-9\-])+\.)+([a-zA-Z0-9]{2,4})+$/g;
      // this is a much looser expression spaces, newlines, character before an after @ sign etc
      var filter = /^[^\s\n@]*[^\s\n\.@]\@[^\s\n\.@][^\s\n@]*(?=\.[^\s\.\n @]+$)\.[^\s\.\n @]+$/;
      // this weeks out double periods next to each other
      // var filter2 = /(?:\.\.)/;

      return email && filter.test(email);
    },

    'classCheckAttribute': function (hash, attribute, InstanceClass, instanceClassName) {

      if (!hash || !hash[attribute] || !hash[attribute].isInstanceOf || !hash[attribute].isInstanceOf(InstanceClass)) {
        var error = errorFactory.classCheckAttribute(attribute, instanceClassName);
        throw new Error(error);
      }

      return hash[attribute];
    },

    'typeCheckAttribute': function (hash, attribute, type) {

      var types = ['array', 'string', 'number', 'object', 'boolean', 'element', 'function'];

      if (!_.include(types, type) || !hash || !hash[attribute] || !_['is' + _capitalizeFirstLetter(type)](hash[attribute])) {
        var error = errorFactory.typeCheckAttribute(attribute, type);
        throw new Error(error);
      }

      return hash[attribute];
    },

    'isEqual': function (item1, item2) {

      return item1 === item2;
    },

    'isPasswordLengthOk': function (password) {

      return password.length >= 5;
    }
  });
});
define('applications/main/Router',[

  'application/runtime',
  'application/Redirector',

  'routes/TryRoutesController',
  'routes/OAuthRoutesController',
  'routes/StartRoutesController',
  'routes/FlashCardsRoutesController',
  'routes/TasksRoutesController',
  'routes/DebugRoutesController',
  'routes/LabsRoutesController',
  'routes/IYFRoutesController',
  'routes/WhatsNewRoutesController',
  'routes/RateRoutesController',
  'routes/TellRoutesController',
  'routes/PreferencesRoutesController',
  'routes/SearchRoutesController',

  'wunderbits/WBRouter',
  'wunderbits/WBValidationHelper'

], function (
  runtime,
  Redirector,
  TryRoutesController, OAuthRoutesController, StartRoutesController, FlashCardsRoutesController, TasksRoutesController, DebugRoutesController, LabsRoutesController, IYFRoutesController, WhatsNewRoutesController, RateRoutesController, TellRoutesController, PreferencesRoutesController, SearchRoutesController,
  WBRouter,
  WBValidationHelper,
  undefined
) {

  

  var nonAuthRoutes = [
    'login',
    'signup',
    'welcome',
    'forgot-password'
  ];

  var noAuthRequiredRoutes = [
    'shared'
  ];

  var _ = runtime._;
  var $ = runtime.$;

  var _super = WBRouter.prototype;

  return WBRouter.extend({

    'defaultRoute': 'lists/inbox',

    'implements': {
      'try': TryRoutesController,
      'oauth': OAuthRoutesController,
      'start': StartRoutesController,
      'flashcard': FlashCardsRoutesController,
      'tasks': TasksRoutesController,
      'debug': DebugRoutesController,
      'labs': LabsRoutesController,
      'iyf': IYFRoutesController,
      'whatsnew': WhatsNewRoutesController,
      'rate': RateRoutesController,
      'tell': TellRoutesController,
      'preferences': PreferencesRoutesController,
      'search': SearchRoutesController
    },

    'routes': {

      'try/login': 'try#showLogin',
      'try/signup': 'try#showSignup',
      'try': 'try#startTryMode',
      'try/*path': 'try#startTryMode',

      'setup/*path': 'start#startAppFirstTime',
      'start/*path': 'start#startApp',

      'me': 'openUserMenu',
      'activitycenter': 'openNotifications',

      'search': 'search#show',
      'search/:term': 'search#show',

      'labs': 'labs#show',
      'labs/flash-cards/:id': 'flashcard#runForList',

      'undefinedlists/:id': 'openListWithIDAndFixURL',

      'lists/:id': 'openListWithID',
      'lists/:id/share:tail': 'openListWithIDAndShare',
      'lists/:id/share': 'openListWithIDAndShare',
      'lists/:id/action/share': 'openListWithIDAndShare',
      'lists/:id/action/share:tail': 'openListWithIDAndShare',

      'lists/:id/edit': 'openListWithIDAndEdit',
      'lists/:id/tasks/new': 'openAddTaskToListWithID',

      'tasks/:id': 'tasks#show',
      'tasks/:id/:attr/focus': 'tasks#focus',
      'tasks/:id/:attr/edit': 'tasks#edit',
      'tasks/:id/:attr/edit/:fullscreen': 'tasks#edit',

      'tasks/:id/:attr/:fullscreen': 'tasks#show',


      'add/?*URI': 'addURIItemToInbox',

      'preferences/:section(/:subsection)': 'preferences#show',

      'shared/fb/:id': 'openSharedListWithFBRequestId',
      'shared/:id': 'openSharedListWithID',
      'shared/:id/:token': 'openSharedListWithID',

      'rate': 'rate#show',

      'tell-your-friends': 'tell#show',

      'whatsnew': 'whatsnew#show',

      'debug': 'debug#show',

      'inviteYourFriends': 'iyf#show',
      'invite-your-friends': 'iyf#show',

      'login/:access_token': 'oauth#checkForToken',
      ':access_token': 'oauth#checkForToken',

      // routes for pro payments
      'payment/:params': 'validatePayment'
    },

    'initialize': function (options) {

      var self = this;

      options = options || {};

      _super.initialize.apply(self, arguments);

      self.redirector = new Redirector();

      // reload app on logout
      runtime.user.on('deleted', function () {

        runtime.user.killCookie();

        if (runtime.env.isPackagedApp() || runtime.currentDomain().indexOf('beta') === 0) {
          runtime.reload('/login');
        }
        else {
          runtime.global.location.href = '/logout';
        }
      });

      self.listsDeferred = new $.Deferred();
      runtime.on('lists:ready', function () {

        self.listsDeferred.resolveWith(self, arguments);
      });

      self.tasksDeferred = new $.Deferred();
      runtime.on('tasks:ready', function () {

        self.tasksDeferred.resolveWith(self, arguments);
      });

      runtime.on('set:returnRouteAsInbox', self.setReturnRouteAsInbox);
    },

    'triggerRoute': function (route) {

      var deferred = new $.Deferred();
      var isNonAuthRoute = false;
      var isNoAuthRequiredRoute = false;
      var auth = runtime.user.getAuthorization();

      if (runtime.user.id === 'unregistered') {
        return deferred.resolve().promise();
      }

      var reload = function () {
        deferred.reject();
        var url = '/login/';
        if (route) {
          url += route;
        }
        runtime.reload(url);
      };

      for (var i = 0, max = nonAuthRoutes.length; i < max; i++) {
        if (route.indexOf(nonAuthRoutes[i]) === 0) {
          isNonAuthRoute = true;
        }
      }

      for (var i2 = 0, max2 = noAuthRequiredRoutes.length; i2 < max2; i2++) {
        if (route.indexOf(noAuthRequiredRoutes[i2]) === 0) {
          isNoAuthRequiredRoute = true;
        }
      }

      auth.done(function () {
        if (isNonAuthRoute) {
          reload();
        }
        else {
          deferred.resolve();
        }
      });

      auth.fail(function () {
        if (isNonAuthRoute) {
          reload();
        }
        else if (isNoAuthRequiredRoute) {
          deferred.resolve();
        }
        else {
          reload();
        }
      });

      return deferred.promise();
    },

    '_triggerDefault': function () {

      var self = this;

      // if (self.params.request_ids) {
      //   self.handleFacebookCallback();
      // }
      // else {

      runtime.user.getAuthorization()
        .done(function () {
          _super._triggerDefault.apply(self, arguments);
        })
        .fail(function () {
          self.setRoute('welcome');
        });
      // }
    },

    'whenAuthorized': function (callback) {

      var self = this;

      var wrapper = function () {

        runtime.trigger('timer:start');

        if (runtime.currentRoute().indexOf('edit') === -1) {
          runtime.trigger('sidebar:editmode:end');
        }

        callback();

        self.lastAuthRoute = runtime.currentRoute();
        runtime.trigger('update:lastAuthRoute', self.lastAuthRoute);

        self.updateInterfaceReturnURL();
      };

      runtime.user.getAuthorization()
        .done(wrapper)
        .fail(function () {
          runtime.user.killCookie();
          runtime.trigger('timer:stop');
          runtime.trigger('route:welcome');
        });
    },

    'open404': function (type) {

      var self = this;
      runtime.trigger('analytics:Application:404', runtime.currentRoute());

      var token;
      if (runtime.global.location.href.indexOf('access_token') >= 0) {
        token = runtime.global.location.href.split('access_token=')[1];
        token = token.split('&')[0];
        self.loginWithFBToken(token);
      }
      else if (runtime.user.attributes.token) {

        self.openDefault({'404': true});
        _.defer(function () {

          self.outlet.openTBV404(type);
        });
      }
      else if (runtime.global.location.href.indexOf('access_token') >= 0) {
        token = runtime.global.location.href.split('access_token=')[1];
        token = token.split('&')[0];
        self.loginWithFBToken(token);
      }
      else {

        runtime.trigger('route:welcome');
      }
    },

    'updateInterfaceReturnURL': function () {

      var self = this;
      var route = runtime.currentRoute();
      var nonInterfaceRoutes = ['me', 'activitycenter', 'debug', 'labs', 'inviteYourFriends', 'invite-your-friends', 'preferences', 'tell-your-friends', 'whatsnew', 'rate'];
      var isInterfaceRoute = true;

      if (route) {

        route = route.replace('/action/share', '');
        route = route.replace('/share', '');

        _.each(nonInterfaceRoutes, function (_route) {
          if (route.indexOf(_route) > -1) {
            isInterfaceRoute = false;
          }
        });
      }

      if (isInterfaceRoute) {
        self.interfaceReturnRoute = route;
      }
    },

    // returns a deferred which will resolve when the interface
    // has loaded, i.e. when the app view "page" event triggers
    'whenInterfaceHasLoaded': function () {

      var self = this;
      var deferred = new $.Deferred();
      var url = self.lastAuthRoute;

      var callback = function () {
        self.outlet.off('page', callback);
        _.defer(deferred.resolve);
      };

      self.outlet.on('page', callback);

      if (!url) {
        self.openDefault();
      }
      else {
        callback();
      }

      return deferred.promise();
    },

    'whenDataHasLoaded': function () {

      var self = this;
      var deferred = new $.Deferred();

      self.bindOnceTo(runtime, 'db:allDataLoaded', deferred.resolve);

      return deferred.promise();
    },

    // returns a deferred which will resolve when
    // interface has loaded with the list
    'whenListHasLoaded': function (id) {

      var self = this;
      var deferred = new $.Deferred();

      var callback = function () {

        self.outlet.off('page', callback);
        _.defer(deferred.resolve);
      };

      self.outlet.on('page', callback);
      self.openListWithID(id);

      return deferred.promise();
    },

    'openUserMenu': function () {

      var self = this;
      self.whenAuthorized(function () {

        var returnRoute = self.interfaceReturnRoute;

        var callback = function () {

          runtime.trigger('toolbar:userMenu:open', {
            returnRoute: returnRoute
          });
          runtime.trigger('focus:set', 'userMenu');
        };

        self.whenInterfaceHasLoaded().done(function () {

          self.outlet.goToPage('lists');

          if (!returnRoute || runtime.isSidebarVisible && !runtime.isSidebarAnimating) {

            callback();
          }
          else {

            runtime.trigger('sidebar:toggle', true, callback);
          }
        });
      });
    },

    'openNotifications': function () {

      var self = this;
      self.whenAuthorized(function () {

        var returnRoute = self.interfaceReturnRoute;

        self.whenInterfaceHasLoaded().done(function () {

          self.outlet.goToPage('lists');

          runtime.trigger('toolbar:notifications:open', {
            returnRoute: returnRoute
          });
          runtime.trigger('focus:set', 'notifications');
        });
      });
    },

    'setReturnRouteAsInbox': function () {

      var self = this;
      self.interfaceReturnRoute = 'lists/inbox';
    },

    'openDefault': function (options) {

      var self = this;
      self.whenAuthorized(function () {

        self.openListWithID('inbox', options);
      });
    },

    'addURIItemToInbox': function (URI) {

      var self = this;
      var obj = self.parseQueryString(URI) || {};

      // minimum requirement of a title!
      if (!obj.title) {

        return;
      }

      self.whenAuthorized(function () {

        self.tasksDeferred.done(function () {

          runtime.trigger('route:' + self.defaultRoute);
          runtime.once('sync:end', function () {

            runtime.trigger('add:fromURI', obj);
          });
          runtime.trigger('sync:start');
        });
      });
    },

    'openListWithIDAndEdit': function (id) {

      var self = this;

      if (id === 'inbox') {
        self.openDefault();
        return;
      }

      self.openListWithID(id, {
        'edit': true
      });

      _.delay(function () {
        runtime.trigger('sidebar:toggle', true);
        runtime.trigger('sidebar:edit', id);
        runtime.trigger('sidebar:editmode:start');
        runtime.trigger('focus:set', 'sidebar');
      }, self.isInitialRoute ? 1000 : 10);
    },

    'openListWithIDAndShare': function (id, tail, token) {

      var self = this;
      var isInitialRoute = self.isInitialRoute;
      var cameFromActionBar = runtime.currentRoute().indexOf('action/share') >= 0;
      var fbId, requestId;
      var shouldWait = isInitialRoute || (runtime.env.isMedium() && !runtime.isSidebarVisible);

      // If this is a landing page & coming back from facebook, create a fb share
      if (self.params) {

        requestId = self.params.request;
        fbId = self.params['to[0]'];
      }

      self.whenAuthorized(function () {

        var returnRoute = self.interfaceReturnRoute;

        // ask CollectionManager to create the share for the FB user
        requestId && fbId && runtime.trigger('share:create:fb', id, fbId, requestId);

        if (!returnRoute) {
          returnRoute = 'lists/' + id;
        }

        self.whenListHasLoaded(id).done(function () {

          runtime.trigger('shareDialog:open', {
            'listId': id,
            'cameFromActionBar': cameFromActionBar,
            'returnRoute': returnRoute,
            'token': token,
            'shouldWait': shouldWait
          });
        });
      });
    },

    'openAddTaskToListWithID': function (id) {

      var self = this;
      var url = self.lastAuthRoute;
      self.whenAuthorized(function () {
        self.listsDeferred.done(function () {

          self.outlet.goToPage('lists');
          if (url && url.indexOf('tasks') === -1) {
            self.openListWithID(id);
          }
          else if(!url) {
            self.openListWithID(id);
          }
          self.outlet.activeView && self.outlet.activeView.toggleDetailView(false, true);
          self.defer(self.outlet.setFocusToAddTask, self.outlet);

          if (runtime.env.isMini()) {
            runtime.trigger('sidebar:toggle', false);
          }
        });
      });
    },

    'openListWithIDAndFixURL': function (id) {

      var self = this;
      runtime.trigger('analytics:Error:undefinedInListRoute');
      self.setRoute('lists/' + id);
    },

    'openListWithID': function (id, options) {

      var self = this;
      var lastAuthRoute = self.lastAuthRoute;

      runtime.trigger('search:end');

      self.whenAuthorized(function () {
        self.listsDeferred.done(function (lists) {

          options || (options = {});

          var currentRoute = runtime.currentRoute();
          var currentURLContext = currentRoute && currentRoute.split('/')[0];
          var lastURLContext = self.lastAuthRoute && self.lastAuthRoute.split('/')[0];
          var acceptedListReturnRoutes = ['settings', 'activitycenter'];

          if (runtime.smartLists.indexOf(id) !== -1) {
            var inbox = lists.find(function (list) {
              return list.attributes.inbox;
            });

            runtime.trigger('browser:taskId', null);
            self.outlet.openFilter(id, {

              'inboxID': inbox.id,
              '404': options && options['404']
            });

            if (runtime.env.isMicro() || runtime.env.isMini()) {

              self.delay(function () {
                runtime.trigger('focus:set', 'browser');
                runtime.trigger('tasks:selectFirst');
              }, 10);
            }
            else {
              self._setFocusToSideBar();
            }
          }
          else {
            var list = lists.get(id);
            if (list) {

              runtime.trigger('browser:taskId', null);

              options.wasPreviousEditMode = lastAuthRoute === 'lists/' + id + '/edit';

              self.outlet.openList(list, options);
              if (currentURLContext === lastURLContext || !self.lastAuthRoute || _.indexOf(acceptedListReturnRoutes, lastURLContext) >= 0) {

                if (!options.wasPreviousEditMode && !options.edit && (runtime.env.isMicro() || runtime.env.isMini())) {

                  self.defer(function () {
                    runtime.trigger('focus:set', 'browser');
                    runtime.trigger('tasks:selectFirst');
                  }, 10);
                }
                else {
                  self._setFocusToSideBar();
                }
              }
            }
            else {

              var listFromOnlineId = lists.get(lists.getIdByAltId(id));
              if (listFromOnlineId) {

                runtime.trigger('route:lists/' + listFromOnlineId.id);
              }
              else {

                if (runtime.syncCount > 0) {

                  self.open404('list');
                }
                else {

                  runtime.once('sync:end', function () {

                    self.openListWithID(id, options);
                  });
                }
              }
            }
          }
        });
      });
    },

    'openLists': function () {

      var self = this;

      self.whenAuthorized(self.outlet.openLists);
    },

    'openSharedListWithID': function (id, urlToken) {

      var self = this;
      var userId, isCorrectId, userEmail;
      var splitToken = urlToken.split('?');
      var isRegistered = !!splitToken[1];
      var token = splitToken[0];

      runtime.io.get('/' + id, {

        'signature': token
      }).done(function (share) {

        runtime.user.hasFetched.done(function () {

          userId = runtime.user.attributes.id;
          userEmail = runtime.user.attributes.email;
          isCorrectId = userId && share.recipient.id === userId;

          // Please leave this comment for debugging purposes:
          // console.log('userId:', userId, 'userEmail:', userEmail, 'isCorrectId:', isCorrectId);

          if (isCorrectId) {

            // when the logged in user is the recipient of a share and an activated user,
            // we automatically accept the share on this url, which
            // is the url distributed in the notificaton mail
            runtime.once('sync:end', function () {

              runtime.trigger('share:accept', share, {

                'isViaMiniSite': true
              });
            });

            runtime.trigger('sync:start', true, 'minisite');
          }
          else if (userEmail && (share.recipient.provider_id === userEmail)) {

            // If user is logged in, and ids do not match, but emails match, show them the minisite instead
            self.outlet.openMiniSite(share);
          }
          else {

            // if the logged in user is not the recipient, we
            // log out the current user and show the mini site
            // and if not logged in at all, just show the mini site

            self.navigate('/', {'trigger': false});

            if (userId) {

              // logout incorrect user, and reroute for a registered user
              var registeredString = isRegistered ? '?registered=true': '';
              runtime.user.forceLogout('/shared/' + id + '/' + token + registeredString);
              return;
            }
            else if (isRegistered) {

              // show minisite to logged out, but registered user
              share.isRegistered = true;
              self.outlet.openMiniSite(share);
              return;
            }

            // user is not a registered user
            self.outlet.openMiniSite(share);
          }
        });
      }).fail(function () {

        // if fails show mini site 404 page or generic list 404 for logged in user
        runtime.user.hasFetched.done(function () {

          if (runtime.user.attributes.token) {
            // when logged in show list 404
            self.openDefault();
            runtime.interfaceReady.done(function () {
              // open default list first, then render 404 when interface is loaded
              self.open404('list');
            });
          }
          else {
            // if logged out show minisite 404
            self.outlet.openMiniSite();
          }
        });
      });
    },

    'openSharedListWithFBRequestId': function(id) {

      var self = this;
      runtime.io.get('/shares/fb', {
        'fb_request_id' : id
      }).done(function(share) {

        var recipient = share.recipient;
        runtime.user.hasFetched.done(function () {

          var userEmail = runtime.user.attributes.email;
          var userId = runtime.user.id;
          var facebookId = runtime.user.attributes.facebook_id;

          if((recipient.provider_type === 'facebook' && recipient.provider_id === facebookId) ||
            (userId && !recipient.provider_type && recipient.id === userId) ||
            (userEmail && recipient.email === runtime.user.attributes.email)) {

            runtime.trigger('share:accept', share, {
              'isViaMiniSite': true
            });
          } else {
            self.outlet.openMiniSite(share);
          }
        });
      }).fail(function() {
        self.open404('list');
      });
    },

    _setFocusToSideBar: function () {

      runtime.trigger('focus:set', 'sidebar');
    },

    'validatePayment':  function (status) {

      var self = this;
      var isAuthorisedRoute = status === 'authorised';
      var landingRoutes = ['preferences/account', 'preferences/team-manage'];
      var product, groupProduct;

      // wait till the data is ready
      self.whenAuthorized(function () {

        self.listsDeferred.done(function () {

          // report that cash money $$$
          var reportToAnalytics = function () {

            product = runtime.user.attributes.product;
            groupProduct = runtime.user.attributes.group_product;

            if (product && product.product_id) {

              status = status + ':' + product.product_id;
            }
            else {

              status = isAuthorisedRoute ? status + ':' + 'noProductSyncedForUser:' + runtime.user.id : status;
            }

            runtime.trigger('analytics:ProAccounts:returnStatus', status);
          };

          if (isAuthorisedRoute) {

            self.outlet.showLoading();

            runtime.once('sync:end', function () {

              self.outlet.hideLoading();
              self.whenListHasLoaded('inbox').done(function () {

                var preferenceRoute = groupProduct ? 1: 0;

                if (!runtime.user.isPro() && runtime.user.attributes.group_product) {

                  runtime.trigger('groupProduct:addAdmin');
                }

                self.delay(self.setRoute, 800, self, landingRoutes[preferenceRoute]);
              });

              reportToAnalytics();
            });

            runtime.trigger('sync:start', true, 'payment');
          }
          else {

            self.whenListHasLoaded('inbox').done(function () {
              self.setRoute('preferences/account');
            });

            reportToAnalytics();
          }
        });
      });
    }
  });
});
define('wunderbits/helpers/SafeParse',[

  './console',
  '../WBSingleton'

], function (console, WBSingleton, undefined) {

  

  return WBSingleton.extend({

    'json': function (jsonString) {

      var data;
      try {
        data = JSON.parse(jsonString);
      }
      catch (e) {
        console.warn('Unable to parse "' + jsonString + '"');
      }

      return data;
    }
  });
});
define('backend/database/memory',[

  'wunderbits/WBRuntime',
  'wunderbits/helpers/SafeParse',
  'wunderbits/WBSingleton'

], function (WBRuntime, SafeParse, WBSingleton, undefined) {

  

  var $ = WBRuntime.$;
  var _ = WBRuntime._;

  var global = WBRuntime.global;
  var isTruncating = false;
  var cache, storeFieldMap, dbDeferred, infoLog, localStorageAvailable;

  function connect (options) {

    infoLog = options.infoLog;
    localStorageAvailable = options.localStorageAvailable;

    // On every version change, clear out the localStorage & try again for a better backend
    if (localStorageAvailable) {
      var store = global.localStorage;
      var indexedDB = global.indexedDB || global.webkitIndexedDB || global.mozIndexedDB || global.msIndexedDB;
      if (store.getItem('availableBackend') === 'memory' && store.getItem('dbVersion') !== '' + options.dbVersion) {
        // clear localStorage
        store.clear();
        // If IDB is available, clear that too
        if(indexedDB) {
          var transaction = indexedDB.deleteDatabase(options.dbName);
          // Wait till the database is deleted before reloading the app
          transaction.onsuccess = transaction.onerror = function() {
            global.location.reload();
          };
        }
        // Otherwise, reload right away
        else {
          global.location.reload();
        }
      }
    }

    dbDeferred = new $.Deferred();

    storeFieldMap = options.storeFieldMap;

    !cache && reset();
    dbDeferred.resolve();

    infoLog('db ready');

    return dbDeferred.promise();
  }

  function read (storeName, instance, options) {

    dbDeferred.then(function() {

      var val;
      var meta = storeFieldMap[storeName];

      if (localStorageAvailable && meta.critical) {

        val = global.localStorage[storeName + '_' + instance.get(meta.keyPath || 'id')];
        val && (val = SafeParse.json(val));
      }
      else {

        val = cache[storeName][instance.id];
      }

      setTimeout(function () {

        if (val !== undefined) {

          (typeof options.success === 'function') && options.success(val);
        }
        else {

          (typeof options.error === 'function') && options.error(val);
        }
      }, 50);
    });
  }

  function query (storeName, collection, options) {

    dbDeferred.then(function() {

      options.success(_.toArray(cache[storeName]));
    });
  }

  function update (storeName, instance, options) {

    if (isTruncating) {
      return;
    }

    dbDeferred.then(function () {

      var json = instance.toJSON();
      var meta = storeFieldMap[storeName];

      if (localStorageAvailable && meta.critical) {
        global.localStorage[storeName + '_' + instance.get(meta.keyPath || 'id')] = JSON.stringify(json);
      }
      else {
        cache[storeName][instance.id] = json;
      }

      options.success();
    });
  }

  function destroy (storeName, instance, options) {

    dbDeferred.then(function() {

      options.success(delete cache[storeName][instance.id]);
    });
  }

  function reset () {

    cache = {};
    _.each(storeFieldMap, function(metaData, storeName) {

      cache[storeName] = {};
    });
  }

  function truncate (callback) {

    isTruncating = true;

    reset();
    localStorageAvailable && global.localStorage.clear();

    isTruncating = false;

    setTimeout(function () {

      if (_.isFunction(callback)) {

        callback();
      }

      WBRuntime.trigger('db:truncated');
    }, 50);

    return (new $.Deferred()).resolve();
  }

  return WBSingleton.extend({
    'connect': connect,
    'truncate': truncate,
    'read': read,
    'query': query,
    'update': update,
    'destroy': destroy
  });

});
define('backend/database/websql',[

  'wunderbits/WBRuntime',
  'wunderbits/helpers/SafeParse',
  'wunderbits/WBSingleton'

], function (WBRuntime, SafeParse, WBSingleton, undefined) {

  

  var $ = WBRuntime.$;
  var _ = WBRuntime._;
  var Backbone = WBRuntime.Backbone;

  var global = WBRuntime.global;

  var isTruncating = false;
  var DB, storeFieldMap, defaultKeyPath, infoLog, errorLog;

  var migrationData = {};

  // Generate SQLs, WebSQL's formatter blows
  function _printf (text) {

    var i = 1, args = arguments;

    return text.replace(/\?/g, function () {

      var val = args[i++];
      // http://jsperf.com/type-of-undefined-vs-undefined/9
      if (val === void 0) {

        return '';
      }

      return val;
    });
  }

  /**
   * Execute SQL
   * @param sql - sql string or template
   * other arguments are used for rendering templates & last argument if a function, is used for callback
   */
  function _execute (sql) {

    var args = Array.prototype.slice.call(arguments, 0);
    var callback;

    if (typeof args[args.length - 1] === 'function') {

      callback = args.pop();
    }
    else {

      callback = function () {

        infoLog([args].concat(arguments));
      };
    }

    sql = _printf.apply(null, args);

    DB.transaction(function (tx) {

      tx.executeSql(sql, [], function executeSqlCallback (t, result) {

        callback(null, result);
      }, function (t, err) {

        errorLog(err, sql);
        callback(err);
      });
    });
  }

  /**
   * Convert results object to an array of row objects
   * @param - SQLResult object
   */
  function _resultToArray (result, fields) {

    var rows = result.rows;
    var count = rows.length;
    // http://jsperf.com/declare-array-length
    var returnRows = new Array(count);

    var json, name, type, value, data, returnObj;

    for (var index = 0; index < count; index++) {

      if (!fields) {
        json = global.unescape(rows.item(index).json);
        returnRows[index] = SafeParse.json(json);
      }
      else {
        data = rows.item(index);
        returnObj = {
          'id': data.id
        };

        for (name in fields) {
          type = fields[name];
          value = data[name];

          if (value !== void 0) {
            if (type !== 'NUM' && type !== 'INT') {

              // don't unescape nulls & undefineds
              value = value && global.unescape(value);

              if (type === 'boolean') {
                value = value === 'true';
              }
              else if (value === '') {
                value = null;
              }
            }

            if (name === 'completed_at') {
              returnObj.completed = !!value;
            }

            returnObj[name] = value;
          }
        }

        returnRows[index] = returnObj;
      }
    }

    return returnRows;
  }

  var createTableSQL = 'CREATE TABLE IF NOT EXISTS ? (? TEXT PRIMARY KEY, ?)';
  function _createTable (storeInfo, storeName) {

    var deferred = new $.Deferred();
    var keyPath = storeInfo.keyPath || defaultKeyPath;
    var fields = storeInfo.fields;
    var sql;

    if (!fields) {
      sql = _printf(createTableSQL, storeName, keyPath, 'json TEXT');
    }
    else {
      if (keyPath === 'id') {
        delete fields.id;
      }

      var columns = [];
      _.each(fields, function (type, name) {

        if (type !== 'NUM' && type !== 'INT' && type !== 'TEXT') {
          type = 'TEXT';
        }

        columns.push(name + ' ' + type);
      });

      sql = _printf(createTableSQL, storeName, keyPath, columns.join(', '));
    }

    _execute(sql, function (err) {

      if (err) {
        deferred.reject();
      }
      else {
        deferred.resolve();
      }
    });
    return deferred.promise();
  }


  var querySQL = 'SELECT * from ?';
  function query (storeName, collection, options) {

    storeName || (storeName = collection.model.prototype.storeName);
    var fields = storeFieldMap[storeName] && storeFieldMap[storeName].fields;

    _execute(querySQL, storeName, function queryExecuteCallback (err, result) {

      if (err) {
        throw err;
      }

      options.success(_resultToArray(result, fields));
    });
  }

  var readSQL = 'SELECT * from ? WHERE ?=\'?\' LIMIT 1';
  function read (storeName, instance, options) {

    if (instance.id || instance.cid) {

      var fields = storeFieldMap[storeName].fields;
      var keyPath = storeFieldMap[storeName].keyPath || defaultKeyPath;
      var id = instance.attributes[keyPath] || instance.id;

      _execute(readSQL, storeName, keyPath, id, function readExecuteCallback (err, result) {

        if (err) {
          options.error(err);
        }
        else if (result.rows.length === 0) {
          options.error('object not found');
        }
        else {
          options.success(_resultToArray(result, fields)[0]);
        }
      });
    }
    else {
      // Looks like a collection, Query instead
      query(storeName, instance, options);
    }
  }

  var upsertSQL = 'INSERT OR REPLACE INTO ? (?) VALUES (?)';
  function update (storeName, model, options) {

    if (isTruncating) {
      return;
    }

    var keyPath = storeFieldMap[storeName].keyPath || defaultKeyPath;
    var id = model.attributes[keyPath] || model.id;
    var keys = [keyPath];
    var values = ['\'' + id + '\''];
    var fields = storeFieldMap[storeName].fields;

    var name, type, value, json;

    if (!fields) {
      json = model.attributes;
      keys.push('json');
      values.push('\'' + global.escape(JSON.stringify(json)) + '\'');
    }
    else {

      for (name in fields) {

        type = fields[name];
        value = model.attributes[name];

        if (value !== void 0) {

          if (type === 'NUM' || type === 'INT') {
            value = (!!value) ? value : 0;
          }
          else {
            value = (value !== null) ? '\'' + global.escape(value) + '\'' : 'NULL';
          }

          keys.push(name);
          values.push(value);
        }
      }
    }

    try {

      _execute(upsertSQL, storeName, keys.join(', '), values.join(', '), function updateExecuteCallback (err) {

        if (err) {
          errorLog(err);
          options.error(err);
        }
        else {
          options.success();
        }
      });
    }
    catch (e) {
      errorLog(e);
    }
  }

  var deleteSQL = 'DELETE FROM ? WHERE ?=\'?\'';
  function destroy (storeName, model, options) {

    var keyPath = storeFieldMap[storeName].keyPath || defaultKeyPath;
    var id = model.attributes[keyPath] || model.id;

    _execute(deleteSQL, storeName, keyPath, id, function destroyExecuteCallback (err) {

      if (err) {
        options.error('failed deleting');
      }
      else {
        options.success();
      }
    });
  }

  var deleteAllSQL = 'DROP TABLE IF EXISTS ?';
  function _emptyTable (storeInfo, storeName) {

    var deferred = new $.Deferred();

    _execute(deleteAllSQL, storeName, function emptyTableExecuteCallback () {

      _createTable(storeFieldMap[storeName], storeName)
        .done(deferred.resolve)
        .fail(deferred.reject);
    });

    return deferred.promise();
  }

  // Clean up the DB
  function truncate (callback) {

    isTruncating = true;

    var deferred = new $.Deferred();

    var deferreds = _.map(storeFieldMap, _emptyTable);

    $.when.apply($, deferreds).done(function () {

      isTruncating = false;

      deferred.resolve();
      (typeof callback === 'function') && callback();
      WBRuntime.trigger('db:truncated');
    }).fail(function () {

      deferred.reject();
    });

    return deferred.promise();
  }

  function _getTables () {

    var tablesSQL = "SELECT * FROM sqlite_master WHERE type='table'";
    var tablesDeferred = new $.Deferred();

    _execute(tablesSQL, function getTablesExecuteCallback (err, result) {

      if (err) {
        tablesDeferred.reject();
      }
      else if (result.rows.length <= 1) {
        tablesDeferred.reject();
      }
      else {
        var rows = result.rows;
        var count = rows.length;
        var tables = [];

        for (var index = 0; index < count; index++) {
          var data = rows.item(index);
          tables.push(data.name);
        }

        tablesDeferred.resolve(tables);
      }
    });

    return tablesDeferred.promise();
  }

  function _checkSchema (storeFieldMap) {

    var schemaDeferred = new $.Deferred();

    var tablesPromise = _getTables();

    tablesPromise.fail(schemaDeferred.reject);

    tablesPromise.then(function (tables) {

      _.each(storeFieldMap, function (val, name) {

        if (_.indexOf(tables, name) === -1) {
          schemaDeferred.reject();
        }
      });

      schemaDeferred.resolve();
    });

    return schemaDeferred.promise();
  }

  function connect (options) {

    storeFieldMap = options.storeFieldMap;
    defaultKeyPath = options.defaultKeyPath;
    infoLog = options.infoLog;
    errorLog = options.errorLog;

    var dbDeferred = new $.Deferred();

    // in the event that safari is broken after an update
    var initTimeout = setTimeout(function () {

      dbDeferred.reject();
    }, 2000);

    dbDeferred.done(function () {

      clearTimeout(initTimeout);
    });

    try {
      // Safari needs the DB to initialized with **exactly** 5 mb storage
      DB = global.openDatabase(options.dbName, '', options.dbName, (5 * 1024 * 1024));
    }
    catch (e) {
      console.warn(e);
      dbDeferred.reject();
    }

    // check db version first, if not same, build tables
    var dbVersion = '' + options.dbVersion;
    if (DB.version !== dbVersion) {

      infoLog('version mismatch');
      WBRuntime.publish('database:upgraded');
      readAllForMigration().then(function () {

        DB.changeVersion(DB.version, dbVersion, function () {

          truncate().done(function () {

            var deferreds = _.map(storeFieldMap, _createTable);

            $.when.apply($, deferreds).done(function () {

              infoLog('db rebuilt');
              writeAllForMigration().then(dbDeferred.resolve);
            });
          }).fail(function () {

            dbDeferred.reject();
          });
        });
      });
    }
    else {
      // don't trust the db version, check the actual table structure
      // if it ain't right, fix it
      var check = _checkSchema(storeFieldMap);
      check.then(function () {

        infoLog('correct schema');
        dbDeferred.resolve();
      });

      check.fail(function () {

        infoLog('wrong schema');
        readAllForMigration().then(function () {

          truncate().done(function () {

            var deferreds = _.map(storeFieldMap, _createTable);

            $.when.apply($, deferreds).done(function () {

              infoLog('db rebuilt');
              writeAllForMigration(dbDeferred.resolve);
            });
          }).fail(function () {

            dbDeferred.reject();
          });
        });
      });
    }

    return dbDeferred.promise();
  }

  function readAllForMigration () {

    infoLog('migrating any existing data');

    var deferred = new $.Deferred();
    var tableDeferreds = [];

    _getTables().always(function (tables) {

      _.each(tables, function (table, idx) {

        // ignore browser websql special tables & tables not in the map
        if (/^[^\_]/.test(table) && (table in storeFieldMap)) {

          infoLog('reading ' + table);
          tableDeferreds[idx] = new $.Deferred();
          query(table, null, {

            'success': function (data) {

              migrationData[table] = data;
              tableDeferreds[idx].resolve();
            }
          });
        }
      });

      if (tableDeferreds.length) {

        $.when.apply($, tableDeferreds).done(function () {

          deferred.resolve();
        });
      }
      else {

        deferred.resolve();
      }
    });

    return deferred.promise();
  }

  function writeAllForMigration () {

    infoLog('writing existing data to new database');

    var updateDeferreds = [];
    var deferred = new $.Deferred();

    _.each(migrationData, function (data, storeName) {

      if (_.size(data)) {

        infoLog('writing ' + storeName);

        _.each(data, function (obj) {

          updateDeferreds[obj.id] = new $.Deferred();
          var model = new Backbone.Model(obj);
          update(storeName, model, {
            'success': function () {

              updateDeferreds[obj.id].resolve();
            }
          });
        });
      }

      delete migrationData[storeName];
    });

    if (updateDeferreds.length) {
      $.when.apply($, updateDeferreds).then(deferred.resolve);
    }
    else {
      deferred.resolve();
    }

    return deferred.promise();
  }

  return WBSingleton.extend({
    'connect': connect,
    'truncate': truncate,
    'read': read,
    'query': query,
    'update': update,
    'destroy': destroy
  });

});
define('backend/database/indexeddb',[

  'wunderbits/WBRuntime',
  'wunderbits/WBSingleton'

], function(WBRuntime, WBSingleton, undefined) {

  

  var $ = WBRuntime.$;
  var _ = WBRuntime._;

  var global = window;

  var dbDeferred = new $.Deferred();

  var isTruncating = false;
  var DB, storeFieldMap, defaultKeyPath, infoLog, errorLog;
  var dbVersion, dbName;
  var migrationData = {};
  var upgrading = false;

  // We are using indexeddb synchronously
  var indexedDB = global.indexedDB || global.webkitIndexedDB || global.mozIndexedDB || global.msIndexedDB;

  var IDBTransactionModes = {
    'read': 'readonly',
    'write': 'readwrite'
  };

  // break the stack & give UI some time to breath
  // IE & FF don't like long running scripts
  function nextTick () {
    var args = [].slice.call(arguments);
    var next = args.shift();
    global.setTimeout(function () {
      next.apply(null, args);
    }, 10);
  }

  // Create Object Store with a keypath
  function _createStore (db, storeName) {

    if (!db.objectStoreNames.contains(storeName)) {
      db.createObjectStore(storeName, {
        'keyPath': storeFieldMap[storeName].keyPath || defaultKeyPath
      });
    }
  }

  function clearStore (info, storeName) {

    var deferred = new $.Deferred();
    var transaction = DB.transaction([storeName], IDBTransactionModes.write);
    var store = transaction.objectStore(storeName);
    var clearRequest = store.clear();

    clearRequest.onsuccess = function () {
      deferred.resolve();
    };

    clearRequest.onerror = function (e) {
      console.error(e);
      deferred.resolve();
    };

    return deferred.promise();
  }

  // Clear all object stores
  function truncate (callback) {

    isTruncating = true;

    var deferreds = _.map(storeFieldMap, clearStore);

    $.when.apply($, deferreds).then(function () {

      isTruncating = false;
      if (typeof callback === 'function') {
        callback();
      }

      WBRuntime.trigger('db:truncated');
    });
  }

  function _upgradeNeeded (e) {

    upgrading = true;
    infoLog('upgrade needed');
    WBRuntime.publish('database:upgraded');

    var db = e.target.result.db || e.target.result;

    Object.keys(storeFieldMap).forEach(function (storeName) {
      _createStore(db, storeName);
    });

    _dbReady(db);
  }

  function _dbReady (db) {

    DB = db;
    infoLog('DB ready');

    // clean this up if no upgraded needed
    migrationData && (migrationData = null);
    global.setTimeout(dbDeferred.resolve, 100);
  }

  function handleIDBOpenError (e) {

    // Scum bag user refused IDB storage or in private mode
    // Force memory mode
    if(!WBRuntime.env.isPackagedApp()) {
      infoLog('switching to memory', e);
      WBRuntime.trigger('analytics:db:memoryFallback', 'indexeddb');
      global.localStorage.setItem('availableBackend', 'memory');
      global.localStorage.setItem('dbVersion', '' + dbVersion);
      global.location.reload();
    }
  }

  function connect (options) {

    storeFieldMap = options.storeFieldMap;
    defaultKeyPath = options.defaultKeyPath;
    infoLog = options.infoLog;
    errorLog = options.errorLog;
    dbVersion = options.dbVersion;
    dbName = options.dbName;

    var promise = dbDeferred.promise();

    var dbOpenReq;
    try {
      dbOpenReq = indexedDB.open(dbName, dbVersion);
    }
    catch (e) {
      handleIDBOpenError();
      return promise;
    }

    dbOpenReq.onsuccess = function (e) {

      var db = e.target.result;
      if (typeof db.version === 'string'){
        throw new Error('unsupported/old indexeddb api');
      }

      _.delay(function () {

        // ie10 fires both upgrade needed and sucdess at the same time, if we are performing an upgrade,
        // the upgrade handler resolve the db ready
        if (!upgrading) {

          _dbReady(db);
        }
      }, 50);
    };

    dbOpenReq.onerror = handleIDBOpenError;
    dbOpenReq.onupgradeneeded = _upgradeNeeded;
    dbOpenReq.onblocked = errorLog;

    return promise;
  }


  var errorMsg = 'failed reading from the database';
  function query (storeName, collection, options) {

    var _db = options.db || DB;

    storeName || (storeName = collection.model.prototype.storeName);
    var readTransaction = _db.transaction([storeName], IDBTransactionModes.read);
    //readTransaction.oncomplete = infoLog;
    var store = readTransaction.objectStore(storeName);
    var elements = [];
    var readCursor = store.openCursor();

    if (readCursor === undefined || !readCursor) {

      errorLog(errorMsg);
      options.error(errorMsg);
    }
    else {

      readCursor.onerror = errorLog;
      readCursor.onsuccess = function (e) {

        var cursor = e.target.result;

        if (!cursor) {
          // We're done. No more elements.
          nextTick(options.success, elements);
        }
        else {
          // We have more records to process
          elements.push(cursor.value);
          cursor['continue']();
        }
      };
    }
  }

  function read (storeName, instance, options) {

    var _db = options.db || DB;

    if (instance.id || instance.cid) {

      var readTransaction = _db.transaction([storeName], IDBTransactionModes.read);
      //readTransaction.oncomplete = infoLog;
      var store = readTransaction.objectStore(storeName);
      var key = store.keyPath || defaultKeyPath;
      var getRequest = store.get(instance.get(key) || instance.id);

      getRequest.onerror = errorLog;
      getRequest.onsuccess = function (e) {

        var json = e.target.result;
        if (json) {
          nextTick(options.success, json);
        }
        else {
          nextTick(options.error, 'object not Found');
        }
      };
    }
    else {
      // Looks like a collection, Query instead
      query(storeName, instance, options);
    }
  }

  function update (storeName, model, options) {

    var _db = options.db || DB;

    if (isTruncating) {
      return;
    }

    var json = model.toJSON();

    // wrap writes in try catch to handle invalid transaction states
    try {
      var writeTransaction = _db.transaction([storeName], IDBTransactionModes.write);
      var store = writeTransaction.objectStore(storeName);
      var writeRequest = store.put(json);

      writeRequest.onerror = errorLog;
      writeRequest.onsuccess = function () {

        nextTick(options.success);
      };
    }
    catch (e) {

      errorLog(e);
    }
  }

  function destroy (storeName, model, options) {

    var writeTransaction = DB.transaction([storeName], IDBTransactionModes.write);
    // writeTransaction.oncomplete = infoLog;
    var store = writeTransaction.objectStore(storeName);
    var key = store.keyPath || defaultKeyPath;
    var deleteRequest = store['delete'](model.get(key) || model.id);

    deleteRequest.onerror = errorLog;
    deleteRequest.onsuccess = function () {

      nextTick(options.success);
    };
  }

  return WBSingleton.extend({
    'connect': connect,
    'truncate': truncate,
    'read': read,
    'query': query,
    'update': update,
    'destroy': destroy
  });

});

define('backend/database',[

  'wunderbits/WBRuntime',

  'backend/database/memory',
  'backend/database/websql',
  'backend/database/indexeddb',

  'wunderbits/WBSingleton'

], function (
  WBRuntime,
  memBackend, sqlBackend, idbBackend,
  WBSingleton,
  undefined
) {

  

  var Backbone = WBRuntime.Backbone;
  var $ = WBRuntime.$;
  var _ = WBRuntime._;

  var global = WBRuntime.global;
  var _logger = WBRuntime.console;

  var dbName = 'wunderlist';
  var dbVersion = 14;

  // shared fields for stores that use custom field-map
  var commonFields = {
    'id': 'TEXT',
    'online_id': 'TEXT',
    'type': 'TEXT',
    'owner_id': 'TEXT',
    'local_identifier': 'TEXT'
  };

  // ********* IMPORTANT *********
  // NEVER EVER REMOVE AN OBJECT-STORE FROM THIS MAP, EVER
  var storeFieldMap = {

    'contacts': {},
    'googleContacts': {},
    'quotas': {},
    'lists': {
      'fields': {
        'updated_at': 'datetime',
        'position': 'NUM',
        'title': 'TEXT',
        'hasUnreadComments': 'boolean'
      }
    },
    'tasks': {
      'fields': {
        'assignee_id':'TEXT',
        'created_at': 'datetime',
        'updated_at': 'datetime',
        'completed_at': 'datetime',
        'completed_by_id': 'TEXT',
        'created_by_id': 'TEXT',
        'due_date': 'datetime',
        'list_id': 'TEXT',
        'online_list_id': 'TEXT',
        'note': 'TEXT',
        'position': 'NUM',
        'recurrence_count': 'NUM',
        'recurrence_type': 'TEXT',
        'starred': 'boolean',
        'title': 'TEXT',
        'hasUnreadComments': 'boolean',
        'unreadCount': 'TEXT',
        'hasComments': 'boolean',
        'allCommentsLoaded': 'boolean'
      },
      'fullTextIndexFields': ['title', 'note', 'assignee_id']
    },
    'shares': {},
    'reminders': {},
    'services': {},
    'assignables': {},
    'notifications': {},
    'storage': {},
    'user': {
      'critical': true,
      'keyPath': '_key'
    },
    'files': {},
    'comments': {},
    'invoices': {}
  };

  // subtask store uses same schema as the tasks .. but with extra fields
  storeFieldMap.subtasks = {
    'fields': _.extend({}, storeFieldMap.tasks.fields, {
      'parent_id': 'TEXT',
      'online_parent_id': 'TEXT'
    })
  };

  // Default id Attribute used
  var defaultKeyPath = Backbone.Model.prototype.idAttribute || 'id';

  var _queryFn, _crudOps;
  var dbDeferred = new $.Deferred();
  var localStorageAvailable = true;
  var availableBackend;

  // Test for available storage-backends
  function _findAvailableBackend (requestedBackend) {

    // Force IndexedDB on packaged-app
    if (WBRuntime.env.isPackagedApp()) {
      return 'indexeddb';
    }

    var backendTests = {
      'websql': ['openDatabase'],
      'indexeddb': ['indexedDB', 'webkitIndexedDB', 'mozIndexedDB', 'msIndexedDB']
    };

    // way to force a specific backend on init (used by tests)
    if (requestedBackend && backendTests[requestedBackend]) {
      var test = backendTests[requestedBackend];
      backendTests = {};
      backendTests[requestedBackend] = test;
    }

    // IF this check has been run previously, load from localStorage
    // But, don't break the app if local storage is not available (disabled by the user)!
    try {
      // throws exception in chrome when cookies are disabled
      availableBackend = global.localStorage.getItem('availableBackend');
    }
    catch (e) {
      // If localStorage lookup fails, we probably have no storage at all
      // Use memory
      localStorageAvailable = false;
      availableBackend = 'memory';
      //document.write('HTML5 local storage (controlled by your cookie settings) is required in order use wunderlist.');
    }

    if (availableBackend === 'memory') {
      return availableBackend;
    }

    function _tester (test) {

      return !!global[test];
    }

    // Test for available storage options, but use memory backend for tests
    for (var _backend in backendTests) {
      if (_.any(backendTests[_backend], _tester)) {
        availableBackend = _backend;
        break;
      }
    }

    // If none-available, use in-memory as default
    return availableBackend || 'memory';
  }

  // Define the loggers
  function _initLogger (label) {

    return {
      'info': _.bind(_logger.info, _logger, '[' + label + ']'),
      'error': _.bind(_logger.error, _logger, '[' + label + ']')
    };
  }

  // Define getAll for the app to load all data in the beginning
  function getAll (storeName, callback) {

    dbDeferred.done(function () {

      _queryFn(storeName, undefined, {
        'success': callback
      });
    });
  }

  // Auto-generate IDs for new objects
  function _autoID () {

    return 'lw' + (new Array(31)).join('x').replace(/x/g, function () {

      return (Math.random()*16|0).toString(16);
    });
  }

  function sync (method, instance, options) {

    var storeName = instance.storeName || (instance.collection && instance.collection.storeName);
    var storeInfo = storeFieldMap[storeName];
    var keyPath = (storeInfo && storeInfo.keyPath) || defaultKeyPath;

    // for specs, we should be able to skip this magic
    if (storeName === 'none') {
      if (/(create|update)/.test(method) && !instance.id && !instance.get(keyPath)) {
        instance.set(keyPath, _autoID());
      }

      return options.success();
    }

    // skip invalid crup operation or models that don't have a valid storeName
    if (typeof _crudOps[method] === 'function' && storeName in storeFieldMap) {

      // Assign IDs automatically if not present
      if (/(create|update)/.test(method)) {

        if (!instance.id && !instance.get(keyPath)) {
          var newId = _autoID();
          if (instance.collection) {
            while (instance.collection.get(newId)) {
              newId = _autoID();
            }
          }

          instance.set(keyPath, newId);
        }
      }

      var _success = options.success;
      options.success = function () {

        _success.apply(this, arguments);

        // Update full-text index when needed
        if ('fullTextIndexFields' in storeInfo) {
          self.trigger('index', method, storeName, instance);
        }
      };

      dbDeferred.done(function () {

        _crudOps[method](storeName, instance, options);
      });
    }
    else {

      throw new Error('Invalid DB access');
    }
  }

  function init (backend) {

    // Initialize only once
    if (dbDeferred.state() === 'resolved') {
      return dbDeferred.promise();
    }

    var available = _findAvailableBackend(backend);
    var loggers = _initLogger(available.toUpperCase());

    // merge common fields
    _.each(storeFieldMap, function (meta) {

      meta.fields && _.extend(meta.fields, commonFields);
    });

    // if running specs, use alternate database
    if ('mocha' in global) {
      dbName = 'wunderlist_test';
      // no localstorage for specs
      if (backend === 'memory') {
        localStorageAvailable = false;
      }
    }

    var backendOptions = {
      'dbName': dbName,
      'dbVersion': dbVersion + (_.size(storeFieldMap) / 100),
      'storeFieldMap': storeFieldMap,
      'defaultKeyPath': defaultKeyPath,
      'infoLog': loggers.info,
      'errorLog': loggers.error,
      'localStorageAvailable': localStorageAvailable
    };

    function initTheBackend (theBackend, options) {

      theBackend.connect(options)
        .done(function () {
          // DB is ready
          // DB truncation usually occurs on logout
          WBRuntime.on('db:truncate', function (callback) {

            // clear out localstorage as well (in case anything ever was left there)
            if (available !== 'memory' && !WBRuntime.env.isPackagedApp()) {
              localStorageAvailable && global.localStorage.clear();
            }

            theBackend.truncate(callback);
          });

          _crudOps = {
            'create': theBackend.update,
            'read':   theBackend.read,
            'update': theBackend.update,
            'delete': theBackend.destroy
          };

          self.update = theBackend.update;

          _queryFn = theBackend.query;

          // announce once backend is ready
          dbDeferred.resolve();
          WBRuntime.publish('db:ready');
          self.trigger('ready', {
            'storeFieldMap': storeFieldMap,
            'defaultKeyPath': defaultKeyPath
          });
        })
        .fail(function () {

          var location = global.location;
          var isWebAppPath = location.pathname === '/webapp';
          var hasLoginCookie = /LOGGEDIN=true/.test(document.cookie);
          if (isWebAppPath || hasLoginCookie) {
            // if db init fails, fallback forcefully to memory
            var loggers = _initLogger('MEMORY');
            loggers.info('switching to memory backend');
            WBRuntime.trigger('analytics:db:memoryFallback', 'general');
            backendOptions.infoLog = loggers.info;
            backendOptions.errorLog = loggers.error;

            initTheBackend(memBackend, backendOptions);
          }
          else {
            WBRuntime.trigger('analytics:db:chromeWebSQLFail', 'puke');
            location.href = '/webapp' + location.hash;
          }
        });
    }

    // try to init the available backend
    var initialBackend = ({
      'memory': memBackend,
      'websql': sqlBackend,
      'indexeddb': idbBackend
    })[available];

    initTheBackend(initialBackend, backendOptions);

    // Override the original sync
    Backbone.oldSync = Backbone.sync;
    Backbone.sync = sync;

    return dbDeferred.promise();
  }

  function currentBackend () {
    return availableBackend;
  }

  var self = WBSingleton.extend({
    'sync': sync,
    'init': init,
    'getAll': getAll,
    'currentBackend': currentBackend
  });

  return self;

});
define('wunderbits/lib/queryParser',[],function () {

  

  function parse (queryString) {

    var tokens = queryString.split('&');
    var result = {}, param, key;

    while (tokens.length) {
      param = tokens.shift().split('=');
      key = param[0];
      if (key.length) {
        result[key] = param[1];
      }
    }

    return result;
  }

  return parse;

});
define('backend/languageManager',[

  'application/runtime',

  'vendor/moment',

  'wunderbits/WBLanguageManager',
  'wunderbits/lib/queryParser'

], function(
  runtime,
  moment,
  WBLanguageManager,
  queryParser,
  undefined
) {

  

  var _ = runtime._;
  var location = runtime.global.location;

  var params = queryParser(location.search.substr(1));

  var meridianFuncs = {
    'en': function meridian(hours, minutes, isLower) {
      if (hours > 11) {
        return isLower ? 'pm' : 'PM';
      } else {
        return isLower ? 'am' : 'AM';
      }
    }
  };

  var ordinalFuncs = {
    'en': function ordinal(number) {
      var b = number % 10;
      return (~~ (number % 100 / 10) === 1) ? 'th' :
        (b === 1) ? 'st' :
        (b === 2) ? 'nd' :
        (b === 3) ? 'rd' : 'th';
    }
  };

  function localizeMoment(langCode, langData) {

    var momentData = {};

    // this is magic
    _.each(langData, function (value, key) {

      if (/^momentjs_[a-zA-Z_]+$/.test(key)) {

        var sections = key.split('_');
        sections.shift();

        if(sections.length === 1) {
          momentData[sections[0]] = value.split('_');
        }
        else {
          var section;
          while(sections.length !== 1) {
            section = sections.shift();
            section = momentData[section] || (momentData[section] = {});
          }
          section[sections[0]] = value;
        }
      }
    });

    momentData.meridian = meridianFuncs[langCode] || meridianFuncs.en;
    momentData.ordinal = ordinalFuncs[langCode] || ordinalFuncs.en;

    // innoculate moment translation loading
    try {
      moment.lang(langCode, momentData);
    }
    catch (e) {
      e.message = 'bad moment localization for ' + langCode;
      // Logger.trace(e);
    }
  }

  var _super = WBLanguageManager;
  return WBLanguageManager.extend({

    'init': function () {

      var self = this;

      var languageModel = runtime.language;
      var settingsModel = runtime.settings;

      // Exports
      languageModel.getLabel = _.bind(self.getLabel, self);
      languageModel.getText = _.bind(self.getText, self);

      // Detect the language
      var langCode = params.hl || self.detectLang();

      // Save the detected language in settings, overriding english
      settingsModel.set('language', langCode);

      // On language change, fetch the correct strings
      self.bindTo(settingsModel, 'change:language', self.onLanguageChange);

      // Once data is loaded
      self.bindTo(_super, 'done', self.onDone);

      // Setup the UI with the detected language
      languageModel.set('code', langCode);

      // load the language module via the script loader
      _super.fetchData(langCode);
    },

    'onLanguageChange': function () {

      var languageModel = runtime.language;
      var settingsModel = runtime.settings;
      var langCode = settingsModel.get('language');
      languageModel.set('code', langCode);

      _super.fetchData(langCode);
    },

    'onDone': function (code, meta, lang) {

      var languageModel = runtime.language;

      // TODO: enable the next line for RTL
      // var rootNode = document.head.parentNode;
      // rootNode.setAttribute('dir', meta.dir || 'ltr');

      localizeMoment(code, lang.data);
      languageModel.set('data', lang.data);
      languageModel.ready.resolve();
      runtime.trigger('language:change');
    }
  });
});

/* jshint worker:true */
define('backend/search/searchWorker',[], function () {

  

  return function () {

    // load minimum dependencies for worker to work standalone
    // all dependencies must be defined in this file as this inline worker
    // will be converted to a string and then to a blob, and finally into a worker

    // function console (string) {

    //   self.postMessage({
    //     'callbackId': 'console',
    //     'data': string
    //   });
    // }

    var objectTypes = {
      'boolean': false,
      'function': true,
      'object': true,
      'number': false,
      'string': false,
      'undefined': false
    };

    var argsClass = '[object Arguments]',
      arrayClass = '[object Array]',
      boolClass = '[object Boolean]',
      dateClass = '[object Date]',
      funcClass = '[object Function]',
      numberClass = '[object Number]',
      objectClass = '[object Object]',
      regexpClass = '[object RegExp]',
      stringClass = '[object String]';

    var cloneableClasses = {};
    cloneableClasses[funcClass] = false;
    cloneableClasses[argsClass] = cloneableClasses[arrayClass] =
      cloneableClasses[boolClass] = cloneableClasses[dateClass] =
      cloneableClasses[numberClass] = cloneableClasses[objectClass] =
      cloneableClasses[regexpClass] = cloneableClasses[stringClass] = true;

    var ctorByClass = {};
    ctorByClass[arrayClass] = Array;
    ctorByClass[boolClass] = Boolean;
    ctorByClass[dateClass] = Date;
    ctorByClass[funcClass] = Function;
    ctorByClass[objectClass] = Object;
    ctorByClass[numberClass] = Number;
    ctorByClass[regexpClass] = RegExp;
    ctorByClass[stringClass] = String;

    var arrayPool = [];
    var objectPool = [];
    var largeArraySize = 75;
    var maxPoolSize = 10;
    var keyPrefix = + new Date() + '';

    var keys = !Object.keys ? shimKeys : function (object) {

      if (!isObject(object)) {
        return [];
      }
      return Object.keys(object);
    };

    var isArray = Array.isArray ? Array.isArray : function (value) {

      return Object.prototype.toString.call(value) === '[object Array]';
    };

    function forEach (collection, callback) {
      var index = -1,
          length = collection ? collection.length : 0;

      if (typeof length == 'number') {
        while (++index < length) {
          if (callback(collection[index], index, collection) === false) {
            break;
          }
        }
      } else {
        forOwn(collection, callback);
      }
      return collection;
    }

    function forOwn (collection, callback) {
      var index, iterable = collection, result = iterable;
      if (!iterable) {return result;}
      if (!objectTypes[typeof iterable]) {return result;}

      var ownIndex = -1,
        ownProps = objectTypes[typeof iterable] && keys(iterable),
        length = ownProps ? ownProps.length : 0;

      while (++ownIndex < length) {
        index = ownProps[ownIndex];
        if (callback(iterable[index], index, collection) === false) {return result;}
      }

      return result;
    }

    // utility functions, lodash/underscore contains cruft around _.unique
    // some are moved from lodash, others are replacements for
    function uniqueArray (arr) {
      var result = [];
      for (var i = 0, l = arr.length; i < l; i++) {
        if (result.indexOf(arr[i]) === -1) {
          result.push(arr[i]);
        }
      }
      return result;
    }

    function compactArray (arr) {
      var result = [];
      var value;

      for (var i = 0, l = arr.length; i < l; i++) {
        value = arr[i];
        if (value) {
          result.push(value);
        }
      }
      return result;
    }

    function isNumber (value) {
      return typeof value == 'number' || Object.prototype.toString.call(value) == '[object Number]';
    }

    function extend (object, source, guard) {
      var index, iterable = object, result = iterable;

      if (!iterable) {return result;}

      var args = arguments,
          argsIndex = 0,
          argsLength = typeof guard == 'number' ? 2 : args.length;

      while (++argsIndex < argsLength) {

        iterable = args[argsIndex];
        if (iterable && objectTypes[typeof iterable]) {

          var ownIndex = -1,
              ownProps = objectTypes[typeof iterable] && keys(iterable),
              length = ownProps ? ownProps.length : 0;

          while (++ownIndex < length) {
            index = ownProps[ownIndex];
            result[index] = iterable[index];
          }
        }
      }

      return result;
    }

    function clone (value, deep, callback, thisArg, stackA, stackB) {

      var result = value;
      var className, isArr;

      // allows working with "Collections" methods without using their `callback`
      // argument, `index|key`, for this method's `callback`
      if (typeof deep != 'boolean' && deep !== null) {
        thisArg = callback;
        callback = deep;
        deep = false;
      }
      // inspect [[Class]]
      var isObj = isObject(result);
      if (isObj) {
        className = Object.prototype.toString.call(result);
        if (!cloneableClasses[className]) {
          return result;
        }
        isArr = isArray(result);
      }
      var Ctor = ctorByClass[className];
      var ctor = Ctor;
      switch (className) {
      case boolClass:
      case dateClass:
        return new Ctor(+result);

      case numberClass:
      case stringClass:
        return new Ctor(result);
      }
      // check for circular references and return corresponding clone
      var initedStack = !stackA;
      stackA || (stackA = getArray());
      stackB || (stackB = getArray());

      var length = stackA.length;
      while (length--) {
        if (stackA[length] == value) {
          return stackB[length];
        }
      }
      // init cloned object
      result = isArr ? ctor(result.length) : {};

      // add array properties assigned by `RegExp#exec`
      if (isArr) {
        if (hasOwnProperty.call(value, 'index')) {
          result.index = value.index;
        }
        if (hasOwnProperty.call(value, 'input')) {
          result.input = value.input;
        }
      }
      // add the source value to the stack of traversed objects
      // and associate it with its clone
      stackA.push(value);
      stackB.push(result);

      // recursively populate clone (susceptible to call stack limits)
      (isArr ? forEach : forOwn)(value, function(objValue, key) {
        result[key] = clone(objValue, deep, callback, undefined, stackA, stackB);
      });

      if (initedStack) {
        releaseArray(stackA);
        releaseArray(stackB);
      }
      return result;
    }

    function isObject(value) {
      return !!(value && objectTypes[typeof value]);
    }

    function shimKeys (object) {

      var index, iterable = object, result = [];
      if (!iterable) {return result;}
      if (!(objectTypes[typeof object])) {return result;}

      for (index in iterable) {
        if (hasOwnProperty.call(iterable, index)) {
          result.push(index);
        }
      }
      return result;
    }

    function getSize (collection) {
      var length = collection ? collection.length : 0;
      return typeof length == 'number' ? length : keys(collection).length;
    }

    // lodash intersection
    function basicIndexOf (array, value, fromIndex) {
      var index = (fromIndex || 0) - 1,
          length = array.length;

      while (++index < length) {
        if (array[index] === value) {
          return index;
        }
      }
      return -1;
    }

    function cacheIndexOf (cache, value) {
      var type = typeof value;
      cache = cache.cache;

      if (type == 'boolean' || value === null) {
        return cache[value];
      }
      if (type != 'number' && type != 'string') {
        type = 'object';
      }
      var key = type == 'number' ? value : keyPrefix + value;
      cache = cache[type] || (cache[type] = {});

      return type == 'object' ? (cache[key] && basicIndexOf(cache[key], value) > -1 ? 0 : -1) : (cache[key] ? 0 : -1);
    }

    function getArray () {
      return arrayPool.pop() || [];
    }

    function getObject () {
      return objectPool.pop() || {
        'array': null,
        'criteria': null,
        'false': false,
        'index': 0,
        'leading': false,
        'maxWait': 0,
        'null': false,
        'number': null,
        'object': null,
        'push': null,
        'string': null,
        'trailing': false,
        'true': false,
        'undefined': false,
        'value': null
      };
    }

    function releaseArray(array) {
      if (arrayPool.length == maxPoolSize) {
        arrayPool.length = maxPoolSize - 1;
      }
      array.length = 0;
      arrayPool.push(array);
    }

    function releaseObject(object) {
      var cache = object.cache;
      if (cache) {
        releaseObject(cache);
      }
      if (objectPool.length == maxPoolSize) {
        objectPool.length = maxPoolSize - 1;
      }
      object.array = object.cache = object.criteria = object.object = object.number = object.string = object.value = null;
      objectPool.push(object);
    }

    function cachePush (value) {
      /* jshint validthis:true */
      var cache = this.cache,
          type = typeof value;

      if (type == 'boolean' || value === null) {
        cache[value] = true;
      } else {
        if (type != 'number' && type != 'string') {
          type = 'object';
        }
        var key = type == 'number' ? value : keyPrefix + value;
        var typeCache = cache[type] || (cache[type] = {});

        if (type == 'object') {
          if ((typeCache[key] || (typeCache[key] = [])).push(value) === this.array.length) {
            cache[type] = false;
          }
        } else {
          typeCache[key] = true;
        }
      }
    }

    function createCache (array) {
      var index = -1,
          length = array.length;

      var cache = getObject();
      cache['false'] = cache['null'] = cache['true'] = cache['undefined'] = false;

      var result = getObject();
      result.array = array;
      result.cache = cache;
      result.push = cachePush;

      while (++index < length) {
        result.push(array[index]);
      }
      return cache.object === false ? (releaseObject(result), null)
        : result;
    }

    function intersection (array) {
      var args = arguments,
          argsLength = args.length,
          argsIndex = -1,
          caches = getArray(),
          index = -1,
          indexOf = basicIndexOf,
          length = array ? array.length : 0,
          result = [],
          seen = getArray(),
          cache,
          value;

      while (++argsIndex < argsLength) {
        value = args[argsIndex];
        caches[argsIndex] = indexOf === basicIndexOf &&
          (value ? value.length : 0) >= largeArraySize &&
          createCache(argsIndex ? args[argsIndex] : seen);
      }
      outer:
      while (++index < length) {
        cache = caches[0];
        value = array[index];

        if ((cache ? cacheIndexOf(cache, value) : indexOf(seen, value)) < 0) {
          argsIndex = argsLength;
          (cache || seen).push(value);
          while (--argsIndex) {
            cache = caches[argsIndex];
            if ((cache ? cacheIndexOf(cache, value) : indexOf(args[argsIndex], value)) < 0) {
              continue outer;
            }
          }
          result.push(value);
        }
      }
      while (argsLength--) {
        cache = caches[argsLength];
        if (cache) {
          releaseObject(cache);
        }
      }
      releaseArray(caches);
      releaseArray(seen);
      return result;
    }

    // * * * * * * * * * * * * * * * * * * * * * * * * * * * //
    // FULL TEXT SEARCH METHODS START ALL THE WAY DOWN HERE  //
    // * * * * * * * * * * * * * * * * * * * * * * * * * * * //

    var defaultFullTextIndices = {
      'id': 'index',
      'title': {},
      'note': {},
      'assignee_id': {},
      'tags': {}
    };

    var fullTextIndices = extend({}, clone(defaultFullTextIndices, true));

    // This breaks down search-queries & field-values into tokens for searching
    function _tokenizer (string) {

      var tokens = string && uniqueArray(compactArray(string.toLowerCase().split(/[\s]+/)));
      return tokens;
    }

    function _resolve (invertedIndex, token, createIfDoesntExist) {

      createIfDoesntExist = !!createIfDoesntExist || false; // dafuc false or false ???

      var chars = token.split('');
      var trieNode = invertedIndex;
      var i, l, chr;

      for (i = 0, l = chars.length; i < l; i++) {

        chr = chars[i];

        if (trieNode[chr] === undefined) {

          if (createIfDoesntExist) {

            trieNode[chr] = {'parent': trieNode};
          }
          else {

            return undefined;
          }
        }

        trieNode = trieNode[chr];
      }

      return trieNode;
    }


    function _index (invertedIndex, id, text, callbackId) {

      var indexName = invertedIndex;

      if (indexName === 'tags') {

        _indexTags.apply(null, arguments);
        return;
      }

      (typeof invertedIndex === 'string') && (invertedIndex = fullTextIndices[invertedIndex]);
      if (invertedIndex === undefined || text === undefined) {
        return;
      }

      var tokens = _tokenizer(text);
      if (tokens) {

        var token, reference, trieNode;
        for (var i=0, len = tokens.length; i < len; i++) {

          token = tokens[i];
          reference = {
            'id': id,
            'position': i
          };

          // Split chars & create a regular trie for prefix search
          trieNode = _resolve(invertedIndex, token, true);
          trieNode.refs = trieNode.refs || [];
          _pushReferences(trieNode, reference);

          // Evaluate sufixes & insert in the trie
          if (token.length > 1) {

            for (var j = 1, l = token.length; j < l; j++) {

              trieNode = _resolve(invertedIndex, token.substr(j), true);
              _pushReferences(trieNode, reference);
            }
          }
        }
      }

      self.postMessage({

        'callbackId': callbackId,
        'data': '_index('+indexName+', '+id+', '+text+') done'
      });
    }

    function _indexTags (invertedIndex, id, text, callbackId) {

      var indexName = invertedIndex;

      (typeof invertedIndex === 'string') && (invertedIndex = fullTextIndices[invertedIndex]);
      if (invertedIndex === undefined || text === undefined) {
        return;
      }

      var tokens = _tokenizer(text);
      if (tokens) {

        var token, reference, trieNode;
        for (var i=0, len = tokens.length; i < len; i++) {

          token = tokens[i];

          // index any tags in the text
          if (/^#/.test(token)) {

            reference = {
              'id': id,
              'position': i,
              'tag': token
            };

            // Split chars & create a regular trie for prefix search
            trieNode = _resolve(invertedIndex, token, true);
            trieNode.refs = trieNode.refs || [];
            _pushReferences(trieNode, reference);
          }
        }
      }

      self.postMessage({

        'callbackId': callbackId,
        'data': '_indexTags('+indexName+', '+id+', '+text+') done'
      });
    }


    function _pushReferences (node, reference) {

      node.refs = node.refs || [];

      // http://jsperf.com/where-vs-array-filter
      if (!_refsContainId(node.refs, reference.id)) {
        node.refs.push(reference);
      }
    }

    function _refsContainId (refs, id) {

      // http://jsperf.com/where-vs-array-filter
      for (var i = 0, l = refs.length; i < l; i++) {
        if (refs[i].id === id) {
          return true;
        }
      }
      return false;
    }

    function _unIndex (invertedIndex, id, text, callbackId) {

      var indexName = invertedIndex;

      (typeof invertedIndex === 'string') && (invertedIndex = fullTextIndices[invertedIndex]);
      if (invertedIndex === undefined || text === undefined || id === undefined) {
        return;
      }

      var i, len;

      var nodes = _findReferencedNodes(invertedIndex, text, id);
      if (nodes) {
        // step one
        for (i=0, len = nodes.length; i < len; i++) {
          // remove any invalid references to this id on branches steming from this node (is recursive)
          _cleanNode(nodes[i], id);
        }

        // step two
        var node, key;
        for (i=0, len = nodes.length; i < len; i++) {
          node = nodes[i];
          key = i;
          // find and delete all dead ends now branching from this node
          for (var nodeKey in node) {
            (nodeKey !== 'refs' && nodeKey !== 'parent') && _trimDeadBranches(node, node[nodeKey], nodeKey);
          }
          // clean up this node from the main index
          _trimDeadBranches(invertedIndex, node, key);
        }
      }

      self.postMessage({
        'callbackId': callbackId,
        'data': '_unIndex(' + indexName + ', ' + id + ', ' + text + ') done'
      });
    }

    // removes references to an id on a node branch (recursive)
    function _cleanNode (node, id) {

      // iterate references
      var foundKey = null;
      node.refs && node.refs.forEach(function (ref, key) {

        // delete references to this id
        if (ref.id === id) {
          foundKey = key;
        }
      });

      if (isNumber(foundKey)) {

        node.refs.splice(foundKey, 1);
      }

      for (var key in node) {
        if (key !== 'refs' && key !== 'parent') {
          _cleanNode(node[key], id);
        }
      }
    }

    // deletes nodes on dead trie branches (recursive)
    function _trimDeadBranches (parent, node, key) {

      var size = getSize(node);

      // if there are no children of this node, but it contains an empty refs, delete this node
      if (size === 2 && node.refs && node.parent) {
        if (!node.refs.length) {
          delete node.refs;
          delete node.parent[key];
          _trimParentNode(node.parent);
          node.parent && (delete node.parent);
        }
      }
      // if there are children of this node, recurse on these children
      else if (size > 1) {
        for (var nodeKey in node) {
          if (nodeKey !== 'refs' && nodeKey !== 'parent') {
            _trimDeadBranches(node, node[nodeKey], nodeKey);
          }
        }
      }
      // if this is an empty node (leaf with cleared refs), recurse on its parents
      else {
        var localParent = (node === null ? parent : node.parent);
        if (localParent) {
          delete localParent[key];
          _trimParentNode(parent);
        }
        node.parent && (delete node.parent);
      }
    }

    // pulled out to prevent code dupes
    function _trimParentNode (parent) {
      for (var nodeKey in parent) {
        parent[nodeKey].parent && _trimDeadBranches(parent[nodeKey].parent, parent[nodeKey], nodeKey);
      }
    }

    function _flatten (trieNode, keyName) {

      var refs = [];
      var results = [];
      var key;

      for (key in trieNode) {
        if (key.length > 1) {
          continue;
        }

        refs = refs.concat(_flatten(trieNode[key], keyName));
      }

      if (trieNode.refs) {
        for (var i=0, l = trieNode.refs.length; i < l; i++) {
          results.push(trieNode.refs[i][keyName]);
        }

        refs = refs.concat(results);
      }

      return refs;
    }

    function _searchInIndex (invertedIndex, text, keyName, callbackId) {

      (typeof invertedIndex === 'string') && (invertedIndex = fullTextIndices[invertedIndex]);
      if (invertedIndex === undefined || text === undefined) {
        return [];
      }

      var tokens = _tokenizer(text);
      var references = [];

      if (tokens) {

        var trieNode, foundMatches;
        for (var i=0, len = tokens.length; i < len; i++) {
          // Lookup in the inverted Index
          trieNode = _resolve(invertedIndex, tokens[i], false);
          foundMatches = trieNode && _flatten(trieNode, keyName);
          references.push(foundMatches || []);
        }
      }

      references.length && (references = intersection.apply(null, references));

      self.postMessage({
        'callbackId': callbackId,
        'data': references
      });
    }

    // returns nodes that match text and reference id
    function _findReferencedNodes (invertedIndex, text, id) {

      var i, len;

      (typeof invertedIndex === 'string') && (invertedIndex = fullTextIndices[invertedIndex]);
      if (invertedIndex === undefined || text === undefined) {
        return [];
      }

      var tokens = _tokenizer(text);
      var suffixes = [];
      if (tokens) {
        for (i=0, len=tokens.length; i < len; i++) {
          if (tokens[i].length > 1) {
            for (var j = 1, l = tokens[i].length; j < l; j++) {
              suffixes.push(tokens[i].substr(j));
            }
          }
        }
      }
      tokens = tokens.concat(suffixes);
      var nodes = [];

      if (tokens) {
        var trieNode;
        for (i=0, len = tokens.length; i < len; i++) {
          // Lookup in the inverted Index
          trieNode = _resolve(invertedIndex, tokens[i], false);
          if (trieNode && isArray(trieNode.refs)) {
            _refsContainId(trieNode.refs, id) && nodes.push(trieNode);
          }
        }
      }

      return nodes;
    }

    function _clear (callbackId) {

      fullTextIndices = extend({}, clone(defaultFullTextIndices, true));

      self.postMessage({
        'callbackId': callbackId
      });
    }

    // message handling ("exports")
    self.onmessage = function (e) {

      switch(e.data.command){

      case 'index':
        _index(e.data.fieldName, e.data.id, e.data.text, e.data.callbackId);
        break;

      case 'unIndex':
        _unIndex(e.data.fieldName, e.data.id, e.data.text, e.data.callbackId);
        break;

      case 'searchInIndex':
        _searchInIndex(e.data.index, e.data.text, e.data.keyName, e.data.callbackId);
        break;

      case 'clear':
        _clear(e.data.callbackId);
        break;
      }
    };
  };
});
define('models/AssignableModel',[
  'application/runtime',
  'wunderbits/WBModel'

], function (
  runtime,
  WBModel,
  undefined
  ) {

  

  return WBModel.extend({

    'storeName': 'assignables',

    'defaults': {

      'type': 'Assignable',
      'resource_type': 'List',
      'assignable_id': null,
      'resource_id': null,
      'email':null,
      'name':null,
      'avatar':null
    }
  });
});
define('collections/AssignableCollection',[

  'application/runtime',

  'models/AssignableModel',

  'wunderbits/collections/WBCollection'

], function(
  runtime,
  AssignableModel,
  WBCollection,
  undefined
  ) {

  

  var _ = runtime._;

  return WBCollection.extend({

    'storeName': 'assignables',

    'model': AssignableModel,

    'comparator': function (a, b) {

      // keep self at top of collection always
      if (a.attributes.assignable_id === runtime.user.id) {
        return -1;
      }
      if (b.attributes.assignable_id === runtime.user.id) {
        return 1;
      }

      var nameA = a.attributes.name.toUpperCase();
      var nameB = b.attributes.name.toUpperCase();

      return (nameA < nameB) ? -1 : (nameA > nameB) ? 1 : 0;
    },

    'createSearchIndex': function () {

      var self = this;
      var assignableIndex = {};

      _.each(self.models, function (model) {

        var string = model.attributes.name + (model.attributes.assignable_id === runtime.user.id ? runtime.language.getText('label_assign_me') : '');
        assignableIndex[model.attributes.assignable_id] = string;
      });

      return assignableIndex;
    },

    'getByAssignableId': function (id) {

      var self = this;
      return self.where({'assignable_id': id});
    }
  });
});
define('backend/search',[

  'backend/database',

  'wunderbits/WBRuntime',

  'backend/search/searchWorker',

  'collections/AssignableCollection',

  'wunderbits/WBSingleton'

], function (
  database,
  WBRuntime,
  SearchWorker,
  AssignableCollection,
  WBSingleton,
  undefined
) {

  

  var $ = WBRuntime.$;
  var _ = WBRuntime._;

  var global = WBRuntime.global;
  var URL = global.URL || global.webkitURL || {};
  var Blob = global.Blob;
  var Worker = global.Worker;

  var storeFieldMap, defaultKeyPath;
  var assignables = new AssignableCollection('/assignables/all');

  // worker setup
  var workerSource;
  if (WBRuntime.env.isFirefox()) {
    workerSource = '(' + SearchWorker.toSource() + ')()'; // firefox toSource
  }
  else {
    workerSource = '(' + SearchWorker.toString() + ')()'; //wrapped so it executes in the context of the web worker
  }

  // build worker from a string
  var searchWorker;
  if (!WBRuntime.env.isIE()) {
    var blob = Blob && new Blob([workerSource], { "type" : "application\/javascript" });
    var workerUrl = blob && URL.createObjectURL && URL.createObjectURL(blob);
    searchWorker = workerUrl && Worker && new Worker(workerUrl);
  }
  else {
    // hack for IE10, go look at workerHelper.js and cry
    searchWorker = ('Worker' in global) && new global.Worker('/helpers/workerHelper.js');
    searchWorker && searchWorker.postMessage(workerSource);
  }

  // worker messaging setup
  var messageId = 0;
  var callbacks = {
    'console': function (data) {
      console.log(data);
    }
  };

  function sendMessage (data, callback) {

    // our users leave this app open indefeinately, lets not overflow to Infinity
    // it's quite unlikely for there to be 1,000,000 pending worker callbacks ...
    messageId = messageId >= 1000000 ? 0 : messageId;
    ++messageId;

    data.callbackId = messageId;
    callbacks[messageId] = callback;

    searchWorker && searchWorker.postMessage(data);
  }

  if (searchWorker) {

    searchWorker.onmessage = function (e) {

      typeof callbacks[e.data.callbackId] === 'function' && callbacks[e.data.callbackId](e.data.data);
      (e.data.callbackId !== 'console') && (callbacks[e.data.callbackId] = null);
    };
  }

  // methods

  function indexModel (method, storeName, model) {

    var store = storeFieldMap[storeName];
    var keypath = store.keyPath || defaultKeyPath;
    var fullTextIndexFields = store.fullTextIndexFields;

    if (fullTextIndexFields === undefined) {
      return;
    }

    var json = model.attributes;

    for (var i = 0, len = fullTextIndexFields.length; i < len; i ++) {

      var fieldName = fullTextIndexFields[i];
      var indexText = json[fieldName];
      var unIndexText;

      // setup all the indexing properties
      if (method === 'update') {

        unIndexText = model.previous(fieldName);
        if (unIndexText === json[fieldName]) {
          // don't bother with an update if the previous value matches the current value
          unIndexText = null;
        }
      }
      else {
        unIndexText = json[fieldName];
      }

      //map ids of certain fields to their useful values
      if (fieldName === 'assignee_id') {

        var models = [];

        // map unassign
        if (unIndexText) {
          models = assignables.getByAssignableId(unIndexText);
          models.length && (unIndexText = models[0].attributes.name);
        }
        // map what is to be indexed
        models = assignables.getByAssignableId(indexText);
        models.length && (indexText = models[0].attributes.name);
      }
      else if (fieldName === 'title') {
        indexText && executeIndexing('create', 'tags', json[keypath], indexText);
      }

      // do the indexing
      executeIndexing(method, fieldName, json[keypath], indexText, unIndexText);
    }
  }

  function executeIndexing (method, fieldName, id, indexText, unIndexText) {

    // do the indexing
    var unindexDeferred = new $.Deferred();
    if (method !== 'create' && unIndexText) {
      // unindex anything that is not a CREATE OP
      sendMessage({
        'command': 'unIndex',
        'fieldName': fieldName,
        'id': id,
        'text': unIndexText
      }, function () {
        unindexDeferred.resolve();
      });
    }
    else {
      unindexDeferred.resolve();
    }

    unindexDeferred.then(function () {

      if (method !== 'delete' && indexText) {
        // index anything not on a DELETE OP
        sendMessage({
          'command': 'index',
          'fieldName': fieldName,
          'id': id,
          'text': indexText
        });
      }
    });
  }

  function search (storeName, keywords, callback) {

    var titleDeferred = new $.Deferred();
    var noteDeferred = new $.Deferred();
    var assigneeDeferred = new $.Deferred();
    var titleResults, noteResults, assigneeResults;

    // search title
    sendMessage({

      'command': 'searchInIndex',
      'index': 'title',
      'text': keywords,
      'keyName': 'id'
    }, function (data) {

      titleResults = data || [];
      titleDeferred.resolve();
    });

    // search note
    sendMessage({

      'command': 'searchInIndex',
      'index': 'note',
      'text': keywords,
      'keyName': 'id'
    }, function (data) {

      noteResults = data || [];
      noteDeferred.resolve();
    });

    // search assignees
    sendMessage({

      'command': 'searchInIndex',
      'index': 'assignee_id',
      'text': keywords,
      'keyName': 'id'
    }, function (data) {

      assigneeResults = data || [];
      assigneeDeferred.resolve();
    });

    $.when(titleDeferred, noteDeferred, assigneeDeferred).then(function () {

      var results = uniqueArray(titleResults.concat(noteResults, assigneeResults));
      callback(results);
    });
  }

  function searchTags (string, callback) {

    var tagsDeferred = new $.Deferred();
    var tagsResults;

    // search tags
    sendMessage({

      'command': 'searchInIndex',
      'index': 'tags',
      'text': string,
      'keyName': 'tag'
    }, function (data) {

      tagsResults = data || [];
      tagsResults = _.unique(tagsResults);
      tagsDeferred.resolve(tagsResults);
    });

    tagsDeferred.done(function () {

      callback && callback(tagsResults);
    });

    return tagsDeferred.promise();
  }

  function createIndexFromLocalStores() {

    WBRuntime.once('db:allDataLoaded', function () {

      function indexCollection (collection) {
        for (var i = 0, l = collection.models.length; i < l; i++) {
          indexModel('create', collection.storeName, collection.models[i]);
        }
      }

      var map, storeName;
      for (var key in storeFieldMap ) {

        map = storeFieldMap[key];
        storeName = key;

        if ('fullTextIndexFields' in map) {
          WBRuntime.on(storeName +':ready', indexCollection);
        }
      }
    });
  }

  function unIndex (fieldName, id, unIndexText) {

    var unindexDeferred = new $.Deferred();
    // unindex anything that is not a CREATE OP
    sendMessage({
      'command': 'unIndex',
      'fieldName': fieldName,
      'id': id,
      'text': unIndexText
    }, function () {
      unindexDeferred.resolve();
    });

    return unindexDeferred.promise();
  }

  function init (options) {

    storeFieldMap = options.storeFieldMap;
    defaultKeyPath = options.defaultKeyPath;

    // init the indexes once database is ready
    createIndexFromLocalStores();

    // Update full-text index when needed
    database.on('index', indexModel);
  }

  function clear () {

    sendMessage({
      'command': 'clear'
    });
  }

  function uniqueArray (arr) {
    var result = [];
    for (var i = 0, l = arr.length; i < l; i++) {
      if (result.indexOf(arr[i]) === -1) {
        result.push(arr[i]);
      }
    }
    return result;
  }

  database.on('ready', init);

  return WBSingleton.extend({
    'init': init,
    'search': search,
    'searchTags': searchTags,
    'index': indexModel,
    'unIndex': unIndex,
    'clear': clear
  });

});
/*jshint expr:true*/
define('helpers/collectionSorting',[

  'vendor/moment',
  'wunderbits/WBSingleton'

], function (moment, WBSingleton, undefined) {

  

  return WBSingleton.extend({

    // given two model attributes will do different things based on the options passed
    // ex.: dualBinarySort('due_date', 'position', model1, model2, true, false)
    //      would divide the collection into items with and without attr 'due_date' and sort by position
    // ex.: dualBinarySort('completed', 'position', model1, model2, true, false)
    //      is the normal tasks by list collection sort, pushes all completed items to the bottom retaining sorts by 'position' numbers
    'dualBinarySort': function (grouper, mainSorter, a, b, reject, sortByGrouper) {

      var order, aVal, bVal;
      var aGrouper = a.attributes[grouper];
      var bGrouper = b.attributes[grouper];
      var aMainSorter = a.attributes[mainSorter];
      var bMainSorter = b.attributes[mainSorter];

      if (aGrouper === bGrouper && aMainSorter === bMainSorter) {
        // when both grouper and main sort are the same value, defer to model id as they are always unique
        // this prevents sort from returning random sorting when both grouper and mainsorter are equal accross multiple tasks
        aVal = a.id;
        bVal = b.id;

        order = aVal > bVal ? 1 : aVal < bVal ? -1 : 0;
      }
      else if (aGrouper === bGrouper) {

        // if both models are of the same group

        if (mainSorter === 'due_date') {

          aVal = moment(aMainSorter).valueOf();
          bVal = moment(bMainSorter).valueOf();
        }
        else if (mainSorter === 'completed_at' || (a.attributes.completed_at && b.attributes.completed_at)) {

          //completed is always sorted by completed_At
          return this.handleCompletedSorting(a, b);
        }
        else {

          aVal = aMainSorter;
          bVal = bMainSorter;
        }

        order = aVal > bVal ? 1 : aVal < bVal ? -1 : 0;
      }
      else if (aGrouper && !bGrouper) {

        order = reject ? 1 : -1;
      }
      else if (!aGrouper && bGrouper) {

        order = reject ? -1 : 1;
      }
      else if (aGrouper && bGrouper && sortByGrouper) {

        if (grouper === 'due_date') {

          aVal = moment(aGrouper).valueOf();
          bVal = moment(bGrouper).valueOf();
        }
        else if (mainSorter === 'completed_at' || (a.attributes.completed && b.attributes.completed)) {

          //completed is always sorted by completed_At
          return this.handleCompletedSorting();
        }
        else {

          aVal = aGrouper;
          bVal = bGrouper;
        }

        order = aVal > bVal ? 1 : aVal < bVal ? -1 : 0;
      }

      return order;
    },

    'handleCompletedSorting': function (a, b) {

      var aVal = a.attributes.completed_at && Date.parse(a.attributes.completed_at);
      var bVal = b.attributes.completed_at && Date.parse(b.attributes.completed_at);

      return aVal > bVal ? -1 : aVal < bVal ? 1 : 0;
    }
  });
});
define('wunderbits/helpers/timing',[

  '../WBRuntime',

  '../WBSingleton'

], function (WBRuntime, WBSingleton, undefined) {

  

  var window = WBRuntime.global;
  var console = WBRuntime.console;

  return WBSingleton.extend({

    // Instrument entrances and exits in your code then load up chrome://tracing and behold

    // starts a timer with a given name
    'start': function () {

      this.timingEnabled() && console.time.apply(console, arguments);
    },

    // ends a timer of a given name
    'end': function () {

      this.timingEnabled() && console.timeEnd.apply(console, arguments);
    },

    // for testing, or forcing enabled in code
    'enableTiming': function () {

      this.timing = true;
    },

    // for test, or forcing enabled in code
    'disableTiming': function () {

      this.timing = false;
    },

    // returns whether enabled
    'timingEnabled': function () {

      return (window.timing === true || this.timing === true);
    }
  });

});
define('backend/sync/processors',[

  'application/runtime',

  'wunderbits/helpers/timing',
  'wunderbits/helpers/date',

  'vendor/md5',
  'vendor/moment'

], function(
  runtime,
  Timing, dateHepler,
  MD5, moment,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;

  // API WORKAROUND
  var _deleteCache = {};

  var prepopulateLists = ['private', 'work', 'shopping', 'movies', 'wishlist'];

  var NEW_MODEL_ID_REGEXP = /^lw[0-9a-f]{30}/;

  var fromSyncOptions = {
    'fromSync': true
  };

  var collections, changeMaps, crossClientSettings;
  function init (_collections, _changeMaps, _crossClientSettings) {

    collections = _collections;
    changeMaps = _changeMaps;
    crossClientSettings = _crossClientSettings;
  }

  function _generatePolyfilledLocalIdentifier (type, localId, data) {

    data = data || {};

    var userId = data.created_by_id || data.owner_id || runtime.user.id;
    return 'polyfillIdWeb:' + userId + ':' + type + ':' + localId;
  }

  // map all remote IDs to online_remote_key_ids
  // and rewrite remote id keys with locally created in-app ids
  var onlineFieldNames = ['id', 'list_id', 'task_id', 'parent_id', 'resource_id', 'subject_id', 'channel_id'];
  function _remapOnlineIDs (data) {

    var fieldValue, fieldName;
    for (var key in onlineFieldNames)  {

      fieldName = onlineFieldNames[key];
      fieldValue = data[fieldName];

      // do not remap the remote list_id 'inbox'
      if (fieldName === 'list_id' && fieldValue === 'inbox') {
        continue;
      }

      // TODO all of this needs comments as to what type of incomming data
      // the remapping applies to, is not very readable or intuitive unless
      // you know our sync and the api in and out!
      // maps any object resource remote ids to in-app locally generated ids
      if (fieldValue) {

        data['online_' + fieldName] = data[fieldName];

        if (fieldName === 'list_id') {
          // map object's list_id resource
          data.list_id = collections.lists.getIdByAltId(fieldValue) || 'inbox';
        }
        else if (fieldName === 'task_id') {
          // map object's task_id resource
          data.task_id = collections.tasks.getIdByAltId(fieldValue);
        }
        else if (fieldName === 'parent_id') {
          // map subtasks parent task
          data.parent_id = collections.tasks.getIdByAltId(fieldValue);
        }
        else if ((data.resource_type === 'Share' || data.type === 'Share') && fieldName === 'resource_id') {
          // attempt to map share to any locally mapped share or list
          // since neither may have yet been created, fall back to original resource_id
          data.resource_id = collections.shares.getIdByAltId(fieldValue) || collections.lists.getIdByAltId(fieldValue) || data.resource_id;
        }
        else if ((data.resource_type === 'Task') && fieldName === 'resource_id') {
          // map resource_id of type task to the appropriate task
          // if no longer exists, or has not been synced, fall back to original data.resource_id
          data.resource_id = collections.tasks.getIdByAltId(fieldValue) || data.resource_id;
        }
        else if ((data.resource_type === 'Attachment') && fieldName === 'resource_id') {
          // map file resource_id to the correct local id
          fieldValue = String(fieldValue);
          data.resource_id = collections.files.getIdByAltId(fieldValue) || data.resource_id;
        }
        else if ((data.subject_type === 'Message') && fieldName === 'channel_id') {
          // map file channel_id to the correct local id
          fieldValue = String(fieldValue);
          data.channel_id = collections.tasks.getIdByAltId(fieldValue) || data.channel_id;
        }
        else if ((data.type === 'Attachment') && fieldName === 'resource_id') {
          // attempt map task resource_id of an attachment to the correct local id
          fieldValue = String(fieldValue);
          data.resource_id = collections.tasks.getIdByAltId(fieldValue) || data.resource_id;
        }
        else if ((data.type === 'Message') && fieldName === 'channel_id') {
          // attempt map task resource_id of an messages to the correct local id
          fieldValue = String(fieldValue);

          data.channel_id = collections.tasks.getIdByAltId(fieldValue) || data.channel_id;
        }
        else if (fieldName === 'resource_id') {
          // not sure why this is assumed to be a list ...
          data.resource_id = collections.lists.getIdByAltId(fieldValue);
        }
        else if (fieldName === 'subject_id') {
          if (data.subject_type === 'Attachment') {

            fieldValue = String(fieldValue);
            data.subject_id = collections.files.getIdByAltId(fieldValue) || data.subject_id;
          }
          if (data.subject_type === 'Message') {

            fieldValue = String(fieldValue);
            data.subject_id = collections.comments.getIdByAltId(fieldValue) || data.subject_id;
          }
        }
        else {

          // Woah nelly, if we don't know how to handle it, we delete it?
          // (notsureif)
          delete data[fieldName];
        }
      }
    }

    // Extract localId from local_identifier, else generate localId.
    var localId;

    if (!data.local_identifier) {
      // Sometimes the api does not send local_identifier, even when one exists
      // and some clients are not setting local_identifiers, or setting null.
      // So check here for a locally cached local_identifier for the given compound id
      // or create a  polyfill
      var collectionType = data.type && data.type.toLowerCase() + 's';

      // this may not be needed
      if (collectionType === 'changesets' && data.subject_type === 'Message') {

        collectionType = 'comments';
      }

      localId = collectionType && collections[collectionType] && collections[collectionType].getIdByAltId(data.online_id);

      if (localId) {

        var localModel = collections[collectionType].get(localId);
        var knownLocalIdentifier = localModel && localModel.attributes.local_identifier;
        data.local_identifier = knownLocalIdentifier || _generatePolyfilledLocalIdentifier(data.type, localId, data);
        data.id = localId;
      }
      else {

        data.id = data.online_id;
      }
    }
    else if (data.local_identifier) {

      // use the last fragment as local-id
      var fragments = data.local_identifier.split(':');

      // if it was one of those local identifiers messed up by the API
      // with less than 5 sections
      if (fragments.length < 5) {
        data.id = fragments.slice(fragments.length - 2).join();
      } else {
        data.id = _.last(fragments);
      }
    }

    // If the object wasn't created by the web-app
    // Or is another user's prepopulated list (to prevent collisions)
    // But not an id fetched from the collection (already md5'd)
    // Then hash the ID to make it look consistent
    var isNotWebId = (data.id !== localId) && !NEW_MODEL_ID_REGEXP.test(data.id);
    var isPrepopulatedList = _.indexOf(prepopulateLists, data.id) !== -1;
    var isOwner = runtime.user.id === data.owner_id;
    if (isNotWebId &&
        !isPrepopulatedList || !NEW_MODEL_ID_REGEXP.test(data.id) &&
        (isPrepopulatedList && !isOwner)
    ) {
      data.id = String(data.id);
      data.id = MD5((isPrepopulatedList ? data.id + data.owner_id : data.id));
      if (!data.local_identifier) {
        data.local_identifier = _generatePolyfilledLocalIdentifier(data.type, data.id, data);
      }
    }
  }

  // fields to ignore before saving locally
  var ignoreFieldNames = ['updated_by_id', 'version'];
  function _trimRemoteObject (data) {

    for (var key in ignoreFieldNames) {
      delete data[ignoreFieldNames[key]];
    }
  }

  function _isPendingDeletion (id) {

    return !!changeMaps.deleted.get(id);
  }

  function saveUser (userObj) {

    if (userObj && runtime.user.id === userObj.id) {

      var previousProduct = runtime.user.get('product');

      // if there was a previous product and that product had a product_id and
      // it wasn't expired we make this check vs just checking a previous
      // product because of potential errors being sent from wunderAPI on the product
      var hasPreviousProductAndNotExpired = previousProduct && previousProduct.product_id && !previousProduct.expired_at;

      var now = moment();
      var nowServerTime = dateHepler.convertLocalTimeToServerTime(now);
      // time between previous product and now
      var timeTillPreviousProductExpire = hasPreviousProductAndNotExpired && moment(previousProduct.expires_at).diff(nowServerTime);
      // check that the product expires in the future, and in the case we get an
      // invalid product override the current product with the previous one.
      // the exception to this is that if there is an admin field, then its a
      // group product, so continue the overwrite

      if ((timeTillPreviousProductExpire > 0 && !userObj.product) && (userObj.product && !userObj.product.admin)) {

        userObj.product = previousProduct;
      }

      runtime.user.save({

        'product': userObj.product,
        'group_product': userObj.group_product,
        'avatar': userObj.avatar,
        'email': userObj.email,
        'name': userObj.name,
        'confirmation_state': userObj.confirmation_state,
        'token': userObj.token,
        'channel': userObj.channel
      }, fromSyncOptions);
    }
  }

  function collectionFromType (type) {

    var collection;

    if (type === 'File') {

      collection = collections.files;
    }
    else if (type === 'Comment') {

      collection = collections.comments;
    }
    else if (type === 'List') {

      collection = collections.lists;
    }
    else if (type === 'Task') {

      collection = collections.tasks;
    }
    else if (type === 'Subtask') {

      collection = collections.subtasks;
    }
    else if (type === 'Reminder') {

      collection = collections.reminders;
    }
    else if (type === 'Service') {

      collection = collections.services;
    }
    else if (type === 'User') {

      collection = collections.contacts;
    }

    return collection;
  }

  function applyGenericSavesAndAdds (objects) {

    objects = objects || [];
    if (!objects.length) {
      return;
    }

    // object to store type-grouped model data
    var adds = {};
    var apiMetrics = [];

    // iterate every item in the objects array
    // then save or push into the adds object
    var data, type, collection, model, localChanges, deleted, modelUpdated, remoteUpdated;
    for (var i = 0, len = objects.length; i < len; i++) {

      data = objects[i];

      // API WORK AROUND FOR DELETE
      if (_deleteCache[data.id] && !data.deleted_at) {
        apiMetrics.push(['analytics:APIMetrics:ReplicationFailure', 'deletion']);
        // runtime.trigger('analytics:APIMetrics:ReplicationFailure', 'deletion');
        continue;
      }

      // reject invalid objects in the array, if any
      if (!data || !data.id || !data.type) {
        continue;
      }

      type = data.type;
      collection = collectionFromType(type);

      if (type === 'Task') {
        collection = collections[(!data.parent_id) ? 'tasks': 'subtasks'];
        data.completed = !!data.completed_at;
      }

      // Skip objects without "type" field or the ones without a valid collection
      if (!type || !collection) {
        continue;
      }

      if (type === 'User') {

        // since we do not use the actual friends or contacts endpoint, we need
        // to save our built contacts with the pro flag that we get from contacts
        var contactModel = collections.contacts.get(data.id);
        contactModel && contactModel.set('pro', data.pro);

        continue;
      }

      // Fix the online IDs
      _remapOnlineIDs(data);

      // get the local model if it exists
      model = collection.get(data.id) || collection.get(collection.getIdByAltId(data.id));

      // API is not sending parent_id anymore on deleted subtasks ...
      if (!model && data.type === 'Task') {
        // so if no model, look in subtasks too
        model = collections.subtasks.get(data.id) || collections.subtasks.get(collections.subtasks.getIdByAltId(data.id));
      }

      // never allow updates that are older than current local state
      if (model && model.attributes.updated_at) {

        modelUpdated = model.attributes.updated_at;
        modelUpdated = modelUpdated && Date.parse(modelUpdated); //moment(modelUpdated).valueOf();
        remoteUpdated = Date.parse(data.updated_at); //moment(data.updated_at).valueOf();

        // if incoming data is old, or the same we already have, stop here
        // this can be both replication failures, or in emergency cases when the API rolls back since
        // in order to catch clients back up after an outage
        if (modelUpdated && remoteUpdated && (remoteUpdated <= modelUpdated)) {
          // if it is truly old, report to GA
          (remoteUpdated < modelUpdated) && apiMetrics.push(['analytics:APIMetrics:ReplicationFailure', 'oldData']);//runtime.trigger('analytics:APIMetrics:ReplicationFailure', 'oldData');
          continue;
        }
      }

      // Skip deleted ones, & destroy local copies if any
      if (data.deleted_at) {
        model && model.destroy(fromSyncOptions);
        continue;
      }

      // Remove the fields that mean nothing to the web-app
      _trimRemoteObject(data);

      // Fix positions values
      if ('position' in data) {
        data.position = parseFloat(data.position);
      }

      // Is this model locally destroyed?
      deleted = _isPendingDeletion(data.online_id) || _isPendingDeletion(data.id);

      if (model) {

        // merge local changes before persisting
        localChanges = changeMaps.updated.get(data.online_id) || changeMaps.updated.get(data.id) || changeMaps['new'].get(data.id);

        if (localChanges) {
          data = _.extend({}, data, localChanges);
        }

        // if the sync value matches the model value
        // do not save and trigger any events on siletly saved attributes!
        var currentAttributes = model.attributes;
        var val, key;
        for (key in data) {
          val = data[key];
          if (val === currentAttributes[key]) {
            delete data[key];
          }
        }

        // don't create any dupes!!!
        delete data.id;

        // Update the model
        !deleted && model.save(data, fromSyncOptions);
      }
      else {
        // group adds for adding to collection
        type = (type === 'Task' && data.parent_id ? 'Subtask' : type);
        if (!adds[type]) {
          adds[type] = [];
        }

        // don't add deleted objects
        !deleted && adds[type].push(data);
      }
    }

    // adds is a type-indexed object of model arrays
    // add grouped models per type
    var add, addCollection;
    for (var addType in adds) {
      add = adds[addType];
      addCollection = collectionFromType(addType);
      add.length && addCollection.add(add, fromSyncOptions);
    }

    _.defer(function () {
      for (var i=0, len=apiMetrics.length; i < len; i ++) {

        runtime.trigger(apiMetrics[i][0], apiMetrics[i][1]);
      }
    });
  }

  function saveGeneric (objects) {

    var saveDeferred = new $.Deferred();
    var tasks, subtasks;
    // convert single object to an array
    if (objects && !_.isArray(objects)) {

      objects = [objects];
    }

    if (!authenticated() || !objects || !objects.length) {

      return saveDeferred.resolve().promise();
    }

    // separate tasks/subtasks to put parent tasks above subtasks
    if (objects[0].type === 'Task') {

      tasks = _.filter(objects, function (obj) {

        return obj && !obj.parent_id;
      });

      subtasks = _.filter(objects, function (obj) {

        return obj && !!obj.parent_id;
      });

      applyGenericSavesAndAdds(tasks);
      applyGenericSavesAndAdds(subtasks);
    }
    else {

      applyGenericSavesAndAdds(objects);
    }

    return saveDeferred.resolve().promise();
  }

  function saveSettings (settings) {

    var saveSettingsDeferred = new $.Deferred();

    if (!authenticated() || !settings || _.size(settings) === 0) {

      return saveSettingsDeferred.resolve().promise();
    }

    // Make sure settings are saved correctly prefixed or not, based on if they exists in the crossClientSettings list
    var val, unPrefixed;
    for (var key in settings) {

      val = settings[key];

      // handle web prefixed keys
      if (/^web_/.test(key)) {

        unPrefixed = key.replace(/^web_/, '');
        if (!crossClientSettings[unPrefixed]) {
          settings[unPrefixed] = val;
        }

        // never save keys locally prefixed
        delete settings[key];
      }
      else {

        // only allow in white listed unprefixed keys
        if (!crossClientSettings[key]) {
          delete settings[key];
        }
      }
    }

    var localSettingsChanges = changeMaps && changeMaps.settings && changeMaps.settings.attributes;

    settings = _.extend({}, runtime.settings.defaults, settings, localSettingsChanges);
    delete settings.id;

    runtime.settings.save(settings, fromSyncOptions);

    return saveSettingsDeferred.resolve().promise();
  }

  function saveShares (shares) {

    var saveSharesDeferred = new $.Deferred();

    if (!authenticated() || !shares || !shares.length || shares.errors) {
      return saveSharesDeferred.resolve().promise();
    }

    var contacts = [], friends = [];
    var allShares = collections.shares;
    _.each(shares, function (share) {

      // Fix the online IDs
      _remapOnlineIDs(share);

      // Add the share or update if it already exists
      var shareModel = allShares.get(share.id);

      // Skip deleted ones, & destroy local copies if any
      if(share.deleted_at) {
        shareModel && shareModel.destroy(fromSyncOptions);
        return;
      }

      // Extract list members from sync data
      var contact = share.recipient;

      if (!contact) {

        // console.log('share has no contact! ', share);
        shareModel && shareModel.destroy(fromSyncOptions);
        return;
      }

      // If the recipient is the current user then add the sender instead
      if(contact.id === runtime.user.id) {
        contact = share.sender;
      }

      // if the share is accepted, mark the contact as a friend
      ((!!share.accepted_at) ? friends : contacts).push(contact);

      // add or update
      if (shareModel) {

        !_isPendingDeletion(share.id) && shareModel.save(share, fromSyncOptions);
      }
      else {

        !_isPendingDeletion(share.id) && allShares.add(share, fromSyncOptions);
      }
    });
    // Save the extracted contacts & mark them as notFriends
    saveContacts(contacts, {
      'notFriends' : true
    });
    saveContacts(friends, {});

    return saveSharesDeferred.resolve().promise();
  }

  function saveContacts (contacts, options) {

    var saveContactsDeferred = new $.Deferred();

    if(!authenticated() || !contacts || !contacts.length) {

      return saveContactsDeferred.resolve().promise();
    }

    var allContacts = collections.contacts;
    _.each(contacts, function (contact) {

      if(!contact.id) {
        return;
      }

      var contactModel = allContacts.get(contact.id);

      // Skip deleted ones, & destroy local copies if any
      if(contact.deleted_at) {

        contactModel && contactModel.destroy(fromSyncOptions);
        return;
      }

      !options.notFriends && (contact.isFriend = true);
      if(contactModel) {

        !_isPendingDeletion(contact.id) && contactModel.save(contact, fromSyncOptions);
      }
      else {

        !_isPendingDeletion(contact.id) && (contactModel = allContacts.add(contact, fromSyncOptions));
      }
    });

    return saveContactsDeferred.resolve().promise();
  }

  function saveQuotas (quotas) {

    var saveQuotasDeferred = new $.Deferred();
    if (!authenticated() || !quotas) {
      return saveQuotasDeferred.resolve().promise();
    }

    var trialModel = runtime.user.trialModel;
    trialModel.save({

      'daily_assignments': quotas.daily_assignments,
      'daily_attachments': quotas.daily_attachments,
      'daily_comments': quotas.daily_comments,
      'overall_assignments': quotas.overall_assignments,
      'overall_attachments': quotas.overall_attachments,
      'overall_comments': quotas.overall_comments
    });

    return saveQuotasDeferred.resolve().promise();
  }

  function saveNotifications (notifications) {

    var saveNotificationsDeferred = new $.Deferred();

    if(!authenticated() || !notifications || !notifications.length) {

      return saveNotificationsDeferred.resolve().promise();
    }

    var allNotifications = collections.notifications;
    _.each(notifications, function (notification) {

      if (!notification.id || _isPendingDeletion(notification.id)) {

        return;
      }

      _remapOnlineIDs(notification);

      var notificationModel = allNotifications.get(notification.id);

      if (notification.deleted_at) {

        notificationModel && notificationModel.destroy(fromSyncOptions);
        return;
      }

      if (notificationModel) {

        notificationModel.save(notification, fromSyncOptions);
      }
      else {

        allNotifications.add(notification, fromSyncOptions);
      }
    });

    return saveNotificationsDeferred.resolve().promise();
  }

  function authenticated() {

    return !!runtime.user.get('token');
  }

  return  {
    'init': init,
    'generic': saveGeneric,
    'user': saveUser,
    'remapOnlineIDs': _remapOnlineIDs,
    'settings': saveSettings,
    'shares': saveShares,
    'notifications': saveNotifications,
    'quotas': saveQuotas,

    // API WORKAROUND
    'deleteCache': _deleteCache,
  };

});
define('backend/sync/request/preprocessors',[

  'application/runtime',

  'wunderbits/WBSingleton'
], function (runtime, WBSingleton) {

  

  var _ = runtime._;

  return WBSingleton.extend({

    'init': function (options) {

      var self = this;
      options = options || {};

      self.collections = options.collections;
      self.crossClientSettings = options.crossClientSettings;
    },

    'remapGenericParentId': function (parentField, parentType, obj, collection) {

      var self = this;
      if (!obj[parentField] || !parentType || !obj || !collection) {
        throw new Error('All arguments required for remapGenericParentId');
      }

      // this function can be called again after sync fails, or a task is moved between lists
      // if the parent id is a local_identifier, extract the localId for client id regeneration
      var parentId = obj[parentField];
      var mappedParentId;
      if (/:/.test(parentId)) {

        var parts = parentId.split(':');
        mappedParentId = parts[parts.length -1];
      }
      else {
        mappedParentId = parentId;
      }

      var parentModel = collection.get(mappedParentId) || collection.get(collection.getIdByAltId(mappedParentId));
      var onlineParentId = parentModel && parentModel.get('online_id');

      // if the parent resource has a remote id, use it,
      // otherwise generate a local_identifier string for the resource id
      obj[parentField] = onlineParentId || self.generateClientId(parentType, mappedParentId);
    },

    'remapListId': function (obj) {

      var self = this;
      if (!obj.list_id || obj.list_id === 'inbox') {
        return;
      }

      self.remapGenericParentId('list_id', 'List', obj, self.collections.lists);
    },

    'generateClientId': function (type, localId) {

      if (!localId || !type) {
        throw new Error('Unable to generate client local_identifier without an local id or type.');
      }

      var genericClientIdPattern = 'localId:web:?:?:?';
      var prepopulatedListClientIdPattern = 'localId:prepopulated:?:?:?';

      var prepopulatedListIds = ['private', 'work', 'shopping', 'movies', 'wishlist'];
      var isPrepopulatedList = prepopulatedListIds.indexOf(localId) >= 0;
      var clientIdPattern = isPrepopulatedList ? prepopulatedListClientIdPattern : genericClientIdPattern;

      var userId = _.last(runtime.user.id.split(':'));
      var data = [userId, type, localId];
      var i = 0;
      return clientIdPattern.replace(/\?/g, function() {
        return data[i++];
      });
    },

    'list': function () {

      return '/me/lists';
    },

    'task': function (obj) {

      var self = this;

      if (obj.list_id && obj.list_id !== 'inbox') {
        self.remapListId(obj);
      }
      else {
        obj.list_id = 'inbox';
      }

      obj.parent_id && self.subtask(obj);
      delete obj.completed;

      return '/me/tasks';
    },

    'subtask': function (obj) {

      var self = this;
      if (!obj.parent_id) {
        throw new Error('Subtasks require a parent_id');
      }

      self.remapGenericParentId('parent_id', 'Task', obj, self.collections.tasks);
    },

    'reminder': function (obj) {

      var self = this;
      if (!obj.task_id) {
        throw new Error('Reminders require a task_id');
      }

      self.remapGenericParentId('task_id', 'Task', obj, self.collections.tasks);
      return '/me/reminders';
    },

    'share': function (obj) {

      if (!obj.resource_id) {
        return;
      }

      var self = this;

      var sharedList = self.collections.lists.get(obj.resource_id);
      var onlineResourceId = sharedList && sharedList.get('online_id');

      var shareRecipient = self.collections.contacts.get(obj.recipient.id);
      var onlineRecipientId = shareRecipient && shareRecipient.get('online_id');

      if (!onlineResourceId) {
        // TODO: for now don't share a list until sync, there is no POST on /me/shares
        // obj.resource_id = _generateClientId('List', obj.resource_id);
        return;
      }
      else {
        obj.resource_id = onlineResourceId;
      }

      if (onlineRecipientId) {
        obj.recipient.id = onlineRecipientId;
      }

      return '/' + onlineResourceId + '/shares';
    },

    'service': function (obj) {

      // TODO: remove this once API is ready
      delete obj.local_identifier;
      return '/me/services';
    },

    'event': function (obj) {

      // TODO: remove this once API is ready
      delete obj.local_identifier;
      return '/me/events';
    },

    'settings': function (obj) {

      obj = obj || {};

      var self = this;
      var settingsObj = {};
      var val;

      for (var key in obj) {
        val = obj[key];

        // Sync web specific settings with prefix
        if (!(key in self.crossClientSettings)) {
          settingsObj['web_' + key] = val;
        }
        else {
          settingsObj[key] = val;
        }
      }

      return settingsObj;
    },

    'newData': function (obj, id) {

      var self = this;

      var preprocessorMap = {

        'List': self.list,
        'Task': self.task,
        'Reminder': self.reminder,
        'Share': self.share,
        'Service': self.service,
        'Event': self.event,
        'Settings': self.settings
      };

      var type = obj.type;
      obj.local_identifier = obj.local_identifier || self.generateClientId(type, id);
      delete obj.id;

      var preprocessor = preprocessorMap[type];
      var url = preprocessor && preprocessor.call(self, obj);

      // Delete all falsey values from the object before posting, saves bytes
      var val;
      for (var key in obj) {
        val = obj[key];
        !val && (key !== 'completed_at' && key !== 'position') && delete obj[key];
      }

      return {
        'url': url,
        'data': obj
      };
    }
  });
});
define('models/CommentModel',[

  'application/runtime',

  'backend/sync/processors',
  'backend/sync/request/preprocessors',

  'wunderbits/helpers/strings',

  'wunderbits/WBModel'

], function (
  runtime,
  processors,
  Preprocessors,
  StringHelper,
  WBModel,
  undefined
) {

  

  var $ = runtime.$;
  var w_ = runtime.w_;
  var config = runtime.config;
  var _super = WBModel.prototype;
  var _ = runtime._;

  return WBModel.extend({

    'storeName': 'comments',

    'defaults': {
      'type': 'Message',
      'text': undefined,
      'author': undefined,
      'local_created_at': undefined,
      'local_identifier': undefined
    },

    'initialize': function (data, options) {

      options = options || {};

      var self = this;
      _super.initialize.apply(self, arguments);

      self.localIds = [];

      self.comment = options.comment;
      self.task = options.task;

      if (self.comment && self.task) {

        // parent task must have an online_id before uploading
        var taskReady = new $.Deferred();
        if (!self.task.attributes.online_id) {
          self.bindOnceTo(self.task, 'change:online_id', taskReady.resolve);
        }
        else {
          taskReady.resolve();
        }

        // parent task online_id exists, prepare to upload
        taskReady.done(function () {

          var commentReady = new $.Deferred();
          if (!self.attributes.online_id) {
            self.once('change:online_id', commentReady.resolve);
          }
          else {
            commentReady.resolve();
          }

          commentReady.done(function () {

            self.handleComment();
          });

          // initiate sending the comment, or wait until online
          self.sendCommentWhenOnline();
        });
      }

      self.forceDateFormat();
      self.on('change:local_created_at', self.forceDateFormat);
    },

    'forceDateFormat': function () {

      var self = this;

      // fix the iso to a strict format
      // "YYYY-MM-DDTHH:mm:ss.SSSZ"
      var attributes = self.attributes;
      var localCreatedAt = attributes.local_created_at;
      localCreatedAt = localCreatedAt.replace(/\.([\d]*)Z/, function (match, part) {

        part = part.substr(0, 3);
        part = StringHelper.pad(part, 3, true);
        return '.' + part + 'Z';
      });
      self.save('local_created_at', localCreatedAt);
    },

    'getOnlinePromise': function () {

      var self = this;

      var onlineReady = new $.Deferred();
      var online = runtime.env.isOnline();
      if (!online) {
        var onlineBind = self.bindTo(runtime, 'sync', function () {

          if (runtime.env.isOnline()) {
            onlineReady.resolve();
            self.unbindFrom(onlineBind);
          }
        });
      }
      else {
        onlineReady.resolve();
      }

      return onlineReady.promise();
    },

    'sendCommentWhenOnline': function () {

      var self = this;
      var online = self.getOnlinePromise();

      online.done(function () {

        // deferred to ensure we let the db save, and ids generate
        w_.defer(self.handleComment, self);
      });
    },

    'handleComment': function () {

      var self = this;

      if (!self.task || (self.task && !self.task.attributes.online_id)) {

        return;
      }

      var taskUrl = config.comments.host + '/tasks/' + self.task.attributes.online_id + '/messages';
      var localId = Preprocessors.generateClientId('Message', self.attributes.id);

      if (self.localIds.indexOf(localId) >= 0) {
        return;
      }

      self.localIds.push(localId);

      runtime.io.post(taskUrl, {
        'local_identifier': localId,
        'text': self.attributes.text,
        'local_created_at': self.attributes.local_created_at
      }).success(function () {
        // nothing really needs to happen here
      }).error(function () {

        self.localIds = _.without(self.localIds, localId);
        //runtime.trigger('commentsPage:fail');
      });
    }
  });
});
define('collections/CommentsCollection',[

  'application/runtime',

  'models/CommentModel',

  'wunderbits/collections/WBCollection',

  'vendor/moment'

], function (
  runtime,
  CommentModel,
  WBCollection,
  moment,
  undefined
) {

  

  var format = 'YYYY-MM-DDTHH:mm:ss.SSSZ';

  var $ = runtime.$;
  var _ = runtime._;

  var _super = WBCollection.prototype;

  return WBCollection.extend({

    'storeName': 'comments',

    'model': CommentModel,

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);
      var hasUrl = new $.Deferred();

      if (self.url !== undefined) {

        hasUrl.resolve();
      }
      else {

        self.on('change:url', function () {

          (self.url !== undefined) && hasUrl.resolve();
          self.off('change:url');
        });
      }

      $.when(hasUrl).then(function () {
        // trigger binding to this collection on tha parent task
        var taskId = self.url.split('/')[2];
        runtime.publish('hasComments:' + taskId);
      });
    },

    'getUserCreatedModels': function () {

      var self = this;

      var now = moment();
      var models = _.where(self.models, function (model) {

        return model.attributes.author.id === runtime.user.id && moment(model.attributes.created_at).diff(now, 'days') === 0;
      });

      return models;
    },

    'createdAtCache': {},

    'getValueOfCreatedAt': function (model, local) {

      var self = this;
      var cache = local ? self.localCreatedAtCache : self.createdAtCache;
      var key = local ? 'local_created_at': 'created_at';
      var dateFormat = local ? format : undefined;
      var valueOf;

      if (model.id in cache) {
        valueOf = cache[model.id];
      }
      else {
        valueOf = cache[model.id] = moment(model.attributes[key], dateFormat).valueOf();
      }

      return valueOf;
    },

    'comparator': function (a, b) {

      var self = this;

      if (!a.attributes.created_at || !b.attributes.created_at) {
        return self.sortByLocalCreate(a, b);
      }
      else {

        var createdAtA = self.getValueOfCreatedAt(a);
        var createdAtB = self.getValueOfCreatedAt(b);

        // start with created at
        if (createdAtA > createdAtB) {
          return 1;
        }

        if (createdAtA < createdAtB) {
          return -1;
        }

        return self.sortByLocalCreate(a, b);
      }
    },

    'localCreatedAtCache': {},

    'sortByLocalCreate': function (a, b) {

      var self = this;

      // fallback to local at when same server creation
      var localCreatedAtA = self.getValueOfCreatedAt(a, true);
      var localCreatedAtB = self.getValueOfCreatedAt(a, true);

      if (localCreatedAtA > localCreatedAtB) {
        return 1;
      }

      if (localCreatedAtA < localCreatedAtB) {
        return -1;
      }

      var aId = a.attributes.id;
      var bId = b.attributes.id;

      if (aId > bId) {
        return -1;
      }

      if (aId < bId) {
        return 1;
      }

      return 0;
    }
  });
});
define('backend/S3Uploader',[

  'application/runtime',

  'vendor/moment',

  'collections/FilesCollection',

  'wunderbits/helpers/date',

  'wunderbits/WBEventEmitter'

], function (
  runtime,
  moment,
  FilesCollection,
  DateHelper,
  WBEventEmitter,
  undefined
) {

  

  var MAX_REGULAR_SIZE = 10*1024*1024; // 10MB
  var CHUNK_SIZE = 6*1024*1024; // 6MB

  var global = runtime.global;
  var io = runtime.io;
  var _super = WBEventEmitter.prototype;

  // Check for XHR2 upload support
  var _canUpload = ('upload' in (new global.XMLHttpRequest()));

  // and, File chunking support
  var FileProto = global.File && global.File.prototype || {};
  var _hasFileSlicing = ('slice' in FileProto || 'webkitSlice' in FileProto);

  return WBEventEmitter.extend({

    'initialize': function (file, localId, name, url) {

      var self = this;
      self.file = file;
      self.name = name;
      self.url = url;
      self.localId = localId;

      _super.initialize.call(self);
    },

    'upload': function () {

      var self = this;

      // If the file is larger than 10MB & browser supports file chunking
      // else, try to upload in one big piece
      var canChunk = (self.hasFileSlicing() && self.file.size > MAX_REGULAR_SIZE);
      self._requestUpload(canChunk);
    },

    'retryUpload': function () {

      var self = this;

      var canChunk = (self.hasFileSlicing() && self.file.size > MAX_REGULAR_SIZE);
      var continueFn = canChunk ? self._uploadChunked : self._uploadRegular;
      var expired;

      if (self.writeInfo && self.writeData) {

        expired = moment(self.writeInfo.expires * 1000).format('YYYY-MM-DDTHH:mm:ssZ');
        expired = expired && DateHelper.convertServerTimeToLocalTime(expired);
        expired = expired && (moment(expired).valueOf() - Date.now()) < 5000;

        if (expired) {

          io.get(self.url + '/' + self.writeData.online_id).done(function (data) {

            data.write && (self.writeInfo = data.write);
            continueFn(self.writeInfo, self.writeData);
          });
        }
        else {
          continueFn(self.writeInfo, self.writeData);
        }
      }
    },

    'destroy': function () {

      // TODO: clean up here
    },

    // 1 OPENED  send()has not been called yet.
    // 4 DONE  The operation is complete.
    '_updateStatus': function (state) {

      var self = this;
      if (state === 1) {
        self.trigger('change:state', 1);
      } else if (state === 2) {
        self.trigger('change:state', 2);
        self.trigger('upload:complete');
      }
    },

    '_trackProgress': function (loaded) {

      var self = this;
      var progess = Math.floor(((self.uploaded + loaded) / self.file.size) * 100);
      self.progess = progess;
      self.trigger('change:progress', progess);
    },

    '_handleAPIError': function (xhr) {

      var self = this;
      self.trigger('api:error', xhr);
    },

    '_uploadError': function (xhr, error) {

      var self = this;
      // if the error was due to file deletion
      if (error === 'error:fileDeleted') {
        self.trigger(error);
      }
      // other errors need retrying
      else {
        self.trigger('upload:error', xhr);
      }
    },

    '_uploadRegular': function (writeInfo) {

      var self = this;

      var request = io.upload(writeInfo.url, self.file, {
        'Content-Type': self.type
      });

      request.fail(self._uploadError, self);
      self.bindTo(request, 'change:state', '_updateStatus');
      self.bindTo(request, 'change:progress', '_trackProgress');

      self.on('upload:abort', request.abort, request);
      self.on('upload:start', request.send, request);
    },

    '_uploadChunked': function (writeInfo, data) {

      var self = this;
      var file = self.file;
      var start = 0, chunk;

      self.uploadId = writeInfo.upload_id;
      self.chunks = [];
      self.writeInfos = [];

      var slice = file && (file.slice || file.webkitSlice);
      while (start < file.size) {
        chunk = slice.call(file, start, start+=CHUNK_SIZE);
        self.chunks.push(chunk);
      }

      self.chunkUrl = '/' + ['files', data.online_id, 'parts'].join('/');

      // start uploading
      self.trigger('change:state', 1);
      self._requestChunkSignature(0);
    },

    '_requestChunkSignature': function (index) {

      var self = this;
      var url = self.chunkUrl + '/' + (index + 1);

      io.get(url, {
        'upload_id': self.uploadId
      }).then(function (writeInfo) {
        self.writeInfos[index] = writeInfo;
        self._uploadChunk(index);
      });
    },

    '_uploadChunk': function (index) {

      var self = this;

      var writeInfo = self.writeInfos[index];
      var chunk = self.chunks[index];

      var request = io.upload(writeInfo.url, chunk, {
        'x-amz-date': writeInfo.date,
        'Authorization': writeInfo.authorization
      });

      request.fail(self._uploadError, self);
      self.bindTo(request, 'change:progress', '_trackProgress');

      self.once('upload:abort', request.abort, request);
      self.once('upload:start', request.send, request);

      request.then(function (xhr) {

        self.uploaded += chunk.size;
        self.chunks[index] = xhr.getResponseHeader('ETag');

        // upload next part
        if(index < self.chunks.length - 1) {
          self._requestChunkSignature(index + 1);
        } else {
          self.trigger('change:state', 2, self.uploadId, self.chunks);
          self.trigger('upload:complete');
        }
      });
    },

    '_requestUpload': function (isChunked) {

      var self = this;

      var continueFn = isChunked ? self._uploadChunked : self._uploadRegular;
      var data = {
        'local_identifier': self.localId,
        'file_name': self.name,
        'content_type': self.file.type,
        'file_size': self.file.size
      };
      isChunked && (data.chunked = true);

      io.post(self.url, data).success(function (data) {

        self.type = data.file.type;
        self.uploaded = 0;

        var writeInfo = data.write;
        delete data.write;

        self.trigger('api:data', data);

        self.writeInfo = writeInfo;
        self.writeData = data;

        continueFn(writeInfo, data);
      }).error(self._handleAPIError);
    },

    'canUpload': function () {
      return _canUpload;
    },

    'hasFileSlicing': function () {
      return _hasFileSlicing;
    }

  });
});
define('models/FileModel',[

  'application/runtime',

  'backend/S3Uploader',
  'backend/sync/processors',
  'backend/sync/request/preprocessors',

  'wunderbits/WBModel'

], function (runtime, S3Uploader, Processors, Preprocessors, WBModel, undefined) {

  

  var $ = runtime.$;
  var _ = runtime._;
  var w_ = runtime.w_;

  var _super = WBModel.prototype;

  return WBModel.extend({

    'storeName': 'files',

    'defaults': {
      'type': 'File'
    },

    'initialize': function (data, options) {

      options = options || {};
      var self = this;
      _super.initialize.apply(self, arguments);

      // NOTE:
      // File model sync is only switched from normal DB sync to runtime.ioRest.sync
      // when the file has started uploading or exists remotely.
      // It starts with normal sync so that ids and local identifiers
      // can be properly generated and stored.

      // if this is a locally created file attachment
      self.file = options.file;
      self.task = options.task;
      if (self.file && self.task) {

        // parent task must have an online_id before uploading
        var taskReady = new $.Deferred();
        if (!self.task.attributes.online_id) {
          self.bindOnceTo(self.task, 'change:online_id', taskReady.resolve);
        }
        else {
          taskReady.resolve();
        }

        // parent task online_id exists, prepare to upload
        taskReady.done(function () {

          // do not use runtime.ioRest.sync until the file has an online_id
          var fileReady = new $.Deferred();
          if (!self.attributes.online_id) {
            self.once('change:online_id', fileReady.resolve);
          }
          else {
            fileReady.resolve();
          }

          fileReady.done(function () {
            // create the correct rest url for this file
            self.url = '/tasks/' + self.task.attributes.online_id + '/files/' + self.attributes.online_id;
            self.sync = runtime.ioRest.sync;
          });

          // initiate file upload if online, or wait until online
          self.uploadWhenOnline();
        });
      }
      else {
        // this is for a file not created by this local session, or it failed miserably
        if (!self.attributes.online_resource_id || !self.attributes.online_id) {

          // if the user refreshed the browser before the file started uploading
          // it is no longer uploadable by the browser, destroy it
          self.destroy({'fromSync': true});
        }

        self.url = '/tasks/' + self.attributes.online_resource_id + '/files/' + self.attributes.online_id;
        self.sync = runtime.ioRest.sync;
      }

      // free up the rams
      self.on('change:state', self.onStateChange);

      // cancel in-progress uploads if this file is destroyed
      self.on('destroy', function () {

        self.aborted = true;
        self.uploader && self.uploader.trigger('upload:abort');
      });
    },

    'getOnlinePromise': function () {

      var self = this;

      var onlineReady = new $.Deferred();
      var online = runtime.env.isOnline();
      if (!online) {
        var onlineBind = self.bindTo(runtime, 'sync', function () {

          if (runtime.env.isOnline()) {
            onlineReady.resolve();
            self.unbindFrom(onlineBind);
          }
        });
      }
      else {
        onlineReady.resolve();
      }

      return onlineReady.promise();
    },

    'uploadWhenOnline': function () {

      var self = this;

      var online = self.getOnlinePromise();
      online.done(function () {
        // deferred to ensure we let the db save, and ids generate
        w_.defer(self.upload, self);
      });
    },

    'retryUpload': function () {

      var self = this;

      // don't retry on destroyed or aborted upload models
      if (self.destroyed || self.aborted) {
        return;
      }

      if (self.uploader) {
        var online = self.getOnlinePromise();
        online.done(function () {
          self.uploader.retryUpload();
          self.trigger('upload:retrying');
          console.log('retrying');
        });
      }
    },

    'upload': function () {

      // should be able to retry uploading if it fails, etc.

      var self = this;

      console.trace();
      // handle uploader data
      var name = self.attributes.file.name;
      var taskUrl = '/tasks/' + self.task.attributes.online_id + '/files';
      var localId = Preprocessors.generateClientId('File', self.attributes.id);
      var uploader = new S3Uploader(self.file, localId, self.attributes.file_name, taskUrl);
      self.uploader = uploader;
      self.stateBind = self.bindTo(uploader, 'change:state', self.onUploadStateChange);

      self.trigger('hasUploader', uploader);
      uploader.once('api:data', function (data) {

        var fileUrl = taskUrl + '/' + data.id;

        Processors.remapOnlineIDs(data);
        data.url = fileUrl;
        self.save(data);

        // handle S3 upload error by trying to reupload when coming back online
        self.uploadErrorBind = self.bindTo(uploader, 'upload:error', self.retryUpload);

        // handle source file getting deleted
        self.sourceFileDeletedBind = self.bindTo(uploader, 'error:fileDeleted', self.onSourceFileDelete);

        uploader.publish('upload:start');
      });

      // handle API uploader error by failing hard
      var apiErrorWrapper = function (xhr) {

        var error;

        if (xhr.response && xhr.response.data && xhr.response.data.error) {
          error = xhr.response.data.error;
        }

        self.handleUploadError(name, error);
      };
      uploader.once('api:error', apiErrorWrapper);

      // start the upload
      uploader.upload();

      // analytics for file types (extensions)
      var nameParts = name.split('.');
      (nameParts.length > 1) && runtime.trigger('analytics:Files:UploadExtension', nameParts[nameParts.length - 1]);
    },

    'onSourceFileDelete': function () {

      var self = this;
      var action = function () {

        if (runtime.focus !== 'confirmation') {
          var fileName = _.escape(self.attributes.file.name);
          runtime.trigger('modal:confirm', {
            'customTitle': runtime.language.getLabel('file_uploaded_unsuccessfully', fileName).toString(),
            'customText': runtime.language.getLabel('file_uploaded_failed_deleted', fileName).toString(),
            'confirmText': runtime.language.getLabel('button_ok').toString(),
            'hideCancel': true,
            'confirm': self.remoteDestroy
          });
        }
        else {
          window.setTimeout(action, 1000);
        }
      };

      action();
    },

    'handleUploadError': function (fileName, error, callback) {

      error = error || '';

      var action = function () {

        if (runtime.focus !== 'confirmation') {
          runtime.trigger('modal:confirm', {
            // TODO USER FILES SPECIFIC STRINGS
            'customTitle': runtime.language.getLabel('file_uploaded_unsuccessfully', _.escape(fileName)).toString(),
            'customText': error,
            'confirmText': runtime.language.getLabel('button_ok').toString(),
            'hideCancel': true,
            'confirm': _.isFunction(callback) ? callback : undefined
          });
        }
        else {
          window.setTimeout(action, 1000);
        }
      };

      action();
    },

    'onUploadStateChange': function (state, uploadId, etags) {

      var self = this;

      if (state === 1) {

        self.save({
          'state': 1
        }, {
          'forRemote': true
        });
      }
      else if (state === 2) {

        self.save({
          'state': 2,
          'upload_id': uploadId,
          'etags': etags
        }, {
          'forRemote': true
        });
      }
    },

    'onStateChange': function () {

      var self = this;
      if (self.attributes.state === 2) {

        self.stateBind && self.unbindFrom(self.stateBind);
        self.uploadErrorBind && self.unbindFrom(self.uploadErrorBind);
        self.sourceFileDeletedBind && self.unbindFrom(self.sourceFileDeletedBind);
        self.uploader && (delete self.uploader);
        self.file && (delete self.file);
      }
    },

    'remoteDestroy': function () {

      var self = this;
      self.sync = runtime.ioRest.sync;
      self.destroy({
        'forRemote': true
      });
    }
  });
});
define('collections/FilesCollection',[

  'application/runtime',

  'models/FileModel',

  'wunderbits/collections/WBCollection',

  'vendor/moment'

], function (
  runtime,
  FileModel,
  WBCollection,
  moment,
  undefined
) {

  

  var $ = runtime.$;

  var _super = WBCollection.prototype;

  return WBCollection.extend({

    'storeName': 'files',

    'model': FileModel,

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      var hasUrl = new $.Deferred();

      if (self.url !== undefined) {

        hasUrl.resolve();
      }
      else {

        self.on('change:url', function () {

          (self.url !== undefined) && hasUrl.resolve();
          self.off('change:url');
        });
      }

      $.when(hasUrl).then(function () {

        // trigger binding to this collection on tha parent task
        var taskId = self.url.split('/')[2];
        runtime.publish('hasFiles:' + taskId);
      });
    },

    'comparator': function (a, b) {

      var sort;

      var aCreated = moment(a.attributes.created_at).valueOf();
      var bCreated = moment(b.attributes.created_at).valueOf();

      if (aCreated === bCreated) {

        var aName = a.attributes.file.name.toLowerCase();
        var bName =  b.attributes.file.name.toLowerCase();

        sort = aName < bName ? -1 : aName > bName ? 1 : 0;
      }
      else {

        sort = aCreated > bCreated ? -1 : aCreated < bCreated ? 1 : 0;
      }

      return sort;
    }
  });
});
define('models/TaskModel',[

  'application/runtime',

  'vendor/moment',

  'collections/CommentsCollection',
  'collections/FilesCollection',

  'wunderbits/helpers/date',

  'wunderbits/WBModel'

], function (
  runtime,
  moment,
  CommentsCollection, FilesCollection,
  DateHelper,
  WBModel,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;

  var config = runtime.config;

  var _super = WBModel.prototype;

  return WBModel.extend({

    'defaults': {

      'type': 'Task',
      'assignee_id':null,
      'completed': false,
      'starred': false,
      'note': null,
      'created_at': null,
      'completed_at': null,
      'recurrence_type': 'none',
      'recurrence_count': 0,
      'recurring_parent_id': null,
      'due_date': null,
      'parent_id': null,
      'position': 0,
      'unreadCount':0
    },

    // properties initalized by other methods
    'debouncedUpdateHasSubtasks': undefined,
    'changeIdBind': undefined,
    'hasSubtasksBind': undefined,
    'subtasksCollection': undefined,

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      // debouncers
      self.debouncedUpdateHasSubtasks = _.debounce(self.updateHasSubtasks, 300);
      self.debouncedUpdateHasFiles = _.debounce(self.updateHasFiles, 300);
      self.debouncedUpdateHasComments = _.debounce(self.updateHasComments, 100);

      self.bindTo(self, 'change:completed', function (model, state, options) {

        if (!options.fromSync && self.isCompleted() && runtime.settings.attributes.sound_checkoff_enabled === 'true') {
          runtime.trigger('sounds:play', 'complete');
        }
      });

      if (!self.attributes.created_at) {
        self.set({
          'created_at': DateHelper.convertLocalTimeToServerTime((new Date()).toISOString())
        });
      }

      self.checkIdReady();
    },

    'checkIdReady': function () {

      var self = this;
      var hasId = new $.Deferred();
      var attributes = self.attributes;

      if (self.id !== undefined) {
        hasId.resolve();
      }
      else {
        self.bindOnceTo(self, 'change:id', function () {

          if (attributes.id !== undefined) {
            hasId.resolve();
          }
        });
      }

      $.when(hasId).then(self.onIdReady.bind(self));
    },

    'onIdReady': function () {

      var self = this;
      var attributes = self.attributes;

      // fix local file collection for this task resource
      var onlineId = attributes.online_id;
      if (onlineId && !attributes.parent_id) {

        // if the task did not exist before the file came in,
        // it will exist on the task online_id collection, handlers move to correct collection
        self.bindTo(runtime, 'hasFiles:' + onlineId, 'onHasFiles');
        self.bindTo(runtime, 'hasComments:' + onlineId, 'onHasComments');
        // handle comment state updates
        self.bindTo(runtime, 'unreadComments:' + onlineId, 'onUnreadComments');
        self.bindTo(runtime, 'readComments:' + onlineId, 'onReadComments');
      }

      // does not apply to subtasks!
      if (!attributes.parent_id) {
        var id = self.id;
        // when a subtask collection comes into existence,
        // it shall be responsible for trigging on its parent any binds
        self.bindOnceTo(runtime, 'hasSubtasks:' + id, 'bindToSubtasks');
        // same for files
        self.bindOnceTo(runtime, 'hasFiles:' + id, 'bindToFiles');
        self.bindOnceTo(runtime, 'hasComments:' + id, 'bindToComments');
        // comments are read
        attributes.online_id && self.bindTo(runtime, 'enterChat:' + onlineId, 'updateCommentsAsRead');
      }
    },

    'onCompleted': function () {

      var self = this;
      if (self.isCompleted() && runtime.settings.attributes.sound_checkoff_enabled === 'true') {
        runtime.trigger('sounds:play', 'complete');
      }
    },

    'onHasFiles': function () {

      var self = this;
      var wrongFilesCollection = new FilesCollection('/tasks/' + self.attributes.online_id + '/files');
      var correctFilesCollection = new FilesCollection('/tasks/' + self.id + '/files');
      self.moveCollection(wrongFilesCollection, correctFilesCollection);
    },

    'onHasComments': function () {

      var self = this;
      self.set('hasComments', true);

      var wrongCommentsCollection = new CommentsCollection('/tasks/' + self.attributes.online_id + '/comments');
      var correctCommentsCollection = new CommentsCollection('/tasks/' + self.id + '/comments');
      self.moveCollection(wrongCommentsCollection, correctCommentsCollection);
    },

    'onUnreadComments': function (count) {

      var self = this;
      if (_.isString(count)) {
        var currentCount = self.attributes.unreadCount;
        count = parseInt(currentCount, 10) + 1;
      }

      self.updateHasUnreadComments(true, count);
    },

    'onReadComments': function () {

      var self = this;
      self.updateHasUnreadComments(false, 0);
      runtime.trigger('commentNotificationAsRead:' +  self.attributes.id);
    },

    'moveCollection': function (wrong, correct) {

      var models = _.clone(wrong.models);
      var model;
      while (models.length) {
        model = models.shift();
        wrong.remove(model);
        correct.add(model);
      }
    },

    'route': function (options) {

      var self = this;
      options || (options = {});
      var url = 'tasks/' + self.id;

      if (options.edit) {
        url + '/edit';
      }

      runtime.trigger('route:' + url, options);
    },

    'bindToSubtasks': function () {

      var self = this;

      // subtasks don't have subtasks
      if (self.collection && !self.attributes.parent_id) {

        self.subtasksCollection = new self.collection.constructor('/tasks/' + self.id + '/subtasks');
        self.bindTo(self.subtasksCollection, 'reset add remove change:completed', 'debouncedUpdateHasSubtasks');

        self.debouncedUpdateHasSubtasks();
      }
    },

    'bindToFiles': function () {

      var self = this;

      // subtasks don't have files
      if (self.collection && !self.get('parent_id')) {

        self.filesCollection = new FilesCollection('/tasks/' + self.id + '/files');
        self.bindTo(self.filesCollection, 'reset add remove change:state', 'debouncedUpdateHasFiles');
        self.debouncedUpdateHasFiles();
      }
    },

    'bindToComments': function () {

      var self = this;

      // subtasks don't have comments!
      if (self.collection && !self.get('parent_id')) {

        self.commentsCollection = new CommentsCollection('/tasks/' + self.id + '/comments');
        self.bindTo(self.commentsCollection, 'reset add remove', 'updateHasComments');
        self.updateHasComments();
      }
    },

    'updateHasSubtasks': function () {

      var self = this;
      var hasSubtasks = self.subtasksCollection && !!self.subtasksCollection.length;
      self.set({ 'hasSubtasks': hasSubtasks });
      self.updateSubtaskCompletionPercentage();
    },

    'updateSubtaskCompletionPercentage': function () {

      var self = this;
      var percent;

      if (self.hasSubtasks()) {
        var uncomplete = self.subtasksCollection.where({'completed': false});
        var complete = self.subtasksCollection.where({'completed': true});
        percent = complete.length / (uncomplete.length + complete.length);
        percent = Math.floor(percent * 100);
      }
      else {
        percent = 0;
      }

      self.set({'subtaskCompletion': percent});
    },

    'updateHasFiles': function () {

      var self = this;
      var hasFiles = false;

      if (self.filesCollection) {
        var filesCount = _.filter(self.filesCollection.models, function (file) {
          // count only upload completed files
          // or files that are being uploaded/attached in this session
          return file.attributes.state === 2 || file.file;
        }).length;

        hasFiles = filesCount > 0;
      }
      self.set({ 'hasFiles': hasFiles});
    },

    'updateHasComments': function () {

      var self = this;

      var hasComments = (self.commentsCollection && !!self.commentsCollection.length) || !!self.attributes.hasComments;
      self.save({'hasComments': hasComments});
    },

    'updateHasUnreadComments': function (state, count) {

      var self = this;
      self.save({ 'hasUnreadComments': state });
      self.save({ 'unreadCount': count });
    },

    'isInList': function (listId) {

      var self = this;
      var collection = self.collection && self.collection.constructor('/lists/' + listId + '/tasks');

      return collection && !!collection.get(self.id);
    },

    'isInSmartList': function (listId) {

      var self = this;
      var collection = self.collection && self.collection.constructor('/tasks/filter/' + listId);

      return collection && !!collection.get(self.id);
    },

    'isInCurrentList': function () {

      var self = this;
      var listId = runtime.listId;
      var inList = self.isInList(listId);
      var inSmartList = self.isInSmartList(listId);

      return inList || inSmartList;
    },

    'isInWeekCollection': function () {

      var self = this;
      var dueInDays = self.dueFromNow();

      return !self.isCompleted() && self.isInSmartList('week') && _.isNumber(dueInDays) && dueInDays <= 6;
    },

    'isInTodayCollection': function () {

      var self = this;
      var dueFromNow = self.dueFromNow();

      return !self.isCompleted() && self.isInSmartList('today') && _.isNumber(dueFromNow) && dueFromNow <= 0;
    },

    'isStarred': function () {

      return this.attributes.starred;
    },

    'isAssigned': function () {

      return this.has('assignee_id');
    },

    'isAssignedToMe': function () {

      return this.attributes.assignee_id === runtime.user.id;
    },

    'isCompleted': function () {

      return !!this.attributes.completed;
    },

    'hasNote': function () {

      return !!this.attributes.note;
    },

    'hasSubtasks': function () {

      return this.attributes.hasSubtasks;
    },

    'hasFiles': function () {

      return this.get('hasFiles');
    },

    'hasComments': function () {

      return this.attributes.hasComments;
    },

    'hasUnreadComments': function () {

      return this.attributes.hasUnreadComments;
    },

    'hasDueDate': function () {

      return this.has('due_date');
    },

    'hasAttachment': function () {

      var self = this;
      return self.hasNote() || self.hasSubtasks() || self.hasFiles() || false;
    },

    'dueFromNow': function () {

      var modelDue = this.attributes.due_date;
      var now = moment().sod();
      var due = modelDue && moment(modelDue, 'YYYY-MM-DD').sod();

      return modelDue ? due.diff(now, 'days') : false;
    },

    'getHumanFormattedDatesForKey': function (key, datesObject) {

      var self = this;

      if (!key) {
        throw new Error('Cannot format date without defining what key to use');
      }

      var jsonKey = key + '_on';
      var modelKey = key + '_at';
      var relativeKey = key + 'Relative';
      var json = {};

      if (datesObject.yesterday) {
        json[jsonKey] = runtime.language.getText('label_relative_date_yesterday');
        json[relativeKey] = true;
      }
      else if (datesObject.earlier) {
        json[jsonKey] = moment(self.get(modelKey)).format('MMM DD, YYYY');
      }
      else if (datesObject.today) {
        json[jsonKey] = moment(self.get(modelKey)).fromNow();
        json[relativeKey] = true;
      }
      else {
        json[jsonKey] = moment(self.get(modelKey)).format('ddd, MMM DD');
      }

      return json;
    },

    'getHumanFormattedDates': function () {

      var self = this;

      var key = self.isCompleted() ? 'completed' : 'created';
      var relativeKey = key + 'At';
      var datesObject = DateHelper.getDatesFromNow(self.getSoDDates(), relativeKey);

      return self.getHumanFormattedDatesForKey(key, datesObject);
    },

    'getSoDDates': function () {

      var self = this;
      var momentTimes = {
        'createdAtDate': moment(self.attributes.created_at).startOf('day'),
        'thisYear': moment().startOf('year'),
        'today': moment().startOf('day'),
        'completedAtDate': undefined
      };

      if (self.isCompleted()) {

        var completedAt = self.attributes.completed_at && moment(self.attributes.completed_at);
        momentTimes.completedAtDate = completedAt ? completedAt.startOf('day'): moment().startOf('day');
      }

      return momentTimes;
    },

    'updateCommentsAsRead': function () {

      var self = this;
      var onlineId = self.attributes.online_id;
      var taskUrl = config.comments.host + '/tasks/' + onlineId  + '/read';
      // restfulIO is for rest operations, it automatically queues failures for retries
      self.attributes.hasUnreadComments && runtime.ioRest.restfulIO('put', taskUrl);

       // updates ui
      runtime.trigger('readComments:' + onlineId, false);
    }
  });
});
define('collections/TaskCollection',[

  'application/runtime',

  'vendor/moment',

  'helpers/collectionSorting',
  'helpers/Positions',

  'models/TaskModel',

  'wunderbits/collections/WBCollection'

], function (
  runtime,
  moment,
  collectionSorting, PositionsHelper,
  TaskModel,
  WBCollection,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;

  var _super = WBCollection.prototype;

  return WBCollection.extend({

    'storeName': 'tasks',

    'model': TaskModel,

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.sort = self.performanceSort;

      // Need to debounce
      self._debouncedUpdatePositions = _.debounce(self.updatePositions, 500);
      self._debouncedSort = _.debounce(_super.sort, 500);
      self._debouncedUpdateCount = _.debounce(self._updateCount, 1);

      // needs to be overwritten here, does not work in extend, I do not know why - raymond
      self.comparator = self._handleSorting;

      self.on('add remove change:position', self._debouncedUpdatePositions);
      self.on('change:position change:completed change:starred', self._debouncedSort);
      self.updatePositions();

      // Manage live task-count on the collection
      self.count = 0;
      self.on('add remove reset change:completed', self._debouncedUpdateCount);
      // manage unread state
      self.on('add remove reset change:hasUnreadComments change:completed', self.updateUnreadState);

      // helper to performance sort
      self.on('add', self.onAdd);

      // Subtasks specific
      self._setupSubtasksBind();
    },

    'onAdd': function () {

      var self = this;
      var options = arguments[2];

      if (!self.performanceTimeout && options && (options.bypassSort || options.fromStorage || options.fromSync)) {

        self.debounce = true;

        var action = function () {
          self.debounce = false;
          self.performanceTimeout = null;
          action = null;
        };

        self.performanceTimeout = window.setTimeout(action, 250);
      }
    },

    'performanceSort': function (options) {

      var self = this;
      options = options || {};

      if (self.debounce && options.force !== true) {
        self._debouncedSort.apply(self, arguments);
      }
      else {
        _super.sort.apply(self, arguments);
      }
    },

    'updateUnreadState': function (model, collection, options) {

      var self = this;

      options = options || {};

      if (/^\/lists\//.test(self.url) || self.url === '/tasks/filter/conversations') {

        var unreadCount = _.filter(self.models, function (model) {

          return model.attributes.hasUnreadComments && !model.attributes.completed;
        }).length;

        self.trigger('update:unreadState', unreadCount);
      }
    },

    '_setupSubtasksBind': function () {

      var self = this;
      $.when(self.hasUrl()).then(function () {

        // if this is a subtask collection
        if (/\/subtasks/.test(self.url)) {

          // trigger binding to this collection on tha parent task
          var taskId = self.url.split('/')[2];
          runtime.publish('hasSubtasks:' + taskId);
        }
      });
    },

    '_validateTask': function(taskModel) {

      return !taskModel.attributes.completed;
    },

    '_updateCount': function() {

      var self = this;

      self.count = _.filter(self.models, self._validateTask).length;
      self.trigger('update:tasks_count', self.count);
    },

    filterByIds: function(ids) {

      return this.models.filter(function(model) {
        return _.contains(ids, model.id);
      });
    },

    // helpers
    'updatePositions': function () {

      // returns obj of normal and completed first and last positions
      var self = this;
      var obj = {};
      var completed = [];
      var normal = [];

      // check for duplicates
      $.when(self.hasUrl()).then(function () {

        if ((/^\/lists\//.test(self.url) || /\/subtasks/.test(self.url)) && PositionsHelper.containsInvalidPosition(self)) {
          runtime.trigger('destructive:sort', self, 'position', self.id);
        }
      });

      // make sure models are in position order
      self._debouncedSort && self._debouncedSort();

      _.each(self.models, function (model) {

        if (model.attributes.completed) {

          completed.push(model);
        }
        else {

          normal.push(model);
        }
      });

      obj.normal = {

        'first': normal.length ? normal[0].attributes.position : 0,
        'last': normal.length ? normal[normal.length - 1].attributes.position : 0
      };

      obj.completed = {

        'first': completed.length ? completed[0].attributes.position : 0,
        'last': completed.length ? completed[completed.length - 1].attributes.position : 0
      };

      self.positions = obj;
    },

    // keep sorting up to date at all times
    '_handleSorting': function (a, b) {

      var self = this;
      var order;

      var url = self.url;
      // http://jsperf.com/regex-indexof-quickie
      url = url.indexOf('/subtasks') > -1 ? 'subtasks' : self.url;

      // handle special sorts per collection url
      switch (url) {

      // the week and today views and their groups should be sorted by due dates and list ids
      case '/tasks/filter/week':
      case '/tasks/filter/todayPlus0':
      case '/tasks/filter/todayPlus1':
      case '/tasks/filter/todayPlus2':
      case '/tasks/filter/todayPlus3':
      case '/tasks/filter/todayPlus4':
      case '/tasks/filter/todayPlus5':
      case '/tasks/filter/todayPlus6':

        order = collectionSorting.dualBinarySort('due_date', 'list_id', a, b, false, true);
        break;
      case '/tasks/filter/comments':
        // console.log('comments case')
        order = collectionSorting.dualBinarySort('hasUnreadComments', 'hasComments', a, b, false, true);
        break;

      case 'subtasks':

        var aVal = a.attributes.position;
        var bVal = b.attributes.position;

        order = aVal > bVal ? 1 : aVal < bVal ? -1 : 0;
        break;

      default:

        // this is the default sort for by list_id collections
        // pushes completed items to the bottom and sorts by position attr
        order = collectionSorting.dualBinarySort('completed', 'position', a, b, true, false);
        break;
      }

      return order;
    }
  });
});
define('models/ReminderModel',[

  'wunderbits/WBModel'

], function (WBModel, undefined) {

  

  var _super = WBModel.prototype;

  return WBModel.extend({

    'defaults': {

      'type': 'Reminder',
      'date': null,
      'task_id': null,
      'user_id': null
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.on('change:date', function () {

        self.set({'reminded': false});
      });
    }
  });
});
define('collections/ReminderCollection',[

  'models/ReminderModel',

  'wunderbits/collections/WBCollection'

], function (
  ReminderModel,
  WBCollection,
  undefined
) {

  

  return WBCollection.extend({
    'storeName': 'reminders',
    'model': ReminderModel
  });
});
define('collections/Managers/BaseManager',[

  'application/runtime',
  'wunderbits/WBEventEmitter'

], function (
    runtime,
    WBEventEmitter
) {

  

  var _ = runtime._;

  var _super = WBEventEmitter.prototype;

  return WBEventEmitter.extend({

    'fromSyncOptions': {
      'fromSync': true
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);
      self.setupBinds();
    },

    'setupBinds': function () {},

    // generic helper method for destroying a reference to a collection's models
    'destroyModels': function (models) {

      var self = this;
      // cloned because destroying the models will modify the original BBone model array
      var iteratorModels = _.clone(models);
      var model;

      for (var i = 0, len = iteratorModels.length; i< len; i++) {
        model = iteratorModels[i];
        model.destroy(self.fromSyncOptions);
      }
    }
  });
});

define('collections/Managers/SearchManager',[
  'application/runtime',
  'backend/search',

  'wunderbits/helpers/strings',

  'collections/TaskCollection',
  'collections/FilesCollection',
  'collections/ReminderCollection',
  'collections/Managers/BaseManager'
], function (
  runtime,
  SearchBackend,
  StringHelper,
  TaskCollection,
  FilesCollection,
  ReminderCollection,
  BaseManager,
  undefined
) {

  

  var _super = BaseManager.prototype;
  var _ = runtime._;

  return BaseManager.extend({

    'files': undefined,
    'tasks': undefined,
    'subtasks': undefined,

    'initialize': function () {

      var self = this;

      self.files = new FilesCollection('/files/all');
      self.tasks = new TaskCollection('/tasks/all');
      self.subtasks = new TaskCollection('/subtasks/all');
      _super.initialize.apply(self, arguments);
    },

    'setupBinds': function () {

      var self = this;
      self.bindTo(runtime, 'search:keywords', self.onSearchWithKeywords);
    },

    'onSearchWithKeywords': function (keywords, options) {

      var self = this;

      options = options || {};
      options.term = keywords;

      var original = keywords;
      // allow users to scope searches to specific lists
      var listId = keywords.match(/list=([a-z0-9]+)/);
      if (listId) {
        listId = listId[1];
        keywords = keywords.replace('list=' + listId, '');
      }

      var regex = new RegExp(StringHelper.escapeForRegex(keywords), 'i');
      var taskIds = [];

      // subtasks
      var subtasks = self.subtasks.filter(function (model) {
        return regex.test(model.attributes.title);
      });
      subtasks = _.map(subtasks, function (model) {
        return model.attributes.parent_id;
      });

      // attachments
      var files = self.files.filter(function (model) {
        return regex.test(model.attributes.file.name);
      });
      files = _.map(files, function (model) {
        return self.tasks.getIdByAltId(model.attributes.resource_id);
      });

      // model attributes
      SearchBackend.search('tasks', keywords, function (ids) {

        var url = '/search/' + encodeURIComponent(original);
        var searchCollection = new TaskCollection(url);
        taskIds = _.unique(taskIds.concat(ids, subtasks, files));

        var taskModels = _.compact(_.map(taskIds, function (id) {

          var task = self.tasks.get(id);
          var taskList = task && task.attributes.list_id;

          // if the search is scoped by list, filter it here
          if (!listId || listId === taskList) {
            return task;
          }
          return false;
        }));

        searchCollection.reset(taskModels);

        var currentSearchCollection = new TaskCollection('/search');
        currentSearchCollection.reset(taskModels);

        runtime.trigger('collection:search:ready', url, options);
      });
    }
  });
});
define('collections/Managers/TagsManager',[
  'application/runtime',
  'backend/search',
  'collections/Managers/BaseManager'
], function (
  runtime,
  SearchBackend,
  BaseManager,
  undefined
) {

  

  var _super = BaseManager.prototype;
  var $ = runtime.$;
  var _ = runtime._;

  return BaseManager.extend({

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);
    },

    'setupBinds': function () {

      var self = this;

      runtime.on('tags:getSuggestions', self.getTagSuggestions);
      runtime.on('tags:getTagCloud', self.getTagCloud);
    },

    'getTagSuggestions': function (string, excluded) {

      SearchBackend.searchTags(string, function (tags) {

        tags = _.difference(tags, excluded);
        runtime.trigger('tags:suggestions', tags);
      });
    },

    'getTagCloud': function () {

      var tagCloud = [];

      SearchBackend.searchTags('#').done(function (tags) {

        var tagDeferreds = {};
        for (var i=0, len=tags.length; i<len; i++) {
          var tag = tags[i];
          tagDeferreds[tag] = new $.Deferred();
        }

        _.each(tags, function(tag) {
          SearchBackend.search('tasks', tag, function (ids) {

            tagCloud.push({
              'tag': tag,
              'ids': ids
            });

            tagDeferreds[tag].resolve();
          });
        });

        $.when.apply($, _.toArray(tagDeferreds)).done(function () {
          runtime.trigger('tags:tagCloud', tagCloud);
        });
      });
    }
  });
});
define('collections/ContactCollection',[

  'application/runtime',

  'wunderbits/collections/WBCollection'

], function (
  runtime,
  WBCollection,
  undefined
) {

  

  var _ = runtime._;

  return WBCollection.extend({

    'storeName': 'contacts',

    '_altIdName': 'email',

    'getTeamMembers': function () {

      var self = this;
      return self.filter(function (model) {
        return model.attributes.isTeamMember;
      });
    },

    'resetTeamStatus': function () {

      var self = this;
      var teamMembers = self.getTeamMembers();

      _.each(teamMembers, function (member) {

        member.save('isTeamMember', false);
      });
    },

    'getCreatedByUserFromId': function (id) {

      var self = this;
      var createdBy = _.find(self.models, function (friend) {

        return friend.id === id;
      });

      return createdBy || runtime.user;
    },

    'searchByEmailOrName': function (value) {

      var self = this;

      return _.filter(self.models, function (friend) {

        var nameMatch = friend.attributes.name && friend.attributes.name.toLowerCase().indexOf(_.escape(value.toLowerCase())) >= 0;
        var emailMatch = friend.attributes.email && friend.attributes.email.toLowerCase().indexOf(_.escape(value.toLowerCase())) >= 0;

        return (nameMatch || emailMatch);
      });
    },

    'sync': function () {}
  });
});
define('models/GoogleContactModel',[

  'application/runtime',
  'wunderbits/WBModel'
], function (

  runtime,
  WBModel,
  undefined

) {

  

  return WBModel.extend({

    'storeName': 'googleContacts',

    'defaults': {

      'email': null,
      'name': null,
      'invited': false
    }
  });
});
define('collections/GoogleContactCollection',[

  'application/runtime',

  'wunderbits/collections/WBCollection',

  'models/GoogleContactModel'

], function (
  runtime,
  WBCollection,
  GoogleContactModel,
  undefined
) {

  

  return WBCollection.extend({

    'storeName': 'googleContacts',

    '_altIdName': 'email',

    'model': GoogleContactModel,

    'comparator': function (model) {

      return model.attributes.email.toLowerCase();
    }
  });
});
define('collections/Managers/ContactsCollectionManager',[
  'application/runtime',
  'collections/ContactCollection',
  'collections/GoogleContactCollection',
  'collections/Managers/BaseManager'
], function (
  runtime,
  ContactCollection,
  GoogleContactCollection,
  BaseManager,
  undefined
) {

  

  var _super = BaseManager.prototype;
  var _ = runtime._;

  return BaseManager.extend({

    'allContacts': undefined,
    'googleContacts': undefined,
    'friends': undefined,
    'team': undefined,

    'initialize': function () {

      var self = this;

      self.allContacts = new ContactCollection('/contacts/all');
      self.googleContacts = new ContactCollection('/googleContacts/all');
      self.friends = new ContactCollection('/contacts/friends');
      self.team = new ContactCollection('/contacts/team');

      _super.initialize.apply(self, arguments);
    },

    'setupBinds': function () {

      var self = this;

      self.allContacts.on('add change', self.onAddContact);
      self.allContacts.on('destroy', self.onContactDestroyed);

      // Google Contacts
      self.googleContacts.on('add', self.onAddGoogleContact);

      // update the 'pro-givable' list with current contacts when a user updates his product
      runtime.user.on('change:group_product', self.updateTeamListWithContacts);
    },

    'onAddContact': function (contactModel, contacts, options) {

      var self = this;

      options || (options = {});
      if (!contactModel || contactModel.id === runtime.user.id) {
        return;
      }

      !(options.fromStorage) && contactModel.save();

      contactModel.attributes.isFriend && self.friends.add(contactModel);
      contactModel.attributes.isTeamMember && self.team.add(contactModel);
    },

    'onContactDestroyed': function (contactModel) {

      var self = this;
      contactModel.attributes.isFriend && self.friends.remove(contactModel);
      contactModel.attributes.isTeamMember && self.team.remove(contactModel);
    },

    'onAddGoogleContact': function (contactModel, contacts, options) {

      options || (options = {});
      if (!contactModel) {
        return;
      }

      !(options.fromStorage) && contactModel.save();
    },

    'updateTeamListWithContacts': function () {

      var self = this;
      var product = runtime.user.attributes.group_product;
      var members = product && product.members || [];

      // the runtime user needs to be able to be able to delegate pro to, so we
      // add him to the collection without the other stuff on this model
      var strippedRuntimeUser = _.pick(runtime.user.attributes, ['id','name', 'email', 'avatar', 'isTeamMember']);
      self.allContacts.add(strippedRuntimeUser, self.fromSyncOptions);

      _.each(members, function (member) {

        // a cached contact is a local model that has the same email of a contact
        // this comes from when you invite a person who is not a wunderlist user
        // and later becomes one
        var cachedContact = _.find(self.team.models, function(teammate) {

          return (teammate.attributes.email === member.email) && (teammate.attributes.name === null && member.name);
        });

        member.isTeamMember = !product.expired_at;

        if (cachedContact) {
          cachedContact.destroy(self.fromSyncOptions);
          return;
        }

        var existing = self.allContacts.get(member.id);
        if (existing) {
          existing.save(member, self.fromSyncOptions);
        }
        else {
          self.allContacts.add(member, self.fromSyncOptions);
        }
      });
    }
  });
});
define('collections/Managers/TasksCollectionManager',[
  'application/runtime',
  'collections/TaskCollection',
  'collections/Managers/BaseManager',

  'vendor/moment',

], function (
  runtime,
  TaskCollection,
  BaseManager,
  moment,
  undefined
) {

  

  var _super = BaseManager.prototype;
  var _ = runtime._;

  return BaseManager.extend({

    'allTasks': undefined,
    'allSubtasks': undefined,

    'latestDate': undefined,
    'formattedToday': undefined,

    'initialize': function () {

      var self = this;

      self.allTasks = new TaskCollection('/tasks/all');
      self.allSubtasks = new TaskCollection('/subtasks/all');
      self.allSubtasks.storeName = 'subtasks';
      _super.initialize.apply(self, arguments);

      self.setupSmartListCollections();
    },

    'collections': {},

    'setupSmartListCollections': function () {

      var self = this;
      var filterCollectionNames = ['all', 'starred', 'completed', 'today', 'week', 'assigned', 'conversations'];

      for (var i=0, len=filterCollectionNames.length; i<len; i++) {
        var name = filterCollectionNames[i];
        self.collections[name] = new TaskCollection('/tasks/filter/' + name);
      }

      // Create collections for the week filter view
      _.times(7, function(dayOfTheWeek) {

        var name ='todayPlus' + dayOfTheWeek;
        self.collections[name] = new TaskCollection('/tasks/filter/' + name);
      });
    },

    'setupBinds': function () {

      var self = this;

      self.allTasks.on('change:starred change:completed change:due_date change:list_id add', self.trackSignificantEvent);
      self.allTasks.on('change:starred', self.starredCheck);
      self.allTasks.on('change:hasComments', self.commentsCheck);
      self.allTasks.on('change:assignee_id change:completed', self.assignedCheck);
      self.allTasks.on('change:completed', self.completedCheck);
      self.allTasks.on('change:due_date', self.dateCheck);
      self.allTasks.on('change:list_id', self.listIdCheck);
      self.allTasks.on('add', self.onTaskAdd);
      self.allSubtasks.on('change:parent_id', self.taskParentIDCheck);
      self.allSubtasks.on('add', self.onSubTaskAdd);

      self.allTasks.on('destroy', self.onTaskDestroy);
      runtime.on('day:ended', self.updateDueDates);
    },

    'trackSignificantEvent': function () {

      var options = arguments[2] || {};

      if (!options.fromStorage && !options.fromSync && runtime.env.isChrome()) {

        runtime.trigger('significantEvent:added');
      }
    },

    'onTaskAdd': function (taskModel, collection, options) {

      var self = this;

      options || (options = {});
      !(options.fromStorage) && taskModel.save({}, options);

      self.starredCheck(taskModel, null, options);
      self.commentsCheck(taskModel, null, options);
      self.assignedCheck(taskModel, null, options);
      self.completedCheck(taskModel, null, options);
      self.dateCheck(taskModel, null, options);
      self.listIdCheck(taskModel, null, options);
    },

    'onTaskDestroy': function (taskModel) {

      var self = this;

       // remove from collections
      for (var i=0, len=self.collections.length; i<len; i++) {
        var collection = self.collections[i];
        collection.remove(taskModel);
      }

      // destroy subtasks
      self.cleanupSubtasks(taskModel);

      // destroy files
      self.cleanupFiles(taskModel);

      // destroy comments
      self.cleanupComments(taskModel);
    },

    'onSubTaskAdd': function (subTaskModel, collection, options) {

      var self = this;

      options || (options = {});
      !(options.fromStorage) && subTaskModel.save();
      self.taskParentIDCheck(subTaskModel, options);
    },

    'cleanupSubtasks': function (taskModel) {

      var self = this;
      var subtasksCollection = new TaskCollection('/tasks/' + taskModel.id + '/subtasks');
      self.destroyModels(subtasksCollection.models);
    },

    'cleanupFiles': function (taskModel) {

      var self = this;
      var filesCollection = new TaskCollection('/tasks/' + taskModel.id + '/files');
      self.destroyModels(filesCollection.models);
    },

    'cleanupComments': function (taskModel) {

      var self = this;
      var commentsCollection = new TaskCollection('/tasks/' + taskModel.id + '/comments');
      self.destroyModels(commentsCollection.models);
    },

    'listIdCheck': function (taskModel, val, options) {

      var self = this;
      var listId = taskModel.attributes.list_id;

      var newTasksCollection = new TaskCollection('/lists/' + (listId !== 'inbox' ? listId : 'inbox') + '/tasks');

      var oldListId = taskModel.previous('list_id');
      var oldTasksCollection = oldListId && new TaskCollection('/lists/' + oldListId + '/tasks');
      oldTasksCollection && oldTasksCollection.remove(taskModel);

      newTasksCollection.add(taskModel, options);
      self.collections[listId] = newTasksCollection;
    },

    'taskParentIDCheck': function (taskModel, options) {

      var parentId = taskModel.attributes.parent_id;
      var hasParent = parentId !== null;
      var newTaskCollection;

      if (hasParent) {
        newTaskCollection = new TaskCollection('/tasks/' + parentId + '/subtasks');
        newTaskCollection && newTaskCollection.add(taskModel, options);
      }
    },

    'starredCheck': function (taskModel, val, options) {

      var self = this;
      var isStarred = taskModel.attributes.starred && !taskModel.attributes.completed;
      self.collections.starred[isStarred ? 'add' : 'remove'](taskModel, options);
    },

    'commentsCheck': function (taskModel, val, options) {

      var self = this;
      var hasComments = taskModel.attributes.hasComments && taskModel.attributes.hasComments !== undefined && !taskModel.attributes.completed;
      self.collections.conversations[!!hasComments ? 'add' : 'remove'](taskModel, options);
    },

    'assignedCheck': function (taskModel, val, options) {

      var self = this;
      var isAssigned = taskModel.attributes.assignee_id === runtime.user.id && !taskModel.attributes.completed;
      self.collections.assigned[isAssigned ? 'add' : 'remove'](taskModel, options);
    },

    'completedCheck': function (taskModel, val, options) {

      var self = this;
      var attributes = taskModel.attributes;
      var isCompleted = attributes.completed;

      self.collections.completed[isCompleted ? 'add' : 'remove'](taskModel, options);
      self.collections.all[isCompleted ? 'remove' : 'add'](taskModel, options);

      // mark task's subtasks as completed
      if (!options.fromStorage && !options.fromSync && isCompleted && !attributes.parent_id) {
        self.completeSubtasks(taskModel);
      }

      if (taskModel.hasChanged()) {
        self.dateCheck(taskModel);
      }
    },

    'completeSubtasks': function (taskModel) {

      var subtasksCollection = new TaskCollection('/tasks/' + taskModel.id + '/subtasks');
      var subtasks = subtasksCollection.models;
      var subtask;
      for (var i = 0, len = subtasks.length; i < len; i++ ) {
        subtask = subtasks[i];
        !subtask.isCompleted() && subtask.save({
          'completed': true
        });
      }
    },

    'getLatestDate': function () {

      var self = this;
      self.latestDate = Date.now();
      return self.latestDate;
    },

    'getFormattedToday': function () {

      var self = this;
      self.getLatestDate();
      return moment().sod().format('YYYY-MM-DD');
    },

    'throttledGetFormattedToday': function () {

      var self = this;

      if (self.formattedToday && (self.getLatestDate() - moment(self.formattedToday, 'YYYY-MM-DD').valueOf() > 86400000)) {
        self.formattedToday = self.getFormattedToday();
      }
      else {
        self.formattedToday = self.formattedToday ? self.formattedToday : self.getFormattedToday();
      }

      return self.formattedToday;
    },

    'dateCheck': function (taskModel, val, options) {

      var self = this;

      var taskDate = taskModel.attributes.due_date;
      var today = self.throttledGetFormattedToday();

      var isOverdue, isThisWeek, diff;
      var isToday = taskDate && taskDate === today;

      if (taskDate) {

        diff = moment(taskDate).diff(moment().sod(), 'days');

        if (diff <= 0) {
          isOverdue = true;
          diff = 0;
        }
        else if (diff <= 6) {
          isThisWeek = true;
        }
      }

      // today/overdue filter view collection:
      self.collections.today[((isToday || isOverdue) && !taskModel.isCompleted()) ? 'add' : 'remove'](taskModel, options);

      // week view collections
      self.collections.week[((isThisWeek || isOverdue) && !taskModel.isCompleted()) ? 'add' : 'remove'](taskModel, options);

      for (var dayOfTheWeek = 0; dayOfTheWeek < 7; dayOfTheWeek++) {

        self.collections['todayPlus' + dayOfTheWeek][diff === dayOfTheWeek && !taskModel.isCompleted() ? 'add' : 'remove'](taskModel, options);
      }
    },

    'updateDueDates': function () {

      var self = this;
      for (var i=0, len=self.allTasks.models.length; i<len; i++) {
        var taskModel = self.allTasks.models[i];
        if(taskModel.has('due_date')) {
          taskModel.trigger('change:due_date', taskModel);
        }
      }
    },

    'addFromURI': function (params) {

      var self = this;

      var inbox = new TaskCollection('/lists/inbox/tasks');
      var toTop = runtime.settings.attributes.new_task_location === 'top';
      inbox.updatePositions();
      var position = toTop ? inbox.positions.normal.first - 10 : inbox.positions.normal.last + 10;

      self.allTasks.add({

        'title': params.title && params.title,
        'note': params.note && params.note,
        'list_id': 'inbox',
        'position': position
      });
    }
  });
});
define('collections/Managers/ListsCollectionManager',[
  'application/runtime',
  'collections/ListCollection',
  'collections/TaskCollection',
  'collections/ShareCollection',
  'collections/Managers/BaseManager',
  'vendor/moment'

], function (
  runtime,
  ListCollection,
  TaskCollection,
  ShareCollection,
  BaseManager,
  moment,
  undefined
) {

  

  var _super = BaseManager.prototype;

  return BaseManager.extend({

    'allLists': undefined,
    'sortableLists': undefined,

    'initialize': function () {

      var self = this;

      self.allLists = new ListCollection('/lists/all');
      self.sortableLists = new ListCollection('/lists/all/sortable');

      _super.initialize.call(self, arguments);

      self.setupInbox();

      runtime.once('create:prepopulatedLists', self.createPrepolulatedLists);
      runtime.on('update:prepopulatedLists', self.updatePrepolulatedLists);
    },

    'setupInbox': function () {

      var self = this;
      self.allLists.add({
        'id': 'inbox',
        'title': '',
        'position': -9999999,
        'inbox': true
      }, {
        'silent':true
      });
    },

    'setupBinds': function () {

      var self = this;
      self.allLists.on('add', self.onListAdd);
      self.allLists.on('change:owner_id', self.updateListRole);
      self.allLists.on('destroy', self.onListDestoy);
    },

    'onListAdd': function (listModel, collection, options) {

      var self = this;
      options || (options = {});

      !(options.fromStorage) && listModel.save({}, options);
      self.updateListRole(listModel);
      self.sortableLists.add(listModel, options);

      if (runtime.isInstalledOnChrome()) {
        runtime.trigger('significantEvent:added');
      }
    },

    'createPrepolulatedLists': function () {

      var self = this;
      var lists = ['private', 'work', 'shopping', 'movies', 'wishlist'];
      var localIdPrefix = 'localId:prepopulated:' + runtime.user.attributes.id + ':List:';
      var position = 0;

      for(var i=0, len=lists.length; i<len; i++) {

        var list = lists[i];

        self.allLists.add({
          'id': list,
          'local_identifier': localIdPrefix + list,
          'title': runtime.language.getText('prenamed_list_' + list),
          'position': position
        });

        position += 10;
      }
    },

    'updatePrepolulatedLists': function (userId) {

      var self = this;
      for(var i=0, len=self.allLists.models.length; i<len; i++) {
        var list = self.allLists.models[i];
        var localId = list.attributes.local_identifier;
        if (localId && localId.indexOf('unregistered') >= 0) {
          list.save('local_identifier', localId.replace('unregistered', userId));
        }
      }
    },

    'updateListRole': function (listModel) {

      var ownerId = listModel.attributes.owner_id;
      var isOwner = (!ownerId || ownerId === runtime.user.id);
      listModel.set('role', isOwner ? 'owner' : 'member');
    },

    'onListDestoy': function (listModel, collection, options) {

      var self = this;
      // remove from collections
      self.sortableLists.remove(listModel, options);
      self.allLists.remove(listModel, options);

      // destroy tasks
      var tasksInList = new TaskCollection('/lists/' + listModel.id + '/tasks');
      self.destroyModels(tasksInList.models);

      // destroy shares
      if (listModel.isOwner()) {
        var shares = new ShareCollection('/shares/' + listModel.id + '/shares');
        self.destroyModels(shares.models);
      }
    }
  });
});
define('collections/Managers/SharesCollectionManager',[
  'application/runtime',
  'collections/ShareCollection',
  'collections/ListCollection',
  'collections/TaskCollection',
  'collections/AssignableCollection',
  'collections/ContactCollection',
  'collections/Managers/BaseManager'
], function (
  runtime,
  ShareCollection,
  ListCollection, TaskCollection, AssignableCollection, ContactCollection,
  BaseManager,
  undefined
) {

  

  var _super = BaseManager.prototype;
  var _ = runtime._;

  return BaseManager.extend({

    'allShares': undefined,
    'pendingShares': undefined,

    'lists': undefined,
    'assignables': undefined,
    'contacts': undefined,

    'initialize': function () {

      var self = this;

      self.allShares = new ShareCollection('/shares/all');
      self.pendingShares = new ShareCollection('/shares/pending');

      // we need reference to these for the many things that shares involve
      self.lists = new ListCollection('/lists/all');
      self.assignables = new AssignableCollection('/assignables/all');
      self.contacts = new ContactCollection('/contacts/all');

      _super.initialize.apply(self, arguments);
    },

    'setupBinds': function () {

      var self = this;

      var shares = self.allShares;
      var assignables = self.assignables;

      self.bindTo(shares, 'add', 'onShareAdded');
      self.bindTo(shares, 'change:accepted_at', 'onShareAcceptedChange');
      self.bindTo(shares, 'accepted', 'onShareAccepted');
      self.bindTo(shares, 'change', 'shareIdCheck');
      self.bindTo(shares, 'destroy', 'onShareDestroyed');

      self.bindTo(assignables, 'add', 'assignableCheck');
      self.bindTo(assignables, 'remove', 'assignableRemoval');

      // on coming back from facebook, add a share immediately to the collection
      // If the api request fails, delete the share
      self.bindTo(runtime, 'share:create:fb', 'onCreateFBShare');
      self.bindTo(runtime, 'share:accept', 'onShareAcceptedMessage');
    },

    'onShareAdded': function (shareModel, shares, options) {

      var self = this;

      options || (options = {});

      !(options.fromStorage) && shareModel.save();

      var isAccepted = (shareModel.attributes.accepted_at !== null);
      !isAccepted && self.sharePending(shareModel, self.pendingShares);
      self.shareOwnershipCheck(shareModel, isAccepted);
      self.shareIdCheck(shareModel);

      isAccepted && shares.trigger('accepted', shareModel, shares, options);
    },

    'onShareAccepted': function (shareModel) {

      var self = this;
      var sender = shareModel.attributes.sender;
      var contactModel = self.contacts.get(sender.id);
      if (contactModel) {

        contactModel.save({
          'isFriend': true
        });

        self.contacts.add(contactModel);
      }

      self.pendingShares.remove(shareModel);
      self.createAndAddAssignableShare(self.assignables, shareModel);
    },

    'onShareAcceptedMessage': function (share, options) {

      var self = this;
      options || (options = {});

      var shares = self.allShares;

      function switchToList() {

        var listId = self.lists.getIdByAltId(share.resource.id);
        runtime.trigger('route:lists/' + listId);
      }

      if (options.isViaMiniSite) {

        runtime.once('share:accepted', switchToList);

        shares.add(share, self.fromSyncOptions);

        _.delay(function () {

          var shareOfflineId = shares.getIdByAltId(share.id);
          var shareModel = shares.get(shareOfflineId);

          if (shareModel && shareModel.attributes.accepted_at) {

            switchToList();
          }
          else if (shareModel) {

            shareModel.accept();
          }
        }, 500);
      }
    },

    'onShareAcceptedChange': function (shareModel) {

      var isAccepted = (shareModel.attributes.accepted_at !== null);
      isAccepted && shareModel.collection.trigger('accepted', shareModel, shareModel.collection);
    },

    'onShareDestroyed': function (shareModel, collection, options) {

      var self = this;
      var listId = shareModel.attributes.resource_id;
      var listModel = self.lists.get(listId);
      var newShareCollection = new ShareCollection('/shares/' + listId + '/shares');
      newShareCollection && newShareCollection.remove(shareModel);

      var assigneeModel = self.assignables.get(shareModel.id);
      assigneeModel && self.assignables.remove(assigneeModel);

      // return if there was no list for this share, i.e. un-accepted share
      if(!listModel) {

        return;
      }

      // Destroy the list associated if the user is a member
      var recipient = shareModel.attributes.recipient;

      if (recipient && recipient.id === runtime.user.id) {

        listModel.destroy(options);
      }
    },

    'shareIdCheck': function (shareModel) {

      var self = this;
      var listId = shareModel.attributes.resource_id;
      var newShareCollection = new ShareCollection('/shares/' + listId + '/shares');
      newShareCollection && newShareCollection.add(shareModel);

      // this adds the shares to the assignables collection
      if (shareModel.attributes.accepted_at !== null) {

        var assignables = new AssignableCollection('/assignables/all');
        self.createAndAddAssignableShare(assignables, shareModel);
      }

      self.assignableListOwnerCheck(shareModel);
    },

    'sharePending': function (shareModel, pendingShares) {

      var recipient = shareModel.attributes.recipient;
      if (recipient && recipient.id === runtime.user.id) {

        pendingShares.add(shareModel);
      }
    },

    'onCreateFBShare': function(listId, fbId) {

      var self = this;
      // Wait till lists are ready before looking for list remote id
      runtime.once('lists:ready', function() {

        // Find the list's remote ID
        var list = self.lists.get(listId);
        var onlineListId = list && list.attributes.online_id;

        // find any existing share for the recipient on that list
        var existingShare = _.filter(self.allShares.models, function(share) {

          var recipient = share.attributes.recipient;
          var resourceId = share.attributes.resource_id;
          return (recipient.facebook === fbId && listId === resourceId);
        });

        // if the listId is valid & there is no share on that list with the recipient
        // create the share
        listId && !existingShare.length && self.allShares.add({
          'accepted_at': null,
          'online_resource_id': onlineListId,
          'resource_id': listId,
          'recipient': {
            'facebook': fbId
          },
          'sender': {
            'id': runtime.user.id
          }
        });
      });
    },

    'shareOwnershipCheck': function (shareModel) {

      var self = this;
      var recipient = shareModel.attributes.recipient;

      // Mark list as shared for the views
      var listModel = self.lists.get(shareModel.attributes.resource_id);

      var role;
      if (listModel && listModel.attributes.owner_id === runtime.user.id) {
        role = 'owner';
      }
      else if (recipient && recipient.id === runtime.user.id) {
        role = 'member';
      }

      listModel && role && listModel.save({
        'share_id': shareModel.id,
        'role': role
      });
    },

    // the AssignableCollection is all accepted shares + the list owner
    'assignableCheck': function (AcceptedShareModel) {

      var listId = AcceptedShareModel.attributes.resource_id;
      var assignableCollection = new AssignableCollection('/assignables/' + listId);

      assignableCollection && assignableCollection.add(AcceptedShareModel);
    },

    'assignableRemoval': function (removedShareModel) {

      var listId = removedShareModel.attributes.resource_id;
      var assignableCollection = new AssignableCollection('/assignables/' + listId);
      assignableCollection && assignableCollection.remove(removedShareModel);

      // remove removed assignable assigned from list's tasks
      var list = new TaskCollection('/lists/' + listId + '/tasks');
      var tasks = list.where({'assignee_id': removedShareModel.attributes.assignable_id});
      _.each(tasks, function (taskModel) {

        taskModel.save({'assignee_id': null});
      });
    },

    // this is called to make sure the list owner is in the assignable collection
    'assignableListOwnerCheck': function (shareModel) {

      var self = this;
      var listId = shareModel.attributes.resource_id;
      var newAssignableCollection = new AssignableCollection('/assignables/' + listId);

      self.createAndAddAssignableShare(newAssignableCollection, shareModel, true);
    },

    'createAndAddAssignableShare': function (assignableCollection, shareModel, isSender) {

      var assignableShare = _.clone(shareModel.get(isSender ? 'sender': 'recipient'));
      assignableShare.resource_id = shareModel.attributes.resource_id;

      if (assignableShare.resource_id === shareModel.attributes.online_resource_id) {
        return;
      }
      else if (!/\/assignables\/all/.test(assignableCollection.url) && assignableCollection.getByAssignableId(assignableShare.id).length) {
        // prevent duplicate entries in idividual lists
        return;
      }

      if (!_.has(assignableShare, 'assignable_id')) {

        // id === share model, use where assignable_id to look up by user id
        assignableShare.assignable_id = assignableShare.id;
        assignableShare.id = isSender ? shareModel.attributes.sender.id: shareModel.id;
      }
      assignableShare.name = !assignableShare.name ? assignableShare.email || runtime.user.attributes.email: assignableShare.name;

      var currentModel = assignableCollection.getByAssignableId(assignableShare.id);
      if (currentModel.length) {
        currentModel[0].save({
          'email':assignableShare.email,
          'name':assignableShare.name,
          'avatar':assignableShare.avatar
        });

        return;
      }

      assignableCollection.add(assignableShare, {'merge': true, 'sort': false});
    }
  });
});
define('collections/Managers/RemindersCollectionManager',[
  'application/runtime',
  'collections/ReminderCollection',
  'collections/Managers/BaseManager'
], function (
  runtime,
  ReminderCollection,
  BaseManager,
  undefined
) {

  

  var _super = BaseManager.prototype;

  return BaseManager.extend({

    'allReminders': undefined,

    'initialize': function () {

      var self = this;

      self.allReminders = new ReminderCollection('/reminders/all');
      _super.initialize.apply(self, arguments);
    },

    'setupBinds': function () {

      var self = this;
      self.allReminders.on('add', self.onReminderAdd);
    },

    'onReminderAdd': function(reminderModel, collection, options) {

      var self = this;
      options || (options = {});

      !(options.fromStorage) && reminderModel.save();
      self.reminderTaskIdCheck(reminderModel);
    },

    'reminderTaskIdCheck': function (reminderModel) {

      var taskId = reminderModel.attributes.task_id ;
      var newReminderCollection = new ReminderCollection('/tasks/' + taskId + '/reminders');
      newReminderCollection && newReminderCollection.add(reminderModel);
    }
  });
});
define('collections/Managers/ServicesCollectionManager',[
  'application/runtime',
  'collections/ServiceCollection',
  'collections/Managers/BaseManager'
], function (
  runtime,
  ServiceCollection,
  BaseManager,
  undefined
) {

  

  var _super = BaseManager.prototype;

  return BaseManager.extend({

    'allServices': undefined,

    'initialize': function () {

      var self = this;

      self.allServices = new ServiceCollection('/services/all');
      _super.initialize.apply(self, arguments);
    },

    'setupBinds': function () {

      var self = this;
      self.allServices.on('add', self.onServiceAdd);
    },

    'onServiceAdd': function (serviceModel, collection, options) {

      options || (options = {});

      var providerId = serviceModel.attributes.provider_id;
      var providerType = serviceModel.attributes.provider_type;

      if (!options.fromStorage) {

        if (providerType === 'facebook' && serviceModel.has('oauth_access_token')) {

          if(providerId && providerType) {
            runtime.user.save(providerType + '_id', providerId);
          }

          serviceModel.save();
        }
        else if (providerType === 'google') {

          serviceModel.save();
        }
      }
    }
  });
});
define('helpers/pinnedSite',[

  'wunderbits/global',
  'wunderbits/WBSingleton'

], function (window, WBSingleton, undefined) {

  

  return WBSingleton.extend({

    'flashWindow': function () {

      try {

        if (window.external && window.external.msIsSiteMode && window.external.msIsSiteMode()) {

          window.external.msSiteModeActivate();
        }
      }
      catch (e) {
        // Fail silently.
      }
    },

    'createJumpListCategory': function (category) {

      try {

        if (window.external && window.external.msIsSiteMode && window.external.msIsSiteMode()) {

          window.external.msSiteModeCreateJumpList(category);
          // Add items here
        }
      }
      catch (e) {
        // Fail silently.
      }
    },

    'addJumpListItem': function (text, uri, icon) {

      try {

        if (window.external && window.external.msIsSiteMode && window.external.msIsSiteMode()) {

          window.external.msSiteModeAddJumpListItem(text, uri, icon, 'self');
        }
      }
      catch (e) {

        // fail silently
      }
    }
  });
});
define('helpers/URLResolver',[

  'urls'

], function(urls, undefined) {

  

  var urlMap = urls.urlMap || {};
  var baseUrl = urls.baseUrl || '/';

  function resolve (url) {

    if (/(https?:)?\/\//.test(url)) {
      return url;
    }
    else if (/^(\/\/graph.facebook.com)/.test(url)) {
      return 'https:' + url;
    }
    else if(!!urlMap[url]) {
      return baseUrl + urlMap[url];
    }
    return (baseUrl + '/' + url).replace(/\/+/, '/');
  }

  return {
    'resolve': resolve
  };

});
define('helpers/BlobHelper',[

  'application/runtime',

  'wunderbits/WBSingleton'

], function (
  runtime,
  WBSingleton,
  undefined
) {

  

  var $ = runtime.$;
  var URL = runtime.global.URL || runtime.global.webkitURL;

  var memoryCache = {};

  function loaded (deferred) {
    return function (e) {
      var xhr = e.target;
      if (4 === xhr.readyState && 200 === xhr.status) {

        var dataUrl = URL.createObjectURL(xhr.response);
        deferred.resolve(dataUrl);
      }
    };
  }

  return WBSingleton.extend({

    'fetchDataURI': function (url) {

      var deferred = new $.Deferred();

      // Check in cache first
      if (url in memoryCache) {
        deferred.resolve(memoryCache[url]);
      }
      // else fetch it over the network
      else {
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.responseType = 'blob';
        xhr.onreadystatechange = loaded(deferred);
        xhr.send();
        deferred.done(function (blob) {
          memoryCache[url] = blob;
        });
      }
      return deferred.promise();
    },

    'loadImage': function (url, $el, callback, errorCallback) {

      var self = this;
      // for packaged app, use a image loader + data-uri
      if (runtime.env.isPackagedApp()) {
        var promise = self.fetchDataURI(url);
        promise.then(function (blob) {
          $el.attr('src', blob);
          callback && callback();
        });
      }
      // regular image tag for others
      else {
        callback && ($el[0].onload = callback);
        errorCallback && ($el[0].onerror = errorCallback);
        $el.attr('src', url);
      }
    }
  });
});

define('wunderbits/mixins/WBSubviewsMixin',[

  '../lib/dependencies',
  '../WBMixin'

], function (dependencies, WBMixin, undefined) {

  

  var Backbone = dependencies.Backbone;
  var _ = dependencies._;
  var $ = dependencies.$;

  function onDestroySelf (self) {

    // if element isn't attached to the view we need to manually
    // take care of cleaning up all the jQuery refs if view was
    // detached, we check if it was reattached to the DOM if not
    // we manually clean up the jquery refs
    self._detached && $.cleanData([self.el]);

    // trigger event for mixins and parents to react to, before unbinding
    self.trigger && self.trigger('destroy');

    // unbind any events that could have been possibly bound to this view
    self.unbind();

    // clean up all stored event bindings
    self.unbindAll && self.unbindAll();

    // clean up all bindings from parent view
    if (self._superView && self._superView.trigger) {
      self._superView.trigger('destroyed:subview', self);
    }

    // call the onDestroy callback to do user defined cleanup
    self.onDestroy && self.onDestroy();

    // delete all properties, except for uid to make
    // sure a destroyed object is not keeping other
    // objects alive by reference
    function killEverything (obj) {

      for (var key in obj) {
        if (key !== 'uid') {
          if (key === 'renderData') {
            killEverything(obj[key]);
          }
          delete obj[key];
        }
      }
    }
    killEverything(self);

    // flag as destroyed, so objects internal methods
    // can optionally check this before execution
    self.destroyed = true;

    return self;
  }

  function clearReferencesToSubviewFromSelf (self, subview) {

    // removes name references
    subview._name && (delete self._namedSubviews[subview._name]);

    // remove the subview from the subviews collection
    self._subviews = _.without(self._subviews, subview);

    return self;
  }

  return WBMixin.extend({

    // adds subview to this view and returns it for further use
    // if passed second optional name parameter adds a subview and
    // stores a reference to that subview on an identity map;
    // names are unique and adding a view with the same name
    // destroys the old view. one can retrieve a nameed view using
    // the `getSubview` method and passing view's name
    addSubview: function (subview, name) {

      var self = this;

      if (!subview || !(subview instanceof Backbone.View)) {
        throw new Error('Cannot add invalid or undefined subview');
      }

      // if subviews collection isn't defined create it,
      //just make sure not to put it on the prototype! :)
      !self._subviews && (self._subviews = []);

      // add reference to superview to create vertical view hierarchy
      subview._superView = self;

      if (self.state && subview.state && !_.isEmpty(subview.state)) {
        subview.parentState = self.state;
      }
      else if (self.state) {
        subview.state = self.state;
      }

      // if it is a named view add the view to the named subviews collection
      if (typeof name !== 'undefined') {

        subview._name = name;

        // if the nameged subviews identity map isn't defined create it,
        // just make sure not to put it on the prototype! :)
        !self._namedSubviews && (self._namedSubviews = {});
        // destroy any existing view of same name
        self._namedSubviews[name] && self.destroySubview(name);

        // push it in
        self._namedSubviews[name] = subview;
      }

      self._subviews.push(subview);

      // this is for trying to figure out what views are growing in size that should not be
      //console.log('add: ', self.$el.context.className || self.cid, subview.cid, self._subviews.length || (self._namedSubviews && self._namedSubviews.length));

      return subview;
    },

    // returns a subview with a given name
    getSubview: function(name) {

      var self = this;

      return self._namedSubviews && self._namedSubviews[name];
    },

    // removes references to and destroys the subview with given name
    destroySubview: function(nameOrView) {

      var self = this;

      var subview = nameOrView instanceof Backbone.View ? nameOrView : self._namedSubviews && self._namedSubviews[nameOrView];

      subview && subview.destroy({'silent': true });
    },

    // removes and destroys all the subviews without removing
    // destroying the view, calls `destroy` on all the subviews
    destroySubviews: function() {

      var self = this;
      if (self._subviews) {
        var subviews = _.clone(self._subviews);
        var subview;
        for (var i = 0, len = subviews.length; i < len; i++) {
          subview = subviews[i];
          subview && !subview.destroyed && subview.destroy();
        }
      }
    },

    // calls `onDestroySelf` with each subview which takes care of triggering
    // the onDestroy for Backbone cleanup and makes sure that all the jQuery
    // event and data references/cache is cleaned up as well
    destroy: function() {

      var self = this;

      if (self.destroyed) {
        return self;
      }

      self._superView && clearReferencesToSubviewFromSelf(self._superView, self);
      self.destroySubviews();

      if (self._claimedElement) {

        self.$el && self.$el.empty();
        $.cleanData([self.el]);
      }
      else {

        self.$el && self.$el.remove();
      }

      onDestroySelf(self, true);
      self = null;

      return self;
    },

    // Maps to jQuery detach method and marks the view as detached
    // it's very important when it comes to memory menagement and
    // helping the garbage collector as all the jquery events and
    // data won't be cleaned up if the superview is destroyed while
    // subview is detached from the DOM structure.
    // Because of that we are marking the the view as detached so
    // later on in the `_onDestroy` method we can manualy call
    // the `cleanData` method to make sure we are not leaving any
    // references to jquery events and data for elements that are
    // never making it back to the DOM.
    // If you know superview is not going to be destroyed any time
    // soon (or at all) or that the view have a small chance of
    // being reattached it's better to play safe and use destroy/destroy
    // and just recreate the view when required
    detach: function() {

      var self = this;

      self._detached = true;
      self.$el.detach();

      return self;
    },

    // maps to jquery cleanData to properly clean up detached view
    cleanData: function() {

      var self = this;

      if (self.el) {

        $.cleanData(self.el.getElementsByTagName("*"));
        $.cleanData([self.el]);
      }
    },

    delegateSubviewsEvents: function () {

      var self = this;

      _.invoke(self._subviews, 'delegateSubviewEvents');
    },

    delegateSubviewEvents: function () {

      var self = this;

      self.delegateSubviewsEvents();
      self.delegateEvents();
    }
  });
});
define('wunderbits/WBStyleApplier',[

  './lib/dependencies',
  'vendor/md5',

  'urls',

  './WBEventEmitter',
  './lib/createUID'

], function (
  dependencies, md5,
  urls,
  WBEventEmitter, createUID,
  undefined
) {

  

  var _ = dependencies._;

  var urlMap = urls.urlMap;
  var baseUrl = urls.baseUrl || '/';

  var _super = WBEventEmitter.prototype;

  var applierMap = {};

  return WBEventEmitter.extend({

    'initialize': function (name, style) {

      var self = this;

      _super.initialize.apply(self, arguments);

      if (!_.isString(name)) {
        throw new Error('Cannot initialize WBStyleApplier without a namespace');
      }

      if (!_.isString(style)) {
        throw new Error('Cannot initialize WBStyleApplier without styles');
      }

      self.name = name;
      self.rawStyle = style;
    },

    'getElementId': function (variables) {

      var self = this;
      variables || (variables = {});
      var string = self.name + JSON.stringify(variables);
      return md5(string);
    },

    'remove': function () {

      var self = this;
      var elementId = self.getElementId();

      if (applierMap[elementId] && self.target) {

        applierMap[elementId] = _.without(applierMap[elementId], self.target.uid);

        if (!applierMap[elementId].length) {
          var element = document.getElementById(elementId);
          element.parentNode.removeChild(element);
        }
      }

      self.target.off('destroy', self.remove);
    },

    'apply': function (target, variables) {

      var self = this;
      variables || (variables = {});

      if (!target || !_.isFunction(target.on)) {
        throw new Error('Cannot apply styles without valid target');
      }

      if (!target.uid) {
        target.uid = createUID();
      }

      self.target = target;

      var elementId = self.getElementId(variables);
      var existingEl = document.getElementById(elementId);

      if (existingEl) {

        if (!~applierMap[elementId].indexOf(target.uid)) {
          applierMap[elementId].push(target.uid);
          target.on('destroy', self.remove);
        }

        return;
      }

      var headEl = document.getElementsByTagName('head')[0];

      // TODO: replace variables
      // var css = formatStyles(self.rawStyle, variables);
      // should be cached
      var css = self.rawStyle;

      var style = document.createElement('style');
      style.id = elementId;
      style.type = 'text/css';
      style.setAttribute('data-requiremodule', self.name);
      style.setAttribute('data-requirecontext', 'styles');

      css = css.replace(/url\(\"([^\"]+)/g, function (match) {
        return match.replace(/url\(\"([^\"]+)/, function (all, url) {
          if(/^(https?:)?\/\//.test(url)) {
            return 'url(\"' + url;
          }
          if(!!urlMap) {
            url = urlMap[url];
          }
          return 'url(\"' + baseUrl + url;
        });
      });

      var rules = document.createTextNode(css);

      if (style.styleSheet) {
        style.styleSheet.cssText = rules.nodeValue;
      }
      else {
        style.appendChild(rules);
      }

      headEl.appendChild(style);

      applierMap[elementId] = [target.uid];
      target.on('destroy', self.remove);
    }
  });
});
define('wunderbits/mixins/WBStylesApplierMixin',[

  '../lib/dependencies',
  '../WBMixin',
  '../WBStyleApplier'

], function (dependencies, WBMixin, WBStyleApplier, undefined) {

  

  var _ = dependencies._;

  return WBMixin.extend({

    'initialize': function () {

      var self = this;

      if (self.autoApplyStyles === false) {
        return;
      }

      self.applyStyles();
    },

    'applyStyles': function () {

      var self = this;
      if (!_.isArray(self.styles)) {
        return;
      }

      var sheet;
      for (var i = 0, len = self.styles.length; i < len; i++) {

        sheet = self.styles[i];
        if (!(sheet instanceof WBStyleApplier) && sheet.name && sheet.styles) {
          sheet = new WBStyleApplier(sheet.name, sheet.styles);
        }

        if (typeof sheet !== 'function' && typeof sheet.apply !== 'function') {
          throw new Error('Cannot apply style, not valid WBStyleApplier (sub)class');
        }

        sheet.apply(self, self.styleVariables || {});
      }
    }
  });
});
define('wunderbits/mixins/HidableViewMixin',[

  '../lib/dependencies',
  '../WBMixin'

], function (
  dependencies,
  WBMixin,
  undefined
) {

  

  var $ = dependencies.$;

  return WBMixin.extend({

    'show': function () {

      var self = this;
      if (!self.destroyed && self.$el) {
        self.$el.removeClass('hidden');
      }
      return self;
    },

    'hide': function () {

      var self = this;
      if (!self.destroyed && self.$el) {
        self.$el.addClass('hidden');
      }
      return self;
    },

    'fadeOut': function (ms, selector) {

      var self = this;
      var def = new $.Deferred();
      var $el = selector ? self.$(selector) : self.$el;
      $el.fadeOut(ms, def.resolve);
      return def.promise();
    },

    'fadeIn': function (ms, selector) {

      var self = this;
      var def = new $.Deferred();
      var $el = selector ? self.$(selector) : self.$el;
      $el.fadeIn(ms, def.resolve);
      return def.promise();
    }
  });

});
define('wunderbits/mixins/LocalizedViewMixin',[

  '../lib/dependencies',

  '../helpers/xss',

  '../WBMixin',
  '../WBLanguageManager'

], function(dependencies, XSSHelper, WBMixin, WBLanguageManager, undefined) {

  

  var $ = dependencies.$;

  return WBMixin.extend({

    'localize': function() {

      var self = this;
      self.bindTo(WBLanguageManager, 'done', self.renderLocalized);
      self.trigger('localized');
    },

    'renderLocalized': function () {

      var self = this;
      self.renderLabels();
      self.renderPlaceHolders();
      self.renderTitles();
      self.renderOptions();
      self.renderAriaAttributes();
    },

    'convertSymbols': function (value) {

      // convert single $ symbols to $1, $2 etc.
      var index = 0;
      return value.replace(/\$([^0-9]|$)/g, function ($, nextChar) {

        return '$' + (++index) + (nextChar || '');
      });
    },

    'replaceSymbols': function (value, data) {

      // Replace the $1, $2 tokens with actual values
      var index = 0;
      return value.replace(/\$([0-9])/g, function () {

        var cleanText = XSSHelper.clean(data[index]);
        var markup = '<token class="token_' + index + '" title="' + cleanText + '">' + cleanText + '</token>';
        index++;
        return markup;
      });
    },

    'renderLabels': function () {

      var self = this;
      var theLangData = WBLanguageManager.getKeys();
      var labels = self.$el && self.$el.find('text[rel]');
      var label, key, value, data;

      if (labels.length) {
        for (var i = 0, len = labels.length; i < len; i++) {

          label = $(labels[i]);
          key = label.attr('rel');
          value = theLangData[key];

          if (!value) {
            continue;
          }

          data = label.attr('data');
          if (data && data.length) {
            // split by "snowman" unicode character
            data = data.split('\u2603');
            value = self.convertSymbols(value);
            data = WBLanguageManager.localizationception(data);
            value = self.replaceSymbols(value, data);
          }

          label.html(value);
        }
      }

      theLangData = null;
      self.trigger('localized:labels');
    },

    'renderAttributes': function (attributeName, selectorString, applyAsText, reverseClean) {

      var self = this;
      var elements = self.$el && self.$el.find(selectorString) || [];
      var element, key, extraData, args, value;

      // include self element!
      if (self.$el) {
        elements.push(self.$el);
      }

      if (elements.length) {
        for (var i = 0, len = elements.length; i < len; i++) {

          element = $(elements[i]);
          key = element.attr('data-key-' + attributeName);
          if (key) {
            args = [key];
            extraData = element.attr('data-' + attributeName);
            if (extraData) {
              extraData = extraData.split('\u2603');
              args.push(extraData);
            }

            value = WBLanguageManager.getText.apply(WBLanguageManager, args) || key;

            if (reverseClean) {
              value = XSSHelper.reverseClean(value);
            }

            if (applyAsText) {
              element.text(value);
            }
            else {
              element.attr(attributeName, value);
            }
          }
        }
      }

      self.trigger('localized:' + attributeName);
    },

    'renderTitles': function () {

      var self = this;
      self.renderAttributes('title', '[data-key-title]');
    },

    'renderPlaceHolders': function () {

      var self = this;
      self.renderAttributes('placeholder', 'input[data-key-placeholder], textarea[data-key-placeholder], input[data-key-value]', false, true);
      self.renderAttributes('value',  'input[data-key-value], textarea[data-key-value]');
    },

    'renderOptions': function () {

      var self = this;
      var applyAsText = true;
      self.renderAttributes('text', 'option[data-key-text]', applyAsText);
    },

    'renderAriaAttributes': function () {

      var self = this;
      self.renderAttributes('aria-label', '[data-key-aria-label]');
    }
  });
});
define('wunderbits/mixins/ABTestableMixin',[

  '../WBMixin'

], function(WBMixin, undefined) {

  

  return WBMixin.extend({

    'makeABTestable': function(weight, userId) {

      var self = this;
      var index, id;

      // probability of A over B.. defaults to 50%
      weight = weight || 0.5;
      if(typeof weight !== 'number' || weight <= 0 || weight >= 1) {
        throw new Error('weight for A/B testing should be a number between 0 & 1 , excluding those values');
      }

      // Always use the same mode for a logged-in user
      if(userId) {
        id = parseInt(userId, 16);
        if(!isNaN(id)) {
          index = Math.floor(id % (1 / weight));
        }
      }

      // Use a random mode for a non-logged in user
      if(!index) {
        index = Math.floor(Math.random() / weight);
      }

      // if index < 1 is A anything greater is B
      self.ABMode = 'AB'.substr((index < 1) ? 0 : 1, 1);

      // Call initializeA or initializeB
      var extraInit = self['initialize' + self.ABMode];
      if(typeof extraInit === 'function') {
        return extraInit.apply(self);
      }
    },

    'renderAB': function() {

      var self = this;

      // Call renderA or renderB
      var extraRender = self['render' + self.ABMode];
      if(typeof extraRender === 'function') {
        return extraRender.apply(self);
      }
      else {
        return self;
      }
    },

    'forceInitOfType': function (type) {

      var self = this;
      self.ABMode = type;
      var extraInit = self['initialize' + type];
      if(typeof extraInit === 'function') {
        return extraInit.apply(self);
      }
    },

    'forceRenderOfType': function (type) {

      var self = this;
      self.ABMode = type;
      var extraRender = self['render' + type];
      if(typeof extraRender === 'function') {
        return extraRender.apply(self);
      }
      else {
        return self;
      }
    }
  });

});
define('wunderbits/mixins/PathLinksViewMixin',[

  '../lib/dependencies',

  '../WBRuntime',
  '../WBMixin'

], function (

  dependencies,
  WBRuntime,
  WBMixin,
  undefined
) {

  

  var $ = dependencies.$;

  return WBMixin.extend({

    'setupPathLinksHandler': function () {

      var self = this;
      self.bindTo(self.$('a'), 'click', self.pathLinksHandler);
    },

    'pathLinksHandler': function (e) {

      var $target = $(e.currentTarget);
      var path = $target.attr('data-path');
      if (path && path !== WBRuntime.currentRoute()) {
        WBRuntime.trigger('route:' + path);
      }
    }
  });
});
define('wunderbits/WBView',[

  './lib/dependencies',
  './lib/createUID',

  './mixins/WBSubviewsMixin',
  './mixins/WBBindableMixin',
  './mixins/WBEventsMixin',
  './mixins/WBStylesApplierMixin',
  './mixins/HidableViewMixin',
  './mixins/LocalizedViewMixin',
  './mixins/ABTestableMixin',
  './mixins/PathLinksViewMixin',
  './mixins/WBDeferrableMixin'

], function (
  dependencies, createUID,
  WBSubviewsMixin, WBBindableMixin, WBEventsMixin, WBStylesApplierMixin,
  HidableViewMixin, LocalizedViewMixin, ABTestableMixin, PathLinksViewMixin,
  WBDeferrableMixin,
  undefined
) {

  

  var Backbone = dependencies.Backbone;
  var _ = dependencies._;
  var w_ = dependencies.w_;

  var _super = Backbone.View.prototype;

  return Backbone.View.extend({

    'renderData': {},
    'state': {},
    'styles': [],

    'initialize': function () {

      var self = this;

      //w_.bindAll.apply(self, w_.functions(self));

      self.uid = createUID();

      // Enable inheritance of renderData and state to subclasses
      // Must be done before the mixins are applied, specifically the styles mixin as it will apply the styles right away
      self.renderData = self._mergeFromSuper(self, 'renderData');
      self.state = self._mergeFromSuper(self, 'state');
      self.styles = self._concatFromSuper(self, 'styles');

      WBSubviewsMixin.applyTo(self);
      WBBindableMixin.applyTo(self);
      WBEventsMixin.applyTo(self);
      LocalizedViewMixin.applyTo(self);
      ABTestableMixin.applyTo(self);
      WBStylesApplierMixin.applyTo(self);
      PathLinksViewMixin.applyTo(self);
      HidableViewMixin.applyTo(self);
      WBDeferrableMixin.applyTo(self);

      self.bindTo(self, 'destroyed:subview', self.unbindFromTarget);

      _super.initialize.apply(self, arguments);

      self.localize();
    },

    '_mergeFromSuper': function (instance, key) {

      var self = this;
      var baseData = instance[key];

      if (instance.constructor && instance.constructor.__super__) {
        baseData = w_.merge(self._mergeFromSuper(instance.constructor.__super__, key), baseData);
      }

      return _.extend({}, baseData);
    },

    '_concatFromSuper': function (instance, key) {

      var self = this;
      var baseData = instance[key] || [];

      if (instance.constructor && instance.constructor.__super__) {
        baseData = [].concat(self._concatFromSuper(instance.constructor.__super__, key), baseData);
      }

      return [].concat(baseData);
    },

    'formatData': function (data) {

      var self = this;
      self.renderData || (self.renderData = {});
      data && w_.merge(self.renderData, data);
      return self.renderData;
    },

    'render': function (data) {

      var self = this;

      data || (data = {});
      data = self.formatData(data);

      self.$el.empty();

      if (typeof self.template === 'function') {
        self.$el.html(self.template(data || {}));
      }

      self.renderLocalized();

      self.setupPathLinksHandler();

      if (self.ABMode) {
        self.renderAB();
      }

      self.delegateEvents();

      self.isRendered = true;

      return self;
    }
  });
});
define('helpers/notifications',[

  'application/runtime',
  'wunderbits/WBView',

  'helpers/URLResolver',

  'wunderbits/WBSingleton'

  // TODO implement language and settings

], function (runtime, WBView, URLResolver, WBSingleton, undefined) {

  

  var _ = runtime._;
  var window = runtime.global;

  var _interval = 1000; // rate to display queued items
  var _notificationTimeout = 30000; // remove notification after X ms
  var _isSupported = false;
  var _isPermitted = false;
  var _queue = [];
  var _createQueue = [];
  var _timer;
  var _notificationIds = {};
  var _iconUrl = URLResolver.resolve('images/icon.png');

  var NotificationsClass;

  // need a place to put onclic/onclose event handlers
  // 'asdlkasjldfk209384092384': {'onClick': someFunc, 'onClose': someFunc}
  var _chromeAppEventsHash = {};

  return WBSingleton.extend({

    // start displaying queued notifications
    'start': function () {

      var self = this;
      _timer = window.setInterval(function () {
        self._showNextNotification();
      }, _interval);
    },

    'stop': function () {

      window.clearInterval(_timer);
    },

    // checks for browser support and sets correct notifications constructor
    '_checkSupport': function () {

      var self = this;

      var chrome = window.chrome;
      var chromeApp = false;

      try {
        if (chrome) {
          chromeApp = true;
        }
      }
      catch (e) {
        // lulz
      }

      // chrome app
      if (!_isSupported && chromeApp && chrome.notifications) {

        _isSupported = true;
        NotificationsClass = chrome.notifications;
        self._setupChromeAppListeners();
      }
      // webkit general
      else if (!_isSupported && window.webkitNotifications) {

        _isSupported = true;
        NotificationsClass =  window.webkitNotifications;
      }
      // firefox
      else if (!_isSupported && window.Notification) {
        _isSupported = true;
        NotificationsClass =  window.Notification;
      }

      return _isSupported;
    },

    '_setupChromeAppListeners': function () {

      NotificationsClass.onClosed.addListener(function (notificationId) {

        var handlers = _chromeAppEventsHash[notificationId] || {};
        handlers.onClosed && handlers.onClosed();
        // clean up on notification closed
        _chromeAppEventsHash[notificationId] = null;
      });

      NotificationsClass.onClicked.addListener(function (notificationId) {

        var handlers = _chromeAppEventsHash[notificationId] || {};
        handlers.onClick && handlers.onClick();
        // NotificationsClass.clear(notificationId, $.noop);
      });

      NotificationsClass.onButtonClicked.addListener(function (notificationId, buttonIndex) {

        var handlers = _chromeAppEventsHash[notificationId] || {};
        var buttons = handlers.buttons;
        var button = buttons && buttons[buttonIndex];
        button && button.onClick && button.onClick();
      });
    },

    // permission granting dialog can only be triggered by direct user dom interacion, click on an el, etc.
    '_getPermission': function (callback) {

      var self = this;

      if (!self._permissionGranted()) {

        NotificationsClass.requestPermission(function () {

          // check and set permission state after browser permission dialog
          if (self._permissionGranted()) {

            // run callback
            if (typeof callback === 'function') {

              callback();
            }
          }
        });
      }
    },

    // get permission state from browser
    '_permissionGranted': function () {

      if (NotificationsClass.create) {

        _isPermitted = true;
      }
      else if (NotificationsClass.checkPermission) {

        // WEBKIT
        // PERMISSION_ALLOWED (0) indicates that the user has granted permission to scripts with this origin to show notifications.
        // PERMISSION_NOT_ALLOWED (1) indicates that the user has not taken an action regarding notifications for scripts from this origin.
        // PERMISSION_DENIED (2) indicates that the user has explicitly blocked scripts with this origin from showing notifications.

        _isPermitted = NotificationsClass.checkPermission() === 0;
      }
      else if (NotificationsClass.permission) {

        _isPermitted = NotificationsClass.permission === 'granted';
      }
      return _isPermitted;
    },

    // this method creates the actual notification
    // it should be called only by #queueNotification which checks that notifications are enabled
    // two types of notification are possible: text or html
    // text is plain text, html displays content from a URL
    '_createNotification': function (options) {

      /*
      ex:

      options: {

        type: text || html,
        icon: icon URL,
        title: title,
        text: text,
        url: url,
        ~~onOpen: #callback,
        onClose: #callback,
        onClick: #callback
      }
      */

      /*
        webkit spec:

        Attributes
        ondisplay
          event listener function corresponding to event type "display".  This listener must be called when the notification is displayed to the user, which need not be immediately when show() is called.
        onerror
          event listener function corresponding to event type "error".  This listener must be called when the notification cannot be displayed to the user because of an error.
        onclose
          event listener function corresponding to event type "close".  This listener must be called when the notification is closed by the user.  This event must not occur until the "display" event.
        onclick
          event listener function corresponding to event type "click".  This listener must be called when the notification has been clicked on by the user.

        Methods
        show
          Causes the notification to displayed to the user.  This may or may not happen immediately, depending on the constraints of the presentation method.
        cancel
          Causes the notification to not be displayed.  If the notification has been displayed already, it must be closed.  If it has not yet been displayed, it must be removed from the set of pending notifications.
      */
      var notification;

      if (!_notificationIds[options.notificationId]) {
        return;
      }
      else {
        _notificationIds[options.notificationId] = true;
      }

      // default mode should be text
      if (options.type === 'text') {

        // hack for comment notifications which are created client side
        // and only have a markup version. awesome to find this a few
        // hours before launch...
        if (options.text && options.text.indexOf('<text') === 0) {
          var fakeView = new WBView();
          fakeView.$el.html(options.text);
          fakeView.renderLocalized();
          options.text = fakeView.$el.text();
          fakeView.destroy();
        }

        // webkit basic
        if (NotificationsClass.createNotification) {

          notification = NotificationsClass.createNotification(

            options.icon,
            options.title,
            options.text
          );
        }
        // firefox
        else if (window.Notification && !NotificationsClass.create){

          notification = new NotificationsClass(options.title, {

            'title': options.title,
            'body': options.text,
            'icon': options.icon
          });
        }
        // chrome app
        else if (NotificationsClass.create) {

          notification = NotificationsClass.create(options.notificationId, {

            // type ( TemplateType )
            //   Which type of notification to display.
            'type': options.templateType || 'basic',
            // iconUrl ( string )
            //   Sender's avatar, app icon, or a thumbnail for image notifications.
            'iconUrl': options.icon,
            // title ( string )
            //   Title of the notification (e.g. sender name for email).
            'title': options.title,
            // message ( string )
            //   Main notification content.
            'message': options.text,
            // priority ( optional integer )
            //   Priority ranges from -2 to 2. -2 is lowest priority. 2 is highest. Zero is default.
            // eventTime ( optional double )
            //   A timestamp associated with the notification, in milliseconds past the epoch (e.g. Date.now() + n).
            'eventTime': options.eventTime,
            // buttons ( optional array of object )
            //   Text and icons of notification action buttons.
            //   Properties of each item
            //     title ( string )
            //     iconUrl ( optional string )
            'buttons': options.buttons,
            // imageUrl ( optional string )
            //   Image thumbnail for image-type notifications.
            'imageUrl': options.imageUrl,
            // items ( optional array of object )
            //   Items for multi-item notifications.
            //     Properties of each item
            //     title ( string )
            //       Title of one item of a list notification.
            //     message ( string )
            //       Additional details about this item.
            'items': options.items
          }, function () {

            console.log(arguments);
          });

          _chromeAppEventsHash[options.notificationId] = {

            'onClick': options.onClick,
            'onClose': options.onClose,
            'buttons': options.buttonHandlers
          };
        }
      }
      else if (options.type === 'html') {

        notification = NotificationsClass.createHTMLNotification(

          options.url
        );
      }

      // setup event handlers for the notification
      if (notification) {

        notification.ondisplay = notification.onshow = options.onOpen || function () {

          options.timeout && _.delay(function () {

            notification.cancel();
          }, _notificationTimeout);
        };

        notification.onclick = options.onClick || function () {

          notification.cancel();
        };

        notification.onclose = options.onClose || null;
      }

      return notification;
    },

    '_queueNotification': function (notification) {

      _queue.push(notification);
    },

    '_displayQueuedNotifications': function () {

      var self = this;
      var maxChar = 2000;
      var groupLimit = 50;
      var notification, item;

      // shared fields
      var options = {

        'type': 'text',
        'icon': _iconUrl,
        'title': '',
      };

      if (_isSupported && _isPermitted && _queue.length) {

        // plain text
        if (_queue.length >= groupLimit) {

          options.text = self._groupNotifications(maxChar);
        }
        else {

          item = _queue.shift();

          options = _.extend({}, options, item);
          options.timeout = item.timeout === false ? false : true;
          options.icon = item.userAvatar || _iconUrl;
        }

        notification = self._createNotification(options);
        notification && _.isFunction(notification.show) && notification.show();
      }
    },

    '_groupNotifications': function (maxChar) {

      var text = '';
      var item;

      // if html notifications are available (old chrome, chromium)
      if (NotificationsClass.createHTMLNotification) {

        while(_queue.length && text.length <= maxChar) {

          item = _queue.shift();

          text += item.text + '/';
        }
      }
      else {
        // plain text
        while(_queue.length && text.length <= maxChar) {

          item = _queue.shift();

          text += item.text + ', ';
        }
      }

      return text;
    },

    '_showNextNotification': function () {

      var self = this;

      if (_queue.length > 0) {

        //thisNotification = _queue.shift();
        //thisNotification.show();

        self._displayQueuedNotifications();
      }
    },

    // public facing method for creating notifications
    // checks that notifications are enabled and creates notifications
    // see #_createNotification for options values
    'create': function (options) {

      var self = this;
      var notification;

      // if notifications are supported continue
      if (_isSupported || self._checkSupport()) {


        // if we have permission continue
        if (_isPermitted || self._permissionGranted()) {

          // create new notification and push to queue
          notification = options;//self._createNotification(options);
          if (notification) {

            self._queueNotification(notification);
          }
        }
        else {

          // push all notifications to a temp queue until we have permision to display them
          _createQueue.push(options);

          // if we don't have permission try and get it
          // open a confirmation dialog with custom title
          self.requestPermission();
        }
      }
      else {

        // notifications are not supported by this browser
        // TODO hide desktop notifications option in settings
        return false;
      }
    },

    'requestPermission': function () {

      var self = this;

      var disabledRoutes = ['preferences', 'whatsnew', 'social'];
      var isDisabledRouteActive = false;
      var currentRoute = runtime.currentRoute();

      // routes that are modal based, like prefs and social dialogs,
      // should stop the permission dialog from opening, and just
      // let it open the next time a notification triggers this
      _.each(disabledRoutes, function (route) {
        if (currentRoute.indexOf(route) >= 0) {
          isDisabledRouteActive = true;
        }
      });

      if (!isDisabledRouteActive && (_isSupported || self._checkSupport())) {

        // do not harass users about desktop notifications
        if ((runtime.settings.attributes.notifications_desktop_enabled === 'false') || self._permissionGranted()) {

          return;
        }

        // if we don't have permission try and get it
        // open a confirmation dialog with custom title
        runtime.trigger('modal:confirm', {

          'customTitle': runtime.language.getLabel('notifications_desktop_enable_heading').toString(),
          'customText': runtime.language.getLabel('enable_desktop_notifications_text').toString(),
          'confirm': function () {

            // if user clicks confirm, pass on to browser permission thing with calback to the clear the create queue
            self._getPermission(function () {

              self._emptyCreateQueue();
              self._displayQueuedNotifications();
            });
          },
          'cancel': function () {
            // nothing right now
            // TODO mark desktop notification option as disabled
            runtime.settings.save({'notifications_desktop_enabled': 'false'});
          },
          'keepTrying': true
        });
      }
    },

    '_emptyCreateQueue': function () {

      var self = this;

      if (_createQueue.length > 0) {

        _.each(_createQueue, function (val) {

          self.create(val);
        });

        _createQueue = [];
      }
    }
  });
});
define('models/NotificationModel',[
  'application/runtime',
  'collections/ShareCollection',

  'wunderbits/WBModel'

], function (runtime, ShareCollection, WBModel, undefined) {

  

  var _super = WBModel.prototype;

  return WBModel.extend({

    'storeName': 'notifications',

    'defaults': {

      'type': 'Event'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.bindTo(runtime, 'commentNotificationAsRead:' +  self.attributes.id, function () {

        self.set('read', true);
      });
    },

    'isPendingInvite': function () {

      var self = this;
      var pendingShares = new ShareCollection('/shares/pending');

      if (self.attributes.resource_type === 'Share') {

        var model = pendingShares.get(pendingShares.getIdByAltId(self.attributes.data.resource_id));
        return !!model;
      }
      else {

        return false;
      }
    },

    'isReadComment': function () {

      return this.attributes.read;
    },

    'commenterHasAlreadyCommented': function (commenterId) {

      return (this.attributes.commenters && this.attributes.commenters.indexOf(commenterId) !== -1);
    }
  });
});
define('collections/NotificationCollection',[

  'application/runtime',

  'vendor/moment',

  'models/NotificationModel',

  'wunderbits/collections/WBCollection'

], function (
  runtime,
  moment,
  NotificationModel,
  WBCollection,
  undefined
) {

  

  var _ = runtime._;

  var _super = WBCollection.prototype;

  return WBCollection.extend({

    'storeName': 'notifications',

    'model': NotificationModel,

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      // bad ass high performance sort overrides, gun sooper charge thes har enjin
      self.sort = self.performanceSort;
      self._debouncedSort = _.debounce(_super.sort, 500);

      // helper to performance sort
      self.on('add', function (model) {

        var options = arguments[2] || {};

        if (!self.performanceTimeout && options && (options.fromStorage || options.fromSync)) {

          self.debounce = true;

          self.performanceTimeout = window.setTimeout(function () {

            self.debounce = false;
            self.performanceTimeout = null;
          }, 250);
        }

        if (!model.attributes.read && runtime.settings.attributes.sound_notification_enabled === 'true') {

          runtime.trigger('sounds:play', 'bell');
        }
      });
    },

    'performanceSort': function (forced) {

      var self = this;

      if (self.debounce && !forced) {

        self._debouncedSort.apply(self, arguments);
      }
      else {

        _super.sort.apply(self, arguments);
      }
    },

    'comparator': function (a, b) {

      var aVal = a.attributes.position;
      var bVal = b.attributes.position;

      var aIsCommentNotification = a.attributes.trigger === 'comment:create';
      var bIsCommentNotification = b.attributes.trigger === 'comment:create';

      var aCreatedAt = aIsCommentNotification && a.attributes.created_at;
      var bCreatedAt = bIsCommentNotification && b.attributes.created_at;

      aCreatedAt = aCreatedAt && moment(aCreatedAt).valueOf();
      bCreatedAt = bCreatedAt && moment(bCreatedAt).valueOf();

      // in progress, sort share invites to the top

      var aIsPendingShare = a.isPendingInvite();
      var bIsPendingShare = b.isPendingInvite();

      // pending shares
      if (aIsPendingShare || bIsPendingShare) {

        if (!aIsPendingShare || !bIsPendingShare) {

          aIsPendingShare = aIsPendingShare ? 1 : 0;
          bIsPendingShare = bIsPendingShare ? 1 : 0;

          return aIsPendingShare ? -1 : 1;
        }
        else {

          return aVal > bVal ? -1 : aVal < bVal ? 1 : 0;
        }
      }
      // comment notification
      else if (aIsCommentNotification || bIsCommentNotification) {

        aCreatedAt = aIsCommentNotification ? aCreatedAt : aVal && moment.unix(aVal).valueOf();
        bCreatedAt = bIsCommentNotification ? bCreatedAt : bVal && moment.unix(bVal).valueOf();
        return aCreatedAt > bCreatedAt ? -1 : aCreatedAt < bCreatedAt ? 1 : 0;
      }
      // normal notification
      else {

        return aVal > bVal ? -1 : aVal < bVal ? 1 : 0;
      }
    }

  });
});
define('collections/Managers/BaseNotificationsManager',[
  'application/runtime',
  'helpers/pinnedSite',
  'helpers/URLResolver',
  'helpers/BlobHelper',
  'helpers/notifications',

  'collections/NotificationCollection',
  'collections/TaskCollection',
  'collections/FilesCollection',
  'collections/Managers/BaseManager'
], function (
  runtime,
  PinnedSite, URLResolver, BlobHelper, NotificationHelper,
  NotificationCollection, TaskCollection, FilesCollection,
  BaseManager,
  undefined
) {

  

  var _super = BaseManager.prototype;
  var _ = runtime._;
  var $ = runtime.$;
  var createPinnedSiteCategory = _.once(PinnedSite.createJumpListCategory);

  return BaseManager.extend({

    'allNotifications': undefined,
    'unreadNotifications': undefined,
    'tasks': undefined,

    'initialize': function () {

      var self = this;

      self.allNotifications = new NotificationCollection('/notifications/all');
      self.unreadNotifications = new NotificationCollection('/notifications/unread');

      self.tasks = new TaskCollection('/tasks/all');
      _super.initialize.apply(self, arguments);
    },

    'setupBinds': function () {

      var self = this;
      self.allNotifications.on('change:read', self.notificationReadCheck);
      self.allNotifications.on('add', self.onNotificationAdd);
    },

    'onNotificationAdd': function (notificationModel, collection, options) {

      var self = this;
      options || (options = {});

      !(options.fromStorage) && notificationModel.save();
      self.notificationReadCheck(notificationModel);
      runtime.env.isIE() && self.passToIEPinnedSite(notificationModel);
    },

    'passToIEPinnedSite': function (notificationModel) {

      // pinned site stuff
      var icon = URLResolver.resolve('images/favicon.ico');
      runtime.ready.done(function () {

        createPinnedSiteCategory(runtime.language.getText('label_activity_center'));
        _.defer(function () {
          PinnedSite.addJumpListItem(notificationModel.attributes.summary, '/#/activitycenter', icon);
        });

        PinnedSite.flashWindow();
      });
    },

    'notificationReadCheck': function (notificationModel) {

      var self = this;
      var isRead = notificationModel.attributes.read;
      var hasBeenNotified = notificationModel.attributes.notified;

      self.unreadNotifications[isRead ? 'remove' : 'add'](notificationModel);
      // if unread lets send out some desktop notees
      if (!isRead && !hasBeenNotified) {

        var markRead = function () {

          notificationModel.save({'read': true});
          this.cancel && this.cancel();
        };

        var desktopNotificationEnabled = (runtime.settings.attributes.notifications_desktop_enabled === 'true');

        if (desktopNotificationEnabled) {

          var attributes = notificationModel.attributes;
          var userAvatar = attributes.triggered_by && attributes.triggered_by.avatar || attributes.avatar;
          var avatarDeferred = new $.Deferred();
          var fileDeferred = new $.Deferred();

          if (userAvatar) {

            BlobHelper.fetchDataURI(userAvatar).done(function (dataURI) {

              avatarDeferred.resolveWith(avatarDeferred, [dataURI]);
            });
          }
          else {
            avatarDeferred.resolve();
          }

          if (attributes.trigger === 'file:created') {

            var fileName = attributes.data.file_name;
            var tasks = self.tasks;
            var task = tasks.get(attributes.resource_id) || tasks.get(tasks.getIdByAltId(attributes.resource_id));
            var taskId = task && task.id;
            var files = taskId && new FilesCollection('/tasks/' + taskId + '/files');
            var file;
            if (files) {

              file = _.find(files.models, function (fileModel) {

                return fileModel.attributes.file.name === fileName;
              });

              if (file && file.attributes.previews.length) {

                BlobHelper.fetchDataURI(file.attributes.previews[1].read.url).done(function (dataURI) {

                  fileDeferred.resolveWith(fileDeferred, [dataURI]);
                });
              }
              else {

                fileDeferred.resolve();
              }
            }
            else {
              fileDeferred.resolve();
            }
          }
          else {
            fileDeferred.resolve();
          }

          $.when.apply($, [avatarDeferred, fileDeferred]).done(function (avatarURI, fileURI) {

            var notificationOptions = {

              'notificationId': notificationModel.id,
              'type': 'text',
              'title': 'Wunderlist',
              'text': notificationModel.attributes.summary,
              'timeout': false,
              'onClick': markRead,
              'onClose': markRead,
              'userAvatar': avatarURI
            };

            if (fileURI) {

              notificationOptions.templateType = 'image';
              notificationOptions.imageUrl = fileURI;
            }

            if (file) {

              notificationOptions.buttons = [
                {
                  'title': 'Download ' + attributes.data.file_name
                }
              ];
              notificationOptions.buttonHandlers = [
                {
                  'onClick': function () {

                    runtime.openUrl(file.attributes.read.url);
                  }
                }
              ];
            }

            NotificationHelper.create(notificationOptions);

            notificationModel.save({'notified': true});
          });
        }
      }
    }
  });
});
define('collections/Managers/NotificationsManager',[
  'application/runtime',
  'helpers/pinnedSite',
  'helpers/URLResolver',
  'helpers/BlobHelper',
  'helpers/notifications',
  'wunderbits/helpers/date',

  'collections/NotificationCollection',
  'collections/TaskCollection',
  'collections/FilesCollection',
  'collections/Managers/BaseNotificationsManager'
], function (
  runtime,
  PinnedSite, URLResolver, BlobHelper, NotificationHelper, DateHelper,
  NotificationsCollection, TaskCollection, FilesCollection,
  BaseNotificationsManager,
  undefined
) {

  

  var _super = BaseNotificationsManager.prototype;
  var _ = runtime._;

  return BaseNotificationsManager.extend({

    'debounceUpdateCommentNotification': undefined,

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);
      self.setupNotificationBinds();
      self.debounceUpdateCommentNotification = _.debounce(self.updateCommentNotification, 250);
    },

    'setupNotificationBinds': function () {

      var self = this;
      self.bindTo(runtime, 'browser:marketplace:add', self.checkToCreateBrowserNotification);
      self.bindTo(runtime, 'browser:marketplace:add', self.checkToCreateChromeInstallNotification);
      self.bindTo(runtime, 'unreadCommentNotification', self.checkAppContextBeforeCommentNotification);

      // IYF Campaign
      self.bindTo(runtime, 'iyf:notification', function () {

        runtime.ready.done(self.createIYFNotification);
      });

      self.bindTo(runtime, 'iyf:removeNotification', function () {

        runtime.ready.done(self.removeIYFNotification);
      });
    },

    'checkToCreateBrowserNotification': function () {

      var self = this;
      var opens = parseInt(runtime.settings.attributes.app_open_count, 10);
      opens === 2 && self.createAddToBrowserNotification();
    },

    'checkToCreateChromeInstallNotification': function () {

      var self = this;
      var opens = parseInt(runtime.settings.attributes.app_open_count, 10);
      opens === 4 && self.createChromeInstallQuickAddNotification();
    },

    'removeIYFNotification': function () {

      var self = this;
      self.bindTo(runtime, 'notifications:ready', function () {

        var id = 'campaign_iyf';
        var model = self.allNotifications.get(id);
        model && model.destroy();
      });
    },

    'createIYFNotification': function () {

      var self = this;
      var data = {};

      data.id = 'campaign_iyf';

      var variation = (runtime.settings.attributes.campaign_iyf4_notification_variation || 'A').toLowerCase();

      var notificationLabelKey = 'iyf4_notification_label';
      var buttonLabelKey = 'iyf4_notification_button_label_var_' + variation;

      data.message = data.summary = runtime.language.getText(notificationLabelKey);
      data.buttonText = runtime.language.getText(buttonLabelKey);
      data.position = Date.now();
      data.trigger = 'campaign:iyf';
      data.read = false;

      self.bindTo(runtime, 'notifications:ready', function () {

        // remove the old one so the user is notified agayyyn
        var oldModel = self.allNotifications.get(data.id);
        oldModel && oldModel.destroy();

        self.allNotifications.add(data, self.fromSyncOptions);
      });
    },

    'updateCommentNotification': function (data) {

      var self = this;
      var oldModel = self.allNotifications.get(data.id);
      if (oldModel) {
        self.allNotifications.remove(oldModel);
        oldModel.destroy();
      }

      self.allNotifications.add(data, self.fromSyncOptions);
    },

    'checkAppContextBeforeCommentNotification': function (commentData) {

      var self = this;
      if (runtime.loadContext === 'login') {
        runtime.hasSynced.done(function () {
          self.createCommentNotification(commentData);
        });
      }
      else {
        self.createCommentNotification(commentData);
      }
    },

    'createCommentNotification': function (commentData) {

      var self = this;

      var notificationModel = self.allNotifications.get(commentData.channel_id);
      var commentNotificationExists = !!notificationModel;
      var commenters = [];
      var isRead = false;
      var commenterCount = 0;
      var attributes;

      // if the notification exists, check if it is unread, then update the
      // count of people who have commented on it, and get the commenters
      if (commentNotificationExists) {
        attributes = notificationModel.attributes;
        isRead = notificationModel.isReadComment();
        commenters = attributes.commenters.length && !isRead ? attributes.commenters : [];
      }

      commenters.push(commentData.author.id);
      commenters = _.unique(commenters);
      commenterCount = commenters.length;

      var task = self.tasks.get(commentData.channel_id);
      if (!task) {
        // don't render local comments the user has no access to?
        return;
      }

      // render strings
      var channelName = _.escape(task.attributes.title) || '';
      var author = _.escape(commentData.author.name) || '';
      var previousCommentAuthor = commentNotificationExists && _.escape(attributes.author) || '';
      var commentText = _.escape(commentData.text);

      // length limits per Sebastian
      // task / comment
      // 35 / 90

      channelName = channelName.substr(0, 35);
      commentText = commentText.substr(0, 90);

      var authorLine = '';
      if (commenterCount === 1) {
        authorLine = runtime.language.getLabel('notification_$_commented_on_$', author, channelName).toString();
      }
      else if (commenterCount === 2 && previousCommentAuthor) {
        authorLine = runtime.language.getLabel('notification_$_and_$_commented_on_$', author, previousCommentAuthor, channelName).toString();
      }
      else if (commenterCount > 2) {
        authorLine = runtime.language.getLabel('notification_$_and_$_others_commented_on_$', author, commenterCount - 1, channelName).toString();
      }

      var data = {

        'id': commentData.channel_id,
        'summary': authorLine + ' ' + commentText,
        // TODO comment back in when author.avatar is the correct full S3 url and not the short URL
        // 'avatar': commentData.author.avatar,
        'trigger': 'comment:create',
        'read': false,
        'notified': isRead,

        // comments specific
        'author': author,
        'commenters': commenters,
        'created_at': DateHelper.getServerNow(),
        'markup': authorLine + ' ' + '<a href="#/tasks/' + commentData.channel_id + '/comments/edit" class="comment-text">' + commentText + '</a>',
      };

      self.bindTo(runtime, 'notifications:ready', function () {
        self.debounceUpdateCommentNotification(data);
      });
    },

    'createAddToBrowserNotification': function () {

      var self = this;
      var browser = runtime.env.getBrowser();
      var data = {};

      // if the browser is chrome, check if it is installed
      // chrome.app.isInstalled is a chrome API lookup
      if (runtime.env.isChrome()) {

        if (!runtime.settings.attributes.add_to_chrome && !self.allNotifications.get(browser)) {

          data.id = browser;

          data.message = runtime.language.getText('notification_add_to_browser');
          data.summary = data.message;
          data.position = 0;
          data.trigger = 'browser:add';
          data.read = false;

          self.allNotifications.add(data, self.fromSyncOptions);
          runtime.settings.save({'add_to_chrome': 'true'});
        }
      }
    },

    'createChromeInstallQuickAddNotification': function () {

      var self = this;
      var browser = runtime.env.getBrowser();
      var data = {};

      // if the browser is chrome
      if (browser === 'chrome') {

        var id = browser + '_extension';

        if (!runtime.settings.attributes.add_extension_to_chrome && !self.allNotifications.get(id)) {

          data.message = runtime.language.getText('notification_add_extension_to_browser');
          data.summary = data.message;
          data.id = id;
          data.position = 0;
          data.trigger = 'browser:add';
          data.read = false;

          self.allNotifications.add(data, self.fromSyncOptions);
          runtime.settings.save({'add_extension_to_chrome': 'true'});
        }
      }
    }
  });
});
define('collections/Managers/FilesCollectionManager',[
  'application/runtime',
  'collections/FilesCollection',
  'collections/TaskCollection',
  'collections/Managers/BaseManager'
], function (
  runtime,
  FilesCollection,
  TaskCollection,
  BaseManager,
  undefined
) {

  

  var _super = BaseManager.prototype;

  return BaseManager.extend({

    'allFiles': undefined,
    'tasks': undefined,

    'initialize': function () {

      var self = this;

      self.allFiles = new FilesCollection('/files/all');
      self.tasks = new TaskCollection('/tasks/all');
      _super.initialize.apply(self, arguments);
    },

    'setupBinds': function () {

      var self = this;
      self.allFiles.on('add', self.onFilesAdd);
    },

    'onFilesAdd': function (fileModel, collection, options) {

      var self = this;
      options || (options = {});
      !(options.fromStorage) && fileModel.save();

      // try to map a fileModel's resource_id (task id)
      // from a remote id (in the event it arrived before the task)
      var taskId = fileModel.get('resource_id');
      taskId = self.tasks.getIdByAltId(taskId) || taskId;

      var filesCollection = new FilesCollection('/tasks/' + taskId + '/files');
      filesCollection.add(fileModel, options);
    }
  });
});
define('collections/Managers/CommentsCollectionManager',[
  'application/runtime',
  'collections/CommentsCollection',
  'collections/TaskCollection',
  'collections/Managers/BaseManager'
], function (
  runtime,
  CommentsCollection,
  TaskCollection,
  BaseManager,
  undefined
) {

  

  var _super = BaseManager.prototype;

  return BaseManager.extend({

    'allComments': undefined,
    'tasks': undefined,

    'initialize': function () {

      var self = this;

      self.allComments = new CommentsCollection('/comments/all');
      self.tasks = new TaskCollection('/tasks/all');

      _super.initialize.apply(self, arguments);
    },

    'setupBinds': function () {

      var self = this;
      self.allComments.on('add', self.onCommentAdd);
    },

    'onCommentAdd': function (commentModel, collection, options) {

      var self = this;
      options || (options = {});
      !(options.fromStorage) && commentModel.save();

      var taskId = commentModel.get('channel_id');
      taskId = self.tasks.getIdByAltId(taskId) || taskId;

      var commentsCollection = new CommentsCollection('/tasks/' + taskId + '/comments');
      commentsCollection.add(commentModel, options);
    }
  });
});
define('models/ProductModel',[

  'application/runtime',

  'wunderbits/WBModel'

], function (runtime, WBModel, undefined) {

  

  return WBModel.extend({

    'defaults': {
      'type': 'Product'
    },

    'idAttribute': 'product_id'
  });
});
define('collections/ProductsCollection',[

  'models/ProductModel',

  'wunderbits/collections/WBCollection'

], function (
  ProductModel,
  WBCollection,
  undefined
) {

  

  return WBCollection.extend({

    'storeName': 'none',

    'model': ProductModel
  });
});
define('collections/Managers/ProductsCollectionManager',[
  'application/runtime',
  'collections/ProductsCollection',
  'collections/Managers/BaseManager'
], function (
  runtime,
  ProductsCollection,
  BaseManager,
  undefined
) {

  

  return BaseManager.extend({
  });
});
define('models/InvoiceModel',[
  'application/runtime',

  'wunderbits/WBModel',

], function (runtime, WBModel, undefined) {

  

  var _super = WBModel.prototype;

  return WBModel.extend({

    'defaults': {

      'type': 'Invoice',
      'address':null,
      'amount': null,
      'city': null,
      'company': null,
      'country': null,
      'created_at': null,
      'expires_at': null,
      'first_name': null,
      'is_business': null,
      'is_japan': false,
      'is_us': false,
      'last_name': null,
      'link': null,
      'net_price': null,
      'number': null,
      'product': null,
      'show_vat': false,
      'starts': null,
      'state': null,
      'vat': null,
      'zip': null
    },

    'idAttribute': 'number',

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

    }
  });
});
define('collections/InvoiceCollection',[

  'models/InvoiceModel',

  'wunderbits/collections/WBCollection'

], function (
  InvoiceModel,
  WBCollection,
  undefined
) {

  

  return WBCollection.extend({

    'storeName': 'invoices',

    'model': InvoiceModel
  });
});
define('collections/CollectionManager',[

  'application/runtime',

  'wunderbits/WBEventEmitter',
  'backend/database',

  'collections/Managers/SearchManager',
  'collections/Managers/TagsManager',
  'collections/Managers/ContactsCollectionManager',
  'collections/Managers/TasksCollectionManager',
  'collections/Managers/ListsCollectionManager',
  'collections/Managers/SharesCollectionManager',
  'collections/Managers/RemindersCollectionManager',
  'collections/Managers/ServicesCollectionManager',
  'collections/Managers/NotificationsManager',
  'collections/Managers/FilesCollectionManager',
  'collections/Managers/CommentsCollectionManager',
  'collections/Managers/ProductsCollectionManager',

  'collections/InvoiceCollection'

], function(
  runtime,
  WBEventEmitter, database,
  SearchManager, TagsManager,
  ContactsCollectionManager, TasksCollectionManager, ListsCollectionManager,
  SharesCollectionManager, RemindersCollectionManager,
  ServicesCollectionManager, NotificationsCollectionManager, FilesCollectionManager, CommentsCollectionManager, ProductsCollectionManager,
  InvoiceCollection,

  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;
  var _super = WBEventEmitter.prototype;
  var collections = {};

  return WBEventEmitter.extend({

    'collectionsArr': undefined,
    'collectionKeys': undefined,

    'contactsCollectionManager': undefined,
    'listsCollectionManager': undefined,
    'tasksCollectionManager': undefined,
    'sharesCollectionManager': undefined,
    'remindersCollectionManager': undefined,
    'servicesCollectionManager': undefined,
    'notificationsCollectionManager': undefined,
    'filesCollectionManager': undefined,
    'commentsCollectionManager': undefined,
    
    'searchManager': undefined,
    'tagsManager': undefined,

    'initialize': function  () {

      var self = this;
      _super.initialize.apply(self, arguments);

      // setup collections & managers
      self.setupManagers();
      // load from db
      self.loadAllFromDB();
    },

    'setupManagers': function () {

      var self = this;

      // ORDER IS IMPORTANT
      self.contactsCollectionManager = new ContactsCollectionManager();
      collections.contacts = self.contactsCollectionManager.allContacts;
      collections.googleContacts = self.contactsCollectionManager.googleContacts;

      self.listsCollectionManager = new ListsCollectionManager();
      collections.lists = self.listsCollectionManager.allLists;

      self.tasksCollectionManager = new TasksCollectionManager();
      collections.tasks = self.tasksCollectionManager.allTasks;
      collections.subtasks = self.tasksCollectionManager.allSubtasks;

      self.sharesCollectionManager = new SharesCollectionManager();
      collections.shares = self.sharesCollectionManager.allShares;
      collections.assignables = self.sharesCollectionManager.assignables;

      self.remindersCollectionManager = new RemindersCollectionManager();
      collections.reminders = self.remindersCollectionManager.allReminders;

      self.servicesCollectionManager = new ServicesCollectionManager();
      collections.services = self.servicesCollectionManager.allServices;

      self.notificationsCollectionManager = new NotificationsCollectionManager();
      collections.notifications = self.notificationsCollectionManager.allNotifications;

      self.filesCollectionManager = new FilesCollectionManager();
      collections.files = self.filesCollectionManager.allFiles;

      self.commentsCollectionManager = new CommentsCollectionManager();
      collections.comments = self.commentsCollectionManager.allComments;

      self.productsCollectionManager = new ProductsCollectionManager();

      self.searchManager = new SearchManager();
      self.tagsManager = new TagsManager();

      collections.invoices = new InvoiceCollection('/invoices/all');
    },

    'loadAllFromDB': function () {

      var self = this;

      runtime.trigger('timeline:start', 'refresh_db_load');

      self.collectionsArr = _.toArray(collections);
      self.collectionKeys = _.keys(collections);
      self.getCollection(0);
    },

    'getCollection': function (index) {

      var self = this;
      var collection = self.collectionsArr[index];
      var name = self.collectionKeys[index];
      self.loadCollectionFromDB(collection, name).done(function () {

        ++index;
        if (index < self.collectionsArr.length) {
          self.getCollection(index);
        }
        else {
          runtime.once('db:allTasksLoaded', function () {

            runtime.trigger('timeline:end', 'refresh_db_load');
            runtime.publish('db:allDataLoaded');
          });
        }
      });
    },

    'loadCollectionFromDB': function(collection, name) {

      var self = this;
      var dbReadyDefer = new $.Deferred();
      var hasTasksToLoad = false;

      var storeName = collection.storeName;

      // don't try to load objects if storename is "none"
      if (storeName === 'none' || !storeName) {
        
        runtime.publish(name + ':ready', collection);
        return dbReadyDefer.resolve().promise();
      }


      database.getAll(storeName, function getAllCallback (jsonObjects) {

        // don't add deleted objects
        // modify the jsonObject array in-place, rather than using _.filter:
        // http://jsperf.com/filter-vs-forthing
        for (var i = 0, len = jsonObjects.length; i < len; i++) {
          if (jsonObjects[i].deleted_at || jsonObjects[i]['delete']) {
            jsonObjects.splice(i, 1);
            --i;
            --len;
          }
        }
        // if arriving on specific route, load tasks for that route as priority
        if (name === 'tasks') {
          var taskData = self.loadCollectionByRoute(jsonObjects, collection, hasTasksToLoad);
          jsonObjects = taskData[0];
          hasTasksToLoad = taskData[1];
        }

        collection.add(jsonObjects, {
          'sort': false,
          'fromStorage': true
        });

        if (!hasTasksToLoad && name === 'tasks') {
          runtime.publish('db:allTasksLoaded');
        }

        runtime.publish(name + ':ready', collection);

        if (name === 'tasks') {
          runtime.trigger('timeline:end', 'user_login');
          runtime.trigger('timeline:start', 'wanted_tasks_loaded');
        }

        dbReadyDefer.resolve();
      });

      return dbReadyDefer.promise();
    },

    'loadCollectionByRoute': function (jsonObjects, collection, hasTasksToLoad) {

      var hash = {};
      var task;
      for (var t=0, tLen = jsonObjects.length; t < tLen; t++) {

        task = jsonObjects[t];
        hash[task.id] = task.list_id;
        hash[task.online_id] = task.list_id;
      }

      var listId;
      if (runtime.isOnListRoute()) {

        listId = runtime.getIdFromRoute();
      }

      if (runtime.isOnTaskRoute()) {

        var taskId = runtime.getIdFromRoute();
        listId = hash[taskId];
      }

      if (listId) {
        // check if any of the smartLists match
        var expr = new RegExp(runtime.smartLists.join('|'), "i");
        if (expr.test(listId)) {
          listId = 'inbox';
        }

        // split the objects into wanted and unwanted
        var wanted = [], unwanted = [];

        for (var w=0, wLen = jsonObjects.length; w < wLen; w++) {

          if (jsonObjects[w].list_id === listId) {
            wanted.push(jsonObjects[w]);
          }
          else {
            unwanted.push(jsonObjects[w]);
          }
        }

        if (wanted.length) {

          hasTasksToLoad = true;
          jsonObjects = wanted;
          // TODO: trigger this addition of unwanted tasks on taskbrowser (tasks) rendered
          runtime.once('tasks:ready', function () {
            _.delay(function () {

              collection.add(unwanted, {
                'sort': false,
                'fromStorage': true,
                'merge': true
              });

              runtime.publish('db:allTasksLoaded');
            }, 500);
          });
        }
      }

      return [jsonObjects, hasTasksToLoad];
    }
  });
});

define('helpers/Auth/betaUser',[

  'application/runtime',

  'wunderbits/WBSingleton'

], function (runtime, WBSingleton, undefined) {

  

  var $ = runtime.$;
  var config = runtime.config;

  var _server = 'https://beta.6wunderkinder.com';
  var _isBetaUser = null;
  var _lastCheckedEmail = '';

  return WBSingleton.extend({

    'fetchBetaStatus': function (email) {

      var fetchDeferred = new $.Deferred();

      if (!email) {

        fetchDeferred.reject();
        return fetchDeferred.promise();
      }

      var endPoint = '/is_tester';
      var url = _server + endPoint;
      var data = {

        'email': email
      };

      var XHR = runtime.ioBetaService.get(url, data);

      XHR
        .done(function () {

          _isBetaUser = true;
          fetchDeferred.resolve();
        })
        .fail(function () {

          _isBetaUser = false;
          fetchDeferred.reject();
        });

      return fetchDeferred.promise();
    },

    'getBetaStatus': function (email) {

      // check and cache beta status
      var self = this;

      var checkEmail = email ? email : runtime.user.attributes.email;
      var getDeferred = new $.Deferred();

      // if beta status has been already fetched, shortcut the deferred
      if (checkEmail === _lastCheckedEmail && _isBetaUser !== null) {

        getDeferred[_isBetaUser ? 'resolve' : 'reject']();
      }
      else {

        _lastCheckedEmail = checkEmail;

        self.fetchBetaStatus(checkEmail)
          .done(function ()  {

            getDeferred.resolve();
          })
          .fail(function () {

            getDeferred.reject();
          });
      }

      return getDeferred.promise();
    },

    'publishBetaVersion': function () {

      // send app version to beta service
      var email = runtime.user.attributes.email;
      var version = config.release;

      var endPoint = '/downloads/web';
      var url = _server + endPoint;
      var data = {

        'email': email,
        'version_number': version
      };

      var XHR = runtime.ioBetaService.post(url, data);

      XHR.done(function () {

        // nothing to do ?
      }).fail(function () {

        // nothing to do ?
      });
    }
  });
});
define('models/TrialQuotaModel',[
  'application/runtime',
  'vendor/moment',
  'wunderbits/WBModel'
], function (
  runtime,
  moment,
  WBModel,
  undefined
) {

  
  var _super = WBModel.prototype;
  var _ = runtime._;

  // BECAUSE FUCK CONSISTENCY
  var typeKeyMap = {

    'attachments': {

      'consumedOverall': 'consumed_quota_files_overall',
      'consumedDaily': 'consumed_quota_files_daily',
      'consumedDailyDate': 'consumed_quota_files_daily_date',

      'limitOverall': 'overall_attachments',
      'limitDaily': 'daily_attachments'
    },

    'assignments': {

      'consumedOverall': 'consumed_quota_assigning_overall',
      'consumedDaily': 'consumed_quota_assigning_daily',
      'consumedDailyDate': 'consumed_quota_assigning_daily_date',

      'limitOverall': 'overall_assignments',
      'limitDaily': 'daily_assignments'
    },

    // look how consistent these comment keys are, then look at the above fucked up ones
    // (tableflip)
    'comments': {

      'consumedOverall': 'consumed_quota_comments_overall',
      'consumedDaily': 'consumed_quota_comments_daily',
      'consumedDailyDate': 'consumed_quota_comments_daily_date',

      'limitOverall': 'overall_comments',
      'limitDaily': 'daily_comments'
    }
  };

  return WBModel.extend({

    'storeName': 'quotas',

    'defaults': {
      'id': 'quotas',

      // cross-client settings for tracking usage (updated on settings changes)
      'consumed_quota_assigning_overall': 0,
      'consumed_quota_assigning_daily': 0,
      'consumed_quota_assigning_daily_date': 0,

      'consumed_quota_comments_overall': 0,
      'consumed_quota_comments_daily': 0,
      'consumed_quota_comments_daily_date': 0,

      'consumed_quota_files_overall': 0,
      'consumed_quota_files_daily': 0,
      'consumed_quota_files_daily_date': 0,

      // these are the default values for the limits from the quota api endpoint (processed from batch requests)
      'daily_assignments': 1,
      'daily_attachments': 1,
      'daily_comments': 1,

      'overall_assignments': 3,
      'overall_attachments': 3,
      'overall_comments': 10
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);
      self.fetch();

      var settingsEvents = [
        'change:consumed_quota_assigning_overall',
        'change:consumed_quota_assigning_daily',
        'change:consumed_quota_assigning_daily_date',
        'change:consumed_quota_comments_overall',
        'change:consumed_quota_comments_daily',
        'change:consumed_quota_comments_daily_date',
        'change:consumed_quota_files_overall',
        'change:consumed_quota_files_daily',
        'change:consumed_quota_files_daily_date'
      ];
      var settingsEventsString = settingsEvents.join(' ');

      runtime.settings && self.bindTo(runtime.settings, settingsEventsString, self.onChangeTrialsLeft);
      self.bindTo(runtime, 'commentAdded', self.updateCommentTracking);
      self.bindTo(runtime, 'fileAdded', self.updateFileTracking);
      self.bindTo(runtime, 'assigneeAdded', self.updateAssigneeTracking);
      self.bindTo(runtime, 'settings:ready', self.initFromSettings);

      window.trialModel = self;
    },

    'initFromSettings': function (settings) {

      var self = this;

      var settingsAttributes = settings.attributes;
      var keys = _.keys(self.attributes);
      var val;

      _.each(keys, function (quotaKey) {
        
        if (quotaKey !== 'id' && quotaKey in settingsAttributes) {
          val = settingsAttributes[quotaKey];
          val = !/date$/.test(quotaKey) ? parseInt(val, 10) : val;
          self.save(quotaKey, val);
        }
      });
    },

    'canDoAction': function (type) {

      var self = this;
      var keys = typeKeyMap[type];

      // short circuits
      if (runtime.user.isPro()) {
        return true;
      }
      if (runtime.user.isUnregistered()) {
        return false;
      }

      var attributes = self.attributes;

      // overall usage
      var currentUsage = attributes[keys.consumedOverall];
      if (currentUsage && parseInt(currentUsage, 10) < attributes[keys.limitOverall]) {
        return true;
      }

      // daily usage
      var lastUsage = attributes[keys.consumedDailyDate];
      var lastUsageDays = lastUsage && moment(lastUsage, 'YYYY-MM-DD').diff(moment().sod(), 'days');
      if (!lastUsage || lastUsageDays !== 0 || attributes[keys.consumedDaily] < attributes[keys.limitDaily]) {
        return true;
      }

      return false;
    },

    'canAssign': function () {

      var self = this;
      return self.canDoAction('assignments');
    },

    'canAddFile': function () {

      var self = this;
      return self.canDoAction('attachments');
    },

    'canAddComment': function () {

      var self = this;
      return self.canDoAction('comments');
    },

    'updateTracking': function (type) {

      var self = this;
      var keys = typeKeyMap[type];

      var attributes = self.attributes;
      var data = {};

      // overall
      var counter = attributes[keys.consumedOverall];
      if (counter < attributes[keys.limitOverall]) {

        counter = ++counter;
        data[keys.consumedOverall] = '' + counter;
        data[keys.consumedDaily] = '1';
        data[keys.consumedDailyDate] = moment().format('YYYY-MM-DD');
        runtime.settings.save(data);
      }
      else {
        // daily
        var lastUsage = attributes[keys.consumedDailyDate];
        var lastUsageDays = lastUsage && moment(lastUsage, 'YYYY-MM-DD').diff(moment().sod(), 'days');
        var beforeToday = lastUsageDays && lastUsageDays !== 0;
        if (!lastUsage || beforeToday || attributes[keys.consumedDaily] < attributes[keys.limitDaily]) {

          counter = beforeToday ? 0 : attributes[keys.consumedDaily];
          counter = ++counter;
          data[keys.consumedDaily] = '' + counter;
          data[keys.consumedDailyDate] = moment().format('YYYY-MM-DD');
          runtime.settings.save(data);
        }
      }
    },

    'updateCommentTracking': function () {

      var self = this;
      self.updateTracking('comments');
    },

    'updateFileTracking': function () {

      var self = this;
      self.updateTracking('attachments');
    },

    'updateAssigneeTracking': function () {

      var self = this;
      self.updateTracking('assignments');
    },

    'onChangeTrialsLeft': function (model) {

      var self = this;
      var changed = model.changedAttributes();
      var changedKeys = _.keys(changed);

      _.each(changedKeys, function (key) {

        if (key === 'id') {
          return;
        }

        var newValue = {};
        newValue[key] = !/date$/.test(key) ? parseInt(changed[key], 10) : changed[key];
        self.attributes[key] !== undefined && self.save(newValue);
      });
    }
  });
});
define('models/UserModel',[

  'application/runtime',

  'vendor/moment',

  'helpers/Auth/betaUser',
  'helpers/Auth/facebook',
  'models/TrialQuotaModel',

  'wunderbits/WBModel',
  'wunderbits/WBValidationHelper'

], function (
  runtime,
  moment,
  betaUserHelper, facebookHelper,
  TrialQuotaModel,
  WBModel, WBValidationHelper,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var config = runtime.config;
  var global = runtime.global;
  var console = runtime.console;

  var _super = WBModel.prototype;
  var _validator = WBValidationHelper;
  var _authorization = new $.Deferred();
  var _facebook = facebookHelper;

  return WBModel.extend({

    'storeName': 'user',

    'defaults': {
      // DEBUG: remove for offline mode
      // 'id': 'unregistered',
      '_key': 'wunderlist_user_1',
      'language': 'en',
      'avatar': null,
      'token': null,
      'is_pro': false,
      'terms_accepted_at': null,
      'group_product': null
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      _.each(['registerSuccess', 'loginSuccess'], function wrapAjaxHandlers(funcName) {

        var func = self[funcName];
        self[funcName] = function (options) {

          return function (jsonResponse) {

            func.apply(self, [jsonResponse, options]);
          };
        };
      });

      self.hasFetched = new $.Deferred();

      self.bindTo(runtime, 'user:logout', self.logout);

      self.fetch({

        'success': self._onFetchSuccess.bind(self),
        'error': self._onFetchError.bind(self)
      });

      self.authorization = _authorization.promise();

      self.bindTo(runtime, 'day:ended', self.trackStillLoggedIn);

      self.avatarCacheTimestamp = moment().unix();
      self.bindTo(self, 'change:avatar', function () {
        self.avatarCacheTimestamp = moment().unix();
      });

      return self;
    },

    'getAuthorization': function () {

      var self = this;
      var auth = new $.Deferred();

      self.hasFetched.done(function () {

        if (self.id !== 'unregistered' && (!self.attributes.token || self.attributes.deleted_at)) {

          auth.reject();
        }
        else {

          _authorization.resolve();
          auth.resolveWith(self, arguments);
        }
      });

      return auth.promise();
    },

    'isLoggedIn': function () {

      var self = this;
      var auth = new $.Deferred();

      self.hasFetched.done(function () {

        if (!self.attributes.token || self.attributes.deleted_at) {

          auth.reject();
        }
        else {

          auth.resolveWith(self, arguments);
        }
      });

      return auth.promise();
    },

    'getBetaAuth': function (email) {

      email = email || this.attributes.email;

      // next protection
      var betaUserDeferred = new $.Deferred();

      if (/^((next|beta).wunderlist.com)/.test(global.location.host)) {

        betaUserHelper.getBetaStatus(email)
          .done(function () {

            betaUserDeferred.resolve();
          })
          .fail(function () {

            betaUserDeferred.reject();
          });
      }
      else {

        betaUserDeferred.resolve();
      }

      return betaUserDeferred.promise();
    },

    '_onFetchSuccess': function () {

      var self = this;
      var context;
      self.trialModel = new TrialQuotaModel();

      self.hasFetched.resolve();

      _authorization.resolve();

      runtime.trigger('analytics:User:previouslyLoggedIn');

      if (runtime.currentRoute().indexOf('shared/') !== -1) {
        context = 'minisite';
      }
      else {
        context = 'normalLoad';
      }

      self.trigger('ready', self);
      runtime.publish('user:ready', self, context);

      // if the user just signed up
      if (self.attributes.new_user) {
        // create prepopulated lists
        self.save('new_user', null, {
          'unset': true,
          'silent': true
        });

        // wait till app has started
        runtime.ready.done(function() {
          runtime.publish('create:prepopulatedLists');
        });
      }

      // DO NOT REMOVE
      // self.fakeProduct();
      // self.on('change:product', self.fakeProduct);
    },

    // DO NOT REMOVE
    // comments are already stripped by build process, leave this in for ease of development
    // 'fakeProduct': function () {
    //   this.save({
    //     "product": {
    //       "product_id":  "com.6wunderkinder.wunderlistmobile.subscription_1_ios_production_20130320",
    //       "platform":    "ios_app_store",
    //       "expires_at":  "2013-03-14T13:17:52+01:00",
    //       "recurring":   true,
    //       "value":       "4.49 EUR",
    //       "manage_link": "http://the_platform_store_link"
    //     }
    //   });
    // },

    '_onFetchError': function () {

      var self = this;
      self.hasFetched.resolve();
    },

    // TODO: remove this old thing, only used in the old login view
    'validate': function (attrs) {

      var self = this;
      if (attrs.email && attrs.email && !_validator.isValidEmail(attrs.email)) {

        return self.trigger('error', 'login_email_not_valid');
      }
    },

    'url': function () {

      return '/me';
    },

    'registerSuccess': function (userData, options) {

      var self = this;

      // Remove password from storage
      self.unset('password');
      delete userData.password_confirmation;
      userData.new_user = true;

      runtime.trigger('analytics:User:registerSuccess');
      runtime.trigger('update:prepopulatedLists', userData.id);

      self.save(userData, {
        'success': function () {

          runtime.settings.save({
            'account_locale': runtime.settings.attributes.language
          }, {
            'success': function () {

              // mark user as registered
              self.trigger('registered');
              self.trigger('ready', self);
              self.saveCookie();

              // for browser marketplace addition
              runtime.trigger('browser:marketplace:add');

              if (options && _.isFunction(options.success)) {
                options.success();
              }
            }
          });
        }
      });
    },

    'registerFailure': function (xhr) {

      var self = this;

      self.clear();

      var jsonResponse = xhr.response.data;
      if (jsonResponse) {

        if (jsonResponse.errors.email && jsonResponse.errors.email[0] === 'has already been taken') {

          self.trigger('error', 'api_error_account_already_exists');
          runtime.trigger('analytics:User:registerFailure', 'api_error_account_already_exists');

          return;
        }
        else if (jsonResponse.errors.email && jsonResponse.errors.email[0] === 'invalid') {

          self.trigger('error', 'api_error_validation_error_unable_to_signup');
          runtime.trigger('analytics:User:registerFailure', 'api_error_validation_error_unable_to_signup');
          return;
        }
        else if (jsonResponse.errors.message && jsonResponse.errors.type) {

          // validation_error.unable_to_signup
          var parts = jsonResponse.errors.type.split('.');
          if (parts[0] === 'validation_error') {

            self.trigger('error', 'api_error_validation_error_' + parts[1]);
            runtime.trigger('analytics:User:registerFailure', 'api_error_validation_error_' + parts[1]);
            return;
          }
        }
      }

      // if no other handler catches it, trigger generic handler
      self.trigger('error', 'login_signup_timeout');

      var analyticsFailureString = '[' + xhr.status + '] ' + xhr.statusText;
      runtime.trigger('analytics:User:registerFailure', analyticsFailureString);
    },

    'register': function (signupData, options) {

      var self = this;
      delete signupData.FBOauth;
      delete signupData.FBId;

      options = options || {};

      signupData.password_confirmation = signupData.password;

      var inviterId = self.getInviterId();
      if (inviterId) {
        signupData.inviter_id = inviterId;
        self.unsetInviterId();
      }

      var inviteToken = self.getInviteToken();
      if (inviteToken) {
        signupData.invite_token = inviteToken;
        self.unsetInviteToken();
      }

      self.getBetaAuth(signupData.email)
        .done(function () {

          runtime.io.post('/signup', signupData)
            .success(self.registerSuccess(options))
            .error(self.registerFailure.bind(self));
        })
        .fail(function () {

          self.clear();
          self.trigger('error', 'api_error_not_a_beta_user');
        });
    },

    'setInviterId': function (id) {

      var self = this;
      if (!runtime.env.isPackagedApp()) {
        self.inviterId = id;
        runtime.global && runtime.global.localStorage && runtime.global.localStorage.setItem('inviterId', id);
      }
    },

    'unsetInviterId': function () {

      if (!runtime.env.isPackagedApp()) {

        runtime.global && runtime.global.localStorage && runtime.global.localStorage.removeItem('inviterId');
      }
    },

    'getInviterId': function () {

      var self = this;
      var id;

      if (!runtime.env.isPackagedApp()) {
        if (self.inviterId) {
          id = self.inviterId;
        }
        else {
          id = runtime.global && runtime.global.localStorage && runtime.global.localStorage.getItem('inviterId');
        }
      }

      return id;
    },

    'setInviteToken': function (token) {

      var self = this;
      if (!runtime.env.isPackagedApp()) {
        self.inviteToken = token;
        runtime.global && runtime.global.localStorage && runtime.global.localStorage.setItem('inviteToken', token);
      }
    },

    'unsetInviteToken': function () {

      if (!runtime.env.isPackagedApp()) {

        runtime.global && runtime.global.localStorage && runtime.global.localStorage.removeItem('inviteToken');
      }
    },

    'getInviteToken': function () {

      var self = this;
      var token;

      if (!runtime.env.isPackagedApp()) {
        if (self.inviteToken) {
          token = self.inviteToken;
        }
        else {
          token = runtime.global && runtime.global.localStorage && runtime.global.localStorage.getItem('inviteToken');
        }
      }

      return token;
    },

    'loginSuccess' : function (userData, options) {

      var self = this;
      self.unset('password');
      userData.deleted_at = null;

      runtime.trigger('analytics:User:loginSuccess');

      var success = function () {

        options && typeof options.callback === 'function' && options.callback();

        // mark the user as logged in
        self.trigger('loggedIn');
        self.loginReady();
      };

      self.save(userData, {

        success: function () {

          if (userData.settings) {
            runtime.settings.save(userData.settings, {
              'success': success
            });
          }
          else {
            success();
          }
        },
        'error': function () {

          console.log('model save error', arguments);
        }
      });
    },

    'loginReady': function () {

      var self = this;

      self.trigger('ready', self);
      runtime.unpublish('user:ready').publish('user:ready', self, 'login');
      runtime.trigger('browser:marketplace:add');

      self.saveCookie();
    },

    'loginFailure' : function (xhr) {

      var self = this;

      // this is because the login/pw was wrong or they didn't exist
      var jsonResponse = xhr.response.data;
      if (jsonResponse) {

        if (jsonResponse.errors.type === 'not_found.no_such_user' || jsonResponse.errors.type === 'access_denied.incorrect_credentials') {

          runtime.trigger('analytics:User:loginFailure', jsonResponse.errors.type);

          self.trigger('error', 'api_error_incorrect_login');
          self.clear();
          return;
        }
      }
      // this is because there was a connection error
      self.clear();
      self.trigger('error', 'api_error_connection_error');
    },

    'login': function (loginData, options) {

      var self = this;

      if (!loginData.email) {
        return self.trigger('error', 'login_empty_email');
      }

      if (!loginData.password || loginData.password.length < 1) {
        return self.trigger('error', 'login_empty_password');
      }

      // next protection
      self.getBetaAuth(loginData.email)
        .done(function () {

          runtime.io.post('/login', loginData)
            .success(self.loginSuccess(options))
            .error(self.loginFailure.bind(self));
        })
        .fail(function () {

          self.clear();
          self.trigger('error', 'api_error_not_a_beta_user');
        });
    },

    'pseudoLogin': function (token) {

      var self = this;

      runtime.bindOnceTo(self, 'change:token', self.loginReady);
      self.set({'token': token});
    },

    'logout': function () {

      var self = this;

      runtime.publish('user:loggingOut');

      // Sync one last time before logging out
      self.bindOnceTo(runtime, 'sync:end',  function() {

        runtime.unpublish('user:loggingOut');

        self.forceLogout();
      });

      runtime.trigger('timer:stop');

      if (runtime.pendingChanges()) {

        runtime.trigger('sync:start');
      }
      else if (!runtime.isSyncing) {

        self.forceLogout();
      }

      self.delay(self._checkLogoutStatus, 5000);
    },

    'forceLogout': function (path) {

      if (typeof path === 'object') {

        path = '';
      }

      var self = this;

      // stop the timer now so it doesn't fire another sync
      // after clearing user data!
      runtime.trigger('timer:stop');

      self.clear();
      self.save();

      self.killCookie();

      runtime.trigger('db:truncate', function() {

        runtime.trigger('trackers:clear', function () {

          runtime.unpublish('user:ready');

          self.trigger('deleted', path);
        });
      });
    },

    '_setCookie': function (destroy) {

      // no cookies on packaged apps
      if (runtime.env.isPackagedApp()) {
        return;
      }

      var value = destroy ? 'false' : 'true';
      var cookie = ['LOGGEDIN=' + value];
      cookie.push('path=/');
      cookie.push('domain=' + global.location.hostname);

      if (destroy) {
        cookie.push('expires=' + (new Date(0)).toUTCString());
      }
      else {
        var now = new Date();
        now.setFullYear(now.getFullYear() + 1);
        cookie.push('expires=' + (now).toUTCString());
      }

      runtime.global.document.cookie = cookie.join(';');
    },

    'saveCookie': function () {
      var self = this;
      self._setCookie(false);
    },

    'killCookie': function () {
      var self = this;
      self._setCookie(true);
    },

    '_checkLogoutStatus': function () {

      var self = this;

      self.bindTo(runtime, 'user:loggingOut', function () {

        runtime.trigger('popover:close');

        _.delay(function () {

          if (!self.logOutPopoverOpen) {

            self.logOutPopoverOpen = true;

            runtime.trigger('modal:confirm', {

              'customTitle': runtime.language.getLabel('logout_timeout_title').toString(),
              'customText': runtime.language.getLabel('logout_timeout_text').toString(),
              'confirmText': runtime.language.getLabel('button_log_out').toString(),
              'cancelText': runtime.language.getLabel('button_retry').toString(),
              'confirm': function () {

                // force logout
                runtime.trigger('sync:end');
              },
              'cancel': function () {

                // do nuttin
                self.logOutPopoverOpen = false;
              }
            });
          }
        }, 500);
      });

      self.bindTo(runtime, 'user:loggingOut', function () {

        _.delay(self._checkLogoutStatus, 5000);
      });
    },

    'resendConfirmation': function (options) {

      runtime.io.post('/resendconfirmation')
        .success(function () {

          options && typeof options.success === 'function' && options.success();
        }).error(function () {

          options && typeof options.error === 'function' && options.error();
        });
    },

    // change password
    'changePassword': function (userData, options) {

      var self = this;
      options = options || {};

      if (userData.password !== userData.password_confirmation || !userData.password || !userData.password_confirmation) {

        self.trigger('error');
        return;
      }

      self.save(userData, {
        success: function () {

          self.unset('password');

          var request = runtime.io.put('/me', userData);
          request.success(function (data) {

            self.save(data);
            options.success && options.success();
          }).error(options.error);
        },
        error: function () {

          self.trigger('error');
        }
      });
    },

    'resetPassword': function (data, options) {

      var request = runtime.io.put('/resetpassword', data);
      request.success(options.success).error(options.error);
      request.fail(options.error);
    },

    'forgotPassword': function (data, options) {

      // time this out in 30 seconds
      var request = runtime.io.post('/forgotpassword', data, null, 30000);
      request.success(options.success).error(function () {

        var errorText = arguments[1];
        options.error(errorText === 'timeout' ? 'api_error_connection_error' : 'login_email_not_valid');
      });
    },

    // change name
    'changeName': function (userData, options) {

      var self = this;
      var originalName = self.attributes.name;
      options = options || {};

      self.save(userData, {

        success: function () {

          var request = runtime.io.put('/me', userData);
          request.success(function (data) {

            self.save(data);
            options.success && options.success(data);
          }).error(function (data) {

            options.error && options.error(data);
            self.save({
              'name': originalName
            });
          });
        }
      });
    },

    // change email
    'changeEmail': function (userData, options) {

      var self = this;
      var originalEmail = self.attributes.email;
      options = options || {};

      self.save(userData, {
        success: function () {

          var request = runtime.io.put('/me', userData);
          request.success(options.success).error(function (data) {

            options.error && options.error(data);
            self.save({
              'email': originalEmail
            });
          });
        },
        error: function () {

          self.trigger('error');
        }
      });
    },

    // deletes user acount via api, requires user to enter password
    'deleteUser': function (userData, options) {

      var self = this;
      options = options || {};

      runtime.trigger('analytics:User:deleteAccount');

      var request = runtime.io['delete']('/me', userData);
      request.success(function () {
        self.forceLogout();
      }).error(function () {
        options.error();
      });
    },

    // OAUTH
    'loginWithOAuthToken': function (token, options) {

      var self = this;
      var deferred = new $.Deferred();
      options || (options = {});

      var loginData = {
        'oauth_provider': options.providerType,
        'oauth_access_token': token
      };

      if (loginData.oauth_provider === 'google') {
        loginData.gmail = true;
      }

      self.isLoggedIn().fail(function () {

        runtime.io.post('/login', loginData)
          .success(function (data) {
            self.loginWithOAuthTokenSuccess(data, deferred);
          })
          .error(function () {
            options.error && options.error();
            deferred.reject();
          });
      });

      return deferred.promise();
    },

    'loginWithOAuthTokenSuccess': function (data, deferred) {

      var self = this;

      self.unset('oauth_access_token');
      data.deleted_at = null;
      self.save(data, {
        success: function () {
          self.trigger('ready', self);
          runtime.unpublish('user:ready').publish('user:ready', self, 'login');
          deferred.resolve();
        },
        error: function () {
          deferred.reject();
        }
      });
    },

    // OLD TODO REFACTOR TO USE ABOVE
    // FACEBOOK LOGIN/CONNECT
    'loginWithFacebookSuccess': function (userData, deferred) {

      var self = this;

      self.unset('oauth_access_token');
      userData.deleted_at = null;
      self.save(userData, {
        success: function () {
          self.trigger('ready', self);
          runtime.unpublish('user:ready').publish('user:ready', self, 'login');
          deferred.resolve();
        },
        error: function () {
          deferred.reject();
        }
      });
    },

    'loginWithFacebookOAuth': function (FBOauth, options) {

      var self = this;
      var deferred = new $.Deferred();
      options || (options = {});

      var loginData = {
        'oauth_access_token': FBOauth
      };

      self.isLoggedIn().fail(function () {

        runtime.io.post('/login', loginData)
          .success(function (data) {
            self.loginWithFacebookSuccess(data, deferred);
          })
          .error(function () {
            options.error && options.error();
            deferred.reject();
          });
      });

      return deferred.promise();
    },

    'connectWithFacebook': function (FBOauth, callBackOptions) {

      var self = this;
      var options = {};

      //var FBOath = get from the URI;
      if (!FBOauth && !callBackOptions) {
        FBOauth = _facebook.getFacebookOAuthToken('login/');
        // REDIRECTS AND GOES NO FURTHER
        return;
      }

      if (FBOauth) {

        // login with facebook error means that the user has not associated a FB service to their WL account
        // so get their info from FB graph and send to signup page
        options.error = function () {
          // should show signup page
          _facebook.getFacebookUserGraph(FBOauth, callBackOptions.error);
        };

        // attempt login with FBOAuth credentials
        // success will log them in, options.error will send to signup page
        self.loginWithFacebookOAuth(FBOauth, options);
      }
    },

    '_createFacebookService': function () {

      var self = this;
      var deferred = new $.Deferred();
      var userData;

      if (!self.facebookData) {

        deferred.reject();
        return;
      }

      userData = {

        'provider_id': self.facebookData.id,
        'provider_type': 'facebook',
        'username': self.facebookData.username,
        'oauth_access_token': self.facebookData.token
      };

      self.save(userData, {
        success: function () {

          self.unset('password');

          var request = runtime.io.post('/me/services', userData);
          request.done(deferred.resolve).fail(deferred.reject);
        },
        error: deferred.reject
      });

      return deferred.promise();
    },

    'getAvatarURL': function () {

      var self = this;
      return self.has('avatar') ? config.api.host + '/' + self.id + '/avatar?size=128&timestamp=' + self.avatarCacheTimestamp : '';
    },

    'cancelProAutoRenew': function (callback, errorCallback) {

      runtime.io.put('/adyen/cancel').done(function () {

        callback && _.isFunction(callback) && callback();
        runtime.trigger('sync:start');
      })
      .fail(function () {

        errorCallback && _.isFunction(errorCallback) && errorCallback();
      });
    },

    'isPro': function () {

      var self = this;
      var product = self.attributes.product;

      // A user is pro if (in this case) is an internal user or if there is no expired_at
      if (product && !product.expired_at) {

        return true;
      }

      return false;
    },

    'getAdminName': function () {

      return  runtime.user.attributes.product.admin && runtime.user.attributes.product.admin.name;
    },

    'isProTeamMember': function () {

      var self = this;
      var product = self.attributes.product;

      if (product && (product.is_member || (product.group_product && !product.group_product.expired_at))) {

        return product.is_member && !self.isProTeamAdmin();
      }

      return false;
    },

    'isProTeamAdmin': function () {

      var self = this;

      var userAttr = self.attributes;
      var isGroupProduct = userAttr && (userAttr.group_product);
      var isNotExpired = isGroupProduct && !userAttr.group_product.expired_at;

      if (isNotExpired && userAttr.product && isGroupProduct) {

        return true;
      }

      return false;
    },

    'trackStillLoggedIn': function () {

      var self = this;

      if (self.attributes.token) {

        runtime.trigger('analytics:User:previouslyLoggedIn', 'newDay');
      }
    },

    'startUnregistered': function () {

      var self = this;
      self.save('id', 'unregistered', {
        'success': function () {
          runtime.reload('/try/lists/inbox');
        }
      });
    },

    'isUnregistered': function () {

      var self = this;
      return ('unregistered' === self.id);
    }
  });
});

define('models/UserSettingsModel',[

  'application/runtime',

  'helpers/notifications',
  'wunderbits/helpers/strings',

  'wunderbits/mixins/WBDeferrableMixin',
  'wunderbits/WBModel'

], function (

  runtime,
  Notifications, Strings,
  WBDeferrableMixin, WBModel,
  undefined

) {

  

  var _ = runtime._;
  var $ = runtime.$;

  var _super = WBModel.prototype;
  var _notifications = Notifications;
  var _strings = Strings;

  var _locale = (runtime.global.navigator.language || 'en').substr(0, 2).toLowerCase();

  function _getDefaultTimeFormat () {

    switch (_locale) {
    case 'en':
    case 'es':
    case 'gr':
    case 'ja':
    case 'ko':
    case 'zh':

      return '12 hour';
    default:

      return '24 hour';
    }
  }

  var _defaultSettings = {
    // do not change this is the keypath to the user_settings db object
    'id': 'userSettings',
    'type': 'Settings',

    'inbox_name': 'Inbox',

    // general
    'language': 'en_US',
    'time_format': _getDefaultTimeFormat(), // '12 hour' || '24 hour'
    'date_format': 'DD.MM.YYYY',
    'start_of_week': 'sun', // sat, mon
    'enable_natural_date_recognition': true,
    'timezone': null,
    'active_theme': null,
    'new_task_location': 'bottom',
    'confirm_delete_entity': 'true',
    'print_completed_items': 'false',
    'account_locale': _locale,

    // Account
    'picture': null,
    'name': null,
    'email': null,
    'password': null,
    'facebook': null,

    'migrated_wunderlist_one_user': 'true',

    // Coach Marks
    'coach_mark_inbox': null,
    'coach_mark_detail_view': null,
    'coach_mark_smart_list': null,
    'coach_mark_share_list': null,

    // Add to browser stores or marketplaces
    'add_to_chrome': null,
    'add_to_firefox': null,

    // Social Prompt Stuff
    'app_open_count': '0',
    'significant_event_count': '0',
    'new_installation': null,
    'last_open_app_date': '0',
    'chrome_rating_later': 'false',
    'chrome_app_rating_later': 'false',

    // Shortcuts
    'shortcut_delete': 'CTRL + BACKSPACE',
    'shortcut_add_new_list': 'CTRL + L',
    'shortcut_goto_inbox': 'CTRL + I',
    'shortcut_navigate_lists': 'Arrow Keys',
    'shortcut_add_new_task': 'CTRL + N', // triggers new window on windows chrome, CTRL + 0 as alternate
    'shortcut_navigate_tasks': 'Arrow Keys',

    'shortcut_mark_task_done': 'CTRL + D',
    'shortcut_mark_task_starred': 'CTRL + S',

    'shortcut_goto_search': 'CTRL + F',

    // smart list shortcuts
    'shortcut_goto_filter_assigned': 'CTRL + 1',
    'shortcut_goto_filter_starred': 'CTRL + 2',
    'shortcut_goto_filter_today': 'CTRL + 3',
    'shortcut_goto_filter_week': 'CTRL + 4',
    'shortcut_goto_filter_all': 'CTRL + 5',
    'shortcut_goto_filter_completed': 'CTRL + 6',
    'shortcut_goto_filter_conversations': 'CTRL + 7',

    'shortcut_goto_preferences': 'CTRL + P', // triggers print windows ie 10, CTRL + M as alternate
    'shortcut_show_notifications': 'CTRL + SHIFT + A',

    'shortcut_select_all_tasks': 'CTRL + A',
    'shortcut_copy_tasks': 'CTRL + C',
    'shortcut_cut_tasks': 'CTRL + X',
    'shortcut_paste_tasks': 'CTRL + V',
    'shortcut_send_via_email': 'CTRL + E',

    'shortcut_sync': 'R',

    // Filters
    'smartlist_visibility_starred': 'auto',
    'smartlist_visibility_all': 'hidden',
    'smartlist_visibility_today': 'auto',
    'smartlist_visibility_completed': 'hidden',
    'smartlist_visibility_week': 'auto',
    'smartlist_visibility_conversations': 'auto',
    'smartlist_visibility_assigned': 'auto',

    // Themes
    'background': 'wlbackground01',

    // Automatic Reminders
    // Tasks due_date timestamp in minutes, e.g. 14:35 -> (14 * 60) + 35 -> 875
    'auto_reminder_timeinterval': '540',
    // null, 0-7, where zero is on the date of the due_date and seven a week before the due_date
    'auto_reminder_noticeperiod': null,

    'notifications_email_enabled': 'true',
    'notifications_push_enabled': 'true',
    'notifications_desktop_enabled': 'true',

    'sound_checkoff_enabled': 'true',
    'sound_notification_enabled': 'true',

    // news letter
    'newsletter_subscription_enabled': 'false',

    // view settings
    'show_completed_items': 'true',

    // quotas for trials
    'pro_trial_limit_assigning': '3',
    'pro_trial_limit_files': '3',
    'pro_trial_limit_comments': '10',
  };

  if (runtime.feature_comments_disabled) {

    _defaultSettings = _.omit(_defaultSettings, ['smartlist_visibility_conversations', 'shortcut_goto_filter_conversations']);
  }

  return WBModel.extend({

    'storeName': 'storage',

    'defaults': _.clone(_defaultSettings),

    'initialize': function () {

      var self = this;

      WBDeferrableMixin.applyTo(self);

      _super.initialize.apply(self, arguments);

      self.ready = self.deferred();
      self.bindOnceTo(runtime, 'sync:end', function () {

        self._checkDefaultCompatibility(true);
      });

      self.bindTo(self, 'change:notifications_desktop_enabled', self._onDesktopNotificationsSettingChange);

      self.hasFetched = new $.Deferred();

      self.fetch({

        'success': self._fetchSuccess.bind(self),
        'error': self._fetchSuccess.bind(self),
        'fromStorage': true
      });

      self.bindTo(self, 'change:language', function (model, langCode) {
        _.defer(function () {
          runtime.settings.save('account_locale', langCode);
        });
      });

      return self;
    },

    'url': function () {

      return '/me/settings';
    },

    'resetShortcuts': function () {

      var self = this;

      var shortcuts = {};
      _.each(self.defaults, function (val, key) {

        if (/^shortcut_/.test(key)) {

          shortcuts[key] = val;
        }
      });

      self.save(shortcuts);
      _.defer(function () {

        self._checkDefaultCompatibility(true);
      });
    },

    // overridden set method, to make sure that any value
    // except for null is converted to a string
    'set': function (keyOrObject, value, options) {

      var self = this;

      if (_.isObject(keyOrObject)) {

        _.each(keyOrObject, function (objValue, objKey) {

          // reject nested objects - the backend doesn't want them
          if (_.isObject(objValue)) {
            throw new Error('Cannot set nested object as value');
          }

          keyOrObject[objKey] = _.isNull(objValue) ? null : _strings.convertValueToString(objValue);
        });
      }
      else {

        value = _.isNull(value) ? null : _strings.convertValueToString(value);
      }

      _super.set.call(self, keyOrObject, value, options);

      return self;
    },

    '_checkDefaultCompatibility': function (overWrite) {

      var self = this;
      var checkShortcuts = [

        'shortcut_add_new_task',
        'shortcut_goto_preferences'
      ];

      _.each(checkShortcuts, function (shortcut) {

        // if a shortcut is on the default setting check that it is a 'good' default
        if (self.defaults[shortcut] === self.get(shortcut)) {

          var func = '_getDefault_' + shortcut;

          if (_.isFunction(self[func])) {

            var combo = self[func]();
            var data = {};

            data[shortcut] = combo;

            self[overWrite ? 'save' : 'set'](data);
          }
        }
      });
    },

    '_getDefault_shortcut_add_new_task': function () {

      var shortcut;

      if (runtime.env.isWindows() && runtime.env.isChrome()) {

        shortcut = 'CTRL + 0';
      }
      else {

        shortcut = 'CTRL + N';
      }

      return shortcut;
    },

    '_getDefault_shortcut_goto_preferences': function () {

      var shortcut;

      if (runtime.env.isWindows() && runtime.env.isIE()) {

        shortcut = 'CTRL + M';
      }
      else {

        shortcut = 'CTRL + P';
      }

      return shortcut;
    },

    '_fetchSuccess': function () {

      var self = this;

      self.hasFetched.resolve();

      // force this
      self.trigger('change:background');

      runtime.publish('settings:ready', self);
      self.ready.resolve();
    },

    '_onDesktopNotificationsSettingChange': function () {

      var self = this;

      if (self.attributes.notifications_desktop_enabled === true && !_notifications._permissionGranted) {

        runtime.trigger('popover:close');
        runtime.trigger('settings:close');

        _.delay(_notifications.requestPermission, 300);
      }
    },

    'isTouchEnabled': function () {
      var key = runtime.env.getEnvIdentifier();
      return this.attributes[key] === '1';
    }
  });
});
define('models/LanguageModel',[

  'application/runtime',

  'wunderbits/WBModel'

], function(runtime, WBModel, undefined) {

  

  var $ = runtime.$;

  var _super = WBModel.prototype;

  return WBModel.extend({

    'defaults': {

      'id': 'wunderlist_language',
      'code': 'en'
    },

    'initialize': function() {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.ready = new $.Deferred();

      return self;
    },

    'url': function () {

      return '/languages';
    }
  });
});
// jQuery Batch AJAX plugin to work with https://github.com/arsduo/batch_api
// (c) 2012- Aditya, 6 Wunderkinder GmbH.
// https://github.com/netroy/jquery.batch_api

define('vendor/jquery.batch_api',[
  'vendor/jquery',
  'vendor/lodash'
], function ($, _, undefined) {

  

  var global = window;

  function FakeAjaxDeferred() {

    var self = $.Deferred.call(this);
    $.extend(self, overriddenFunctions);
    return self;
  }

  var overriddenFunctions = {
    'getResponseHeader': function(key) {
      return this._responseHeaders && this._responseHeaders[key];
    },
    'getAllResponseHeaders': function() {
      return this._responseHeaders;
    },
    'setRequestHeader': function(key, value) {
      var _reqObject = this._reqObject;
      _reqObject.headers || (_reqObject.headers = {});
      _reqObject.headers[key] = value;
    }
  };

  FakeAjaxDeferred.prototype = new $.Deferred();

  // Bind the fake-ajax method and the private variables in a closure
  function _ajaxWrapper (instance, _executionQueue, _deferredsQueue) {

    // Generic AJAX request, equivalent of $.ajax
    instance.ajax = function(url, options) {

      var deferred = new FakeAjaxDeferred();
      if ( typeof url === 'object' ) {
        options = url;
        url = options.url;
      }

      var reqObject = {};
      reqObject.method = options.type;
      reqObject.url = url;
      if(options.data) {
        reqObject.params = options.data;
      }

      if(options.headers) {
        reqObject.headers = options.headers;
      }

      deferred._reqObject = reqObject;
      _executionQueue.push(reqObject);
      _deferredsQueue.push(deferred);

      return deferred;
    };

    return instance.ajax;
  }

  // bind the execution queue in a closure with the execution queue
  function _executeWrapper (instance, _executionQueue, _deferredsQueue, settings) {

    // 500 is the wunderapi current limit on batch operations
    var maxRequests = settings.max_requests || 500;
    var io = settings.io;
    var url = settings.url || '/batch';
    var headers = settings.headers || {};
    var context = settings.context || '';

    function _execute() {

      var _requestsCount = _executionQueue.length;

      if(_requestsCount === 0) {

        return (new $.Deferred()).resolve();
      }

      var postData = {
        'ops': _executionQueue.splice(0, maxRequests),
        'sequential': true
      };

      return io.post(url, postData, headers, 60000, context).done(function (data) {

        var _result, _deferred, _originalRequest, _args;
        var _index = 0;

        // processing and execution of callbacks/deferreds for each batch operation response
        // is separated by a 100ms breather to help prevent UI lockup
        // when this batch is finished processing all of its operations, the any queued batches
        // will be executed in 500ms after processing is finished
        function _next () {

          _result = data.results[_index];
          _deferred = _deferredsQueue[_index];
          _originalRequest = postData.ops[_index];

          _deferred.status = _result.status;
          _deferred._responseHeaders = _result.headers || {};
          _args = [_result.body, _deferred, _originalRequest];

          if (_result.status && (_result.status === 200 || _result.status === 201 || _result.status === 404)) {
            _deferred.resolve.apply(_deferred, _args);
          }
          else {
            var jqXHR = _.clone(_args[1]);
            jqXHR.responseText = _.isObject(_args[0]) && JSON.stringify(_args[0]);
            _deferred.reject.apply(_deferred, [jqXHR]);
          }

          ++_index;

          if (_index < data.results.length) {
            global.setTimeout(_next, 100);
          }
          else if (_executionQueue.length) {
            // clear any refs hanging from the closure, and trigger GC after processing is finished
            _deferredsQueue.splice(0, data.results.length);
            _result = _deferred = _originalRequest = _args = data = postData = null;
            // trigger next batch for execution
            global.setTimeout(_execute, 500);
          }
        }

        // start processing
        if (data.results instanceof Array) {
          _next();
        }
      }).error(function (jqXHR, textStatus, errorThrown) {

        for (var i=0, len = _deferredsQueue.length; i <len; i++) {
          _deferredsQueue[i].reject(jqXHR, textStatus, errorThrown);
        }
      });
    }

    instance.execute = _execute;

    return instance.execute;
  }


  // Batch processor constructor
  function BatchRequest (settings) {

    $.Deferred.call(this);

    var _executionQueue = [], _deferredsQueue = [];
    if(!settings) { settings = {}; }

    _ajaxWrapper(this, _executionQueue, _deferredsQueue);
    _executeWrapper(this, _executionQueue, _deferredsQueue, settings);
  }


  // Extend deferred via prototype
  var batchPrototype = BatchRequest.prototype = new $.Deferred();


  // define RESTful methods with same definition as jquery ajax methods
  $.each(['get', 'post', 'put', 'delete'], function( i, method ) {

    batchPrototype[method] = function ( url, data, callback, type ) {
      // shift arguments if data argument was omitted
      if ($.isFunction(data)) {
        type = type || callback;
        callback = data;
        data = undefined;
      }

      return this.ajax({
        'type': method,
        'url': url,
        'data': data,
        'success': callback,
        'dataType': type
      });
    };
  });


  $.BatchRequest = BatchRequest;

  return BatchRequest;

});
define('backend/sync/request/failSafe',[

  'application/runtime',

  'wunderbits/WBSingleton'
], function (runtime, WBSingleton) {

  

  var _ = runtime._;

  var nonCollections = ['settings'];

  return WBSingleton.extend({

    'init': function (options) {

      var self = this;
      options = options || {};
      self.changeMaps = options.changeMaps;
    },

    'moveToSyncing': function (id, store) {

      var self = this;
      var original, val;
      if (nonCollections.indexOf(store) !== -1) {
        var ignores = ['id', 'type'];
        original = self.changeMaps[store];

        for (var key in original.attributes) {
          val = original.attributes[key];
          if (ignores.indexOf(key) === -1) {
            self.changeMaps[store + 'Syncing'].save(key, val);
            self.changeMaps[store].unset(key).save();
          }
        }
      }
      else {

        original = self.changeMaps[store].get(id);
        self.changeMaps[store + 'Syncing'].save(id, original);
        self.changeMaps[store].unset(id).save();
      }
    },

    'restoreFromSyncing': function (id, store, response) {

      var self = this;
      var isNowDeleted = (store !== 'deleted' && (self.changeMaps.deletedSyncing.get(id)) || self.changeMaps.deleted.get(id));
      if (!isNowDeleted || store === 'deleted') {

        if (nonCollections.indexOf(store) !== -1) {

          var ignores = ['id', 'type'];
          var wasPendingChanges = self.changeMaps[store + 'Syncing'];
          var clonedChanges = _.clone(wasPendingChanges.attributes);
          var val;

          for (var key in clonedChanges) {
            val = clonedChanges[key];
            if (!self.changeMaps[store].get(key) && _.indexOf(ignores, key) === -1) {
              self.changeMaps[store].save(key, val);
            }
            (_.indexOf(ignores, key) === -1) && self.changeMaps[store + 'Syncing'].unset(key).save();
          }

          self.changeMaps.failures.save(store, {

            'status': response.status,
            'statusText': response.statusText,
            'responseText': response.responseText
          });
        }
        else {

          var wasSyncing = self.changeMaps[store + 'Syncing'].get(id) || {};
          var currentChanges = self.changeMaps[store].get(id) || {};
          var restored = _.extend({}, wasSyncing, currentChanges);
          if (_.size(restored) || store === 'deleted') {

            self.changeMaps[store].save(id, wasSyncing);
            self.changeMaps.failures.save(id, {

              'status': response.status,
              'statusText': response.statusText,
              'responseText': response.responseText
            });
          }
        }
      }

      id && self.changeMaps[store + 'Syncing'].unset(id).save();
    },

    'cleanupFromSyncing': function (id, store) {

      var self = this;
      if (nonCollections.indexOf(store) === -1) {
        id && self.changeMaps[store + 'Syncing'].unset(id).save();
        id && self.changeMaps.failures.unset(id).save();
      }
      else {

        var ignores = ['id', 'type'];
        var clonedChanges = _.clone(self.changeMaps[store + 'Syncing'].attributes);
        var val;
        for (var key in clonedChanges) {
          val = clonedChanges[key];
          if (ignores.indexOf(key) === -1) {
            self.changeMaps[store + 'Syncing'].unset(key).save();
          }
        }
        self.changeMaps.failures.unset(store).save();
      }
    }
  });
});
define('backend/sync/request/BaseOutputClass',[

  'application/runtime',

  'wunderbits/WBClass',

  'backend/sync/processors',
  'backend/sync/request/failSafe',

  'wunderbits/helpers/SafeParse'

], function (
  runtime,
  WBClass,
  processors, failSafe,
  SafeParse,
  undefined
) {

  

  var $ = runtime.$;

  return WBClass.extend({

    'processorsMap': {

      'shares': processors.shares,
      'events': processors.notifications
    },

    // please leave unused arguments !
    'promiseFactory': function (objId, objType, objTracker, ioDeferred) {

      var self = this;
      var uberDeferred = new $.Deferred();
      var factoryArguments = arguments;

      ioDeferred.done(function () {

        self.ioDone(factoryArguments, arguments, uberDeferred);
      }).fail(function () {

        self.ioFail(factoryArguments, arguments, uberDeferred);
      });

      return uberDeferred.promise();
    },

    'ioDone': function (factoryArgs, ioArgs, deferred) {

      var self = this;

      var objId = factoryArgs[0];
      var objType = factoryArgs[1];
      var objTracker = factoryArgs[2];
      var requestUserId = factoryArgs[4];

      if (self.isCurrentUser(requestUserId)) {
        (self.processorsMap[objType] || processors.generic).apply(undefined, ioArgs);
      }
      failSafe.cleanupFromSyncing(objId, objTracker);

      deferred.resolve();
    },

    'ioFail': function (factoryArgs, ioArgs, deferred) {

      var self = this;
      var objId = factoryArgs[0];
      var objTracker = factoryArgs[2];
      var requestUserId = factoryArgs[4];

      // on migration of prepopulated lists we need to trash 422'd
      // prepopulated list attempted syncages
      var errorCode = ioArgs[0].status;
      var response = ioArgs[0].responseText && SafeParse.json(ioArgs[0].responseText);
      if (response && factoryArgs[1] === 'List') {

        var isAlreadyCreatedPrepopulatedList = errorCode === 422 &&
          response.errors &&
          response.errors.local_identifier &&
          response.errors.local_identifier[0] === 'has already been taken';

        if (isAlreadyCreatedPrepopulatedList) {
          return failSafe.cleanupFromSyncing(objId, objTracker);
        }
      }

      if (self.isCurrentUser(requestUserId)) {
        failSafe.restoreFromSyncing(objId, objTracker, ioArgs[0]);
      }
      else {
        failSafe.cleanupFromSyncing(objId, objTracker);
      }

      deferred.reject();
    },

    'isCurrentUser': function (cachedUserId) {

      var isCurrent = cachedUserId === runtime.user.id;
      return isCurrent;
    }
  });
});
define('backend/sync/request/DeleteObject',[

  'application/runtime',

  'backend/sync/request/BaseOutputClass',

  'backend/sync/request/failSafe'

], function (runtime, BaseOutputClass, failSafe, undefined) {

  

  var $ = runtime.$;

  return BaseOutputClass.extend({

    'send': function (obj, id, batchRequestObj) {

      var self = this;

      if (id === 'id') {
        var uberDeferred = new $.Deferred();
        uberDeferred.reject();
        return uberDeferred.promise();
      }

      var tracker = 'deleted';
      failSafe.moveToSyncing(id, tracker);

      var deletionDeferred = batchRequestObj['delete']('/' + id);
      return self.promiseFactory(id, obj.type, tracker, deletionDeferred, runtime.user.id);
    },

    'ioDone': function (factoryArgs, ioArgs, deferred) {

      var objId = factoryArgs[0];
      var objTracker = factoryArgs[2];

      failSafe.cleanupFromSyncing(objId, objTracker);
      deferred.resolve();
    }
  });
});
define('backend/sync/request/PostNewObject',[

  'application/runtime',

  'backend/sync/request/BaseOutputClass',

  'backend/sync/request/failSafe',
  'backend/sync/request/preprocessors'

], function (runtime, BaseOutputClass, failSafe, preprocessors, undefined) {

  

  var $ = runtime.$;

  return BaseOutputClass.extend({

    'send': function (obj, id, batchRequestObj) {

      var self = this;

      // trim any fat
      var val;
      for (var key in obj) {
        val = obj[key];
        (val === null || val === undefined) && delete obj[key];
      }

      // build request
      var request = preprocessors.newData(obj, id);
      if (!request.data || !request.url) {
        var uberDeferred = new $.Deferred();
        uberDeferred.reject();
        return uberDeferred.promise();
      }

      // setup trackers
      var tracker = 'new';
      failSafe.moveToSyncing(id, tracker);

      // POST & on success remove the object from the syncing new-map, or merge back in for next try
      var creationDeferred = batchRequestObj.post(request.url, request.data);

      return self.promiseFactory(id, obj.type, tracker, creationDeferred, runtime.user.id);
    }
  });
});
define('backend/sync/request/PostObjectUpdates',[

  'application/runtime',

  'backend/sync/request/BaseOutputClass',

  'backend/sync/request/failSafe',
  'backend/sync/request/preprocessors'

], function (runtime, BaseOutputClass, failSafe, preprocessors, undefined) {

  

  var $ = runtime.$;

  return BaseOutputClass.extend({

    'send': function (obj, id, batchRequestObj) {

      var self = this;

      if (id === 'id') {
        var uberDeferred = new $.Deferred();
        uberDeferred.reject();
        return uberDeferred.promise();
      }

      // Since existing tasks can be moved to a new list, we might have to rewrite list_id
      (obj.type === 'Task') && preprocessors.remapListId(obj);

      var tracker = 'updated';
      failSafe.moveToSyncing(id, tracker);

      var updateDeferred = batchRequestObj.put('/' + id, obj);
      return self.promiseFactory(id, obj.type, tracker, updateDeferred, runtime.user.id);
    }
  });
});
define('backend/sync/request/PostSettingsUpdates',[

  'application/runtime',

  'backend/sync/request/BaseOutputClass',

  'backend/sync/request/failSafe',
  'backend/sync/request/preprocessors'

], function (runtime, BaseOutputClass, failSafe, preprocessors, undefined) {

  

  var $ = runtime.$;
  var _ = runtime._;

  return BaseOutputClass.extend({

    'send': function (obj, batchRequestObj) {

      var self = this;

      delete obj.id;
      delete obj.type;

      var settingsObj = preprocessors.settings(obj);

      if (!_.size(settingsObj)) {
        var uberDeferred = new $.Deferred();
        uberDeferred.resolve();
        return uberDeferred.promise();
      }

      var tracker = 'settings';
      failSafe.moveToSyncing(null, tracker);

      var settingsDeferred = batchRequestObj.put('/me/settings', settingsObj);
      return self.promiseFactory(null, 'settings', tracker, settingsDeferred, runtime.user.id);
    }
  });
});
define('backend/sync/request',[

  'application/runtime',

  'vendor/moment',
  'vendor/jquery.batch_api',

  'backend/sync/processors',

  'backend/sync/request/failSafe',
  'backend/sync/request/DeleteObject',
  'backend/sync/request/PostNewObject',
  'backend/sync/request/PostObjectUpdates',
  'backend/sync/request/PostSettingsUpdates',
  'backend/sync/request/preprocessors',

  'wunderbits/lib/createUID'

], function (

    runtime,

    moment, BatchRequest,

    processors,

    failSafe, DeleteObject, PostNewObject, PostObjectUpdates, PostSettingsUpdates, preprocessors,

    createUID,

    undefined
  ) {

  

  var _ = runtime._;
  var $ = runtime.$;

  var uid = createUID();
  var responseLimit = 1000;
  var defaultBefore = moment().eod().add('days', 1).unix();
  var collections, changeMaps;

  // Operation Class Methods
  var deleteObject = new DeleteObject().send;
  var sendNewObject = new PostNewObject().send;
  var sendObjectChanges = new PostObjectUpdates().send;
  var sendSettingsChanges = new PostSettingsUpdates().send;

  function init (_collections, _changeMaps, _crossClientSettings) {

    collections = _collections;
    changeMaps = _changeMaps;

    // Initialize the fail safe helper
    failSafe.init({
      'changeMaps': _changeMaps
    });

    // Initialize the object preprocessors
    preprocessors.init({
      'collections': _collections,
      'crossClientSettings': _crossClientSettings
    });

    // Initialize the response processors
    processors.init(_collections, _changeMaps, _crossClientSettings);

    // timer responders
    runtime.on('timer:stop', function () {

      clearTimeout(shareSyncTimer);
    });

    // Load settings from user model
    var settings = runtime.user.get('settings');
    settings && processors.settings(settings);

    // Cleanup
    runtime.on('window:unload', function () {

      // share sinces
      _.each(collections.shares.models, function (shareModel) {

        var onlineListId = shareModel.get('online_resource_id');
        changeMaps.meta.unset('share_' + onlineListId + '_since_' + uid).save();
        changeMaps.meta.unset('share_' + onlineListId + '_before_' + uid).save();
      });

      // regular sinces
      _.each(['contacts', 'services', 'lists', 'tasks', 'reminders', 'shares', 'events'], function (type) {

        changeMaps.meta.unset(type + '_since_' + uid).save();
        changeMaps.meta.unset(type + '_before_' + uid).save();
      });
    });
  }

  // helper for comparing a cached user id before ajax request with the current logged in user
  function isCurrentUser (cachedUserId) {

    var def = new $.Deferred();

    runtime.user.fetch({
      'success': function () {
        var sameUser = cachedUserId === runtime.user.get('id');
        def[sameUser ? 'resolve' : 'reject']();
      },
      'error': function () {
        def.reject();
      }
    });

    return def.promise();
  }

  function executeOrDieByUser (userId, callback) {

    userId && callback && isCurrentUser(userId)
      .done(callback)
      .fail(stopAndLogout);
  }

  var processorsMap = {

    'quota': processors.quotas,
    'shares': processors.shares,
    'events': processors.notifications
  };

  var isSyncing = runtime.isSyncing = false;
  var debounceTimeout = 10*1000;
  var queuedSyncs = [];

  function stopAndLogout() {
    isSyncing = runtime.isSyncing = false;
    runtime.trigger('sync:end');
    runtime.user.forceLogout();
  }

  function trySyncAll (first, context) {

    if (isSyncing) {
      queuedSyncs.push(true);
      return;
    }
    else {
      // fetch the user data from storage to ensure consistency between tabs/windows
      var userModel = runtime.user;
      // No token = No Sync
      if(!userModel.get('token')) {
        stopAndLogout();
      }
      else {
        queuedSyncs = [];
        syncAll(first, context);
      }
    }
  }

  function tryQueue () {

    if (queuedSyncs.length) {
      trySyncAll();
    }
  }

  function queueSync () {
    queuedSyncs.push(true);
  }
  // **** **** **** **** ****
  // !! MAIN BATCH REQUEST !!
  // **** **** **** **** ****
  function syncAll (first, context) {

    isSyncing = runtime.isSyncing = true;
    runtime.trigger('sync:started');

    var shouldSyncAgain = false;

    // cache current user id
    var batchUserId = runtime.user.get('id');

    var _batchRequest = new BatchRequest({
      'url': '/batch',
      'io': runtime.io,
      'context': context
    });

    // sync deferreds array (used to collect all send type ops)
    var syncDeferreds = [];

    //******
    //
    // BEGIN SENDS
    //
    //

    // Upload new models, lists first
    var newLists = {};
    var newTasks = {};
    var newSubtasks = {};
    // Critical models, Shares & Services
    // if creation fails for these on the API, the local model should be destroyed too
    var criticalModels = {};
    var newObjs = changeMaps['new'].toJSON();
    delete newObjs.id;

    // Map all new objects into their own newType objects
    _.each(newObjs, function (obj, id) {

      if (obj.type === 'List') {
        newLists[id] = obj;
        delete newObjs[id];
      }
      else if (obj.type === 'Task') {
        if (!obj.parent_id) {
          newTasks[id] = obj;
        }
        else {
          newSubtasks[id] = obj;
        }
        delete newObjs[id];
      }
      else if(obj.type === 'Service' || obj.type === 'Share') {
        criticalModels[id] = obj;
        delete newObjs[id];
      }
    });

    // Send new objects
    function sendNewObjectWrapper (obj, id) {
      return sendNewObject(obj, id, _batchRequest);
    }
    // do these in this ORDER they are eachother's parents
    var newListsDeferreds = _.map(newLists, sendNewObjectWrapper);
    var newTasksDeferreds = _.map(newTasks, sendNewObjectWrapper);
    var newSubtasksDeferreds = _.map(newSubtasks, sendNewObjectWrapper);

    // Send critical objects, if these fail, destroy the local copy
    // (e.g. Services & Shares)
    var newCriticalModelDeferreds = _.map(criticalModels, function (obj, id) {

      return sendNewObject(obj, id, _batchRequest).fail(function () {

        var type = obj.type;
        if (type) {
          type = type.toLowerCase();
          var collection = collections[type + 's'];
          var model = collection && collection.get(id);
          model && model.destroy();
          // trigger an event that can be used to show a message to the user, just in case
          runtime.trigger(type + ':save:failed', id);
        }
      });
    });

    // Send generic new objects
    var genericNewObjectDeferreds = _.map(newObjs, sendNewObjectWrapper);

    // Send object changes
    function sendObjectChangesWrapper (obj, id) {
      return sendObjectChanges(obj, id, _batchRequest);
    }
    var changeDeferreds = _.map(changeMaps.updated.toJSON(), sendObjectChangesWrapper);

    // Send object deletions
    function deleteObjectWrapper (obj, id) {

      !processors.deleteCache[id] && (processors.deleteCache[id] === true);
      return deleteObject(obj, id, _batchRequest);
    }
    var deletionDeferreds = _.map(changeMaps.deleted.toJSON(), deleteObjectWrapper);

    // Send settings updates
    function sendSettingsChangesWrapper (ob, id) {
      return sendSettingsChanges(ob, id, _batchRequest);
    }
    var settingsDeferred = sendSettingsChangesWrapper(changeMaps.settings.toJSON(), _batchRequest);

    // concat all actual send type deferreds into the syncDeferreds collection
    // array to be used by the container batch request failure heandler
    // to know when individual operation failure cleanup is truly done
    var deferredsGroups = [
      newListsDeferreds, newTasksDeferreds, newSubtasksDeferreds, newCriticalModelDeferreds,
      genericNewObjectDeferreds, changeDeferreds, deletionDeferreds
    ];
    deferredsGroups.push([settingsDeferred]);
    for (var i=0, len = deferredsGroups.length; i < len; i++) {
      var deferreds = deferredsGroups[i];
      if (deferreds.length) {
        syncDeferreds = syncDeferreds.concat(deferreds);
      }
    }

    //******
    //
    // BEGIN FETCHES
    //
    //

    // Fetch user, settings - non since types
    !first && _batchRequest.get('/me').done(function () {

      var args = arguments;
      executeOrDieByUser(batchUserId, function () {
        processors.user.apply(undefined, args);
      });
    });

    !first && _batchRequest.get('/me/settings').done(function () {

      var args = arguments;
      executeOrDieByUser(batchUserId, function () {

        processors.settings.apply(undefined, args);
      });
    });

    // Fetch users on shared lists
    // there might be multiple shares for a list, avoid making duplicate requests
    var requestedListShares = {};
    !first && _.each(collections.shares.models, function (shareModel) {

      var onlineListId = shareModel.get('online_resource_id');
      if(!!shareModel.get('accepted_at') && onlineListId && !requestedListShares[onlineListId]) {

        // use since param free up that network and processing time
        var params = {};

        responseLimit && (params.limit = responseLimit);

        if (context !== 'login') {

          var since = changeMaps.meta.get('share_' + onlineListId + '_since_' + uid);
          !since && (since = changeMaps.meta.get('share_' + onlineListId + '_since'));
          since && (params.since = since || 0);
        }

        _batchRequest.get('/' + onlineListId + '/shares', params).done(function (body, xhr) {

          var args = arguments;
          executeOrDieByUser(batchUserId, function () {
            var since = xhr.getResponseHeader('X-6W-Timestamp');
            since && changeMaps.meta.save('share_' + onlineListId + '_since_' + uid, since);
            since && changeMaps.meta.save('share_' + onlineListId + '_since', since);

            processors.shares.apply(undefined, args);
          });
        });
        requestedListShares[onlineListId] = true;
      }
    });

    // request all the things
    var requestTypes = [];

    // do something different when first sync
    if (first) {

      // get list from current route or default to inbox
      var currentRoute = runtime.currentRoute();
      var listId = (/lists\//).test(currentRoute) ? currentRoute.split('/')[1] : undefined;

      var list = collections.lists.get(listId || 'inbox');
      var onlineListId = (!list || list.id === 'inbox') ? 'inbox' : list.get('online_id');

      requestTypes.push('lists', '/' + onlineListId + '/tasks');

      if (context === 'minisite') {

        requestTypes.push('shares');
      }
    }
    else {

      // make an all request
      requestTypes.push('contacts', 'services', 'lists', 'tasks', 'reminders', 'shares', 'events');
      // do not punish pro users with data that is useless to them
      if (!runtime.user.isPro()) {
        requestTypes.push('quota');
      }
    }

    // Fetch remote changes
    // Fetch shares after contacts & lists
    // Fetch events after shares
    var processorDeferreds = {};
    _.each(requestTypes, function (type) {

      var url = (/\//.test(type)) ? type : '/me/' + type;
      var beforeParams = {};
      var sinceParams = {};
      var since;

      // BEFORES

      var before = changeMaps.meta.get(url + '_before_' + uid);
      !before && (before = changeMaps.meta.get(url + '_before'));

      //console.log('local before', url, before);

      if (before !== 'done') {

        beforeParams.before = before || defaultBefore;
        responseLimit && (beforeParams.limit = responseLimit);
        beforeParams.compact = true;
      }
      else {

        runtime.publish('before:done');
      }

      if (url.indexOf('tasks') >= 0 && beforeParams.before) {

        processorDeferreds[url + 'before'] = new $.Deferred();

        _batchRequest.get(url, beforeParams).done(function (body, xhr) {

          var args = arguments;
          executeOrDieByUser(batchUserId, function () {

            var since = xhr.getResponseHeader('X-6W-Timestamp');
            since && changeMaps.meta.save(type + '_since_' + uid, since);
            since && changeMaps.meta.save(type + '_since', since);

            var serverBefore = xhr.getResponseHeader('X-6W-Timestamp-Before');
            serverBefore = (serverBefore !== undefined ? serverBefore : 'done');

            changeMaps.meta.save(url + '_before_' + uid, serverBefore);
            changeMaps.meta.save(url + '_before', serverBefore);

            if (serverBefore !== 'done') {
              // flag to tell sync to fire immediately
              shouldSyncAgain = true;
              runtime.trigger('sync:stillFetching');
            }
            else if (serverBefore === 'done' && url === '/me/tasks') {
              // trigger done for before attribute
              runtime.publish('before:done');
            }
            var deferred = (processorsMap[type] || processors.generic).apply(undefined, args);
            deferred.done().then(function () {

              processorDeferreds[url + 'before'].resolve();
            });
          });
        }).fail(function () {

          processorDeferreds[url + 'before'].resolve();
        });
      }

      // SINCES

      if (context !== 'login') {

        since = changeMaps.meta.get(type + '_since_' + uid);
        !since && (since = changeMaps.meta.get(type + '_since'));
        since && (sinceParams.since = since || 0);
      }

      (type === 'events') && (sinceParams.locale = runtime.settings.get('language'));

      if (!(url.indexOf('tasks') >= 0 && !since)) {

        processorDeferreds[type + 'since'] = new $.Deferred();

        _batchRequest.get(url, sinceParams).done(function (body, xhr) {

          var args = arguments;
          executeOrDieByUser(batchUserId, function () {

            var since = xhr.getResponseHeader('X-6W-Timestamp');
            since && changeMaps.meta.save(type + '_since_' + uid, since);
            since && changeMaps.meta.save(type + '_since', since);

            var deferred = (processorsMap[type] || processors.generic).apply(undefined, args);
            deferred.done().then(function () {

              processorDeferreds[type + 'since'].resolve();
            });
          });
        }).fail(function () {

          processorDeferreds[type + 'since'].resolve();
        });
      }
    });

    // ---*--------------------------
    //  **
    // *** Fire the batch request ***
    //  **
    // ---*--------------------------

    runtime.user.getBetaAuth()
      .done(function () {
        _batchRequest.execute().then(function (data, textStatus, xhr) {

          $.when.apply($, _.toArray(processorDeferreds)).then(function () {

            _updateSyncRate(xhr);
            isSyncing = runtime.isSyncing = false;
            runtime.trigger('sync:end');

            if ((first || shouldSyncAgain) && context !== 'minisite') {

              // if we are in the first request and not a minisite link immediately start a sync all
              _.defer(function () {

                syncAll(null, context);
              });
            }
          });
        }).fail(function (response) {

          // wait to end failing state until after failure cleanup
          // for all batch operations are done
          $.when.apply($, syncDeferreds).fail(function () {

            _fail(response, batchUserId);
            isSyncing = runtime.isSyncing = false;
            queueSync();
          });
        });
      })
      .fail(function () {
        // user not authorized for beta
        runtime.user.forceLogout();
      });
  }

  var shareSyncTimer;
  function syncShare (shareModel) {

    // do not defer share syncs
    isSyncing = runtime.isSyncing = true;

    // cache this request's user id
    var batchUserId = runtime.user.get('id');

    var _batchRequest = new BatchRequest({

      'url': '/batch',
      'io': runtime.io
    });

    var share = shareModel.toJSON();
    _batchRequest.put('/' + share.online_id, {

      'accepted_at': share.accepted_at
    });

    var listId = share.online_resource_id;
    _batchRequest.get('/' + listId).done(function (listData) {

      executeOrDieByUser(batchUserId, function () {

        listData.share_id = shareModel.id;
        processors.generic(listData).done(function () {

          runtime.trigger('share:accepted', shareModel);
        });
      });
    });

    _batchRequest.get('/' + listId + '/tasks').done(function () {

      var args = arguments;
      executeOrDieByUser(batchUserId, function () {
        processors.generic.apply(undefined, args);
      });
    });
    _batchRequest.get('/' + listId + '/shares').done(function () {

      var args = arguments;
      executeOrDieByUser(batchUserId, function () {
        processors.shares.apply(undefined, args);
      });
    });
    _batchRequest.get('/' + listId + '/reminders').done(function () {

      var args = arguments;
      executeOrDieByUser(batchUserId, function () {
        processors.generic.apply(undefined, args);
      });
    });

    runtime.user.getBetaAuth()
      .done(function () {

        _batchRequest.execute().then(function (data, textStatus, xhr) {

          _updateSyncRate(xhr);
          isSyncing = runtime.isSyncing = false;
        }).fail(function (response) {

          _fail(response, batchUserId);
          isSyncing = runtime.isSyncing = false;
        });
      })
      .fail(function () {

        runtime.user.forceLogout();
      });
  }

  function _fail (response, batchUserId) {

    isCurrentUser(batchUserId).done(function () {
      if (response.status === 401) {

        stopAndLogout();
      }
      else {

        // TODO every tracker should be able to be processed like this
        var restoreTrackers = ['new', 'deleted', 'updated', 'settings'];
        _.each(restoreTrackers, function (tracker) {

          _.each(changeMaps[tracker + 'Syncing'].attributes, function (obj, id) {

            if (tracker !== 'settings') {

              id && (id !== 'id') && failSafe.restoreFromSyncing(id, tracker, response);
            }
            else {

              failSafe.restoreFromSyncing(null, tracker, response);
            }
          });
        });
      }
    });
  }

  function _updateSyncRate (xhr) {

    var hardLimit = xhr.getResponseHeader('X-Ratelimit-Delay-Hard');
    var softLimit = xhr.getResponseHeader('X-Ratelimit-Delay-Soft');

    if (hardLimit) {

      debounceTimeout = hardLimit * 1000;
      runtime.trigger('update:syncRate:hard', hardLimit);
    }

    if (softLimit) {

      runtime.trigger('update:syncRate:soft', softLimit);
    }
  }

  return {
    'init': init,
    'all': trySyncAll,
    'tryQueue': tryQueue,
    'queueSync': queueSync,
    'share': syncShare,

    // exposes tested components for testing
    // TODO refactor sync so that all components are testable
    '_preprocessSettings': preprocessors.settings
  };

});

define('backend/sync/trackers',[

  'application/runtime',

  'wunderbits/helpers/date'

], function(runtime, DateHelper, undefined) {

  

  var Backbone = runtime.Backbone;
  var _ = runtime._;

  var changeMaps = {}, collections;

  var localFieldNames = [
    'id',
    'online_id',

    'allCommentsLoaded',
    'completed',
    'forceRender',
    'from_paste',
    'hasFiles',
    'hasComments',
    'hasSubtasks',
    'isFacebookFriend',
    'local_change',
    'notified',
    'reminded',
    'role',
    'share_id',
    'subtaskCompletion',
    'updated_at',
    'hasUnreadComments',
    'unreadCount'
  ];

  var trackers = [
    'new',
    'updated',
    'deleted',
    'settings',
    'meta',
    'failures',
    'restFailSafe'
  ];

  function init (_collections) {

    collections = _collections;

    // Create persistence models
    _.each(trackers, function (name) {

      var _model = new Backbone.Model({
        'id': name + 'Model'
      });

      var _syncingModel = new Backbone.Model({
        'id': name + 'SyncingModel'
      });

      _model.storeName = 'storage';
      _syncingModel.storeName = 'storage';

      changeMaps[name] = _model;
      changeMaps[name + 'Syncing'] = _syncingModel;
    });

    runtime.on('trackers:clear', clearTrackers);

    runtime.on('trackers:debounceSync', debounceSync);

    return changeMaps;
  }

  function clearTrackers (callback) {

    _.each(trackers, function (name) {

      _.each(['', 'Syncing'], function (str) {

        _.each(_.clone(changeMaps[name + str].attributes), function (attribute, key) {

          (key !== 'id') && changeMaps[name + str].unset(key);
        });
      });
    });

    (typeof callback === 'function') && callback();
  }

  // Sync debouncer, to trigger sync after the user stops making changes
  var syncDebounceTimer, debounceTimeout = 1000;
  function debounceSync () {

    // Debounce sync-trigger
    clearTimeout(syncDebounceTimer);
    syncDebounceTimer = setTimeout(function() {

      var now = new Date();
      // if last sync was older than the hard sync rate, try to sync now, else queue a sync
      if (runtime.lastSync && (now - runtime.lastSync > runtime.hardSync * 1000)) {

        runtime.trigger('sync:start');
      }
      else {

        runtime.trigger('sync:queue');
      }
    }, debounceTimeout);
  }

  function trackChange (model, options) {

    options = options || {};

    var changes = model.changedAttributes();
    // Avoid tracking changes due to sync
    if (options.fromSync || options.fromStorage || !changes || !model.attributes.type) {
      typeCheck(model, options);
      return;
    }

    // On done/undone remove 'completed' & replace it with the completed_at timestamp
    // Must be done before local fields are removed, and must add a the changed
    // attribute to the changes object, so that it doesn't return early below
    if ('completed' in changes) {

      changes.completed_at = model.attributes.completed ? DateHelper.ISOString(): null;
    }

    // Don't track local fields
    _.each(localFieldNames, function (field) {

      delete changes[field];
    });

    // don't sync out changes on local_identifiers (currently)
    delete changes.local_identifier;

    if (!model.id || _.size(changes) === 0) {
      return;
    }

    var onlineId = model.get('online_id');
    var obj = {}, data;

    // Remote Model
    if (onlineId) {

      data = changeMaps.updated.get(onlineId);

      if (data === undefined) {

        data = {

          'id': onlineId,
          'type': model.get('type')
        };
      }

      _.each(changes, function (hasChanged, changedAttributeName) {

        data[changedAttributeName] = model.attributes[changedAttributeName];
      });

      (changes.completed_at !== undefined) && (data.completed_at = changes.completed_at);

      // Persist the changes to the offline-database
      // And don't send updy update data
      if (_.size(data) > 2) {

        obj[onlineId] = data;
        changeMaps.updated.save(obj);
      }
    }
    // Local Model, just replace in the new-model map
    else {

      data = model.toJSON();

      (changes.completed_at !== undefined) && (data.completed_at = changes.completed_at);

      obj[model.id] = data;

      _.size(data) > 0 && changeMaps['new'].save(obj);
    }

    // Debounce sync-trigger
    debounceSync();
  }

  function trackAdd (model, collection, options) {

    options = options || {};

    // Avoid tracking changes due to sync, or on remote objects
    if (options.fromSync || options.fromStorage || model.attributes.online_id || !model.attributes.type) {

      typeCheck(model, options);
      return;
    }

    var data = model.toJSON();

    _.each(localFieldNames, function (field) {

      data[field] && delete data[field];
    });

    // track only local tasks
    _.size(data) > 0 && changeMaps['new'].save(model.id, data);

    // Debounce sync-trigger
    debounceSync();
  }

  function trackRemove (model, collection, options) {

    options = options || {};

    if (options.fromSync || options.fromStorage || !model.attributes.type) {

      options.fromSync && removeFromNew(model);
      typeCheck(model, options);
      return;
    }

    var onlineId = model.get('online_id');
    // When a local model is deleted, remove it from the "new" list
    if (!onlineId) {

      changeMaps['new'].unset(model.id).save();
    }
    else {

      var obj = {};
      obj[onlineId] = {};
      changeMaps.deleted.save(obj);

      // remove changes made on now deleted model
      changeMaps.updated.get(onlineId) && changeMaps.updated.unset(onlineId).save();

      // remove new children of now deleted model
      _.each(changeMaps['new'].attributes, function (obj, key) {

        if (obj.parent_id === model.id) {

          changeMaps['new'].unset(key).save();
        }
      });

      // Debounce sync-trigger
      debounceSync();
    }
  }

  function removeFromNew (model) {

    var deleteObj = changeMaps['new'].get(model.id);
    deleteObj && changeMaps['new'].unset(model.id).save();
  }

  function trackSettings (model, options) {

    options = options || {};

    var changes = model.changedAttributes();

    if (options.fromSync || options.fromStorage || !changes) {

      return;
    }

    _.each(localFieldNames, function (field) {

      delete changes[field];
    });

    // Avoid tracking changes due to sync
    if (_.size(changes) === 0) {

      return;
    }

    var obj = {};
    _.each(changes, function(hasChanged, changedAttributeName) {

      hasChanged && (obj[changedAttributeName] = model.get(changedAttributeName));
    });

    delete obj.id;
    delete obj.type;

    changeMaps.settings.save(obj);

    // Debounce sync-trigger
    debounceSync();
  }

  function typeCheck (model, options) {

    if (!options.fromSync && !options.fromStorage && !model.attributes.type) {
      throw new Error('Looks like you are attempting to track a local model for syncing. Cannot sync models to the api without valid types.');
    }
  }

  function getChangeMaps () {

    return changeMaps;
  }

  return  {

    'init': init,
    'trackAdd': trackAdd,
    'trackChange': trackChange,
    'trackRemove': trackRemove,
    'trackSettings': trackSettings,
    'getChangeMaps': getChangeMaps
  };

});
define('backend/sync',[

  'application/runtime',

  'backend/database',

  'backend/sync/request',
  'backend/sync/trackers',

  'collections/ContactCollection',
  'collections/CommentsCollection',
  'collections/FilesCollection',
  'collections/ListCollection',
  'collections/TaskCollection',
  'collections/ShareCollection',
  'collections/ReminderCollection',
  'collections/ServiceCollection',
  'collections/NotificationCollection',

  'wunderbits/WBEventEmitter'

], function (
  runtime,
  database,
  request, trackers,
  ContactCollection, CommentsCollection, FilesCollection, ListCollection, TaskCollection, ShareCollection,
  ReminderCollection, ServiceCollection, NotificationCollection,
  WBEventEmitter,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;
  var _super = WBEventEmitter.prototype;

  var crossClientSettings = [

    'new_task_location',
    'confirm_delete_entity',
    'inbox_name',
    'background',
    'auto_reminder_timeinterval',
    'auto_reminder_noticeperiod',
    'account_locale',
    'smartlist_visibility_starred',
    'smartlist_visibility_today',
    'smartlist_visibility_conversations',
    'smartlist_visibility_week',
    'smartlist_visibility_all',
    'smartlist_visibility_done',
    'start_of_week',
    'notifications_email_enabled',
    'notifications_push_enabled',
    'sound_checkoff_enabled',
    'sound_notification_enabled',
    'newsletter_subscription_enabled',
    'migrated_wunderlist_one_user',
    'show_completed_items',
    'print_completed_items',

    // trial limits
    'consumed_quota_assigning_overall',
    'consumed_quota_assigning_daily',
    'consumed_quota_assigning_daily_date',
    'consumed_quota_comments_overall',
    'consumed_quota_comments_daily',
    'consumed_quota_comments_daily_date',
    'consumed_quota_files_overall',
    'consumed_quota_files_daily',
    'consumed_quota_files_daily_date',

    // campaign stuff
    'campaign_iyf4_invited_friends',
    'campaign_iyf4_notification',
    'campaign_iyf4_notification_last_date',
    'campaign_iyf4_notification_variation'
  ];

  // Convert the settings array to a hash for faster lookup
  if (_.isArray(crossClientSettings)) {
    var ccSetting = crossClientSettings;
    crossClientSettings = {};
    _.each(ccSetting, function(setting) {
      crossClientSettings[setting] = true;
    });
  }

  var collections, changeMaps;

  return WBEventEmitter.extend({

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      // Get references to the collections
      collections = self._initCollections();

      // Initialize the trackers
      changeMaps = trackers.init(collections);

      // Start sync once user is authorized
      runtime.once('user:ready', self.initSync);

      // give this to the runtime
      runtime.pendingChanges = self._pendingChanges;
    },

    'initSync': function (user, context) {

      var self = this;
      // Skip sync for unregistered users
      if (runtime.user.isUnregistered()) {
        // on sync start, trigger a sync end
        var unregisteredSyncBind = runtime.on('sync:start', function() {

          runtime.trigger('sync:end');
        });

        // on sign-up/login, bind sync & remove old dummy handlers
        self.bindOnceTo(runtime.user, 'registered loggedIn', function () {

          self.unbindFrom(unregisteredSyncBind);
          self._initOnLoggedIn(context, true);
        });
      }
      else {
        self._initOnLoggedIn(context);
      }
    },

    '_initOnLoggedIn': function (context, afterTryMode) {

      var self = this;

      // Initialize sync request engine
      request.init(collections, changeMaps, crossClientSettings);

      // Bind sync events
      runtime.on('sync:start', request.all);
      runtime.on('sync:queue', request.queueSync);
      runtime.on('sync:tryQueue', request.tryQueue);

      // Request all the info about a share when it gets accepted
      collections.shares.on('accepted', function (share) {

        var listId = collections.lists.getIdByAltId(share.get('online_resource_id'));

        if (!listId) {

          request.share(share);
        }
      });

      // Track all changes for sync
      _.each(collections, function(collection, name) {

        // don't track files or comments!
        if (!/^(file|comments)/.test(name) ) {
          // Don't track changes on friends or shares
          if(!/^(contact|friend|share)s$/.test(name)) {
            collection.on('change', trackers.trackChange);
          }

          collection.on('add', trackers.trackAdd);
          collection.on('remove', trackers.trackRemove);
        }
      });
      // Track changes on settings
      runtime.settings.on('change', trackers.trackSettings);

      // Load unsynced changes from last sessions & Sync after that
      var _fetchDeferreds = _.map(changeMaps, self._syncMapLoader);
      $.when.apply(null, _fetchDeferreds).done(function() {

        // fetch all lists and tasks if was in try mode
        var afterTryModeDeferred = new $.Deferred();
        if (afterTryMode) {

          // clone previous settings
          var attributes = runtime.settings.attributes;
          var currentSettings = _.clone(attributes, true);

          runtime.settings.clear();

          // trigger settings changes by restoring the old ones
          runtime.settings.save(currentSettings);
          currentSettings = null;

          var stores = [
            collections.lists.storeName,
            collections.tasks.storeName,
            collections.reminders.storeName
          ];
          var storesDeferreds = {};

          _.each(stores, function (storeName) {

            storesDeferreds[storeName] = new $.Deferred();
          });
          $.when.apply($, _.toArray(storesDeferreds)).done(afterTryModeDeferred.resolve);

          _.each(stores, function (storeName) {

            database.getAll(storeName, function getAllCallback (jsonObjects) {

              for (var i = 0, len = jsonObjects.length; i < len; i++) {
                if (jsonObjects[i].deleted_at || jsonObjects[i]['delete']) {
                  jsonObjects.splice(i, 1);
                  --i;
                  --len;
                }
              }

              var inbox;
              if (storeName === 'lists') {
                inbox = collections.lists.get('inbox');
              }

              collections[storeName].reset(inbox);
              collections[storeName].add(jsonObjects, {'merge': true});
              storesDeferreds[storeName].resolve();
            });
          });
        }
        else {
          afterTryModeDeferred.resolve();
        }

        afterTryModeDeferred.done(function () {

          // true because this is the first sync
          // Do not start a sync if trying to load the minisite or payment route
          if (context !== 'minisite' && context !== 'payment') {

            var dbUpgraded = false;
            // if the db has been upgraded, force a full sync in order to
            // retrieve any atrributes not stored in last version of the DB
            runtime.on('database:upgraded', function () {

              dbUpgraded = true;
            });

            if (dbUpgraded && context === 'normalLoad') {

              // clear out sinces
              var metaModel = changeMaps.meta;
              metaModel.save('id', metaModel.id, {
                'unset': true
              });

              // clear out all updated_ats
              _.each(collections, function (collection) {

                _.each(collection.models, function (model) {

                  model.attributes.updated_at && model.unset('updated_at').save();
                });
              });

              // trigger full sync
              runtime.trigger('sync:start', true, 'login');
            }
            else {
              runtime.trigger('sync:start', true, context);
            }
          }
        });
      });
    },

    '_initCollections': function () {

      return {
        'files': new FilesCollection('/files/all'),
        'comments': new CommentsCollection('/comments/all'),
        'contacts': new ContactCollection('/contacts/all'),
        'lists': new ListCollection('/lists/all'),
        'tasks': new TaskCollection('/tasks/all'),
        'subtasks': new TaskCollection('/subtasks/all'),
        'shares': new ShareCollection('/shares/all'),
        'reminders': new ReminderCollection('/reminders/all'),
        'services': new ServiceCollection('/services/all'),
        'notifications': new NotificationCollection('/notifications/all')
      };
    },

    '_pendingChanges': function () {

      // returns number of un synced changes waiting on tracker models
      var trackers = ['new', 'updated', 'deleted'];
      var ids = [];

      _.each(trackers, function (tracker) {

        _.each(changeMaps[tracker].attributes, function (val, key) {

          if (tracker !== 'deleted' && key !== 'id' && _.size(val) === 0) {

            // don't count empty objects
            return;
          }

          (key !== 'id') && ids.push(key);
        });
      });

      ids = _.uniq(ids);

      return ids.length;
    },

    '_syncMapLoader': function (mapModel) {

      var fetchDeferred = new $.Deferred();
      mapModel.fetch({
        'success': function() {
          fetchDeferred.resolve();
        },
        'error': function() {
          mapModel.save();
          fetchDeferred.resolve();
        }
      });
      return fetchDeferred.promise();
    }
  });
});

define('backend/timer',[

  'application/runtime',

  'wunderbits/WBSingleton'

], function(runtime, WBSingleton, undefined) {

  

  var global = runtime.global;
  var setTimeout = global.setTimeout;
  var clearTimeout = global.clearTimeout;

  var _tickRate = 1000;

  var _hardSyncDefault = 1; // 1 second lower limit
  var _hardSyncInterval = _hardSyncDefault;

  var _softSyncDefault = 30; // 30 seconds lower limit
  var _softSyncInterval = _softSyncDefault;

  var _reminderInterval = 1; // ~1 second

  var _date = new Date();

  function _todaysDate () {

    _date.setTime(Date.now());
    return _date.getDate();
  }

  function _thisMinute () {

    _date.setTime(Date.now());
    return _date.getMinutes();
  }

  function _thisHour () {

    _date.setTime(Date.now());
    return _date.getHours();
  }

  // Since a tick is 1s, we get a (_interval * 60) * 1 seconds ticker count
  var _hardSyncTicker = _hardSyncInterval;
  var _softSyncTicker = _softSyncInterval;

  // DO NOT REMOVE THIS:
  runtime.on('update:syncRate:hard', function (rate) {

    _hardSyncInterval = rate >= _hardSyncDefault ? rate : _hardSyncDefault;
    // console.log('hard', _hardSyncInterval);
  });

  runtime.on('update:syncRate:soft', function (rate) {

    _softSyncInterval = rate >= _hardSyncDefault ? rate : _hardSyncDefault;
    // console.log('soft', _softSyncInterval);
  });

  // reset ticker's
  runtime.on('sync:end', function () {

    _softSyncTicker = _softSyncInterval;
    _hardSyncTicker = _hardSyncInterval;
  });

  var _reminderTicker = _reminderInterval;

  var _oldDate = _todaysDate();
  var _oldMinute = _thisMinute();
  var _oldHour = _thisHour();
  var _newDate, _newMinute, _newHour;


  function _tick () {

    // Detect date change & trigger Overdue tasks update
    _newDate = _todaysDate();
    if (_newDate !== _oldDate) {

      runtime.trigger('day:ended');
      _oldDate = _newDate;
    }

    // minute triggers
    _newMinute = _thisMinute();
    if (_newMinute !== _oldMinute) {

      runtime.trigger('time:nextMinute');
      _oldMinute = _newMinute;

      // hourly triggers
      _newHour = _thisHour();
      if (_newHour !== _oldHour) {
        runtime.trigger('time:nextHour');
        _oldHour = _newHour;
      }
    }

    // reminders
    if (--_reminderTicker <= 0){

      runtime.trigger('reminders:check');
      _reminderTicker = _reminderInterval;
    }

    // hard sync
    if (--_hardSyncTicker <= 0) {

      runtime.trigger('sync:tryQueue');
      _hardSyncTicker = _hardSyncInterval;
    }

    // soft sync
    if (--_softSyncTicker <= 0) {

      runtime.trigger('sync:start');
      _softSyncTicker = _softSyncInterval;
    }

    ticker = setTimeout(_tick, _tickRate);
  }

  var isRunning, ticker;
  return WBSingleton.extend({

    'init': function () {
      isRunning = false;
    },

    'isRunning': function () {
      return !!isRunning;
    },

    // Start ticking
    'start': function start() {

      var self = this;
      if (!self.isRunning()) {
        ticker = setTimeout(_tick, _tickRate);
        isRunning = true;
      }
    },

    'stop': function stop() {

      var self = this;
      if (self.isRunning()) {
        clearTimeout(ticker);
        isRunning = false;
      }
    }
  });
});
/*!
 * Pusher JavaScript Library v2.1.1
 * http://pusherapp.com/
 *
 * Copyright 2013, Pusher
 * Released under the MIT licence.
 */

define('vendor/pusher',['wunderbits/global'], function (global, undefined) {

  

  var Pusher = (function() {
    function Pusher(app_key, options) {
      options = options || {};

      var self = this;

      this.key = app_key;
      this.config = Pusher.Util.extend(
        Pusher.getGlobalConfig(),
        options.cluster ? Pusher.getClusterConfig(options.cluster) : {},
        options
      );

      this.channels = new Pusher.Channels();
      this.global_emitter = new Pusher.EventsDispatcher();
      this.sessionID = Math.floor(Math.random() * 1000000000);

      checkAppKey(this.key);

      var getStrategy = function(options) {
        return Pusher.StrategyBuilder.build(
          Pusher.getDefaultStrategy(self.config),
          Pusher.Util.extend({}, self.config, options)
        );
      };
      var getTimeline = function() {
        return new Pusher.Timeline(self.key, self.sessionID, {
          features: Pusher.Util.getClientFeatures(),
          params: self.config.timelineParams || {},
          limit: 50,
          level: Pusher.Timeline.INFO,
          version: Pusher.VERSION
        });
      };
      var getTimelineSender = function(timeline, options) {
        if (self.config.disableStats) {
          return null;
        }
        return new Pusher.TimelineSender(timeline, {
          encrypted: self.isEncrypted() || !!options.encrypted,
          host: self.config.statsHost,
          path: "/timeline"
        });
      };

      this.connection = new Pusher.ConnectionManager(
        this.key,
        Pusher.Util.extend(
          { getStrategy: getStrategy,
            getTimeline: getTimeline,
            getTimelineSender: getTimelineSender,
            activityTimeout: this.config.activity_timeout,
            pongTimeout: this.config.pong_timeout,
            unavailableTimeout: this.config.unavailable_timeout
          },
          this.config,
          { encrypted: this.isEncrypted() }
        )
      );

      this.connection.bind('connected', function() {
        self.subscribeAll();
      });
      this.connection.bind('message', function(params) {
        var internal = (params.event.indexOf('pusher_internal:') === 0);
        if (params.channel) {
          var channel = self.channel(params.channel);
          if (channel) {
            channel.handleEvent(params.event, params.data);
          }
        }
        // Emit globaly [deprecated]
        if (!internal) {
          self.global_emitter.emit(params.event, params.data);
        }
      });
      this.connection.bind('disconnected', function() {
        self.channels.disconnect();
      });
      this.connection.bind('error', function(err) {
        Pusher.warn('Error', err);
      });

      Pusher.instances.push(this);

      if (Pusher.isReady) {
        self.connect();
      }
    }
    var prototype = Pusher.prototype;

    Pusher.instances = [];
    Pusher.isReady = false;

    // To receive log output provide a Pusher.log function, for example
    // Pusher.log = function(m){console.log(m)}
    Pusher.debug = function() {
      if (!Pusher.log) {
        return;
      }
      Pusher.log(Pusher.Util.stringify.apply(this, arguments));
    };

    Pusher.warn = function() {
      var message = Pusher.Util.stringify.apply(this, arguments);
      if (global.console) {
        if (global.console.warn) {
          global.console.warn(message);
        } else if (global.console.log) {
          global.console.log(message);
        }
      }
      if (Pusher.log) {
        Pusher.log(message);
      }
    };

    Pusher.ready = function() {
      Pusher.isReady = true;
      for (var i = 0, l = Pusher.instances.length; i < l; i++) {
        Pusher.instances[i].connect();
      }
    };

    prototype.channel = function(name) {
      return this.channels.find(name);
    };

    prototype.connect = function() {
      this.connection.connect();
    };

    prototype.disconnect = function() {
      this.connection.disconnect();
    };

    prototype.bind = function(event_name, callback) {
      this.global_emitter.bind(event_name, callback);
      return this;
    };

    prototype.bind_all = function(callback) {
      this.global_emitter.bind_all(callback);
      return this;
    };

    prototype.subscribeAll = function() {
      var channelName;
      for (channelName in this.channels.channels) {
        if (this.channels.channels.hasOwnProperty(channelName)) {
          this.subscribe(channelName);
        }
      }
    };

    prototype.subscribe = function(channel_name) {
      var self = this;
      var channel = this.channels.add(channel_name, this);

      if (this.connection.state === 'connected') {
        channel.authorize(this.connection.socket_id, function(err, data) {
          if (err) {
            channel.handleEvent('pusher:subscription_error', data);
          } else {
            self.send_event('pusher:subscribe', {
              channel: channel_name,
              auth: data.auth,
              channel_data: data.channel_data
            });
          }
        });
      }
      return channel;
    };

    prototype.unsubscribe = function(channel_name) {
      this.channels.remove(channel_name);
      if (this.connection.state === 'connected') {
        this.send_event('pusher:unsubscribe', {
          channel: channel_name
        });
      }
    };

    prototype.send_event = function(event_name, data, channel) {
      return this.connection.send_event(event_name, data, channel);
    };

    prototype.isEncrypted = function() {
      if (Pusher.Util.getDocumentLocation().protocol === "https:") {
        return true;
      } else {
        return !!this.config.encrypted;
      }
    };

    function checkAppKey(key) {
      if (key === null || key === undefined) {
        Pusher.warn(
          'Warning', 'You must pass your app key when you instantiate Pusher.'
        );
      }
    }

    return Pusher;
  }).call();

  (function() {
    Pusher.Util = {
      now: function() {
        if (Date.now) {
          return Date.now();
        } else {
          return new Date().valueOf();
        }
      },

      /** Merges multiple objects into the target argument.
       *
       * For properties that are plain Objects, performs a deep-merge. For the
       * rest it just copies the value of the property.
       *
       * To extend prototypes use it as following:
       *   Pusher.Util.extend(Target.prototype, Base.prototype)
       *
       * You can also use it to merge objects without altering them:
       *   Pusher.Util.extend({}, object1, object2)
       *
       * @param  {Object} target
       * @return {Object} the target argument
       */
      extend: function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var extensions = arguments[i];
          for (var property in extensions) {
            if (extensions[property] && extensions[property].constructor &&
                extensions[property].constructor === Object) {
              target[property] = Pusher.Util.extend(
                target[property] || {}, extensions[property]
              );
            } else {
              target[property] = extensions[property];
            }
          }
        }
        return target;
      },

      stringify: function() {
        var m = ["Pusher"];
        for (var i = 0; i < arguments.length; i++) {
          if (typeof arguments[i] === "string") {
            m.push(arguments[i]);
          } else {
            if (global.JSON === undefined) {
              m.push(arguments[i].toString());
            } else {
              m.push(JSON.stringify(arguments[i]));
            }
          }
        }
        return m.join(" : ");
      },

      arrayIndexOf: function(array, item) { // MSIE doesn't have array.indexOf
        var nativeIndexOf = Array.prototype.indexOf;
        if (array === null) {
          return -1;
        }
        if (nativeIndexOf && array.indexOf === nativeIndexOf) {
          return array.indexOf(item);
        }
        for (var i = 0, l = array.length; i < l; i++) {
          if (array[i] === item) {
            return i;
          }
        }
        return -1;
      },

      keys: function(object) {
        var result = [];
        for (var key in object) {
          if (Object.prototype.hasOwnProperty.call(object, key)) {
            result.push(key);
          }
        }
        return result;
      },

      /** Applies a function f to all elements of an array.
       *
       * Function f gets 3 arguments passed:
       * - element from the array
       * - index of the element
       * - reference to the array
       *
       * @param {Array} array
       * @param {Function} f
       */
      apply: function(array, f) {
        for (var i = 0; i < array.length; i++) {
          f(array[i], i, array);
        }
      },

      /** Applies a function f to all properties of an object.
       *
       * Function f gets 3 arguments passed:
       * - element from the object
       * - key of the element
       * - reference to the object
       *
       * @param {Object} object
       * @param {Function} f
       */
      objectApply: function(object, f) {
        for (var key in object) {
          if (Object.prototype.hasOwnProperty.call(object, key)) {
            f(object[key], key, object);
          }
        }
      },

      /** Maps all elements of the array and returns the result.
       *
       * Function f gets 4 arguments passed:
       * - element from the array
       * - index of the element
       * - reference to the source array
       * - reference to the destination array
       *
       * @param {Array} array
       * @param {Function} f
       */
      map: function(array, f) {
        var result = [];
        for (var i = 0; i < array.length; i++) {
          result.push(f(array[i], i, array, result));
        }
        return result;
      },

      /** Maps all elements of the object and returns the result.
       *
       * Function f gets 4 arguments passed:
       * - element from the object
       * - key of the element
       * - reference to the source object
       * - reference to the destination object
       *
       * @param {Object} object
       * @param {Function} f
       */
      mapObject: function(object, f) {
        var result = {};
        for (var key in object) {
          if (Object.prototype.hasOwnProperty.call(object, key)) {
            result[key] = f(object[key]);
          }
        }
        return result;
      },

      /** Filters elements of the array using a test function.
       *
       * Function test gets 4 arguments passed:
       * - element from the array
       * - index of the element
       * - reference to the source array
       * - reference to the destination array
       *
       * @param {Array} array
       * @param {Function} f
       */
      filter: function(array, test) {
        test = test || function(value) { return !!value; };

        var result = [];
        for (var i = 0; i < array.length; i++) {
          if (test(array[i], i, array, result)) {
            result.push(array[i]);
          }
        }
        return result;
      },

      /** Filters properties of the object using a test function.
       *
       * Function test gets 4 arguments passed:
       * - element from the object
       * - key of the element
       * - reference to the source object
       * - reference to the destination object
       *
       * @param {Object} object
       * @param {Function} f
       */
      filterObject: function(object, test) {
        test = test || function(value) { return !!value; };

        var result = {};
        for (var key in object) {
          if (Object.prototype.hasOwnProperty.call(object, key)) {
            if (test(object[key], key, object, result)) {
              result[key] = object[key];
            }
          }
        }
        return result;
      },

      /** Flattens an object into a two-dimensional array.
       *
       * @param  {Object} object
       * @return {Array} resulting array of [key, value] pairs
       */
      flatten: function(object) {
        var result = [];
        for (var key in object) {
          if (Object.prototype.hasOwnProperty.call(object, key)) {
            result.push([key, object[key]]);
          }
        }
        return result;
      },

      /** Checks whether any element of the array passes the test.
       *
       * Function test gets 3 arguments passed:
       * - element from the array
       * - index of the element
       * - reference to the source array
       *
       * @param {Array} array
       * @param {Function} f
       */
      any: function(array, test) {
        for (var i = 0; i < array.length; i++) {
          if (test(array[i], i, array)) {
            return true;
          }
        }
        return false;
      },

      /** Checks whether all elements of the array pass the test.
       *
       * Function test gets 3 arguments passed:
       * - element from the array
       * - index of the element
       * - reference to the source array
       *
       * @param {Array} array
       * @param {Function} f
       */
      all: function(array, test) {
        for (var i = 0; i < array.length; i++) {
          if (!test(array[i], i, array)) {
            return false;
          }
        }
        return true;
      },

      /** Builds a function that will proxy a method call to its first argument.
       *
       * Allows partial application of arguments, so additional arguments are
       * prepended to the argument list.
       *
       * @param  {String} name method name
       * @return {Function} proxy function
       */
      method: function(name) {
        var boundArguments = Array.prototype.slice.call(arguments, 1);
        return function(object) {
          return object[name].apply(object, boundArguments.concat(arguments));
        };
      },

      getDocument: function() {
        return document;
      },

      getDocumentLocation: function() {
        return Pusher.Util.getDocument().location;
      },

      getLocalStorage: function() {
        return undefined;
      },

      getClientFeatures: function() {
        return Pusher.Util.keys(
          Pusher.Util.filterObject(
            { "ws": Pusher.WSTransport, "flash": Pusher.FlashTransport },
            function (t) { return t.isSupported(); }
          )
        );
      }
    };
  }).call(global);

  (function() {
    Pusher.VERSION = '2.1.1';
    Pusher.PROTOCOL = 6;

    // DEPRECATED: WS connection parameters
    Pusher.host = 'ws.pusherapp.com';
    Pusher.ws_port = 80;
    Pusher.wss_port = 443;
    // DEPRECATED: SockJS fallback parameters
    Pusher.sockjs_host = 'sockjs.pusher.com';
    Pusher.sockjs_http_port = 80;
    Pusher.sockjs_https_port = 443;
    Pusher.sockjs_path = "/pusher";
    // DEPRECATED: Stats
    Pusher.stats_host = 'stats.pusher.com';
    // DEPRECATED: Other settings
    Pusher.channel_auth_endpoint = '/pusher/auth';
    Pusher.channel_auth_transport = 'ajax';
    Pusher.activity_timeout = 120000;
    Pusher.pong_timeout = 30000;
    Pusher.unavailable_timeout = 10000;
    // CDN configuration
    Pusher.cdn_http = 'http://js.pusher.com/';
    Pusher.cdn_https = 'https://d3dy5gmtp8yhk7.cloudfront.net/';
    Pusher.dependency_suffix = '';

    Pusher.getDefaultStrategy = function(config) {
      return [
        [":def", "ws_options", {
          hostUnencrypted: config.wsHost + ":" + config.wsPort,
          hostEncrypted: config.wsHost + ":" + config.wssPort
        }],
        [":def", "sockjs_options", {
          hostUnencrypted: config.httpHost + ":" + config.httpPort,
          hostEncrypted: config.httpHost + ":" + config.httpsPort
        }],
        [":def", "timeouts", {
          loop: true,
          timeout: 15000,
          timeoutLimit: 60000
        }],

        [":def", "ws_manager", [":transport_manager", {
          lives: 2,
          minPingDelay: 10000,
          maxPingDelay: config.activity_timeout
        }]],

        [":def_transport", "ws", "ws", 3, ":ws_options", ":ws_manager"],
        [":def_transport", "flash", "flash", 2, ":ws_options", ":ws_manager"],
        [":def_transport", "sockjs", "sockjs", 1, ":sockjs_options"],
        [":def", "ws_loop", [":sequential", ":timeouts", ":ws"]],
        [":def", "flash_loop", [":sequential", ":timeouts", ":flash"]],
        [":def", "sockjs_loop", [":sequential", ":timeouts", ":sockjs"]],

        [":def", "strategy",
          [":cached", 1800000,
            [":first_connected",
              [":if", [":is_supported", ":ws"], [
                  ":best_connected_ever", ":ws_loop", [":delayed", 2000, [":sockjs_loop"]]
                ], [":if", [":is_supported", ":flash"], [
                  ":best_connected_ever", ":flash_loop", [":delayed", 2000, [":sockjs_loop"]]
                ], [
                  ":sockjs_loop"
                ]
              ]]
            ]
          ]
        ]
      ];
    };
  }).call(global);

  (function() {
    Pusher.getGlobalConfig = function() {
      return {
        wsHost: Pusher.host,
        wsPort: Pusher.ws_port,
        wssPort: Pusher.wss_port,
        httpHost: Pusher.sockjs_host,
        httpPort: Pusher.sockjs_http_port,
        httpsPort: Pusher.sockjs_https_port,
        httpPath: Pusher.sockjs_path,
        statsHost: Pusher.stats_host,
        authEndpoint: Pusher.channel_auth_endpoint,
        authTransport: Pusher.channel_auth_transport,
        // TODO make this consistent with other options in next major version
        activity_timeout: Pusher.activity_timeout,
        pong_timeout: Pusher.pong_timeout,
        unavailable_timeout: Pusher.unavailable_timeout
      };
    };

    Pusher.getClusterConfig = function(clusterName) {
      return {
        wsHost: "ws-" + clusterName + ".pusher.com",
        httpHost: "sockjs-" + clusterName + ".pusher.com"
      };
    };
  }).call(global);

  (function() {
    function buildExceptionClass(name) {
      var klass = function(message) {
        Error.call(this, message);
        this.name = name;
      };
      Pusher.Util.extend(klass.prototype, Error.prototype);

      return klass;
    }

    /** Error classes used throughout pusher-js library. */
    Pusher.Errors = {
      UnsupportedTransport: buildExceptionClass("UnsupportedTransport"),
      UnsupportedStrategy: buildExceptionClass("UnsupportedStrategy"),
      TransportPriorityTooLow: buildExceptionClass("TransportPriorityTooLow"),
      TransportClosed: buildExceptionClass("TransportClosed")
    };
  }).call(global);

  (function() {
    /** Manages callback bindings and event emitting.
     *
     * @param Function failThrough called when no listeners are bound to an event
     */
    function EventsDispatcher(failThrough) {
      this.callbacks = new CallbackRegistry();
      this.global_callbacks = [];
      this.failThrough = failThrough;
    }
    var prototype = EventsDispatcher.prototype;

    prototype.bind = function(eventName, callback) {
      this.callbacks.add(eventName, callback);
      return this;
    };

    prototype.bind_all = function(callback) {
      this.global_callbacks.push(callback);
      return this;
    };

    prototype.unbind = function(eventName, callback) {
      this.callbacks.remove(eventName, callback);
      return this;
    };

    prototype.emit = function(eventName, data) {
      var i;

      for (i = 0; i < this.global_callbacks.length; i++) {
        this.global_callbacks[i](eventName, data);
      }

      var callbacks = this.callbacks.get(eventName);
      if (callbacks && callbacks.length > 0) {
        for (i = 0; i < callbacks.length; i++) {
          callbacks[i](data);
        }
      } else if (this.failThrough) {
        this.failThrough(eventName, data);
      }

      return this;
    };

    /** Callback registry helper. */

    function CallbackRegistry() {
      this._callbacks = {};
    }

    CallbackRegistry.prototype.get = function(eventName) {
      return this._callbacks[this._prefix(eventName)];
    };

    CallbackRegistry.prototype.add = function(eventName, callback) {
      var prefixedEventName = this._prefix(eventName);
      this._callbacks[prefixedEventName] = this._callbacks[prefixedEventName] || [];
      this._callbacks[prefixedEventName].push(callback);
    };

    CallbackRegistry.prototype.remove = function(eventName, callback) {
      if(this.get(eventName)) {
        var index = Pusher.Util.arrayIndexOf(this.get(eventName), callback);
        if (index !== -1){
          var callbacksCopy = this._callbacks[this._prefix(eventName)].slice(0);
          callbacksCopy.splice(index, 1);
          this._callbacks[this._prefix(eventName)] = callbacksCopy;
        }
      }
    };

    CallbackRegistry.prototype._prefix = function(eventName) {
      return "_" + eventName;
    };

    Pusher.EventsDispatcher = EventsDispatcher;
  }).call(global);

  (function() {
    /** Handles loading dependency files.
     *
     * Options:
     * - cdn_http - url to HTTP CND
     * - cdn_https - url to HTTPS CDN
     * - version - version of pusher-js
     * - suffix - suffix appended to all names of dependency files
     *
     * @param {Object} options
     */
    function DependencyLoader(options) {
      this.options = options;
      this.loading = {};
      this.loaded = {};
    }
    var prototype = DependencyLoader.prototype;

    /** Loads the dependency from CDN.
     *
     * @param  {String} name
     * @param  {Function} callback
     */
    prototype.load = function(name, callback) {
      var self = this;

      if (this.loaded[name]) {
        callback();
        return;
      }

      if (!this.loading[name]) {
        this.loading[name] = [];
      }
      this.loading[name].push(callback);
      if (this.loading[name].length > 1) {
        return;
      }

      require(this.getPath(name), function() {
        for (var i = 0; i < self.loading[name].length; i++) {
          self.loading[name][i]();
        }
        delete self.loading[name];
        self.loaded[name] = true;
      });
    };

    /** Returns a root URL for pusher-js CDN.
     *
     * @returns {String}
     */
    prototype.getRoot = function(options) {
      var cdn;
      var protocol = Pusher.Util.getDocumentLocation().protocol;
      if ((options && options.encrypted) || protocol === "https:") {
        cdn = this.options.cdn_https;
      } else {
        cdn = this.options.cdn_http;
      }
      // make sure there are no double slashes
      return cdn.replace(/\/*$/, "") + "/" + this.options.version;
    };

    /** Returns a full path to a dependency file.
     *
     * @param {String} name
     * @returns {String}
     */
    prototype.getPath = function(name, options) {
      return this.getRoot(options) + '/' + name + this.options.suffix + '.js';
    };

    function handleScriptLoaded(elem, callback) {
      if (Pusher.Util.getDocument().addEventListener) {
        elem.addEventListener('load', callback, false);
      } else {
        elem.attachEvent('onreadystatechange', function () {
          if (elem.readyState === 'loaded' || elem.readyState === 'complete') {
            callback();
          }
        });
      }
    }

    function require(src, callback) {
      var document = Pusher.Util.getDocument();
      var head = document.getElementsByTagName('head')[0];
      var script = document.createElement('script');

      script.setAttribute('src', src);
      script.setAttribute("type","text/javascript");
      script.setAttribute('async', true);

      handleScriptLoaded(script, function() {
        // workaround for an Opera issue
        setTimeout(callback, 0);
      });

      head.appendChild(script);
    }

    Pusher.DependencyLoader = DependencyLoader;
  }).call(global);

  (function() {
    Pusher.Dependencies = new Pusher.DependencyLoader({
      cdn_http: Pusher.cdn_http,
      cdn_https: Pusher.cdn_https,
      version: Pusher.VERSION,
      suffix: Pusher.dependency_suffix
    });

    // Support Firefox versions which prefix WebSocket
    if (!global.WebSocket && global.MozWebSocket) {
      global.WebSocket = global.MozWebSocket;
    }

    function initialize() {
      Pusher.ready();
    }

    // Allows calling a function when the document body is available
    function onDocumentBody(callback) {
      if (document.body) {
        callback();
      } else {
        setTimeout(function() {
          onDocumentBody(callback);
        }, 0);
      }
    }

    function initializeOnDocumentBody() {
      onDocumentBody(initialize);
    }

    initializeOnDocumentBody();
  })();

  (function() {
    /** Cross-browser compatible timer abstraction.
     *
     * @param {Number} delay
     * @param {Function} callback
     */
    function Timer(delay, callback) {
      var self = this;

      this.timeout = setTimeout(function() {
        if (self.timeout !== null) {
          callback();
          self.timeout = null;
        }
      }, delay);
    }
    var prototype = Timer.prototype;

    /** Returns whether the timer is still running.
     *
     * @return {Boolean}
     */
    prototype.isRunning = function() {
      return this.timeout !== null;
    };

    /** Aborts a timer when it's running. */
    prototype.ensureAborted = function() {
      if (this.timeout) {
        clearTimeout(this.timeout);
        this.timeout = null;
      }
    };

    Pusher.Timer = Timer;
  }).call(global);

  (function() {

    var Base64 = {
      encode: function (s) {
        return btoa(utob(s));
      }
    };

    var fromCharCode = String.fromCharCode;

    var b64chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';
    var b64tab = {};

    for (var i = 0, l = b64chars.length; i < l; i++) {
      b64tab[b64chars.charAt(i)] = i;
    }

    var cb_utob = function(c) {
      var cc = c.charCodeAt(0);
      return cc < 0x80 ? c
          : cc < 0x800 ? fromCharCode(0xc0 | (cc >>> 6)) +
                         fromCharCode(0x80 | (cc & 0x3f))
          : fromCharCode(0xe0 | ((cc >>> 12) & 0x0f)) +
            fromCharCode(0x80 | ((cc >>>  6) & 0x3f)) +
            fromCharCode(0x80 | ( cc         & 0x3f));
    };

    var utob = function(u) {
      return u.replace(/[^\x00-\x7F]/g, cb_utob);
    };

    var cb_encode = function(ccc) {
      var padlen = [0, 2, 1][ccc.length % 3];
      var ord = ccc.charCodeAt(0) << 16
        | ((ccc.length > 1 ? ccc.charCodeAt(1) : 0) << 8)
        | ((ccc.length > 2 ? ccc.charCodeAt(2) : 0));
      var chars = [
        b64chars.charAt( ord >>> 18),
        b64chars.charAt((ord >>> 12) & 63),
        padlen >= 2 ? '=' : b64chars.charAt((ord >>> 6) & 63),
        padlen >= 1 ? '=' : b64chars.charAt(ord & 63)
      ];
      return chars.join('');
    };

    global.btoa = global.btoa || function(b) {
      return b.replace(/[\s\S]{1,3}/g, cb_encode);
    };

    Pusher.Base64 = Base64;
  }).call(global);

  (function() {

    function JSONPRequest(options) {
      this.options = options;
    }

    JSONPRequest.send = function(options, callback) {
      var request = new Pusher.JSONPRequest({
        url: options.url,
        receiver: options.receiverName,
        tagPrefix: options.tagPrefix
      });
      var id = options.receiver.register(function(error, result) {
        request.cleanup();
        callback(error, result);
      });

      return request.send(id, options.data, function(error) {
        var callback = options.receiver.unregister(id);
        if (callback) {
          callback(error);
        }
      });
    };

    var prototype = JSONPRequest.prototype;

    prototype.send = function(id, data, callback) {
      if (this.script) {
        return false;
      }

      var tagPrefix = this.options.tagPrefix || "_pusher_jsonp_";

      var params = Pusher.Util.extend(
        {}, data, { receiver: this.options.receiver }
      );
      var query = Pusher.Util.map(
        Pusher.Util.flatten(
          encodeData(
            Pusher.Util.filterObject(params, function(value) {
              return value !== undefined;
            })
          )
        ),
        Pusher.Util.method("join", "=")
      ).join("&");

      var chrome = global.chrome;
      var isChromeApp = !!(chrome && chrome.app && chrome.app.runtime);
      if (isChromeApp) {
        // Dear Pusher, we can't do JSONP in the packaged app
        var url = this.options.url + "/" + id + "?" + query;
        var xhr = new XMLHttpRequest();
        xhr.open('GET', url, true);
        xhr.onreadystatechange = function () {
          var state = xhr.readyState;
          if (state === 4) {
            try {
              var response = xhr.response;
              response = response.replace(/[^\(]*\(/, '[').replace(');', ']');
              response = JSON.parse(response);
              Pusher.JSONP.receive.apply(Pusher.JSONP, response);
            } catch (e) {
              // ignore this
            }
            callback(true);
          }
        };
        xhr.send();
      } else {
        this.script = document.createElement("script");
        this.script.id = tagPrefix + id;
        this.script.src = this.options.url + "/" + id + "?" + query;
        this.script.type = "text/javascript";
        this.script.charset = "UTF-8";
        this.script.onerror = this.script.onload = callback;

        // Opera<11.6 hack for missing onerror callback
        if (this.script.async === undefined && document.attachEvent) {
          if (/opera/i.test(navigator.userAgent)) {
            var receiverName = this.options.receiver || "Pusher.JSONP.receive";
            this.errorScript = document.createElement("script");
            this.errorScript.text = receiverName + "(" + id + ", true);";
            this.script.async = this.errorScript.async = false;
          }
        }

        var self = this;
        this.script.onreadystatechange = function() {
          if (self.script && /loaded|complete/.test(self.script.readyState)) {
            callback(true);
          }
        };

        var head = document.getElementsByTagName('head')[0];
        head.insertBefore(this.script, head.firstChild);
        if (this.errorScript) {
          head.insertBefore(this.errorScript, this.script.nextSibling);
        }
      }

      return true;
    };

    prototype.cleanup = function() {
      if (this.script && this.script.parentNode) {
        this.script.parentNode.removeChild(this.script);
        this.script = null;
      }
      if (this.errorScript && this.errorScript.parentNode) {
        this.errorScript.parentNode.removeChild(this.errorScript);
        this.errorScript = null;
      }
    };

    function encodeData(data) {
      return Pusher.Util.mapObject(data, function(value) {
        if (typeof value === "object") {
          value = JSON.stringify(value);
        }
        return encodeURIComponent(Pusher.Base64.encode(value.toString()));
      });
    }

    Pusher.JSONPRequest = JSONPRequest;
  }).call(global);

  (function() {

    function JSONPReceiver() {
      this.lastId = 0;
      this.callbacks = {};
    }

    var prototype = JSONPReceiver.prototype;

    prototype.register = function(callback) {
      this.lastId++;
      var id = this.lastId;
      this.callbacks[id] = callback;
      return id;
    };

    prototype.unregister = function(id) {
      if (this.callbacks[id]) {
        var callback = this.callbacks[id];
        delete this.callbacks[id];
        return callback;
      } else {
        return null;
      }
    };

    prototype.receive = function(id, error, data) {
      var callback = this.unregister(id);
      if (callback) {
        callback(error, data);
      }
    };

    Pusher.JSONPReceiver = JSONPReceiver;
    Pusher.JSONP = new JSONPReceiver();
  }).call(global);

  (function() {
    function Timeline(key, session, options) {
      this.key = key;
      this.session = session;
      this.events = [];
      this.options = options || {};
      this.sent = 0;
      this.uniqueID = 0;
    }
    var prototype = Timeline.prototype;

    // Log levels
    Timeline.ERROR = 3;
    Timeline.INFO = 6;
    Timeline.DEBUG = 7;

    prototype.log = function(level, event) {
      if (this.options.level === undefined || level <= this.options.level) {
        this.events.push(
          Pusher.Util.extend({}, event, {
            timestamp: Pusher.Util.now(),
            level: level
          })
        );
        if (this.options.limit && this.events.length > this.options.limit) {
          this.events.shift();
        }
      }
    };

    prototype.error = function(event) {
      this.log(Timeline.ERROR, event);
    };

    prototype.info = function(event) {
      this.log(Timeline.INFO, event);
    };

    prototype.debug = function(event) {
      this.log(Timeline.DEBUG, event);
    };

    prototype.isEmpty = function() {
      return this.events.length === 0;
    };

    prototype.send = function(sendJSONP, callback) {
      var self = this;

      var data = {};
      if (this.sent === 0) {
        data = Pusher.Util.extend({
          key: this.key,
          features: this.options.features,
          version: this.options.version
        }, this.options.params || {});
      }
      data.session = this.session;
      data.timeline = this.events;
      data = Pusher.Util.filterObject(data, function(v) {
        return v !== undefined;
      });

      this.events = [];
      sendJSONP(data, function(error, result) {
        if (!error) {
          self.sent++;
        }
        callback(error, result);
      });

      return true;
    };

    prototype.generateUniqueID = function() {
      this.uniqueID++;
      return this.uniqueID;
    };

    Pusher.Timeline = Timeline;
  }).call(global);

  (function() {
    function TimelineSender(timeline, options) {
      this.timeline = timeline;
      this.options = options || {};
    }
    var prototype = TimelineSender.prototype;

    prototype.send = function(callback) {
      if (this.timeline.isEmpty()) {
        return;
      }

      var options = this.options;
      var scheme = "http" + (this.isEncrypted() ? "s" : "") + "://";

      var sendJSONP = function(data, callback) {
        return Pusher.JSONPRequest.send({
          data: data,
          url: scheme + options.host + options.path,
          receiver: Pusher.JSONP
        }, callback);
      };
      this.timeline.send(sendJSONP, callback);
    };

    prototype.isEncrypted = function() {
      return !!this.options.encrypted;
    };

    Pusher.TimelineSender = TimelineSender;
  }).call(global);

  (function() {
    /** Launches all substrategies and emits prioritized connected transports.
     *
     * @param {Array} strategies
     */
    function BestConnectedEverStrategy(strategies) {
      this.strategies = strategies;
    }
    var prototype = BestConnectedEverStrategy.prototype;

    prototype.isSupported = function() {
      return Pusher.Util.any(this.strategies, Pusher.Util.method("isSupported"));
    };

    prototype.connect = function(minPriority, callback) {
      return connect(this.strategies, minPriority, function(i, runners) {
        return function(error, handshake) {
          runners[i].error = error;
          if (error) {
            if (allRunnersFailed(runners)) {
              callback(true);
            }
            return;
          }
          Pusher.Util.apply(runners, function(runner) {
            runner.forceMinPriority(handshake.transport.priority);
          });
          callback(null, handshake);
        };
      });
    };

    /** Connects to all strategies in parallel.
     *
     * Callback builder should be a function that takes two arguments: index
     * and a list of runners. It should return another function that will be
     * passed to the substrategy with given index. Runners can be aborted using
     * abortRunner(s) functions from this class.
     *
     * @param  {Array} strategies
     * @param  {Function} callbackBuilder
     * @return {Object} strategy runner
     */
    function connect(strategies, minPriority, callbackBuilder) {
      var runners = Pusher.Util.map(strategies, function(strategy, i, _, rs) {
        return strategy.connect(minPriority, callbackBuilder(i, rs));
      });
      return {
        abort: function() {
          Pusher.Util.apply(runners, abortRunner);
        },
        forceMinPriority: function(p) {
          Pusher.Util.apply(runners, function(runner) {
            runner.forceMinPriority(p);
          });
        }
      };
    }

    function allRunnersFailed(runners) {
      return Pusher.Util.all(runners, function(runner) {
        return Boolean(runner.error);
      });
    }

    function abortRunner(runner) {
      if (!runner.error && !runner.aborted) {
        runner.abort();
        runner.aborted = true;
      }
    }

    Pusher.BestConnectedEverStrategy = BestConnectedEverStrategy;
  }).call(global);

  (function() {
    /** Caches last successful transport and uses it for following attempts.
     *
     * @param {Strategy} strategy
     * @param {Object} transports
     * @param {Object} options
     */
    function CachedStrategy(strategy, transports, options) {
      this.strategy = strategy;
      this.transports = transports;
      this.ttl = options.ttl || 1800*1000;
      this.timeline = options.timeline;
    }
    var prototype = CachedStrategy.prototype;

    prototype.isSupported = function() {
      return this.strategy.isSupported();
    };

    prototype.connect = function(minPriority, callback) {
      var info = fetchTransportInfo();

      var strategies = [this.strategy];
      if (info && info.timestamp + this.ttl >= Pusher.Util.now()) {
        var transport = this.transports[info.transport];
        if (transport) {
          this.timeline.info({ cached: true, transport: info.transport });
          strategies.push(new Pusher.SequentialStrategy([transport], {
            timeout: info.latency * 2,
            failFast: true
          }));
        }
      }

      var startTimestamp = Pusher.Util.now();
      var runner = strategies.pop().connect(
        minPriority,
        function cb(error, handshake) {
          if (error) {
            flushTransportInfo();
            if (strategies.length > 0) {
              startTimestamp = Pusher.Util.now();
              runner = strategies.pop().connect(minPriority, cb);
            } else {
              callback(error);
            }
          } else {
            var latency = Pusher.Util.now() - startTimestamp;
            storeTransportInfo(handshake.transport.name, latency);
            callback(null, handshake);
          }
        }
      );

      return {
        abort: function() {
          runner.abort();
        },
        forceMinPriority: function(p) {
          minPriority = p;
          if (runner) {
            runner.forceMinPriority(p);
          }
        }
      };
    };

    function fetchTransportInfo() {
      var storage = Pusher.Util.getLocalStorage();
      if (storage) {
        var info = storage.pusherTransport;
        if (info) {
          return JSON.parse(storage.pusherTransport);
        }
      }
      return null;
    }

    function storeTransportInfo(transport, latency) {
      var storage = Pusher.Util.getLocalStorage();
      if (storage) {
        try {
          storage.pusherTransport = JSON.stringify({
            timestamp: Pusher.Util.now(),
            transport: transport,
            latency: latency
          });
        } catch(e) {
          // catch over quota exceptions raised by localStorage
        }
      }
    }

    function flushTransportInfo() {
      var storage = Pusher.Util.getLocalStorage();
      if (storage && storage.pusherTransport) {
        try {
          delete storage.pusherTransport;
        } catch(e) {
          storage.pusherTransport = undefined;
        }
      }
    }

    Pusher.CachedStrategy = CachedStrategy;
  }).call(global);

  (function() {
    /** Runs substrategy after specified delay.
     *
     * Options:
     * - delay - time in miliseconds to delay the substrategy attempt
     *
     * @param {Strategy} strategy
     * @param {Object} options
     */
    function DelayedStrategy(strategy, options) {
      this.strategy = strategy;
      this.options = { delay: options.delay };
    }
    var prototype = DelayedStrategy.prototype;

    prototype.isSupported = function() {
      return this.strategy.isSupported();
    };

    prototype.connect = function(minPriority, callback) {
      var strategy = this.strategy;
      var runner;
      var timer = new Pusher.Timer(this.options.delay, function() {
        runner = strategy.connect(minPriority, callback);
      });

      return {
        abort: function() {
          timer.ensureAborted();
          if (runner) {
            runner.abort();
          }
        },
        forceMinPriority: function(p) {
          minPriority = p;
          if (runner) {
            runner.forceMinPriority(p);
          }
        }
      };
    };

    Pusher.DelayedStrategy = DelayedStrategy;
  }).call(global);

  (function() {
    /** Launches the substrategy and terminates on the first open connection.
     *
     * @param {Strategy} strategy
     */
    function FirstConnectedStrategy(strategy) {
      this.strategy = strategy;
    }
    var prototype = FirstConnectedStrategy.prototype;

    prototype.isSupported = function() {
      return this.strategy.isSupported();
    };

    prototype.connect = function(minPriority, callback) {
      var runner = this.strategy.connect(
        minPriority,
        function(error, handshake) {
          if (handshake) {
            runner.abort();
          }
          callback(error, handshake);
        }
      );
      return runner;
    };

    Pusher.FirstConnectedStrategy = FirstConnectedStrategy;
  }).call(global);

  (function() {
    /** Proxies method calls to one of substrategies basing on the test function.
     *
     * @param {Function} test
     * @param {Strategy} trueBranch strategy used when test returns true
     * @param {Strategy} falseBranch strategy used when test returns false
     */
    function IfStrategy(test, trueBranch, falseBranch) {
      this.test = test;
      this.trueBranch = trueBranch;
      this.falseBranch = falseBranch;
    }
    var prototype = IfStrategy.prototype;

    prototype.isSupported = function() {
      var branch = this.test() ? this.trueBranch : this.falseBranch;
      return branch.isSupported();
    };

    prototype.connect = function(minPriority, callback) {
      var branch = this.test() ? this.trueBranch : this.falseBranch;
      return branch.connect(minPriority, callback);
    };

    Pusher.IfStrategy = IfStrategy;
  }).call(global);

  (function() {
    /** Loops through strategies with optional timeouts.
     *
     * Options:
     * - loop - whether it should loop through the substrategy list
     * - timeout - initial timeout for a single substrategy
     * - timeoutLimit - maximum timeout
     *
     * @param {Strategy[]} strategies
     * @param {Object} options
     */
    function SequentialStrategy(strategies, options) {
      this.strategies = strategies;
      this.loop = Boolean(options.loop);
      this.failFast = Boolean(options.failFast);
      this.timeout = options.timeout;
      this.timeoutLimit = options.timeoutLimit;
    }
    var prototype = SequentialStrategy.prototype;

    prototype.isSupported = function() {
      return Pusher.Util.any(this.strategies, Pusher.Util.method("isSupported"));
    };

    prototype.connect = function(minPriority, callback) {
      var self = this;

      var strategies = this.strategies;
      var current = 0;
      var timeout = this.timeout;
      var runner = null;

      var tryNextStrategy = function(error, handshake) {
        if (handshake) {
          callback(null, handshake);
        } else {
          current = current + 1;
          if (self.loop) {
            current = current % strategies.length;
          }

          if (current < strategies.length) {
            if (timeout) {
              timeout = timeout * 2;
              if (self.timeoutLimit) {
                timeout = Math.min(timeout, self.timeoutLimit);
              }
            }
            runner = self.tryStrategy(
              strategies[current],
              minPriority,
              { timeout: timeout, failFast: self.failFast },
              tryNextStrategy
            );
          } else {
            callback(true);
          }
        }
      };

      runner = this.tryStrategy(
        strategies[current],
        minPriority,
        { timeout: timeout, failFast: this.failFast },
        tryNextStrategy
      );

      return {
        abort: function() {
          runner.abort();
        },
        forceMinPriority: function(p) {
          minPriority = p;
          if (runner) {
            runner.forceMinPriority(p);
          }
        }
      };
    };

    /** @private */
    prototype.tryStrategy = function(strategy, minPriority, options, callback) {
      var timer = null;
      var runner = null;

      runner = strategy.connect(minPriority, function(error, handshake) {
        if (error && timer && timer.isRunning() && !options.failFast) {
          // advance to the next strategy after the timeout
          return;
        }
        if (timer) {
          timer.ensureAborted();
        }
        callback(error, handshake);
      });

      if (options.timeout > 0) {
        timer = new Pusher.Timer(options.timeout, function() {
          runner.abort();
          callback(true);
        });
      }

      return {
        abort: function() {
          if (timer) {
            timer.ensureAborted();
          }
          runner.abort();
        },
        forceMinPriority: function(p) {
          runner.forceMinPriority(p);
        }
      };
    };

    Pusher.SequentialStrategy = SequentialStrategy;
  }).call(global);

  (function() {
    /** Provides a strategy interface for transports.
     *
     * @param {String} name
     * @param {Number} priority
     * @param {Class} transport
     * @param {Object} options
     */
    function TransportStrategy(name, priority, transport, options) {
      this.name = name;
      this.priority = priority;
      this.transport = transport;
      this.options = options || {};
    }
    var prototype = TransportStrategy.prototype;

    /** Returns whether the transport is supported in the browser.
     *
     * @returns {Boolean}
     */
    prototype.isSupported = function() {
      return this.transport.isSupported({
        disableFlash: !!this.options.disableFlash
      });
    };

    /** Launches a connection attempt and returns a strategy runner.
     *
     * @param  {Function} callback
     * @return {Object} strategy runner
     */
    prototype.connect = function(minPriority, callback) {
      if (!this.transport.isSupported()) {
        return failAttempt(new Pusher.Errors.UnsupportedStrategy(), callback);
      } else if (this.priority < minPriority) {
        return failAttempt(new Pusher.Errors.TransportPriorityTooLow(), callback);
      }

      var self = this;
      var connected = false;

      var transport = this.transport.createConnection(
        this.name, this.priority, this.options.key, this.options
      );
      var handshake = null;

      var onInitialized = function() {
        transport.unbind("initialized", onInitialized);
        transport.connect();
      };
      var onOpen = function() {
        handshake = new Pusher.Handshake(transport, function(result) {
          connected = true;
          unbindListeners();
          callback(null, result);
        });
      };
      var onError = function(error) {
        unbindListeners();
        callback(error);
      };
      var onClosed = function() {
        unbindListeners();
        callback(new Pusher.Errors.TransportClosed(transport));
      };

      var unbindListeners = function() {
        transport.unbind("initialized", onInitialized);
        transport.unbind("open", onOpen);
        transport.unbind("error", onError);
        transport.unbind("closed", onClosed);
      };

      transport.bind("initialized", onInitialized);
      transport.bind("open", onOpen);
      transport.bind("error", onError);
      transport.bind("closed", onClosed);

      // connect will be called automatically after initialization
      transport.initialize();

      return {
        abort: function() {
          if (connected) {
            return;
          }
          unbindListeners();
          if (handshake) {
            handshake.close();
          } else {
            transport.close();
          }
        },
        forceMinPriority: function(p) {
          if (connected) {
            return;
          }
          if (self.priority < p) {
            if (handshake) {
              handshake.close();
            } else {
              transport.close();
            }
          }
        }
      };
    };

    function failAttempt(error, callback) {
      new Pusher.Timer(0, function() {
        callback(error);
      });
      return {
        abort: function() {},
        forceMinPriority: function() {}
      };
    }

    Pusher.TransportStrategy = TransportStrategy;
  }).call(global);

  (function() {
    /** Handles common logic for all transports.
     *
     * Transport is a low-level connection object that wraps a connection method
     * and exposes a simple evented interface for the connection state and
     * messaging. It does not implement Pusher-specific WebSocket protocol.
     *
     * Additionally, it fetches resources needed for transport to work and exposes
     * an interface for querying transport support and its features.
     *
     * This is an abstract class, please do not instantiate it.
     *
     * States:
     * - new - initial state after constructing the object
     * - initializing - during initialization phase, usually fetching resources
     * - intialized - ready to establish a connection
     * - connection - when connection is being established
     * - open - when connection ready to be used
     * - closed - after connection was closed be either side
     *
     * Emits:
     * - error - after the connection raised an error
     *
     * Options:
     * - encrypted - whether connection should use ssl
     * - hostEncrypted - host to connect to when connection is encrypted
     * - hostUnencrypted - host to connect to when connection is not encrypted
     *
     * @param {String} key application key
     * @param {Object} options
     */
    function AbstractTransport(name, priority, key, options) {
      Pusher.EventsDispatcher.call(this);

      this.name = name;
      this.priority = priority;
      this.key = key;
      this.state = "new";
      this.timeline = options.timeline;
      this.id = this.timeline.generateUniqueID();

      this.options = {
        encrypted: Boolean(options.encrypted),
        hostUnencrypted: options.hostUnencrypted,
        hostEncrypted: options.hostEncrypted
      };
    }
    var prototype = AbstractTransport.prototype;
    Pusher.Util.extend(prototype, Pusher.EventsDispatcher.prototype);

    /** Checks whether the transport is supported in the browser.
     *
     * @returns {Boolean}
     */
    AbstractTransport.isSupported = function() {
      return false;
    };

    /** Checks whether the transport handles ping/pong on itself.
     *
     * @return {Boolean}
     */
    prototype.supportsPing = function() {
      return false;
    };

    /** Initializes the transport.
     *
     * Fetches resources if needed and then transitions to initialized.
     */
    prototype.initialize = function() {
      this.timeline.info(this.buildTimelineMessage({
        transport: this.name + (this.options.encrypted ? "s" : "")
      }));
      this.timeline.debug(this.buildTimelineMessage({ method: "initialize" }));

      this.changeState("initialized");
    };

    /** Tries to establish a connection.
     *
     * @returns {Boolean} false if transport is in invalid state
     */
    prototype.connect = function() {
      var url = this.getURL(this.key, this.options);
      this.timeline.debug(this.buildTimelineMessage({
        method: "connect",
        url: url
      }));

      if (this.socket || this.state !== "initialized") {
        return false;
      }

      try {
        this.socket = this.createSocket(url);
      } catch (e) {
        var self = this;
        new Pusher.Timer(0, function() {
          self.onError(e);
          self.changeState("closed");
        });
        return false;
      }

      this.bindListeners();

      Pusher.debug("Connecting", { transport: this.name, url: url });
      this.changeState("connecting");
      return true;
    };

    /** Closes the connection.
     *
     * @return {Boolean} true if there was a connection to close
     */
    prototype.close = function() {
      this.timeline.debug(this.buildTimelineMessage({ method: "close" }));

      if (this.socket) {
        this.socket.close();
        return true;
      } else {
        return false;
      }
    };

    /** Sends data over the open connection.
     *
     * @param {String} data
     * @return {Boolean} true only when in the "open" state
     */
    prototype.send = function(data) {
      this.timeline.debug(this.buildTimelineMessage({
        method: "send",
        data: data
      }));

      if (this.state === "open") {
        // Workaround for MobileSafari bug (see https://gist.github.com/2052006)
        var self = this;
        setTimeout(function() {
          self.socket && self.socket.send(data);
        }, 0);
        return true;
      } else {
        return false;
      }
    };

    prototype.requestPing = function() {
      this.emit("ping_request");
    };

    /** @protected */
    prototype.onOpen = function() {
      this.changeState("open");
      this.socket.onopen = undefined;
    };

    /** @protected */
    prototype.onError = function(error) {
      this.emit("error", { type: 'WebSocketError', error: error });
      this.timeline.error(this.buildTimelineMessage({}));
    };

    /** @protected */
    prototype.onClose = function(closeEvent) {
      if (closeEvent) {
        this.changeState("closed", {
          code: closeEvent.code,
          reason: closeEvent.reason,
          wasClean: closeEvent.wasClean
        });
      } else {
        this.changeState("closed");
      }
      this.socket = undefined;
    };

    /** @protected */
    prototype.onMessage = function(message) {
      this.timeline.debug(this.buildTimelineMessage({ message: message.data }));
      this.emit("message", message);
    };

    /** @protected */
    prototype.bindListeners = function() {
      var self = this;

      this.socket.onopen = function() { self.onOpen(); };
      this.socket.onerror = function(error) { self.onError(error); };
      this.socket.onclose = function(closeEvent) { self.onClose(closeEvent); };
      this.socket.onmessage = function(message) { self.onMessage(message); };
    };

    /** @protected */
    prototype.createSocket = function(url) {
      return null;
    };

    /** @protected */
    prototype.getScheme = function() {
      return this.options.encrypted ? "wss" : "ws";
    };

    /** @protected */
    prototype.getBaseURL = function() {
      var host;
      if (this.options.encrypted) {
        host = this.options.hostEncrypted;
      } else {
        host = this.options.hostUnencrypted;
      }
      return this.getScheme() + "://" + host;
    };

    /** @protected */
    prototype.getPath = function() {
      return "/app/" + this.key;
    };

    /** @protected */
    prototype.getQueryString = function() {
      return "?protocol=" + Pusher.PROTOCOL +
        "&client=js&version=" + Pusher.VERSION;
    };

    /** @protected */
    prototype.getURL = function() {
      return this.getBaseURL() + this.getPath() + this.getQueryString();
    };

    /** @protected */
    prototype.changeState = function(state, params) {
      this.state = state;
      this.timeline.info(this.buildTimelineMessage({
        state: state,
        params: params
      }));
      this.emit(state, params);
    };

    /** @protected */
    prototype.buildTimelineMessage = function(message) {
      return Pusher.Util.extend({ cid: this.id }, message);
    };

    Pusher.AbstractTransport = AbstractTransport;
  }).call(global);

  (function() {
    /** Transport using Flash to emulate WebSockets.
     *
     * @see AbstractTransport
     */
    function FlashTransport(name, priority, key, options) {
      Pusher.AbstractTransport.call(this, name, priority, key, options);
    }
    var prototype = FlashTransport.prototype;
    Pusher.Util.extend(prototype, Pusher.AbstractTransport.prototype);

    /** Creates a new instance of FlashTransport.
     *
     * @param  {String} key
     * @param  {Object} options
     * @return {FlashTransport}
     */
    FlashTransport.createConnection = function(name, priority, key, options) {
      return new FlashTransport(name, priority, key, options);
    };

    /** Checks whether Flash is supported in the browser.
     *
     * It is possible to disable flash by passing an envrionment object with the
     * disableFlash property set to true.
     *
     * @see AbstractTransport.isSupported
     * @param {Object} environment
     * @returns {Boolean}
     */
    FlashTransport.isSupported = function(environment) {
      if (environment && environment.disableFlash) {
        return false;
      }
      try {
        return Boolean(new ActiveXObject('ShockwaveFlash.ShockwaveFlash'));
      } catch (e) {
        return Boolean(
          navigator &&
          navigator.mimeTypes &&
          navigator.mimeTypes["application/x-shockwave-flash"] !== undefined
        );
      }
    };

    /** Fetches flashfallback dependency if needed.
     *
     * Sets WEB_SOCKET_SUPPRESS_CROSS_DOMAIN_SWF_ERROR to true (if not set before)
     * and WEB_SOCKET_SWF_LOCATION to Pusher's cdn before loading Flash resources.
     *
     * @see AbstractTransport.prototype.initialize
     */
    prototype.initialize = function() {
      var self = this;

      this.timeline.info(this.buildTimelineMessage({
        transport: this.name + (this.options.encrypted ? "s" : "")
      }));
      this.timeline.debug(this.buildTimelineMessage({ method: "initialize" }));
      this.changeState("initializing");

      if (global.WEB_SOCKET_SUPPRESS_CROSS_DOMAIN_SWF_ERROR === undefined) {
        global.WEB_SOCKET_SUPPRESS_CROSS_DOMAIN_SWF_ERROR = true;
      }
      global.WEB_SOCKET_SWF_LOCATION = Pusher.Dependencies.getRoot() +
        "/WebSocketMain.swf";
      Pusher.Dependencies.load("flashfallback", function() {
        self.changeState("initialized");
      });
    };

    /** @protected */
    prototype.createSocket = function(url) {
      return new FlashWebSocket(url);
    };

    /** @protected */
    prototype.getQueryString = function() {
      return Pusher.AbstractTransport.prototype.getQueryString.call(this) +
        "&flash=true";
    };

    Pusher.FlashTransport = FlashTransport;
  }).call(global);

  (function() {
    /** Fallback transport using SockJS.
     *
     * @see AbstractTransport
     */
    function SockJSTransport(name, priority, key, options) {
      Pusher.AbstractTransport.call(this, name, priority, key, options);
      this.options.ignoreNullOrigin = options.ignoreNullOrigin;
    }
    var prototype = SockJSTransport.prototype;
    Pusher.Util.extend(prototype, Pusher.AbstractTransport.prototype);

    /** Creates a new instance of SockJSTransport.
     *
     * @param  {String} key
     * @param  {Object} options
     * @return {SockJSTransport}
     */
    SockJSTransport.createConnection = function(name, priority, key, options) {
      return new SockJSTransport(name, priority, key, options);
    };

    /** Assumes that SockJS is always supported.
     *
     * @returns {Boolean} always true
     */
    SockJSTransport.isSupported = function() {
      return true;
    };

    /** Fetches sockjs dependency if needed.
     *
     * @see AbstractTransport.prototype.initialize
     */
    prototype.initialize = function() {
      var self = this;

      this.timeline.info(this.buildTimelineMessage({
        transport: this.name + (this.options.encrypted ? "s" : "")
      }));
      this.timeline.debug(this.buildTimelineMessage({ method: "initialize" }));

      this.changeState("initializing");
      Pusher.Dependencies.load("sockjs", function() {
        self.changeState("initialized");
      });
    };

    /** Always returns true, since SockJS handles ping on its own.
     *
     * @returns {Boolean} always true
     */
    prototype.supportsPing = function() {
      return true;
    };

    /** @protected */
    prototype.createSocket = function(url) {
      return new SockJS(url, null, {
        js_path: Pusher.Dependencies.getPath("sockjs", {
          encrypted: this.options.encrypted
        }),
        ignore_null_origin: this.options.ignoreNullOrigin
      });
    };

    /** @protected */
    prototype.getScheme = function() {
      return this.options.encrypted ? "https" : "http";
    };

    /** @protected */
    prototype.getPath = function() {
      return this.options.httpPath || "/pusher";
    };

    /** @protected */
    prototype.getQueryString = function() {
      return "";
    };

    /** Handles opening a SockJS connection to Pusher.
     *
     * Since SockJS does not handle custom paths, we send it immediately after
     * establishing the connection.
     *
     * @protected
     */
    prototype.onOpen = function() {
      this.socket.send(JSON.stringify({
        path: Pusher.AbstractTransport.prototype.getPath.call(this) +
          Pusher.AbstractTransport.prototype.getQueryString.call(this)
      }));
      this.changeState("open");
      this.socket.onopen = undefined;
    };

    Pusher.SockJSTransport = SockJSTransport;
  }).call(global);

  (function() {
    /** WebSocket transport.
     *
     * @see AbstractTransport
     */
    function WSTransport(name, priority, key, options) {
      Pusher.AbstractTransport.call(this, name, priority, key, options);
    }
    var prototype = WSTransport.prototype;
    Pusher.Util.extend(prototype, Pusher.AbstractTransport.prototype);

    /** Creates a new instance of WSTransport.
     *
     * @param  {String} key
     * @param  {Object} options
     * @return {WSTransport}
     */
    WSTransport.createConnection = function(name, priority, key, options) {
      return new WSTransport(name, priority, key, options);
    };

    /** Checks whether the browser supports WebSockets in any form.
     *
     * @returns {Boolean} true if browser supports WebSockets
     */
    WSTransport.isSupported = function() {
      return global.WebSocket !== undefined || global.MozWebSocket !== undefined;
    };

    /** @protected */
    prototype.createSocket = function(url) {
      var Constructor = global.WebSocket || global.MozWebSocket;
      return new Constructor(url);
    };

    /** @protected */
    prototype.getQueryString = function() {
      return Pusher.AbstractTransport.prototype.getQueryString.call(this) +
        "&flash=false";
    };

    Pusher.WSTransport = WSTransport;
  }).call(global);

  (function() {
    function AssistantToTheTransportManager(manager, transport, options) {
      this.manager = manager;
      this.transport = transport;
      this.minPingDelay = options.minPingDelay;
      this.maxPingDelay = options.maxPingDelay;
      this.pingDelay = null;
    }
    var prototype = AssistantToTheTransportManager.prototype;

    prototype.createConnection = function(name, priority, key, options) {
      var connection = this.transport.createConnection(
        name, priority, key, options
      );

      var self = this;
      var openTimestamp = null;
      var pingTimer = null;

      var onOpen = function() {
        connection.unbind("open", onOpen);

        openTimestamp = Pusher.Util.now();
        if (self.pingDelay) {
          pingTimer = setInterval(function() {
            if (pingTimer) {
              connection.requestPing();
            }
          }, self.pingDelay);
        }

        connection.bind("closed", onClosed);
      };
      var onClosed = function(closeEvent) {
        connection.unbind("closed", onClosed);
        if (pingTimer) {
          clearInterval(pingTimer);
          pingTimer = null;
        }

        if (closeEvent.code === 1002 || closeEvent.code === 1003) {
          // we don't want to use transports not obeying the protocol
          self.manager.reportDeath();
        } else if (!closeEvent.wasClean && openTimestamp) {
          // report deaths only for short-living transport
          var lifespan = Pusher.Util.now() - openTimestamp;
          if (lifespan < 2 * self.maxPingDelay) {
            self.manager.reportDeath();
            self.pingDelay = Math.max(lifespan / 2, self.minPingDelay);
          }
        }
      };

      connection.bind("open", onOpen);
      return connection;
    };

    prototype.isSupported = function(environment) {
      return this.manager.isAlive() && this.transport.isSupported(environment);
    };

    Pusher.AssistantToTheTransportManager = AssistantToTheTransportManager;
  }).call(global);

  (function() {
    function TransportManager(options) {
      this.options = options || {};
      this.livesLeft = this.options.lives || Infinity;
    }
    var prototype = TransportManager.prototype;

    prototype.getAssistant = function(transport) {
      return new Pusher.AssistantToTheTransportManager(this, transport, {
        minPingDelay: this.options.minPingDelay,
        maxPingDelay: this.options.maxPingDelay
      });
    };

    prototype.isAlive = function() {
      return this.livesLeft > 0;
    };

    prototype.reportDeath = function() {
      this.livesLeft -= 1;
    };

    Pusher.TransportManager = TransportManager;
  }).call(global);

  (function() {
    var StrategyBuilder = {
      /** Transforms a JSON scheme to a strategy tree.
       *
       * @param {Array} scheme JSON strategy scheme
       * @param {Object} options a hash of symbols to be included in the scheme
       * @returns {Strategy} strategy tree that's represented by the scheme
       */
      build: function(scheme, options) {
        var context = Pusher.Util.extend({}, globalContext, options);
        return evaluate(scheme, context)[1].strategy;
      }
    };

    var transports = {
      ws: Pusher.WSTransport,
      flash: Pusher.FlashTransport,
      sockjs: Pusher.SockJSTransport
    };

    // DSL bindings

    function returnWithOriginalContext(f) {
      return function(context) {
        return [f.apply(this, arguments), context];
      };
    }

    var globalContext = {
      def: function(context, name, value) {
        if (context[name] !== undefined) {
          throw "Redefining symbol " + name;
        }
        context[name] = value;
        return [undefined, context];
      },

      def_transport: function(context, name, type, priority, options, manager) {
        var transportClass = transports[type];
        if (!transportClass) {
          throw new Pusher.Errors.UnsupportedTransport(type);
        }
        var transportOptions = Pusher.Util.extend({}, {
          key: context.key,
          encrypted: context.encrypted,
          timeline: context.timeline,
          disableFlash: context.disableFlash,
          ignoreNullOrigin: context.ignoreNullOrigin
        }, options);
        if (manager) {
          transportClass = manager.getAssistant(transportClass);
        }
        var transport = new Pusher.TransportStrategy(
          name, priority, transportClass, transportOptions
        );
        var newContext = context.def(context, name, transport)[1];
        newContext.transports = context.transports || {};
        newContext.transports[name] = transport;
        return [undefined, newContext];
      },

      transport_manager: returnWithOriginalContext(function(_, options) {
        return new Pusher.TransportManager(options);
      }),

      sequential: returnWithOriginalContext(function(_, options) {
        var strategies = Array.prototype.slice.call(arguments, 2);
        return new Pusher.SequentialStrategy(strategies, options);
      }),

      cached: returnWithOriginalContext(function(context, ttl, strategy){
        return new Pusher.CachedStrategy(strategy, context.transports, {
          ttl: ttl,
          timeline: context.timeline
        });
      }),

      first_connected: returnWithOriginalContext(function(_, strategy) {
        return new Pusher.FirstConnectedStrategy(strategy);
      }),

      best_connected_ever: returnWithOriginalContext(function() {
        var strategies = Array.prototype.slice.call(arguments, 1);
        return new Pusher.BestConnectedEverStrategy(strategies);
      }),

      delayed: returnWithOriginalContext(function(_, delay, strategy) {
        return new Pusher.DelayedStrategy(strategy, { delay: delay });
      }),

      "if": returnWithOriginalContext(function(_, test, trueBranch, falseBranch) {
        return new Pusher.IfStrategy(test, trueBranch, falseBranch);
      }),

      is_supported: returnWithOriginalContext(function(_, strategy) {
        return function() {
          return strategy.isSupported();
        };
      })
    };

    // DSL interpreter

    function isSymbol(expression) {
      return (typeof expression === "string") && expression.charAt(0) === ":";
    }

    function getSymbolValue(expression, context) {
      return context[expression.slice(1)];
    }

    function evaluateListOfExpressions(expressions, context) {
      if (expressions.length === 0) {
        return [[], context];
      }
      var head = evaluate(expressions[0], context);
      var tail = evaluateListOfExpressions(expressions.slice(1), head[1]);
      return [[head[0]].concat(tail[0]), tail[1]];
    }

    function evaluateString(expression, context) {
      if (!isSymbol(expression)) {
        return [expression, context];
      }
      var value = getSymbolValue(expression, context);
      if (value === undefined) {
        throw "Undefined symbol " + expression;
      }
      return [value, context];
    }

    function evaluateArray(expression, context) {
      if (isSymbol(expression[0])) {
        var f = getSymbolValue(expression[0], context);
        if (expression.length > 1) {
          if (typeof f !== "function") {
            throw "Calling non-function " + expression[0];
          }
          var args = [Pusher.Util.extend({}, context)].concat(
            Pusher.Util.map(expression.slice(1), function(arg) {
              return evaluate(arg, Pusher.Util.extend({}, context))[0];
            })
          );
          return f.apply(this, args);
        } else {
          return [f, context];
        }
      } else {
        return evaluateListOfExpressions(expression, context);
      }
    }

    function evaluate(expression, context) {
      var expressionType = typeof expression;
      if (typeof expression === "string") {
        return evaluateString(expression, context);
      } else if (typeof expression === "object") {
        if (expression instanceof Array && expression.length > 0) {
          return evaluateArray(expression, context);
        }
      }
      return [expression, context];
    }

    Pusher.StrategyBuilder = StrategyBuilder;
  }).call(global);

  (function() {
    /**
     * Provides functions for handling Pusher protocol-specific messages.
     */
    var Protocol = {};

    /**
     * Decodes a message in a Pusher format.
     *
     * Throws errors when messages are not parse'able.
     *
     * @param  {Object} message
     * @return {Object}
     */
    Protocol.decodeMessage = function(message) {
      try {
        var params = JSON.parse(message.data);
        if (typeof params.data === 'string') {
          try {
            params.data = JSON.parse(params.data);
          } catch (e) {
            if (!(e instanceof SyntaxError)) {
              // TODO looks like unreachable code
              // https://developer.mozilla.org/en-US/docs/JavaScript/Reference/Global_Objects/JSON/parse
              throw e;
            }
          }
        }
        return params;
      } catch (e) {
        throw { type: 'MessageParseError', error: e, data: message.data};
      }
    };

    /**
     * Encodes a message to be sent.
     *
     * @param  {Object} message
     * @return {String}
     */
    Protocol.encodeMessage = function(message) {
      return JSON.stringify(message);
    };

    /** Processes a handshake message and returns appropriate actions.
     *
     * Returns an object with an 'action' and other action-specific properties.
     *
     * There are three outcomes when calling this function. First is a successful
     * connection attempt, when pusher:connection_established is received, which
     * results in a 'connected' action with an 'id' property. When passed a
     * pusher:error event, it returns a result with action appropriate to the
     * close code and an error. Otherwise, it raises an exception.
     *
     * @param {String} message
     * @result Object
     */
    Protocol.processHandshake = function(message) {
      message = this.decodeMessage(message);

      if (message.event === "pusher:connection_established") {
        return { action: "connected", id: message.data.socket_id };
      } else if (message.event === "pusher:error") {
        // From protocol 6 close codes are sent only once, so this only
        // happens when connection does not support close codes
        return {
          action: this.getCloseAction(message.data),
          error: this.getCloseError(message.data)
        };
      } else {
        throw "Invalid handshake";
      }
    };

    /**
     * Dispatches the close event and returns an appropriate action name.
     *
     * See:
     * 1. https://developer.mozilla.org/en-US/docs/WebSockets/WebSockets_reference/CloseEvent
     * 2. http://pusher.com/docs/pusher_protocol
     *
     * @param  {CloseEvent} closeEvent
     * @return {String} close action name
     */
    Protocol.getCloseAction = function(closeEvent) {
      if (closeEvent.code < 4000) {
        // ignore 1000 CLOSE_NORMAL, 1001 CLOSE_GOING_AWAY,
        //        1005 CLOSE_NO_STATUS, 1006 CLOSE_ABNORMAL
        // ignore 1007...3999
        // handle 1002 CLOSE_PROTOCOL_ERROR, 1003 CLOSE_UNSUPPORTED,
        //        1004 CLOSE_TOO_LARGE
        if (closeEvent.code >= 1002 && closeEvent.code <= 1004) {
          return "backoff";
        } else {
          return null;
        }
      } else if (closeEvent.code === 4000) {
        return "ssl_only";
      } else if (closeEvent.code < 4100) {
        return "refused";
      } else if (closeEvent.code < 4200) {
        return "backoff";
      } else if (closeEvent.code < 4300) {
        return "retry";
      } else {
        // unknown error
        return "refused";
      }
    };

    /**
     * Returns an error or null basing on the close event.
     *
     * Null is returned when connection was closed cleanly. Otherwise, an object
     * with error details is returned.
     *
     * @param  {CloseEvent} closeEvent
     * @return {Object} error object
     */
    Protocol.getCloseError = function(closeEvent) {
      if (closeEvent.code !== 1000 && closeEvent.code !== 1001) {
        return {
          type: 'PusherError',
          data: {
            code: closeEvent.code,
            message: closeEvent.reason || closeEvent.message
          }
        };
      } else {
        return null;
      }
    };

    Pusher.Protocol = Protocol;
  }).call(global);

  (function() {
    /**
     * Provides Pusher protocol interface for transports.
     *
     * Emits following events:
     * - message - on received messages
     * - ping - on ping requests
     * - pong - on pong responses
     * - error - when the transport emits an error
     * - closed - after closing the transport
     *
     * It also emits more events when connection closes with a code.
     * See Protocol.getCloseAction to get more details.
     *
     * @param {Number} id
     * @param {AbstractTransport} transport
     */
    function Connection(id, transport) {
      Pusher.EventsDispatcher.call(this);

      this.id = id;
      this.transport = transport;
      this.bindListeners();
    }
    var prototype = Connection.prototype;
    Pusher.Util.extend(prototype, Pusher.EventsDispatcher.prototype);

    /** Returns whether used transport handles ping/pong by itself
     *
     * @returns {Boolean} true if ping is handled by the transport
     */
    prototype.supportsPing = function() {
      return this.transport.supportsPing();
    };

    /** Sends raw data.
     *
     * @param {String} data
     */
    prototype.send = function(data) {
      return this.transport.send(data);
    };

    /** Sends an event.
     *
     * @param {String} name
     * @param {String} data
     * @param {String} [channel]
     * @returns {Boolean} whether message was sent or not
     */
    prototype.send_event = function(name, data, channel) {
      var message = { event: name, data: data };
      if (channel) {
        message.channel = channel;
      }
      Pusher.debug('Event sent', message);
      return this.send(Pusher.Protocol.encodeMessage(message));
    };

    /** Closes the connection. */
    prototype.close = function() {
      this.transport.close();
    };

    /** @private */
    prototype.bindListeners = function() {
      var self = this;

      var onMessage = function(m) {
        var message;
        try {
          message = Pusher.Protocol.decodeMessage(m);
        } catch(e) {
          self.emit('error', {
            type: 'MessageParseError',
            error: e,
            data: m.data
          });
        }

        if (message !== undefined) {
          Pusher.debug('Event recd', message);

          switch (message.event) {
            case 'pusher:error':
              self.emit('error', { type: 'PusherError', data: message.data });
              break;
            case 'pusher:ping':
              self.emit("ping");
              break;
            case 'pusher:pong':
              self.emit("pong");
              break;
          }
          self.emit('message', message);
        }
      };
      var onPingRequest = function() {
        self.emit("ping_request");
      };
      var onError = function(error) {
        self.emit("error", { type: "WebSocketError", error: error });
      };
      var onClosed = function(closeEvent) {
        unbindListeners();

        if (closeEvent && closeEvent.code) {
          self.handleCloseEvent(closeEvent);
        }

        self.transport = null;
        self.emit("closed");
      };

      var unbindListeners = function() {
        self.transport.unbind("closed", onClosed);
        self.transport.unbind("error", onError);
        self.transport.unbind("ping_request", onPingRequest);
        self.transport.unbind("message", onMessage);
      };

      self.transport.bind("message", onMessage);
      self.transport.bind("ping_request", onPingRequest);
      self.transport.bind("error", onError);
      self.transport.bind("closed", onClosed);
    };

    /** @private */
    prototype.handleCloseEvent = function(closeEvent) {
      var action = Pusher.Protocol.getCloseAction(closeEvent);
      var error = Pusher.Protocol.getCloseError(closeEvent);
      if (error) {
        this.emit('error', error);
      }
      if (action) {
        this.emit(action);
      }
    };

    Pusher.Connection = Connection;
  }).call(global);

  (function() {
    /**
     * Handles Pusher protocol handshakes for transports.
     *
     * Calls back with a result object after handshake is completed. Results
     * always have two fields:
     * - action - string describing action to be taken after the handshake
     * - transport - the transport object passed to the constructor
     *
     * Different actions can set different additional properties on the result.
     * In the case of 'connected' action, there will be a 'connection' property
     * containing a Connection object for the transport. Other actions should
     * carry an 'error' property.
     *
     * @param {AbstractTransport} transport
     * @param {Function} callback
     */
    function Handshake(transport, callback) {
      this.transport = transport;
      this.callback = callback;
      this.bindListeners();
    }
    var prototype = Handshake.prototype;

    prototype.close = function() {
      this.unbindListeners();
      this.transport.close();
    };

    /** @private */
    prototype.bindListeners = function() {
      var self = this;

      self.onMessage = function(m) {
        self.unbindListeners();

        try {
          var result = Pusher.Protocol.processHandshake(m);
          if (result.action === "connected") {
            self.finish("connected", {
              connection: new Pusher.Connection(result.id, self.transport)
            });
          } else {
            self.finish(result.action, { error: result.error });
            self.transport.close();
          }
        } catch (e) {
          self.finish("error", { error: e });
          self.transport.close();
        }
      };

      self.onClosed = function(closeEvent) {
        self.unbindListeners();

        var action = Pusher.Protocol.getCloseAction(closeEvent) || "backoff";
        var error = Pusher.Protocol.getCloseError(closeEvent);
        self.finish(action, { error: error });
      };

      self.transport.bind("message", self.onMessage);
      self.transport.bind("closed", self.onClosed);
    };

    /** @private */
    prototype.unbindListeners = function() {
      this.transport.unbind("message", this.onMessage);
      this.transport.unbind("closed", this.onClosed);
    };

    /** @private */
    prototype.finish = function(action, params) {
      this.callback(
        Pusher.Util.extend({ transport: this.transport, action: action }, params)
      );
    };

    Pusher.Handshake = Handshake;
  }).call(global);

  (function() {
    /** Manages connection to Pusher.
     *
     * Uses a strategy (currently only default), timers and network availability
     * info to establish a connection and export its state. In case of failures,
     * manages reconnection attempts.
     *
     * Exports state changes as following events:
     * - "state_change", { previous: p, current: state }
     * - state
     *
     * States:
     * - initialized - initial state, never transitioned to
     * - connecting - connection is being established
     * - connected - connection has been fully established
     * - disconnected - on requested disconnection or before reconnecting
     * - unavailable - after connection timeout or when there's no network
     *
     * Options:
     * - unavailableTimeout - time to transition to unavailable state
     * - activityTimeout - time after which ping message should be sent
     * - pongTimeout - time for Pusher to respond with pong before reconnecting
     *
     * @param {String} key application key
     * @param {Object} options
     */
    function ConnectionManager(key, options) {
      Pusher.EventsDispatcher.call(this);

      this.key = key;
      this.options = options || {};
      this.state = "initialized";
      this.connection = null;
      this.encrypted = !!options.encrypted;
      this.timeline = this.options.getTimeline();

      this.connectionCallbacks = this.buildConnectionCallbacks();
      this.errorCallbacks = this.buildErrorCallbacks();
      this.handshakeCallbacks = this.buildHandshakeCallbacks(this.errorCallbacks);

      var self = this;

      Pusher.Network.bind("online", function() {
        self.timeline.info({ netinfo: "online" });
        if (self.state === "unavailable") {
          self.connect();
        }
      });
      Pusher.Network.bind("offline", function() {
        self.timeline.info({ netinfo: "offline" });
        if (self.shouldRetry()) {
          self.disconnect();
          self.updateState("unavailable");
        }
      });

      var sendTimeline = function() {
        if (self.timelineSender) {
          self.timelineSender.send(function() {});
        }
      };
      this.bind("connected", sendTimeline);
      setInterval(sendTimeline, 60000);

      this.updateStrategy();
    }
    var prototype = ConnectionManager.prototype;

    Pusher.Util.extend(prototype, Pusher.EventsDispatcher.prototype);

    /** Establishes a connection to Pusher.
     *
     * Does nothing when connection is already established. See top-level doc
     * to find events emitted on connection attempts.
     */
    prototype.connect = function() {
      var self = this;

      if (self.connection) {
        return;
      }
      if (self.state === "connecting") {
        return;
      }

      if (!self.strategy.isSupported()) {
        self.updateState("failed");
        return;
      }
      if (Pusher.Network.isOnline() === false) {
        self.updateState("unavailable");
        return;
      }

      self.updateState("connecting");
      self.timelineSender = self.options.getTimelineSender(
        self.timeline,
        { encrypted: self.encrypted },
        self
      );

      var callback = function(error, handshake) {
        if (error) {
          self.runner = self.strategy.connect(0, callback);
        } else {
          if (handshake.action === "error") {
            self.timeline.error({ handshakeError: handshake.error });
          } else {
            // we don't support switching connections yet
            self.runner.abort();
            self.handshakeCallbacks[handshake.action](handshake);
          }
        }
      };
      self.runner = self.strategy.connect(0, callback);

      self.setUnavailableTimer();
    };

    /** Sends raw data.
     *
     * @param {String} data
     */
    prototype.send = function(data) {
      if (this.connection) {
        return this.connection.send(data);
      } else {
        return false;
      }
    };

    /** Sends an event.
     *
     * @param {String} name
     * @param {String} data
     * @param {String} [channel]
     * @returns {Boolean} whether message was sent or not
     */
    prototype.send_event = function(name, data, channel) {
      if (this.connection) {
        return this.connection.send_event(name, data, channel);
      } else {
        return false;
      }
    };

    /** Closes the connection. */
    prototype.disconnect = function() {
      if (this.runner) {
        this.runner.abort();
      }
      this.clearRetryTimer();
      this.clearUnavailableTimer();
      this.stopActivityCheck();
      this.updateState("disconnected");
      // we're in disconnected state, so closing will not cause reconnecting
      if (this.connection) {
        this.connection.close();
        this.abandonConnection();
      }
    };

    /** @private */
    prototype.updateStrategy = function() {
      this.strategy = this.options.getStrategy({
        key: this.key,
        timeline: this.timeline,
        encrypted: this.encrypted
      });
    };

    /** @private */
    prototype.retryIn = function(delay) {
      var self = this;
      self.timeline.info({ action: "retry", delay: delay });
      if (delay > 0) {
        self.emit("connecting_in", Math.round(delay / 1000));
      }
      self.retryTimer = new Pusher.Timer(delay || 0, function() {
        self.disconnect();
        self.connect();
      });
    };

    /** @private */
    prototype.clearRetryTimer = function() {
      if (this.retryTimer) {
        this.retryTimer.ensureAborted();
      }
    };

    /** @private */
    prototype.setUnavailableTimer = function() {
      var self = this;
      self.unavailableTimer = new Pusher.Timer(
        self.options.unavailableTimeout,
        function() {
          self.updateState("unavailable");
        }
      );
    };

    /** @private */
    prototype.clearUnavailableTimer = function() {
      if (this.unavailableTimer) {
        this.unavailableTimer.ensureAborted();
      }
    };

    /** @private */
    prototype.resetActivityCheck = function() {
      this.stopActivityCheck();
      // send ping after inactivity
      if (!this.connection.supportsPing()) {
        var self = this;
        self.activityTimer = new Pusher.Timer(
          self.options.activityTimeout,
          function() {
            self.send_event('pusher:ping', {});
            // wait for pong response
            self.activityTimer = new Pusher.Timer(
              self.options.pongTimeout,
              function() {
                self.connection.close();
              }
            );
          }
        );
      }
    };

    /** @private */
    prototype.stopActivityCheck = function() {
      if (this.activityTimer) {
        this.activityTimer.ensureAborted();
      }
    };

    /** @private */
    prototype.buildConnectionCallbacks = function() {
      var self = this;
      return {
        message: function(message) {
          // includes pong messages from server
          self.resetActivityCheck();
          self.emit('message', message);
        },
        ping: function() {
          self.send_event('pusher:pong', {});
        },
        ping_request: function() {
          self.send_event('pusher:ping', {});
        },
        error: function(error) {
          // just emit error to user - socket will already be closed by browser
          self.emit("error", { type: "WebSocketError", error: error });
        },
        closed: function() {
          self.abandonConnection();
          if (self.shouldRetry()) {
            self.retryIn(1000);
          }
        }
      };
    };

    /** @private */
    prototype.buildHandshakeCallbacks = function(errorCallbacks) {
      var self = this;
      return Pusher.Util.extend({}, errorCallbacks, {
        connected: function(handshake) {
          self.clearUnavailableTimer();
          self.setConnection(handshake.connection);
          self.socket_id = self.connection.id;
          self.updateState("connected");
        }
      });
    };

    /** @private */
    prototype.buildErrorCallbacks = function() {
      var self = this;

      function withErrorEmitted(callback) {
        return function(result) {
          if (result.error) {
            self.emit("error", { type: "WebSocketError", error: result.error });
          }
          callback(result);
        };
      }

      return {
        ssl_only: withErrorEmitted(function() {
          self.encrypted = true;
          self.updateStrategy();
          self.retryIn(0);
        }),
        refused: withErrorEmitted(function() {
          self.disconnect();
        }),
        backoff: withErrorEmitted(function() {
          self.retryIn(1000);
        }),
        retry: withErrorEmitted(function() {
          self.retryIn(0);
        })
      };
    };

    /** @private */
    prototype.setConnection = function(connection) {
      this.connection = connection;
      for (var event in this.connectionCallbacks) {
        this.connection.bind(event, this.connectionCallbacks[event]);
      }
      this.resetActivityCheck();
    };

    /** @private */
    prototype.abandonConnection = function() {
      if (!this.connection) {
        return;
      }
      for (var event in this.connectionCallbacks) {
        this.connection.unbind(event, this.connectionCallbacks[event]);
      }
      this.connection = null;
    };

    /** @private */
    prototype.updateState = function(newState, data) {
      var previousState = this.state;

      this.state = newState;
      // Only emit when the state changes
      if (previousState !== newState) {
        Pusher.debug('State changed', previousState + ' -> ' + newState);

        this.timeline.info({ state: newState });
        this.emit('state_change', { previous: previousState, current: newState });
        this.emit(newState, data);
      }
    };

    /** @private */
    prototype.shouldRetry = function() {
      return this.state === "connecting" || this.state === "connected";
    };

    Pusher.ConnectionManager = ConnectionManager;
  }).call(global);

  (function() {
    /** Really basic interface providing network availability info.
     *
     * Emits:
     * - online - when browser goes online
     * - offline - when browser goes offline
     */
    function NetInfo() {
      Pusher.EventsDispatcher.call(this);

      var self = this;
      // This is okay, as IE doesn't support this stuff anyway.
      if (global.addEventListener !== undefined) {
        global.addEventListener("online", function() {
          self.emit('online');
        }, false);
        global.addEventListener("offline", function() {
          self.emit('offline');
        }, false);
      }
    }
    Pusher.Util.extend(NetInfo.prototype, Pusher.EventsDispatcher.prototype);

    var prototype = NetInfo.prototype;

    /** Returns whether browser is online or not
     *
     * Offline means definitely offline (no connection to router).
     * Inverse does NOT mean definitely online (only currently supported in Safari
     * and even there only means the device has a connection to the router).
     *
     * @return {Boolean}
     */
    prototype.isOnline = function() {
      if (global.navigator.onLine === undefined) {
        return true;
      } else {
        return global.navigator.onLine;
      }
    };

    Pusher.NetInfo = NetInfo;
    Pusher.Network = new NetInfo();
  }).call(global);

  (function() {
    /** Represents a collection of members of a presence channel. */
    function Members() {
      this.reset();
    }
    var prototype = Members.prototype;

    /** Returns member's info for given id.
     *
     * Resulting object containts two fields - id and info.
     *
     * @param {Number} id
     * @return {Object} member's info or null
     */
    prototype.get = function(id) {
      if (Object.prototype.hasOwnProperty.call(this.members, id)) {
        return {
          id: id,
          info: this.members[id]
        };
      } else {
        return null;
      }
    };

    /** Calls back for each member in unspecified order.
     *
     * @param  {Function} callback
     */
    prototype.each = function(callback) {
      var self = this;
      Pusher.Util.objectApply(self.members, function(member, id) {
        callback(self.get(id));
      });
    };

    /** Updates the id for connected member. For internal use only. */
    prototype.setMyID = function(id) {
      this.myID = id;
    };

    /** Handles subscription data. For internal use only. */
    prototype.onSubscription = function(subscriptionData) {
      this.members = subscriptionData.presence.hash;
      this.count = subscriptionData.presence.count;
      this.me = this.get(this.myID);
    };

    /** Adds a new member to the collection. For internal use only. */
    prototype.addMember = function(memberData) {
      if (this.get(memberData.user_id) === null) {
        this.count++;
      }
      this.members[memberData.user_id] = memberData.user_info;
      return this.get(memberData.user_id);
    };

    /** Adds a member from the collection. For internal use only. */
    prototype.removeMember = function(memberData) {
      var member = this.get(memberData.user_id);
      if (member) {
        delete this.members[memberData.user_id];
        this.count--;
      }
      return member;
    };

    /** Resets the collection to the initial state. For internal use only. */
    prototype.reset = function() {
      this.members = {};
      this.count = 0;
      this.myID = null;
      this.me = null;
    };

    Pusher.Members = Members;
  }).call(global);

  (function() {
    /** Provides base public channel interface with an event emitter.
     *
     * Emits:
     * - pusher:subscription_succeeded - after subscribing successfully
     * - other non-internal events
     *
     * @param {String} name
     * @param {Pusher} pusher
     */
    function Channel(name, pusher) {
      Pusher.EventsDispatcher.call(this, function(event, data) {
        Pusher.debug('No callbacks on ' + name + ' for ' + event);
      });

      this.name = name;
      this.pusher = pusher;
      this.subscribed = false;
    }
    var prototype = Channel.prototype;
    Pusher.Util.extend(prototype, Pusher.EventsDispatcher.prototype);

    /** Skips authorization, since public channels don't require it.
     *
     * @param {Function} callback
     */
    prototype.authorize = function(socketId, callback) {
      return callback(false, {});
    };

    /** Triggers an event */
    prototype.trigger = function(event, data) {
      return this.pusher.send_event(event, data, this.name);
    };

    /** Signals disconnection to the channel. For internal use only. */
    prototype.disconnect = function() {
      this.subscribed = false;
    };

    /** Handles an event. For internal use only.
     *
     * @param {String} event
     * @param {*} data
     */
    prototype.handleEvent = function(event, data) {
      if (event.indexOf("pusher_internal:") === 0) {
        if (event === "pusher_internal:subscription_succeeded") {
          this.subscribed = true;
          this.emit("pusher:subscription_succeeded", data);
        }
      } else {
        this.emit(event, data);
      }
    };

    Pusher.Channel = Channel;
  }).call(global);

  (function() {
    /** Extends public channels to provide private channel interface.
     *
     * @param {String} name
     * @param {Pusher} pusher
     */
    function PrivateChannel(name, pusher) {
      Pusher.Channel.call(this, name, pusher);
    }
    var prototype = PrivateChannel.prototype;
    Pusher.Util.extend(prototype, Pusher.Channel.prototype);

    /** Authorizes the connection to use the channel.
     *
     * @param  {String} socketId
     * @param  {Function} callback
     */
    prototype.authorize = function(socketId, callback) {
      var authorizer = new Pusher.Channel.Authorizer(this, this.pusher.config);
      return authorizer.authorize(socketId, callback);
    };

    Pusher.PrivateChannel = PrivateChannel;
  }).call(global);

  (function() {
    /** Adds presence channel functionality to private channels.
     *
     * @param {String} name
     * @param {Pusher} pusher
     */
    function PresenceChannel(name, pusher) {
      Pusher.PrivateChannel.call(this, name, pusher);
      this.members = new Pusher.Members();
    }
    var prototype = PresenceChannel.prototype;
    Pusher.Util.extend(prototype, Pusher.PrivateChannel.prototype);

    /** Authenticates the connection as a member of the channel.
     *
     * @param  {String} socketId
     * @param  {Function} callback
     */
    prototype.authorize = function(socketId, callback) {
      var _super = Pusher.PrivateChannel.prototype.authorize;
      var self = this;
      _super.call(self, socketId, function(error, authData) {
        if (!error) {
          if (authData.channel_data === undefined) {
            Pusher.warn(
              "Invalid auth response for channel '" +
              self.name +
              "', expected 'channel_data' field"
            );
            callback("Invalid auth response");
            return;
          }
          var channelData = JSON.parse(authData.channel_data);
          self.members.setMyID(channelData.user_id);
        }
        callback(error, authData);
      });
    };

    /** Handles presence and subscription events. For internal use only.
     *
     * @param {String} event
     * @param {*} data
     */
    prototype.handleEvent = function(event, data) {
      switch (event) {
        case "pusher_internal:subscription_succeeded":
          this.members.onSubscription(data);
          this.subscribed = true;
          this.emit("pusher:subscription_succeeded", this.members);
          break;
        case "pusher_internal:member_added":
          var addedMember = this.members.addMember(data);
          this.emit('pusher:member_added', addedMember);
          break;
        case "pusher_internal:member_removed":
          var removedMember = this.members.removeMember(data);
          if (removedMember) {
            this.emit('pusher:member_removed', removedMember);
          }
          break;
        default:
          Pusher.PrivateChannel.prototype.handleEvent.call(this, event, data);
      }
    };

    /** Resets the channel state, including members map. For internal use only. */
    prototype.disconnect = function() {
      this.members.reset();
      Pusher.PrivateChannel.prototype.disconnect.call(this);
    };

    Pusher.PresenceChannel = PresenceChannel;
  }).call(global);

  (function() {
    /** Handles a channel map. */
    function Channels() {
      this.channels = {};
    }
    var prototype = Channels.prototype;

    /** Creates or retrieves an existing channel by its name.
     *
     * @param {String} name
     * @param {Pusher} pusher
     * @return {Channel}
     */
    prototype.add = function(name, pusher) {
      if (!this.channels[name]) {
        this.channels[name] = createChannel(name, pusher);
      }
      return this.channels[name];
    };

    /** Finds a channel by its name.
     *
     * @param {String} name
     * @return {Channel} channel or null if it doesn't exist
     */
    prototype.find = function(name) {
      return this.channels[name];
    };

    /** Removes a channel from the map.
     *
     * @param {String} name
     */
    prototype.remove = function(name) {
      delete this.channels[name];
    };

    /** Proxies disconnection signal to all channels. */
    prototype.disconnect = function() {
      Pusher.Util.objectApply(this.channels, function(channel) {
        channel.disconnect();
      });
    };

    function createChannel(name, pusher) {
      if (name.indexOf('private-') === 0) {
        return new Pusher.PrivateChannel(name, pusher);
      } else if (name.indexOf('presence-') === 0) {
        return new Pusher.PresenceChannel(name, pusher);
      } else {
        return new Pusher.Channel(name, pusher);
      }
    }

    Pusher.Channels = Channels;
  }).call(global);

  (function() {
    Pusher.Channel.Authorizer = function(channel, options) {
      this.channel = channel;
      this.type = options.authTransport;

      this.options = options;
      this.authOptions = (options || {}).auth || {};
    };

    Pusher.Channel.Authorizer.prototype = {
      composeQuery: function(socketId) {
        var query = '&socket_id=' + encodeURIComponent(socketId) +
          '&channel_name=' + encodeURIComponent(this.channel.name);

        for(var i in this.authOptions.params) {
          query += "&" + encodeURIComponent(i) + "=" + encodeURIComponent(this.authOptions.params[i]);
        }

        return query;
      },

      authorize: function(socketId, callback) {
        return Pusher.authorizers[this.type].call(this, socketId, callback);
      }
    };

    var nextAuthCallbackID = 1;

    Pusher.auth_callbacks = {};
    Pusher.authorizers = {
      ajax: function(socketId, callback){
        var self = this, xhr;

        if (Pusher.XHR) {
          xhr = new Pusher.XHR();
        } else {
          xhr = (global.XMLHttpRequest ? new global.XMLHttpRequest() : new ActiveXObject("Microsoft.XMLHTTP"));
        }

        xhr.open("POST", self.options.authEndpoint, true);

        // add request headers
        xhr.setRequestHeader("Content-Type", "application/x-www-form-urlencoded");
        for(var headerName in this.authOptions.headers) {
          xhr.setRequestHeader(headerName, this.authOptions.headers[headerName]);
        }

        xhr.onreadystatechange = function() {
          if (xhr.readyState == 4) {
            if (xhr.status == 200) {
              var data, parsed = false;

              try {
                data = JSON.parse(xhr.responseText);
                parsed = true;
              } catch (e) {
                callback(true, 'JSON returned from webapp was invalid, yet status code was 200. Data was: ' + xhr.responseText);
              }

              if (parsed) { // prevents double execution.
                callback(false, data);
              }
            } else {
              Pusher.warn("Couldn't get auth info from your webapp", xhr.status);
              callback(true, xhr.status);
            }
          }
        };

        xhr.send(this.composeQuery(socketId));
        return xhr;
      },

      jsonp: function(socketId, callback){
        if(this.authOptions.headers !== undefined) {
          Pusher.warn("Warn", "To send headers with the auth request, you must use AJAX, rather than JSONP.");
        }

        var callbackName = nextAuthCallbackID.toString();
        nextAuthCallbackID++;

        var script = document.createElement("script");
        // Hacked wrapper.
        Pusher.auth_callbacks[callbackName] = function(data) {
          callback(false, data);
        };

        var callback_name = "Pusher.auth_callbacks['" + callbackName + "']";
        script.src = this.options.authEndpoint +
          '?callback=' +
          encodeURIComponent(callback_name) +
          this.composeQuery(socketId);

        var head = document.getElementsByTagName("head")[0] || document.documentElement;
        head.insertBefore( script, head.firstChild );
      }
    };
  }).call(global);

  global.Pusher = Pusher;
  return Pusher;
});
define('backend/mixins/RealTimeCommentsMixin',[

  'application/runtime',
  'backend/sync/processors',

  'vendor/moment',
  'collections/CommentsCollection',
  'collections/ListCollection',
  'collections/ShareCollection',
  'collections/TaskCollection',

  'wunderbits/WBMixin'

], function (
  runtime,
  Processors,
  moment,
  CommentsCollection, ListCollection, ShareCollection,TaskCollection,
  WBMixin,
  undefined
  ) {

  

  var $ = runtime.$;
  var _ = runtime._;
  var config = runtime.config;

  var collections = {
    'Message': new CommentsCollection('/comments/all'),
    'Share': new ShareCollection('/shares/all'),
    'List': new ListCollection('/lists/all'),
    'Task': new TaskCollection('/tasks/all')
  };

  var fromSyncOptions = {
    'sort': false,
    'fromSync': true
  };
  var overviewConfig = {
    'limit': 25
  };

  // an array of online_ids that have been fetched at least once
  var channelsWithLoadedComments = [];

  return WBMixin.extend({

    'fetchAndProcessChangeSetsForComments': function (changeSet) {

      var self = this;
      var _deferred = new $.Deferred();
      // if there is a last changeset, get the new ones, otherwise get the backlog
      var lastId = changeSet ? {'last_id': changeSet} : {};
      lastId = _.extend(lastId, overviewConfig);

      runtime.io.get(config.comments.host + '/change_sets', lastId).done(function (changeSets) {

        _.each(changeSets, function (changeSetObject) {

          self.routeMessage(changeSetObject);
        });

        self.fetchingCommentsOverview = false;

        _deferred.resolve();
      }).fail(_deferred.resolve);

      return _deferred.promise();
    },

    'getCommentsOverview': function () {

      var self = this;
      runtime.io.get('/messages/overview').done(function (overview, responseText, xhr) {

        var changeSetId = xhr.getResponseHeader('X-6W-Last-Change-ID');
        var commentRateLimit = xhr.getResponseHeader('X-6W-Comments-Limit');

        var modelsWithComments = _.filter(collections.Task.models, function (model) {
          return model.attributes.hasUnreadComments === true;
        });

        // look at the overview and see which models we have flagged locally
        // with comments if there are any overlaps, trust the overview. This
        // is for respecting what you have read on other devices
        _.each(overview, function (channel) {

          if (channel.unread_count === 0) {

            _.each(modelsWithComments, function (model) {

              if (model.attributes.online_id === channel.channel_id) {

                model.set('hasUnreadComments', false);
              }
            });
          }
        });

        collections.Message.limit = parseInt(commentRateLimit, 20);

        changeSetId = parseInt(changeSetId, 10);
        changeSetId && self.updateChangeSet(changeSetId, 'Message');

        var currentId = self.model.attributes.commentsChangeSet;

        if (!currentId || (changeSetId > currentId)) {

          self.parseCommentsOverview(overview);
        }
      });
    },

    'parseCommentsOverview': function (overview) {

      var self = this;

      if (!overview || !overview.length) {
        self.parsingOverview = false;
        return false;
      }

      self.parsingOverview = true;
      var channelData = overview[overview.length - 1];

      self.getCommentsForTask(channelData).done(function () {

        overview.pop();
        self.debouncedParseOverview(overview);
      }).fail(function () {

        self.debouncedParseOverview(overview);
      });
    },

    'getCommentsForTask': function (channelData) {

      var self = this;
      var _deferred = new $.Deferred();
      var params = {};

      var containsUnreadComments = _.has(channelData, 'unread_count') && channelData.unread_count > 0;

      // if the unread_count is more than 0, let the sidebar know about it
      if (containsUnreadComments) {
        runtime.trigger('unreadComments:' + channelData.channel_id, channelData.unread_count);
      }

      // if this flag is not true, we do not fetch comments which are parsed from the overview
      if (!channelData.fetchingOnDemand) {
        runtime.publish('hasComments:' + channelData.channel_id);
        _deferred.resolve();
      }
      else {
        // the beforeId is the oldest commentId we have, and is a basis for fetching 25 older comments
        var isBeforeRequest = _.has(channelData, 'beforeId');
        if (isBeforeRequest) {
          params = _.extend(overviewConfig, {'before_id': channelData.beforeId});
        }

        var url = '/' + channelData.channel_type + '/' + channelData.channel_id + '/messages';
        runtime.io.get(url, params).done(function (commentData) {

          var addBefore = !!params.before_id;
          for (var i=0, len = commentData.length; i < len; i++) {
            if (containsUnreadComments) {
              var notOnCommentRoute = (runtime.currentRoute().indexOf(commentData[i].channel_id + '/comments/edit') === -1);
              var authorIsNotUser = commentData[i].author.id !== runtime.user.id;
              // if we are on the route, or if the comment is this user, don't show unread state
              if (notOnCommentRoute && authorIsNotUser) {
                runtime.trigger('unreadCommentNotification', commentData[i]);
              }
            }

            self.processComment(commentData[i], addBefore, channelData.fetchingOnDemand);
          }

          channelsWithLoadedComments.push(channelData.channel_id);
          runtime.trigger('nextPageLoaded', commentData);

          if (isBeforeRequest && !commentData.length) {
            // mark this collection as have no more pages to fetch
            var task = collections.Task.get(channelData.taskId);
            task.save('allCommentsLoaded', true);
          }

          _deferred.resolve();
        }).error(function (error) {

          _deferred.reject();
          runtime.trigger('commentsPage:fail', error);
        });
      }

      return _deferred.promise();
    },

    'setupCommentsRequest': function (channelId) {

      var self = this;
      if (channelId === undefined || channelId === null) {
        return;
      }

      // don't request the initial 25 if we already have them.
      if (channelsWithLoadedComments.indexOf(channelId) === -1) {

        var channelData = {
          'channel_type': 'tasks',
          'channel_id': channelId,
          'fetchingOnDemand': true
        };

        self.getCommentsForTask(channelData);
      }
    },

    'processComment': function (commentData, addBefore, onDemand) {

      var validData = _.isObject(commentData);
      var model;

      var options = _.clone(fromSyncOptions);

      if (addBefore === true) {
        options.addBefore = true;
      }

      if (onDemand === true) {
        options.onDemand = true;
      }

      if (validData) {

        Processors.remapOnlineIDs(commentData);
        model = collections.Message.get(commentData.id);

        if (model) {
          model.save(commentData, options);
        }
        else {
          collections.Message.add(commentData, options);
        }
      }
      else {

        console.log('bad data', commentData);
      }
    }
  });
});
define('backend/RealtimeManager',[

  'application/runtime',

  'backend/sync/processors',

  'vendor/pusher',

  'wunderbits/WBEventEmitter',

  'collections/ContactCollection',
  'collections/FilesCollection',
  'collections/CommentsCollection',
  'collections/ListCollection',
  'collections/TaskCollection',
  'collections/ShareCollection',
  'collections/ReminderCollection',
  'collections/ServiceCollection',
  'collections/NotificationCollection',

  'backend/mixins/RealTimeCommentsMixin'

], function (
  runtime,
  Processors,
  Pusher,
  WBEventEmitter,
  ContactCollection, FilesCollection, CommentsCollection, ListCollection,
  TaskCollection, ShareCollection, ReminderCollection, ServiceCollection, NotificationCollection,
  RealTimeCommentMixin,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var console = runtime.console;
  var config = runtime.config;

  var _super = WBEventEmitter.prototype;

  var collections = {
    'Message': new CommentsCollection('/comments/all'),
    'Attachment': new FilesCollection('/files/all'),
    'Share': new ShareCollection('/shares/all'),
    'List': new ListCollection('/lists/all'),
    'Task': new TaskCollection('/tasks/all')
  };

  var fromSyncOptions = {'fromSync': true, 'sort': false};

  return WBEventEmitter.extend({

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      // mixin for comment related stuff for the RTM
      RealTimeCommentMixin.applyTo(self);

      // wait till user is fetched from storage
      runtime.user.hasFetched.done(function () {

        // in unregistered mode, enable realtime after user logs in or signs up
        if (runtime.user.isUnregistered()) {
          self.bindOnceTo(runtime.user, 'registered loggedIn', self.initializeDeferred);
        }
        // start realtime for registered user right away
        else {
          self.initializeDeferred();
        }
      });
    },

    'initializeDeferred': function () {

      var self = this;
      self.parsingOverview = false;
      self.debouncedParseOverview = _.debounce(self.parseCommentsOverview, 250);
      self.bindEvents();
    },

    'bindEvents': function () {

      var self = this;
      var getOverviewOnce = _.once(self.getCommentsOverview);

      self.startBind = self.bindTo(runtime, 'sync:end', self.checkStart);
      self.bindTo(runtime, 'realtime:disconnect', self.disconnect);
      self.bindTo(runtime, 'realtime:reconnect', self.reconnect);
      self.bindTo(runtime.user, 'change:channel', self.updateChannel);
      self.bindTo(runtime, 'requestComments', self.setupCommentsRequest);

      self.bindTo(runtime, 'sync:end', function () {

        if (!self.parsingOverview && !runtime.feature_comments_disabled) {

          self.model && self.getCommentsOverview();
        }
      });
      self.bindTo(runtime, 'requestNextCommentsPage', self.getCommentsForTask);

      // handle share acceptance, there is no other way to get all files
      // when joining a list
      var fetchedShares = {};

      runtime.once('files:done', function () {

        self.bindTo(collections.Share, 'accepted', function (share) {

          var listId = share.attributes.online_resource_id;
          if (share && !fetchedShares[listId]) {

            fetchedShares[listId] = true;
            runtime.io.get('/lists/' + listId + '/files').done(function (data) {

              _.each(data, function (fileData) {

                self.processFiles(fileData);
              });
            }).fail(function () {

              fetchedShares[listId] = false;
            });

            self.model && getOverviewOnce();
          }
        });
      });
    },

    'checkStart': function (context) {

      var self = this;

      // in the context of login, the sync incrementally
      // fetches pages of tasks, so we must wait to start
      // the realtime stuff until we have all data locally
      if (context === 'login' && !runtime.beforeDone) {

        self.startBind && self.unbindFrom(self.startBind);
        self.bindTo(runtime, 'sync:end', self.checkStart);
      }
      else {

        // first setup the pusher lib
        self.initPusher();

        // set up local db tracking for change sets
        self.model = new runtime.Backbone.Model({

          'id': 'changeSetModel'
        });
        self.model.storeName = 'storage';

        // once changes set is fetched, start pusher subscription
        var action = function () {

          self.fetchNonBatchResources().done(function () {
            _.delay(self.initSubscriptions, 1000);
          });
        };

        // fetch current last change set
        self.model.fetch({

          'success': action,
          'error': action
        });

        self.unbindFrom(self.startBind);
      }
    },

    'initPusher': function () {

      var self = this;
      var key = config.realtime && config.realtime.pusher_key;

      if (self.pusher || !key) {
        return;
      }

      self.pusher = new Pusher(key, {
        'encrypted': true,
        'disableFlash': true
      });

      self.pusher.connection.bind('connected', function () {

        console.log('pusher:connected');
      });

      self.pusher.connection.bind('disonnected', function () {

        console.log('pusher:disconnected');
      });

      self.pusher.connection.bind('unavailable', function () {

        console.log('pusher:unavailable');
      });
    },

    'updateChannel': function (user) {

      var self = this;
      self.channel && self.disconnect();
      user.attributes.channel && self.reconnect();
    },

    'initSubscriptions': function () {

      var self = this;

      self.channel = runtime.user.attributes.channel;

      console.log('channel', self.channel);

      if (self.channel) {

        self.pusherChannel = self.pusher.subscribe(self.channel);
        self.pusherChannel.bind('pusher:subscription_succeeded', function () {

          console.log('pusher:subscription_succeeded');
          // now that we are connected, fetch any changes that may have occured in the small time
          // between initial file fetch and pusher connection
          self.model.attributes.changeSet && self.fetchAndProcessChangeSets(self.model.attributes.changeSet);

          // on login we need to call for all the comments, this will change
          if (self.model && self.model.attributes.commentsChangeSet) {
            self.fetchAndProcessChangeSetsForComments(self.model.attributes.commentsChangeSet);
          }
          else {

            self.fetchAndProcessChangeSetsForComments();
          }
        });
        self.pusherChannel.bind('pusher:subscription_error', function () {

          console.log('pusher:subscription_error', arguments);
        });
        self.pusherChannel.bind('change-set', function (data) {

          self.routeMessage(data);
        });
      }
    },

    'disconnect': function () {

      var self = this;
      console.log('triggering pusher disconnect');
      if (self.pusherChannel) {
        self.pusher.unsubscribe(self.channel);
      }
      self.pusher && self.pusher.disconnect();
      self.pusherChannel = self.pusher = null;
    },

    'reconnect': function () {

      var self = this;
      console.log('triggering pusher reconnect');
      if (self.pusher) {
        console.log('initSubscriptions');
        self.initSubscriptions();
      }
      else {
        console.log('initPusher');
        self.checkStart();
      }
    },

    'routeMessage': function (message) {

      var self = this;
      var model;
      var changeSetId = message.id;

      Processors.remapOnlineIDs(message);
      message.data && Processors.remapOnlineIDs(message.data);

      var collection = collections[message.subject_type];

      // if a comment or file comes in before the task, trigger a sync
      var channelExists = message.data && !!collections.Task.get(message.data.channel_id);
      if (!channelExists) {

        // only do this after initial sync is done! OMG!
        runtime.once('before:done', function () {
          runtime.trigger('sync:queue');
        });
      }

      // verb handlers
      if (collection) {

        if (message.verb === 'delete') {

          model = collection.get(message.subject_id) || collection.get(collection.getIdByAltId(message.subject_id));
          model && model.destroy(fromSyncOptions);
        }
        else if (message.verb === 'create' && message.data) {

          if (message.subject_type === 'Message') {

            var notOnCommentRoute = (runtime.currentRoute().indexOf(message.data.channel_id + '/comments/edit') === -1);
            var authorIsNotUser = message.data.author.id !== runtime.user.id;

            // if we are on the route, or if the comment is this user, don't show unread state
            if (notOnCommentRoute && authorIsNotUser) {
              !self.fetchingCommentsOverview && runtime.trigger('unreadComments:' + message.data.online_channel_id, 'increase');
              runtime.trigger('unreadCommentNotification', message.data);
            }

            model = collection.get(message.data.id) || collection.get(collection.getIdByAltId(message.data.id));
          }
          else {
            model = collection.get(message.data.id) || collection.get(collection.getIdByAltId(message.data.id));
          }

          !model && collection.add(message.data, fromSyncOptions);
          model && model.save(message.data, fromSyncOptions);
        }
        else if (message.verb === 'update') {

          model = collection.get(message.subject_id) || collection.get(collection.getIdByAltId(message.subject_id));
          // bug in api /change_sets endpoint returning bad data
          if (_.isObject(message.data)) {

            delete message.data.id;

            if (model) {

              // do not let attachment states regress from done to uploading, etc.
              if (message.data.state !== undefined && model.attributes.state >= message.data.state) {

                delete message.data.state;
              }

              _.size(message.data) && model.save(message.data, fromSyncOptions);
            }
          }
          else {

            console.log('bad data', message.data);
          }
        }
      }

      // always update
      self.updateChangeSet(changeSetId, message.subject_type);
    },

    'updateChangeSet': function (id, type) {

      var self = this;
      var _handler = function () {

        var currentId, changeSetAttribute;

        if (type === 'Message') {
          currentId = self.model.attributes.commentsChangeSet;
          changeSetAttribute = 'commentsChangeSet';
        }
        else {

          currentId = self.model.attributes.changeSet;
          changeSetAttribute = 'changeSet';
        }

        if (_.isNumber(id) && (!currentId || id > currentId)) {

          console.log('new changeSet', id, type);
          var changeSetData = {};
          changeSetData[changeSetAttribute] = id;
          self.model.save(changeSetData, fromSyncOptions);
        }
      };

      self.model && self.model.fetch({

        'success': _handler,
        'error': _handler
      });
    },

    'fetchNonBatchResources': function () {

      var self = this;
      var _deferred = new $.Deferred();

      var _filesDeferred = new $.Deferred();
      var _commentsDeferred = new $.Deferred();

      var _handler = function () {

        var filesChangeSet = self.model.attributes.changeSet;
        var commentsChangeSet = self.model.attributes.commentsChangeSet;

        if (filesChangeSet) {
          console.log('fetching files from /change_set', filesChangeSet);
          filesChangeSet && self.fetchAndProcessChangeSets(filesChangeSet).done(_filesDeferred.resolve);
        }
        else {
          console.log('fetching files from /files');
          self.fetchfiles().done(_filesDeferred.resolve);
        }

        if (commentsChangeSet) {
          commentsChangeSet && self.fetchAndProcessChangeSetsForComments(commentsChangeSet).done(_commentsDeferred.resolve);
        }
        else {
          _commentsDeferred.resolve();
        }
      };

      self.model.fetch({

        'success': _handler,
        'error': _handler
      });

      $.when(_filesDeferred, _commentsDeferred).done(_deferred.resolve);

      _filesDeferred.done(function () {

        runtime.publish('files:done');
      });

      return _deferred.promise();
    },

    'fetchfiles': function () {

      var self = this;
      var _deferred = new $.Deferred();

      // wait for normal sync process to finish,
      // try to guarantee pareint/child resources are available
      runtime.on('before:done', function () {

        runtime.io.get('/files').done(function (data, responseText, xhr) {

          var changeSetId = xhr.getResponseHeader('X-6W-Last-Change-ID');
          changeSetId = parseInt(changeSetId, 10);
          changeSetId && self.updateChangeSet(changeSetId);

          _.each(data, function (fileData) {

            self.processFiles(fileData);
          });
          _deferred.resolve();
        }).fail(_deferred.resolve);
      });

      return _deferred.promise();
    },

    'fetchAndProcessChangeSets': function (changeSet) {

      var self = this;
      var _deferred = new $.Deferred();

      if (_.isNumber(changeSet)) {

        runtime.io.get('/change_sets', {

          'last_id': changeSet
        }).done(function (changeSets) {

          _.each(changeSets, function (changeSetObject) {

            self.routeMessage(changeSetObject);
          });
          _deferred.resolve();
        }).fail(_deferred.resolve);
      }

      return _deferred.promise();
    },

    'processFiles': function (fileData) {

      var validData = _.isObject(fileData);
      var model;

      if (validData) {

        Processors.remapOnlineIDs(fileData);
        model = collections.Attachment.get(fileData.id);

        if (model) {
          model.save(fileData, fromSyncOptions);
        }
        else {
          collections.Attachment.add(fileData, fromSyncOptions);
        }
      }
      else {

        console.log('bad data', fileData);
      }
    }
  });
});
define('vendor/ga',[
  'wunderbits/helpers/strings'
], function (Strings, undefined) {

  

  var _gaq = [];
  var cookies = {};

  var W = window, K = document;
  var isChromeApp = W.chrome && (W.chrome.runtime || (W.chrome.app && W.chrome.app.runtime));

  // need to shim some browser APIs in chrome-app
  if (isChromeApp) {

    K.__defineSetter__('cookie', function (string) {
      var semicolon = string.indexOf(';');
      if (semicolon < 0) { return; }
      var name = string.substring(0, string.indexOf('='));
      cookies[name] = string.substring(name.length + 1, semicolon);
    });

    K.__defineGetter__('cookie', function() {
      var result = [];
      for (var cookie in cookies) {
        result.push(cookie + '=' + cookies[cookie]);
      }
      return result.join('; ');
    });

    W.history.__defineGetter__('length', function() { return 0; });
  }

  var g = void 0,
    h = !0,
    j = null,
    l = !1,
    aa = encodeURIComponent,
    ba = Infinity,
    ca = setTimeout,
    n = Math,
    da = decodeURIComponent;

  function ea(a, b) {
    return a.name = b;
  }

  var p = "push",
    fa = "test",
    ia = "slice",
    q = "replace",
    ja = "load",
    ka = "floor",
    la = "charAt",
    ma = "value",
    r = "indexOf",
    na = "match",
    oa = "port",
    pa = "createElement",
    qa = "path",
    s = "name",
    v = "host",
    w = "toString",
    x = "length",
    y = "prototype",
    ra = "clientWidth",
    z = "split",
    sa = "stopPropagation",
    ta = "scope",
    A = "location",
    ua = "search",
    B = "protocol",
    va = "clientHeight",
    wa = "href",
    C = "substring",
    xa = "apply",
    ya = "navigator",
    D = "join",
    E = "toLowerCase",
    F;

  function za(a, b) {
    switch (b) {
      case 0:
        return "" + a;
      case 1:
        return 1 * a;
      case 2:
        return !!a;
      case 3:
        return 1E3 * a;
    }
    return a;
  }

  function Aa(a) {
    return "function" == typeof a;
  }

  function Ba(a) {
    return a != g && -1 < (a.constructor + "")[r]("String");
  }

  function G(a, b) {
    return g === a || "-" === a && !b || "" === a;
  }

  function Ca(a) {
    if (!a || "" === a) return "";
    for (; a && -1 < " \n\r\t" [r](a[la](0));) a = a[C](1);
    for (; a && -1 < " \n\r\t" [r](a[la](a[x] - 1));) a = a[C](0, a[x] - 1);
    return a
  }

  function Da() {
    return n.round(2147483647 * n.random());
  }

  function Ea() {}

  function H(a, b) {
    if (aa instanceof Function) return b ? encodeURI(a) : aa(a);
    I(68);
    return escape(a)
  }

  function J(a) {
    a = a[z]("+")[D](" ");
    if (da instanceof Function) try {
      return da(a)
    } catch (b) {
      I(17)
    } else I(68);
    return unescape(a)
  }

  var Fa = function (a, b, c, d) {
    a.addEventListener ? a.addEventListener(b, c, !! d) : a.attachEvent && a.attachEvent("on" + b, c);
  }, Ga = function (a, b, c, d) {
    a.removeEventListener ? a.removeEventListener(b, c, !! d) : a.detachEvent && a.detachEvent("on" + b, c);
  };

  function Ha(a, b) {
    if (a) {
      var c = K[pa]("script");
      c.type = "text/javascript";
      c.async = h;
      c.src = a;
      c.id = b;
      var d = K.getElementsByTagName("script")[0];
      d.parentNode.insertBefore(c, d);
      return c;
    }
  }

  function L(a) {
    return a && 0 < a[x] ? a[0] : "";
  }

  function Ia(a) {
    var b = a ? a[x] : 0;
    return 0 < b ? a[b - 1] : "";
  }
  var Ja = function () {
    this.prefix = "ga.";
    this.R = {};
  };
  Ja[y].set = function (a, b) {
    this.R[this.prefix + a] = b
  };
  Ja[y].get = function (a) {
    return this.R[this.prefix + a]
  };
  Ja[y].contains = function (a) {
    return this.get(a) !== g
  };

  function Ka(a) {
    0 == a[r]("www.") && (a = a[C](4));
    return a[E]()
  }

  function La(a, b) {
    var c, d = {
      url: a,
      protocol: "http",
      host: "",
      path: "",
      d: new Ja,
      anchor: ""
    };
    if (!a) return d;
    c = a[r]("://");
    0 <= c && (d.protocol = a[C](0, c), a = a[C](c + 3));
    c = a[ua]("/|\\?|#");
    if (0 <= c) d.host = a[C](0, c)[E](), a = a[C](c);
    else return d.host = a[E](), d;
    c = a[r]("#");
    0 <= c && (d.anchor = a[C](c + 1), a = a[C](0, c));
    c = a[r]("?");
    0 <= c && (Ma(d.d, a[C](c + 1)), a = a[C](0, c));
    d.anchor && b && Ma(d.d, d.anchor);
    a && "/" == a[la](0) && (a = a[C](1));
    d.path = a;
    return d
  }

  function Oa(a, b) {
    function c(a) {
      var b = (a.hostname || "")[z](":")[0][E](),
        c = (a[B] || "")[E](),
        c = 1 * a[oa] || ("http:" == c ? 80 : "https:" == c ? 443 : "");
      a = a.pathname || "";
      0 == a[r]("/") || (a = "/" + a);
      return [b, "" + c, a]
    }
    var d = b || K[pa]("a");
    d.href = document.location.href;
    var e = (d[B] || "")[E](),
      f = c(d),
      k = d[ua] || "",
      m = e + "//" + f[0] + (f[1] ? ":" + f[1] : "");
    0 == a[r]("//") ? a = e + a : 0 == a[r]("/") ? a = m + a : !a || 0 == a[r]("?") ? a = m + f[2] + (a || k) : 0 > a[z]("/")[0][r](":") && (a = m + f[2][C](0, f[2].lastIndexOf("/")) + "/" + a);
    d.href = a;
    e = c(d);
    return {
      protocol: (d[B] || "")[E](),
      host: e[0],
      port: e[1],
      path: e[2],
      Oa: d[ua] || "",
      url: a || ""
    }
  }

  function Ma(a, b) {
    function c(b, c) {
      a.contains(b) || a.set(b, []);
      a.get(b)[p](c)
    }
    for (var d = Ca(b)[z]("&"), e = 0; e < d[x]; e++) if (d[e]) {
      var f = d[e][r]("=");
      0 > f ? c(d[e], "1") : c(d[e][C](0, f), d[e][C](f + 1))
    }
  }

  function Pa(a, b) {
    if (G(a) || "[" == a[la](0) && "]" == a[la](a[x] - 1)) return "-";
    var c = K.domain;
    return a[r](c + (b && "/" != b ? b : "")) == (0 == a[r]("http://") ? 7 : 0 == a[r]("https://") ? 8 : 0) ? "0" : a
  };
  var Qa = 0;

  function Ra(a, b, c) {
    !(1 <= Qa) && !(1 <= 100 * n.random()) && (a = ["utmt=error", "utmerr=" + a, "utmwv=5.3.8", "utmn=" + Da(), "utmsp=1"], b && a[p]("api=" + b), c && a[p]("msg=" + H(c[C](0, 100))), M.w && a[p]("aip=1"), Sa(a[D]("&")), Qa++)
  };
  var Ta = 0,
    Ua = {};

  function N(a) {
    return Va("x" + Ta++, a)
  }

  function Va(a, b) {
    Ua[a] = !! b;
    return a
  }
  var Wa = N(),
    Xa = Va("anonymizeIp"),
    Ya = N(),
    $a = N(),
    ab = N(),
    bb = N(),
    O = N(),
    P = N(),
    cb = N(),
    db = N(),
    eb = N(),
    fb = N(),
    gb = N(),
    hb = N(),
    ib = N(),
    jb = N(),
    kb = N(),
    lb = N(),
    nb = N(),
    ob = N(),
    pb = N(),
    qb = N(),
    rb = N(),
    sb = N(),
    tb = N(),
    ub = N(),
    vb = N(),
    wb = N(),
    xb = N(),
    yb = N(),
    zb = N(),
    Ab = N(),
    Bb = N(),
    Cb = N(),
    Db = N(),
    Eb = N(),
    Fb = N(h),
    Gb = Va("currencyCode"),
    Hb = Va("page"),
    Ib = Va("title"),
    Jb = N(),
    Kb = N(),
    Lb = N(),
    Mb = N(),
    Nb = N(),
    Ob = N(),
    Pb = N(),
    Qb = N(),
    Rb = N(),
    Q = N(h),
    Sb = N(h),
    Tb = N(h),
    Ub = N(h),
    Vb = N(h),
    Wb = N(h),
    Zb = N(h),
    $b = N(h),
    ac = N(h),
    bc = N(h),
    cc = N(h),
    R = N(h),
    dc = N(h),
    ec = N(h),
    fc = N(h),
    gc = N(h),
    hc = N(h),
    ic = N(h),
    jc = N(h),
    S = N(h),
    kc = N(h),
    lc = N(h),
    mc = N(h),
    nc = N(h),
    oc = N(h),
    pc = N(h),
    qc = N(h),
    rc = Va("campaignParams"),
    sc = N(),
    tc = Va("hitCallback"),
    uc = N();
  N();
  var vc = N(),
    wc = N(),
    xc = N(),
    yc = N(),
    zc = N(),
    Ac = N(),
    Bc = N(),
    Cc = N(),
    Dc = N(),
    Ec = N(),
    Fc = N(),
    Gc = N(),
    Hc = N(),
    Ic = N();
  N();
  var Mc = N(),
    Nc = N(),
    Oc = N();

  function Pc(a) {
    var b = this.plugins_;
    if (b) return b.get(a)
  }
  var T = function (a, b, c, d) {
    a[b] = function () {
      try {
        return d != g && I(d), c[xa](this, arguments)
      } catch (a) {
        throw Ra("exc", b, a && a[s]), a;
      }
    }
  }, Qc = function (a, b, c, d) {
    U[y][a] = function () {
      try {
        return I(c), za(this.a.get(b), d)
      } catch (e) {
        throw Ra("exc", a, e && e[s]), e;
      }
    }
  }, V = function (a, b, c, d, e) {
    U[y][a] = function (f) {
      try {
        I(c), e == g ? this.a.set(b, za(f, d)) : this.a.set(b, e)
      } catch (k) {
        throw Ra("exc", a, k && k[s]), k;
      }
    }
  };
  var Rc = RegExp(/(^|\.)doubleclick\.net$/i),
    Sc = function (a, b) {
      return Rc[fa](document.location.hostname) ? h : "/" !== b ? l : (0 == a[r]("www.google.") || 0 == a[r](".google.") || 0 == a[r]("google.")) && !(-1 < a[r]("google.org")) ? h : l
    }, Tc = function (a) {
      var b = a.get(bb),
        c = a.c(P, "/");
      Sc(b, c) && a[sa]()
    };
  var Zc = function () {
    var a = {}, b = {}, c = new Uc;
    this.g = function (a, b) {
      c.add(a, b)
    };
    var d = new Uc;
    this.e = function (a, b) {
      d.add(a, b)
    };
    var e = l,
      f = l,
      k = h;
    this.T = function () {
      e = h
    };
    this.j = function (a) {
      this[ja]();
      this.set(sc, a, h);
      a = new Vc(this);
      e = l;
      d.execute(this);
      e = h;
      b = {};
      this.n();
      a.Ja()
    };
    this.load = function () {
      e && (e = l, this.Ka(), Wc(this), f || (f = h, c.execute(this), Xc(this), Wc(this)), e = h)
    };
    this.n = function () {
      if (e) if (f) e = l, Xc(this), e = h;
      else this[ja]()
    };
    this.get = function (c) {
      Ua[c] && this[ja]();
      return b[c] !== g ? b[c] : a[c]
    };
    this.set = function (c, d, e) {
      Ua[c] && this[ja]();
      e ? b[c] = d : a[c] = d;
      Ua[c] && this.n()
    };
    this.z = function (b) {
      a[b] = this.b(b, 0) + 1
    };
    this.b = function (a, b) {
      var c = this.get(a);
      return c == g || "" === c ? b : 1 * c
    };
    this.c = function (a, b) {
      var c = this.get(a);
      return c == g ? b : c + ""
    };
    this.Ka = function () {
      if (k) {
        var b = this.c(bb, ""),
          c = this.c(P, "/");
        Sc(b, c) || (a[O] = a[hb] && "" != b ? Yc(b) : 1, k = l)
      }
    }
  };
  Zc[y].stopPropagation = function () {
    if (!isChromeApp) {
      throw "aborted";
    }
  };
  var Vc = function (a) {
    var b = this;
    this.q = 0;
    var c = a.get(tc);
    this.Ua = function () {
      0 < b.q && c && (b.q--, b.q || c())
    };
    this.Ja = function () {
      !b.q && c && ca(c, 10)
    };
    a.set(uc, b, h)
  };

  function $c(a, b) {
    b = b || [];
    for (var c = 0; c < b[x]; c++) {
      var d = b[c];
      if ("" + a == d || 0 == d[r](a + ".")) return d
    }
    return "-"
  }
  var bd = function (a, b, c) {
    c = c ? "" : a.c(O, "1");
    b = b[z](".");
    if (6 !== b[x] || ad(b[0], c)) return l;
    c = 1 * b[1];
    var d = 1 * b[2],
      e = 1 * b[3],
      f = 1 * b[4];
    b = 1 * b[5];
    if (!(0 <= c && 0 < d && 0 < e && 0 < f && 0 <= b)) return l;
    a.set(Q, c);
    a.set(Vb, d);
    a.set(Wb, e);
    a.set(Zb, f);
    a.set($b, b);
    return h
  }, cd = function (a) {
    var b = a.get(Q),
      c = a.get(Vb),
      d = a.get(Wb),
      e = a.get(Zb),
      f = a.b($b, 1);
    return [a.b(O, 1), b != g ? b : "-", c || "-", d || "-", e || "-", f][D](".")
  }, dd = function (a) {
    return [a.b(O, 1), a.b(cc, 0), a.b(R, 1), a.b(dc, 0)][D](".")
  }, ed = function (a, b, c) {
    c = c ? "" : a.c(O, "1");
    var d = b[z](".");
    if (4 !== d[x] || ad(d[0], c)) d = j;
    a.set(cc, d ? 1 * d[1] : 0);
    a.set(R, d ? 1 * d[2] : 10);
    a.set(dc, d ? 1 * d[3] : a.get(ab));
    return d != j || !ad(b, c)
  }, fd = function (a, b) {
    var c = H(a.c(Tb, "")),
      d = [],
      e = a.get(Fb);
    if (!b && e) {
      for (var f = 0; f < e[x]; f++) {
        var k = e[f];
        k && 1 == k[ta] && d[p](f + "=" + H(k[s]) + "=" + H(k[ma]) + "=1")
      }
      0 < d[x] && (c += "|" + d[D]("^"))
    }
    return c ? a.b(O, 1) + "." + c : j
  }, gd = function (a, b, c) {
    c = c ? "" : a.c(O, "1");
    b = b[z](".");
    if (2 > b[x] || ad(b[0], c)) return l;
    b = b[ia](1)[D](".")[z]("|");
    0 < b[x] && a.set(Tb, J(b[0]));
    if (1 >= b[x]) return h;
    b = b[1][z](-1 == b[1][r](",") ?
      "^" : ",");
    for (c = 0; c < b[x]; c++) {
      var d = b[c][z]("=");
      if (4 == d[x]) {
        var e = {};
        ea(e, J(d[1]));
        e.value = J(d[2]);
        e.scope = 1;
        a.get(Fb)[d[0]] = e
      }
    }
    return h
  }, hd = function (a) {
    var b;
    b = function (b, e) {
      if (!G(a.get(b))) {
        var f = a.c(b, ""),
          f = f[z](" ")[D]("%20"),
          f = f[z]("+")[D]("%20");
        c[p](e + "=" + f)
      }
    };
    var c = [];
    b(ic, "utmcid");
    b(nc, "utmcsr");
    b(S, "utmgclid");
    b(kc, "utmgclsrc");
    b(lc, "utmdclid");
    b(mc, "utmdsid");
    b(jc, "utmccn");
    b(oc, "utmcmd");
    b(pc, "utmctr");
    b(qc, "utmcct");
    return (b = c[D]("|")) ? [a.b(O, 1), a.b(ec, 0), a.b(fc, 1), a.b(gc, 1), b][D](".") :
      ""
  }, id = function (a, b, c) {
    c = c ? "" : a.c(O, "1");
    b = b[z](".");
    if (5 > b[x] || ad(b[0], c)) return a.set(ec, g), a.set(fc, g), a.set(gc, g), a.set(ic, g), a.set(jc, g), a.set(nc, g), a.set(oc, g), a.set(pc, g), a.set(qc, g), a.set(S, g), a.set(kc, g), a.set(lc, g), a.set(mc, g), l;
    a.set(ec, 1 * b[1]);
    a.set(fc, 1 * b[2]);
    a.set(gc, 1 * b[3]);
    var d = b[ia](4)[D](".");
    b = function (a) {
      return (a = d[na](a + "=(.*?)(?:\\|utm|$)")) && 2 == a[x] ? a[1] : g
    };
    c = function (b, c) {
      c ? (c = e ? J(c) : c[z]("%20")[D](" "), a.set(b, c)) : a.set(b, g)
    }; - 1 == d[r]("=") && (d = J(d));
    var e = "2" == b("utmcvr");
    c(ic, b("utmcid"));
    c(jc, b("utmccn"));
    c(nc, b("utmcsr"));
    c(oc, b("utmcmd"));
    c(pc, b("utmctr"));
    c(qc, b("utmcct"));
    c(S, b("utmgclid"));
    c(kc, b("utmgclsrc"));
    c(lc, b("utmdclid"));
    c(mc, b("utmdsid"));
    return h
  }, ad = function (a, b) {
    return b ? a != b : !/^\d+$/ [fa](a)
  };
  var Uc = function () {
    this.filters = []
  };
  Uc[y].add = function (a, b) {
    this.filters[p]({
      name: a,
      s: b
    })
  };
  Uc[y].execute = function (a) {
    var b, l;
    try {
      for (b = 0, l = this.filters.length; b < l; b++) {
        this.filters[b].s.call(W, a)
      }
    } catch (c) {
      // console.log('failed', a, b, c);
    }
  };

  function jd(a) {
    100 != a.get(vb) && a.get(Q) % 1E4 >= 100 * a.get(vb) && a[sa]()
  }

  function kd(a) {
    ld(a.get(Wa)) && a[sa]()
  }

  function md(a) {
    "file:" == document.location.protocol && a[sa]()
  }

  function nd(a) {
    var path = isChromeApp ? '/' : location.pathname;
    a.get(Ib) || a.set(Ib, window.gitHash || K.title, h);
    a.get(Hb) || a.set(Hb, path + document.location.search, h)
  };
  var od = new function () {
      var a = [];
      this.set = function (b) {
        a[b] = h
      };
      this.Xa = function () {
        for (var b = [], c = 0; c < a[x]; c++) a[c] && (b[n[ka](c / 6)] = b[n[ka](c / 6)] ^ 1 << c % 6);
        for (c = 0; c < b[x]; c++) b[c] = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_" [la](b[c] || 0);
        return b[D]("") + "~"
      }
  };

  function I(a) {
    od.set(a)
  };


  var ld = function (a) {
      var b = W._gaUserPrefs;
      return b && b.ioo && b.ioo() || !! a && W["ga-disable-" + a] === h
    }, pd = function (a) {
      var b = [],
        c = K.cookie[z](";");
      a = RegExp("^\\s*" + a + "=\\s*(.*?)\\s*$");
      for (var d = 0; d < c[x]; d++) {
        var e = c[d][na](a);
        e && b[p](e[1])
      }
      return b
    }, X = function (a, b, c, d, e, f) {
      e = ld(e) ? l : Sc(d, c) ? l : h;
      if (e) {
        if (b && 0 <= W[ya].userAgent[r]("Firefox")) {
          b = b[q](/\n|\r/g, " ");
          e = 0;
          for (var k = b[x]; e < k; ++e) {
            var m = b.charCodeAt(e) & 255;
            if (10 == m || 13 == m) b = b[C](0, e) + "?" + b[C](e + 1)
          }
        }
        b && 2E3 < b[x] && (b = b[C](0, 2E3), I(69));
        a = a + "=" + b + "; path=" + c + "; ";
        f && (a += "expires=" + (new Date((new Date).getTime() + f)).toGMTString() + "; ");
        d && (a += "domain=" + d + ";");
        K.cookie = a
      }
    };
  var qd, rd, sd = function () {
    if (!qd) {
      var a = {}, b = W[ya],
        c = W.screen;
      a.Q = c ? c.width + "x" + c.height : "-";
      a.P = c ? c.colorDepth + "-bit" : "-";
      a.language = (b && (b.language || b.browserLanguage) || "-")[E]();
      a.javaEnabled = b && b.javaEnabled() ? 1 : 0;
      a.characterSet = K.characterSet || K.charset || "-";
      try {
        var d = K.documentElement,
          e = K.body,
          f = e && e[ra] && e[va],
          b = [];
        d && (d[ra] && d[va]) && ("CSS1Compat" === K.compatMode || !f) ? b = [d[ra], d[va]] : f && (b = [e[ra], e[va]]);
        a.Wa = b[D]("x")
      } catch (k) {
        I(135)
      }
      qd = a
    }
  }, td = function () {
    sd();
    var a = qd;
    var b = W[ya];
    var UA = b.userAgent;
    isChromeApp && (UA = 'ChromeApp/' + b.platform + '/' + window.gitHash);
    var cookie = (K.cookie ? K.cookie : "");
    var referrer = (K.referrer ? K.referrer : "");
    var e = W.history.length;
    var c = b.appName + b.version + a.language + b.platform + UA + a.javaEnabled + a.Q + a.P + cookie + referrer;
    var d = c.length;
    for (; 0 < e;) c += e-- ^ d++;
    return Yc(c)
  }, ud = function (a) {
    sd();
    var b = qd;
    a.set(Lb, b.Q);
    a.set(Mb, b.P);
    a.set(Pb, b.language);
    a.set(Qb, b.characterSet);
    a.set(Nb, b.javaEnabled);
    a.set(Rb, b.Wa);
    if (a.get(ib) && a.get(jb)) {
      if (!(b = rd)) {
        var c, d, e;
        d = "ShockwaveFlash";
        if ((b = (b = W[ya]) ? b.plugins : g) && 0 < b[x]) for (c = 0; c < b[x] && !e; c++) d = b[c], -1 < d[s][r]("Shockwave Flash") && (e = d.description[z]("Shockwave Flash ")[1]);
        else {
          d = d + "." + d;
          try {
            c = new ActiveXObject(d + ".7"), e = c.GetVariable("$version")
          } catch (f) {}
          if (!e) try {
            c = new ActiveXObject(d + ".6"), e = "WIN 6,0,21,0", c.AllowScriptAccess = "always", e = c.GetVariable("$version")
          } catch (k) {}
          if (!e) try {
            c = new ActiveXObject(d), e = c.GetVariable("$version")
          } catch (m) {}
          e && (e = e[z](" ")[1][z](","), e = e[0] + "." + e[1] + " r" + e[2])
        }
        b = e ? e : "-"
      }
      rd = b;
      a.set(Ob, rd)
    } else a.set(Ob, "-")
  };
  var vd = function (a) {
    if (Aa(a)) this.s = a;
    else {
      var b = a[0],
        c = b.lastIndexOf(":"),
        d = b.lastIndexOf(".");
      this.h = this.i = this.l = ""; - 1 == c && -1 == d ? this.h = b : -1 == c && -1 != d ? (this.i = b[C](0, d), this.h = b[C](d + 1)) : -1 != c && -1 == d ? (this.l = b[C](0, c), this.h = b[C](c + 1)) : c > d ? (this.i = b[C](0, d), this.l = b[C](d + 1, c), this.h = b[C](c + 1)) : (this.i = b[C](0, d), this.h = b[C](d + 1));
      this.k = a[ia](1);
      this.Ma = !this.l && "_require" == this.h;
      this.J = !this.i && !this.l && "_provide" == this.h
    }
  }, Y = function () {
    T(Y[y], "push", Y[y][p], 5);
    T(Y[y], "_getPlugin", Pc, 121);
    T(Y[y],
      "_createAsyncTracker", Y[y].Sa, 33);
    T(Y[y], "_getAsyncTracker", Y[y].Ta, 34);
    this.I = new Ja;
    this.p = []
  };
  F = Y[y];
  F.Na = function (a, b, c) {
    var d = this.I.get(a);
    if (!Aa(d)) return l;
    b.plugins_ = b.plugins_ || new Ja;
    b.plugins_.set(a, new d(b, c || {}));
    return h
  };
  F.push = function (a) {
    var b = Z.Va[xa](this, arguments),
      b = Z.p.concat(b);
    for (Z.p = []; 0 < b[x] && !Z.O(b[0]) && !(b.shift(), 0 < Z.p[x]););
    Z.p = Z.p.concat(b);
    return 0
  };
  F.Va = function (a) {
    for (var b = [], c = 0; c < arguments[x]; c++) try {
      var d = new vd(arguments[c]);
      d.J ? this.O(d) : b[p](d)
    } catch (e) {}
    return b
  };
  F.O = function (a) {
    try {
      if (a.s) a.s[xa](W);
      else if (a.J) this.I.set(a.k[0], a.k[1]);
      else {
        var b = "_gat" == a.i ? M : "_gaq" == a.i ? Z : M.u(a.i);
        if (a.Ma) {
          if (!this.Na(a.k[0], b, a.k[2])) {
            if (!a.Pa) {
              var c = Oa("" + a.k[1]);
              var d = c[B],
                e = document.location.protocol;
              var f;
              if (f = "https:" == d || d == e ? h : "http:" != d ? l : "http:" == e) {
                var k;
                a: {
                  var m = Oa(document.location.href);
                  if (!(c.Oa || 0 <= c.url[r]("?") || 0 <= c[qa][r]("://") || c[v] == m[v] && c[oa] == m[oa])) for (var t = "http:" == c[B] ? 80 : 443, u = M.S, b = 0; b < u[x]; b++) if (c[v] == u[b][0] && (c[oa] || t) == (u[b][1] || t) && 0 == c[qa][r](u[b][2])) {
                    k = h;
                    break a
                  }
                  k = l
                }
                f = k && !ld()
              }
              f && (a.Pa = Ha(c.url))
            }
            return h
          }
        } else a.l && (b = b.plugins_.get(a.l)), b[a.h][xa](b, a.k)
      }
    } catch (Za) {}
  };
  F.Sa = function (a, b) {
    return M.r(a, b || "")
  };
  F.Ta = function (a) {
    return M.u(a)
  };
  var yd = function () {
    function a(a, b, c, d) {
      g == f[a] && (f[a] = {});
      g == f[a][b] && (f[a][b] = []);
      f[a][b][c] = d
    }

    function b(a, b, c) {
      if (g != f[a] && g != f[a][b]) return f[a][b][c]
    }

    function c(a, b) {
      if (g != f[a] && g != f[a][b]) {
        f[a][b] = g;
        var c = h,
          d;
        for (d = 0; d < k[x]; d++) if (g != f[a][k[d]]) {
          c = l;
          break
        }
        c && (f[a] = g)
      }
    }

    function d(a) {
      var b = "",
        c = l,
        d, e;
      for (d = 0; d < k[x]; d++) if (e = a[k[d]], g != e) {
        c && (b += k[d]);
        for (var c = [], f = g, ha = g, ha = 0; ha < e[x]; ha++) if (g != e[ha]) {
          f = "";
          ha != mb && g == e[ha - 1] && (f += ha[w]() + Za);
          for (var Cd = e[ha], Jc = "", Yb = g, Kc = g, Lc = g, Yb = 0; Yb < Cd[x]; Yb++) Kc = Cd[la](Yb), Lc = Na[Kc], Jc += g != Lc ? Lc : Kc;
          f += Jc;
          c[p](f)
        }
        b += m + c[D](u) + t;
        c = l
      } else c = h;
      return b
    }
    var e = this,
      f = [],
      k = ["k", "v"],
      m = "(",
      t = ")",
      u = "*",
      Za = "!",
      Na = {
        "'": "'0"
      };
    Na[t] = "'1";
    Na[u] = "'2";
    Na[Za] = "'3";
    var mb = 1;
    e.Ra = function (a) {
      return g != f[a]
    };
    e.A = function () {
      for (var a = "", b = 0; b < f[x]; b++) g != f[b] && (a += b[w]() + d(f[b]));
      return a
    };
    e.Qa = function (a) {
      if (a == g) return e.A();
      for (var b = a.A(), c = 0; c < f[x]; c++) g != f[c] && !a.Ra(c) && (b += c[w]() + d(f[c]));
      return b
    };
    e.f = function (b, c, d) {
      if (!wd(d)) return l;
      a(b, "k", c, d);
      return h
    };
    e.o = function (b,
    c, d) {
      if (!xd(d)) return l;
      a(b, "v", c, d[w]());
      return h
    };
    e.getKey = function (a, c) {
      return b(a, "k", c)
    };
    e.N = function (a, c) {
      return b(a, "v", c)
    };
    e.L = function (a) {
      c(a, "k")
    };
    e.M = function (a) {
      c(a, "v")
    };
    T(e, "_setKey", e.f, 89);
    T(e, "_setValue", e.o, 90);
    T(e, "_getKey", e.getKey, 87);
    T(e, "_getValue", e.N, 88);
    T(e, "_clearKey", e.L, 85);
    T(e, "_clearValue", e.M, 86)
  };

  function wd(a) {
    return "string" == typeof a
  }

  function xd(a) {
    return "number" != typeof a && (g == Number || !(a instanceof Number)) || n.round(a) != a || NaN == a || a == ba ? l : h
  };
  var zd = function (a) {
    var b = W.gaGlobal;
    a && !b && (W.gaGlobal = b = {});
    return b
  }, Ad = function () {
    var a = zd(h).hid;
    a == j && (a = Da(), zd(h).hid = a);
    return a
  }, Dd = function (a) {
    a.set(Kb, Ad());
    var b = zd();
    if (b && b.dh == a.get(O)) {
      var c = b.sid;
      c && ("0" == c && I(112), a.set(Zb, c), a.get(Sb) && a.set(Wb, c));
      b = b.vid;
      a.get(Sb) && b && (b = b[z]("."), 1 * b[1] || I(112), a.set(Q, 1 * b[0]), a.set(Vb, 1 * b[1]))
    }
  };
  var Ed, Fd = function (a, b, c) {
    var d = a.c(bb, ""),
      e = a.c(P, "/"),
      f = a.b(cb, 0);
    a = a.c(Wa, "");
    X(b, c, e, d, a, f)
  }, Xc = function (a) {
    var b = a.c(bb, "");
    a.b(O, 1);
    var c = a.c(P, "/"),
      d = a.c(Wa, "");
    X("__utma", cd(a), c, b, d, a.get(cb));
    X("__utmb", dd(a), c, b, d, a.get(db));
    X("__utmc", "" + a.b(O, 1), c, b, d);
    var e = hd(a, h);
    e ? X("__utmz", e, c, b, d, a.get(eb)) : X("__utmz", "", c, b, "", -1);
    (e = fd(a, l)) ? X("__utmv", e, c, b, d, a.get(cb)) : X("__utmv", "", c, b, "", -1)
  }, Wc = function (a) {
    var b = a.b(O, 1);
    if (!bd(a, $c(b, pd("__utma")))) return a.set(Ub, h), l;
    var c = !ed(a, $c(b,
    pd("__utmb")));
    a.set(bc, c);
    id(a, $c(b, pd("__utmz")));
    gd(a, $c(b, pd("__utmv")));
    Ed = !c;
    return h
  }, Gd = function (a) {
    !Ed && !(0 < pd("__utmb")[x]) && (X("__utmd", "1", a.c(P, "/"), a.c(bb, ""), a.c(Wa, ""), 1E4), 0 == pd("__utmd")[x] && a[sa]())
  };
  var Jd = function (a) {
    a.get(Q) == g ? Hd(a) : a.get(Ub) && !a.get(Mc) ? Hd(a) : a.get(bc) && Id(a)
  }, Kd = function (a) {
    a.get(hc) && !a.get(ac) && (Id(a), a.set(fc, a.get($b)))
  }, Hd = function (a) {
    var b = a.get(ab);
    a.set(Sb, h);
    a.set(Q, Da() ^ td(a) & 2147483647);
    a.set(Tb, "");
    a.set(Vb, b);
    a.set(Wb, b);
    a.set(Zb, b);
    a.set($b, 1);
    a.set(ac, h);
    a.set(cc, 0);
    a.set(R, 10);
    a.set(dc, b);
    a.set(Fb, []);
    a.set(Ub, l);
    a.set(bc, l)
  }, Id = function (a) {
    a.set(Wb, a.get(Zb));
    a.set(Zb, a.get(ab));
    a.z($b);
    a.set(ac, h);
    a.set(cc, 0);
    a.set(R, 10);
    a.set(dc, a.get(ab));
    a.set(bc, l)
  };
  var Ld = "daum:q eniro:search_word naver:query pchome:q images.google:q google:q yahoo:p yahoo:q msn:q bing:q aol:query aol:q lycos:q lycos:query ask:q netscape:query cnn:query about:terms mamma:q voila:rdata virgilio:qs live:q baidu:wd alice:qs yandex:text najdi:q seznam:q rakuten:qt biglobe:q goo.ne:MT wp:szukaj onet:qt yam:k kvasir:q ozu:q terra:query rambler:query conduit:q babylon:q search-results:q avg:q comcast:q incredimail:q startsiden:q go.mail.ru:q search.centrum.cz:q".split(" "),
    Sd = function (a) {
      if (a.get(kb) && !a.get(Mc)) {
        for (var b = !G(a.get(ic)) || !G(a.get(nc)) || !G(a.get(S)) || !G(a.get(lc)), c = {}, d = 0; d < Md[x]; d++) {
          var e = Md[d];
          c[e] = a.get(e)
        }(d = a.get(rc)) ? (I(149), e = new Ja, Ma(e, d), d = e) : d = La(document.location.href, a.get(gb)).d;
        if (!("1" == Ia(d.get(a.get(ub))) && b)) {
          var f = d,
            k = function (b, c) {
              c = c || "-";
              var d = Ia(f.get(a.get(b)));
              return d && "-" != d ? J(d) : c
            }, d = Ia(f.get(a.get(nb))) || "-",
            e = Ia(f.get(a.get(qb))) || "-",
            m = Ia(f.get(a.get(pb))) || "-",
            t = Ia(f.get("gclsrc")) || "-",
            u = Ia(f.get("dclid")) || "-",
            Za = k(ob, "(not set)"),
            Na = k(rb, "(not set)"),
            mb = k(sb),
            k = k(tb);
          if (G(d) && G(m) && G(u) && G(e)) d = l;
          else {
            var Xb = !G(m) && !G(t),
              Xb = G(e) && (!G(u) || Xb),
              Bd = G(mb);
            if (Xb || Bd) {
              var ga = Nd(a),
                ga = La(ga, h);
              if ((ga = Od(a, ga)) && !G(ga[1] && !ga[2])) Xb && (e = ga[0]), Bd && (mb = ga[1])
            }
            Pd(a, d, e, m, t, u, Za, Na, mb, k);
            d = h
          }
          d = d || Qd(a);
          !d && (!b && a.get(ac)) && (Pd(a, g, "(direct)", g, g, g, "(direct)", "(none)", g, g), d = h);
          if (d && (a.set(hc, Rd(a, c)), b = "(direct)" == a.get(nc) && "(direct)" == a.get(jc) && "(none)" == a.get(oc), a.get(hc) || a.get(ac) && !b)) a.set(ec, a.get(ab)), a.set(fc, a.get($b)), a.z(gc)
        }
      }
    }, Qd = function (a) {
      var b = Nd(a),
        c = La(b, h);
      if (!(b != g && b != j && "" != b && "0" != b && "-" != b && 0 <= b[r]("://")) || c && -1 < c[v][r]("google") && c.d.contains("q") && "cse" == c[qa]) return l;
      if ((b = Od(a, c)) && !b[2]) return Pd(a, g, b[0], g, g, g, "(organic)", "organic", b[1], g), h;
      if (b || !a.get(ac)) return l;
      a: {
        for (var b = a.get(Bb), d = Ka(c[v]), e = 0; e < b[x]; ++e) if (-1 < d[r](b[e])) {
          a = l;
          break a
        }
        Pd(a, g, d, g, g, g, "(referral)", "referral", g, "/" + c[qa]);
        a = h
      }
      return a
    }, Od = function (a, b) {
      for (var c = a.get(zb), d = 0; d < c[x]; ++d) {
        var e = c[d][z](":");
        if (-1 < b[v][r](e[0][E]())) {
          var f = b.d.get(e[1]);
          if (f && (f = L(f), !f && -1 < b[v][r]("google.") && (f = "(not provided)"), !e[3] || -1 < b.url[r](e[3]))) {
            a: {
              for (var c = f, d = a.get(Ab), c = J(c)[E](), k = 0; k < d[x]; ++k) if (c == d[k]) {
                c = h;
                break a
              }
              c = l
            }
            return [e[2] || e[0], f, c]
          }
        }
      }
      return j
    }, Pd = function (a, b, c, d, e, f, k, m, t, u) {
      a.set(ic, b);
      a.set(nc, c);
      a.set(S, d);
      a.set(kc, e);
      a.set(lc, f);
      a.set(jc, k);
      a.set(oc, m);
      a.set(pc, t);
      a.set(qc, u)
    }, Md = [jc, ic, S, lc, nc, oc, pc, qc],
    Rd = function (a, b) {
      function c(a) {
        a = ("" + a)[z]("+")[D]("%20");
        return a = a[z](" ")[D]("%20")
      }

      function d(c) {
        var d = "" + (a.get(c) || "");
        c =
          "" + (b[c] || "");
        return 0 < d[x] && d == c
      }
      if (d(S) || d(lc)) return I(131), l;
      for (var e = 0; e < Md[x]; e++) {
        var f = Md[e],
          k = b[f] || "-",
          f = a.get(f) || "-";
        if (c(k) != c(f)) return h
      }
      return l
    }, Td = RegExp(/^https:\/\/(www\.)?google(\.com?)?(\.[a-z]{2}t?)?\/?$/i),
    Nd = function (a) {
      a = Pa(a.get(Jb), a.get(P));
      try {
        if (Td[fa](a)) return I(136), a + "?q="
      } catch (b) {
        I(145)
      }
      return a
    };
  var Ud, Vd, Wd = function (a) {
    Ud = a.c(S, "");
    Vd = a.c(kc, "")
  }, Xd = function (a) {
    var b = a.c(S, ""),
      c = a.c(kc, "");
    b != Ud && (-1 < c[r]("ds") ? a.set(mc, g) : !G(Ud) && -1 < Vd[r]("ds") && a.set(mc, Ud))
  };
  var Zd = function (a) {
    Yd(a, document.location.href) ? (a.set(Mc, h), I(12)) : a.set(Mc, l)
  }, Yd = function (a, b) {
    if (!a.get(fb)) return l;
    var c = La(b, a.get(gb)),
      d = L(c.d.get("__utma")),
      e = L(c.d.get("__utmb")),
      f = L(c.d.get("__utmc")),
      k = L(c.d.get("__utmx")),
      m = L(c.d.get("__utmz")),
      t = L(c.d.get("__utmv")),
      c = L(c.d.get("__utmk"));
    if (Yc("" + d + e + f + k + m + t) != c) {
      d = J(d);
      e = J(e);
      f = J(f);
      k = J(k);
      f = $d(d + e + f + k, m, t, c);
      if (!f) return l;
      m = f[0];
      t = f[1]
    }
    if (!bd(a, d, h)) return l;
    ed(a, e, h);
    id(a, m, h);
    gd(a, t, h);
    ae(a, k, h);
    return h
  }, ce = function (a, b, c) {
    var d;
    d = cd(a) || "-";
    var e = dd(a) || "-",
      f = "" + a.b(O, 1) || "-",
      k = be(a) || "-",
      m = hd(a, l) || "-";
    a = fd(a, l) || "-";
    var t = Yc("" + d + e + f + k + m + a),
      u = [];
    u[p]("__utma=" + d);
    u[p]("__utmb=" + e);
    u[p]("__utmc=" + f);
    u[p]("__utmx=" + k);
    u[p]("__utmz=" + m);
    u[p]("__utmv=" + a);
    u[p]("__utmk=" + t);
    d = u[D]("&");
    if (!d) return b;
    e = b[r]("#");
    if (c) return 0 > e ? b + "#" + d : b + "&" + d;
    c = "";
    f = b[r]("?");
    0 < e && (c = b[C](e), b = b[C](0, e));
    return 0 > f ? b + "?" + d + c : b + "&" + d + c
  }, $d = function (a, b, c, d) {
    for (var e = 0; 3 > e; e++) {
      for (var f = 0; 3 > f; f++) {
        if (d == Yc(a + b + c)) return I(127), [b, c];
        var k = b[q](/ /g, "%20"),
          m = c[q](/ /g, "%20");
        if (d == Yc(a + k + m)) return I(128), [k, m];
        k = k[q](/\+/g, "%20");
        m = m[q](/\+/g, "%20");
        if (d == Yc(a + k + m)) return I(129), [k, m];
        try {
          var t = b[na]("utmctr=(.*?)(?:\\|utm|$)");
          if (t && 2 == t[x] && (k = b[q](t[1], H(J(t[1]))), d == Yc(a + k + c))) return I(139), [k, c]
        } catch (u) {}
        b = J(b)
      }
      c = J(c)
    }
  };
  var de = "|",
    fe = function (a, b, c, d, e, f, k, m, t) {
      var u = ee(a, b);
      u || (u = {}, a.get(Cb)[p](u));
      u.id_ = b;
      u.affiliation_ = c;
      u.total_ = d;
      u.tax_ = e;
      u.shipping_ = f;
      u.city_ = k;
      u.state_ = m;
      u.country_ = t;
      u.items_ = u.items_ || [];
      return u
    }, ge = function (a, b, c, d, e, f, k) {
      a = ee(a, b) || fe(a, b, "", 0, 0, 0, "", "", "");
      var m;
      a: {
        if (a && a.items_) {
          m = a.items_;
          for (var t = 0; t < m[x]; t++) if (m[t].sku_ == c) {
            m = m[t];
            break a
          }
        }
        m = j
      }
      t = m || {};
      t.transId_ = b;
      t.sku_ = c;
      t.name_ = d;
      t.category_ = e;
      t.price_ = f;
      t.quantity_ = k;
      m || a.items_[p](t);
      return t
    }, ee = function (a, b) {
      for (var c = a.get(Cb), d = 0; d < c[x]; d++) if (c[d].id_ == b) return c[d];
      return j
    };
  var he, ie = function (a) {
    if (!he) {
      var b;
      b = document.location.hash;
      var c = W[s],
        d = /^#?gaso=([^&]*)/;
      if (c = (b = (b = b && b[na](d) || c && c[na](d)) ? b[1] : L(pd("GASO"))) && b[na](/^(?:[|!]([-0-9a-z.]{1,40})[|!])?([-.\w]{10,1200})$/i)) Fd(a, "GASO", "" + b), M._gasoDomain = a.get(bb), M._gasoCPath = a.get(P), a = c[1], Ha("https://www.google.com/analytics/web/inpage/pub/inpage.js?" + (a ? "prefix=" + a + "&" : "") + Da(), "_gasojs");
      he = h
    }
  };
  var ae = function (a, b, c) {
    c && (b = J(b));
    c = a.b(O, 1);
    b = b[z](".");
    !(2 > b[x]) && /^\d+$/ [fa](b[0]) && (b[0] = "" + c, Fd(a, "__utmx", b[D](".")))
  }, be = function (a, b) {
    var c = $c(a.get(O), pd("__utmx"));
    "-" == c && (c = "");
    return b ? H(c) : c
  };
  var ke = function (a, b) {
    var c = n.min(a.b(Dc, 0), 100);
    if (a.b(Q, 0) % 100 >= c) return l;
    a: {
      if (c = (c = W.performance || W.webkitPerformance) && c.timing) {
        var d = c.navigationStart;
        if (0 == d) I(133);
        else {
          c = [c.loadEventStart - d, c.domainLookupEnd - c.domainLookupStart, c.connectEnd - c.connectStart, c.responseStart - c.requestStart, c.responseEnd - c.responseStart, c.fetchStart - d, c.domInteractive - d, c.domContentLoadedEventStart - d];
          break a
        }
      }
      c = g
    }
    c || (W.top != W ? c = g : (d = (c = W.external) && c.onloadT, c && !c.isValidLoadTime && (d = g), 2147483648 < d && (d = g),
    0 < d && c.setPageReadyTime(), c = d == g ? g : [d]));
    if (c == g) return l;
    d = c[0];
    if (d == g || d == ba || isNaN(d)) return l;
    if (0 < d) {
      a: {
        for (d = 1; d < c[x]; d++) if (isNaN(c[d]) || c[d] == ba || 0 > c[d]) {
          d = l;
          break a
        }
        d = h
      }
      d ? b(je(c)) : b(je(c[ia](0, 1)))
    } else Fa(W, "load", function () {
      ke(a, b)
    }, l);
    return h
  }, me = function (a, b, c, d) {
    var e = new yd;
    e.f(14, 90, b[C](0, 64));
    e.f(14, 91, a[C](0, 64));
    e.f(14, 92, "" + le(c));
    d != g && e.f(14, 93, d[C](0, 64));
    e.o(14, 90, c);
    return e
  }, le = function (a) {
    return isNaN(a) || 0 > a ? 0 : 5E3 > a ? 10 * n[ka](a / 10) : 5E4 > a ? 100 * n[ka](a / 100) : 41E5 > a ? 1E3 * n[ka](a / 1E3) : 41E5
  }, je = function (a) {
    for (var b = new yd, c = 0; c < a[x]; c++) b.f(14, c + 1, "" + le(a[c])), b.o(14, c + 1, a[c]);
    return b
  };
  var U = function (a, b, c) {
    function d(a) {
      return function (b) {
        if ((b = b.get(Nc)[a]) && b[x]) for (var c = {
          type: a,
          target: e,
          stopPropagation: function () {
            throw "aborted";
          }
        }, d = 0; d < b[x]; d++) b[d].call(e, c)
      }
    }
    var e = this;
    this.a = new Zc;
    this.get = function (a) {
      return this.a.get(a)
    };
    this.set = function (a, b, c) {
      this.a.set(a, b, c)
    };
    this.set(Wa, b || "UA-XXXXX-X");
    this.set($a, a || "");
    this.set(Ya, c || "");
    this.set(ab, n.round((new Date).getTime() / 1E3));
    this.set(P, "/");
    this.set(cb, 63072E6);
    this.set(eb, 15768E6);
    this.set(db, 18E5);
    this.set(fb, l);
    this.set(yb, 50);
    this.set(gb, l);
    this.set(hb, h);
    this.set(ib, h);
    this.set(jb, h);
    this.set(kb, h);
    this.set(lb, h);
    this.set(ob, "utm_campaign");
    this.set(nb, "utm_id");
    this.set(pb, "gclid");
    this.set(qb, "utm_source");
    this.set(rb, "utm_medium");
    this.set(sb, "utm_term");
    this.set(tb, "utm_content");
    this.set(ub, "utm_nooverride");
    this.set(vb, 100);
    this.set(Dc, 1);
    this.set(Ec, l);
    this.set(wb, "/__utm.gif");
    this.set(xb, 1);
    this.set(Cb, []);
    this.set(Fb, []);
    this.set(zb, Ld[ia](0));
    this.set(Ab, []);
    this.set(Bb, []);
    this.B("auto");
    this.set(Jb,
    K.referrer);
    a = this.a;
    try {
      var f = La(document.location.href, l),
        k = da(Ia(f.d.get("utm_referrer"))) || "";
      k && a.set(Jb, k);
      var m = W.gaData && W.gaData.expId;
      m || (m = da(L(f.d.get("utm_expid"))) || "");
      m && a.set(Oc, "" + m)
    } catch (t) {
      I(146)
    }
    this.set(Nc, {
      hit: [],
      load: []
    });
    this.a.g("0", Zd);
    this.a.g("1", Wd);
    this.a.g("2", Jd);
    this.a.g("3", Sd);
    this.a.g("4", Xd);
    this.a.g("5", Kd);
    this.a.g("6", d("load"));
    this.a.g("7", ie);
    this.a.e("A", kd);
    this.a.e("B", md);
    this.a.e("C", Jd);
    this.a.e("D", jd);
    this.a.e("E", Tc);
    this.a.e("F", ne);
    this.a.e("G", Gd);
    this.a.e("H",
    nd);
    this.a.e("I", ud);
    this.a.e("J", Dd);
    this.a.e("K", d("hit"));
    this.a.e("L", oe);
    this.a.e("M", pe);
    0 === this.get(ab) && I(111);
    this.a.T();
    this.H = g
  };
  F = U[y];
  F.m = function () {
    var a = this.get(Db);
    a || (a = new yd, this.set(Db, a));
    return a
  };
  F.La = function (a) {
    for (var b in a) {
      var c = a[b];
      a.hasOwnProperty(b) && this.set(b, c, h)
    }
  };
  F.K = function (a) {
    if (this.get(Ec)) return l;
    var b = this,
      c = ke(this.a, function (c) {
        b.set(Hb, a, h);
        b.t(c)
      });
    this.set(Ec, c);
    return c
  };
  F.Fa = function (a) {
    a && Ba(a) ? (I(13), this.set(Hb, a, h)) : "object" === typeof a && a !== j && this.La(a);
    this.H = a = this.get(Hb);
    this.a.j("page");
    this.K(a)
  };
  F.F = function (a, b, c, d, e) {
    if ("" == a || (!wd(a) || "" == b || !wd(b)) || c != g && !wd(c) || d != g && !xd(d)) return l;
    this.set(wc, a, h);
    this.set(xc, b, h);
    this.set(yc, c, h);
    this.set(zc, d, h);
    this.set(vc, !! e, h);
    this.a.j("event");
    return h
  };
  F.Ha = function (a, b, c, d, e) {
    var f = this.a.b(Dc, 0);
    1 * e === e && (f = e);
    if (this.a.b(Q, 0) % 100 >= f) return l;
    c = 1 * ("" + c);
    if ("" == a || (!wd(a) || "" == b || !wd(b) || !xd(c) || isNaN(c) || 0 > c || 0 > f || 100 < f) || d != g && ("" == d || !wd(d))) return l;
    this.t(me(a, b, c, d));
    return h
  };
  F.Ga = function (a, b, c, d) {
    if (!a || !b) return l;
    this.set(Ac, a, h);
    this.set(Bc, b, h);
    this.set(Cc, c || document.location.href, h);
    d && this.set(Hb, d, h);
    this.a.j("social");
    return h
  };
  F.Ea = function () {
    this.set(Dc, 10);
    this.K(this.H)
  };
  F.Ia = function () {
    this.a.j("trans")
  };
  F.t = function (a) {
    this.set(Eb, a, h);
    this.a.j("event")
  };
  F.ia = function (a) {
    this.v();
    var b = this;
    return {
      _trackEvent: function (c, d, e) {
        I(91);
        b.F(a, c, d, e)
      }
    }
  };
  F.ma = function (a) {
    return this.get(a)
  };
  F.xa = function (a, b) {
    if (a) if (Ba(a)) this.set(a, b);
    else if ("object" == typeof a) for (var c in a) a.hasOwnProperty(c) && this.set(c, a[c])
  };
  F.addEventListener = function (a, b) {
    var c = this.get(Nc)[a];
    c && c[p](b)
  };
  F.removeEventListener = function (a, b) {
    for (var c = this.get(Nc)[a], d = 0; c && d < c[x]; d++) if (c[d] == b) {
      c.splice(d, 1);
      break
    }
  };
  F.qa = function () {
    return "5.3.8"
  };
  F.B = function (a) {
    this.get(hb);
    a = "auto" == a ? Ka(K.domain) : !a || "-" == a || "none" == a ? "" : a[E]();
    this.set(bb, a)
  };
  F.va = function (a) {
    this.set(hb, !! a)
  };
  F.na = function (a, b) {
    return ce(this.a, a, b)
  };
  F.link = function (a, b) {
    if (this.a.get(fb) && a) {
      var c = ce(this.a, a, b);
      document.location.href = c
    }
  };
  F.ua = function (a, b) {
    this.a.get(fb) && (a && a.action) && (a.action = ce(this.a, a.action, b))
  };
  F.za = function () {
    this.v();
    var a = this.a,
      b = K.getElementById ? K.getElementById("utmtrans") : K.utmform && K.utmform.utmtrans ? K.utmform.utmtrans : j;
    if (b && b[ma]) {
      a.set(Cb, []);
      for (var b = b[ma][z]("UTM:"), c = 0; c < b[x]; c++) {
        b[c] = Ca(b[c]);
        for (var d = b[c][z](de), e = 0; e < d[x]; e++) d[e] = Ca(d[e]);
        "T" == d[0] ? fe(a, d[1], d[2], d[3], d[4], d[5], d[6], d[7], d[8]) : "I" == d[0] && ge(a, d[1], d[2], d[3], d[4], d[5], d[6])
      }
    }
  };
  F.$ = function (a, b, c, d, e, f, k, m) {
    return fe(this.a, a, b, c, d, e, f, k, m)
  };
  F.Y = function (a, b, c, d, e, f) {
    return ge(this.a, a, b, c, d, e, f)
  };
  F.Aa = function (a) {
    de = a || "|"
  };
  F.ea = function () {
    this.set(Cb, [])
  };
  F.wa = function (a, b, c, d) {
    var e = this.a;
    if (0 >= a || a > e.get(yb)) a = l;
    else if (!b || !c || 128 < b[x] + c[x]) a = l;
    else {
      1 != d && 2 != d && (d = 3);
      var f = {};
      ea(f, b);
      f.value = c;
      f.scope = d;
      e.get(Fb)[a] = f;
      a = h
    }
    a && this.a.n();
    return a
  };
  F.ka = function (a) {
    this.a.get(Fb)[a] = g;
    this.a.n()
  };
  F.ra = function (a) {
    return (a = this.a.get(Fb)[a]) && 1 == a[ta] ? a[ma] : g
  };
  F.Ca = function (a, b, c) {
    this.m().f(a, b, c)
  };
  F.Da = function (a, b, c) {
    this.m().o(a, b, c)
  };
  F.sa = function (a, b) {
    return this.m().getKey(a, b)
  };
  F.ta = function (a, b) {
    return this.m().N(a, b)
  };
  F.fa = function (a) {
    this.m().L(a)
  };
  F.ga = function (a) {
    this.m().M(a)
  };
  F.ja = function () {
    return new yd
  };
  F.W = function (a) {
    a && this.get(Ab)[p](a[E]())
  };
  F.ba = function () {
    this.set(Ab, [])
  };
  F.X = function (a) {
    a && this.get(Bb)[p](a[E]())
  };
  F.ca = function () {
    this.set(Bb, [])
  };
  F.Z = function (a, b, c, d, e) {
    if (a && b) {
      a = [a, b[E]()][D](":");
      if (d || e) a = [a, d, e][D](":");
      d = this.get(zb);
      d.splice(c ? 0 : d[x], 0, a)
    }
  };
  F.da = function () {
    this.set(zb, [])
  };
  F.ha = function (a) {
    this.a[ja]();
    var b = this.get(P),
      c = be(this.a);
    this.set(P, a);
    this.a.n();
    ae(this.a, c);
    this.set(P, b)
  };
  F.ya = function (a, b) {
    if (0 < a && 5 >= a && Ba(b) && "" != b) {
      var c = this.get(Fc) || [];
      c[a] = b;
      this.set(Fc, c)
    }
  };
  F.V = function (a) {
    a = "" + a;
    if (a[na](/^[A-Za-z0-9]{1,5}$/)) {
      var b = this.get(Ic) || [];
      b[p](a);
      this.set(Ic, b)
    }
  };
  F.v = function () {
    this.a[ja]()
  };
  F.Ba = function (a) {
    a && "" != a && (this.set(Tb, a), this.a.j("var"))
  };
  var ne = function (a) {
    "trans" !== a.get(sc) && 500 <= a.b(cc, 0) && a[sa]();
    if ("event" === a.get(sc)) {
      var b = (new Date).getTime(),
        c = a.b(dc, 0),
        d = a.b(Zb, 0),
        c = n[ka](1 * ((b - (c != d ? c : 1E3 * c)) / 1E3));
      0 < c && (a.set(dc, b), a.set(R, n.min(10, a.b(R, 0) + c)));
      0 >= a.b(R, 0) && a[sa]()
    }
  }, pe = function (a) {
    "event" === a.get(sc) && a.set(R, n.max(0, a.b(R, 10) - 1))
  };
  var qe = function () {
    var a = [];
    this.add = function (b, c, d) {
      d && (c = H("" + c));
      a[p](b + "=" + c)
    };
    this.toString = function () {
      return a[D]("&")
    }
  }, re = function (a, b) {
    (b || 2 != a.get(xb)) && a.z(cc)
  }, se = function (a, b) {
    b.add("utmwv", "5.3.8");
    b.add("utms", a.get(cc));
    b.add("utmn", Da());
    var c = document.location.hostname;
    G(c) || b.add("utmhn", c, h);
    c = a.get(vb);
    100 != c && b.add("utmsp", c, h)
  }, te = function (a, b) {
    b.add("utmac", Ca(a.get(Wa)));
    a.get(Oc) && b.add("utmxkey", a.get(Oc), h);
    a.get(vc) && b.add("utmni", 1);
    var c = a.get(Ic);
    c && 0 < c[x] && b.add("utmdid", c[D]("."));
    var c = function (a, b) {
      b && d[p](a + "=" + b + ";")
    }, d = [];
    c("__utma", cd(a));
    c("__utmz", hd(a, l));
    c("__utmv", fd(a, h));
    c("__utmx", be(a));
    b.add("utmcc", d[D]("+"), h);
    a.get(Xa) !== l && (a.get(Xa) || M.w) && b.add("aip", 1);
    b.add("utmu", od.Xa())
  }, ue = function (a, b) {
    for (var c = a.get(Fc) || [], d = [], e = 1; e < c[x]; e++) c[e] && d[p](e + ":" + H(c[e][q](/%/g, "%25")[q](/:/g, "%3A")[q](/,/g, "%2C")));
    d[x] && b.add("utmpg", d[D](","))
  }, ve = function (a, b) {
    a.get(ib) && (b.add("utmcs", a.get(Qb), h), b.add("utmsr", a.get(Lb)), a.get(Rb) && b.add("utmvp", a.get(Rb)),
    b.add("utmsc", a.get(Mb)), b.add("utmul", a.get(Pb)), b.add("utmje", a.get(Nb)), b.add("utmfl", a.get(Ob), h))
  }, we = function (a, b) {
    a.get(lb) && a.get(Ib) && b.add("utmdt", a.get(Ib), h);
    b.add("utmhid", a.get(Kb));
    b.add("utmr", Pa(a.get(Jb), a.get(P)), h);
    b.add("utmp", (function () {

      // hack in our cleaned hash as the page path
      var path = isChromeApp ? '/' : location.pathname;
      var hash = Strings.sanitizeHash(location.hash);
      // original: return H(a.get(Hb), h);
      // our sanitized hash:
      return path + hash;
    })(), h)
  }, xe = function (a, b) {
    for (var c = a.get(Db), d = a.get(Eb), e = a.get(Fb) || [], f = 0; f < e[x]; f++) {
      var k = e[f];
      k && (c || (c = new yd), c.f(8, f, k[s]), c.f(9, f, k[ma]), 3 != k[ta] && c.f(11, f, "" + k[ta]))
    }!G(a.get(wc)) && !G(a.get(xc), h) && (c || (c = new yd), c.f(5, 1, a.get(wc)),
    c.f(5, 2, a.get(xc)), e = a.get(yc), e != g && c.f(5, 3, e), e = a.get(zc), e != g && c.o(5, 1, e));
    c ? b.add("utme", c.Qa(d), h) : d && b.add("utme", d.A(), h)
  }, ye = function (a, b, c) {
    var d = new qe;
    re(a, c);
    se(a, d);
    d.add("utmt", "tran");
    d.add("utmtid", b.id_, h);
    d.add("utmtst", b.affiliation_, h);
    d.add("utmtto", b.total_, h);
    d.add("utmttx", b.tax_, h);
    d.add("utmtsp", b.shipping_, h);
    d.add("utmtci", b.city_, h);
    d.add("utmtrg", b.state_, h);
    d.add("utmtco", b.country_, h);
    xe(a, d);
    ve(a, d);
    we(a, d);
    (b = a.get(Gb)) && d.add("utmcu", b, h);
    c || (ue(a, d), te(a, d));
    return d[w]()
  },
  ze = function (a, b, c) {
    var d = new qe;
    re(a, c);
    se(a, d);
    d.add("utmt", "item");
    d.add("utmtid", b.transId_, h);
    d.add("utmipc", b.sku_, h);
    d.add("utmipn", b.name_, h);
    d.add("utmiva", b.category_, h);
    d.add("utmipr", b.price_, h);
    d.add("utmiqt", b.quantity_, h);
    xe(a, d);
    ve(a, d);
    we(a, d);
    (b = a.get(Gb)) && d.add("utmcu", b, h);
    c || (ue(a, d), te(a, d));
    return d[w]()
  }, Ae = function (a, b) {
    var c = a.get(sc);
    if ("page" == c) c = new qe, re(a, b), se(a, c), xe(a, c), ve(a, c), we(a, c), b || (ue(a, c), te(a, c)), c = [c[w]()];
    else if ("event" == c) c = new qe, re(a, b), se(a, c),
    c.add("utmt", "event"), xe(a, c), ve(a, c), we(a, c), b || (ue(a, c), te(a, c)), c = [c[w]()];
    else if ("var" == c) c = new qe, re(a, b), se(a, c), c.add("utmt", "var"), !b && te(a, c), c = [c[w]()];
    else if ("trans" == c) for (var c = [], d = a.get(Cb), e = 0; e < d[x]; ++e) {
      c[p](ye(a, d[e], b));
      for (var f = d[e].items_, k = 0; k < f[x]; ++k) c[p](ze(a, f[k], b))
    } else "social" == c ? b ? c = [] : (c = new qe, re(a, b), se(a, c), c.add("utmt", "social"), c.add("utmsn", a.get(Ac), h), c.add("utmsa", a.get(Bc), h), c.add("utmsid", a.get(Cc), h), xe(a, c), ve(a, c), we(a, c), ue(a, c), te(a, c), c = [c[w]()]) :
      "feedback" == c ? b ? c = [] : (c = new qe, re(a, b), se(a, c), c.add("utmt", "feedback"), c.add("utmfbid", a.get(Gc), h), c.add("utmfbpr", a.get(Hc), h), xe(a, c), ve(a, c), we(a, c), ue(a, c), te(a, c), c = [c[w]()]) : c = [];
    return c
  }, oe = function (a) {
    var b, c = a.get(xb),
      d = a.get(uc),
      e = d && d.Ua,
      f = 0;
    if (0 == c || 2 == c) {
      var k = a.get(wb) + "?";
      b = Ae(a, h);
      for (var m = 0, t = b[x]; m < t; m++) Sa(b[m], e, k, h), f++
    }
    if (1 == c || 2 == c) {
      b = Ae(a);
      m = 0;
      for (t = b[x]; m < t; m++) try {
        Sa(b[m], e), f++
      } catch (u) {
        u && Ra(u[s], g, u.message)
      }
    }
    d && (d.q = f)
  };
  var Be = function () {
    return "https:" == document.location.protocol || M.G || isChromeApp ? "https://ssl.google-analytics.com" : "http://www.google-analytics.com"
  }, Ce = function (a) {
    ea(this, "len");
    this.message = a + "-8192"
  }, De = function (a) {
    ea(this, "ff2post");
    this.message = a + "-2036"
  }, Sa = function (a, b, c, d) {
    b = b || Ea;
    if (!isChromeApp && (d || 2036 >= a[x])) {
      var e = b;
      b = c || Be() + "/__utm.gif?";
      var f = new Image(1, 1);
      f.src = b + a;
      f.onload = function () {
        f.onload = j;
        f.onerror = j;
        e()
      };
      f.onerror = function () {
        f.onload = j;
        f.onerror = j;
        e()
      }
    } else if (8192 >= a[x] || isChromeApp) {
      var k = b;
      if (0 <= W[ya].userAgent[r]("Firefox") && ![].reduce) throw new De(a[x]);
      var m;
      b = Be() + "/p/__utm.gif";
      if (c = W.XDomainRequest) m = new c, m.open("POST", b);
      else if (c = W.XMLHttpRequest) c = new c, "withCredentials" in c && (m = c, m.open("POST", b, h), m.setRequestHeader("Content-Type", "text/plain"));
      m ? (m.onreadystatechange = function () {
        4 == m.readyState && (k(), m = j)
      }, m.send(a), b = h) : b = g;
      b || Ee(a, k)
    } else throw new Ce(a[x]);
  }, Ee = function (a, b) {
    if (K.body) {
      a = aa(a);
      try {
        var c = K[pa]('<iframe name="' + a + '"></iframe>')
      } catch (d) {
        c = K[pa]("iframe"), ea(c, a)
      }
      c.height = "0";
      c.width = "0";
      c.style.display = "none";
      c.style.visibility = "hidden";
      var e = document.location,
        e = Be() + "/u/post_iframe.html#" + aa(e[B] + "//" + e[v] + "/favicon.ico"),
        f = function () {
          c.src = "";
          c.parentNode && c.parentNode.removeChild(c)
        };
      Fa(W, "beforeunload", f);
      var k = l,
        m = 0,
        t = function () {
          if (!k) {
            try {
              if (9 < m || c.contentWindow[A][v] == document.location[v]) {
                k = h;
                f();
                Ga(W, "beforeunload", f);
                b();
                return
              }
            } catch (a) {}
            m++;
            ca(t, 200)
          }
        };
      Fa(c, "load", t);
      K.body.appendChild(c);
      c.src = e
    } else ca(function () {
      Ee(a, b)
    }, 100)
  };
  var $ = function () {
    this.G = this.w = l;
    this.C = {};
    this.D = [];
    this.U = 0;
    this.S = [
      ["www.google-analytics.com", "", "/plugins/"]
    ];
    this._gasoCPath = this._gasoDomain = g;
    var a = function (a, c, d) {
      T($[y], a, c, d)
    };
    a("_createTracker", $[y].r, 55);
    a("_getTracker", $[y].oa, 0);
    a("_getTrackerByName", $[y].u, 51);
    a("_getTrackers", $[y].pa, 130);
    a("_anonymizeIp", $[y].aa, 16);
    a("_forceSSL", $[y].la, 125);
    a("_getPlugin", Pc, 120);
    a = function (a, c, d) {
      T(U[y], a, c, d)
    };
    Qc("_getName", $a, 58);
    Qc("_getAccount", Wa, 64);
    Qc("_visitCode", Q, 54);
    Qc("_getClientInfo",
    ib, 53, 1);
    Qc("_getDetectTitle", lb, 56, 1);
    Qc("_getDetectFlash", jb, 65, 1);
    Qc("_getLocalGifPath", wb, 57);
    Qc("_getServiceMode", xb, 59);
    V("_setClientInfo", ib, 66, 2);
    V("_setAccount", Wa, 3);
    V("_setNamespace", Ya, 48);
    V("_setAllowLinker", fb, 11, 2);
    V("_setDetectFlash", jb, 61, 2);
    V("_setDetectTitle", lb, 62, 2);
    V("_setLocalGifPath", wb, 46, 0);
    V("_setLocalServerMode", xb, 92, g, 0);
    V("_setRemoteServerMode", xb, 63, g, 1);
    V("_setLocalRemoteServerMode", xb, 47, g, 2);
    V("_setSampleRate", vb, 45, 1);
    V("_setCampaignTrack", kb, 36, 2);
    V("_setAllowAnchor",
    gb, 7, 2);
    V("_setCampNameKey", ob, 41);
    V("_setCampContentKey", tb, 38);
    V("_setCampIdKey", nb, 39);
    V("_setCampMediumKey", rb, 40);
    V("_setCampNOKey", ub, 42);
    V("_setCampSourceKey", qb, 43);
    V("_setCampTermKey", sb, 44);
    V("_setCampCIdKey", pb, 37);
    V("_setCookiePath", P, 9, 0);
    V("_setMaxCustomVariables", yb, 0, 1);
    V("_setVisitorCookieTimeout", cb, 28, 1);
    V("_setSessionCookieTimeout", db, 26, 1);
    V("_setCampaignCookieTimeout", eb, 29, 1);
    V("_setReferrerOverride", Jb, 49);
    V("_setSiteSpeedSampleRate", Dc, 132);
    a("_trackPageview", U[y].Fa, 1);
    a("_trackEvent",
    U[y].F, 4);
    a("_trackPageLoadTime", U[y].Ea, 100);
    a("_trackSocial", U[y].Ga, 104);
    a("_trackTrans", U[y].Ia, 18);
    a("_sendXEvent", U[y].t, 78);
    a("_createEventTracker", U[y].ia, 74);
    a("_getVersion", U[y].qa, 60);
    a("_setDomainName", U[y].B, 6);
    a("_setAllowHash", U[y].va, 8);
    a("_getLinkerUrl", U[y].na, 52);
    a("_link", U[y].link, 101);
    a("_linkByPost", U[y].ua, 102);
    a("_setTrans", U[y].za, 20);
    a("_addTrans", U[y].$, 21);
    a("_addItem", U[y].Y, 19);
    a("_clearTrans", U[y].ea, 105);
    a("_setTransactionDelim", U[y].Aa, 82);
    a("_setCustomVar", U[y].wa,
    10);
    a("_deleteCustomVar", U[y].ka, 35);
    a("_getVisitorCustomVar", U[y].ra, 50);
    a("_setXKey", U[y].Ca, 83);
    a("_setXValue", U[y].Da, 84);
    a("_getXKey", U[y].sa, 76);
    a("_getXValue", U[y].ta, 77);
    a("_clearXKey", U[y].fa, 72);
    a("_clearXValue", U[y].ga, 73);
    a("_createXObj", U[y].ja, 75);
    a("_addIgnoredOrganic", U[y].W, 15);
    a("_clearIgnoredOrganic", U[y].ba, 97);
    a("_addIgnoredRef", U[y].X, 31);
    a("_clearIgnoredRef", U[y].ca, 32);
    a("_addOrganic", U[y].Z, 14);
    a("_clearOrganic", U[y].da, 70);
    a("_cookiePathCopy", U[y].ha, 30);
    a("_get", U[y].ma,
    106);
    a("_set", U[y].xa, 107);
    a("_addEventListener", U[y].addEventListener, 108);
    a("_removeEventListener", U[y].removeEventListener, 109);
    a("_addDevId", U[y].V);
    a("_getPlugin", Pc, 122);
    a("_setPageGroup", U[y].ya, 126);
    a("_trackTiming", U[y].Ha, 124);
    a("_initData", U[y].v, 2);
    a("_setVar", U[y].Ba, 22);
    V("_setSessionTimeout", db, 27, 3);
    V("_setCookieTimeout", eb, 25, 3);
    V("_setCookiePersistence", cb, 24, 1);
    a("_setAutoTrackOutbound", Ea, 79);
    a("_setTrackOutboundSubdomains", Ea, 81);
    a("_setHrefExamineLimit", Ea, 80)
  };
  F = $[y];
  F.oa = function (a, b) {
    return this.r(a, g, b)
  };
  F.r = function (a, b, c) {
    b && I(23);
    c && I(67);
    b == g && (b = "~" + M.U++);
    a = new U(b, a, c);
    M.C[b] = a;
    M.D[p](a);
    return a
  };
  F.u = function (a) {
    a = a || "";
    return M.C[a] || M.r(g, a)
  };
  F.pa = function () {
    return M.D[ia](0)
  };
  F.aa = function () {
    this.w = h
  };
  F.la = function () {
    this.G = h
  };
  var Fe = function (a) {
    if ("prerender" == K.webkitVisibilityState) return l;
    a();
    return h
  };
  var M = new $;
  var Ge = W._gat;
  Ge && Aa(Ge._getTracker) ? M = Ge : W._gat = M;
  var Z = new Y;
  var He = function () {
    var a = _gaq,
      b = l;
    if (a && Aa(a[p]) && (b = "[object Array]" == Object[y][w].call(Object(a)), !b)) {
      Z = a;
      return
    }
    b && Z[p][xa](Z, a)
  };

  function Yc(a) {
    var b = 1,
      c = 0,
      d;
    if (a) {
      b = 0;
      for (d = a[x] - 1; 0 <= d; d--) c = a.charCodeAt(d), b = (b << 6 & 268435455) + c + (c << 14), c = b & 266338304, b = 0 != c ? b ^ c >> 21 : b
    }
    return b
  };

  function init (account) {

    if(!/^UA\-/.test(account)) {

      throw new Error('invalid account passed to ga.js')
    }

    _gaq.push(['_setAccount', account]);

    self.gaq = Z;

    if (!Fe(He)) {
      I(123);
      var Ie = l,
        Je = function () {
          !Ie && Fe(He) && (Ie = h, Ga(K, "webkitvisibilitychange", Je))
        };
      Fa(K, "webkitvisibilitychange", Je)
    };
  }

  var self = {
    'init': init
  };

  return self;
});
define('helpers/GoogleAnalytics',[

  'application/runtime',

  'wunderbits/helpers/strings',

  'vendor/ga',

  'wunderbits/WBSingleton'

], function (runtime, Strings, GA, WBSingleton) {

  

  var _ = runtime._;
  var config = runtime.config;

  var _lastTrackedPage = null;

  return WBSingleton.extend({

    'init': function () {

      var self = this;

      if (!config.analytics || !config.analytics.ga) {
        return;
      }

      // Set the site ID
      GA.init(config.analytics.ga);
      GA.gaq.push(['_setDomainName', 'wunderlist.com']);
      GA.gaq.push(['_setAllowLinker', true]);

      // track custom events
      runtime.on('analytics', self._trackEvent);

      // track pages
      window.onhashchange = self._trackGAPageView;

      var path = runtime.env.isPackagedApp() ? '/' : location.pathname;
      var startPage = path + Strings.sanitizeHash(location.hash);
      GA.gaq.push(['_trackPageview', startPage]);
      _lastTrackedPage = startPage;
    },

    '_trackEvent': function () {

      var args = _.toArray(arguments);
      if (!_.isArray(args[0])) {

        return;
      }

      var evnt = args.shift();

      // Track on Google Analytics, evnt[0] as event category
      // & evnt[1] as event action, use arguments for label and values
      if (evnt[0] === 'APIBenchmark-Latency' || evnt[0] === 'APIBenchmark-DownloadTime') {

        evnt[1] = decodeURIComponent(evnt[1]);
      }

      var gaq = ['_trackEvent', evnt[0], evnt[1] || ''];
      if (args.length) {
        // argument order position is important
        // values must be proceded by label (even if undefined)
        // values can only be numbers, anything else is rejected
        if (args.length === 1) {
          _.isNumber(args[0]) ? args.unshift(undefined) : args.push(undefined);
        }
        // don't count event in bounce rates
        args[2] = false;

        gaq.push.apply(gaq, args);
      }

      GA.gaq.push(gaq);
    },

    '_trackGAPageView': function () {

      var hash = Strings.sanitizeHash(location.hash);
      var page = location.pathname + hash;

      if (page !== _lastTrackedPage) {

        GA.gaq.push(['_trackPageview', page]);
        _lastTrackedPage = page;
      }
    }
  });
});
/*

  RULES AND KEYS FOR IYF 4

  campaign_iyf4_notification // key set by Torsten to trigger experiment

  campaign_iyf4_notification_variation // A, B, C or D

  campaign_iyf4_notification_last_date
  campaign_iyf4_invited_friends

*/


define('helpers/iyfRules',[

  'application/runtime',

  'wunderbits/helpers/date',

  'wunderbits/WBEventEmitter',

  'vendor/moment'

], function (runtime, DateHelper, WBEventEmitter, moment, undefined) {

  

  var _super = WBEventEmitter.prototype;

  return WBEventEmitter.extend({

    'initialize': function (options) {

      var self = this;
      options = options || {};
      _super.initialize.apply(self, arguments);

      if (runtime.env.isPackagedApp()) {
        return;
      }

      runtime.user.authorization.done(function () {

        self.bindOnceTo(runtime, 'sync:end', self.start);
      });
    },

    'start': function () {

      var self = this;

      if (runtime.user.isPro()) {
        return;
      }

      var isNotificationCampaign = runtime.settings.attributes.campaign_iyf4_notification === 'true';

      if (isNotificationCampaign) {

        self.handleNotificationCampaign();
        self.bindTo(runtime.user, 'change:product', self.handleProductChange);
      }
      else {

        self.bindTo(runtime.settings, 'change:campaign_iyf4_notification', self.start);
      }
    },

    'handleNotificationCampaign': function () {

      var lastDay = runtime.settings.attributes.campaign_iyf4_notification_last_date;

      if (!lastDay) {

        runtime.publish('iyf:notification');
        runtime.settings.save({
          'campaign_iyf4_notification_last_date': DateHelper.getServerNow()
        });

        runtime.trigger('analytics:campaignIyf4Notification:NotificationShown');
      }
    },

    'handleProductChange': function () {

      if (runtime.user.isPro()) {
        runtime.trigger('iyf:removeNotification');
      }
    }
  });
});
define('helpers/PrintHelper',[

  'application/runtime',
  'wunderbits/WBSingleton'

], function (runtime, WBSingleton, undefined) {

  

  var _ = runtime._;

  return WBSingleton.extend({

    init: function () {

      var self = this;

      self._debouncedBeforePrint = _.debounce(self.beforePrint, 500, true);
      //self._debouncedAfterPrint = _.debounce(self.afterPrint, 500, true);

      if (runtime.env.isFirefox() || runtime.env.isIE()) {

        // Only works in firefox and ie
        window.onbeforeprint = self._debouncedBeforePrint;
        //window.onafterprint = self._debouncedAfterPrint;
      }
      else if (window.matchMedia) {

        // All other browsers fake onbeforeprint
        var mediaQueryList = window.matchMedia('print');

        var callback = function (mql) {

          if (mql.matches) {

            self._debouncedBeforePrint();

          } else {

            //self._debouncedAfterPrint();
          }
        };

        mediaQueryList.addListener(callback);
      }
    },

    beforePrint: function() {

      runtime.trigger('print:start');
    },

    // afterPrint: function() {

    // }
  });
});
define('helpers/socialPrompts',[

  'application/runtime',

  'helpers/Auth/betaUser',

  'wunderbits/WBEventEmitter',

  'vendor/moment'

], function (runtime, betaUser, WBEventEmitter, moment, undefined) {

  

  var $ = runtime.$;
  var _ = runtime._;

  var _super = WBEventEmitter.prototype;
  var config = runtime.config;
  var global = runtime.global;

  var _minorVersionUpdate = false;

  var urls = {
    'rate': 'rate',
    'tell': 'tell-your-friends'
  };

  return WBEventEmitter.extend({

    'initialize': function() {

      var self = this;
      _super.initialize.apply(self, arguments);

      self._ready = new $.Deferred();

      runtime.user.authorization.done(function () {

        // // testing
        // runtime.settings.set({

        //   // 'last_used_release': '2.0.5',
        //   // 'app_open_count': '3',
        //   // 'last_app_open_date': '0'
        // });

        runtime.settings.on('change:app_open_count', self.onChangeOpenCount);
        runtime.on('significantEvent:added', self.onCountSignificantEvents);
      });

      runtime.once('interface:ready', self._ready.resolve);

      // order is important!
      self._ready.done(function () {

        self.checkRelease().done(function () {

          self.trackOpen();
        });
      });
    },

    'triggerRoute': function (prompt) {

      var url = urls[prompt];
      runtime.trigger('route:' + url);
    },

    // Track App Opens (once per day)
    'trackOpen': function () {

      var self = this;

      runtime.hasSynced.done(function () {

        var lastOpen = parseInt(runtime.settings.attributes.last_app_open_date, 10);
        var today = moment().sod().valueOf();

        if (today !== lastOpen) {

          self.checkShouldOpenDelayedPrompt();

          var count = parseInt(runtime.settings.attributes.app_open_count, 10) + 1;

          runtime.settings.save({

            'app_open_count': String(count),
            'last_app_open_date': String(today)
          });
        }
      });
    },

    'checkShouldOpenDelayedPrompt': function () {

      var self = this;
      var shouldOpenPromptOn = runtime.settings.attributes.should_open_social_prompt_on;
      var shouldOpenPrompt = runtime.settings.attributes.should_open_prompt;

      if (shouldOpenPrompt && shouldOpenPromptOn && shouldOpenPromptOn === moment().format('YYYY-MM-DD')) {

        if (!self.isOnDisallowedRoute()) {

          runtime.settings.save({
            'should_open_social_prompt_on': null,
            'should_open_prompt': null
          });

          self.triggerRoute(shouldOpenPrompt);
        }
      }
    },

    'checkRelease': function () {

      var self = this;
      var _deferred = new $.Deferred();

      if (runtime.isLocalDev()) {
        return _deferred.resolve();
      }

      runtime.hasSynced.done(function () {

        var userRelease = runtime.settings.attributes.last_used_release;
        if (userRelease !== config.release) {

          // beta status is cached returns a promise
          if (/^((next|beta).wunderlist.com)/.test(global.location.host)) {

            betaUser.getBetaStatus().done(betaUser.publishBetaVersion);
          }

          runtime.settings.save({

            'last_used_release': config.release,
            'app_open_count': '0'
          });

          var userReleaseParts = userRelease && userRelease.split('.');
          var currentReleaseParts = config.release && config.release.split('.');

          var lastUsedMajorVersion = userReleaseParts && userReleaseParts[0];
          var lastUsedMinorVersion = userReleaseParts && userReleaseParts[1];
          // var lastUsedPatchVersion = userReleaseParts[2];

          // trigger the what's new dialog for all first time x.x users
          var hasNotSeenMajorVersion = lastUsedMajorVersion !== currentReleaseParts[0] || !lastUsedMajorVersion;
          var hasSeenMajorVersion = lastUsedMajorVersion === currentReleaseParts[0];

          if (hasNotSeenMajorVersion || (hasSeenMajorVersion && lastUsedMinorVersion !== currentReleaseParts[1])) {

            self._ready.done(function () {

              if (!self.isOnDisallowedRoute()) {
                runtime.trigger('route:whatsnew');
              }
            });

            _minorVersionUpdate = true;
            self.updateNewInstallationStatus();
          }
        }
        else {

          _minorVersionUpdate = false;
        }

        _deferred.resolve();
      });

      return _deferred;
    },

    'onCountSignificantEvents': function () {

      var currentCount = parseInt(runtime.settings.attributes.significant_event_count, 10);
      currentCount++;

      if (currentCount <= 5) {

        runtime.settings.save('significant_event_count', currentCount.toString());
      }
    },

    'updateNewInstallationStatus': function (state) {

      if (runtime.isInstalledOnChrome()) {

        if (state || (state !== false && runtime.settings.attributes.new_installation !== 'true')) {

          runtime.settings.save('new_installation', 'true');
        }
        else {

          runtime.settings.save('new_installation', 'false');
        }
      }
    },

    // checks the current route against black listed modal
    // routes which should prevent social dialogs from opening
    'openPrompt': function (prompt) {

      var self = this;
      if (self.isOnDisallowedRoute()) {

        if (runtime.currentRoute().indexOf('whatsnew') >= 0) {

          runtime.settings.save({

            'should_open_social_prompt_on': moment().add('days', 1).format('YYYY-MM-DD'),
            'should_open_prompt': prompt
          });
        }
        else {

          self.delayOpenPrompt(prompt, 60);
        }
      }
      else {

        if (runtime.focus !== 'socialPrompt') {

          self.triggerRoute(prompt);
        }
      }
    },

    // schedule an attempt to open the social dialog again in (n) secods,
    // provided the user has not already opened any of the social dialogs
    // between now and when the timeout executes
    'delayOpenPrompt': function (prompt, seconds) {

      var self = this;
      var timeout = setTimeout(function () {

        self.openPrompt(prompt);
      }, 1000 * seconds);

      function checkCurrentURL () {

        if (!self.isOnDisallowedRoute()) {

          clearTimeout(timeout);
          runtime.off('routed', checkCurrentURL);
        }
      }

      runtime.on('routed', checkCurrentURL);
    },

    'onChangeOpenCount': function () {

      var self = this;
      var opens = parseInt(runtime.settings.attributes.app_open_count, 10);
      // trigger chrome rating
      // show after:
      //    2 opens and minorVersionUpdate and isChrome
      //    after 3 days if later is pressed and isChrome
      //    after 5 significant events and 2 opens and isInstalled

      var rateAttribute = runtime.env.isChromeApp() ? 'chrome_app_rating_later' : 'chrome_rating_later';
      var rateLater = runtime.settings.attributes[rateAttribute] !== 'false';
      var rateLaterClickDate;

      // if they hit 'Later', then we save the date they hit it. Falst means this gets skipped
      if (rateLater) {

        rateLaterClickDate = moment(parseInt(runtime.settings.attributes[rateAttribute], 10));
      }

      var lastOpenDate = moment(parseInt(runtime.settings.attributes.last_app_open_date, 10));
      var thirdDay = opens === 3;
      var secondOpen = opens === 2;
      var x50thDay = opens > 1 && opens % 50 === 0;
      var newInstall = runtime.settings.attributes.new_installation;
      var significantEventCount = parseInt(runtime.settings.attributes.significant_event_count, 10);
      var hasBeenAtLeast3daysSinceClickedLater = rateLaterClickDate && rateLaterClickDate.diff(lastOpenDate, 'days') <= -3;

      // console.log(_minorVersionUpdate, secondOpen)
      if (runtime.env.isChrome() && ((newInstall === 'true' && secondOpen && rateLater) || (newInstall  === 'true' && significantEventCount === 5 && opens >= 2 && rateLater) || (rateLater && hasBeenAtLeast3daysSinceClickedLater))) {

        self._ready.done(function () {

          runtime.settings.save('new_installation', 'false');
          self.openPrompt('rate');
        });
      }

      // trigger tell a friend
      // after initial three days, or every 50th day
      if (thirdDay || x50thDay) {

        self._ready.done(function () {

          self.openPrompt('tell');
        });
      }

      return self._ready;
    },

    'isOnDisallowedRoute': function () {

      var disallowed = ['preferences', 'social', 'whatsnew'];
      var isDisallowedRouteActive = false;
      var currentRoute = runtime.currentRoute();

      _.each(disallowed, function (route) {
        if (currentRoute.indexOf(route) >= 0) {
          isDisallowedRouteActive = true;
        }
      });

      return isDisallowedRouteActive;
    }
  });
});
define('helpers/unload',[

  'application/runtime',

  'collections/FilesCollection',

  'wunderbits/WBSingleton'

], function (runtime, FilesCollection, WBSingleton, undefined) {

  

  var _ = runtime._;

  return WBSingleton.extend({

    'init': function () {

      var self = this;

      // No unload events on packaged app
      if(runtime.env.isPackagedApp()) {
        return;
      }

      // start a sync before the user leaves the page
      runtime.on('sync:unload', function () {

        if (runtime.pendingChanges() > 0) {

          runtime.trigger('sync:start');
        }
      });

      // before unload watcher, forces sync on attempt to leave the page
      runtime.global.addEventListener('beforeunload', function () {

        var shouldContinue = true;
        runtime.on('email:emailing', function () {

          shouldContinue = false;
        });

        runtime.on('application:reloading', function () {

          shouldContinue = false;
        });

        if (!shouldContinue) {

          return;
        }

        // runtime.pending changes is exported from sync.js
        var changes = runtime.pendingChanges();
        var filesUploading = self.getUploadingCount();
        var message;

        if (changes > 0 || filesUploading > 0) {

          // this is here to make sure sync at least tries to start when the user has pending changes
          (changes > 0) && runtime.trigger('sync:unload');

          changes = changes + filesUploading;

          if (changes === 1) {

            message = runtime.language.getText('userbar_$_unsynced_item', changes);
          }
          else {

            message = runtime.language.getText('userbar_$_unsynced_item_plural', changes);
          }
        }
        else if (runtime.isSyncing) {

          message = runtime.language.getText('userbar_sync_in_progress');
        }

        var now = (new Date()).valueOf();
        var minutesDiff = Math.round(((now - runtime.started) / 1000) / 60);
        runtime.trigger('analytics:Application:unload', minutesDiff + ' minutes');

        return message;
      });

      // on unload
      runtime.global.addEventListener('unload', function () {

        // trigger unload cleanups (db closing, tracker cleanup etc.)
        runtime.trigger('window:unload');
      });
    },

    'getUploadingCount': function () {

      var files = new FilesCollection('/files/all');
      var uploading = _.filter(files.models, function (file) {

        return file.file;
      });

      return uploading.length;
    }
  });
});
define('wunderbits/WBViewPresenter',[

  'application/runtime',
  './lib/dependencies',

  './WBView'

], function (runtime, dependencies, WBView, undefined) {

  

  var _super = WBView.prototype;
  var _ = dependencies._;
  var w_ = dependencies.w_;
  var $ = dependencies.$;

  return WBView.extend({

    'emits': {},

    'observes': {
      'model': {},
      'collection': {},
      'runtime': {}
    },

    // event proxies allow for triggering binding to more than one master
    // event at once, by binding to the proxy event instead.
    'eventProxies': {

      'tap': ['click', 'touchstart'],
      'move': ['mousemove', 'touchmove']
    },

    'initialize': function () {

      var self = this;

      self.implements = self._concatFromSuper(self, 'implements');
      self.emits = self._mergeFromSuper(self, 'emits');

      _super.initialize.apply(self, arguments);

      self.options = self._mergeFromSuper(self, 'options');

      self.createObserveBindings();

      self.controllers = [];
      self.createControllerInstances();
    },

    'triggered': function () {

      var self = this;
      var args = _.toArray(arguments);
      var parentPrefix = '*children';
      var childrenPrefix = '*parents';

      if (self._superView && args[0].indexOf(childrenPrefix) < 0) {

        var parentsPayload = _.clone(args);

        if (parentsPayload[0].indexOf(parentPrefix) < 0) {
          parentsPayload[0] = parentPrefix + ':' + parentsPayload[0];
        }

        self._superView.trigger.apply(self._superView, parentsPayload);
      }

      if (self._subviews && args[0].indexOf(parentPrefix) < 0) {

        var childrenPayload = _.clone(args);

        if (childrenPayload[0].indexOf(childrenPrefix) < 0) {
          childrenPayload[0] = childrenPrefix + ':' + childrenPayload[0];
        }

        var subview;
        for (var i = 0, max = self._subviews.length; i < max; i++) {
          subview = self._subviews[i];
          subview.trigger.apply(subview, childrenPayload);
        }
      }
    },

    // Convenience method for rendering an instance of a view class as
    // a named subview and appending it to self.el
    'renderSubview': function (Constructor, options, name) {

      var self = this;
      options || (options = {});
      name || (name = Constructor.toString());

      options.state = options.state || self.state;

      var view = self.addSubview(new Constructor(options), name);
      self.el.appendChild(view.render().el);

      return view;
    },

    'createObserveBindings': function (instance) {

      var self = this;
      instance = instance || self;
      var observes = instance.observes;
      var observee, methodList, events;

      for (var type in observes) {

        if (type === 'events' || type === '*parents' || type === '*children') {
          observee = self;
        }
        else if (type === 'runtime') {
          observee = runtime;
        }
        else {
          observee = self[type];
        }

        events = observes[type];

        if (observee && _.isFunction(observee.on) && _.size(events)) {

          for (var key in events) {

            methodList = events[key];

            if (!_.isArray(methodList)) {

              self._bindObserveeEvent(methodList, observee, key, type);
            }
            else {

              for (var i2 = 0, max2 = methodList.length; i2 < max2; i2++) {

                self._bindObserveeEvent(methodList[i2], observee, key, type);
              }
            }

            methodList = null;
          }
        }

        observee = null;
      }

      instance.constructor.__super__ && self.createObserveBindings.call(self, instance.constructor.__super__);
    },

    '_bindObserveeEvent': function (methodName, observee, key, type) {

      var self = this;
      var method;

      if (type[0] === '*') {
        key = type + ':' + key;
      }

      if (_.isFunction(methodName)) {
        method = methodName;
      }
      else if (methodName[0] === '>') {
        method = function () {
          var args = [methodName.substr(1)].concat(_.toArray(arguments));
          self.trigger.apply(self, args);
        };
      }
      else {
        method = self[methodName];
      }

      _.isFunction(method) && self.bindTo(observee, key, method);
    },

    'createControllerInstances': function () {

      var self = this;

      // Make a list of controller constructors
      var Controllers = _.isFunction(self.implements) ? self.implements() : self.implements;
      Controllers = _.unique(Controllers);

      self.implemented = [];

      var Controller, controller;
      Controllers.reverse();

      for (var i = 0, max = Controllers.length; i < max; i++) {
        Controller = Controllers[i];

        // If we have already implemented a controller that inherits from
        // this controller, we don't need another one...
        if (self.implemented.indexOf(Controller.toString()) < 0) {

          controller = new Controller(self);
          self.controllers.push(controller);

          self.trackImplementedSuperConstructors(Controller);
        }
      }

      return self.implemented;
    },

    'trackImplementedSuperConstructors': function (Controller) {

      var self = this;
      var superConstructor = Controller.__super__ && Controller.__super__.constructor;

      if (superConstructor) {
        self.implemented.push(superConstructor.toString());
        self.trackImplementedSuperConstructors(superConstructor);
      }
    },

    // Get an events hash, based on self.emits
    'getEvents': function (events) {

      var self = this;
      var emits = _.isFunction(self.emits) ? self.emits() : self.emits;
      return w_.merge({}, emits, events);
    },

    'delegateEvents': function (events) {

      var self = this;

      events = self.getEvents(events);
      events = self.mapEventProxies(events);

      _.each(events, function (event, selector) {
        events[selector] = function () {
          var args = [event].concat(_.toArray(arguments));
          self.trigger.apply(self, args);
        };
      });

      // merge these events with the ones for regular backbone view
      // TODO: we should not need to do this once we stop using the events hash.
      events = w_.merge({}, events, _.result(self, 'events'));

      // delegate events via backbone
      _super.delegateEvents.call(self, events);
    },

    'mapEventProxies': function (events) {

      var self = this;

      _.each(events, function (event, selector) {

        var masters = self.eventProxies[selector];

        if (masters && masters.length) {

          // Add the master events
          _.each(masters, function (master) {
            events[master] = event;
          });

          // Remove the proxy event
          delete events[selector];
        }
      });

      return events;
    },

    'onDestroy': function () {

      var self = this;

      _super.onDestroy && _super.onDestroy.apply(self, arguments);

      // Loop and destroy
      _.each(self.controllers, function (controller) {

        // A controller can exist multiple times in the list, since it's based on the event name, so make sure to only destroy each one once
        controller.destroyed || controller.destroy();
      });

      delete self.controllers;
    },

    // Overloaded destroy method, allows views to handle visual destruction in
    // #renderDestroy before actually destroying the instance
    'destroy': function () {

      var self = this;
      var deferred = new $.Deferred();
      self.renderDestroy(deferred).always(function () {

        !self.destroyed && _super.destroy.call(self);
      });
    },

    // Can be implemented by subclasses to animate or clean up view visually
    // before actually destroying it. Resolve the deferred when the view can
    // be destroyed.
    'renderDestroy': function (deferred) {

      return deferred.resolve().promise();
    }
  });
});

define('views/Login/StackView',[

  'application/runtime',

  'wunderbits/WBViewPresenter'

], function (
  runtime,
  WBViewPresenter,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;
  var w_ = runtime.w_;

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'viewClasses': {},

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.views = [];
    },

    'createView': function (name, options, previous) {

      var self = this;
      var ViewClass = self.viewClasses[name];

      return new ViewClass(w_.merge({
        'previousView': previous
      }, options));
    },

    'pushViews': function (names, forceState) {

      var self = this;
      var last = names.pop();

      _.each(names, function (name) {
        self.pushView(name, false, forceState);
      });

      return self.pushView(last, true, forceState);
    },

    'pushView': function (name, autoShow, forceState) {

      var self = this;
      var deferred = new $.Deferred();

      if (_.isArray(name)) {
        return self.pushViews(name, forceState);
      }

      var shouldPush = self.beforePushView(name);

      if (shouldPush) {

        var previous = self.views[self.views.length - 1];
        previous && previous.trigger('before:push');

        var view = self.addSubview(self.createView(name, {}, previous));
        view.stackViewName = name;
        w_.merge(view.state, previous && previous.state || {}, forceState || {});
        self.views.push(view);

        // Bind the events to the views lifecycle, cleaned up on pop
        view.bindTo(view, 'close', self.popView, self);
        view.bindTo(view, 'open', self.pushView, self);

        // Push the view to the DOM - separate method for subclasses to hook in
        self.appendView(view);

        if (autoShow !== false) {
          $.when(self.showView(view, previous)).then(deferred.resolve);
          self.viewMadeVisible(view);
        }
      }
      else {
        deferred.resolve();
      }

      return deferred.promise();
    },

    // Iterates over an array of view names and syncs the current stack with it
    'syncViews': function (views, state) {

      var self = this;
      var deferred = new $.Deferred();

      var viewsToPop = [];
      var poppedViewPromises = [];
      var newViews = [];
      var view, viewName;

      for (var i = 0, max = self.views.length; i < max; i++) {

        view = self.views[i];
        viewName = views[i];

        if (viewName && view.stackViewName !== viewName || !viewName) {
          viewsToPop.push(view);
        }

        view = viewName = null;
      }

      // and actually pop the views
      _.each(viewsToPop.reverse(), function (view) {
        poppedViewPromises.push(self.popView(view, {
          'triggerEvents': false
        }));
      });

      var iterator = function () {

        var view = views.shift();
        
        var existing = _.find(self.views, function (_view) {
          return _view.stackViewName === view;
        });

        if (!existing) {
          newViews.push(view);
        }

        views.length && iterator();
      };

      var start = function () {

        iterator();

        $.when(self.pushViews(newViews, state)).then(deferred.resolve);
      };

      if (poppedViewPromises.length) {
        $.when.apply(null, poppedViewPromises).then(start);
      }
      else {
        start();
      }

      return deferred.promise();
    },

    'popView': function (view, options) {

      var self = this;
      view = view || self.views[self.views.length - 1];
      options || (options = {});

      if (options.triggerEvents !== false) {
        options.triggerEvents = true;
      }

      view.trigger('before:pop');
      self.views.pop();

      var previous = self.views[self.views.length - 1];
      previous && w_.merge(previous.state, view.state);
      options.triggerEvents && previous && self.viewMadeVisible(previous);

      return self.removeView(view, previous);
    },

    'appendView': function (view) {

      var self = this;
      view.$el.hide();
      self.el.appendChild(view.render().el);
    },

    // DOM manipulation methods to be implemented by subclass
    'showView': function () { // (view, previous)
      return true;
    },
    'removeView': function () { // (view, previous)
      return true;
    },
    'viewMadeVisible': function () { // (view)
    },

    // Filter before a view is pushed to the stack, return Boolean
    'beforePushView': function (name) {
      return typeof name === 'string';
    }
  });
});
define('wunderbits/WBViewController',[

  './lib/dependencies',
  './WBController',
  './WBViewPresenter'

], function (dependencies, WBController, WBViewPresenter, undefined) {

  

  var _ = dependencies._;

  var _super = WBController.prototype;

  return WBController.extend({

    'model': undefined,
    'options': undefined,
    'state': undefined,
    'view': undefined,
    '_viewEvents': undefined,

    'implements': {
      'visible': 'viewMadeVisible',
      'hidden': 'viewMadeHidden'
    },

    'initialize': function (view) {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.view = view || self.view;
      if (!self.view instanceof WBViewPresenter) {
        throw new Error('Cannot initialize without instance of WBViewPresenter as self.view');
      }

      self.model = self.view.model;
      self.options = WBViewPresenter.prototype._mergeFromSuper(self, 'options');
      self.state = WBViewPresenter.prototype._mergeFromSuper(self, 'state');

      self.bindViewEvents();
    },

    'bindViewEvents': function (instance) {

      var self = this;
      instance || (instance = self);
      var method;

      if (!self._viewEvents) {
        self._viewEvents = {};
      }

      for (var event in instance.implements) {
        if (instance.implements.hasOwnProperty(event)) {
          method = instance.implements[event];
          method = _.isFunction(method) ? method : _.isFunction(self[method]) ? self[method] : null;

          if (method && self._viewEvents[event] !== method) {
            self.bindTo(self.view, event, method);
            self._viewEvents[event] = method;
          }
        }

        method = null;
      }

      if (instance.constructor && instance.constructor.__super__) {
        self.bindViewEvents(instance.constructor.__super__);
      }
    }
  });
});
define('views/Login/SelectorController',[

  'application/runtime',

  'wunderbits/WBViewController'

], function (
  runtime,
  WBViewController,
  undefined
) {

  

  var shortcutsMap = {
    115: 'signup',
    108: 'login',
    116: 'try',
    83: 'signup',
    76: 'login',
    84: 'try'
  };

  var $ = runtime.$;
  var _super = WBViewController.prototype;

  return WBViewController.extend({

    'implements': {

      'click:select': 'onClickSelect'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.bindTo($(runtime.global.document), 'keydown', self.onGlobalKeyDown);
      self.bindTo(self.view, 'visible', self.viewMadeVisible);
    },

    'viewMadeVisible': function () {

      var self = this;
      delete self.hasSelected;
    },

    'onGlobalKeyDown': function (ev) {

      var self = this;

      if (self.view.state.enableShortcuts) {

        var target = shortcutsMap[ev.which];
        target && runtime.trigger('route:' + target);
      }
    },

    'onClickSelect': function (ev) {

      var self = this;
      if (!self.hasSelected) {

        var $target = $(ev.target);

        if (ev.target.tagName !== 'A') {
          $target = $(ev.target).closest('a');
        }

        var selected = $target.attr('rel');

        self.hasSelected = true;
        selected && runtime.trigger('route:' + selected);
      }
    }
  });
});
/*global define:false, require:false*/
(function(undefined) {

  

  define('template', {
    load: function(templateName, require, load, config) {
      require(['templates/' + templateName], function(templateFunction) {
        load(templateFunction);
      });
    }
  });

}).call(undefined);
define('templates/login/selector',['vendor/handlebars'], function(H) {
var name = 'login/selector';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <a rel=\"try\" class=\"button clear big bigger-mobile\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_try_wunderlist", options) : helperMissing.call(depth0, "localized", "button_try_wunderlist", options)))
    + " </a> ";
  return buffer;
  }

  buffer += "<a rel=\"signup\" class=\"button big blue bigger-mobile\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_sign_up", options) : helperMissing.call(depth0, "localized", "button_sign_up", options)))
    + " </a> <a rel=\"login\" class=\"button big grey bigger-mobile\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_log_in", options) : helperMissing.call(depth0, "localized", "button_log_in", options)))
    + " </a> ";
  stack2 = helpers['if'].call(depth0, depth0.showTryMode, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  return buffer;
  });
});
(function(undefined) {

  

  define('style', {
    load: function(styleName, require, load, config) {
      require(['styles/' + styleName], function(styleString) {
        load(styleString);
      });
    }
  });

}).call(this);
define('styles/login/_selector',[],function() { return {'name': 'login/_selector', 'styles': "#wunderlist-base .login-selector{position:absolute;width:240px;bottom:15px;} #wunderlist-base .login-selector .button{margin-bottom:10px} " }; });
define('views/Login/SelectorView',[

  'application/runtime',

  'wunderbits/WBViewPresenter',

  'views/Login/SelectorController',

  'template!login/selector',
  'style!login/_selector'

], function (
  runtime,
  WBViewPresenter,
  SelectorController,
  selectorTemplate,
  selectorStyle,
  undefined
) {

  

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'url': 'welcome',

    'className': 'login-selector',

    'state': {
      'enableShortcuts': false,
    },

    'styles': [

      selectorStyle
    ],

    'implements': [

      SelectorController
    ],

    'template': selectorTemplate,

    'emits': {

      'touchstart .button': 'click:select',
      'click .button': 'click:select'
    },

    'renderData': {
      'showTryMode': false,
    },

    'formatData': function (data) {

      data || (data = {});
      data.showTryMode = runtime.env.isChromeApp();
      return data;
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);
    },

    'fadeIn': function () {

      var self = this;
      self.state.enableShortcuts = true;
      return _super.fadeIn.apply(self, arguments);
    },

    'fadeOut': function () {

      var self = this;
      self.state.enableShortcuts = false;
      return _super.fadeOut.apply(self, arguments);
    }
  });
});
define('templates/login/error',['vendor/handlebars'], function(H) {
var name = 'login/error';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"arrow\"></div> <p class=\"message\">";
  if (stack1 = helpers.message) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.message; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</p>";
  return buffer;
  });
});
define('styles/login/_error',[],function() { return {'name': 'login/_error', 'styles': "#wunderlist-base .error{position:absolute;z-index:9999;border:1px solid #8b2322;max-width:208px;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #ce4027), color-stop(1, #b62714));background-image:-webkit-linear-gradient(top, #ce4027 0, #b62714 100%);background-image:-moz-linear-gradient(top, #ce4027 0, #b62714 100%);background-image:-o-linear-gradient(top, #ce4027 0, #b62714 100%);background-image:-ms-linear-gradient(top, #ce4027 0, #b62714 100%);background-image:linear-gradient(top, #ce4027 0, #b62714 100%);-webkit-border-radius:3px;border-radius:3px;padding:6px 12px;} #wunderlist-base .error p.message{margin:0;font-size:12px;color:#fff;text-shadow:0 1px 0 #6d1818} #wunderlist-base .error .arrow{position:absolute;border-style:solid;border-color:#8b2322 transparent transparent transparent;border-width:7px;bottom:-14px;height:0;width:0;opacity:1;-ms-filter:none;filter:none;} #wunderlist-base .error .arrow:before{position:absolute;content:\"\";margin-left:-7px;bottom:-6px;border-style:solid;border-width:7px;border-color:#b62714 transparent transparent transparent} " }; });
define('views/Login/ErrorView',[

  'application/runtime',

  'wunderbits/WBViewPresenter',

  'template!login/error',

  'style!login/_error'

], function (
  runtime,
  WBViewPresenter,
  errorTemplate,
  errorStyle,
  undefined
) {

  

  var $ = runtime.$;

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'className': 'error popover',

    'template': errorTemplate,

    'styles': [errorStyle],

    'renderData': {
      'message': null,
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      if (typeof self.options.errorKey !== 'string') {
        throw new Error('options.errorKey must be a string');
      }

      if (!self.options.target || !self.options.target.tagName) {
        throw new Error('options.target must be a DOM node element');
      }

      self.options.inputType = self.options.target.getAttribute('type');
    },

    'formatData': function (data) {

      var self = this;
      data || (data = {});

      var errorKey = self.options.errorKey;

      if (errorKey === 'empty_value') {

        if (self.options.inputType === 'text') {
          errorKey = 'login_empty_' + self.options.target.getAttribute('name');
        }
        else {
          errorKey = 'login_empty_' + self.options.inputType;
        }
      }
      else if (errorKey === 'too_short') {
        errorKey = 'login_' + self.options.target.getAttribute('name') + '_too_short';
      }
      else if (errorKey === 'invalid_email') {
        errorKey = 'login_email_not_valid';
      }

      data.message = runtime.language.getText(errorKey);

      return data;
    },

    'render': function () {

      var self = this;
      var $target = $(self.options.target);

      self.bindTo($target, 'blur keydown keyup change', self.destroy);

      $target.after(_super.render.call(self).el);
      self.renderPosition();

      return self;
    },

    'renderPosition': function () {

      var self = this;
      var $target = $(self.options.target);
      var offset = $target.position();
      var bottom = $target.offsetParent().outerHeight() - offset.top;

      self.$el.css({
        left: offset.left - 42,
        bottom: bottom + 10
      });
    },

    'renderDestroy': function (deferred) {

      var self = this;
      self.fadeOut(250).done(deferred.resolve);
    }
  });
});
define('wunderbits/data/tld',{
  "list": [
    "ac",
    "academy",
    "actor",
    "ad",
    "ae",
    "aero",
    "af",
    "ag",
    "agency",
    "ai",
    "al",
    "am",
    "an",
    "ao",
    "aq",
    "ar",
    "arpa",
    "as",
    "asia",
    "at",
    "au",
    "aw",
    "ax",
    "az",
    "ba",
    "bar",
    "bargains",
    "bb",
    "bd",
    "be",
    "berlin",
    "best",
    "bf",
    "bg",
    "bh",
    "bi",
    "bid",
    "bike",
    "biz",
    "bj",
    "blue",
    "bm",
    "bn",
    "bo",
    "boutique",
    "br",
    "bs",
    "bt",
    "build",
    "builders",
    "buzz",
    "bv",
    "bw",
    "by",
    "bz",
    "ca",
    "cab",
    "camera",
    "camp",
    "cards",
    "careers",
    "cat",
    "catering",
    "cc",
    "cd",
    "center",
    "ceo",
    "cf",
    "cg",
    "ch",
    "cheap",
    "christmas",
    "ci",
    "ck",
    "cl",
    "cleaning",
    "clothing",
    "club",
    "cm",
    "cn",
    "co",
    "codes",
    "coffee",
    "com",
    "community",
    "company",
    "computer",
    "condos",
    "construction",
    "contractors",
    "cool",
    "coop",
    "cr",
    "cruises",
    "cu",
    "cv",
    "cw",
    "cx",
    "cy",
    "cz",
    "dance",
    "dating",
    "de",
    "democrat",
    "diamonds",
    "directory",
    "dj",
    "dk",
    "dm",
    "do",
    "domains",
    "dz",
    "ec",
    "edu",
    "education",
    "ee",
    "eg",
    "email",
    "enterprises",
    "equipment",
    "er",
    "es",
    "estate",
    "et",
    "eu",
    "events",
    "expert",
    "exposed",
    "farm",
    "fi",
    "fish",
    "fj",
    "fk",
    "flights",
    "florist",
    "fm",
    "fo",
    "foundation",
    "fr",
    "futbol",
    "ga",
    "gallery",
    "gb",
    "gd",
    "ge",
    "gf",
    "gg",
    "gh",
    "gi",
    "gift",
    "gl",
    "glass",
    "gm",
    "gn",
    "gov",
    "gp",
    "gq",
    "gr",
    "graphics",
    "gs",
    "gt",
    "gu",
    "guitars",
    "guru",
    "gw",
    "gy",
    "hk",
    "hm",
    "hn",
    "holdings",
    "holiday",
    "house",
    "hr",
    "ht",
    "hu",
    "id",
    "ie",
    "il",
    "im",
    "immobilien",
    "in",
    "industries",
    "info",
    "institute",
    "int",
    "international",
    "io",
    "iq",
    "ir",
    "is",
    "it",
    "je",
    "jm",
    "jo",
    "jobs",
    "jp",
    "kaufen",
    "ke",
    "kg",
    "kh",
    "ki",
    "kim",
    "kitchen",
    "kiwi",
    "km",
    "kn",
    "kp",
    "kr",
    "kred",
    "kw",
    "ky",
    "kz",
    "la",
    "land",
    "lb",
    "lc",
    "li",
    "lighting",
    "limo",
    "link",
    "lk",
    "lr",
    "ls",
    "lt",
    "lu",
    "luxury",
    "lv",
    "ly",
    "ma",
    "maison",
    "management",
    "mango",
    "marketing",
    "mc",
    "md",
    "me",
    "menu",
    "mg",
    "mh",
    "mil",
    "mk",
    "ml",
    "mm",
    "mn",
    "mo",
    "mobi",
    "moda",
    "monash",
    "mp",
    "mq",
    "mr",
    "ms",
    "mt",
    "mu",
    "museum",
    "mv",
    "mw",
    "mx",
    "my",
    "mz",
    "na",
    "nagoya",
    "name",
    "nc",
    "ne",
    "net",
    "neustar",
    "nf",
    "ng",
    "ni",
    "ninja",
    "nl",
    "no",
    "np",
    "nr",
    "nu",
    "nz",
    "okinawa",
    "om",
    "onl",
    "org",
    "pa",
    "partners",
    "parts",
    "pe",
    "pf",
    "pg",
    "ph",
    "photo",
    "photography",
    "photos",
    "pics",
    "pink",
    "pk",
    "pl",
    "plumbing",
    "pm",
    "pn",
    "post",
    "pr",
    "pro",
    "productions",
    "properties",
    "ps",
    "pt",
    "pub",
    "pw",
    "py",
    "qa",
    "qpon",
    "re",
    "recipes",
    "red",
    "rentals",
    "repair",
    "report",
    "reviews",
    "rich",
    "ro",
    "rs",
    "ru",
    "ruhr",
    "rw",
    "sa",
    "sb",
    "sc",
    "sd",
    "se",
    "sexy",
    "sg",
    "sh",
    "shiksha",
    "shoes",
    "si",
    "singles",
    "sj",
    "sk",
    "sl",
    "sm",
    "sn",
    "so",
    "social",
    "solar",
    "solutions",
    "sr",
    "st",
    "su",
    "supplies",
    "supply",
    "support",
    "sv",
    "sx",
    "sy",
    "systems",
    "sz",
    "tattoo",
    "tc",
    "td",
    "technology",
    "tel",
    "tf",
    "tg",
    "th",
    "tienda",
    "tips",
    "tj",
    "tk",
    "tl",
    "tm",
    "tn",
    "to",
    "today",
    "tokyo",
    "tools",
    "tp",
    "tr",
    "training",
    "travel",
    "tt",
    "tv",
    "tw",
    "tz",
    "ua",
    "ug",
    "uk",
    "uno",
    "us",
    "uy",
    "uz",
    "va",
    "vacations",
    "vc",
    "ve",
    "ventures",
    "vg",
    "vi",
    "viajes",
    "villas",
    "vision",
    "vn",
    "vote",
    "voting",
    "voto",
    "voyage",
    "vu",
    "wang",
    "watch",
    "wed",
    "wf",
    "wien",
    "wiki",
    "works",
    "ws",
    "xxx",
    "xyz",
    "ye",
    "yt",
    "za",
    "zm",
    "zone",
    "zw"
  ]
});
define('wunderbits/helpers/tokenizer',[
  'wunderbits/WBSingleton',
  'wunderbits/data/tld'
], function (WBSingleton, TLDData, undefined) {

  

  var TLDs = TLDData.list;
  var tldExtractionRegExp = /\.(\w{2,13})(?:\/|:|$)/;

  function noAccess () {
    throw new Error('not implemented');
  }

  return WBSingleton.extend({

    'createLink': noAccess,

    'isValidMatch': function (text) {

      var self = this;
      var validationRegExp = self.validationRegExp;

      // skip validationm, if no regexp defined for is
      if (!validationRegExp) {
        return true;
      }

      // else validate the text, if any
      if (!text || !self.validationRegExp.test(text)) {
        return false;
      }

      // format looks fine, validate the TLD, if the helper asked for it
      if (self.validateTLD) {
        var tldMatch = text.match(tldExtractionRegExp);
        return !!(tldMatch && tldMatch[1] && TLDs.indexOf(tldMatch[1].toLowerCase()) >= 0);
      }
      else {
        return true;
      }
    },

    'extractTokens': function (text) {

      if (text && text.length) {

        var self = this;
        var tokens = [];
        var lastIndex = 0;

        // extract the matches
        text.replace(self.extractionRegExp, function (match, index , original) {

          var invalidLeadingChars = self.invalidLeadingChars;
          // ignore if the leading character before the match was invalid
          if (index > 0 && invalidLeadingChars && invalidLeadingChars.test(original[index - 1])) {
            return;
          }

          // extract the text before the match, if any
          if (index > 0) {
            var before = original.substring(lastIndex, index);
            // move the marker
            lastIndex += before.length;
            tokens.push(before);
          }

          // the match itself
          tokens.push(match);

          // move the marker
          lastIndex += match.length;
        });

        // extract the last remaining bits, if any
        if (lastIndex > 0 && lastIndex < text.length) {
          tokens.push(text.substring(lastIndex));
        }

        return tokens;
      }
    },

    'tokenize': function (node) {

      var self = this;

      // skip text nodes immediately under an existing link
      if (node.parentNode && node.parentNode.nodeName.toLowerCase() === 'a') {
        return;
      }

      var text = node.nodeValue;
      var sections = self.extractTokens(text);

      // skip procesing nodes that aren't valid matches
      if (!sections || !sections.length || (sections.length === 1 && !self.isValidMatch(sections[0]))) {
        return;
      }

      var section, nodes = [];

      // loop over the sections
      while (sections.length) {

        // pick the leading fragment
        section = sections.shift();

        if (!section.length) {
          continue;
        }

        // valid token, mark it
        if (self.isValidMatch(section)) {
          nodes.push(self.createLink(section));
        }
        // otherwise save the fragment in a text node
        else {
          section && nodes.push(document.createTextNode(section));
        }
      }

      return nodes;
    }
  });
});
define('wunderbits/helpers/email',[
  './tokenizer'
], function (Tokenizer, undefined) {

  

  return Tokenizer.extend({

    'validateTLD': true,
    'invalidLeadingChars': /[#=@&]/,
    'validationRegExp': /^[^\s@=]+@[^\.\s@]+(\.[^\.\s@]+)+$/,
    'extractionRegExp': /[a-z0-9][\/\(\)\{\}\[\]\-\.\+\w]*@[a-z0-9][\/\(\)\{\}\[\]\-\.\+\w]*\.[a-z]{2,6}/ig,

    'createLink': function (email) {
      var link = document.createElement('a');
      link.className = 'email linkout';
      link.target = '_blank';
      link.href = 'mailto:' + email;
      link.textContent = email;
      return link;
    },

    'isValidEmail': function (email) {
      return this.isValidMatch(email);
    },

    'extractEmails': function (text) {
      return this.extractTokens(text);
    }

  });
});

define('vendor/mailcheck',[
  'vendor/jquery'
], function ($) {

  /*
   * Mailcheck https://github.com/Kicksend/mailcheck
   * Author
   * Derrick Ko (@derrickko)
   *
   * License
   * Copyright (c) 2012 Receivd, Inc.
   *
   * Licensed under the MIT License.
   *
   * v 1.1
   */

  var Kicksend = {
    mailcheck : {
      threshold: 3,

      defaultDomains: ["yahoo.com", "google.com", "hotmail.com", "gmail.com", "me.com", "aol.com", "mac.com",
        "live.com", "comcast.net", "googlemail.com", "msn.com", "hotmail.co.uk", "yahoo.co.uk",
        "facebook.com", "verizon.net", "sbcglobal.net", "att.net", "gmx.com", "mail.com"],

      defaultTopLevelDomains: ["co.uk", "com", "net", "org", "info", "edu", "gov", "mil"],

      run: function(opts) {
        opts.domains = opts.domains || Kicksend.mailcheck.defaultDomains;
        opts.topLevelDomains = opts.topLevelDomains || Kicksend.mailcheck.defaultTopLevelDomains;
        opts.distanceFunction = opts.distanceFunction || Kicksend.sift3Distance;

        var result = Kicksend.mailcheck.suggest(encodeURI(opts.email), opts.domains, opts.topLevelDomains, opts.distanceFunction);

        if (result) {
          if (opts.suggested) {
            opts.suggested(result);
          }
        } else {
          if (opts.empty) {
            opts.empty();
          }
        }
      },

      suggest: function(email, domains, topLevelDomains, distanceFunction) {
        email = email.toLowerCase();

        var emailParts = this.splitEmail(email);

        var closestDomain = this.findClosestDomain(emailParts.domain, domains, distanceFunction);

        if (closestDomain) {
          if (closestDomain != emailParts.domain) {
            // The email address closely matches one of the supplied domains; return a suggestion
            return { address: emailParts.address, domain: closestDomain, full: emailParts.address + "@" + closestDomain };
          }
        } else {
          // The email address does not closely match one of the supplied domains
          var closestTopLevelDomain = this.findClosestDomain(emailParts.topLevelDomain, topLevelDomains);
          if (emailParts.domain && closestTopLevelDomain && closestTopLevelDomain != emailParts.topLevelDomain) {
            // The email address may have a mispelled top-level domain; return a suggestion
            var domain = emailParts.domain;
            closestDomain = domain.substring(0, domain.lastIndexOf(emailParts.topLevelDomain)) + closestTopLevelDomain;
            return { address: emailParts.address, domain: closestDomain, full: emailParts.address + "@" + closestDomain };
          }
        }
        /* The email address exactly matches one of the supplied domains, does not closely
         * match any domain and does not appear to simply have a mispelled top-level domain,
         * or is an invalid email address; do not return a suggestion.
         */
        return false;
      },

      findClosestDomain: function(domain, domains, distanceFunction) {
        var dist;
        var minDist = 99;
        var closestDomain = null;

        if (!domain || !domains) {
          return false;
        }
        if(!distanceFunction) {
          distanceFunction = this.sift3Distance;
        }

        for (var i = 0; i < domains.length; i++) {
          if (domain === domains[i]) {
            return domain;
          }
          dist = distanceFunction(domain, domains[i]);
          if (dist < minDist) {
            minDist = dist;
            closestDomain = domains[i];
          }
        }

        if (minDist <= this.threshold && closestDomain !== null) {
          return closestDomain;
        } else {
          return false;
        }
      },

      sift3Distance: function(s1, s2) {
        // sift3: http://siderite.blogspot.com/2007/04/super-fast-and-accurate-string-distance.html
        if (s1 == null || s1.length === 0) {
          if (s2 == null || s2.length === 0) {
            return 0;
          } else {
            return s2.length;
          }
        }

        if (s2 == null || s2.length === 0) {
          return s1.length;
        }

        var c = 0;
        var offset1 = 0;
        var offset2 = 0;
        var lcs = 0;
        var maxOffset = 5;

        while ((c + offset1 < s1.length) && (c + offset2 < s2.length)) {
          if (s1.charAt(c + offset1) == s2.charAt(c + offset2)) {
            lcs++;
          } else {
            offset1 = 0;
            offset2 = 0;
            for (var i = 0; i < maxOffset; i++) {
              if ((c + i < s1.length) && (s1.charAt(c + i) == s2.charAt(c))) {
                offset1 = i;
                break;
              }
              if ((c + i < s2.length) && (s1.charAt(c) == s2.charAt(c + i))) {
                offset2 = i;
                break;
              }
            }
          }
          c++;
        }
        return (s1.length + s2.length) /2 - lcs;
      },

      splitEmail: function(email) {
        var parts = email.split('@');

        if (parts.length < 2) {
          return false;
        }

        for (var i = 0; i < parts.length; i++) {
          if (parts[i] === '') {
            return false;
          }
        }

        var domain = parts.pop();
        var domainParts = domain.split('.');
        var tld = '';

        if (domainParts.length == 0) {
          // The address does not have a top-level domain
          return false;
        } else if (domainParts.length == 1) {
          // The address has only a top-level domain (valid under RFC)
          tld = domainParts[0];
        } else {
          // The address has a domain and a top-level domain
          for (var i = 1; i < domainParts.length; i++) {
            tld += domainParts[i] + '.';
          }
          if (domainParts.length >= 2) {
            tld = tld.substring(0, tld.length - 1);
          }
        }

        return {
          topLevelDomain: tld,
          domain: domain,
          address: parts.join('@')
        };
      }
    }
  };

  if ($) {
    (function($){
      $.fn.mailcheck = function(opts) {
        var self = this;
        if (opts.suggested) {
          var oldSuggested = opts.suggested;
          opts.suggested = function(result) {
            oldSuggested(self, result);
          };
        }

        if (opts.empty) {
          var oldEmpty = opts.empty;
          opts.empty = function() {
            oldEmpty.call(null, self);
          };
        }

        opts.email = this.val();
        Kicksend.mailcheck.run(opts);
      };
    })($);
  }

  return Kicksend;
});
define('views/Login/ValidationController',[

  'application/runtime',

  'wunderbits/WBViewController',

  'wunderbits/helpers/email',
  'vendor/mailcheck',

  'wunderbits/data/tld'

], function (
  runtime,
  WBViewController,
  emailHelper, KSMailCheck,
  TLDData,
  undefined
) {

  

  var $ = runtime.$;

  var mailcheck = KSMailCheck.mailcheck;
  var domains = mailcheck.defaultDomains.slice();
  domains.push('6wunderkinder.com');

  var TLDs = mailcheck.defaultTopLevelDomains.slice();
  TLDs.push.apply(TLDs, TLDData.list);

  return WBViewController.extend({

    'implements': {
      'blur:input': 'check'
    },

    // Correct the value on an <input> element of type "email". If the value is
    // corrected, the elements value is updated, and the returned promise is
    // resolved with the new value. Otherwise, the promise is just resolved.
    'correct': function (element) {

      var self = this;
      element = element && element.target || element;
      var $target = $(element);
      var type = $target.attr('type');
      var value = $target.val();
      var deferred = self.deferred();

      if (type === 'email') {

        var parts = value.split('@');

        if (parts[1] === '6w') {
          value = parts[0] +  '@6wunderkinder';
          if (!self.corrected) {
            self.corrected = {};
          }

          if (self.corrected[value] === element) {
            return;
          }

          self.corrected[value] = element;

          KSMailCheck.mailcheck.run({
            email: value,
            domains: domains,
            topLevelDomains: TLDs,
            suggested: function (suggestion) {
              $target.val(suggestion.full);
              deferred.resolve(suggestion.full);
            },
            empty: function() {
              deferred.resolve();
            }
          });
        }
      }
      else {
        deferred.resolve();
      }

      return deferred.promise();
    },

    // Validate the value of an <input> element. If type "email", makes sure
    // the value is a single e-mail adress. If other type, makes sure that the
    // value is not empty. Returns a promise that is resolved with the
    // validated value and element, or rejected with the error and element
    'validate': function (element) {

      var self = this;
      element = element && element.target || element;
      var $target = $(element);
      var type = $target.attr('type');
      var value = $target.val();
      var deferred = self.deferred();

      if (type === 'file') {
        deferred.resolve();
      }

      if (type === 'email') {
        if (emailHelper.isValidEmail(value)) {
          deferred.resolve(value, element);
        }
        else {
          deferred.reject('invalid_email', element);
        }
      }
      else {

        var length = element.getAttribute('data-validate-length') || 1;

        if (!value) {
          deferred.reject('empty_value', element);
        }
        else if (value.length < length) {
          deferred.reject('too_short', element);
        }
        else {
          deferred.resolve(value, element);
        }
      }

      return deferred.promise();
    },

    // Validate a list of elements, stopping after finding the first invalid
    // value. Returns a promise that is resolved with the validated values,
    // or rejected with the error and first invalid element.
    'validateList': function (elements) {

      var self = this;
      var deferred = self.deferred();
      var values = {};
      // The function that will iterate over the fields
      function next () {

        var input = elements.shift();
        self.validate(input).fail(function (error, element) {
          self.view.renderError(error, element);
          deferred.reject(error, element);
        }, self).done(function (value) {
          var key = input.getAttribute('name');
          values[key] = value;
          elements.length && next() || deferred.resolve(values);
        }, self);
      }

      // Start validating the first input
      next();
      return deferred.promise();
    },

    'check': function (element) {

      var self = this;
      element = element && element.target || element;

      var corrected = self.view.options.correctOnBlur ? self.correct(element) : self.deferred().resolve();

      self.when(corrected).then(function () {

        if (self.view.options.validateOnBlur) {
          self.validate(element).fail(self.view.renderError);
        }
      });
    }
  });
});
define('wunderbits/helpers/keycodes',[

  '../WBSingleton'

], function (WBSingleton, undefined) {

  

  var keys = {

    // please only add keycodes
    // that we actually use in the app to this list
    // name -> keycode
    'backspace': 8,
    'tab': 9,

    'enter': 13,
    'esc': 27,

    'shift':16,

    'spacebar': 32,

    'left': 37,
    'up': 38,
    'right': 39,
    'down': 40,

    'del': 46,

    'zero': 48,
    'nine': 57,

    'padZero': 96,
    'padNine': 105,

    'dash': 189,

    // keycode -> name (for setting shortcuts)
    // extracted from mousetrap.js
    8: 'backspace',
    9: 'tab',
    13: 'enter',
    16: 'shift',
    17: 'ctrl',
    18: 'alt',
    20: 'capslock',
    27: 'esc',
    32: 'space',
    33: 'pageup',
    34: 'pagedown',
    35: 'end',
    36: 'home',
    37: 'left',
    38: 'up',
    39: 'right',
    40: 'down',
    45: 'ins',
    46: 'del',
    91: 'meta',
    93: 'meta',
    224: 'meta',
    // more of the same
    106: '*',
    107: '+',
    109: '-',
    110: '.',
    111: '/',
    186: ';',
    187: '=',
    188: ',',
    189: '-',
    190: '.',
    191: '/',
    192: '`',
    219: '[',
    220: '\\',
    221: ']',
    222: '\''
  };

  return WBSingleton.extend(keys);
});
define('views/Login/FormViewController',[

  'application/runtime',

  'views/Login/ValidationController',

  'wunderbits/helpers/keycodes'

], function (
  runtime,
  ValidationController,
  keycodes,
  undefined
) {

  

  var $ = runtime.$;

  return ValidationController.extend({

    'implements': {
      'click:submit': 'trySubmitForm',
      'change:input': 'checkInputKeys',
      'before': 'beforePopOrPush',
      'visible': 'bindGlobalKeys',
      'hidden': 'unbindGlobalKeys'
    },

    // Update the email input, then select first input
    'viewMadeVisible': function () {

      var self = this;

      if (self.view.state.email) {
        self.view.renderInputValue(self.view.getInput('.email'), self.view.state.email);
      }

      if (self.view.state.name) {
        self.view.renderInputValue(self.view.getInput('.name'), self.view.state.name);
      }

      self.view.renderInputValue(null, null, true);
    },

    // Before this view is popped or another view is pushed on top, save the state of the email input
    'beforePopOrPush': function () {

      var self = this;
      self.view.state.email = self.view.$(self.view.getInput('.email')).val();
    },

    'bindGlobalKeys': function () {

      var self = this;
      if (!self.view.globalKeysBind) {
        self.view.globalKeysBind = self.bindTo($(runtime.global.document), 'keyup', self.checkGlobalKeys);
      }
    },

    'unbindGlobalKeys': function () {

      var self = this;
      self.view.globalKeysBind && self.unbindFrom(self.view.globalKeysBind);
    },

    'checkGlobalKeys': function (ev) {

      var self = this;
      if (ev.which === keycodes.enter) {
        self.trySubmitForm();
      }
      else if (ev.which === keycodes.esc) {
        self.cancelForm();
      }
    },

    // React to value change of the view inputs
    'checkInputKeys': function (ev) {

      var self = this;
      var $target = $(ev.target);

      // The submit button should be enabled when the input content changes
      self.view.renderSubmitEnabled(true);

      // Enter should step through the fields, and if the last field, submit
      if (ev.which === keycodes.enter) {

        self.validate(ev.target)
          .done(function () {
            self.stepToNext(ev.target);
          })
          .fail(self.view.renderError, self.view);
      }
      else if (ev.which === keycodes.esc) {
        $target.val('').focus();
      }

      ev.stopPropagation();
    },

    // Step to the next input and select its value, or if none, submit the form
    'stepToNext': function (current) {

      var self = this;
      var $inputs = self.view.$('input');
      var index = $inputs.index(current);
      var nextIndex = index + 1;
      var nextElement = $inputs[nextIndex];

      if (nextElement) {
        $(nextElement).select();
      }
      else {

        // Blur the input, so the user cannot keep typing in the field while we submit
        $(current).blur();

        self.trySubmitForm();
      }
    },

    'submitForm': function () {

      var self = this;
      var deferred = self.deferred();
      return deferred.resolve().promise();
    },

    'cancelForm': function () {},

    'trySubmitForm': function () {

      var self = this;
      var elements = self.view.$('input');
      var validated = elements.length && self.validateList(elements.toArray()) || self.deferred().resolve();

      validated.done(function (data) {

        self.view.renderSubmitLoading(true);

        var errorBind = self.bindTo(runtime.user, 'error', onError);

        function onError (error) {

          self.view.renderError(error);
          self.unbindFrom(errorBind);
          self.view.renderSubmitLoading(false);
        }

        self.submitForm(data).done(function () {
          if (self.destroyed) {
            return;
          }

          self.unbindFrom(errorBind);
          self.view.renderSubmitLoading(false);
        }).fail(onError);
      }).fail(function () {

        // The validation failed, disable the submit button until the input
        // fires a keydown/change event.
        self.view.renderSubmitEnabled(false);
      });
    }
  });
});
define('templates/login/connectionError',['vendor/handlebars'], function(H) {
var name = 'login/connectionError';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"content page-error hidden\"> <div class=\"separator noline error server-error\"> <span class=\"icon-login whoops\"></span> <p class=\"center\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "api_error_connection_error", options) : helperMissing.call(depth0, "localized", "api_error_connection_error", options)))
    + "</p> </div> <div class=\"separator noline no-top-padding\"> <a class=\"button big blue submit\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_try_again", options) : helperMissing.call(depth0, "localized", "button_try_again", options)))
    + "</a> </div> </div>";
  return buffer;
  });
});
define('styles/login/_form',[],function() { return {'name': 'login/_form', 'styles': "#wunderlist-base .login-form{position:relative;} #wunderlist-base .login-form .button.external{margin-bottom:5px} #wunderlist-base .login-form .or{background-image:url(\"images/sprites/login.png\");background-position:0 -476px;width:260px;height:2px;margin:24px 0 24px -9px;line-height:0;text-align:center;color:#6a301b;font-weight:bold;text-shadow:0 1px 0 rgba(255,255,255,0.2)} #wunderlist-base .login-form .content{background:#e8e4e3;-webkit-border-radius:6px;border-radius:6px;-webkit-box-shadow:0 1px 6px rgba(0,0,0,0.65),inset 0 1px 2px rgba(255,255,255,0.63),inset 0 0 5px rgba(0,0,0,0.2);box-shadow:0 1px 6px rgba(0,0,0,0.65),inset 0 1px 2px rgba(255,255,255,0.63),inset 0 0 5px rgba(0,0,0,0.2);background-image:url(\"images/textures/login.png\");-webkit-border-radius:5px;border-radius:5px;height:100%;} #wunderlist-base .login-form .content h2{text-align:center;color:#595959;margin-top:15px;font-size:17px;text-shadow:0 1px 0 #fff;font-weight:bold;letter-spacing:normal;line-height:normal} #wunderlist-base .login-form .content p{margin-top:16px;font-size:13px;line-height:18px;text-shadow:0 1px 0 rgba(255,255,255,0.6);} #wunderlist-base .login-form .content p a{font-weight:bold;} #wunderlist-base .login-form .content p a:hover{text-decoration:underline} #wunderlist-base .login-form .content p.small{color:#818181;font-size:12px;margin-top:8px;line-height:15px;margin-bottom:0;} #wunderlist-base .login-form .content p.small.accept-terms{max-height:45px;padding:0 9px 9px 0;margin:9px 0 0 9px;overflow:auto} #wunderlist-base .login-form .content p.small a{color:#818181} #wunderlist-base .login-form .separator{position:relative;padding:14px;border-bottom:1px solid rgba(255,255,255,0.5);-webkit-box-shadow:inset 0 -1px 0 rgba(0,0,0,0.08);box-shadow:inset 0 -1px 0 rgba(0,0,0,0.08);margin-bottom:0;background:none;} #wunderlist-base .login-form .separator.noline{-webkit-box-shadow:none;box-shadow:none;border:none;} #wunderlist-base .login-form .separator.noline.no-bottom-padding{padding-bottom:0} #wunderlist-base .login-form .separator.noline.no-top-padding{padding-top:0} #wunderlist-base .login-form .separator:last-child{-webkit-box-shadow:none;box-shadow:none;border:none} #wunderlist-base .login-form input{color:#545454;text-shadow:0 1px 0 #fff;position:absolute;left:46px;right:15px;top:16px;width:auto;font-size:14px;} #wunderlist-base .login-form input.password{top:13px} #wunderlist-base .login-form input:-moz-placeholder{color:#a7a5a5;text-shadow:0 1px 0 #fff} #wunderlist-base .login-form .icon-login{margin-top:-2px;} #wunderlist-base .login-form .icon-login.email{background-position:-579px -44px;width:20px;height:20px;margin-top:1px;margin-left:1px} #wunderlist-base .login-form .icon-login.password{background-position:-559px -44px;width:20px;height:20px;margin-left:1px;margin-top:-7px} #wunderlist-base .login-form .icon-login.person{background-position:-599px -44px;width:20px;height:20px;margin-top:-4px} #wunderlist-base .login-form .icon-login.whoops,#wunderlist-base .login-form .icon-login.questionmark{margin:0 auto 10px auto;display:block} #wunderlist-base .login-form .icon-login ~ p{margin-top:3px} #wunderlist-base .login-form .icon-login.whoops{background-position:-360px -267px;width:45px;height:46px} #wunderlist-base .login-form .icon-login.questionmark{background-position:-502px -44px;width:43px;height:44px} #wunderlist-base .login-form .icon-login.picture{margin-top:-5px !important;margin-left:-5px;background-position:-290px -267px;width:70px;height:70px} #wunderlist-base .login-form .icon-login.facebook{background-position:-545px -44px;width:14px;height:22px} #wunderlist-base .login-form .icon-login.google{background-position:-639px -44px;width:12px;height:19px} #wunderlist-base .login-form .border-white{-webkit-border-radius:2px;border-radius:2px;-webkit-box-shadow:1px 0 rgba(0,0,0,0.08);box-shadow:1px 0 rgba(0,0,0,0.08);border:1px solid #bebdbb;background:#ededed;padding:2px;margin:0 auto;height:57px;width:58px;overflow:hidden} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){#wunderlist-base .login-form .icon-login{background-image:url(\"images/sprites/login-retina.png\") !important;-webkit-background-size:750px;-moz-background-size:750px;background-size:750px} }html[dir=rtl] #wunderlist-base .login-form input{right:46px;left:15px} html[dir=rtl] #wunderlist-base .icon-login.picture{margin-left:initial;margin-right:-5px} " }; });
define('views/Login/FormView',[

  'application/runtime',

  'wunderbits/WBViewPresenter',
  'views/Login/ErrorView',

  'views/Login/FormViewController',

  'template!login/connectionError',

  'style!login/_form',
  'style!login/_error'

], function (
  runtime,
  WBViewPresenter, ErrorView,
  FormViewController,
  connectionErrorTemplate,
  formStyle, errorStyle,
  undefined
) {

  

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'options': {
      'validateOnBlur': false,
      'correctOnBlur': true,
      'showBackButton': true
    },

    'className': 'login-form',

    'styles': [formStyle, errorStyle],

    'implements': [
      FormViewController
    ],

    'emits': {
      'keyup input': 'change:input',
      'blur input': 'blur:input',
      'click .submit': 'click:submit',
    },

    'getInput': function (selector) {

      var self = this;
      return self.$('input' + (selector || ''))[0];
    },

    'render': function () {

      var self = this;
      _super.render.apply(self, arguments);

      self.$el.append(connectionErrorTemplate({}));
      self.renderLocalized();

      return self;
    },

    'renderError': function (errorKey, element) {

      var self = this;

      if (errorKey === 'api_error_account_already_exists') {
        element = self.$('input.email')[0];
      }

      element = element || self.$('input')[0];

      if (errorKey === 'api_error_connection_error' || errorKey === 'login_signup_timeout') {

        self.renderConnectionError(true);
      }
      else {

        self.renderConnectionError(false);

        self.$(element).select();

        self.addSubview(new ErrorView({
          'errorKey': errorKey,
          'target': element
        }), 'error').render();
      }
    },

    // Render and optionally select value of given element, or first input
    'renderInputValue': function (element, value, select) {

      var self = this;
      var $element = self.$(element || self.getInput());
      var type = $element.attr('type');

      if (value && type !== 'file') {
        $element.val(value);
      }
      select && $element.select();
    },

    'renderConnectionError': function (state) {

      var self = this;
      self.$('.page-error').toggleClass('hidden', !state);
      self.$('.page-form').toggleClass('hidden', state);
    },

    'renderSubmitEnabled': function (state) {

      var self = this;
      self.$('.submit').toggleClass('disabled', !state);
    },

    'renderSubmitLoading': function (state) {

      var self = this;
      if (self.destroyed) {
        return;
      }

      self.$('.submit').toggleClass('loading', state);

      self.renderSubmitEnabled(!state);
      runtime.trigger('login:enable', !state);
    }
  });
});
define('views/Login/SignUpController',[

  'application/runtime',

  'views/Login/FormViewController',

], function (
  runtime,
  FormViewController,
  undefined
) {

  

  var $ = runtime.$;
  return FormViewController.extend({

    'submitForm': function (data) {

      var self = this;
      var deferred = new $.Deferred();

      runtime.trigger('trackingService', 'signup');

      runtime.user.register(data, {
        'success': function () {

          deferred.resolve();
          self.view.trigger('open', 'signup-avatar');
        }
      });

      return deferred.promise();
    }
  });
});
define('controllers/Auth/BaseController',[

  'application/runtime',

  'helpers/Auth/OAuthHelper',
  'helpers/ChromeIdentity',

  'wunderbits/WBViewController'

], function (
  runtime,
  OAuthHelper, ChromeIdentity,
  WBViewController,
  undefined
) {

  

  var _super = WBViewController.prototype;

  var identity = ChromeIdentity.identity;

  return WBViewController.extend({

    'implements': {
      'create:service': 'createService',
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.on('loading:start', self.loadingStart);
      self.on('loading:end', self.loadingEnd);
    },

    'providerName': null,
    'authBaseUrl': null,

    'authUrl': function () {

      var self = this;
      var params = self.authParams();
      return OAuthHelper.authUrl(self.authBaseUrl, params);
    },

    'parseToken': function (url) {

      // parse the response url
      var oauth_token;
      var hint = 'access_token=';
      var start = url.indexOf(hint);

      // if token found
      if (start > 0) {
        // extract it
        start = start + hint.length;
        oauth_token = url.substr(start);
        oauth_token = oauth_token.split('&')[0];
      }

      return oauth_token;
    },

    'connectExternal': function () {

      var self = this;

      // show the loading indicator
      self.trigger('loading:start');

      identity && identity.launchWebAuthFlow({
        'url': self.authUrl(),
        'interactive': true
      }, function (responseUrl) {

        var oauth_token = responseUrl !== undefined && self.parseToken(responseUrl);

        // valid token found, continue with auth
        if (responseUrl !== undefined && oauth_token) {
          self.handleToken(oauth_token);
        }
        // no token, no auth
        else {
          self.oauthError();
        }
      });
    },

    'handleToken': function (token) {

      var self = this;

      if (token) {
        self.requestAPIUser(token)
          .done(self.apiSuccess)
          .fail(function (xhr) {
            self.apiError(xhr, token);
          });
      }
      // handle null token
      else {
        self.oauthError();
      }
    },

    'requestAPIUser': function (token) {

      var self = this;

      var data = {
        'oauth_provider': self.providerName,
        // 'provider_type': self.providerName,
        'oauth_access_token': token
      };

      if (data.oauth_provider === 'google') {

        data.gmail = true;
      }
      // lookup the user on the API
      return runtime.io.post('/login', data);
    },

    '_loggedIn': function () {

      runtime.reload('/start/lists/inbox');
    },

    'apiSuccess': function (response) {

      var self = this;
      self.loadingEnd();

      // User found, log in now
      runtime.user.loginSuccess({
        'callback': self._loggedIn
      })(response);
    },

    'oauthError': function () {

      var self = this;
      self.loadingEnd();
    },

    'apiError': function (xhr, oauth_token) {

      var self = this;

      // User not found
      if (xhr.status === 404) {
        // Show the sign up page
        // prefill it with data from auth provider
        self.requestUserProfile(oauth_token)
          .done(self.profileSuccess)
          .fail(self.profileError);
      }
      // TODO: handle other status codes
      else {
        self.loadingEnd();
      }
    },

    'profileSuccess': function (data, oauth_token) {

      var self = this;
      self.loadingEnd();

      // show the signup page
      self.view.trigger('open', 'external-signup', true, {
        'providerType': self.providerName,
        'providerId': data.providerId,
        'name': data.name,
        'email': data.email,
        'avatar': data.avatar,
        'token': oauth_token
      });
    },

    'profileError': function () {

      var self = this;
      self.loadingEnd();

      // TODO: if token is invalid,
      // remove it from the cache & request a new one
    },

    'createService': function (data, callback) {

      var postData = {
        'username': data.name,
        'provider_id': data.providerId,
        // 'oauth_provider': data.providerType,
        'provider_type': data.providerType,
        'oauth_access_token': data.token
      };

      if (postData.provider_type === 'google') {

        postData.gmail = true;
      }


      // create a auth service for the user
      var xhr = runtime.io.post('/me/services', postData)
        .done(function () {
          callback && callback(xhr);
        });

      return xhr;
    },

    // show the loading indicator
    'loadingStart': function () {
      var self = this;
      self.view.toggleLoading(true, self.providerName);
    },

    // hide the loading indicator
    'loadingEnd': function () {
      var self = this;
      self.view.toggleLoading(false, self.providerName);
    }
  });

});
define('controllers/Auth/FacebookController',[

  'application/runtime',

  'helpers/Auth/facebook',

  'controllers/Auth/BaseController'

], function (
  runtime,
  Facebook,
  BaseAuthController,
  undefined
) {

  

  var $ = runtime.$;

  return BaseAuthController.extend({

    'implements': {
      'click:facebook': 'connectWithFacebook',
      'createService:facebook': 'createService',
    },

    'providerName': Facebook.providerName,

    'authBaseUrl': Facebook.authBaseUrl,

    'authParams': Facebook.authParams,

    'connectWithFacebook': function () {

      var self = this;

      // If chrome app
      if (runtime.env.isChromeApp()) {
        self.connectExternal();
      }
      // Otherwise try regular FB login
      else {
        Facebook.getFacebookOAuthToken('login/', false);
      }
    },

    'requestUserProfile': function (oauth_token) {

      var self = this;

      var request = new $.Deferred();

      // request user's graph data from facebook
      Facebook.getFacebookUserGraph(oauth_token, function (data) {

        request.resolve({
          'providerType': self.providerName,
          'providerId': data.id,
          'name': data.name,
          'email': data.email,
          'locale': data.locale,
          'avatar': data.avatar,
          'confirmed': false
        }, oauth_token);
      });

      return request.promise();
    }
  });
});

define('controllers/Auth/GoogleController',[

  'application/runtime',

  'helpers/Auth/google',

  'controllers/Auth/BaseController'

], function (
  runtime,
  Google,
  BaseAuthController,
  undefined
) {

  

  var $ = runtime.$;

  return BaseAuthController.extend({

    'implements': {
      'click:google': 'connectWithGoogle'
    },

    'providerName': Google.providerName,
    'authBaseUrl': Google.authBaseUrl,

    'authParams': function (state) {

      return Google.authParams(state);
    },

    'connectWithGoogle': function () {

      var self = this;
      var createService = false;

      // show the loading indicator
      self.trigger('loading:start');

      Google.connectWithGoogle('googleOAuthLogin', createService)
        .done(function (token) {

          self.handleToken(token);
        })
        .fail(self.oauthError);
    },

    'requestUserProfile': function (oauth_token) {

      var self = this;

      var request = new $.Deferred();

      // request user's profile data from google
      Google.requestProfile(oauth_token).done(function (data) {

        request.resolve({
          'providerType': self.providerName,
          'providerId': data.sub,
          'name': data.name,
          'email': data.email,
          'avatar': data.picture,
          'locale': data.locale,
          'confirmed': data.email_verified
        }, oauth_token);
      });

      return request.promise();
    }
  });
});

define('templates/login/signup',['vendor/handlebars'], function(H) {
var name = 'login/signup';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<a class=\"button external facebook auth\"> <div class=\"button-left\"><div class=\"icon-login facebook\"></div></div> <span></span>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_sign_up_with_$", "Facebook", options) : helperMissing.call(depth0, "localized", "button_sign_up_with_$", "Facebook", options)))
    + " </a> <a class=\"button external google auth\"> <div class=\"button-left\"><div class=\"icon-login google\"></div></div> <span></span>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_sign_up_with_$", "Google", options) : helperMissing.call(depth0, "localized", "button_sign_up_with_$", "Google", options)))
    + " </a> <div class=\"or\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_or", options) : helperMissing.call(depth0, "localized", "label_or", options)))
    + "</div> <div class=\"page-form\"> <div class=\"content\"> <div class=\"separator\"> <span class=\"icon-login person\"></span> <input type=\"text\" name=\"name\" class=\"chromeless text\" data-key-placeholder=\"label_name\"/> </div> <div class=\"separator\"> <span class=\"icon-login email\"></span> <input type=\"email\" name=\"email\" class=\"chromeless email\" data-key-placeholder=\"label_email\"/> </div> <div class=\"separator\"> <span class=\"icon-login password\"></span> <input type=\"password\" data-validate-length=\"5\" name=\"password\" class=\"chromeless password\" data-key-placeholder=\"label_password\"/> </div> <div class=\"separator last noline\"> <a class=\"submit button blue big\"><span></span>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_sign_up", options) : helperMissing.call(depth0, "localized", "button_sign_up", options)))
    + "</a> <p class=\"small center accept-terms\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "login_accept_terms", "$settings_terms_of_use", "$settings_privacy_policy", options) : helperMissing.call(depth0, "localized", "login_accept_terms", "$settings_terms_of_use", "$settings_privacy_policy", options)))
    + " </p> </div> </div> </div>";
  return buffer;
  });
});
define('styles/login/_signup',[],function() { return {'name': 'login/_signup', 'styles': "#wunderlist-base .login-external-signup{margin-top:20px;} #wunderlist-base .login-external-signup .separator:first-child{padding-bottom:10px} #wunderlist-base .login-external-signup .external-avatar{width:70px;height:70px} #wunderlist-base .login-external-signup .almost-done{margin-top:4px;} #wunderlist-base .login-external-signup .almost-done h2{font-size:15px;margin-top:0} #wunderlist-base .login-external-signup .almost-done p{margin-top:3px;font-size:12px} #wunderlist-base .login-signup{top:-24px;} #wunderlist-base .login-signup .or{margin-top:13px;margin-bottom:13px} #wunderlist-base .login-signup .last{padding-bottom:0} #wunderlist-base .button.cancel{margin-top:10px} " }; });
define('views/Login/SignUpView',[

  'application/runtime',

  'views/Login/FormView',

  'views/Login/SignUpController',
  'controllers/Auth/FacebookController',
  'controllers/Auth/GoogleController',

  'template!login/signup',

  'style!login/_signup',

], function (
  runtime,
  FormView,
  SignUpController, FacebookController, GoogleController,
  signupTemplate,
  signUpStyle,
  undefined
) {

  

  var $ = runtime.$;

  var _super = FormView.prototype;

  return FormView.extend({

    'url': ['signup', 'try/signup'],

    'className': 'login-form login-signup',

    'template': signupTemplate,

    'styles': [signUpStyle],

    'implements': [
      SignUpController,
      FacebookController,
      GoogleController
    ],

    'emits': {
      'click .auth.facebook': 'click:facebook',
      'click .auth.google': 'click:google'
    },

    'render': function () {

      var self = this;

      _super.render.apply(self, arguments);

      self.renderTermsLinks();

      return self;
    },

    'renderTermsLinks': function () {

      var self = this;
      var baseUrl = 'http://www.wunderlist.com/';
      var $el = self.$('.accept-terms');
      var $terms = $el.find('.token_0');
      var $privacy = $el.find('.token_1');

      var $termsLink = $('<a href="' + baseUrl + 'terms-of-use" target="_blank"></a>').append($terms.clone());
      $terms.replaceWith($termsLink);

      var $privacyLink = $('<a href="' +  baseUrl + 'privacy-policy" target="_blank"></a>').append($privacy.clone());
      $privacy.replaceWith($privacyLink);
    },

    'toggleLoading': function (showLoader, provider) {

      var self = this;
      showLoader = !!showLoader;
      self.$el.toggleClass('loading', showLoader);
      self.$('.button, page-form, .auth').toggleClass('disabled', showLoader);
      provider && self.$('.auth.' + provider).toggleClass('loading', showLoader);
      self.$('input').attr("readonly", showLoader);
    }
  });
});
define('helpers/PlatformHeaders',[

  'application/runtime',
  'wunderbits/WBSingleton'

], function (runtime, WBSingleton, undefined) {

  

  var config = runtime.config;
	var navigator = runtime.global.navigator;

  var version = 'Standard';

  // if (runtime.env.isChromeApp()) {
  //   version = 'ChromePackagedApp';
  // }
  // else if (runtime.isBrowserExtension()) {
  //   version = 'AddToWunderlistExtension';
  // }

  var headers = {
    'X-6W-Platform': runtime.env.isChromeApp() ? 'chrome' : 'web',
    'X-6W-Product':  'wunderlist',
    'X-6W-Product-Version': config.release,
    'X-6W-System': navigator.userAgent,
    'X-6W-System-Version': version
  };

  if (runtime.global.gitHash) {

    // send only the hash, do not send verbose string
    var gitHash = /\[(.*)\]/.exec(runtime.global.gitHash);
    gitHash = gitHash !== null ? gitHash[1] : false;
    gitHash && (headers['X-6W-Product-Git-Hash'] = gitHash);
  }

  var obj = {
    'headers': headers
  };

  return WBSingleton.extend(obj);
});
define('wunderbits/views/WBFileSelectorView',[

  '../lib/dependencies',
  '../WBView'

], function (dependencies, WBView, undefined) {

  

  var _ = dependencies._;
  var $ = dependencies.$;
  var _super = WBView.prototype;

  var fileSelectorMarkup = '<input type="file" multiple style="display:none" />';
  // bind drop events on document globally
  // and use document as a publishing channel too
  var doc = $(document.body);
  function cancel (e) {

    e = e.originalEvent || e;
    e.preventDefault();
    e.stopPropagation();
    return false;
  }

  function stop () {

    doc.trigger('drop:stop');
  }

  var stopTimer;
  doc.bindDrops = function () {

    // Hack jquerypp's dragover special treatment
    var oldDragover = $.event.special.dragover;
    $.event.special.dragover = null;

    doc.on('dragstart', function (e) {

      doc.trigger('drag:origin', e.target);
    });

    // publish drop starts
    doc.on('dragover', function (e) {

      doc.trigger('drop:start');
      cancel(e);
      clearTimeout(stopTimer);
    });

    // give jq++ back what it had
    $.event.special.dragover = oldDragover;

    // Ignore drops on document
    doc.on('drop', function (e) {

      stop();
      cancel(e);
    });

    // publish drop cancellations
    doc.on('dragleave', function (e) {

      e = e.originalEvent || e;
      stopTimer = setTimeout(stop, 200);
    });

    doc.bindDrops = null;
  };

  var WBFileSelectorView = WBView.extend({

    'input': null,

    'events': {
      'click': 'select'
    },

    'initialize': function (options) {

      var self = this;
      options = options || {};
      _super.initialize.call(self);

      // bind drop events to document, if not done already
      doc.bindDrops && doc.bindDrops();

      // optionally use a custom drop target
      if(options.dropTarget && options.dropTarget.length) {
        self.dropTarget = options.dropTarget;
      }
      // or fall back to the view element as drop target
      else {
        self.dropTarget = self.$el;
      }

      // pass in a click block function
      if (options.blocker) {
        self.blocker = options.blocker;
      }

      // the urlBlocker is for giving the ability to decide which elements should get the dragover
      // state. Unfortunately, the state is global. This would specifically fix an instance where
      // the detail view and settings modal are open, and when a picture is dragged into the window,
      // both would light up with dragover states.
      if (options.urlBlocker) {

        self.urlBlocker = options.urlBlocker;
      }

      // bind drag/drop events
      self._bindDropEvents();

      return self;
    },

    'select': function (e) {

      var self = this;

      if (self.blocker && self.blocker()) {
        return;
      }

      // prevent infinite loop
      if (e && $(e.target).is('input[type=file]')) {
        return;
      }

      // attach a file input to dom
      self.input = $(fileSelectorMarkup);
      self.$el.append(self.input);

      // trigger click on the file selector & handle selection
      self.input.on('change', function (e) {
        self._filesSelected(e);
      });
      self.input.click();
    },

    '_filesSelected': function (e) {

      var self = this;

      // remove the input selector & cleanup
      self.input.off('change', self._filesSelected);
      self.input.remove();
      self.input = null;

      // publish files
      var files = e.target.files;
      files.length && self.trigger('selected:files', files);
    },

    '_bindDropEvents': function () {

      var self = this;
      self.bindTo(doc, 'drop:start', self._dropStart);
      self.bindTo(doc, 'drop:stop', self._dropStop);
      self.bindTo(self.dropTarget, 'drop', self._drop);

      // global
      self.bindTo(doc, 'drag:origin', self._setOrigin);
      self.bindTo(doc, 'drop', self._drop);
    },

    '_setOrigin': function (e, target) {

      var self = this;
      self.dropOrigin = target;
    },

    '_dropStart': function () {

      var self = this;
      if (!self.urlBlocker || window.location.hash.indexOf(self.urlBlocker) === -1) {
        self.dropTarget.addClass('drop');
      }
    },

    '_dropStop': function () {

      var self = this;

      self.dropTarget.removeClass('drop');
    },

    '_drop':  function (e) {

      var self = this;
      cancel(e);
      e = e.originalEvent;

      // if there is an origin to this drop
      // e.g. drag started in the app, ignore it
      if (self.dropOrigin) {

        self.dropOrigin = null;
        self._dropStop();
        return;
      }

      self.dropTarget.removeClass('drop');

      var dataTransfer = e.dataTransfer;
      var files = dataTransfer.files;
      var items = dataTransfer.items;

      // Files
      if (files.length > 0) {

        // Handle folders in chrome
        if (items && 'webkitGetAsEntry' in items[0]) {
          var realFiles = [];
          _.each(items, function (item, index) {
            var entry = item.webkitGetAsEntry();
            if (entry && entry.isFile) { // !entry.isDirectory
              realFiles.push(files[index]);
            }
          });
          files = realFiles;
        }
        // Handle folders in firefox
        else {
          files = _.filter(files, function (file) {
            return file.size > 0;
          });
        }

        files.length && self.trigger('selected:files', files);
      }
      // Dropped Text
      else {

        // copy the text
        dataTransfer.dropEffect = 'copy';

        var text = e.dataTransfer.getData("text/plain");
        !!text && self.trigger('dropped:text', text);

        var html = e.dataTransfer.getData("text/html");
        !!html && self.trigger('dropped:html', html);
      }
    }

  });

  return WBFileSelectorView;
});
/* global FormData */
define('wunderbits/WBFileUploader',[

  './lib/dependencies',
  './WBClass',
  './helpers/SafeParse'

], function (
  dependencies,
  WBClass,
  SafeParse,
  undefined
) {

  

  var _super = WBClass.prototype;
  var _ = dependencies._;

  return WBClass.extend({

    'initialize': function (options) {

      var self = this;
      _super.initialize.apply(self, arguments);
      self.options = options || {};
      self.acceptedFileTypes = options.acceptedFileTypes || '';
      self.uploadURL = options.uploadURL || '';
      self.uploadAction = options.uploadAction || 'POST';
      self.customHeaders = options.customHeaders || '';
      self.fileKey = options.fileKey || 'avatar';
      self.extraParams = options.extraParams;

      self.xhr = new XMLHttpRequest();
      self.setupFormData();
    },

    'isFileTypeAllowed': function (file) {

      var self = this;
      var type = file.type;

      // this is here because chromium did not return mime types on application/json files
      // https://code.google.com/p/chromium/issues/detail?id=323937&thanks=323937&ts=1385565619
      var extension = self.getFileExtension(file);

      if (type === '' && extension) {

        type = 'application/' + extension;
      }

      if (self.acceptedFileTypes.indexOf(type) !== -1 || self.acceptedFileTypes === '') {

        return true;
      }

      return false;
    },

    'getFileExtension': function (file) {

      return file.name.indexOf('.') >= 0 ? file.name.split('.').pop(): false;
    },

    'upload': function (file) {

      var self = this;

      // this is a reminder to save hours of your life: never hard code the
      // Content-Type when sending an Avatar to the API. The boundary gets jacked
      // and you are not going to have a good time.

      self.file = file;
      if (self.isFileTypeAllowed(file)) {

        self.formData.append(self.fileKey, file);

        if (self.extraParams) {
          var params = _.pairs(self.extraParams);
          _.each(params, function (param) {
            self.formData.append(param[0], param[1]);
          });
        }

        self.xhr.open(self.uploadAction, self.uploadURL, true);
        self.customHeaders && self.setupCustomHeaders();
        var uploadProgress;

        self.xhr.upload.addEventListener('progress', function (ev) {

          if (ev.lengthComputable) {

            uploadProgress = (ev.loaded / ev.total * 100 | 0);
            uploadProgress = uploadProgress -= 5;
            self.onProgress(uploadProgress);
          }
        }, false);

        self.xhr.onreadystatechange = function () {
          var state = self.xhr.readyState;
          if (state === 4) {
            var data = SafeParse.json(self.xhr.responseText);
            self.onComplete(data);
          }
        };

        self.xhr.addEventListener('error', function () {
          self.options.onError && typeof self.options.onError === 'function' && self.options.onError();
          self.file = null;
        }, false);

        self.xhr.send(self.formData);
      }
    },

    'setupFormData': function () {

      var self = this;
      self.formData = new FormData();
    },

    'setupCustomHeaders': function () {

      var self = this;

      for (var i in self.customHeaders) {

        // make option
        if (i === 'X-File-Name') {
          self.xhr.setRequestHeader(i, encodeURIComponent(self.file.name));
          continue;
        }
        self.xhr.setRequestHeader(i, self.customHeaders[i]);
      }
    },

    'onProgress': function (progress) {

      var self = this;
      self.options.onProgress(progress);
    },

    'onComplete': function (resp) {

      var self = this;
      self.options.onUploadComplete(resp);
      self.file = null;
    }
  });
});
define('templates/login/avatar-upload',['vendor/handlebars'], function(H) {
var name = 'login/avatar-upload';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"icon-login picture choose\"> <img class=\"hidden\" /> <span></span> </div> <div class=\"drop-zone\"></div> <div class=\"avatar-upload-el\"> </div>";
  });
});
define('styles/login/_avatar-upload',[],function() { return {'name': 'login/_avatar-upload', 'styles': "#wunderlist-base .avatar-upload{position:relative;cursor:pointer;} #wunderlist-base .avatar-upload .avatar-upload-el{display:none} #wunderlist-base .avatar-upload input{left:auto !important;right:0 !important;z-index:999} #wunderlist-base .avatar-upload img{width:68px} #wunderlist-base .avatar-upload .choose.drop + .drop-zone{display:block} #wunderlist-base .avatar-upload .drop-zone{display:none;position:absolute;top:-2px;left:-2px;height:66px;width:66px;background:rgba(0,0,0,0.2);z-index:9999;-webkit-border-radius:2px;border-radius:2px} #wunderlist-base .avatar-upload.loading .choose{background:-webkit-gradient(linear, left top, left bottom, color-stop(0, #ececec), color-stop(1, #e1e1e1)) !important;background:-webkit-linear-gradient(top, #ececec 0, #e1e1e1 100%) !important;background:-moz-linear-gradient(top, #ececec 0, #e1e1e1 100%) !important;background:-o-linear-gradient(top, #ececec 0, #e1e1e1 100%) !important;background:-ms-linear-gradient(top, #ececec 0, #e1e1e1 100%) !important;background:linear-gradient(top, #ececec 0, #e1e1e1 100%) !important;-webkit-box-shadow:inset 0 0 10px rgba(0,0,0,0.25);box-shadow:inset 0 0 10px rgba(0,0,0,0.25);height:66px;width:66px;-webkit-border-radius:2px;border-radius:2px;margin-top:1px} #wunderlist-base .avatar-upload.loading span{-webkit-animation:rotate .8s linear infinite;-moz-animation:rotate .8s linear infinite;-webkit-animation:rotate .8s linear infinite;-moz-animation:rotate .8s linear infinite;-o-animation:rotate .8s linear infinite;-ms-animation:rotate .8s linear infinite;animation:rotate .8s linear infinite;display:block;position:absolute;left:50%;top:50%;margin-left:-10px;margin-top:-10px;width:19px;height:19px;background:url(\"images/loading_black.png\");opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50)} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){#wunderlist-base .avatar-upload.loading span{background:url(\"images/loading_black@2x.png\");-webkit-background-size:19px;-moz-background-size:19px;background-size:19px} }" }; });
define('views/Login/AvatarUploadView',[

  'application/runtime',

  'helpers/BlobHelper',
  'helpers/PlatformHeaders',

  'wunderbits/WBViewPresenter',
  'wunderbits/views/WBFileSelectorView',
  'wunderbits/WBFileUploader',

  'template!login/avatar-upload',

  'style!login/_avatar-upload'

], function (
  runtime,
  BlobHelper, PlatformHeaders,
  WBViewPresenter, WBFileSelectorView, WBFileUploader,
  avatarUploadTemplate,
  avatarUploadStyle,
  undefined
) {

  

  var _super = WBViewPresenter.prototype;
  var config = runtime.config;

  var _ = runtime._;

  return WBViewPresenter.extend({

    'className': 'avatar-upload',

    'template': avatarUploadTemplate,

    'styles': [avatarUploadStyle],

    'render': function () {

      var self = this;
      _super.render.apply(self, arguments);

      var headers = _.extend({
        'Authorization': 'Bearer ' + runtime.user.attributes.token,
        'X-Requested-With':'XMLHttpRequest',
        'X-File-Name': ''
      }, PlatformHeaders.headers);

      self.fileUploader = new WBFileUploader({
        'acceptedFileTypes': ['image/gif', 'image/jpeg', 'image/png'],
        'uploadAction': 'PUT',
        'uploadURL': config.api.host + '/me',
        'customHeaders': headers,
        'onProgress': function () {

          self.$el.addClass('loading');
        },
        'onUploadComplete': function (data) {

          runtime.user.save({
            'avatar': data.avatar
          }, {
            'success': function () {

              var $image = self.$('img').removeClass('hidden');
              var loadBind = self.bindTo($image, 'load', function () {

                self.$el.removeClass('loading');
                self.unbindFrom(loadBind);
              });

              BlobHelper.loadImage(runtime.user.attributes.avatar, $image);
            }
          });
        }
      });

      if (!self.fileSelectorView) {
        var dropTarget = self.$('.choose');
        var view = new WBFileSelectorView({
          'dropTarget': dropTarget
        });

        self.fileSelectorView = self.addSubview(view, 'selectorView');
        self.fileSelectorView.setElement(self.$('.choose'));
        self.bindTo(self.fileSelectorView, 'selected:files', self.uploadAvatar);
      }

      return self;
    },

    'uploadAvatar': function (file) {

      var self = this;
      // run upload
      self.fileUploader.upload(file[0]);
    }
  });
});
define('views/Login/SignUpAvatarUploadController',[

  'application/runtime',

  'views/Login/FormViewController'

], function (
  runtime,
  FormViewController,
  undefined
) {

  

  return FormViewController.extend({

    'submitForm': function () {

      var self = this, view = self.view;
      var deferred = self.deferred();

      view.trigger('open', 'newsletter');
      
      return deferred.resolve().promise();
    }
  });
});
define('templates/login/signupAvatarUpload',['vendor/handlebars'], function(H) {
var name = 'login/signupAvatarUpload';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"page-form\"> <div class=\"content\"> <div class=\"separator center\"> <div class=\"border-white picture\"> </div> <p class=\"center\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "login_add_photo_hint", options) : helperMissing.call(depth0, "localized", "login_add_photo_hint", options)))
    + "</p> </div> <div class=\"separator noline\"> <a class=\"button big blue submit\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_get_started", options) : helperMissing.call(depth0, "localized", "button_get_started", options)))
    + "</a> </div> </div> </div>";
  return buffer;
  });
});
define('views/Login/SignUpAvatarUploadView',[

  'application/runtime',

  'views/Login/FormView',
  'views/Login/AvatarUploadView',
  'views/Login/SignUpAvatarUploadController',

  'template!login/signupAvatarUpload',

  'style!login/_signup'

], function (
  runtime,
  FormView, AvatarUploadView,
  SignUpAvatarUploadController,
  template,
  SignUpStyle,
  undefined
) {

  

  var _super = FormView.prototype;

  return FormView.extend({

    'options': {
      'showBackButton': false
    },

    'className': 'login-form login-signup-avatar-upload',

    'template': template,

    'styles': [SignUpStyle],

    'implements': [SignUpAvatarUploadController],

    'render': function () {

      var self = this;
      _super.render.apply(self, arguments);

      var avatarView = self.addSubview(new AvatarUploadView(), 'avatar');
      self.$('.picture').html(avatarView.render().el);

      return self;
    }
  });
});
define('views/Login/NewsletterOptInController',[

  'application/runtime',

  'views/Login/FormViewController'

], function (
  runtime,
  FormViewController,
  undefined
) {

  

  return FormViewController.extend({

    'implements': {
      'click:cancel': 'cancelForm'
    },

    'submitForm': function () {

      var self = this;
      var deferred = self.deferred();
      var email = runtime.user.attributes.email;
      var url = 'https://6wunderkinder.us2.list-manage.com/subscribe/post-json?u=ba476a60452a0649997d70cc2&id=3f327b8b05&email=' + email + '&subscribe=Subscribe';

      if (!runtime.env.isPackagedApp()) {
        url += '&c=?&type=jsonp&jsonp=c';
      }

      // TODO: move jsonp to runtime.IO
      runtime.$.ajax({
        'url': url,
        'type': 'GET',
        'dataType': runtime.env.isPackagedApp() ? 'json' : 'jsonp',

        'success': function () {

          runtime.trigger('analytics:newsletter:signup-opt-in');
          deferred.resolve();
        }
      });

      deferred.done(self.openApp);

      return deferred.promise();
    },

    'cancelForm': function () {

      var self = this;
      self.openApp();
    },

    'openApp': function () {

      var self = this, view = self.view;
      var path = view.state.path || 'lists/inbox';

      if (runtime.application === 'main') {
        runtime.trigger('route:' + path);
      }
      else {
        runtime.reload('/' + path, false);
      }
    }
  });
});
define('templates/login/newsletterOptIn',['vendor/handlebars'], function(H) {
var name = 'login/newsletterOptIn';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"page-form\"> <div class=\"content\"> <div class=\"separator\"> <h2>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_newsletter", options) : helperMissing.call(depth0, "localized", "label_newsletter", options)))
    + "</h2> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "tutorial_welcome_newsletter_subscribe", options) : helperMissing.call(depth0, "localized", "tutorial_welcome_newsletter_subscribe", options)))
    + "</p> </div> <div class=\"separator noline\"> <a class=\"button big blue submit\"> <span></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_subscribe", options) : helperMissing.call(depth0, "localized", "button_subscribe", options)))
    + " </a> <a class=\"button big grey cancel\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "social_sharing_button_no_thanks", options) : helperMissing.call(depth0, "localized", "social_sharing_button_no_thanks", options)))
    + " </a> </div> </div> </div>";
  return buffer;
  });
});
define('views/Login/NewsletterOptInView',[

  'application/runtime',

  'views/Login/FormView',
  'views/Login/NewsletterOptInController',

  'template!login/newsletterOptIn',

  'style!login/_signup'

], function (
  runtime,
  FormView,
  NewsletterOptInController,
  template,
  SignUpStyle,
  undefined
) {

  

  return FormView.extend({

    'options': {
      'showBackButton': false
    },

    'className': 'login-form login-signup-newsletter-optin',

    'template': template,

    'styles': [SignUpStyle],

    'implements': [NewsletterOptInController],

    'emits': {
      'click .cancel': 'click:cancel'
    }
  });
});
define('views/Login/SignInController',[

  'application/runtime',

  'views/Login/FormViewController'

], function (
  runtime,
  FormViewController,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;

  return FormViewController.extend({

    'implements': {
      'click:forgot-password': 'openForgotPassword'
    },

    'submitForm': function (data) {

      var self = this;
      runtime.trigger('timeline:start', 'login_clicked');
      runtime.trigger('timeline:start', 'login_load_app');
      runtime.trigger('timeline:start', 'user_login');

      runtime.trigger('trackingService', 'login');

      var deferred = self.deferred();
      var path = this.view.state.path || 'lists/inbox';

      runtime.user.login(data, {
        'callback': function () {

          runtime.trigger('timeline:start', 'login_refreshing');

          // Trigger password managers and stuff to save the data
          // by actually submitting a form, like in the nineties
          var form = $('.fake-form form')[0];
          var elements = form.elements;
          elements.namedItem('email').value = data.email;
          elements.namedItem('password').value = data.password;
          form.submit();

          // reload the app for now
          _.delay(function () {
            runtime.reload('/start/' + path, false);
          }, 50);
        }
      });

      return deferred.promise();
    },

    'openForgotPassword': function () {

      var self = this;
      self.view.trigger('open', 'forgot');
    }
  });
});
define('templates/login/signin',['vendor/handlebars'], function(H) {
var name = 'login/signin';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<a class=\"button external facebook auth\"> <div class=\"button-left\"><div class=\"icon-login facebook\"></div></div> <span></span>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_log_in_with_$", "Facebook", options) : helperMissing.call(depth0, "localized", "button_log_in_with_$", "Facebook", options)))
    + " </a> <a class=\"button external google auth\"> <div class=\"button-left\"><div class=\"icon-login google\"></div></div> <span></span>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_log_in_with_$", "Google", options) : helperMissing.call(depth0, "localized", "button_log_in_with_$", "Google", options)))
    + " </a> <div class=\"or\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_or", options) : helperMissing.call(depth0, "localized", "label_or", options)))
    + "</div> <div class=\"page-form\"> <div class=\"content\"> <div class=\"separator\"> <span class=\"icon-login email\"></span> <input type=\"email\" name=\"email\" class=\"chromeless email\" data-key-placeholder=\"label_email\"/> </div> <div class=\"separator\"> <span class=\"icon-login password\"></span> <input type=\"password\" name=\"password\" class=\"chromeless password\" data-key-placeholder=\"label_password\"/> </div> <div class=\"separator last noline\"> <a class=\"submit button blue big\"> <span></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_log_in", options) : helperMissing.call(depth0, "localized", "button_log_in", options)))
    + " </a> </div> </div> <div class=\"center\"> <a class=\"button forgot-password clear\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "login_forgot_password", options) : helperMissing.call(depth0, "localized", "login_forgot_password", options)))
    + " </a> </div> </div>";
  return buffer;
  });
});
define('styles/login/_signin',[],function() { return {'name': 'login/_signin', 'styles': "#wunderlist-base .login-signin{position:relative;top:-17px;} #wunderlist-base .login-signin .forgot-password{margin-top:20px} " }; });
define('views/Login/SignInView',[

  'application/runtime',

  'views/Login/FormView',

  'views/Login/SignInController',

  'controllers/Auth/FacebookController',
  'controllers/Auth/GoogleController',
  // 'controllers/Auth/GithubController',

  'template!login/signin',

  'style!login/_signin'

], function (
  runtime,
  FormView,
  SignInController,
  FacebookController, GoogleController,
  // GithubController,
  signinTemplate,
  signinStyle,
  undefined
) {

  

  return FormView.extend({

    'url': [
      'login',
      'try/login'
    ],

    'className': 'login-form login-signin',

    'styles': [signinStyle],

    'template': signinTemplate,

    'implements': [
      SignInController,
      FacebookController,
      GoogleController
      // GithubController
    ],

    'emits': {
      'click .auth.facebook': 'click:facebook',
      'click .auth.google': 'click:google',
      // 'click .auth.github': 'click:github',
      'click .forgot-password': 'click:forgot-password'
    },

    'toggleLoading': function (showLoader, provider) {

      var self = this;
      showLoader = !!showLoader;
      self.$el.toggleClass('loading', showLoader);
      self.$('.button, page-form, .auth').toggleClass('disabled', showLoader);
      provider && self.$('.auth.' + provider).toggleClass('loading', showLoader);
      self.$('input').attr("readonly", showLoader);
    }

  });
});
define('views/Login/ForgotPasswordController',[

  'application/runtime',

  'views/Login/FormViewController',

], function (
  runtime,
  FormViewController,
  undefined
) {

  

  var $ = runtime.$;

  return FormViewController.extend({

    'implements': {
      'click:go-back': 'close'
    },

    'submitForm': function (data) {

      var self = this;
      var deferred = new $.Deferred();

      runtime.user.forgotPassword(data, {
        'success': function () {
          deferred.resolve();
          self.view.renderConfirmation();
        },
        'error': deferred.reject
      });

      return deferred.promise();
    },

    'close': function () {

      var self = this;
      self.view.trigger('close');
    }
  });
});
define('templates/login/forgot',['vendor/handlebars'], function(H) {
var name = 'login/forgot';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"page-form\"> <div class=\"content form\"> <div class=\"separator\"> <span class=\"icon-login questionmark\"></span> <h2 class=\"center\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "login_forgot_password_heading", options) : helperMissing.call(depth0, "localized", "login_forgot_password_heading", options)))
    + "</h2> <p class=\"center\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "login_forgot_password_text", options) : helperMissing.call(depth0, "localized", "login_forgot_password_text", options)))
    + " </p> </div> <div class=\"separator\"> <span class=\"icon-login email\"></span> <input type=\"email\" name=\"email\" class=\"chromeless email\" data-key-placeholder=\"label_email\"> </div> <div class=\"separator\"> <a class=\"button big blue submit\"> <span></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_reset_password", options) : helperMissing.call(depth0, "localized", "label_reset_password", options)))
    + "</a> <p class=\"small center\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "login_want_to_try_again", options) : helperMissing.call(depth0, "localized", "login_want_to_try_again", options)))
    + " <a class=\"go-back\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_go_back", options) : helperMissing.call(depth0, "localized", "button_go_back", options)))
    + "</a> </p> </div> </div> <div class=\"content confirm\" style=\"display:none;\"> <div class=\"separator noline forgotpwconfirm\"> <h2 class=\"center\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_reset_password", options) : helperMissing.call(depth0, "localized", "button_reset_password", options)))
    + "</h2> <p class=\"center\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "login_password_reset_email_has_been_sent", options) : helperMissing.call(depth0, "localized", "login_password_reset_email_has_been_sent", options)))
    + "</p> </div> <div class=\"separator noline no-top-padding\"> <a class=\"button big blue go-back\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_go_back_sentence", options) : helperMissing.call(depth0, "localized", "button_go_back_sentence", options)))
    + "</a> </div> </div> </div>";
  return buffer;
  });
});
define('views/Login/ForgotPasswordView',[

  'application/runtime',

  'views/Login/FormView',
  'views/Login/ForgotPasswordController',

  'template!login/forgot'

], function (
  runtime,
  FormView,
  ForgotPasswordController,
  forgotPasswordTemplate,
  undefined
) {

  

  return FormView.extend({

    'url': 'forgot-password',

    'className': 'login-form login-forgot-password',

    'template': forgotPasswordTemplate,

    'implements': [ForgotPasswordController],

    'emits': {
      'click .go-back': 'click:go-back'
    },

    'renderConfirmation': function () {

      var self = this;

      self.fadeOut(300, '.content.form').done(function () {
        self.fadeIn(300, '.content.confirm');
      });
    }
  });
});
define('controllers/Auth/ExternalSignupController',[

  'application/runtime',

  'views/Login/FormViewController'

], function (
  runtime,
  FormViewController,
  undefined
) {

  

  var $ = runtime.$;

  return FormViewController.extend({

    'implements': {
      'visible': 'renderAvatar'
    },

    'renderAvatar': function () {
      var self = this;
      self.view.renderAvatar();
    },

    'submitForm': function (data) {

      var deferred = new $.Deferred();

      var self = this;

      runtime.user.register(data, {
        'success': function () {

          if (self.view.state.token) {
            self.view.trigger('create:service', self.view.state, function () {

              runtime.reload('/setup/lists/inbox');
            });
          }
          else {

            runtime.reload('/setup/lists/inbox');
          }
        },
        'error': function () {

          deferred.reject();
        }
      });

      return deferred.promise();
    }
  });
});
define('templates/login/externalSignUp',['vendor/handlebars'], function(H) {
var name = 'login/externalSignUp';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";


  buffer += "<div class=\"page-form\"> <div class=\"content\"> <div class=\"separator center\"> <div class=\"border-white icon-login picture\"> <img class=\"external-avatar\" /> </div> <div class=\"center almost-done\"> <h2>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "login_enter_password", options) : helperMissing.call(depth0, "localized", "login_enter_password", options)))
    + "</h2> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "login_enter_password_hint", options) : helperMissing.call(depth0, "localized", "login_enter_password_hint", options)))
    + "</p> </div> </div> <div class=\"separator\"> <span class=\"icon-login person\"></span> <input type=\"text\" name=\"name\" class=\"chromeless text\" data-key-placeholder=\"label_name\" value=\"";
  if (stack2 = helpers.name) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.name; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" /> </div> <div class=\"separator\"> <span class=\"icon-login email\"></span> <input type=\"email\" name=\"email\" class=\"chromeless email\" data-key-placeholder=\"label_email\" value=\"";
  if (stack2 = helpers.email) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.email; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" /> </div> <div class=\"separator\"> <span class=\"icon-login password\"></span> <input type=\"password\" data-validate-length=\"5\" name=\"password\" class=\"chromeless password\" data-key-placeholder=\"label_password\" /> </div> <div class=\"separator last noline\"> <a class=\"submit button blue big\"> <span></span>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_sign_up", options) : helperMissing.call(depth0, "localized", "button_sign_up", options)))
    + " </a> <p class=\"small center accept-terms\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "login_accept_terms", "$settings_terms_of_use", "$settings_privacy_policy", options) : helperMissing.call(depth0, "localized", "login_accept_terms", "$settings_terms_of_use", "$settings_privacy_policy", options)))
    + " </p> </div> </div> </div>";
  return buffer;
  });
});
define('views/Login/ExternalSignUpView',[

  'application/runtime',

  'helpers/BlobHelper',

  'views/Login/FormView',

  'controllers/Auth/ExternalSignupController',
  'controllers/Auth/BaseController',

  'template!login/externalSignUp',

  'style!login/_signup'

], function (
  runtime,
  BlobHelper,
  FormView,
  ExternalSignupController,
  BaseAuthController,
  externalSignUpTemplate,
  signupStyle,
  undefined
) {

  

  var $ = runtime.$;
  var _super = FormView.prototype;

  return FormView.extend({

    'className': 'login-form login-external-signup',

    'options': {
      'showBackButton': true,
      'hideRibbon': true
    },

    'styles': [signupStyle],

    'template': externalSignUpTemplate,

    'implements': [
      ExternalSignupController,
      BaseAuthController
    ],

    'render': function () {

      var self = this;
      _super.render.apply(self, arguments);
      self.renderTermsLinks();
      return self;
    },

    'renderTermsLinks': function () {

      var self = this;
      var baseUrl = 'http://www.wunderlist.com/';
      var $el = self.$('.accept-terms');
      var $terms = $el.find('.token_0');
      var $privacy = $el.find('.token_1');

      var $termsLink = $('<a href="' + baseUrl + 'terms-of-use" target="_blank"></a>').append($terms.clone());
      $terms.replaceWith($termsLink);

      var $privacyLink = $('<a href="' +  baseUrl + 'privacy-policy" target="_blank"></a>').append($privacy.clone());
      $privacy.replaceWith($privacyLink);
    },

    'renderAvatar': function () {

      var self = this;
      var $img = self.$('img.external-avatar');
      var url = self.state && self.state.avatar;
      url && BlobHelper.loadImage(url, $img);
    }
  });
});

define('views/Login/FormsStackController',[

  'application/runtime',

  'wunderbits/WBViewController'

], function (
  runtime,
  WBViewController,
  undefined
) {

  

  var _ = runtime._;

  var _super = WBViewController.prototype;

  return WBViewController.extend({

    'implements': {

      'click:back': 'onClickBack',
      'click:close': 'triggerClose'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.bindTo(runtime, 'forceLoginState', self.forceStackState);
    },

    'forceStackState': function (route) {

      var self = this;

      if (_.isArray(route)) {
        route = route[0];
      }

      _.each(self.view.views, function (view) {
        view.destroy();
      });
      self.view.views = [];

      runtime.global.location.hash = '/' + route;

      self.defer(function () {
        runtime.trigger('startHistory');
      });
    },

    'onClickBack': function () {

      var self = this;
      self.view.popView();
    },

    'triggerClose': function () {

      if (runtime.user.isUnregistered()) {
        runtime.trigger('route:lists/inbox');
      }
      else {
        runtime.post('close');
      }
    }
  });
});
define('templates/login/formsStack',['vendor/handlebars'], function(H) {
var name = 'login/formsStack';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "";


  buffer += "<a class=\"arrow-back transparent\"><span class=\"arrow-back-image\"></span></a> <div class=\"ribbon-edge\"></div> <div class=\"logo normal-size\"></div> <a class=\"close transparent\"><span class=\"close-icon\"></span></a> "
    + " <div class=\"hidden fake-form\"> <iframe src=\"about:blank\" name=\"fakeFormFrame\"></iframe> <form action=\"/blank\" method=\"post\" target=\"fakeFormFrame\"> <input type=\"text\" name=\"email\" /> <input type=\"password\" name=\"password\" /> <input type=\"submit\" /> </form> </div>";
  return buffer;
  });
});
define('styles/login/_formsStack',[],function() { return {'name': 'login/_formsStack', 'styles': "#wunderlist-base .login-stack{background-image:url(\"images/sprites/login.png\");background-position:0 0;width:290px;height:476px;position:absolute;z-index:9999;top:50%;left:50%;margin-top:-238px;margin-left:-145px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;-webkit-border-radius:5px;border-radius:5px;-webkit-box-shadow:0 3px 8px rgba(0,0,0,0.7),inset 0 1px rgba(255,255,255,0.34);box-shadow:0 3px 8px rgba(0,0,0,0.7),inset 0 1px rgba(255,255,255,0.34);border:solid 1px rgba(0,0,0,0.5);padding:24px;overflow:hidden;padding-top:130px;} #wunderlist-base .login-stack.no-ribbon{padding-top:25px;} #wunderlist-base .login-stack.no-ribbon .logo,#wunderlist-base .login-stack.no-ribbon .ribbon-edge{display:none} #wunderlist-base .login-stack .logo{background-image:url(\"images/sprites/login.png\");background-position:-290px 0;width:212px;height:267px;position:absolute;top:0;left:39px;z-index:777;-webkit-transition:-webkit-transform 500ms ease;-moz-transition:-moz-transform 500ms ease;-o-transition:-o-transform 500ms ease;-ms-transition:-ms-transform 500ms ease;transition:transform 500ms ease;-webkit-transform:translate3d(0,0,0);-moz-transform:translate3d(0,0,0);-o-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);transform:translate3d(0,0,0);} #wunderlist-base .login-stack .logo.normal-size{-webkit-transform:translate3d(0,-158px,0);-moz-transform:translate3d(0,-158px,0);-o-transform:translate3d(0,-158px,0);-ms-transform:translate3d(0,-158px,0);transform:translate3d(0,-158px,0)} #wunderlist-base .login-stack .ribbon-edge{background-image:url(\"images/sprites/login.png\");background-position:-502px -132px;width:212px;height:23px;opacity:.8;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\";filter:alpha(opacity=80);position:absolute;top:0;left:39px;z-index:888} #wunderlist-base .login-stack .arrow-back{-webkit-transition:opacity 500ms ease;-moz-transition:opacity 500ms ease;-o-transition:opacity 500ms ease;-ms-transition:opacity 500ms ease;transition:opacity 500ms ease;z-index:9999;position:absolute;top:0;left:5px;padding:20px;opacity:.7;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=70)\";filter:alpha(opacity=70);} #wunderlist-base .login-stack .arrow-back:hover{opacity:1;-ms-filter:none;filter:none} #wunderlist-base .login-stack .arrow-back .arrow-back-image{display:inline-block;background-image:url(\"images/sprites/login.png\");background-position:-651px -44px;width:17px;height:15px} #wunderlist-base .login-stack .close{-webkit-transition:opacity 500ms ease;-moz-transition:opacity 500ms ease;-o-transition:opacity 500ms ease;-ms-transition:opacity 500ms ease;transition:opacity 500ms ease;z-index:9999;position:absolute;top:0;right:5px;padding:17px 20px;opacity:.7;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=70)\";filter:alpha(opacity=70);} #wunderlist-base .login-stack .close:hover{opacity:1;-ms-filter:none;filter:none} #wunderlist-base .login-stack .close .close-icon{display:inline-block;background-image:url(\"images/sprites/login.png\");background-position:-619px -44px;width:20px;height:20px} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){#wunderlist-base .login-modal,#wunderlist-base .logo,#wunderlist-base .ribbon-edge,#wunderlist-base .arrow-back-image{background-image:url(\"images/sprites/login-retina.png\") !important;-webkit-background-size:750px;-moz-background-size:750px;background-size:750px} }" }; });
define('views/Login/FormsStackView',[

  'application/runtime',

  'views/Login/StackView',
  'views/Login/SelectorView',
  'views/Login/SignUpView',
  'views/Login/SignUpAvatarUploadView',
  'views/Login/NewsletterOptInView',
  'views/Login/SignInView',
  'views/Login/ForgotPasswordView',
  'views/Login/ExternalSignUpView',

  'views/Login/FormsStackController',

  'template!login/formsStack',

  'style!login/_formsStack'

], function (
  runtime,
  StackView, SelectorView, SignUpView, SignUpAvatarUploadView, NewsletterOptInView, SignInView, ForgotPasswordView, ExternalSignUpView,
  FormsStackController,
  formsStackTemplate,
  formsStackStyle,
  undefined
) {

  

  var _ = runtime._;

  var _super = StackView.prototype;

  return StackView.extend({

    'className': 'login-stack',

    'viewClasses': {
      'selector': SelectorView,
      'signup': SignUpView,
      'signup-avatar': SignUpAvatarUploadView,
      'newsletter': NewsletterOptInView,
      'login': SignInView,
      'forgot': ForgotPasswordView,
      'external-signup': ExternalSignUpView
    },

    'animationTime': 250,

    'styles': [
      formsStackStyle
    ],

    'template': formsStackTemplate,

    'implements': [
      FormsStackController
    ],

    'emits': {
      'click .arrow-back': 'click:back',
      'click .close': 'click:close'
    },

    'selectors': {
      'logo': '.logo',
      'arrow': '.arrow-back'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.bindTo(runtime, 'login:enable', self.renderEnabled);
    },

    'render': function (data) {

      var self = this;
      _super.render.call(self, self.formatData(data));

      if (runtime.isEmbedded() || runtime.user.isUnregistered()) {
        self.$('a.close').removeClass('transparent');
      }

      return self;
    },

    'createView': function (name) {

      var self = this;
      var options = {};
      options.animationTime = self.animationTime;
      options.state = self.state;
      return _super.createView.call(self, name, options);
    },

    'appendView': function (view) {

      var self = this;
      view.$el.hide();
      self.$(self.selectors.logo).after(view.render().el);
    },

    'showView': function (view, previous) {

      var self = this;
      var deferred = self.deferred();

      var fadeInAnimationTime = previous ? self.animationTime : self.animationTime * 2;

      var didHidePrevious = previous && previous.fadeOut(self.animationTime) || self.deferred().resolve();

      self.when(didHidePrevious).then(function () {

        previous && previous.trigger('hidden');

        self.$el.toggleClass('no-ribbon', !!view.options.hideRibbon);

        view.fadeIn(fadeInAnimationTime).done(function () {
          view.trigger('visible');
          deferred.resolve();
        });
      });

      return deferred.promise();
    },

    'removeView': function (view, previous) {

      var self = this;
      var deferred = self.deferred();

      self.$el.toggleClass('no-ribbon', !!previous.options.hideRibbon);

      var fadeOutAnimationTime = previous ? self.animationTime : self.animationTime * 2;

      view.fadeOut(fadeOutAnimationTime).done(function () {
        var didFadeInPrevious = previous && previous.fadeIn(self.animationTime)|| self.deferred().resolve();

        self.when(didFadeInPrevious).then(function () {
          view.destroy();
          previous && previous.trigger('visible');
          deferred.resolve();
        });
      });

      return deferred.promise();
    },

    'updateArrowVisible': function (view) {

      var self = this;
      var transparent = !view.options.showBackButton;
      if (runtime.user.isUnregistered()) {
        transparent = true;
      }
      self.$(self.selectors.arrow).toggleClass('transparent', transparent);
    },

    'viewMadeVisible': function (view) {

      var self = this;
      var showShortRibbon = self.views.length !== 1;
      var url = view.url;
      var urls = [];

      self.updateArrowVisible(view);
      self.$(self.selectors.logo).toggleClass('normal-size', showShortRibbon);

      if (url) {

        if (_.isArray(url)) {
          urls = url;
          url = urls[0];
        }
        else {
          urls = [url];
        }

        var current = runtime.currentRoute();

        if (urls.indexOf(current) < 0) {

          runtime.trigger('route:' + url, {
            'trigger': false
          });
        }
      }
    },

    'renderEnabled': function (state) {

      var self = this;
      self.$el.toggleClass('disabled', !state);
    }
  });
});
define('templates/packaged/mactitlebar',['vendor/handlebars'], function(H) {
var name = 'packaged/mactitlebar';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"mac-traffic-lights\"> <a class=\"close\"></a> <a class=\"min\"></a> <a class=\"max\"></a> </div> <!--<div class=\"mac-fullscreen\"></div>-->";
  });
});
define('styles/packaged/_mactitlebar',[],function() { return {'name': 'packaged/_mactitlebar', 'styles': "#wunderlist-base.chrome.packaged:after{display:none} #wunderlist-base.chrome.packaged #lists .lists-scroll{top:0} #wunderlist-base.chrome.packaged .mac-titlebar{position:fixed;z-index:1000;right:0;left:0;top:0;height:40px;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #fdfdfd), color-stop(1, #dbdbdb));background-image:-webkit-linear-gradient(top, #fdfdfd 0, #dbdbdb 100%);background-image:-moz-linear-gradient(top, #fdfdfd 0, #dbdbdb 100%);background-image:-o-linear-gradient(top, #fdfdfd 0, #dbdbdb 100%);background-image:-ms-linear-gradient(top, #fdfdfd 0, #dbdbdb 100%);background-image:linear-gradient(top, #fdfdfd 0, #dbdbdb 100%);-webkit-app-region:drag;-webkit-box-shadow:0 1px 0 rgba(0,0,0,0.3),0 1px 3px rgba(0,0,0,0.3);box-shadow:0 1px 0 rgba(0,0,0,0.3),0 1px 3px rgba(0,0,0,0.3);-webkit-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0} #wunderlist-base.chrome.packaged .main-interface{top:40px} #wunderlist-base.chrome.packaged .mac-title{position:absolute;left:100px;right:100px;top:12px;text-shadow:0 1px 0 #fff;text-align:center;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis} #wunderlist-base.chrome.packaged .mac-fullscreen{position:absolute;background:url(\"images/packaged/fullscreen.png\");-webkit-background-size:14px;-moz-background-size:14px;background-size:14px;right:12px;top:12px;width:14px;height:15px;opacity:.8;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\";filter:alpha(opacity=80);-webkit-app-region:no-drag;} #wunderlist-base.chrome.packaged .mac-fullscreen:hover{opacity:1;-ms-filter:none;filter:none} #wunderlist-base.chrome.packaged .mac-traffic-lights{margin-left:15px;margin-top:16px;float:left;-webkit-app-region:no-drag;} #wunderlist-base.chrome.packaged .mac-traffic-lights a{height:13px;width:12px;-webkit-background-size:12px;-moz-background-size:12px;background-size:12px;display:inline-block;margin-right:4px;} #wunderlist-base.chrome.packaged .mac-traffic-lights a.close{background-image:url(\"images/packaged/close.png\");} #wunderlist-base.chrome.packaged .mac-traffic-lights a.close:active{background-image:url(\"images/packaged/close_selected.png\") !important} #wunderlist-base.chrome.packaged .mac-traffic-lights a.max{background-image:url(\"images/packaged/maximixe.png\");} #wunderlist-base.chrome.packaged .mac-traffic-lights a.max:active{background-image:url(\"images/packaged/maximixe_selected.png\") !important} #wunderlist-base.chrome.packaged .mac-traffic-lights a.min{background-image:url(\"images/packaged/minimize.png\");} #wunderlist-base.chrome.packaged .mac-traffic-lights a.min:active{background-image:url(\"images/packaged/minimize_selected.png\") !important} #wunderlist-base.chrome.packaged .mac-traffic-lights:hover a.close{background-image:url(\"images/packaged/close_hover.png\")} #wunderlist-base.chrome.packaged .mac-traffic-lights:hover a.max{background-image:url(\"images/packaged/maximixe_hover.png\")} #wunderlist-base.chrome.packaged .mac-traffic-lights:hover a.min{background-image:url(\"images/packaged/minimize_hover.png\")} :-webkit-full-screen .mac-fullscreen,:-webkit-full-screen .mac-traffic-lights{display:none !important} @media all and (min-width:1025px){#wunderlist-base.chrome.packaged #search-toolbar{position:absolute;width:220px;right:0;top:0} #wunderlist-base.chrome.packaged #toolbar{position:fixed;z-index:1001;top:3px;left:75px;right:4px;background:none;border:none;-webkit-box-shadow:none;box-shadow:none;} #wunderlist-base.chrome.packaged #toolbar .unregistered{display:block} #wunderlist-base.chrome.packaged #toolbar .logo-wrapper{position:relative;width:200px;height:34px;margin:0 auto;} #wunderlist-base.chrome.packaged #toolbar .logo-wrapper #logo{left:0} #wunderlist-base.chrome.packaged #toolbar .logo-wrapper #notifications-count{left:105px} :-webkit-full-screen #toolbar{left:5px !important;right:5px !important} }" }; });
define('views/Packaged/MacTitleBarView',[

  'application/runtime',

  'wunderbits/WBView',

  'template!packaged/mactitlebar',
  'style!packaged/_mactitlebar'

], function (
  runtime,
  WBView,
  macTitleBarTemplate,
  macTitleBarStyle,
  undefined
) {

  

  var global = runtime.global;
  var chrome = global.chrome;

  var _super = WBView.prototype;

  return WBView.extend({

    'id': 'titlebar',

    'className': 'mac-titlebar',

    'styles': [macTitleBarStyle],

    'template': macTitleBarTemplate,

    'events': {

      'click .close': '_closeWindow',
      'click .min': '_minimizeWindow',
      'click .max': '_maximizeWindow',
      'click .mac-fullscreen': '_enterFullscreenWindow'
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.currentWindow = (chrome.app.window && chrome.app.window.current()) || runtime.global;

      var onRestored = self.currentWindow.onRestored;
      onRestored && onRestored.addListener(function() {

        document.webkitCancelFullScreen();
      });
    },

    'render': function() {

      var self = this;

      _super.render.apply(self, arguments);

      return self;
    },

    '_closeWindow': function() {

      var self = this;
      self.currentWindow.hide();
    },

    '_minimizeWindow': function() {

      var self = this;
      self.currentWindow.minimize();
    },

    '_maximizeWindow': function() {

      var self = this;

      if(self.currentWindow.isMaximized()) {
        self.currentWindow.restore();
      } else {
        self.currentWindow.maximize();
      }
    },

    '_enterFullscreenWindow': function () {

      document.webkitCancelFullScreen();
      document.body.webkitRequestFullScreen();
    }
  });
});

define('styles/_lists',[],function() { return {'name': '_lists', 'styles': "#lists{top:0;bottom:0;left:0;width:270px;background:#eee url(\"images/textures/sidebar.png\");-webkit-box-shadow:1px 0 2px rgba(0,0,0,0.3);box-shadow:1px 0 2px rgba(0,0,0,0.3);} #lists .lists-scroll{overflow-y:auto;overflow-x:hidden;position:absolute;bottom:32px;right:0;left:0;top:38px} #lists .lists-collection{position:relative;z-index:300} body.focus-sidebar #lists li.active a{background-position:top} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){#lists{background-image:url(\"images/textures/sidebar@2x.png\");-webkit-background-size:128px 36px;-moz-background-size:128px 36px;background-size:128px 36px} }html[dir=rtl] #lists li .input-wrapper,html[dir=rtl] #lists .addlist .input-wrapper{left:10px;right:37px} html[dir=rtl] #lists li .list-sharing{left:6px;right:initial} html[dir=rtl] #lists li a .count{float:left} html[dir=rtl] #lists li a .title:before{content:'a';font-size:0} " }; });
define('styles/_bars',[],function() { return {'name': '_bars', 'styles': "#toolbar{-webkit-backface-visibility:hidden;height:37px;border-bottom:1px solid #afafaf;-webkit-box-shadow:0 1px 2px rgba(0,0,0,0.25);box-shadow:0 1px 2px rgba(0,0,0,0.25);z-index:100;position:relative;background-image:url(\"images/sprites/app.png\");background-position:0 -387px;} #toolbar .avatar:hover{cursor:pointer} #toolbar .unregistered{display:none;position:absolute;left:42px;top:10px} #toolbar #user{position:relative;margin:6px;} #toolbar #user img{border:none} #toolbar #user:hover{cursor:pointer} #toolbar #user span{height:25px;width:25px;position:absolute;background:transparent;-webkit-box-shadow:0 1px 0 rgba(255,255,255,0.5),inset 0 0 0 1px rgba(0,0,0,0.15);box-shadow:0 1px 0 rgba(255,255,255,0.5),inset 0 0 0 1px rgba(0,0,0,0.15);-webkit-border-radius:3px;border-radius:3px} #toolbar #user .pro-small{position:absolute;right:-8px;top:-5px;z-index:99999} #toolbar #sync{position:absolute;padding:7px 8px;left:31px;top:6px;height:11px;width:11px;} #toolbar #sync span{vertical-align:top;} #toolbar #sync span.offline{margin-top:-2px} #toolbar #sync span.syncing{-webkit-animation:rotate .8s linear infinite;-moz-animation:rotate .8s linear infinite;-webkit-animation:rotate .8s linear infinite;-moz-animation:rotate .8s linear infinite;-o-animation:rotate .8s linear infinite;-ms-animation:rotate .8s linear infinite;animation:rotate .8s linear infinite;display:inline-block;background:url(\"images/syncing.png\");width:10px;height:10px} #toolbar #search-toolbar{display:none;} #toolbar #search-toolbar.allow-save input{right:57px} #toolbar #search-toolbar.allow-save #save-search{opacity:1;-ms-filter:none;filter:none} #toolbar #search-toolbar input{position:absolute;padding-left:25px;width:auto;left:39px;right:36px;top:6px;z-index:999;-webkit-border-radius:15px;border-radius:15px;-webkit-app-region:no-drag} #toolbar #search-toolbar .tag-suggestion{position:absolute;color:#bdbcbb;top:11px;margin-left:18px;z-index:0} #toolbar #search-toolbar .menu-search{position:absolute;z-index:1000;top:9px;left:44px} #toolbar #search-toolbar #reset-search,#toolbar #search-toolbar #save-search{position:absolute;right:0;top:0;} #toolbar #search-toolbar #reset-search .icon,#toolbar #search-toolbar #save-search .icon{opacity:.75;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=75)\";filter:alpha(opacity=75)} #toolbar #search-toolbar #reset-search:hover .icon,#toolbar #search-toolbar #save-search:hover .icon,#toolbar #search-toolbar #reset-search:focus .icon,#toolbar #search-toolbar #save-search:focus .icon{opacity:1;-ms-filter:none;filter:none} #toolbar #search-toolbar #reset-search{padding:9px 9px 9px 0} #toolbar #search-toolbar #save-search{opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);right:29px;padding:9px 0 9px 9px;-webkit-transition:opacity 250ms linear;-moz-transition:opacity 250ms linear;-o-transition:opacity 250ms linear;-ms-transition:opacity 250ms linear;transition:opacity 250ms linear} #toolbar #search{right:0;top:0;opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60);position:absolute;display:block;padding:9px;} #toolbar #search:hover,#toolbar #search:focus{opacity:1;-ms-filter:none;filter:none} #toolbar #search,#toolbar #notifications-count{outline:none} #toolbar #logo{top:0;left:75px;position:absolute;text-align:center;padding-top:8px} #toolbar #notifications-count{position:absolute;left:176px;top:10px;min-width:29px;height:20px;text-align:center;color:transparent;font-size:11px;font-weight:bold;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;} #toolbar #notifications-count .icon{display:none;position:absolute;top:0;} #toolbar #notifications-count .icon.bell,#toolbar #notifications-count .icon.bell-left{left:0} #toolbar #notifications-count .icon.bell-right{right:0} #toolbar #notifications-count .icon.bell{display:block} #toolbar #notifications-count .bell-mid{display:block;margin:0 7px;background:url(\"images/textures/unread.png\");padding-top:2px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;height:19px;display:none} #toolbar #notifications-count.unread{color:#fff;text-shadow:0 1px 0 rgba(0,0,0,0.3);} #toolbar #notifications-count.unread .bell-mid,#toolbar #notifications-count.unread .icon{display:block;} #toolbar #notifications-count.unread .bell-mid.bell,#toolbar #notifications-count.unread .icon.bell{display:none} #toolbar .button,#toolbar button{height:14px;} #toolbar .button .icon,#toolbar button .icon{opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60)} #toolbar .button.active .icon,#toolbar button.active .icon,#toolbar .button:active .icon,#toolbar button:active .icon{opacity:1;-ms-filter:none;filter:none} #toolbar .right .search{margin-top:1px;-webkit-border-radius:15px;border-radius:15px;border:1px solid #c0bbbb;background:#fff;-webkit-box-shadow:0 1px 0 rgba(255,255,255,0.5),inset 0 2px 1px rgba(0,0,0,0.1);box-shadow:0 1px 0 rgba(255,255,255,0.5),inset 0 2px 1px rgba(0,0,0,0.1);position:relative;width:180px;float:left;} #toolbar .right .search .menu-search{position:absolute;left:10px;top:5px;z-index:1} #toolbar .right .search input{width:146px;color:#737272;padding:5px 10px 4px 10px;margin-left:14px} #toolbar .right .button{float:right;margin-left:10px;margin-right:0} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){#toolbar{background-image:url(\"images/sprites/app-retina.png\");-webkit-background-size:641px;-moz-background-size:641px;background-size:641px;} #toolbar #sync span.syncing{background:url(\"images/syncing@2x.png\");-webkit-background-size:10px;-moz-background-size:10px;background-size:10px} }html[dir=rtl] #toolbar #sync{right:35px;left:initial} html[dir=rtl] #toolbar #search{right:initial;left:0} html[dir=rtl] #toolbar #search-toolbar input{padding-left:5px;padding-right:30px} html[dir=rtl] #toolbar #search-toolbar .menu-search{right:44px;left:initial} html[dir=rtl] #toolbar #search-toolbar #reset-search{right:initial;left:0;padding-left:9px} " }; });
define('styles/login/_interface',[],function() { return {'name': 'login/_interface', 'styles': "#wunderlist-base .login-interface,#wunderlist-base.login-interface{top:0;height:100%;width:100%;position:fixed;z-index:9999;} #wunderlist-base .login-interface p,#wunderlist-base.login-interface p{font-weight:500} #wunderlist-base .login-interface .icon-login,#wunderlist-base.login-interface .icon-login{background-image:url(\"images/sprites/login.png\");vertical-align:middle;display:inline-block} body.wlapp-parent #wunderlist-base .login-interface,body.wlapp-parent#wunderlist-base .login-interface,body.wlapp-parent #wunderlist-base.login-interface,body.wlapp-parent#wunderlist-base.login-interface{background-image:url(\"images/packaged/blurbg.jpg\");-webkit-background-size:cover;-moz-background-size:cover;background-size:cover;-webkit-box-shadow:inset 0 0 50px rgba(0,0,0,0.3);box-shadow:inset 0 0 50px rgba(0,0,0,0.3);} body.wlapp-parent #wunderlist-base .login-interface:after,body.wlapp-parent#wunderlist-base .login-interface:after,body.wlapp-parent #wunderlist-base.login-interface:after,body.wlapp-parent#wunderlist-base.login-interface:after{content:\"\";position:absolute;height:100%;width:100%;background-color:#000;opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50)} body.wlapp-embedded #wunderlist-base .login-interface,body.wlapp-embedded#wunderlist-base .login-interface,body.wlapp-embedded #wunderlist-base.login-interface,body.wlapp-embedded#wunderlist-base.login-interface{background-color:rgba(0,0,0,0.5)} " }; });
define('views/Login/InterfaceView',[

  'application/runtime',

  'wunderbits/WBViewPresenter',
  'views/Login/FormsStackView',
  'views/Packaged/MacTitleBarView',

  'style!_lists',
  'style!_bars',
  'style!login/_interface'

], function (
  runtime,
  WBViewPresenter, FormsStackView, MacTitleBarView,
  listsStyle, barsStyle, interfaceStyle,
  undefined
) {

  

  var $ = runtime.$;

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'styles': [

      listsStyle,
      barsStyle,
      interfaceStyle
    ],

    'className': 'login-interface',

    'implements': [],

    'syncViews': function (views, state) {

      var self = this;
      if (!self.isRendered) {
        self.render();
      }

      return self.stack && self.stack.syncViews(views, state);
    },

    'render': function () {

      var self = this;

      runtime.trigger('trackingService', 'login_screen');

      if (self.isRendered) {
        return self;
      }

      // var showLogin = true;
      // runtime.global.setInterval(function () {

      //   var route = showLogin ? 'login' : 'signup';
      //   runtime.trigger('route:' + route);
      //   showLogin = !showLogin;
      // }, 3000);

      _super.render.apply(self, arguments);

      self.stack = self.renderSubview(FormsStackView);

      if (runtime.env.isPackagedApp()) {

        $('body').addClass('packaged');

        if (runtime.env.isMac()) {
          self.renderSubview(MacTitleBarView);
        }
      }

      if (runtime.isEmbedded() || runtime.env.isPackagedApp()) {
        self.$el.attr('id', 'wunderlist-base');
      }

      return self;
    }
  });
});
define('wunderbits/WBBlurHelper',[

  './lib/dependencies',

  './WBSingleton'

], function (dependencies, WBSingleton) {

  

  var $ = dependencies.$;

  return WBSingleton.extend({

    'run': function () {

      var $input = $('<input id="blur-hack" style="opacity:0;margin-top:-5000px;position:absolute;" aria-hidden="true"/>');
      $('body').append($input);
      $input.click().focus().blur().remove();
    }
  });
});
define('application/FocusManager',[

  'application/runtime',

  'vendor/mousetrap',
  'wunderbits/helpers/keycodes',

  'wunderbits/WBEventEmitter',
  'wunderbits/WBBlurHelper'

], function (runtime, Mousetrap, keycodes, WBEventEmitter, WBBlurHelper, undefined) {

  

  var _ = runtime._;
  var $ = runtime.$;

  var document = runtime.global.document;
  var $doc = $(document);
  var $body = $('body');

  var _super = WBEventEmitter.prototype;
  var _blur = WBBlurHelper;
  var _mousetrap = Mousetrap;
  var _currentFocus = null;
  var _history = [];

  var _smartLists = runtime.smartLists;

  var _shortcutTriggers = {

    'add_new_list': ['lists:new', 'analytics:KeyboardShortcut:addList'],
    'add_new_task': ['sidebar:selected:add:task', 'analytics:KeyboardShortcut:addTask'],
    'mark_task_done': ['tasks:markDone', 'analytics:KeyboardShortcut:toggleDone'],
    'mark_task_starred': ['tasks:markStarred', 'analytics:KeyboardShortcut:toggleStarred'],
    'goto_preferences': ['route:preferences/general'],
    'show_notifications': ['route:activitycenter'],
    'select_all_tasks': ['tasks:selectAll'],
    'send_via_email': ['tasks:email', 'analytics:KeyboardShortcut:sendTaskViaEmail'],
    'sync': ['sync:start', 'analytics:KeyboardShortcut:sync'],
    // TODO re-enable for 2.0:
    //'copy_tasks': ['tasks:copy'],
    //'cut_tasks': ['tasks:cut'],
    //'paste_tasks': ['tasks:paste'],
    'goto_search': ['route:search', 'analytics:KeyboardShortcut:gotoSearch'],
    'goto_inbox': ['route:lists/inbox', 'analytics:KeyboardShortcut:gotoInbox']
  };

  var arrows = [37, 38, 39, 40];
  var plusMinus = [187, 189];

  var escapeTriggers = {
    'fullscreenNote': 'fullscreenNote:close',
    'confirmation': 'confirmation:cancel',
    'settings': 'settings:close',
    'assignPopover': 'assignPopover:cancel',
    'tagPopover': 'tagPopover:cancel',
    'goProPopover': 'goProPopover:cancel',
    'sidebar': 'route:me',
    'sidebar-drag': 'list:sorting:end',
    'userMenu': 'toolbar:userMenu:close',
    'browser': 'browser:drag:clean',
    'comments': 'comments:close',
    'detail': 'detail:navigate:left',
    'rate': 'modal:close',
    'tell': 'modal:close',
    'inviteYourFriends': 'modal:close'
  };

  var returnTriggers = {
    'confirmation': 'confirmation:confirm',
    'sidebar': 'actions:edit',
    'browser': 'tasks:editTitle',
    'addTaskDatePicker': 'addTaskDatePicker:close',
    'userMenu': 'userMenu:select',
    'resetPassword': 'keyhandle:resetPassword',
    'goProPopover': 'goProPopover:select',
    'assignPopover': 'assign:select',
    'tagPopover': 'tag:select'
  };

  var spacebarTriggers = {
    'browser': 'tasks:toggleSelected'
  };

  var tabTriggers = {
    'browser': 'taskActions:focus',
    'goProPopover':'tab:fromPopover'
  };

  return WBEventEmitter.extend({

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      // shortcuts should not be available until
      // the interface is rendered and ready
      runtime.once('interface:ready', self.initShortcuts);
    },

    'initShortcuts': function () {

      var self = this;

      // generate callbacks from config objects
      _.each(_shortcutTriggers, self._generateShortcutTriggers);
      _.each(_smartLists, self._generateSmartListShortcutCallback);

      self._loadUserShortcuts();
      self._bindEvents();
    },

    '_bindEvents': function () {

      var self = this;

      runtime.settings.on('change', self._loadUserShortcuts);

      self.bindTo(runtime, 'focus:revert', self.revertFocus);
      self.bindTo(runtime, 'focus:set', self.setFocus);
      self.bindTo(runtime, 'focus:changed', self._onFocusChanged);
      self.bindTo($doc, 'keydown', self.handleKeys);
    },

    'destroy': function () {

      var self = this;

      // trigger event for mixins and parents to react to, before unbinding
      self.trigger && self.trigger('destroy');

      // clean up all stored event bindings
      self.unbindAll && self.unbindAll();

      // call the onDestroy callback to do user defined cleanup
      self.onDestroy && self.onDestroy();

      // delete all properties, except for uid to make
      // sure a destroyed object is not keeping other
      // objects alive by reference
      function killEverything (obj) {
        _.each(obj, function (prop, key) {
          if (key !== 'uid' && key !== 'cid') {
            delete obj[key];
          }
        });
      }
      killEverything(self);

      // flag as destroyed, so objects internal methods
      // can optionally check this before execution
      self.destroyed = true;
    },

    'setFocus': function (focus) {

      if (focus && focus !== _currentFocus) {

        _history.push(focus);
        _currentFocus = focus;
        runtime.trigger('focus:changed', _currentFocus);
      }
    },

    'revertFocus': function () {

      var removed = _history.pop();
      var old = _.last(_history);
      var focus = old || removed;

      _currentFocus = focus;
      runtime.trigger('focus:changed', _currentFocus);
    },

    '_generateShortcutTriggers': function (triggers, key) {

      var self = this;

      self['shortcut_' + key] = function () {
        _.each(triggers, function (trigger) {
          runtime.trigger(trigger);
        });

        return false;
      };
    },

    '_generateSmartListShortcutCallback': function (id) {

      var self = this;

      self['shortcut_goto_filter_' + id] = function () {

        runtime
          .trigger('route:lists/' + id)
          .trigger('analytics:KeyboardShortcut:gotoSmartList', id);

        return false;
      };
    },

    '_onFocusChanged': function (focus) {

      var self = this;
      var classNames = $body[0].className.split(/\s/);
      var classReg = /(focus-\w+)/;

      _.each(classNames, function (className) {

        if (classReg.test(className)) {
          $body.removeClass(className);
        }
      });

      $body.addClass('focus-' + focus);

      if (!self.analyticsTrigger) {

        // this trigger needs to be debounced, since we
        // often throttle many set:focus events in short time
        self.analyticsTrigger = _.debounce(function () {
          runtime.trigger('analytics:Application:changedFocus', _currentFocus);
        }, 250);
      }

      self.analyticsTrigger();
    },

    '_loadUserShortcuts': function () {

      var self = this;

      // remove shortcuts !
      _mousetrap.reset();

      var settings = runtime.settings.attributes;

      _.each(settings, function (value, key) {

        if (/^shortcut/.test(key) && value) {

          value = value.toLowerCase().replace(/\s/g, '');

          if (value === 'arrowkeys' || value === '+-') {
            // store nav setting
            self[key] = value;
          }
          else if (settings[key].toLowerCase().length > 1 && value !== settings.shortcut_sync.toLowerCase()) {
            // bind each shortcut string
            self[key] && _mousetrap.bind(value, self[key]);
          }
        }
      });
    },

    'handleKeys': function (e) {

      var self = this;
      var keyCode = e.which;
      var syncKey = runtime.settings.attributes.shortcut_sync || 'r';
      var syncKeyCode = syncKey.toLowerCase().charCodeAt(0);

      if (runtime.env.isChromeApp() && e.ctrlKey && keyCode === 78) {
        return e.preventDefault();
      }

      if (keyCode === keycodes.esc) {
        self.handleEscapeKey(e);
      }
      else if (keyCode === keycodes.spacebar) {
        self.handleSpacebar(e);
      }
      else if (keyCode === keycodes.enter) {
        self.handleEnterKey(e);
      }
      else if (keyCode === keycodes.tab) {
        self.handleTabKey(e);
      }
      else if (_.include(arrows, keyCode) || _.include(plusMinus, keyCode)) {
        self.handleArrowKeys(e);
      }
      else if (keyCode === syncKeyCode || keyCode === (syncKeyCode - 32)) {
        self.handleSyncShortcut(e);
      }
    },

    'handleEscapeKey': function () {

      var self = this;

      // safari 6 doesn't debounce the esc key callbacks,
      // but keeps throttling away like a maniac. to solve
      // this, we do a manual debounce of the handler here.
      var now = (new Date()).valueOf();
      var browser = runtime.env.getEnvInfo().browser;
      var timeout = browser === 'safari' ? 500 : 1;
      var shouldTriggerCallback = !self._lastTriggeredEscape || self._lastTriggeredEscape < (now - timeout);

      if (shouldTriggerCallback) {

        self._lastTriggeredEscape = now;

        var handler = escapeTriggers[_currentFocus];
        if (handler) {
          runtime.trigger(handler);

          if (_currentFocus === 'browser') {
            runtime.trigger('browser:navigate', 'left');
          }
        }
        else {
          _blur.run();
        }
      }
    },

    'handleSpacebar': function (e) {

      var handler = spacebarTriggers[_currentFocus];
      if (handler) {
        runtime.trigger(handler, e);
        e.preventDefault();
      }
    },

    'handleEnterKey': function (e) {

      var handler = returnTriggers[_currentFocus];
      if (handler) {
        runtime.trigger(handler, e);
        e.preventDefault();
      }
    },

    'handleTabKey': function (e) {

      // don't override ctrl+tab or command+tab
      var originalEvent = e.originalEvent;
      if (originalEvent.metaKey || originalEvent.ctrlKey) {
        return;
      }

      var handler = tabTriggers[_currentFocus];
      if (handler) {
        runtime.trigger(handler, e);
        e.preventDefault();
      }
    },

    'handleArrowKeys': function (e) {

      var self = this;
      var capitalizedFocus = _currentFocus && _currentFocus.charAt(0).toUpperCase() + _currentFocus.slice(1);
      var handler = capitalizedFocus && self['_handle' + capitalizedFocus + 'Navigation'];

      if (_.isFunction(handler)) {
        handler(e);
        runtime.trigger('analytics:KeyboardNavigation:' + _currentFocus, e.which);
      }
    },

    'handleSyncShortcut': function (e) {

      var self = this;

      // don't do anything if on a text input
      var currentElement = document.activeElement;
      if (currentElement && /input|textarea/i.test(currentElement.tagName)) {
        return;
      }

      // this is not bound in mousetrap because any alphabetical key is assumed to be a
      // keydown action, rather than a keypress. This causes it to not fire the event
      // since it is by default a single key. If it is overwritten, it should use the normal
      // mousetrap event.

      // sync if the shortcut was pressed without crtl or meta key
      var originalEvent = e.originalEvent;
      if (!originalEvent.metaKey && !originalEvent.ctrlKey) {
        self.shortcut_sync();
      }
    },

    '_handleBrowserNavigation': function (e) {

      var self = this;
      var direction = self.navKeyToDirection(e, self.shortcut_navigate_tasks);
      runtime.trigger('browser:navigate', direction, e.shiftKey);
    },

    '_handleDetailNavigation': function (e) {

      var self = this;
      var direction = self.navKeyToDirection(e, 'arrowkeys');
      runtime.trigger('detail:navigate', direction);
    },

    '_handleSidebarNavigation': function (e) {

      var self = this;
      var direction = self.navKeyToDirection(e, self.shortcut_navigate_lists);
      runtime.trigger('sidebar:navigate', direction);
    },

    '_handleSettingsNavigation': function (e) {

      var self = this;
      var direction = self.navKeyToDirection(e, 'arrowkeys');
      runtime.trigger('settings:navigate', direction);
    },

    '_handleUserMenuNavigation': function (e) {

      var self = this;
      var direction = self.navKeyToDirection(e, 'arrowkeys');
      runtime.trigger('userMenu:navigate', direction);
    },

    '_handleTagPopoverNavigation': function (e) {

      var self = this;
      var direction = self.navKeyToDirection(e, 'arrowkeys');
      runtime.trigger('tagPopover:navigate', direction);
    },

    '_handleAssignPopoverNavigation': function (e) {

      var self = this;
      var direction = self.navKeyToDirection(e, 'arrowkeys');
      runtime.trigger('assignPopover:navigate', direction);
    },

    'navKeyToDirection': function (e, setting) {

      var element = e.target || e.srcElement;
      var tagName = element.tagName;
      var keyCode = e.which;

      var acceptedInputFocuses = ['assignPopover', 'tagPopover'];
      var rejectedTagNames = ['INPUT', 'SELECT', 'TEXTAREA'];

      var isRejectedTagName = _.indexOf(rejectedTagNames, tagName) !== -1 || (element && element.contentEditable === 'true');
      var isNotAcceptedFocus = _.indexOf(acceptedInputFocuses, _currentFocus) === -1;

      if (isRejectedTagName && isNotAcceptedFocus) {
        return false;
      }

      e.preventDefault();

      switch (keyCode) {
      case 37:
        return 'left';
      case 39:
        return 'right';
      }

      if (setting === 'arrowkeys') {
        switch (keyCode) {
        case 38:
          return 'up';
        case 40:
          return 'down';
        }
      }
      else if (setting === '+-') {
        switch (keyCode) {
        case 187:
          return 'up';
        case 189:
          return 'down';
        }
      }
    },

    'shortcut_navigate_lists': null,

    'shortcut_navigate_tasks': null,

    'shortcut_delete': function () {

      if (_currentFocus === 'browser') {

        runtime.trigger('tasks:delete');
        runtime.trigger('analytics:KeyboardShortcut:deleteTask');
      }
      else if (_currentFocus === 'sidebar') {

        runtime.trigger('actions:delete');
        runtime.trigger('analytics:KeyboardShortcut:deleteList');
      }

      return false;
    }
  });
});
define('wunderbits/WBModalViewController',[

  'application/runtime',
  './WBViewController'

], function (
  runtime,
  WBViewController,
  undefined
) {

  

  return WBViewController.extend({

    'implements': {
      
      'close': 'closeView',
      'click:close': 'closeView'
    },

    'closeView': function () {

      var self = this, view = self.view;

      if (typeof view.options.onClose === 'function') {
        view.options.onClose();
      }

      if (view.returnFocus) {
        runtime.trigger('focus:set', view.returnFocus);
        view.returnFocus = null;
      }

      view.destroy();
    },
  });
});
define('templates/dialog',['vendor/handlebars'], function(H) {
var name = 'dialog';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function", self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <div class=\"head\"> <h2 class=\"title\">";
  if (stack1 = helpers.title) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.title; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</h2> ";
  stack1 = helpers['if'].call(depth0, depth0.close, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </div> ";
  return buffer;
  }
function program2(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <a class=\"close\"><span class=\"button blue close\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_done", options) : helperMissing.call(depth0, "localized", "button_done", options)))
    + "</a></span> ";
  return buffer;
  }

  buffer += "<div id=\"";
  if (stack1 = helpers.id) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.id; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" class=\"dialog ";
  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + " shown\"> ";
  stack1 = helpers['if'].call(depth0, depth0.title, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " <div class=\"content\"/> </div>";
  return buffer;
  });
});
define('wunderbits/WBModalView',[

  // added back runtime here, this view is app specific
  // should not be part of wunderbits
  'application/runtime',
  './WBViewPresenter',
  './WBModalViewController',

  'template!dialog'

], function (
  runtime,
  WBViewPresenter,
  WBModalViewController,
  dialogTemplate,
  undefined) {

  

  var Backbone = runtime.Backbone;
  var _ = runtime._;

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    // need markup before implementing
    // template should not show okay and cancel buttons when set to false
    //template: WBmodalTemplate

    'template': dialogTemplate,

    'className': 'dialog-wrapper',

    'implements': [
      WBModalViewController
    ],

    'emits': {
      'click .close': 'click:close'
    },

    'observes': {
      
      'runtime': {
        'window:resize': 'checkScrolling'
      }
    },

    initialize: function (options) {

      var self = this;
      _super.initialize.apply(self, arguments);

      // model optional at base class level
      // if no model is supplied a data object will be required for render()
      if (!!(options && options.model instanceof Backbone.Model)) {
        self.model = options.model;
      }

      if (options && options.opaque) {
        self.$el.addClass('opaque');
      }

      self.returnFocus = runtime.focus;
    },

    render: function (data) {

      // example data object:
      /*
      var example = {
        'title': 'Most Awesome Dialog!',
        'content': '<div class="html">This modal dialog is the bee\'s knees!</div>',
        'confirm': 'Okay!',
        'cancel': 'Nuh uh!'
      };
      */

      var self = this;
      var modal;

      if (_.isEmpty(data) && self.model instanceof Backbone.Model) {
        data = self.model.toJSON();
      }
      else if (_.isEmpty(data)) {
        throw new Error('Cannot render modal view without data.');
      }

      data.name = self.options.name;
      
      _super.render.call(self, data);

      // compile template
      modal = dialogTemplate(data);

      self.$el.html(modal);

      self.scrollCheckBinding && self.unbindFrom(self.scrollCheckBinding);
      self.scrollCheckBinding = self.bindTo(self.$el.parent(), 'scrollcheck', self.checkScrolling);

      return self;
    },

    'renderUpdatedTitle': function (newTitle) {

      var self = this;
      self.$('h2.title').html(newTitle);
    },

    'addScrolling': function() {

      var self = this;
      self.$('.dialog').addClass('scroll');
    },

    'removeScrolling': function() {

      var self = this;
      self.$el && self.$('.dialog').removeClass('scroll');
    },

    'checkScrolling': function() {

      var self = this;
      var $dialog = self.$el && self.$('.dialog');
      var modalHeight, wrapperHeight;

      if (!$dialog || !self.isVisible()) {
        return;
      }

      // remove scroll before checking heights!
      self.removeScrolling();

      modalHeight = $dialog.height();
      // if the height is null, it means the modal has not yet been in the dom
      // and if it's less than 94 px, only the header and the tabs has rendered yet
      // and if it has the "hidden" class, it has been in the dom, but not anymore
      if (modalHeight < 94 && modalHeight !== null && !self.$el.parent().hasClass('hidden')) {
        $dialog.addClass('invisible');
        _.delay(self.checkScrolling, 500);
      }
      else {

        wrapperHeight = self.$el.height() - 100;
        if (modalHeight > wrapperHeight) {
          self.addScrolling();
        }

        $dialog.removeClass('invisible');
      }
    },

    'isVisible': function () {

      var self = this;
      return self.$el.is(':visible');
    },
  });
});
define('labs/FlashCards/FlashCardController',[

  'application/runtime',
  'wunderbits/helpers/keycodes',

  'wunderbits/WBViewController'

], function (
  runtime,
  keycodes,
  WBViewController,
  undefined
) {

  

  return WBViewController.extend({

    'implements': {
      'input:keydown': 'onKeyDown'
    },

    'onKeyDown': function (ev) {

      var self = this;

      if (ev.which === keycodes.enter) {

        var value = self.view.$('input').val();
        self.view.model.answer(value);
      }
    }
  });
});
define('templates/labs/flashCard',['vendor/handlebars'], function(H) {
var name = 'labs/flashCard';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<h2>";
  if (stack1 = helpers.question) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.question; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</h2> <input type=\"text\" class=\"big\"> <div class=\"wrong-answer hidden\"> <h3>The correct answer is <strong class=\"correct\"></strong></h3> </div> ";
  return buffer;
  });
});
define('labs/FlashCards/FlashCardView',[

  'application/runtime',

  'wunderbits/WBViewPresenter',

  'labs/FlashCards/FlashCardController',

  'template!labs/flashCard'

], function (
  runtime,
  WBViewPresenter,
  FlashCardController,
  flashCardTemplate,
  undefined
) {

  

  var _ = runtime._;
  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'className': 'flash-card',

    'template': flashCardTemplate,

    'implements': [
      FlashCardController,
    ],

    'emits': {
      'keydown input': 'input:keydown'
    },

    'initialize': function (options) {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.model = options.model;
      self.bindTo(self.model, 'answer:incorrect', self.renderIncorrectAnswer);
      self.bindTo(self.model, 'answer:correct', self.renderCorrectAnswer);
    },

    'render': function () {

      var self = this;
      _super.render.call(self, self.options.card);

      _.defer(function () {
        self.$('input').select();
      });

      return self;
    },

    'renderCorrectAnswer': function () {

      var self = this;
      self.$('input').addClass('correct').attr('disabled', true);
    },

    'renderIncorrectAnswer': function (incorrect, correct) {

      var self = this;
      self.$('input').addClass('incorrect').attr('disabled', true);
      self.$('.wrong-answer').removeClass('hidden');
      self.$('.correct').text(correct);
    }
  });
});
define('labs/FlashCards/FlashCardsModel',[

  'application/runtime',

  'collections/TaskCollection',
  'collections/ListCollection',

  'wunderbits/WBModel',

  'wunderbits/helpers/date',
  'wunderbits/helpers/strings'

], function (
  runtime,
  TaskCollection, ListCollection,
  WBModel,
  dateHelper, stringsHelper,
  undefined
) {

  

  var _super = WBModel.prototype;
  var _ = runtime._;

  return WBModel.extend({

    'defaults': {

      'progress': 0,
      'current': null,

      'correctAnswers': [],
      'incorrectAnswers': [],

      // delay before stepping to the next card
      'correctAnswerDelay': 1000,
      'incorrectAnswerDelay': 3000,

      // the amount of times the phrase must be correctly answered
      // before it is automatically completed. wrong answer reset count.
      'correctAnswerLimit': 5
    },

    'initialize': function (data, options) {

      var self = this;
      _super.initialize.apply(self, arguments);
      self.options = options;

      self.tasks = new TaskCollection('/lists/' + options.listId + '/tasks');
      self.allTasks = new TaskCollection('/tasks/all');
      self.lists = new ListCollection('/lists/all');
    },

    'start': function () {

      var self = this;

      runtime.once('lists:ready', function () {

        var list = self.lists.get(self.options.listId);

        if (list.isShared()) {

          self.trigger('stop:error', 'shared-list');
        }
        else {

          runtime.once('tasks:ready', function () {

            self.cards = self.getCards();
            self.remainingCards = self.cards.slice(0);

            if (self.cards.length) {
              self.nextCard();
            }
            else {
              self.trigger('stop:error', 'no-cards');
            }
          });
        }
      });
    },

    'copyAndOpenList': function () {

      var self = this;
      var list = self.lists.get(self.options.listId);

      var listData = {
        'title': list.attributes.title,
        'position': list.attributes.position + 0.1
      };

      self.lists.add(listData, {
        'success': function (newList) {

          var listId = newList.attributes.id;
          var length = self.tasks.models.length;
          var count = 0;

          self.tasks.each(function (task) {

            var attributes = task.attributes;

            var taskData = {
              'title': attributes.title,
              'list_id': listId,
              'starred': attributes.starred,
              'position': attributes.position
            };

            self.allTasks.add(taskData, {
              'success': function () {

                count++;

                if (count === length - 1) {
                  runtime.trigger('route:labs/flash-cards/' + listId);
                }
              }
            });
          });
        }
      });
    },

    'onCorrectAnswer': function () {

      var self = this;
      var card = self.attributes.current;
      var task = self.tasks.get(card.id);
      var note = task.attributes.note;
      var count = parseInt(note, 10);
      var limit = self.attributes.correctAnswerLimit;

      if (_.isNaN(count)) {
        count = 1;
      }
      else {
        count++;
      }

      if (count >= limit) {

        count = 0;

        task.save({
          'completed': true,
          'completed_at': dateHelper.getServerNow(),
          'note': '0',
          'starred': false
        });
      }
      else {

        var hasBeenAnsweredIncorrectly = self.attributes.incorrectAnswers.indexOf(card) >= 0;
        task.save({
          'note': '' + count,
          'starred': hasBeenAnsweredIncorrectly
        });
      }

      self.trigger('answer:correct', card.answer);
      _.delay(self.nextCard, self.attributes.correctAnswerDelay);

      self.attributes.correctAnswers.push(card);
      self.set('correctAnswers', self.attributes.correctAnswers);

      self.updateProgress();
    },

    'onIncorrectAnswer': function (answer) {

      var self = this;
      var card = self.attributes.current;
      var task = self.tasks.get(card.id);

      self.remainingCards.push(card);
      self.remainingCards = _.shuffle(self.remainingCards);

      task.save({
        'note': '0',
        'starred': true
      });

      self.trigger('answer:incorrect', answer, card.answer);
      _.delay(self.nextCard, self.attributes.incorrectAnswerDelay);

      self.attributes.incorrectAnswers.push(card);
      self.set('incorrectAnswers', self.attributes.incorrectAnswers);
    },

    'answer': function (answer) {

      var self = this;
      var card = self.attributes.current;
      var correct = answer === card.answer;

      if (correct) {

        self.onCorrectAnswer();
      }
      else {

        self.onIncorrectAnswer(answer);
      }
    },

    'nextCard': function () {

      var self = this;
      var length = self.remainingCards.length;
      self.updateProgress();

      if (length) {

        var card = self.remainingCards.pop();
        var current = self.attributes.current;

        if (current && current.id === card.id && length > 1) {
          self.remainingCards.push(card);
          self.remainingCards = _.shuffle(self.remainingCards);
          return self.nextCard();
        }

        self.set('current', null, {
          'silent': true
        });
        self.set('current', card);
      }
      else {

        self.trigger('stop:done', self.getCorrectPercent());
      }
    },

    'getCorrectPercent': function () {

      var self = this;
      var correct = self.attributes.correctAnswers.length;
      var incorrect = self.attributes.incorrectAnswers.length;
      var totalAnswers = correct + incorrect;
      var percentCorrect = (correct / totalAnswers) * 100;

      return percentCorrect;
    },

    'updateProgress': function () {

      var self = this;
      var progress = 100 - (self.remainingCards.length / self.cards.length) * 100;
      self.set('progress', progress);
    },

    'getCards': function () {

      var self = this;
      var cards = [];

      self.tasks.each(function (task) {

        if (!task.isCompleted()) {

          var card = self.getCard(task.attributes);
          card && cards.push(card);
        }
      });

      return _.shuffle(cards);
    },

    'getCard': function (data) {

      var pieces = data.title.split('=');
      var question = stringsHelper.trim(pieces[0]);
      var answer = stringsHelper.trim(pieces[1]);

      if (question && answer) {
        return {
          'id': data.id,
          'question': question,
          'answer': answer
        };
      }
    }
  });
});
define('templates/labs/flashCards',['vendor/handlebars'], function(H) {
var name = 'labs/flashCards';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"content-inner\"> <div class=\"progress-outer\"> <div class=\"progress-inner\"></div> </div> <div class=\"cards\"></div> <div class=\"message hidden\">Awesome job!</div> </div>";
  });
});
define('styles/labs/_flashCards',[],function() { return {'name': 'labs/_flashCards', 'styles': "#flashCards.dialog .content-inner{text-align:center;} #flashCards.dialog .content-inner .progress-outer{margin-top:5px;width:100%;height:20px;background-color:#000} #flashCards.dialog .content-inner .progress-inner{height:20px;background-color:#008000;width:0;-webkit-transition:width 1s ease-in-out;-moz-transition:width 1s ease-in-out;-o-transition:width 1s ease-in-out;-ms-transition:width 1s ease-in-out;transition:width 1s ease-in-out} #flashCards.dialog .content-inner h2{margin:75px 20px;font-size:45px} #flashCards.dialog .content-inner input{margin-bottom:10px;text-align:center;padding:23px 10px;font-size:35px;} #flashCards.dialog .content-inner input.incorrect{background-color:#f00;color:#fff} #flashCards.dialog .content-inner input.correct{background-color:#008000;color:#fff} #flashCards.dialog .content-inner .message{font-size:30px;margin:30px;font-weight:bold} #flashCards.dialog .content-inner .wrong-answer{margin-top:10px;margin-bottom:15px;font-size:25px} #flashCards.dialog .content-inner strong.correct{color:#008000} " }; });
define('labs/FlashCards/FlashCardsModalView',[

  'application/runtime',

  'wunderbits/WBModalView',

  'collections/ListCollection',

  './FlashCardView',
  './FlashCardsModel',

  'template!labs/flashCards',
  'style!labs/_flashCards'

], function (
  runtime,
  WBModalView,
  ListCollection,
  FlashCardView, FlashCardsModel,
  flashCardsTemplate,
  flashCardsStyle,
  undefined
) {

  

  var _super = WBModalView.prototype;
  var _ = runtime._;

  return WBModalView.extend({

    'template': flashCardsTemplate,

    'styles': [flashCardsStyle],

    'initialize': function (options) {

      var self = this;

      options.opaque = true;
      _super.initialize.call(self, options);

      self.lists = new ListCollection('/lists/all');

      self.model = new FlashCardsModel({}, options);
      self.bindTo(self.model, 'change:progress', self.renderProgress);
      self.bindTo(self.model, 'change:current', self.renderCard);
      self.bindTo(self.model, 'stop:done', self.renderDone);
      self.bindTo(self.model, 'stop:error', self.handleError);
    },

    'render': function () {

      var self = this;

      var list = self.lists.get(self.options.listId);

      _super.render.call(self, {
        'id': 'flashCards',
        'title': 'Flash cards: ' + list.attributes.title,
        'close': runtime.language.getText('button_done')
      });

      var $content = self.$('.content');
      $content.html(self.template(self.formatData(self.renderData)));

      self.$el.addClass('flash-cards');
      self.$el.css('display', 'none');

      self.renderLocalized();

      _.defer(self.model.start);

      return self;
    },

    'renderDone': function (percentCorrect) {

      var self = this;
      var message;

      self.destroySubview('card');

      if (percentCorrect <= 25) {
        message = 'Not so great, keep at it! Practice makes perfect!';
      }
      else if (percentCorrect <= 50) {
        message = 'Good job! A few more rounds then you got this!';
      }
      else if (percentCorrect <= 75) {
        message = 'Great work, and the only way from here is up!';
      }
      else if (percentCorrect <= 95) {
        message = 'Awesome, you\'re nailing this!';
      }
      else if (percentCorrect === 100) {
        message = 'Amazing! Are you sure you\'re not cheating? ;)';
      }

      self.$('.message').text(message).removeClass('hidden');

      _.delay(self.close, 2000);
    },

    'renderCard': function () {

      var self = this;
      self.$el.css('display', 'block');

      var data = self.model.attributes.current;
      var view = self.addSubview(new FlashCardView({
        'card': data,
        'model': self.model
      }), 'card');
      self.$('.cards').append(view.render().el);
    },

    'renderProgress': function () {

      var self = this;
      var progress = self.model.attributes.progress;
      var width = self.$('.progress-outer').width();
      self.$('.progress-inner').width(width * (progress / 100));
    },

    'close': function () {

      var self = this;

      if (self.onClose) {
        self.onClose();
        self.onClose = null;
      }
    },

    'handleError': function (error) {

      var self = this;
      var model = self.model;

      self.close();

      var title = 'Failed to start Flash Cards';

      if (error === 'no-cards') {

        runtime.trigger('modal:confirm', {
          'customTitle': title,
          'customText': 'It doesn\'t look like this list contain any tasks that can be used as flash cards. Create one or more tasks with a title like "question = answer", excluding the quotes.',
          'confirmText': runtime.language.getLabel('button_ok').toString(),
          'hideCancel': true
        });
      }
      else if (error === 'shared-list') {

        runtime.trigger('modal:confirm', {
          'customTitle': title,
          'customText': 'This list is shared, and because of that you can\'t run it as flash cards. Do you want to make a copy of the list and then start a round of Flash Cards?',
          'confirmText': runtime.language.getLabel('button_yes').toString(),
          'cancelText': runtime.language.getLabel('button_no').toString(),
          confirm: model.copyAndOpenList
        });
      }
    }
  });
});

define('views/Social/controllers/RateModalController',[

  'application/runtime',
  'wunderbits/helpers/keycodes',
  'vendor/moment',
  'wunderbits/WBModalViewController'

], function (
  runtime,
  Keycodes,
  moment,
  WBModalViewController,
  undefined
) {

  

  var $ = runtime.$;

  return WBModalViewController.extend({

    'implements': {

      'click:later': 'scheduleLater',
      'click:nothanks': 'scheduleNever',
      'click:rate': 'scheduleNever',
      
      'keydown:buttons': 'handleButtonKeys',
      'keydown': 'handleKeys'
    },

    'saveAndClose': function (value) {

      var self = this;
      var key = runtime.env.isChromeApp() ? 'chrome_app_rating_later' : 'chrome_rating_later';
      var data = {};
      data[key] = value;
      runtime.settings.save(data);
      self.closeView();
    },

    'scheduleLater': function () {

      var self = this;
      var today = moment().sod().valueOf();
      self.saveAndClose(String(today));
    },

    'scheduleNever': function () {

      var self = this;
      self.saveAndClose('false');
    },

    'handleButtonKeys': function (e) {

      var self = this;

      if (e.which === Keycodes.tab) {
        self.handleTabKey(e);
      }
    },

    'handleTabKey': function (e) {

      var $target = $(e.target);
      var self = this;

      if (!e.shiftKey && $target.hasClass('later')) {
        self.view.focusRate();
        self.stopEventFully(e);
      }
      else if (e.shiftKey && $target.hasClass('no-thanks')) {
        self.view.focusRate();
        self.stopEventFully(e);
      }
      else if (e.shiftKey && $target.hasClass('rate')) {
        self.view.focusLater();
        self.stopEventFully(e);
      }
    }
  });
});
define('templates/modals/rateModal',['vendor/handlebars'], function(H) {
var name = 'modals/rateModal';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";


  buffer += "<div class=\"content-inner\" tabindex=\"0\"> <div class=\"separator noline\"> <div class=\"cols\"> <div class=\"col-30 left\"> <span class=\"icon wunderlist-icon\"></span> </div> <div class=\"col-70 right\"> <h1>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "rate_app_heading", options) : helperMissing.call(depth0, "localized", "rate_app_heading", options)))
    + "</h1> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "rate_app_message_web_chrome", options) : helperMissing.call(depth0, "localized", "rate_app_message_web_chrome", options)))
    + "</p> </div> </div> </div> <div class=\"separator\"> <div class=\"cols\"> <div class=\"col-35 right\"> <a class=\"rate button blue right\" href=\"";
  if (stack2 = helpers.url) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.url; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" target=\"_blank\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "rate_app_button_yes", options) : helperMissing.call(depth0, "localized", "rate_app_button_yes", options)))
    + "</a> </div> <div class=\"col-65\"> <button class=\"no-thanks\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "rate_app_button_no", options) : helperMissing.call(depth0, "localized", "rate_app_button_no", options)))
    + "</button> <button class=\"later\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "rate_app_button_later", options) : helperMissing.call(depth0, "localized", "rate_app_button_later", options)))
    + "</button> </div> </div> </div> </div>";
  return buffer;
  });
});
define('styles/modals/rateModal',[],function() { return {'name': 'modals/rateModal', 'styles': "#rateModal h1{font-size:16px;margin-bottom:5px} #rateModal .icon.wunderlist-icon{margin:-7px 0 0 0} " }; });
define('views/Social/RateModalView',[

  'application/runtime',

  'wunderbits/WBModalView',
  './controllers/RateModalController',

  'template!modals/rateModal',
  'style!modals/rateModal'

], function (
  runtime,
  WBModalView,
  RateModalController,
  rateModalTemplate,
  rateModalStyle,
  undefined
) {

  

  var _super = WBModalView.prototype;

  return WBModalView.extend({

    'template': rateModalTemplate,

    'styles': [
      rateModalStyle
    ],

    'implements': [
      RateModalController
    ],

    'emits': {

      'click .later': 'click:later',
      'click .no-thanks': 'click:nothanks',
      'click .rate': 'click:rate',

      'keydown button': 'keydown:buttons',
      'keydown a.rate': 'keydown:buttons',

      'keydown': 'keydown'
    },

    'renderData': {
      'url': null,
    },

    'formatData': function (data) {

      var self = this;
      data = _super.formatData.call(self, data);

      data.id = 'rateModal';

      if (runtime.env.isChromeApp()) {
        data.url = 'https://chrome.google.com/webstore/detail/wunderlist-for-chrome/ojcflmmmcfpacggndoaaflkmcoblhnbh/reviews';
      }
      else {
        data.url = 'https://chrome.google.com/webstore/detail/wunderlist/fjliknjliaohjgjajlgolhijphojjdkc/reviews';
      }

      return data;
    },

    'render': function () {

      var self = this;
      _super.render.call(self, self.formatData(self.renderData));

      var $content = self.$('.content');
      $content.html(self.template(self.formatData(self.renderData)));

      self.defer(function () {
        self.delegateEvents();
        self.$('.content-inner').focus();
      });

      self.renderLocalized();

      return self;
    },

    'focusRate': function () {

      this.$('a.rate').focus();
    },

    'focusNoThanks': function () {

      this.$('button.no-thanks').focus();
    },

    'focusLater': function () {

      this.$('button.later').focus();
    }
  });
});
define('views/Social/controllers/TellModalController',[

  'application/runtime',
  'wunderbits/helpers/keycodes',
  'vendor/moment',
  'wunderbits/WBModalViewController'

], function (
  runtime,
  Keycodes,
  moment,
  WBModalViewController,
  undefined
) {

  

  var $ = runtime.$;

  return WBModalViewController.extend({

    'implements': {

      'click:link': 'clickLink',
      'keydown:links': 'handleKeys'
    },

    'clickLink': function () {

      var self = this, view = self.view;
      view.showThanks();
    },

    'handleKeys': function (e) {

      var self = this;

      if (e.which === Keycodes.tab) {
        self.handleTabKey(e);
      }
      else if (e.which === Keycodes.enter) {
        e.stopPropagation();
      }
    },

    'handleTabKey': function (e) {

      var $target = $(e.target);
      var self = this;

      if (!e.shiftKey && $target.closest('li').hasClass('share-twitter')) {
        self.view.focusGoogle();
        self.stopEventFully(e);
      }
      else if (e.shiftKey && $target.closest('li').hasClass('share-google')) {
        self.view.focusTwitter();
        self.stopEventFully(e);
      }
    }
  });
});
define('templates/modals/tellModal',['vendor/handlebars'], function(H) {
var name = 'modals/tellModal';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";


  buffer += "<div class=\"content-inner\" tabindex=\"0\"> <span class=\"icon stripe\"></span> <a class=\"close\"> <span class=\"icon dismiss\"></span> </a> <div class=\"separator noline\"> <div class=\"image-headline\" aria-hidden=\"true\"> <h1 class=\"icon love-wunderlist prompt\" title=\"Love Wunderlist?\"></h1> <h1 class=\"icon danke thanks hidden\" title=\"Dankeschön!\"></h1> </div> <div class=\"text-headline hidden\"> <h1 class=\"blue prompt\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "social_sharing_dialog_headline", options) : helperMissing.call(depth0, "localized", "social_sharing_dialog_headline", options)))
    + "</h1> <h1 class=\"blue thanks hidden\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "social_sharing_dialog_danke", options) : helperMissing.call(depth0, "localized", "social_sharing_dialog_danke", options)))
    + "</h1> </div> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "social_sharing_heading", options) : helperMissing.call(depth0, "localized", "social_sharing_heading", options)))
    + "</p> </div> <div class=\"separator noline\"> <ul class=\"social-links\"> <li class=\"link share-google\"> <span class=\"icon google-btn arrow-btn\"></span> <a href=\"https://plus.google.com/share?url=";
  if (stack2 = helpers.url) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.url; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" target=\"_blank\" class=\"button withArrow\">+1</a> </li> <li class=\"link share-facebook\"> <span class=\"icon facebook-btn arrow-btn\"></span> <a href=\"http://www.facebook.com/dialog/feed?app_id=208559595824260&amp;link=";
  if (stack2 = helpers.url) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.url; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "&amp;redirect_uri=";
  if (stack2 = helpers.url) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.url; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "&amp;name=";
  if (stack2 = helpers.shareText) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shareText; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" target=\"_blank\" class=\"button withArrow\" data-key-aria-label=\"iyf_dialog_share_on_facebook\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "social_sharing_button_facebook", options) : helperMissing.call(depth0, "localized", "social_sharing_button_facebook", options)))
    + "</a> </li> <li class=\"link share-twitter\"> <span class=\"icon twitter-btn arrow-btn\"></span> <a href=\"http://twitter.com/share?text=";
  if (stack2 = helpers.tweetText) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.tweetText; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" target=\"_blank\" class=\"button withArrow\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "social_sharing_button_twitter", options) : helperMissing.call(depth0, "localized", "social_sharing_button_twitter", options)))
    + "</a> </li> </ul> </div> </div>";
  return buffer;
  });
});
define('styles/modals/tellModal',[],function() { return {'name': 'modals/tellModal', 'styles': "#tellModal{width:330px;margin-left:-165px;} #tellModal .content-inner{background:url(\"images/textures/popover.png\");text-align:center} #tellModal p{font-size:15px} #tellModal h1{margin:5px auto 26px auto} #tellModal .stripe{position:absolute;top:0;left:0;width:100%;margin-left:5px} #tellModal .close{position:absolute;right:10px;padding:0;margin:0} " }; });
define('views/Social/TellModalView',[

  'application/runtime',

  'wunderbits/WBModalView',
  './controllers/TellModalController',

  'template!modals/tellModal',
  'style!modals/tellModal'

], function (
  runtime,
  WBModalView,
  TellModalController,
  tellModalTemplate,
  tellModalStyle,
  undefined
) {

  

  var _ = runtime._;
  var _super = WBModalView.prototype;

  return WBModalView.extend({

    'template': tellModalTemplate,

    'styles': [
      tellModalStyle
    ],

    'implements': [
      TellModalController
    ],

    'emits': {
      'click .link a': 'click:link',
      'keydown .link a': 'keydown:links'
    },

    'formatData': function (data) {

      var self = this;
      data = _super.formatData.call(self, data);

      data.id = 'tellModal';
      data.url = 'https://www.wunderlist.com';
      data.shareText = encodeURIComponent(runtime.language.getText('general_sharing_placeholder'));
      data.tweetText = encodeURIComponent(runtime.language.getText('twitter_sharing_placeholder').replace('http://wunderli.st', 'https://www.wunderlist.com'));

      return data;
    },

    'render': function () {

      var self = this;

      _super.render.call(self, self.formatData(self.renderData));

      var $content = self.$('.content');
      $content.html(self.template(self.formatData(self.renderData)));

      self.updateHeadlineType();
      self.defer(function () {

        self.delegateEvents();
        self.$('.content-inner').focus();
      });

      self.renderLocalized();

      return self;
    },

    'updateHeadlineType': function () {

      var self = this;
      var showTextLanguages = ['ko_KR', 'ja_JP', 'zh_CN', 'zh_TW'];
      var langCode = runtime.settings.attributes.language;
      var showImage = showTextLanguages.indexOf(langCode) < 0;

      self.$('.image-headline').toggleClass('hidden', !showImage);
      self.$('.text-headline').toggleClass('hidden', showImage);
    },

    'showThanks': function () {

      var self = this;

      _.delay(function () {
        self.$('.prompt').addClass('hidden');
        self.$('.thanks').removeClass('hidden');
      }, 1000);
    },

    'focusTwitter': function () {

      this.$('.share-twitter a').focus();
    },

    'focusGoogle': function () {

      this.$('.share-google a').focus();
    }
  });
});
define('views/Debug/controllers/DebugModalController',[

  'application/runtime',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  WBModalViewController,
  undefined
) {

  

  return WBModalViewController.extend({

    'implements': {

      'click:purge': 'purgeTrackers',
      'toggle:updating': 'toggleUpdating',
      'click:export': 'exportTrackers'
    },

    'purgeTrackers': function () {

      var self = this;
      var view = self.view;
      var message =
        'You should only purge the tracker models if you absolutely know' +
        ' what you are doing.  Any unsynced local changes will be lost FOREVER.' +
        ' Are you sure that you want to purge all sync trackers?';
      if (window.confirm(message)) {

        runtime.trigger('trackers:clear');
        view.renderTrackerData();
      }
    },

    'toggleUpdating': function () {

      var self = this;
      var view = self.view;
      view.update = !view.update;
      view.$('.toggle-updating').text(view.update ? 'Pause Updating' : 'Resume Updating');
    },

    'exportTrackers': function () {

      var self = this;
      runtime.global.trackers = self.view.trackerModels;
    }
  });
});
define('templates/debug/debug',['vendor/handlebars'], function(H) {
var name = 'debug/debug';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"content-inner\"> <div class=\"heading\"> <p> Queued for Syncing items are reflected as \"# unsynced items\" in the user menu. <br/> Currently Syncing items are items that have been sent out as part of an API<br/> request and awaiting API response. </p> <p> <a class=\"toggle-updating\">Pause Updating</a> <a class=\"export-trackers\">Expose Trackers on window</a> <a class=\"purge-trackers\">Clear all Trackers</a> </p> </div> <h2>Queued for Syncing</h2> <div class=\"queued\"> <ul class=\"trackers\"></ul> </div> <h2>Currently Syncing</h2> <div class=\"syncing\"> <ul class=\"trackers\"></ul> </div> </div>";
  });
});
define('styles/debug/_debug',[],function() { return {'name': 'debug/_debug', 'styles': ".dialog-wrapper.debug.active{background:rgba(0,0,0,0.6)} #debug.dialog,#debug button,#debug .button{font-family:Terminus,Consolas,Profont,\"Andale Mono\",Monaco,Inconsolata,Inconsolata-g,Unifont,Lime,\"ClearlyU PUA\",Clean,\"DejaVu Sans Mono\",\"Lucida Console\",\"Bitstream Vera Sans Mono\",Freemono,\"Liberation Mono\",Dina,Anka,Droid Sans Mono,Anonymous Pro,Proggy fonts,Envy Code R,Gamow,Courier,\"Courier New\",Terminal,monospace} #debug.dialog{width:90%;margin-left:-45%;background:#000;-webkit-box-shadow:none;box-shadow:none;color:#bdbcbb;-webkit-border-radius:0;border-radius:0;border:1px solid #666;} #debug.dialog .head{background:#000;border-bottom:1px solid #423e3e;-webkit-border-radius:0;border-radius:0;} #debug.dialog .head h2{text-shadow:none;text-transform:uppercase} #debug.dialog .content-inner{-webkit-border-radius:0;border-radius:0;-webkit-box-shadow:none;box-shadow:none;min-height:100px;background:#000;} #debug.dialog .content-inner *{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;font-size:16px} #debug.dialog .content-inner a{color:#87ceeb;} #debug.dialog .content-inner a:hover{color:#fff} #debug.dialog .content-inner a.purge-trackers{color:#dc143c;} #debug.dialog .content-inner a.purge-trackers:hover{color:#f00} #debug.dialog .content-inner h2{margin-top:1em;font-weight:bold;color:#0c0 !important} #debug.dialog .content-inner p{margin:5px 0} #debug.dialog .content-inner .heading *{font-size:12px !important} #debug.dialog .content-inner .heading{border-bottom:1px solid #bdbcbb} #debug.dialog .content-inner ul.trackers{margin-left:2em;list-style:square;text-transform:uppercase;font-weight:bold;color:#87ceeb} #debug.dialog .content-inner ul.items{margin-left:2em;list-style:decimal;text-transform:none;font-weight:normal;color:#bdbcbb;} #debug.dialog .content-inner ul.items .failure{color:#f00} #debug.dialog .content-inner ul li{margin-top:1em;} #debug.dialog .content-inner ul li table tr td:nth-child(1){text-align:right} #debug.dialog .content-inner ul li table tr td:nth-child(2){font-weight:bold} " }; });
define('views/Debug/DebugModalView',[

  'application/runtime',
  'backend/sync/trackers',
  'wunderbits/WBModalView',

  './controllers/DebugModalController',

  'template!debug/debug',
  'style!debug/_debug',

], function (
  runtime,
  trackers,
  WBModalView,
  DebugModalController,
  debugTemplate,
  debugStyle,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;

  var _super = WBModalView.prototype;

  return WBModalView.extend({

    'template': debugTemplate,

    'styles': [debugStyle],

    'implements': [
      DebugModalController
    ],

    'emits': {

      'click .purge-trackers': 'click:purge',
      'click .toggle-updating': 'toggle:updating',
      'click .export-trackers': 'click:export'
    },

    'initialize': function () {

      var self = this;
      self.trackerModels = trackers.getChangeMaps();
      self.throttledRenderTrackerData = _.throttle(self.renderTrackerData, 250);
      _super.initialize.apply(self, arguments);

      self.update = true;
    },

    'render': function (options) {

      var self = this;
      var dialogOptions = {
        'id': 'debug',
        'title': 'sync debugger',
        'close': runtime.language.getText('button_done')
      };

      self.onClose = self.onClose || options && options.onClose;

      _super.render.call(self, dialogOptions);
      self.$('.content').append(self.template());

      self.$el.addClass('debug');
      self.$('.blue.button').removeClass('blue');
      self.$('.toggle-updating').text(self.update ? 'Pause Updating' : 'Resume Updating');

      self.renderTrackerData();
      self.renderLocalized();
      self.bindToCollections();

      return self;
    },

    'bindToCollections': function () {

      var self = this;

      _.each(self.trackerModels, function (model) {

        self.bindTo(model, 'change', self.throttledRenderTrackerData);
      });
    },

    'renderTrackerData': function () {

      var self = this;
      if (!self.update) {
        return;
      }

      self.$('.syncing .trackers, .queued .trackers').empty();

      _.each(self.trackerModels, function (model, trackerName) {

        if (/meta|failures/.test(trackerName)) {
          return;
        }

        var isSettings = /settings/.test(trackerName);

        var attributes = model.attributes;
        if (_.size(attributes) < 2) {
          return;
        }

        var $container = self.$(/Syncing/.test(trackerName) ? '.syncing .trackers' : '.queued .trackers');
        var $trackerLi = $('<li>' + trackerName +'<ul class="items"/></li>');
        var $trackerUl = $trackerLi.find('ul.items');
        $container.append($trackerLi);

        _.each(attributes, function (obj, key) {

          var failureKey = key;
          if (key !== 'id') {
            var li = '<li>' + key + '<table>';

            if (isSettings) {
              failureKey = trackerName;
            }

            var failureObj = self.trackerModels.failures.get(failureKey);
            if (failureObj) {
              _.each(failureObj, function (failVal, failKey) {
                li += '<tr class="failure"><td>(last fail) '+failKey+':</td><td>'+_.escape(String(failVal))+'</td></tr>';
              });
            }

            if (isSettings) {
              li += '<tr><td>'+key+':</td><td>'+_.escape(String(obj))+'</td></tr>';
            }
            else {
              _.each(obj, function (val, objKey) {
                li += '<tr><td>'+objKey+':</td><td>'+_.escape(String(val))+'</td></tr>';
              });
            }

            li += '</table></li>';
            $trackerUl.append(li);
          }
        });
      });

      self.checkScrolling();
    }
  });
});
define('models/InviteFriendModel',[

  'application/runtime',
  'wunderbits/WBModel'
], function (

  runtime,
  WBModel,
  undefined

) {

  

  return WBModel.extend({

    'storeName': 'friendInvites',

    'defaults': {

      'accepted_at': null,
      'created_at': null,
      'email': null,
      'recipient': null,
      'sender': null,
      'updated_at': null
    }
  });
});
define('collections/FriendInviteCollection',[

  'application/runtime',

  'wunderbits/collections/WBCollection',

  'models/InviteFriendModel'

], function (
  runtime,
  WBCollection,
  InviteFriendModel,
  undefined
) {

  

  return WBCollection.extend({

    'storeName': 'friendInvites',

    '_altIdName': 'email',

    'model': InviteFriendModel,

    'comparator': function (model) {

      return model.attributes.email.toLowerCase();
    }
  });
});
define('templates/IYF/IYFItem',['vendor/handlebars'], function(H) {
var name = 'IYF/IYFItem';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <div class=\"list-invite-name\"> <input type=\"text\" class=\"chromeless\" placeholder=\"Enter an email address...\" value=\"";
  if (stack1 = helpers.email) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.email; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\"/> </div> ";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.hasJoined, {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.isPending, {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " <div class=\"list-invite-name\">";
  if (stack1 = helpers.email) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.email; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</div> ";
  return buffer;
  }
function program4(depth0,data) {
  
  
  return " <span class=\"tag joined right\">joined</span> ";
  }

function program6(depth0,data) {
  
  
  return " <span class=\"tag pending right\">pending</span> ";
  }

function program8(depth0,data) {
  
  
  return "checked";
  }

function program10(depth0,data) {
  
  
  return "disabled";
  }

function program12(depth0,data) {
  
  
  return "hidden";
  }

  buffer += "<span class=\"icon email\"></span> ";
  stack1 = helpers['if'].call(depth0, depth0.allowInput, {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " <input type=\"checkbox\" ";
  stack1 = helpers['if'].call(depth0, depth0.checked, {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.invited, {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " class=\"list-invite-check ";
  stack1 = helpers['if'].call(depth0, depth0.allowInput, {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"/> ";
  return buffer;
  });
});
define('styles/IYF/_iyf',[],function() { return {'name': 'IYF/_iyf', 'styles': "#wunderlist-base #invite-friends.shown ~ #tasks{top:110px} #wunderlist-base #invite-friends.shown ~ #detail{top:110px} @font-face{font-family:\"Wunderfont\";src:url(\"fonts/wunderfont_08-webfont.eot\");src:url(\"fonts/wunderfont_08-webfont.eot?#iefix\") format('embedded-opentype'),url(\"fonts/wunderfont_08-webfont.woff\") format('woff'),url(\"fonts/wunderfont_08-webfont.ttf\") format('truetype'),url(\"fonts/wunderfont_08-webfont.svg#wunderfontregular\") format('svg');font-weight:normal;font-style:normal} #wunderlist-base #inviteYourFriends{width:570px;margin-left:-285px;overflow:visible;} #wunderlist-base #inviteYourFriends .content-inner{background:none;margin-top:8px;-webkit-box-shadow:none;box-shadow:none} #wunderlist-base #inviteYourFriends .scroll-padding{padding:0 90px} #wunderlist-base #inviteYourFriends .close-invites{position:absolute;right:5px;top:5px} #wunderlist-base #inviteYourFriends .big-star{display:block;margin:-46px auto 0 auto} #wunderlist-base #inviteYourFriends .head{display:none} #wunderlist-base #inviteYourFriends small{display:block;text-align:center;color:#737272;line-height:18px} #wunderlist-base #inviteYourFriends h2{font-weight:200;padding-left:20px;padding-right:20px;} #wunderlist-base #inviteYourFriends h2 text{font-size:24px} #wunderlist-base #inviteYourFriends h3{font-size:15px;line-height:20px} #wunderlist-base #inviteYourFriends p{font-size:13px;line-height:18px} #wunderlist-base #inviteYourFriends.scroll .content-inner{margin-top:0;top:55px} #wunderlist-base #inviteYourFriends .show-step{padding:11px 17px} #wunderlist-base #inviteYourFriends input.url:disabled{color:#423e3e} #wunderlist-base #inviteYourFriends .circle{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding-top:5px;text-align:center;cursor:default} #wunderlist-base #inviteYourFriends .handwriting{color:#4597df;font-size:20px;line-height:30px;font-family:'Wunderfont','Helvetica Neue','Helvetica',sans-serif} @media all and (max-width:1024px){#wunderlist-base #invite-friends.shown{display:none;} #wunderlist-base #invite-friends.shown ~ #tasks,#wunderlist-base #invite-friends.shown ~ #detail{top:0;top:0} }" }; });
define('styles/_listings',[],function() { return {'name': '_listings', 'styles': ".list-invite{background:#fff;-webkit-border-radius:4px;border-radius:4px;border:1px solid #c9c9c9;overflow-y:auto;} .list-invite li{position:relative;padding:12px;border-bottom:1px solid #ddd;} .list-invite li:last-child{border:none} .list-invite li .icon{position:absolute;top:14px} .list-invite li .list-invite-name{white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis;padding-left:30px;padding-right:40px} .list-invite li .list-invite-check{position:absolute;right:12px;top:15px} .list-invite .list-invite-item-submit{color:#737272;font-weight:bold;position:absolute;right:0;top:0;bottom:0;padding:10px 15px;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #f7f7f7), color-stop(1, #efefef));background-image:-webkit-linear-gradient(top, #f7f7f7 0, #efefef 100%);background-image:-moz-linear-gradient(top, #f7f7f7 0, #efefef 100%);background-image:-o-linear-gradient(top, #f7f7f7 0, #efefef 100%);background-image:-ms-linear-gradient(top, #f7f7f7 0, #efefef 100%);background-image:linear-gradient(top, #f7f7f7 0, #efefef 100%);border-left:1px solid #d1d1d1;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.5);box-shadow:inset 0 1px 0 rgba(255,255,255,0.5);} .list-invite .list-invite-item-submit:active{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #efefef), color-stop(1, #f7f7f7));background-image:-webkit-linear-gradient(top, #efefef 0, #f7f7f7 100%);background-image:-moz-linear-gradient(top, #efefef 0, #f7f7f7 100%);background-image:-o-linear-gradient(top, #efefef 0, #f7f7f7 100%);background-image:-ms-linear-gradient(top, #efefef 0, #f7f7f7 100%);background-image:linear-gradient(top, #efefef 0, #f7f7f7 100%)} " }; });
define('views/IYF/iyfItem',[

  'application/runtime',

  'wunderbits/WBValidationHelper',
  'wunderbits/WBView',

  'template!IYF/IYFItem',

  'style!IYF/_iyf',
  'style!_listings'

], function (runtime, ValidationHelper, WBView, iyfItemTemplate, iyfStyle, listingStyle, undefined) {

  

  var $ = runtime.$;
  var _super = WBView.prototype;

  return WBView.extend({

    'tagName': 'li',

    'className': 'list-invite-item',

    'template': iyfItemTemplate,

    'styles': [iyfStyle, listingStyle],

    'events': {

      'click .list-invite-check': 'handleCheckBoxClick',
      'mousedown .list-invite-check': 'onPreventBlur',
      'change .list-invite-check': 'handleCheckBoxChange',
      'keyup input[type=text]': 'onKeyup',
      'blur input[type=text]': 'onInputBlur'
    },

    'initialize': function (options) {

      var self = this;
      self.options = options || {};
      self.model = options.model;
      _super.initialize.apply(self, arguments);
    },

    'renderData': {

      'email': undefined,
      'invited': undefined,
      'markedForInvite': undefined,
      'checked': undefined,
      'allowInput': undefined,
      'hasJoined': undefined,
      'isPending': undefined
    },

    'formatData': function (data) {

      var self = this;
      data = _super.formatData.call(self, data);

      data.email = self.options.email || self.model && self.model.attributes.email;
      data.invited = self.options.invited || self.model && self.model.attributes.invited;
      data.markedForInvite = self.options.markedForInvite || self.model && self.model.attributes.markedForInvite;
      data.checked = data.invited || data.markedForInvite;
      data.allowInput = self.options.allowInput;
      data.hasJoined = self.options.accepted;
      data.isPending = !self.options.accepted && self.options.invited;

      return data;
    },

    'render': function (data) {

      var self = this;
      _super.render.call(self, self.formatData(data));

      // bind render reacactions to model if present
      self.model && self.bindToModel();

      if (self.options.accepted || (self.model && self.model.attributes.alreadyRegistered)) {

        self.$el.addClass('already-registered');
      }

      if (self.options.invited || (self.model && self.model.attributes.invited)) {

        self.$el.addClass('invited');
      }

      if (self.model && self.model.attributes.notInvited) {

        self.$el.addClass('notInvited');
      }

      if (self.options.allowInput) {

        self.$el.addClass('input-view');
      }

      return self;
    },

    'renderCheckBoxState': function () {

      var self = this;

      var attributes = self.model.attributes;
      var $box = self.$('.list-invite-check');

      if (attributes.invited || attributes.markedForInvite) {

        $box.attr('checked', true);
      }
      else {

        $box.removeAttr('checked', 'checked');
      }

      if (attributes.invited) {

        $box.attr('disabled', true);
      }
      else {

        $box.removeAttr('disabled');
      }
    },

    'bindToModel': function () {

      var self = this;

      self.bindTo(self.model, 'change:invited', function () {

        self.renderCheckBoxState();
        self.$el.toggleClass('invited', self.model.attributes.invited);
      });

      self.bindTo(self.model, 'change:markedForInvite', function () {

        self.renderCheckBoxState();
      });

      self.bindTo(self.model, 'change:alreadyRegistered', function () {

        self.$el.toggleClass('already-registered', self.model.attributes.alreadyRegistered);
      });
    },

    'handleCheckBoxClick': function (e) {

      console.log('handleCheckBoxClick');

      var self = this;
      var $input = self.$('input[type=text]');
      var value = $input.val();

      if ($input.length && !ValidationHelper.isValidEmail(value)) {

        e.preventDefault();
      }
    },

    'handleCheckBoxChange': function (e) {

      e.preventDefault();

      var self = this;

      var wasChecked = self.$('.list-invite-check').prop('checked');
      self.model && self.model.save({

        'markedForInvite': wasChecked
      });
    },

    'onPreventBlur': function () {

      var self = this;
      self.preventBlur = true;
      self.preventBlurTimeout && clearTimeout(self.preventBlurTimeout);
      self.preventBlurTimeout = setTimeout(function () {

        self.preventBlur = false;
      }, 100);
    },

    'onKeyup': function (e) {

      var self = this;
      var val = $(e.target).val();
      self.$('input[type=checkbox]').toggleClass('hidden', !val);
    },

    'onInputBlur': function (e) {

      var self = this;

      if (self.preventBlur) {
        return;
      }

      var value = $(e.target).val();
      if (value && ValidationHelper.isValidEmail(value)) {

        self.$('input[type=checkbox]').attr('checked', 'checked').change();
      }
    }
  });
});
define('views/IYF/Controllers/IYFController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',
  'wunderbits/WBValidationHelper',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  Keycodes, ValidationHelper,
  WBModalViewController,
  undefined
) {

  

  var $ = runtime.$;

  var _super = WBModalViewController.prototype;

  return WBModalViewController.extend({

    'implements': {

      'click:showStep': 'onClickShowStep',
      'click:inviteMore': 'onClickInviteMore',

      'click:url': 'selectUrl',
      'focus:url': 'onFocusUrlInput',

      'click:sendInvites': 'sendInvites',

      'click:social': 'trackSocialClicks',

      'focus:email': 'onInputFocus',
      'keyup:email': 'afterInputChange',
      'blur:email': 'onBlurInput',

      'keydown:tabTarget': 'onTabTargetKeydown'
    },

    'sendInvites': function () {

      var self = this;
      var view = self.view;
      var $inputs = view.$('.list-invite-item input[type=text]');
      var emails = [];

      $inputs.each(function () {
        if (this.value && ValidationHelper.isValidEmail(this.value)) {
          emails.push(this.value);
        }
      });

      if (emails.length) {

        view.updateSendButton(false);

        $inputs.attr('disabled', true);

        runtime.trigger('trackingService', 'UI.Tap', 'IYF/Dialog/SendButton');

        runtime.io.post('/invites', {
          'emails': emails
        }).done(function () {

          if (runtime.settings.attributes.campaign_iyf4_notification === 'true') {

            runtime.settings.save({
              'campaign_iyf4_invited_friends': 'true'
            });
          }

          view.showStep(3);
          view.updateSendButton(true);

          view.$('.list-invite-item').each(function (index, element) {

            // why 3? because the url field is also an invite item
            if (index < 3) {
              $(element).find('input.email').val('');
            }
            else {
              $(element).remove();
            }
          });
        });
      }
    },

    'onInputFocus': function (ev) {

      var self = this;
      var $target = $(ev.target);
      var $inputs = self.view.$('input.email');
      var index = $inputs.index($target) + 1;
      var path = 'IYF/Dialog/EmailInput' + index;

      runtime.trigger('trackingService', 'UI.Focus', path);
    },

    'afterInputChange': function (ev) {

      var self = this;
      var view = self.view;

      var $target = view.$(ev.target);
      var value = $target.val();
      var invalid, valid;

      // Find any invalid input values and save a reference
      $('input.email').each(function (index, element) {
        if (element.value) {
          if (ValidationHelper.isValidEmail(element.value)) {
            valid = element;
          }
          else {
            invalid = element;
            return false;
          }
        }
      });

      if (!ev.which && invalid) {
        view.updateSendButton(false);
        $(invalid).select();
      }
      else {

        if (invalid) {
          view.updateSendButton(false);
        }
        else if (valid) {
          view.updateSendButton(true);
        }

        view.ensureEmptyInput();

        if (ev.which === Keycodes.enter || ev.which === Keycodes.tab) {

          if (value) {
            view.focusFirstEmpty();
          }
          else if (ev.which === Keycodes.enter) {
            self.sendInvites();
          }
        }
      }
    },

    'onBlurInput': function (ev) {

      var self = this;
      self.trackBlurWithContent(ev);
      self.afterInputChange(ev);
    },

    'trackBlurWithContent': function (ev) {

      var self = this;
      var view = self.view;

      var $target = view.$(ev.target);
      var value = $target.val();
      var $inputs = view.$('input.email');
      var index = $inputs.index($target) + 1;
      var path = 'IYF/Dialog/EmailInput' + index;

      if (ValidationHelper.isValidEmail(value)) {
        runtime.trigger('trackingService', 'UI.BlurWithValidContent', path);
      }
    },

    'trackSocialClicks': function (ev) {

      var $target = $(ev.target);

      if (ev.target.tagName !== 'A') {
        $target = $target.closest('a');
      }

      var target = $target.hasClass('share-facebook') ? 'FacebookButton' : 'TwitterButton';
      runtime.trigger('trackingService', 'UI.Tap', 'IYF/Dialog/' + target);
    },

    'closeView': function () {

      var self = this;

      runtime.trigger('trackingService', 'UI.Dismiss', 'IYF/Dialog');

      _super.closeView.apply(self, arguments);
    },

    'selectUrl': function () {

      var self = this;
      self.defer(function () {
        self.view.$('.url').select();
      });
    },

    'onClickShowStep': function (ev) {

      var self = this;
      self.view.showStep(ev.currentTarget.getAttribute('rel'));
    },

    'onClickInviteMore': function () {

      runtime.trigger('trackingService', 'UI.Tap', 'IYF/Dialog/InviteMoreButton');
    },

    'onFocusUrlInput': function () {

      runtime.trigger('trackingService', 'UI.Focus', 'IYF/Dialog/URLInput');
    },

    'onTabTargetKeydown': function (e) {

      var self = this;
      var view = self.view;

      if (e.which === Keycodes.tab) {

        var $target = $(e.target);
        if (e.shiftKey && $target.hasClass('email')) {
          view.focusUrl();
          self.stopEventFully(e);
        }
        else if (!e.shiftKey && $target.hasClass('url')) {
          view.focusFirstEmpty();
          self.stopEventFully(e);
        }
      }
    }
  });
});
define('templates/IYF/IYF',['vendor/handlebars'], function(H) {
var name = 'IYF/IYF';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<!-- STEP ONE --> <span class=\"icon detail-delete close close-invites\"/> <div class=\"icon big-star\"></div> <div class=\"content-inner step step-1\"> <div class=\"separator noline\"> <h2 class=\"center\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "iyf4_dialog_invite_headline_$", "$iyf4_dialog_invite_headline_incentive", options) : helperMissing.call(depth0, "localized", "iyf4_dialog_invite_headline_$", "$iyf4_dialog_invite_headline_incentive", options)))
    + "</h2> </div> <div class=\"scroll-padding\"> <div class=\"separator noline\"> <ul class=\"list-invite\"> <li class=\"list-invite-item\"> <input type=\"text\" class=\"email chromeless\" data-key-placeholder=\"iyf_dialog_email_placeholder\" value=\"\"> </li> <li class=\"list-invite-item\"> <input type=\"text\" class=\"email chromeless\" data-key-placeholder=\"iyf_dialog_more_placeholder\" value=\"\"> </li> </ul> </div> <div class=\"separator bigger\"> <button class=\"green big disabled send-invites\"><b>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_send", options) : helperMissing.call(depth0, "localized", "button_send", options)))
    + "</b></a> </div> <div class=\"separator noline\"> <div class=\"cols\"> <div class=\"separator-label\"><span>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "iyf_dialog_step2_divider_label", options) : helperMissing.call(depth0, "localized", "iyf_dialog_step2_divider_label", options)))
    + "</span></div> <div class=\"col-50\"> <a target=\"_blank\" class=\"button full share-facebook disabled\"> <span class=\"icon facebook-small\"/> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "iyf_dialog_share_on_facebook", options) : helperMissing.call(depth0, "localized", "iyf_dialog_share_on_facebook", options)))
    + "</a> </div> <div class=\"col-50\"> <a target=\"_blank\" class=\"button full share-twitter disabled\"> <span class=\"icon twitter-small\"/> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "iyf_dialog_post_on_twitter", options) : helperMissing.call(depth0, "localized", "iyf_dialog_post_on_twitter", options)))
    + "</a> </div> </div> </div> <div class=\"separator big\"> <ul class=\"list-invite url-selector\"> <li> <input type=\"text\" class=\"url chromeless\" value=\"\" data-key-aria-label=\"iyf_dialog_step2_divider_label\"/> </li> </ul> </div> <div class=\"separator\"> <small>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "iyf4_dialog_invite_incentive_$", "$iyf4_dialog_invite_incentive_terms", options) : helperMissing.call(depth0, "localized", "iyf4_dialog_invite_incentive_$", "$iyf4_dialog_invite_incentive_terms", options)))
    + "</small> </div> </div> </div> <!-- STEP TWO --> <div class=\"content-inner step step-2\"> <div class=\"scroll-padding\"> <div class=\"separator big\"> <h2 class=\"center\"><strong>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "iyf_dialog_step3_success_headline", options) : helperMissing.call(depth0, "localized", "iyf_dialog_step3_success_headline", options)))
    + "</strong></h2> <h2 class=\"center\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "iyf_dialog_step3_subheadline", options) : helperMissing.call(depth0, "localized", "iyf_dialog_step3_subheadline", options)))
    + "</h2> </div> <div class=\"separator\"> <div class=\"cols\"> <div class=\"col-50\"> <a class=\"button big close\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_done", options) : helperMissing.call(depth0, "localized", "button_done", options)))
    + "</a> </div> <div class=\"col-50\"> <a class=\"button big green show-step invite-more\" rel=\"1\"><b>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "iyf_dialog_step3_invite_more", options) : helperMissing.call(depth0, "localized", "iyf_dialog_step3_invite_more", options)))
    + "</b></a> </div> </div> </div> </div> </div>";
  return buffer;
  });
});
define('views/IYF/InviteYourFriendsView',[

  'application/runtime',

  'collections/FriendInviteCollection',
  'collections/GoogleContactCollection',
  'collections/ServiceCollection',

  'views/IYF/iyfItem',
  'wunderbits/WBModalView',

  'views/IYF/Controllers/IYFController',

  'template!IYF/IYF',

  'style!IYF/_iyf',
  'style!_listings'

], function (

  runtime,
  FriendInviteCollection, GoogleContactCollection, ServiceCollection,
  IyfItemView, WBModalView,
  IYFController,
  iyfTemplate,
  iyfStyle,
  listingStyle,
  undefined
) {

  

  var $ = runtime.$;
  var _super = WBModalView.prototype;

  return WBModalView.extend({

    'template': iyfTemplate,

    'styles': [
      iyfStyle,
      listingStyle
    ],

    'implements': [
      IYFController
    ],

    'emits': {

      'click .close': 'click:close',

      'click .show-step': 'click:showStep',
      'click .invite-more': 'click:inviteMore',

      'click .url-selector': 'click:url',
      'focus .url-selector input': 'focus:url',

      'click .send-invites': 'click:sendInvites',

      'click .share-facebook, .share-twitter': 'click:social',

      'focus input.email': 'focus:email',
      'keyup input.email': 'keyup:email',
      'blur input.email': 'blur:email',

      'keydown .url': 'keydown:tabTarget',
      'keydown .list-invite input:eq(0)': 'keydown:tabTarget'
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.url = self.getShortUrl();
    },

    'getShortUrl': function () {

      var self = this;
      var deferred = self.deferred();

      var url;
      // CAN NOT USE PACKAGED APP PROTOCOLS FOR THE URL!!!!
      if (runtime.env.isPackagedApp()) {
        url = 'https://www.wunderlist.com/';
      }
      else {
        var location = runtime.global.location;
        url = location.protocol + '//' + location.hostname + '/';
      }

      url += '#/signup/' + runtime.user.id;

      runtime.io.post(runtime.config.urlshortener.host, {
        'url': url,
        'owner_id': runtime.user.id
      }).done(function (data) {
        deferred.resolve(data.url);
      }).fail(deferred.reject);

      return deferred.promise();
    },

    'render': function (options) {

      var self = this;
      options = options || self.options;

      var dialogOptions = {
        'id': 'inviteYourFriends',
        'title': 'Invite Your Friends',
        'close': runtime.language.getText('button_done')
      };

      self.onClose = self.onClose || options && options.onClose;

      _super.render.call(self, dialogOptions);

      self.$el.addClass('inviteYourFriends');

      self.renderContent();

      runtime.trigger('trackingService', 'UI.Show', 'IYF/Dialog');

      return self;
    },

    'renderContent': function () {

      var self = this;
      var data = self.formatData(self.renderData);

      self.destroySubviews();

      self.$('.content').empty().append(self.template(data));

      self.renderLocalized();
      self.renderAvatar();
      self.wrapTokens();

      self.showStep(1);
      self.defer(self.focusFirstEmpty);

      self.url.done(self.updateUrl, self).fail(self.renderBroken, self);
    },

    'renderBroken': function () {

      var self = this;
      self.showStep(1);
      self.$('.step-1 .show-step').addClass('disabled').text('Inviting friends is currently unavailable');
    },

    'updateUrl': function (url) {

      var self = this;
      var encoded = encodeURIComponent(url);
      var facebookUrl = 'https://www.facebook.com/sharer/sharer.php?u=' + encoded;
      var tweetText = runtime.language.getText('iyf4_dialog_tweet');
      var twitterUrl = 'http://twitter.com/home?status=' + encodeURIComponent(tweetText + ' ') + encoded;

      self.$('.url').val(url);
      self.$('.share-facebook').attr('href', facebookUrl).removeClass('disabled');
      self.$('.share-twitter').attr('href', twitterUrl).removeClass('disabled');
    },

    'wrapTokens': function () {

      var self = this;
      self.$('.token_0').wrap('<strong/>');
    },

    'renderAvatar': function () {

      var self = this;

      self.$('.avatar .picture').attr("src", runtime.user.getAvatarURL());
    },

    'showStep': function (step) {

      var self = this;
      var $steps = self.$('.step');

      if(step > $steps.length) {
        console.error('step number ' + step + ' does not exist');
        step = 1;
      }

      $steps.addClass('hidden');

      self.$('.step-' + step).removeClass('hidden');

      self.checkScrolling();
    },

    'ensureEmptyInput': function () {

      var self = this;

      var $empty = self.$('input.email').filter(function () {
        return !!!this.value;
      });

      var first = self.$('input.email')[0];
      var second = self.$('input.email')[1];

      if (!$empty.length) {
        var $last = self.$('.list-invite-item').last();
        var $clone = $last.clone();
        $last.after($clone);
        $clone.find('input.email').val('');
      }
      else if ($empty.length > 1) {
        $empty.each(function (index, element) {
          if (index > 0 && element !== first && element !== second) {
            $(element).closest('.list-invite-item').remove();
          }
        });
      }
    },

    'focusFirstEmpty': function () {

      var self = this;
      var $first = self.$('input.email').filter(function () {
        return !!!this.value;
      }).first();

      $first.attr('aria-label', runtime.language.getText('iyf4_dialog_invite_headline_$','$iyf4_dialog_invite_headline_incentive'));

      $first.focus();
    },

    'updateSendButton': function (enabled) {

      var self = this;
      enabled && self.$('input.email').attr('disabled', false);
      self.$('.send-invites').toggleClass('disabled', !enabled);
    },

    'focusUrl': function () {

      this.$('input.url').focus();
    }
  });
});
define('views/Labs/Controllers/LabsViewController',[

  'application/runtime',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  WBModalViewController,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;

  return WBModalViewController.extend({

    'implements': {
      'change:input': 'onChangeToggleable'
    },

    'onChangeToggleable': function (e) {

      var $elem = $(e.currentTarget);
      var options = {};

      // use the value of the option
      var key = $elem.attr('id').replace(/-/g, '_');
      var isChecked = $elem.is(':checked');
      options[key] = isChecked ? 'true' : 'false';
      runtime.trigger('analytics:Labs:toggleLabs-' + key, isChecked);

      runtime.settings.save(options);

      _.delay(function () {
        runtime.reload('/labs');
      }, 500);
    }
  });
});
define('templates/labs/labs',['vendor/handlebars'], function(H) {
var name = 'labs/labs';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, self=this;

function program1(depth0,data) {
  
  
  return "checked";
  }

  buffer += "<div class=\"content-inner\"> <div class=\"separator\"> <p>As a beta tester and Wunderlist Pro subscriber, we are giving you a taste of the wicked fresh sauce we are cooking up in our labs. Please give these features a run and send any feedback to <a href=\"mailto:beta@6wunderkinder.com\">beta@6wunderkinder.com</a>.</p> </div> <!-- subtask progress --> <div class=\"cols top separator labs-features\"> <div class=\"col-05\"> <input id=\"labs-subtask-progress-enabled\" type=\"checkbox\" ";
  stack1 = helpers['if'].call(depth0, depth0.labsSubtaskProgress, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "/> </div> <div class=\"col-95\"> <h3>Subtask Progress <small>(requires reload)</small></h3> <p>Display a progress bar representing the number of completed subtasks on task items</p> </div> </div> <!-- tag autocomplete --> <div class=\"cols top separator labs-features\"> <div class=\"col-05\"> <input id=\"labs-tag-autocomplete-enabled\" type=\"checkbox\" ";
  stack1 = helpers['if'].call(depth0, depth0.labsTagAutoComplete, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "/> </div> <div class=\"col-95\"> <h3>Tag Autocomplete <small>(requires reload)</small></h3> <p>Typing '#' in the add task input field will popup a list of previously used tags that you can use for autocompletion. In the search input words that match tags will also trigger a different autocomplete mechanism.</p> </div> </div> <!-- tag cloud --> <div class=\"cols top separator labs-features\"> <div class=\"col-05\"> <input id=\"labs-tag-cloud-enabled\" type=\"checkbox\" ";
  stack1 = helpers['if'].call(depth0, depth0.labsTagCloud, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "/> </div> <div class=\"col-95\"> <h3>Tag Cloud <small>(requires reload)</small></h3> <p>Display a tag cloud below the lists in the side bar, with style weights based on the tags' frequency of occerence.</p> </div> </div> <!-- flash cards --> <div class=\"cols top separator labs-features\"> <div class=\"col-05\"> <input id=\"labs-flash-cards-enabled\" type=\"checkbox\" ";
  stack1 = helpers['if'].call(depth0, depth0.labsFlashCards, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "/> </div> <div class=\"col-95\"> <h3>Flash Cards <small>(requires reload)</small></h3> <p>Use the task titles in your list to practice words and phrases. When you've answered correctly five times, the task will be completed.</p> </div> </div> </div>";
  return buffer;
  });
});
define('styles/labs/_labs',[],function() { return {'name': 'labs/_labs', 'styles': "#labs.dialog .content-inner{background-color:rgba(69,151,223,0.05);} #labs.dialog .content-inner input[type=checkbox]{margin-top:5px} " }; });
define('labs/LabsView',[

  'application/runtime',

  'wunderbits/WBModalView',

  'views/Labs/Controllers/LabsViewController',

  'template!labs/labs',
  'style!labs/_labs'

], function (
  runtime,
  WBModalView,
  LabsViewController,
  labsTemplate,
  labsStyle,
  undefined
) {

  

  var _ = runtime._;
  var _super = WBModalView.prototype;

  var _labsFeatures = ['subtask_progress'];

  return WBModalView.extend({

    'template': labsTemplate,

    'styles': [labsStyle],

    'implements': [LabsViewController],

    'emits': {

      'change input': 'change:input'
    },

    'renderData': {
      'labsSubtaskProgress': undefined,
      'labsTagAutoComplete': undefined,
      'labsTagCloud': undefined,
      'labsFlashCards': undefined
    },

    'formatData': function (data) {

      data.labsSubtaskProgress = runtime.isLabsEnabled('subtask_progress');
      data.labsTagAutoComplete = runtime.isLabsEnabled('tag_autocomplete');
      data.labsTagCloud = runtime.isLabsEnabled('tag_cloud');
      data.labsFlashCards = runtime.isLabsEnabled('flash_cards');

      return data;
    },

    initialize: function () {

      var self = this;

      self._isRendered = false;

      _super.initialize.apply(self, arguments);

      // set up toggleable updating
      self.toggleables = [];
      _.each(_labsFeatures, function (feature) {

        self.toggleables.push('labs_' + feature + '_enabled');
      });

      _.each(self.toggleables, function (key) {

        self.bindTo(runtime.settings, 'change:' + key, function () {

          self._updateToggleable(key);
        });
      });
    },

    'render': function (options) {

      var self = this;

      options = options || {};

      var dialogOptions = {
        'id': 'labs',
        'title': 'Wunderlist Labs',
        'close': runtime.language.getText('button_done')
      };

      self.onClose = self.onClose || options && options.onClose;

      _super.render.call(self, dialogOptions);

      var $content = self.$('.content');
      $content.html(self.template(self.formatData(self.renderData)));

      self.$el.addClass('labs');

      self.renderLocalized();

      return self;
    },

    '_updateToggleable': function (key) {

      var self = this;
      var value = runtime.settings.get(key);
      var $toggle = self.$el.find('#' + key.replace(/_/g, '-'));
      $toggle.prop('checked', value === 'true');
    }
  });
});

define('views/Main/Controllers/WhatsNewViewController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  Keycodes,
  WBModalViewController,
  undefined
) {

  

  var $ = runtime.$;

  return WBModalViewController.extend({

    'implements': {
      'click:next': 'onClickNext',
      'click:navigation': 'onClickNavigation',
      'click:upgrade': 'onClickUpgrade',
      
      'keydown:slide': 'handleSlideKeys',
      'keydown:button': 'handleButtonKeys'
    },

    'onClickNext': function (e) {

      var self = this;
      var view = self.view;
      var nextIndex = view.activeSlide + 1;

      if (nextIndex <= view.slideEnd) {
        self.updateViewedSlides(nextIndex);
        view.goToSlide(nextIndex);
        self.stopEventFully(e);
      }
    },

    'onClickPrev': function (e) {

      var self = this;
      var view = self.view;
      var prevIndex = view.activeSlide - 1;
      if (prevIndex >= 0) {
        self.updateViewedSlides(prevIndex);
        view.goToSlide(prevIndex);
      }
      self.stopEventFully(e);
    },

    'onClickNavigation': function (ev) {

      var self = this;
      var view = self.view;
      var $el = $(ev.target);
      var index = $el.index();

      self.updateViewedSlides(index);
      view.goToSlide(index);
    },

    'onClickUpgrade': function () {

      var self = this;
      self.view.trigger('click:close');

      runtime.trigger('route:preferences/account/pro');
    },

    'updateViewedSlides': function (index) {

      var self = this;
      var view = self.view;

      if (!view.viewedAllSlides) {
        view.viewedAllSlides = index >= view.slideEnd;
      }
    },

    'handleSlideKeys': function (e) {

      var self = this;

      if (e.which === Keycodes.tab || e.which === Keycodes.enter) {

        if (!e.shiftKey) {
          self.onClickNext(e);
        }
        else if (e.shiftKey) {
          self.onClickPrev(e);
        }
      }
    },

    'handleButtonKeys': function (e) {

      var self = this;
      if (e.which === Keycodes.tab) {
        self.handleButtonTab(e);
      }
    },

    'handleButtonTab': function (e) {

      var $target = $(e.target);
      var self = this;
      var view = self.view;

      if (!e.shiftKey && $target.hasClass('done-slide')) {
        view.focusUpgradeNow();
        self.stopEventFully(e);
      }
      else if (e.shiftKey && $target.hasClass('upgrade-pro')) {
        view.focusDone();
        self.stopEventFully(e);
      }
    }
  });
});
define('templates/whatsNew',['vendor/handlebars'], function(H) {
var name = 'whatsNew';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <div class=\"slide center\" tabindex=\"0\"> <div class=\"whatsnew-image voice\"></div> <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "whatsnew_label_voice", options) : helperMissing.call(depth0, "localized", "whatsnew_label_voice", options)))
    + "</h3> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "whatsnew_copy_voice", options) : helperMissing.call(depth0, "localized", "whatsnew_copy_voice", options)))
    + "</p> </div> ";
  return buffer;
  }

  buffer += "<div class=\"content-inner center\"> <h2>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "whatsnew_title", options) : helperMissing.call(depth0, "localized", "whatsnew_title", options)))
    + "</h2> <div class=\"separator noline slides\"> <div class=\"slide center\" tabindex=\"0\"> <div class=\"whatsnew-image comments\"></div> <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "whatsnew_label_comments", options) : helperMissing.call(depth0, "localized", "whatsnew_label_comments", options)))
    + "</h3> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "whatsnew_copy_comments", options) : helperMissing.call(depth0, "localized", "whatsnew_copy_comments", options)))
    + "</p> </div> ";
  stack2 = helpers['if'].call(depth0, depth0.isChrome, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " <div class=\"slide center\" tabindex=\"0\"> <div class=\"whatsnew-image groupbilling\"></div> <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "whatsnew_label_groupbilling", options) : helperMissing.call(depth0, "localized", "whatsnew_label_groupbilling", options)))
    + "</h3> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "whatsnew_copy_groupbilling", options) : helperMissing.call(depth0, "localized", "whatsnew_copy_groupbilling", options)))
    + "</p> </div> <div class=\"slide center\" tabindex=\"0\"> <div class=\"whatsnew-image pro\"></div> <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "whatsnew_label_pro_accounts", options) : helperMissing.call(depth0, "localized", "whatsnew_label_pro_accounts", options)))
    + "</h3> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "whatsnew_copy_pro_accounts", options) : helperMissing.call(depth0, "localized", "whatsnew_copy_pro_accounts", options)))
    + "</p> </div> </div> <div class=\"slides-navigation center\"></div> <div class=\"separator center buttons slide-buttons\"> <button class=\"nofloat bigger green upgrade-pro\"><b>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_upgrade_to_pro_label", "$settings_account_header_pro", options) : helperMissing.call(depth0, "localized", "settings_upgrade_to_pro_label", "$settings_account_header_pro", options)))
    + "</b></a> <button class=\"nofloat bigger blue next-slide\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_next", options) : helperMissing.call(depth0, "localized", "button_next", options)))
    + "</a> <button class=\"nofloat bigger blue done-slide\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_done", options) : helperMissing.call(depth0, "localized", "button_done", options)))
    + "</a> </div> </div>";
  return buffer;
  });
});
define('styles/dialogs/_whatsnew',[],function() { return {'name': 'dialogs/_whatsnew', 'styles': ".dialog#whatsNew{width:350px;margin-left:-175px;overflow:hidden;padding:0 !important;text-shadow:1px solid #fff !important;} .dialog#whatsNew .content-inner{padding:0 !important;background-image:url(\"images/textures/popover.png\") !important} .dialog#whatsNew.scroll .content-inner{top:0} .dialog#whatsNew h2{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;font-size:25px;background-image:url(\"images/sprites/whatsnew.png\");background-position:-700px -185px;width:350px;height:74px;padding-top:20px;text-shadow:0 1px 0 #fff;left:50%;margin-left:-175px;position:relative} .dialog#whatsNew .slides{position:relative;height:280px;} .dialog#whatsNew .slides .slide{position:absolute;width:100%;} .dialog#whatsNew .slides .slide h3{margin:0 0 5px 0;font-size:17px;padding:0 20px} .dialog#whatsNew .slides .slide p{color:#6c6c6c !important;padding:0 20px} .dialog#whatsNew .whatsnew-image{position:relative;left:50%;margin-left:-175px;background-image:url(\"images/sprites/whatsnew.png\");} .dialog#whatsNew .whatsnew-image.voice{background-position:-700px 0;width:350px;height:185px} .dialog#whatsNew .whatsnew-image.groupbilling{background-position:0 -185px;width:350px;height:185px} .dialog#whatsNew .whatsnew-image.search{background-position:0 -370px;width:350px;height:185px} .dialog#whatsNew .whatsnew-image.tagging{background-position:-350px -370px;width:350px;height:185px} .dialog#whatsNew .whatsnew-image.attachments{background-position:-350px 0;width:350px;height:185px} .dialog#whatsNew .whatsnew-image.pro{background-position:-350px -185px;width:350px;height:185px} .dialog#whatsNew .whatsnew-image.comments{background-position:0 0;width:350px;height:185px} .dialog#whatsNew .slides-navigation{margin-top:20px;} .dialog#whatsNew .slides-navigation a{height:12px;width:12px;background-image:url(\"images/sprites/whatsnew.png\");background-position:-700px -259px;width:12px;height:12px;display:inline-block;margin:10px 2px;text-indent:-800px;} .dialog#whatsNew .slides-navigation a.active{background-position:-712px -259px;width:12px;height:12px} .dialog#whatsNew .slide-buttons{padding:0 0 20px} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){.dialog#whatsNew .content-inner{background-image:url(\"images/textures/popover@2x.png\") !important;-webkit-background-size:80px;-moz-background-size:80px;background-size:80px} .dialog#whatsNew h2,.dialog#whatsNew .slides-navigation a,.dialog#whatsNew .slides-navigation a.active,.dialog#whatsNew .whatsnew-image{background-image:url(\"images/sprites/whatsnew-retina.png\") !important;-webkit-background-size:1050px;-moz-background-size:1050px;background-size:1050px} }html[dir=rtl] .dialog#whatsNew .whatsnew-image.comments{left:initial} " }; });
define('views/Main/WhatsNewView',[

  'application/runtime',
  'helpers/URLResolver',

  'wunderbits/WBModalView',

  'views/Main/Controllers/WhatsNewViewController',

  'template!whatsNew',

  'style!dialogs/_whatsnew'

], function (
  runtime,
  URLResolver,
  WBModalView,
  WhatsNewController,
  whatsNewTemplate,
  whatsnewStyles,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var _super = WBModalView.prototype;

  return WBModalView.extend({

    'template': whatsNewTemplate,

    'styles': [
      whatsnewStyles
    ],

    'implements': [
      WhatsNewController
    ],

    'emits': {

      'click .next-slide': 'click:next',
      'click .slides-navigation a': 'click:navigation',
      'click .done-slide': 'click:close',
      'click .upgrade-pro': 'click:upgrade',
      'keydown .slide': 'keydown:slide',
      'keydown button': 'keydown:button'
    },

    'initialize': function () {

      var self = this;
      self.isRendered = false;
      _super.initialize.apply(self, arguments);
    },

    'render': function (options) {

      var self = this;

      var dialogOptions = {
        'id': 'whatsNew',
        'title': ''
      };

      self.onClose = self.onClose || options && options.onClose;
      self.returnFocus = runtime.focus;

      if (self.isRendered) {

        self.goToSlide(0);
        self.$el.removeAttr('style');
        return;
      }

      _super.render.call(self, dialogOptions);

      self.$('.content').append(self.template({
        'isChrome': runtime.env.isChrome(),
        'filesEnabled': !runtime.feature_files_disabled
      }));

      self.isRendered = true;

      self.renderLocalized();

      self.renderNavigation();

      self.goToSlide(0);

      return self;
    },

    'renderNavigation': function() {

      var self = this;

      var slideCount = self.$('.slide').length;
      self.slideEnd = slideCount-1;

      for (var i = 0; i < slideCount; i++) {

        var a = document.createElement('a');
        self.$('.slides-navigation')[0].appendChild(a);
      }
    },

    'handleButtonVisibility': function() {

      var self = this;
      var $upgradeButton = self.$('.upgrade-pro');
      var $nextButton = self.$('.next-slide').removeClass('hidden');
      var $doneButton = self.$('.done-slide').addClass('hidden');

      var hideUpgradeButton = !self.viewedAllSlides;
      if (runtime.user.isPro()) {
        hideUpgradeButton = true;
      }

      $upgradeButton.toggleClass('hidden', hideUpgradeButton);
      $doneButton.toggleClass('hidden', self.activeSlide !== self.slideEnd);
      $nextButton.toggleClass('hidden', self.activeSlide === self.slideEnd);
    },

    'goToSlide': function (slide) {

      var self = this;
      var $slides = self.$('.slides .slide');
      var $navigationItems = self.$('.slides-navigation a');

      $navigationItems.removeClass('active').eq(slide).addClass('active');

      self.activeSlide = slide;
      self.handleButtonVisibility();

      _.each($slides, function (el) {

        var $el = $(el);
        var slidePosition = $el.index();

        if (slidePosition === slide) {
          _.delay(function () {
            $el.focus();
          }, 500);
        }

        var pagePosition = slide;
        var position = (slidePosition - pagePosition) * 120;

        $el.css({'-webkit-transform': 'translateX(' + position + '%)'});
        $el.css({'transform': 'translateX(' + position + '%)'});
      });
    },

    'focusUpgradeNow': function () {

      var self = this;
      var $upgrade = self.$('.upgrade-pro:visible');
      if ($upgrade.length) {
        $upgrade.focus();
      }
    },

    'focusDone': function () {

      this.$('.done-slide').focus();
    }
  });
});

define('views/Modals/Controllers/ConfirmationModalController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  Keycodes,
  WBModalViewController,
  undefined
) {

  

  var $ = runtime.$;

  return WBModalViewController.extend({

    'implements': {
      'click:cancel': 'onCancel',
      'click:confirm': 'onConfirm',
      'keydown:buttons': 'handleKeys'
    },

    'onCancel': function () {

      var self = this, view = self.view;
      view.onCancel && view.onCancel();
      self.closeView();
    },

    'onConfirm': function () {

      var self = this, view = self.view;
      view.onConfirm && view.onConfirm();
      self.closeView();
    },

    'handleKeys': function (e) {

      var self = this;

      if (e.which === Keycodes.tab) {
        self.handleTabKey(e);
      }
      else if (e.which === Keycodes.enter) {
        e.stopPropagation();
      }
    },

    'handleTabKey': function (e) {

      var $target = $(e.target);
      var self = this;

      if ($target.hasClass('confirm')) {
        self.view.focusCancel();
      }
      else {
        self.view.focusConfirm();
      }

      e.preventDefault();
      e.stopPropagation();
    }
  });
});
define('templates/modals/confirmationModal',['vendor/handlebars'], function(H) {
var name = 'modals/confirmationModal';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"content-inner\"> <div class=\"separator noline\"> <div class=\"cols top\"> <div class=\"col-20\"> <span class=\"icon attention\"></span> </div> <div class=\"col-80\"> <div class=\"default-text\"> <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_are_you_sure_permanently_delete_item", options) : helperMissing.call(depth0, "localized", "label_are_you_sure_permanently_delete_item", options)))
    + "</h3> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_cant_undo", options) : helperMissing.call(depth0, "localized", "label_cant_undo", options)))
    + "</p> </div> <div class=\"custom-text hidden\"> <h3/> <p/> </div> </div> </div> </div> <div class=\"separator\"> <button class=\"wider blue right confirm\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_confirm", options) : helperMissing.call(depth0, "localized", "button_confirm", options)))
    + "</button> <button class=\"wider right cancel\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_cancel", options) : helperMissing.call(depth0, "localized", "button_cancel", options)))
    + "</button> </div> </div>";
  return buffer;
  });
});
define('styles/modals/confirmationModal',[],function() { return {'name': 'modals/confirmationModal', 'styles': "#confirmation{width:430px;margin-left:-215px;} #confirmation .icon.attention{margin-top:-2px;margin-left:-8px} #confirmation h3,#confirmation p{text-shadow:0 1px 0 #fff} #confirmation h3{word-wrap:break-word;margin-top:-6px;margin-bottom:6px;line-height:22px;font-size:16px} #confirmation p{line-height:20px} " }; });
/*jshint expr:true*/
define('views/Modals/ConfirmationModalView',[

  'application/runtime',
  'wunderbits/WBModalView',
  'wunderbits/WBBlurHelper',
  'views/Modals/Controllers/ConfirmationModalController',
  'template!modals/confirmationModal',
  'style!modals/confirmationModal'

], function (
  runtime,
  WBModalView,
  WBBlurHelper,
  ConfirmationModalController,
  confirmationModalTemplate,
  confirmationModalStyle,
  undefined
) {

  

  var _ = runtime._;
  var _super = WBModalView.prototype;

  return WBModalView.extend({

    'template': confirmationModalTemplate,

    'styles': [
      confirmationModalStyle
    ],

    'implements': [ConfirmationModalController],

    'observes': {
      'runtime': {
        'confirmation:cancel': '>click:cancel',
        'confirmation:confirm': '>click:confirm'
      }
    },

    'emits': {

      'click button.cancel': 'click:cancel',
      'click button.confirm': 'click:confirm',
      'keydown button.cancel': 'keydown:buttons',
      'keydown button.confirm': 'keydown:buttons'
    },

    'renderData': {
      'id': 'confirmation',
      'customTitle': undefined,
      'text': undefined,
      'confirm': undefined,
      'cancel': undefined
    },

    'formatData': function (data) {

      var self = this;
      var options = self.options;

      data.customTitle = options.customTitle;
      data.text = options.customText;
      data.confirm = options.confirmText;
      data.cancel = options.cancelText;

      return data;
    },

    'initialize': function (options) {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.onConfirm = options && options.confirm;
      self.onCancel = options && options.cancel;
    },

    'shouldRender': function () {

      var self = this;
      var blockers = ['settings', 'coachmark', 'addTask'];

      if (self.keepTryingTimeout) {
        window.clearTimeout(self.keepTryingTimeout);
      }

      if (_.indexOf(blockers, runtime.focus) !== -1) {

        if (self.options.keepTrying) {
          self.keepTryingTimeout = _.delay(self.render, 2500);
        }

        return false;
      }

      return true;
    },

    'render': function () {

      var self = this;

      if (!self.shouldRender()) {
        return self;
      }

      var data = self.formatData(self.renderData);

      _super.render.call(self, data);

      self.$el.find('.content').append(self.template());

      if (data.text || data.customTitle) {

        var $custom = self.$el.find('.custom-text');

        self.$el.find('.default-text').addClass('hidden');
        $custom.find('h3').html(data.customTitle);
        $custom.find('p').html(data.text);
        $custom.removeClass('hidden');
      }
      else {

        self.$el.find('.default-text').removeClass('hidden');
      }

      data.confirm && self.$('button.confirm').html(data.confirm);
      data.cancel && self.$('button.cancel').html(data.cancel);

      self.options.hideCancel && self.$('button.cancel').remove();

      runtime.trigger('focus:set', 'confirmation');

      self.defer(function () {

        self.$('.content-inner').focus();
      });

      self.renderLocalized();
      WBBlurHelper.run();

      return self;
    },

    'focusConfirm': function () {

      this.$('.confirm').focus();
    },

    'focusCancel': function () {

      this.$('.cancel').focus();
    }
  });
});
define('templates/reminderItem',['vendor/handlebars'], function(H) {
var name = 'reminderItem';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"reminderItem-content\"> <span class=\"icon reminder\"/> <div class=\"reminderItem-text\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_reminder_message_$", depth0.title, options) : helperMissing.call(depth0, "localized", "label_reminder_message_$", depth0.title, options)))
    + ". </div> </div> <span class=\"icon detail-delete\"></span>";
  return buffer;
  });
});
define('views/Reminders/ReminderItemView',[

  'application/runtime',
  'wunderbits/helpers/date',
  'wunderbits/WBView',
  'vendor/moment',

  'template!reminderItem',

], function (runtime, date, WBView, moment, reminderItemTemplate, undefined) {

  

  var _super = WBView.prototype;

  return WBView.extend({

    'tagName': 'li',
    'className': 'reminderItem dialog',

    'template': reminderItemTemplate,

    'events': {

      'click .icon.detail-delete': '_onDismissReminder',
      'click': '_onClick'
    },

    'initialize': function (options) {

      var self = this;
      options = options || {};

      self.taskModel = options.taskModel;

      _super.initialize.apply(self, arguments);
    },

    'renderData': {
      'title': null
    },

    'formatData': function (data) {

      var self = this;
      var model = self.taskModel;

      data.title = model.escape('title');

      return data;
    },

    'render': function () {

      var self = this;
      var data = self.formatData(self.renderData);

      _super.render.call(self, data);

      return self;
    },

    '_onDismissReminder': function () {

      var self = this;
      self.model && self.model.set({'reminded': true});
      !self.destroyed && self.destroy();
    },

    '_onClick': function () {

      var self = this;
      runtime.trigger('reminder:clicked');
      self.taskModel && runtime.trigger('route:tasks/' + self.taskModel.id);
      self._onDismissReminder();
    }
  });
});
define('styles/modals/reminderModal',[],function() { return {'name': 'modals/reminderModal', 'styles': ".dialog-wrapper.reminders{background:none;width:300px;margin-left:-150px;left:50%;height:auto} .dialog.reminderItem{position:relative;width:300px;margin-left:-150px;top:auto;padding:6px;margin-top:10px;zoom:1;} .dialog.reminderItem:before,.dialog.reminderItem:after{content:\"\";display:table} .dialog.reminderItem:after{clear:both} .dialog.reminderItem .reminderItem-text{line-height:18px;padding-left:45px;padding-right:20px} .dialog.reminderItem .icon.reminder{top:5px;left:5px;float:left} .dialog.reminderItem .icon.detail-delete{position:absolute;top:5px;right:5px} " }; });
define('views/Reminders/RemindersView',[

  'vendor/moment',

  'application/runtime',

  'collections/ReminderCollection',
  'collections/TaskCollection',

  'wunderbits/helpers/date',
  'helpers/notifications',

  'views/Reminders/ReminderItemView',

  'wunderbits/WBView',

  'style!modals/reminderModal'

], function (moment, runtime, ReminderCollection, TaskCollection, date, Notifications, ReminderItemView, WBView, reminderModalStyle, undefined) {

  

  var _super = WBView.prototype;

  var _date = date;
  var _notifications = Notifications;

  var _ = runtime._;
  // var $ = runtime.$;

  return WBView.extend({

    'tagName': 'ul',
    'className': 'reminders dialog-wrapper',

    'styles': [
      reminderModalStyle
    ],

    'events': {

    },

    'initialize': function () {

      var self = this;

      self.reminders = new ReminderCollection('/reminders/all');
      self.tasks = new ReminderCollection('/tasks/all');

      _super.initialize.apply(self, arguments);

      self.bindTo(runtime, 'reminders:check', self._onCheckReminders);
    },

    'render': function () {

      var self = this;
      var data = {};

      _super.render.call(self, data);

      return self;
    },

    '_onCheckReminders': function () {

      var self = this;
      var now = moment().format('YYYY-MM-DDTHH:mm');

      _.each(self.reminders.models, function (reminderModel) {

        var dueTime = moment(_date.convertServerTimeToLocalTime(reminderModel.attributes.date)).format('YYYY-MM-DDTHH:mm');

        if (!reminderModel.attributes.reminded && !self.getSubview(reminderModel.id) && dueTime === now) {

          var taskModel = self.tasks.get(reminderModel.attributes.task_id);

          if (!taskModel.isCompleted()) {

            var options = {

              'model': reminderModel,
              'taskModel': taskModel
            };
            var reminderView = self.addSubview(new ReminderItemView(options), reminderModel.id);

            reminderView && self.$el.prepend(reminderView.render().el);

            self._displayDesktopNotification(options, reminderView);

            runtime.settings.attributes.sound_notification_enabled === 'true' && runtime.trigger('sounds:play', 'bell');
          }
        }
      });
    },

    '_displayDesktopNotification': function (options, view) {

      var self = this;

      var onNotificationInteraction = function (e) {

        this.close();
        options.model.set({'reminded': true});
        var view = self.getSubview(options.model.id);
        view && view.destroy();

        if (e.type === 'click') {

          runtime.trigger('reminder:clicked');
          runtime.trigger('route:tasks/' + options.taskModel.id);
        }
      };

      var desktopNotificationEnabled = (runtime.settings.attributes.notifications_desktop_enabled === 'true');

      desktopNotificationEnabled && _notifications.create({

        'type': 'text',
        'title': 'wunderlist reminder',
        'text': view.$el.find('.reminder-text').text(),
        'timeout': false,
        'onClick': onNotificationInteraction,
        'onClose': onNotificationInteraction
        //'icon': notificationModel.attributes.triggered_by.avatar,
      });
    }
  });
});
define('views/Settings/Controllers/SettingsSubviewController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  Keycodes,
  WBModalViewController,
  undefined
) {

  

  return WBModalViewController.extend({

    'implements': {
      'tabStart:keydown': 'handleTabStartKeys',
      'tabEnd:keydown': 'handleTabEndKeys'
    },

    'handleTabStartKeys': function (ev) {

      var view = this.view;
      if (ev.which === Keycodes.tab && ev.shiftKey) {
        view.trigger('focus:tab');
        ev.preventDefault();
        ev.stopPropagation();
      }
    },

    'handleTabEndKeys': function (ev) {

      var view = this.view;
      if (ev.which === Keycodes.tab && !ev.shiftKey) {
        view.$('.tabStart').focus();
        ev.preventDefault();
        ev.stopPropagation();
      }
    }
  });
});
define('views/Settings/SettingsSubview',[

  'views/Settings/Controllers/SettingsSubviewController',
  'wunderbits/WBViewPresenter'

], function (

  SettingsSubviewController,
  WBViewPresenter
) {

  

  return WBViewPresenter.extend({

    'implements': [
      SettingsSubviewController,
    ],

    'emits': {
      'keydown .tabStart': 'tabStart:keydown',
      'keydown .tabEnd': 'tabEnd:keydown',
      'keydown .tabBackOnly': 'tabBackOnly:keydown',
      'keydown .tabForwardOnly': 'tabForwardOnly:keydown'
    }
  });
});
define('views/Settings/Controllers/SettingsGeneralViewController',[

  'application/runtime',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  WBModalViewController,
  undefined
) {

  

  var $ = runtime.$;

  return WBModalViewController.extend({

    'implements': {

      'change:selectable': 'onChangeSelectable',
      'change:toggleable': 'onChangeToggleable',

      'change:radio': 'onChangeRadio',
      'change:deviceTouch': 'onChangeDeviceTouch'
    },

    'selectableEventsMap': {

      'edit-date-format': 'date_format',
      'edit-language': 'language',
      'edit-new-task-location': 'new_task_location',
      'edit-start-of-week': 'start_of_week'
    },

    'toggleableEventsMap': {

      'edit-ask-before-delete': 'confirm_delete_entity',
      'edit-print-completed-items': 'print_completed_items',
      'edit-sound-checkoff-enabled': 'sound_checkoff_enabled',
      'edit-sound-notification-enabled': 'sound_notification_enabled'
    },

    'radioEventsMap': {

      'edit-time-format': 'time_format'
    },

    'onChangeSelectable': function (e) {

      var $elem = $(e.currentTarget);
      var options = {};

      // use the value of the option - hard coded on template
      options[this.selectableEventsMap[$elem.attr('id')]] = $elem.val();

      runtime.settings.save(options);
    },

    'onChangeToggleable': function (e) {

      var $elem = $(e.currentTarget);
      var options = {};

      // use the value of the option
      options[this.toggleableEventsMap[$elem.attr('id')]] = $elem.is(':checked').toString();

      runtime.settings.save(options);
    },

    'onChangeRadio': function (e) {

      var $elem = $(e.currentTarget);
      var options = {};

      options[this.radioEventsMap[$elem.attr('name')]] = $elem.val();

      runtime.settings.save(options);
    },

    'onChangeDeviceTouch': function (e) {

      var self = this;
      var $elem = $(e.currentTarget);
      var options = {};

      var settingKey = runtime.env.getEnvIdentifier();
      // use the value of the option
      options[settingKey] = $elem.is(':checked') ? '1':'0';

      runtime.settings.save(options, {
        'success': function () {

          if (runtime.isSyncing) {
            self.bindTo(runtime, 'sync:end', self.refreshForTouch);
          }
          else {
            self.refreshForTouch();
          }
        }
      });
    },

    'refreshForTouch': function () {

      runtime.trigger('update:touchSetting');
      runtime.reload(runtime.currentRoute());
    }
  });
});
define('templates/settings/settingsGeneral',['vendor/handlebars'], function(H) {
var name = 'settings/settingsGeneral';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <option value=\"";
  if (stack1 = helpers.code) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.code; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\">";
  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</option> ";
  return buffer;
  }

function program3(depth0,data) {
  
  
  return " selected";
  }

function program5(depth0,data) {
  
  
  return " checked";
  }

function program7(depth0,data) {
  
  
  return "checked";
  }

function program9(depth0,data) {
  
  
  return "selected";
  }

function program11(depth0,data) {
  
  var buffer = "", stack1, stack2, options;
  buffer += " <!-- Touch events/styles --> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "web_setting_enable_touch_for_$", depth0.device, options) : helperMissing.call(depth0, "localized", "web_setting_enable_touch_for_$", depth0.device, options)))
    + "<p class=\"small-touch\">(";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "web_settings_text_refresh_may_be_required", options) : helperMissing.call(depth0, "localized", "web_settings_text_refresh_may_be_required", options)))
    + ")</p></div> <div class=\"col-40\"> <input id=\"edit-enable-touch-styles\" type=\"checkbox\" class=\"tabEnd\" ";
  stack2 = helpers['if'].call(depth0, depth0.touch_is_enabled, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " data-key-aria-label=\"web_setting_enable_touch_for_$\" data-aria-label=\"";
  if (stack2 = helpers.device) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.device; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\"/> </div> </div> ";
  return buffer;
  }

  buffer += " <div class=\"separator\"> <!-- Language --> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_general_language", options) : helperMissing.call(depth0, "localized", "settings_general_language", options)))
    + "</div> <div class=\"col-40\"> <select id=\"edit-language\" data-key-aria-label=\"settings_general_language\" class=\"tabStart\"> "
    + " ";
  stack2 = helpers.each.call(depth0, depth0.languages, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </select> </div> </div> <!-- Date Format --> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_general_date_format", options) : helperMissing.call(depth0, "localized", "settings_general_date_format", options)))
    + "</div> <div class=\"col-40\"> <select id=\"edit-date-format\" data-key-aria-label=\"settings_general_date_format\"> <option value=\"DD.MM.YYYY\" ";
  stack2 = helpers['if'].call(depth0, depth0['is date_format DD.MM.YYYY'], {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += ">DD.MM.YYYY</option> <option value=\"MM/DD/YYYY\" ";
  stack2 = helpers['if'].call(depth0, depth0['is date_format MM/DD/YYYY'], {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += ">MM/DD/YYYY</option> <option value=\"DD/MM/YYYY\" ";
  stack2 = helpers['if'].call(depth0, depth0['is date_format DD/MM/YYYY'], {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += ">DD/MM/YYYY</option> <option value=\"YYYY/MM/DD\" ";
  stack2 = helpers['if'].call(depth0, depth0['is date_format YYYY/MM/DD'], {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += ">YYYY/MM/DD</option> <option value=\"YYYY-MM-DD\" ";
  stack2 = helpers['if'].call(depth0, depth0['is date_format YYYY-MM-DD'], {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += ">YYYY-MM-DD</option> </select> </div> </div> <!-- Time Format --> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_general_time_format", options) : helperMissing.call(depth0, "localized", "settings_general_time_format", options)))
    + "</div> <div class=\"col-40\"> <div class=\"time-format\" aria-role=\"radiogroup\" data-key-aria-label=\"settings_general_time_format\" tabindex=\"0\"> <input name=\"edit-time-format\" type=\"radio\" value=\"12 hour\" ";
  stack2 = helpers['if'].call(depth0, depth0['is time_format 12 hour'], {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " data-key-aria-label=\"settings_general_12_hour\"></input>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_general_12_hour", options) : helperMissing.call(depth0, "localized", "settings_general_12_hour", options)))
    + " <input name=\"edit-time-format\" type=\"radio\" value=\"24 hour\" ";
  stack2 = helpers['if'].call(depth0, depth0['is time_format 24 hour'], {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " data-key-aria-label=\"settings_general_24_hour\"></input>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_general_24_hour", options) : helperMissing.call(depth0, "localized", "settings_general_24_hour", options)))
    + " </div> </div> </div> <!-- Start of Week --> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_general_start_of_week", options) : helperMissing.call(depth0, "localized", "settings_general_start_of_week", options)))
    + "</div> <div class=\"col-40\"> <select id=\"edit-start-of-week\" data-key-aria-label=\"settings_general_start_of_week\"> <option value=\"sat\" ";
  stack2 = helpers['if'].call(depth0, depth0['is start_of_week sat'], {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " data-key-text=\"settings_general_start_of_week_saturday\"></option> <option value=\"sun\" ";
  stack2 = helpers['if'].call(depth0, depth0['is start_of_week sun'], {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " data-key-text=\"settings_general_start_of_week_sunday\"></option> <option value=\"mon\" ";
  stack2 = helpers['if'].call(depth0, depth0['is start_of_week mon'], {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " data-key-text=\"settings_general_start_of_week_monday\"></option> </select> </div> </div> </div> <!-- Sounds --> <div class=\"separator\"> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_general_sound_task_completion", options) : helperMissing.call(depth0, "localized", "settings_general_sound_task_completion", options)))
    + "</div> <div class=\"col-40\"> <input id=\"edit-sound-checkoff-enabled\" type=\"checkbox\" ";
  stack2 = helpers['if'].call(depth0, depth0['is sound_checkoff_enabled true'], {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " data-key-aria-label=\"settings_general_sound_task_completion\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_general_sound_new_notifications", options) : helperMissing.call(depth0, "localized", "settings_general_sound_new_notifications", options)))
    + "</div> <div class=\"col-40\"> <input id=\"edit-sound-notification-enabled\" type=\"checkbox\" ";
  stack2 = helpers['if'].call(depth0, depth0['is sound_notification_enabled true'], {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " data-key-aria-label=\"settings_general_sound_new_notifications\"/> </div> </div> </div> <!-- Create New Tasks --> <div class=\"separator\"> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_general_create_new_tasks", options) : helperMissing.call(depth0, "localized", "settings_general_create_new_tasks", options)))
    + "</div> <div class=\"col-40\"> <select id=\"edit-new-task-location\" data-key-aria-label=\"settings_general_create_new_tasks\"> <option value=\"top\" ";
  stack2 = helpers['if'].call(depth0, depth0['is new_task_location top'], {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " data-key-text=\"settings_general_tasks_top\"></option> <option value=\"bottom\" ";
  stack2 = helpers['if'].call(depth0, depth0['is new_task_location bottom'], {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " data-key-text=\"settings_general_tasks_bottom\"></option> </select> </div> </div> <!-- Ask to confirm before deleting --> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_general_confirm_deletion", options) : helperMissing.call(depth0, "localized", "settings_general_confirm_deletion", options)))
    + "</div> <div class=\"col-40\"> <input id=\"edit-ask-before-delete\" type=\"checkbox\" ";
  stack2 = helpers['if'].call(depth0, depth0['is confirm_delete_entity true'], {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " data-key-aria-label=\"settings_general_confirm_deletion\"/> </div> </div> </div> <!-- Print completed tasks --> <div class=\"separator\"> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_general_print_done_tasks", options) : helperMissing.call(depth0, "localized", "settings_general_print_done_tasks", options)))
    + "</div> <div class=\"col-40\"> <input id=\"edit-print-completed-items\" type=\"checkbox\" ";
  stack2 = helpers['if'].call(depth0, depth0['is print_completed_items true'], {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " data-key-aria-label=\"settings_general_print_done_tasks\"/> </div> </div> ";
  stack2 = helpers.unless.call(depth0, depth0.isChromeOS, {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </div> ";
  return buffer;
  });
});
define('views/Settings/SettingsGeneralView',[

  'application/runtime',

  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/strings',

  'languages/available',

  'views/Settings/SettingsSubview',
  'views/Settings/Controllers/SettingsGeneralViewController',

  'template!settings/settingsGeneral'

], function (
  runtime,
  Keycodes, Strings,
  availableLanguages,
  SettingsSubview,
  SettingsGeneralViewController,
  generalTemplate,
  undefined
) {

  

  var _ = runtime._;

  var _super = SettingsSubview.prototype;

  return SettingsSubview.extend({

    'template': generalTemplate,

    'className': 'content-inner',

    'implements': [
      SettingsGeneralViewController
    ],

    'emits': {

      'change #edit-date-format': 'change:selectable',
      'change #edit-start-of-week': 'change:selectable',
      'change #edit-language': 'change:selectable',
      'change #edit-new-task-location': 'change:selectable',
      
      'change #edit-ask-before-delete': 'change:toggleable',
      'change #edit-print-completed-items': 'change:toggleable',
      'change #edit-sound-checkoff-enabled': 'change:toggleable',
      'change #edit-sound-notification-enabled': 'change:toggleable',
      'change #edit-sync-settings': 'change:toggleable',

      'change input[name="edit-time-format"]': 'change:radio',

      'change #edit-enable-touch-styles': 'change:deviceTouch'
    },

    initialize: function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.selectables = [

        'date_format',
        'language',
        'new_task_location'
      ];

      self.radios = [

        'time_format'
      ];

      _.each(self.selectables, function (key) {

        self.bindTo(runtime.settings, 'change:' + key, function () {

          self.updateSelectable(key);
        });
      });

      _.each(self.radios, function (key) {

        self.bindTo(runtime.settings, 'change:' + key, function () {

          self.updateRadio(key);
        });
      });
    },

    render: function () {

      var self = this;
      var json;

      json = runtime.settings.toJSON();

      // create truthy keys for handlebars
      _.each(json, function (val, key) {

        json['is '+ key + ' ' + val] = true;
      });

      var touchSetting = runtime.settings.get(runtime.env.getEnvIdentifier());
      json.isChromeOS = runtime.env.isChromeOS();
      json.touch_is_enabled = touchSetting && touchSetting === '1';
      json.device = Strings.capitalizeFirstLetter(runtime.env.getEnvInfo().browser) + ' ' + Strings.capitalizeFirstLetter(runtime.env.getEnvInfo().OS);
      // Add language data to the json for rendering
      json.languages = [];
      _.each(availableLanguages.data, function(lang, code) {

        lang.code = code;
        json.languages.push(lang);
      });

      // render
      _super.render.call(self, json);

      // select the default language
      var _langCode = runtime.language.attributes.code;
      self.$el.find('option[value="' + _langCode + '"]').first().prop('selected', true);

      return self;
    },

    'updateSelectable': function (key) {

      var self = this;
      var value = runtime.settings.get(key);
      var $option = self.$el.find('#edit-' + key.replace(/_/g, '-')).find('option[value="' + value + '"]').first();
      $option.prop('selected', true);
    },

    'updateRadio': function (key) {

      var self = this;
      var value = runtime.settings.get(key);
      var $option = self.$el
        .find('[name="edit-' + key.replace(/_/g, '-') + '"]')
        .filter('[value="' + value + '"]').first();

      $option.prop('checked', true);
    }
  });
});
define('mixins/TermsOfUseMixin',[

  'application/runtime',

  'vendor/moment',

  'wunderbits/WBMixin'

], function (runtime, moment, WBMixin) {

  

  var io = runtime.io;
  var $ = runtime.$;
  var _ = runtime._;

  return WBMixin.extend({


    'renderTermsLinks': function () {

      var self = this;
      if (self.destroyed) {
        return;
      }

      var baseUrl = 'http://www.6wunderkinder.com/';
      var $accepts = self.$('.accept-terms');

      // the accept text is in a few places, convert to links err wherr
      $accepts.each(function () {

        // this is jQ this which === element
        var $accept = $(this);
        var $terms = $accept.find('.token_0');
        var $privacy = $accept.find('.token_1');

        // do not go past here if parent is already the link
        if ($terms.parent().prop('tagName') === 'A') {

          return;
        }

        var $termsLink = $('<a href="' + baseUrl + 'terms-of-use" target="_blank"></a>').append($terms.clone());
        $terms.replaceWith($termsLink);

        var $privacyLink = $('<a href="' +  baseUrl + 'privacy-policy" target="_blank"></a>').append($privacy.clone());
        $privacy.replaceWith($privacyLink);
      });
    },

    'cancelTerms': function (returnRoute, shouldReset) {

      var self = this;

      runtime.trigger('route' + returnRoute);

      _.delay(function() {

        self.$('.pro-section-terms-of-use, .buy-options, .teams').toggleClass('hidden');

        if (shouldReset) {

          self.selectedProduct = null;
        }
      }, 200);
    },

    'acceptTerms': function (options) {

      var self = this;

      var $acceptBtn = self.$('.accept-terms');
      var $btns = self.$('.button, button');

      var termsNow = {
        'terms_accepted_at': moment().format('YYYY-MM-DD')
      };

      $acceptBtn.addClass('loading');
      $btns.addClass('disabled').attr('disabled', 'disabled');

      // save setting of accepting
      io.put('/me', termsNow).done(function () {

        runtime.user.save(termsNow, {
          'success': function () {

            $acceptBtn.removeClass('loading');
            $btns.removeClass('disabled').removeAttr('disabled');

            options && options.callback && typeof options.callback === 'function' && options.callback();
          }
        });
      }).fail(function () {

      });
    }
  });
});
define('templates/pro/subscription',['vendor/handlebars'], function(H) {
var name = 'pro/subscription';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  
  return " <div class=\"col-50\"> <button class=\"big green buy\" disabled tabindex=\"0\"></button> </div> ";
  }

  buffer += "<div class=\"page-buy\"> <!-- Go premium --> <div class=\"separator\"> <div class=\"cols top\"> <div class=\"col-32\"> <div class=\"avatar-frame\"> <div class=\"avatar large\"> <span class=\"icon pro\"></span> <img /> </div> </div> </div> <div class=\"col-68 pro-section-style\"> <!-- Products --> <div class=\"buy-options tabStart\" tabindex=\"0\"> <h3 class=\"upgrade-header\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_header_$", "$benefit_name", options) : helperMissing.call(depth0, "localized", "benefit_header_$", "$benefit_name", options)))
    + " </h3> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_header_description", options) : helperMissing.call(depth0, "localized", "benefit_header_description", options)))
    + "</p> <div class=\"cols\"> ";
  stack2 = helpers.each.call(depth0, depth0.products, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </div> <a data-path=\"preferences/teams\" class=\"button big green buy\" role=\"button\" data-key-aria-label=\"group_billing_packages_title\" tabindex=\"0\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "group_billing_packages_title", options) : helperMissing.call(depth0, "localized", "group_billing_packages_title", options)))
    + "</a> </div> <!-- TOU --> <div class=\"pro-section-terms-of-use hidden\"> <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_terms_of_use", options) : helperMissing.call(depth0, "localized", "settings_terms_of_use", options)))
    + "</h3> <p class=\"accept-terms\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_label_accept_terms", "$settings_terms_of_use", "$settings_privacy_policy", options) : helperMissing.call(depth0, "localized", "benefit_label_accept_terms", "$settings_terms_of_use", "$settings_privacy_policy", options)))
    + "</p> <div class=\"cols\"> <div class=\"col-50\"> <a class=\"button big cancel-terms-of-use\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_cancel", options) : helperMissing.call(depth0, "localized", "button_cancel", options)))
    + "</a> </div> <div class=\"col-50\"> <a class=\"button big green accept-terms-of-use\"><b>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "notifications_event_accept", options) : helperMissing.call(depth0, "localized", "notifications_event_accept", options)))
    + "</b><span/></a> </div> </div> </div> <!-- Signup --> <div class=\"unregistered-sign-up hidden\"> <div class=\"cols\"> <div class=\"col-100\"> <button class=\"big blue signup\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_sign_up", options) : helperMissing.call(depth0, "localized", "button_sign_up", options)))
    + "</button> </div> </div> </div> </div> </div> </div> <!-- Premium benefits --> <div class=\"separator pro-benefits\"> <div class=\"cols\"> <div class=\"col-32\"> <div class=\"benefit comments\"></div> </div> <div class=\"col-68\" tabindex=\"0\"> <h4>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_comments_title", options) : helperMissing.call(depth0, "localized", "benefit_comments_title", options)))
    + "</h4> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_comments_description", options) : helperMissing.call(depth0, "localized", "benefit_comments_description", options)))
    + "</p> </div> </div> <div class=\"cols\"> <div class=\"col-32\"> <div class=\"benefit attachments\"></div> </div> <div class=\"col-68\" tabindex=\"0\"> <h4>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_files_title", options) : helperMissing.call(depth0, "localized", "benefit_files_title", options)))
    + "</h4> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_files_description", options) : helperMissing.call(depth0, "localized", "benefit_files_description", options)))
    + "</p> </div> </div> <div class=\"cols\"> <div class=\"col-32\"> <div class=\"benefit assigning\"></div> </div> <div class=\"col-68\" tabindex=\"0\"> <h4>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_assign_tasks_title", options) : helperMissing.call(depth0, "localized", "benefit_assign_tasks_title", options)))
    + "</h4> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_assign_tasks_description", options) : helperMissing.call(depth0, "localized", "benefit_assign_tasks_description", options)))
    + "</p> </div> </div> <div class=\"cols\"> <div class=\"col-32\"> <div class=\"benefit backgrounds\"></div> </div> <div class=\"col-68\" tabindex=\"0\"> <h4>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_additional_backgrounds_title", options) : helperMissing.call(depth0, "localized", "benefit_additional_backgrounds_title", options)))
    + "</h4> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_additional_backgrounds_description", options) : helperMissing.call(depth0, "localized", "benefit_additional_backgrounds_description", options)))
    + "</p> </div> </div> <div class=\"cols\"> <div class=\"col-32\"> <div class=\"benefit subtasks\"></div> </div> <div class=\"col-68\" tabindex=\"0\"> <h4>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_unlimited_subtasks_title", options) : helperMissing.call(depth0, "localized", "benefit_unlimited_subtasks_title", options)))
    + "</h4> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_unlimited_subtasks_decription", options) : helperMissing.call(depth0, "localized", "benefit_unlimited_subtasks_decription", options)))
    + "</p> </div> </div> </div> <div class=\"separator center\"> <a class=\"button nofloat cancel-benefits tabEnd\" data-path=\"preferences/account\" role=\"button\" data-key-aria-label=\"social_sharing_button_later\" tabindex=\"0\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "social_sharing_button_later", options) : helperMissing.call(depth0, "localized", "social_sharing_button_later", options)))
    + "</a> </div> </div>";
  return buffer;
  });
});
define('views/Pro/SubscriptionView',[

  'application/runtime',

  'vendor/moment',

  'collections/ProductsCollection',

  'mixins/TermsOfUseMixin',
  'helpers/BlobHelper',

  'wunderbits/WBView',

  'template!pro/subscription',

], function (
  runtime,
  moment,
  ProductsCollection,
  TermsOfUseMixin,
  BlobHelper,
  WBView,
  subscriptionTemplate,
  undefined
) {

  

  var io = runtime.io;
  var _ = runtime._;
  var $ = runtime.$;

  var _super = WBView.prototype;

  return WBView.extend({

    'template': subscriptionTemplate,

    'className': 'pro-subscription',

    'events': {
      'click .buy': '_buy',
      'click .cancel-terms-of-use': 'clickCancelTerms',
      'click .accept-terms-of-use': 'clickAcceptTerms',
      'click .signup': 'signup'
    },

    'initialize': function () {

      var self = this;

      TermsOfUseMixin.applyTo(self);

      _super.initialize.apply(self, arguments);

      // Check if the user is online
      self._online = runtime.env.isOnline();

      // Check if the user is pro already
      self._isPro = runtime.user.isPro();

      // get the product's collection
      self.products = new ProductsCollection('/products/all');

      // if user isn't pro, or offline-user, bind product fetch to online/offline events
      if(!self._isPro && !runtime.user.isUnregistered()) {
        self.bindConnectionEvents();
      }
    },

    'bindConnectionEvents': function () {

      var self = this;

      self._onlineHandler = self.bindTo(runtime.env, 'online', function () {

        _.delay(self._fetchProducts, 500);
      });

      self._offlineHandler = self.bindTo(runtime.env, 'offline', function () {

        self._online = false;
        self._renderButtons();
      });

      // Whenever the user becomes pro, unbind these handlers
      self.bindTo(runtime.user, 'change:product', function() {

        if(runtime.user.isPro()) {
          self.unbindFrom(self._onlineHandler);
          self.unbindFrom(self._offlineHandler);
        }
      });
    },

    'render':  function() {

      var self = this;

      var userJson = runtime.user.toJSON();
      userJson.avatar = userJson.avatar && runtime.user.getAvatarURL();

      // Render the UI with the buttons
      _super.render.call(self, {
        'user': userJson,
        'products': [0, 1]
      });

      // Update the buttons, if needed
      self._renderButtons();

      // fetch products and update buttons
      if(!self._isPro && !runtime.user.isUnregistered()) {
        self._fetchProducts();
      }

      self.defer(self.renderTermsLinks);

      runtime.user.isUnregistered() && self.$('.unregistered-sign-up').removeClass('hidden');

      userJson.avatar && BlobHelper.loadImage(userJson.avatar, self.$('img'));

      return self;
    },

    '_renderButtons': function() {

      var self = this;

      if (self.destroyed) {
        return;
      }

      var buttons = self.$('button.buy').removeClass('loading disabled').removeAttr('disabled');

      // If the user is offline or there aren't any products yet
      if(!self._online || self.products.length === 0) {
        // Change the labels to "offline" & disable the buttons
        buttons.html(runtime.language.getLabel('benefit_payment_service_unavailable').toString());
        buttons.addClass('disabled').attr('disabled', 'disabled');
        self.renderLabels();
      }
      // If the user is online
      else {

        _.each(self.products.models, function (product, index) {
          // Update the button
          product = product.attributes;

          var button = buttons.eq(index);
          var title = product.title || product.name;
          var $value = $('<strong>' + product.value + '</strong>');

          title = title.replace('{price}', $value[0].outerHTML);
          button.html(title).attr('rel', product.product_id);
        });
      }

      runtime.user.isUnregistered() && self.$('button.buy, a.buy').addClass('hidden');
    },

    '_fetchProducts': function() {

      var self = this;

      // fetch available products, if the user isn't pro
      if (!self.isPro) {

        // set the buttons as "loading"
        self.$('button.buy').addClass('loading').append('<span/>');

        // sync with payment api
        io.get('/products/adyen', {
          'locale': runtime.settings.attributes.account_locale || 'en'
        }).done(function (data) {

          if (!self.destroyed) {

            // add the products to the "all" collection
            var allProducts = new ProductsCollection('/products/all');
            allProducts.reset().add(data);

            // Mark the client as online
            self._online = true;
            // Re-render the buttons
            self._renderButtons();
          }
        }).fail(function () {

          if (!self.destroyed) {
            // Looks like the payment server is down
            // Mark the client as offline
            self._online = false;

            // Re-render the buttons
            self._renderButtons();
          }
        });
      }
    },

    'renderTermsLinks': function () {

      var self = this;

      var baseUrl = 'http://www.wunderlist.com/';
      var $accepts = self.$('.accept-terms');

      // the accept text is in a few places, convert to links err wherr
      $accepts.each(function () {

        // this is jQ this which === element
        var $accept = $(this);
        var $terms = $accept.find('.token_0');
        var $privacy = $accept.find('.token_1');

        // do not go past here if parent is already the link
        if ($terms.parent().prop('tagName') === 'A') {

          return;
        }

        var $termsLink = $('<a href="' + baseUrl + 'terms-of-use" target="_blank"></a>').append($terms.clone());
        $terms.replaceWith($termsLink);

        var $privacyLink = $('<a href="' +  baseUrl + 'privacy-policy" target="_blank"></a>').append($privacy.clone());
        $privacy.replaceWith($privacyLink);
      });
    },

    'showBenefits': function () {

      var self = this;

      self.$el.closest('.content-inner').find('.settings, .pro-status').addClass('hidden');
      self.$el.removeClass('hidden');
    },

    'hideBenefits': function () {

      var self = this;

      self.$el.closest('.content-inner').find('.settings, .pro-status').removeClass('hidden');
      self.$el.addClass('hidden');
    },

    '_buy': function (ev) {

      var self = this;
      var target = ev && $(ev.target).closest('button')[0];
      var product = ev ? target && target.getAttribute('rel') : self.selectedProduct;

      if (!runtime.user.attributes.terms_accepted_at) {

        self.selectedProduct = product;
        self.$('.pro-section-terms-of-use, .buy-options, .teams').toggleClass('hidden');
        return;
      }

      if (product) {
        // track the click
        runtime.trigger('analytics:ProAccounts:clickedOnBuy', product);

        // Fetch a uuid for the transaction
        io.post('/adyen/generate_url', {
          'locale': runtime.settings.attributes.account_locale || 'en',
          'product': product,
          'platform': 'web'
        }).done(function (data) {

          // Send the user to adyen for payment
          if (data.uuid) {

            runtime.trigger('analytics:ProAccounts:sentToAdyen', product);

            _.delay(function () {

              runtime.openUrl(runtime.config.payment.host + '/adyen/' + data.uuid);
            }, 500);
          }
        }).fail(function () {

          var textStatus = arguments[1];
          runtime.trigger('analytics:ProAccounts:paymentAPIAJAXFailure', textStatus);
        });
      }
      else {

        runtime.trigger('analytics:ProAccounts:noProductDefinedForBuyButton');
      }
    },

    'clickCancelTerms': function () {

      var returnRoute = 'preferences/account';
      this.cancelTerms(returnRoute, true);
    },

    'clickAcceptTerms': function () {

      var self = this;
      self.acceptTerms({'callback': self._buy.bind(self) });
    },

    'signup': function () {

      runtime.trigger('login:open:signup');
    }
  });
});

define('templates/pro/status',['vendor/handlebars'], function(H) {
var name = 'pro/status';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var stack1, stack2, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <h3 class=\"yay-pro\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_header_pro_account_$", "$settings_account_header_pro", options) : helperMissing.call(depth0, "localized", "settings_account_header_pro_account_$", "$settings_account_header_pro", options)))
    + "</h3> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_header_pro_description", options) : helperMissing.call(depth0, "localized", "settings_account_header_pro_description", options)))
    + "</p> ";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.isUnregistered, {hash:{},inverse:self.program(6, program6, data),fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  return buffer;
  }
function program4(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_header_unregistered", options) : helperMissing.call(depth0, "localized", "settings_account_header_unregistered", options)))
    + "</h3> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_register_wunderlist_description", options) : helperMissing.call(depth0, "localized", "settings_account_register_wunderlist_description", options)))
    + "</p> <a class=\"button big left green\" data-path=\"try/signup\" tabindex=\"0\"><strong>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_join_now", options) : helperMissing.call(depth0, "localized", "button_join_now", options)))
    + "</strong></a> ";
  return buffer;
  }

function program6(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_header_account_$", "$settings_account_header_free", options) : helperMissing.call(depth0, "localized", "settings_account_header_account_$", "$settings_account_header_free", options)))
    + "</h3> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_pro_description", options) : helperMissing.call(depth0, "localized", "settings_account_pro_description", options)))
    + "</p> <a class=\"button big left green go-pro\" data-path=\"preferences/account/pro\" data-key-aria-label=\"settings_upgrade_to_pro_label\" data-aria-label=\"$benefit_name\" tabindex=\"0\"> <strong>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_upgrade_to_pro_label", "$benefit_name", options) : helperMissing.call(depth0, "localized", "settings_upgrade_to_pro_label", "$benefit_name", options)))
    + "</strong> </a> ";
  return buffer;
  }

  stack2 = helpers['if'].call(depth0, ((stack1 = depth0.user),stack1 == null || stack1 === false ? stack1 : stack1.isPro), {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { return stack2; }
  else { return ''; }
  });
});
define('views/Pro/StatusView',[

  'application/runtime',

  'wunderbits/WBView',

  'template!pro/status',

], function (runtime, WBView, statusTemplate, undefined) {

  

  return WBView.extend({

    'template': statusTemplate,

    'className': 'pro-status pro-section-style tabStart',

    'attributes': {
      'tabindex': 0
    }
  });
});
define('templates/settings/invoiceDownloader',['vendor/handlebars'], function(H) {
var name = 'settings/invoiceDownloader';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"cols separator cols-no-indent\"> <div class=\"col-32 text-right\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_label_invoices", options) : helperMissing.call(depth0, "localized", "settings_label_invoices", options)))
    + " </div> <div class=\"col-40\"> <select class=\"invoices\"> </select> </div> <div class=\"col-28\"> <a class=\"button full download-invoice\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_download", options) : helperMissing.call(depth0, "localized", "button_download", options)))
    + " </a> </div> </div>";
  return buffer;
  });
});
define('views/Settings/InvoiceDownloaderView',[

  'application/runtime',

  'vendor/moment',

  'wunderbits/WBView',

  'collections/InvoiceCollection',

  'template!settings/invoiceDownloader'

], function (
  runtime,
  moment,
  WBView,
  InvoiceCollection,
  template,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;
  var io = runtime.io;

  var _super = WBView.prototype;

  return WBView.extend({

    'template': template,

    'className': 'invoice-downloader separator hidden',

    'events': {

      'change select.invoices': 'updateDownloadLink'
    },

    'initialize': function () {

      var self = this;

      self.invoices = new InvoiceCollection('/invoices/all');

      _super.initialize.apply(self, arguments);
    },

    'render': function () {

      var self = this;
      io.get('/invoices').done(self.deferredRender.bind(self));

      return self;
    },

    'deferredRender': function (data) {

      var self = this;

      if (self.destroyed || !data.length) {

        return;
      }

      _super.render.apply(self, arguments);

      self.$el.removeClass('hidden');
      self.invoices.add(data, {
        'merge': true
      });

      _.each(self.invoices.models, self.appendInvoiceOption.bind(self));
      self.$('.invoices option').last().attr('selected', true);

      self.updateDownloadLink();
    },

    'appendInvoiceOption': function (invoiceModel) {

      var self = this;
      var startsAt = self.getUserFormattedDate(invoiceModel.attributes.starts);
      var expiresAt = self.getUserFormattedDate(invoiceModel.attributes.expires_at);
      var $option = $('<option value="' + invoiceModel.attributes.number + '">' + startsAt + ' - ' + expiresAt + '</option>');

      self.$('select.invoices').append($option);
    },

    'updateDownloadLink': function (ev) {

      var self = this;
      var invoiceNumber = ev ? $(ev.currentTarget).val() : self.$('.invoices option:selected')[0].value;
      var invoiceModel =  self.invoices.get(invoiceNumber);
      var downloadButton = self.$('.button.download-invoice');

      invoiceModel && downloadButton.attr('href', invoiceModel.attributes.link);
      invoiceModel && downloadButton.attr('download', self.generateFileName(invoiceModel));
    },

    'generateFileName': function (invoiceModel) {

      var self = this;
      var startsAt = self.getUserFormattedDate(invoiceModel.attributes.starts).replace(/\D+/g, '_');
      var expiresAt = self.getUserFormattedDate(invoiceModel.attributes.expires_at).replace(/\D+/g, '_');

      return 'wunderlist_invoice_' + startsAt + '-' + expiresAt;
    },

    'getUserFormattedDate': function (date) {

      var dateSetting = runtime.settings.attributes.date_format;
      return moment(date, 'MM-DD-YYYY').format(dateSetting);
    }

  });
});
define('views/Settings/RestoreDataViewController',[

  'application/runtime',
  'helpers/PlatformHeaders',
  'collections/ListCollection',
  'wunderbits/WBViewController',
  'wunderbits/WBFileUploader'

], function (runtime, PlatformHeaders, ListCollection, WBViewController, WBFileUploader) {

  

  var _ = runtime._;

  return WBViewController.extend({

    'implements': {

      'click:restore': '_onClickRestore',
      'change:input': '_onFileSelected'
    },

    '_onClickRestore': function (ev) {

      var self = this;

      ev && ev.preventDefault();
      ev && ev.stopPropagation();

      self.view.input && self.view.input.click();
    },

    '_onFileSelected': function (ev) {

      var self = this;
      ev.target.files && ev.target.files.length && self.uploadBackupFile(ev.target.files[0]);
    },

    'setupFileUploader': function () {

      var self = this;
      var headers = {
        'Authorization': 'Bearer ' + runtime.user.attributes.token
      };

      self.fileUploader = new WBFileUploader({
        'acceptedFileTypes': ['application/json'],
        'uploadAction': 'POST',
        'fileKey': 'file',
        'uploadURL': runtime.config['import'].host + '/import',
        'customHeaders': headers,
        'extraParams': {
          'email': runtime.user.attributes.email,
          'lastListPosition': self.lastListPosition()
        },
        'onProgress': function () {
          self.view.startSpinner();
        },
        'onUploadComplete': function () {
          runtime.trigger('analytics:Importer:addedBackupData');
          self.view.stopSpinner();
          self.view.updateText();
        },
        'onError': function () {
          runtime.trigger('analytics:Importer:backupDataFailed');
          self.view.showError();
        }
      });
    },

    'lastListPosition': function () {

      var listCollection = new ListCollection('/lists/all');
      var lastModel = _.last(listCollection.models);
      return Math.floor(lastModel.attributes.position) + 1;
    },

    'uploadBackupFile': function (file) {

      var self = this;
      self.fileUploader = null;
      self.setupFileUploader();
      self.fileUploader.upload(file);
    }
  });
});
define('templates/settings/restoreData',['vendor/handlebars'], function(H) {
var name = 'settings/restoreData';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<a class=\"button full restore-data\" role=\"button\" data-key-aria-label=\"settings_account_restore_backup\" tabindex=\"0\"><span class=\"dark\"/> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_restore_backup", options) : helperMissing.call(depth0, "localized", "settings_account_restore_backup", options)))
    + " </a> <input type=\"file\" class=\"hidden\" accept=\"application/json\" >";
  return buffer;
  });
});
define('views/Settings/RestoreDataView',[

  'application/runtime',

  'wunderbits/WBViewPresenter',

  'views/Settings/RestoreDataViewController',

  'template!settings/restoreData',

], function (
  runtime,
  WBViewPresenter,
  RestoreDataViewController,
  restoreDataTemplate,
  undefined
) {

  

  var _ = runtime._;
  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'template': restoreDataTemplate,

    'implements': [RestoreDataViewController],

    'emits': {
      'click .restore-data': 'click:restore',
      'change input': 'change:input'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);
    },

    'render': function () {

      var self = this;
      _super.render.apply(self, arguments);

      self.input = self.$('input');

      return self;
    },

    'startSpinner': function () {

      var self = this;
      self.$('.restore-data').addClass('disabled');
      self.$('.restore-data').addClass('loading');
    },

    'stopSpinner': function () {

      var self = this;
      self.$('.restore-data').removeClass('loading');
    },

    'showError': function () {

      var self = this;
      self.trigger('processing:error');
    },

    'updateText': function () {

      var self = this;
      self.trigger('processing:backupData');
      _.delay(function () {
        self.$('.restore-data').removeClass('disabled');
        // implement a better way to do this
        self.trigger('processing:complete');
      }, 30000);
    }
  });
});
define('views/Settings/Controllers/SettingsAccountViewController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',
  'wunderbits/WBValidationHelper',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  Keycodes,
  ValidationHelper,
  WBModalViewController,
  undefined
) {

  

  var $ = runtime.$;

  var _cancelMap = {

    'cancel-password': {
      'confirm': '#save-password',
      'refocus': '.old-password',
    },

    'cancel-email': {
      'confirm': '#save-email',
      'refocus': '#edit-email'
    },

    'cancel-delete-account': {
      'confirm': '#delete-account',
      'refocus': '.delete-password'
    },

    'save-email': {
      'refocus': '#edit-email'
    },

    'save-password': {
      'refocus': '.old-password',
    },

    'delete-account': {
      'refocus': '.delete-password'
    }
  };

  return WBModalViewController.extend({

    'implements': {

      // Show account edit properties
      'click:showDelete': 'onShowDeleteAccount',
      'click:cancelDeleteAccount': 'onCancelDeleteAccount',

      'click:changeEmail': 'onChangeEmail',
      'click:cancelEmail': 'onCancelChangeEmail',
      'click:saveEmail': 'onSaveEmail',

      'click:changePassword': 'onChangePassword',
      'click:cancelPassword': 'onCancelPassword',
      'click:savePassword': 'onSavePassword',
      'click:deleteAccount': 'onDeleteAccount',

      // pro stuff
      'click:goPro': 'closeAllEdits',
      'toggle:confirmation': 'onToggleConfirmation',
      'click:confirmCancel': 'cancelProAutoRenew',

      'blur:editFullName': 'onSaveFullName',

      'keydown': 'onKeydown',

      'keydown:cancelEdit': 'onCancelEditKeydown',
      'keydown:confirmEdit': 'onConfirmEditKeydown',

      'keyup:confirmPassword': 'checkForValidEmailOnPasswordConfirm',
      'keyup:delete': 'onValidateDeleteAccount',

      'keyup:password': 'onCheckPasswordMatch',

      'force:window:resize': 'triggerWindowResize',
      'check:email': 'checkForValidEmail'
    },

    'onKeydown': function (e) {

      var self = this;
      var $el = $(e.currentTarget);
      var elemId = $el.attr('id');
      var eventMap = {

        'edit-full-name': 'FullName',
        'edit-email': 'Email',
        'edit-email-pw-confirm': 'Email',
        'confirm-password': 'Password'
      };

      // handle keys ent/ret = save, esc = cancel
      if (e.which === Keycodes.enter) {
        self['onSave' + eventMap[elemId]]();
      }
      else if (e.which === Keycodes.esc) {
        self.view.resetEditInputs(e);
      }

      if (elemId === 'edit-email') {
        self.checkForValidEmail(undefined, $el.val());
      }
    },

    'onCancelEditKeydown': function (ev) {

      var self = this;
      var data = self.getCancelSaveData(ev);

      if (data && ev.which === Keycodes.tab && !ev.shiftKey && self.view.$(data.confirm).attr('disabled')) {
        self.refocusAndStop(data.refocus, ev);
      }
    },

    'onConfirmEditKeydown': function (ev) {

      var self = this;
      var data = self.getCancelSaveData(ev);

      if (ev.which === Keycodes.tab && !ev.shiftKey) {
        self.refocusAndStop(data.refocus, ev);
      }
    },

    'getCancelSaveData': function (ev) {

      var data;
      var $el = $(ev.target);
      var id =  $el.attr('id');
      data = _cancelMap[id];

      return data;
    },

    'refocusAndStop': function (selector, ev) {

      var self = this;
      self.view.$(selector).focus();
      self.stopEventCold(ev);
    },

    'onShowDeleteAccount': function () {

      this.view.showDeleteAccount();
    },

    'onCancelDeleteAccount': function () {

      this.view.hideDeleteAccount();
    },

    'triggerWindowResize': function () {

      $(window).trigger('resize');
    },

    'onChangeEmail': function () {

      this.view.showChangeEmail();
    },

    'onCancelChangeEmail': function () {

      this.view.hideChangeEmail();
    },

    'onCheckPasswordMatch': function () {

      var view = this.view;
      var newPass = view.$('.new-password').val();
      var newPassConfirm = view.$('.confirm-password').val();
      var isValid = newPass === newPassConfirm && newPass !== '' && newPassConfirm !== '';

      view.toggleSavePasswordButton(isValid);
    },

    'onToggleConfirmation': function () {

      this.view.toggleConfirmation();
    },

    'checkForValidEmailOnPasswordConfirm': function () {

      var self = this;
      var email = self.view.$('#edit-email').val();
      self.checkForValidEmail(undefined, email);
    },

    'checkForValidEmail': function (ev, email) {

      var self = this;

      email = email ? email : ev && ev.target ? $(ev.target).val() : null;
      self.view.updateEmailInputs(ValidationHelper.isValidEmail(email));
    },

    'onSaveEmail': function () {

      var view = this.view;
      var data  = {
        'email': view.$('#edit-email').val(),
        'auth': view.$('.password-confirm input').val()
      };

      runtime.user.changeEmail(data, {
        'success': view.hideChangeEmail.bind(view),
        'error': view.renderEmailError.bind(view)
      });
    },

    'onSaveFullName': function () {

      var view = this.view;
      var $elem = view.$el.find('#edit-full-name');
      var newName = $elem.val();
      var oldName = runtime.user.attributes.name;

      if ((newName !== oldName) && newName.length) {
        runtime.user.changeName({'name': newName});
      }
      else {
        $elem.val(oldName);
      }
    },

    'onChangePassword': function () {

      this.view.showChangePassword();
    },

    'onCancelPassword': function () {

      this.view.hideChangePassword();
    },

    'cancelProAutoRenew': function () {

      var self = this;
      var view = self.view;
      var $btn = view.$('.confirm-cancel');
      $btn.addClass('loading');

      var callback = function () {

        self.bindOnceTo(runtime, 'sync:end', function () {

          $btn.removeClass('loading');
          view.deferredRender();
        });
      };

      var errorCallback = function () {

        $btn.removeClass('loading');
        view.$('.manage-account-error').removeClass('hidden');
      };

      runtime.user.cancelProAutoRenew(callback, errorCallback);
    },

    'onSavePassword': function () {

      var view = this.view;
      if (view.$('#save-password').hasClass('disabled')) {
        return;
      }

      var data = {
        'auth': view.$('.show-password-buttons .old-password').val(),
        'password': view.$('.change-password-buttons .new-password').val(),
        'password_confirmation': view.$('.change-password-buttons .confirm-password').val()
      };

      runtime.user.changePassword(data, {
        success: function () {

          view.hidePasswordError();
          view.hideChangePassword();
        },
        'error': view.showPasswordError
      });
    },

    'onDeleteAccount': function () {

      var view = this.view;
      var data = {};
      data.password = view.$('.delete-password').val();

      view.$('#delete-account').addClass('loading');

      runtime.user.deleteUser(data, {
        'error': view.renderDeleteAccountError
      });
    },

    'onValidateDeleteAccount': function () {

      var view = this.view;
      var password = view.$('.delete-password').val();
      var confirmPhraseVal = view.$('.delete-confirm').val();
      var confirmPhrase = runtime.language.getText('settings_account_delete_confirmation_text');

      var isValid = password !== '' && confirmPhraseVal.toLowerCase() === confirmPhrase.toLowerCase();
      view.toggleDeleteButton(isValid);
    },

    'closeAllEdits': function () {

      this.view.closeAllEdits();
    },

    'stopEventCold': function (ev) {

      ev.preventDefault();
      ev.stopPropagation();
    }
  });
});
define('views/Settings/Controllers/SettingsAccountViewOAuthController',[

  'application/runtime',

  'helpers/Auth/facebook',
  'helpers/Auth/google',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  Facebook,
  Google,
  WBModalViewController,
  undefined
) {

  

  return WBModalViewController.extend({

    'implements': {
      'click:facebook:disconnect': 'onDisconnectFacebook',
      'click:facebook:connect': 'onConnectFacebook',

      'click:google:connect': 'onConnectGoogle',
      'click:google:disconnect': 'onDisconnectGoogle'
    },

    'onConnectFacebook': function () {

      var view = this.view;
      var createService = true;

      runtime.trigger('analytics:Preferences:connectFacebook');
      view.toggleConnectButtonStatus('facebook', 'connecting');

      // send user off to facebook land and call back to specific URI
      Facebook.getFacebookOAuthToken('connect/facebook/', createService)
        .done(function () {
          // trigger sync so we get the updated services
          runtime.trigger('sync:start');
        })
        .fail(function () {
          view.toggleConnectButtonStatus('facebook');
        });
    },

    'onDisconnectFacebook': function () {

      var view = this.view;

      view.toggleConnectButtonStatus('facebook');
      view.facebookService && view.facebookService.destroy();
      view.updateServiceButtons();

      runtime.trigger('analytics:Preferences:disconnectFacebook');
    },

    'onConnectGoogle': function () {

      var self = this;
      var view = self.view;
      var createService = true;

      runtime.trigger('analytics:Preferences:connectGoogle');
      view.toggleConnectButtonStatus('google', 'connecting');

      Google.connectWithGoogle('googleOAuthConnect', createService)
        .done(function () {

          // trigger sync so we get the updated services
          runtime.trigger('sync:start');
        })
        .fail(function () {
          view.toggleConnectButtonStatus('google');
        });
    },

    'onDisconnectGoogle': function () {

      var view = this.view;

      view.toggleConnectButtonStatus('google');
      view.googleService && view.googleService.destroy();
      view.updateServiceButtons();

      runtime.trigger('analytics:Preferences:disconnectGoogle');
    }
  });
});
define('backend/export',[

  'application/runtime',

  'wunderbits/helpers/strings',

  'wunderbits/WBSingleton'

], function (runtime, StringsHelper, WBSingleton) {

  

  var $ = runtime.$;
  var _ = runtime._;
  var global = runtime.global;
  var io = runtime.io;

  var endpoints = [
    'lists',
    'tasks',
    'reminders',
  ];

  return WBSingleton.extend({

    'fetchAllTheData': function () {

      var self = this;
      var deferred = new $.Deferred();
      var requests = [];

      var responses = {};
      function handler (data) {

        responses[data.url] = data.response;
      }

      for (var i=0, len = endpoints.length; i < len; i++) {

        requests[i] = self.makeRequest(endpoints[i]);
        requests[i].done(handler).fail(deferred.reject);
      }

      $.when.apply($, requests).done(function () {

        deferred.resolve(responses);
      });

      return deferred.promise();
    },

    'makeRequest': function (url) {

      var self = this;

      var deferred = new $.Deferred();

      io.get('/me/' + url).done(function (response) {

        response = self.trimNulls(response);

        if (url === 'lists') {

          self.onlyOwnedLists(response);
          response = self.ownedLists;
        }

        if (url === 'tasks') {

          $.when(self.ownedListDeferred).then(function () {

            response = self.onlyRelevantTasks(response);
          });
        }

        deferred.resolve({
          'url': url,
          'response': response
        });
      }).fail(function () {

        deferred.reject();
      });

      return deferred.promise();
    },

    'forceDownload': function (data) {

      var self = this;

      // need blob support
      if (!self.supportsBlob()) {
        return;
      }

      var link = self.getBlobLink(data);
      var click = document.createEvent("Event");
      click.initEvent("click", true, true);
      runtime.trigger('analytics:Exporter:createdBackup');

      link.dispatchEvent(click);
    },

    'getBlobLink': function (data) {

      var self = this;

      // need blob support
      if (!self.supportsBlob()) {
        return;
      }

      var jsonString = JSON.stringify(data);
      var blob = new global.Blob([jsonString], {'type': 'application/json'});
      var url = (window.URL || window.webkitURL).createObjectURL(blob);
      var link = window.document.createElement('a');
      link.href = url;

      var dateString = StringsHelper.dateString();
      link.download = 'wunderlist-' + dateString + '.json';
      return link;
    },

    'supportsBlob': function () {

      return (window.URL || !window.webkitURL) && window.Blob;
    },

    'onlyOwnedLists': function (lists) {

      var self = this;
      self.ownedListDeferred = new $.Deferred();
      self.ownedLists = _.where(lists, {'owner_id': runtime.user.id});
      self.ownedListDeferred.resolve();
    },

    'onlyRelevantTasks': function (tasks) {

      var self = this;
      var relevantTasks, list;
      var keepers = [];

      for(var i=0,len=self.ownedLists.length; i<len; i++) {

        list = self.ownedLists[i];
        relevantTasks = _.where(tasks, {'list_id': list.id});
        relevantTasks.length && keepers.push(_.union(relevantTasks));
      }

      // inbox isn't a real list, have to get them together
      var inboxTasks = _.where(tasks, {'list_id': 'inbox'});
      return _.flatten(_.union(inboxTasks, keepers));
    },

    'trimNulls': function (obj) {

      var self = this;
      for (var key in obj) {
        if (_.isObject(obj[key])) {
          self.trimNulls(obj[key]);
        }
        else {
          obj[key] === null && delete obj[key];
        }
      }
      return obj;
    }
  });
});
define('views/Settings/Controllers/SettingsAccountViewExportController',[

  'application/runtime',

  'backend/export',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  Exporter,
  WBModalViewController,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;

  return WBModalViewController.extend({

    'implements': {
      'click:export': 'export'
    },


    // TODO BREAK THIS UP
    'export': function () {

      var self = this;
      var view = self.view;

      if (self.exporting || runtime.env.isIE()) {
        return;
      }

      self.exporting = true;

      self.exportLinkClickBind && self.unbindFrom(self.exportLinkClickBind);
      self.exportLinkContextmenuBind && self.unbindFrom(self.exportLinkContextmenuBind);

      var $export = view.$('.export');
      var $startButton = view.$('.export-start');
      var $downloadButton = view.$('.export-download');

      $startButton.addClass('disabled').text(runtime.language.getText('settings_account_fetching_data'));
      $downloadButton.remove();

      Exporter.fetchAllTheData().done(function (data) {

        runtime.trigger('analytics:Backup:ExportGenerated');

        var $link;
        $startButton.addClass('hidden');

        if (runtime.env.isChrome() || runtime.env.isFirefox()) {

          $link = $(Exporter.getBlobLink(data)).text(runtime.language.getText('settings_account_click_to_download_backup'));
          self.exportLinkClickBind = self.bindTo($link, 'click', function() {

            $link.addClass('hidden');
            $startButton.removeClass('hidden');
            runtime.trigger('analytics:Backup:ExportDownloaded', 'click');
          });
        }
        else {

          var json = JSON.stringify(data);
          var backupUrl = 'data:application/json,' + encodeURIComponent(json);
          $link = $('<a/>').attr('href', backupUrl).text(runtime.language.getText('settings_account_right_click_and_save_as'));

          self.exportLinkClickBind = self.bindTo($link, 'click', function (e) {
            e.preventDefault();
            return false;
          });
          self.exportLinkContextmenuBind = self.bindTo($link, 'contextmenu', function () {

            var $this = $(this);
            _.delay(function () {

              $this.addClass('hidden');
              $startButton.removeClass('hidden');
            }, 1000);
            runtime.trigger('analytics:Backup:ExportDownloaded', 'rightClick');
          });
        }

        $export.append($link);
        $link.addClass('button full blue export-download').removeClass('hidden');
        $startButton.removeClass('disabled').text('Create Backup');
        self.exporting = false;
      });
    }
  });
});
define('templates/settings/settingsAccount',['vendor/handlebars'], function(H) {
var name = 'settings/settingsAccount';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType="function";

function program1(depth0,data) {
  
  
  return " <span class=\"icon pro\"></span> ";
  }

function program3(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <div class=\"separator cols-no-indent account-backup-settings\" data-key-aria-label=\"settings_account_backup_description\" tabindex=\"0\"> <!-- Export --> <div class=\"cols\"> <div class=\"col-32 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_account_backup", options) : helperMissing.call(depth0, "localized", "settings_account_account_backup", options)))
    + "</div> <div class=\"col-35 export\"> <a class=\"button full export-start\" role=\"button\" data-key-aria-label=\"settings_account_create_backup\" tabindex=\"0\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_create_backup", options) : helperMissing.call(depth0, "localized", "settings_account_create_backup", options)))
    + " </a> </div> <div class=\"col-33 import\"> </div> </div> <div class=\"cols back-up-error hidden\"> <div class=\"col-32\"></div> <div class=\"col-68\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "api_error_service_down", options) : helperMissing.call(depth0, "localized", "api_error_service_down", options)))
    + "</div> </div> <div class=\"cols backup-feedback hidden\"> <div class=\"col-32\"></div> <div class=\"col-68\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_data_is_being_processed", options) : helperMissing.call(depth0, "localized", "settings_account_data_is_being_processed", options)))
    + "</div> </div> <div class=\"cols\"> <div class=\"col-32 text-right\"></div> <div class=\"col-68\"> <small> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_backup_description", options) : helperMissing.call(depth0, "localized", "settings_account_backup_description", options)))
    + " </small> </div> </div> </div> ";
  return buffer;
  }

function program5(depth0,data) {
  
  var buffer = "", stack1, stack2, options;
  buffer += " <div class=\"separator cols-no-indent pro-account-settings\"> <div class=\"cols pro-account-status\"> ";
  stack1 = helpers['if'].call(depth0, depth0.adyenSubscription, {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </div> <div class=\"cancelation-options closed\"> <div class=\"cols\"> <div class=\"col-32\"></div> <div class=\"col-68\"> <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "setting_heading_cancel_subscription", options) : helperMissing.call(depth0, "localized", "setting_heading_cancel_subscription", options)))
    + "</h3> <p class=\"small\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "setting_description_cancel_subscription", options) : helperMissing.call(depth0, "localized", "setting_description_cancel_subscription", options)))
    + "</p> <p class=\"manage-account-error error-message hidden\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_manage_subscription_error", options) : helperMissing.call(depth0, "localized", "settings_manage_subscription_error", options)))
    + " </p> </div> </div> <div class=\"cols small\"> <div class=\"col-32\"></div> <div class=\"col-40\"> <div class=\"cols\"> <div class=\"col-50\"> <button class=\"return-cancel full\" data-key-aria-label=\"button_no\" tabindex=\"0\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_no", options) : helperMissing.call(depth0, "localized", "button_no", options)))
    + "</button> </div> <div class=\"col-50\"> <button class=\"confirm-cancel full red\" data-key-aria-label=\"button_yes\" tabindex=\"0\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_yes", options) : helperMissing.call(depth0, "localized", "button_yes", options)))
    + "<span/></button> </div> </div> </div> <div class=\"col-28\"></div> </div> </div> ";
  stack2 = helpers['if'].call(depth0, depth0.isGroupProduct, {hash:{},inverse:self.noop,fn:self.program(19, program19, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " ";
  stack2 = helpers.unless.call(depth0, depth0.isGroupProduct, {hash:{},inverse:self.noop,fn:self.program(34, program34, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </div> ";
  return buffer;
  }
function program6(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers.unless.call(depth0, depth0.isCanceled, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.isGroupProduct, {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  return buffer;
  }
function program7(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers.unless.call(depth0, depth0.isGroupProduct, {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  return buffer;
  }
function program8(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers.unless.call(depth0, depth0.isTelekomPromo, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  return buffer;
  }
function program9(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <div class=\"col-32 text-right pro-label\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_label_pro_account", options) : helperMissing.call(depth0, "localized", "settings_label_pro_account", options)))
    + " </div> <div class=\"col-40\"> <button id=\"cancel-pro\" class=\"full\" data-key-aria-label=\"setting_label_cancel_subscription\" tabindex=\"0\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "setting_label_cancel_subscription", options) : helperMissing.call(depth0, "localized", "setting_label_cancel_subscription", options)))
    + " </button> </div> <div class=\"col-28\"></div> ";
  return buffer;
  }

function program11(depth0,data) {
  
  var buffer = "", stack1, stack2, options;
  buffer += " <div class=\"col-32 text-right pro-label\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_label_pro_account", options) : helperMissing.call(depth0, "localized", "settings_label_pro_account", options)))
    + " </div> ";
  stack2 = helpers['if'].call(depth0, depth0.isAdmin, {hash:{},inverse:self.noop,fn:self.program(12, program12, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " ";
  stack2 = helpers.unless.call(depth0, depth0.isAdmin, {hash:{},inverse:self.noop,fn:self.program(14, program14, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " ";
  return buffer;
  }
function program12(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <div class=\"col-40\"> <small> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_label_purchased_from_$", "6Wunderkinder", options) : helperMissing.call(depth0, "localized", "settings_label_purchased_from_$", "6Wunderkinder", options)))
    + " </small> </div> <div class=\"col-28\"></div> ";
  return buffer;
  }

function program14(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <div class=\"col-68\"> <small> ";
  stack1 = helpers['if'].call(depth0, depth0.isTelekomPromo, {hash:{},inverse:self.program(17, program17, data),fn:self.program(15, program15, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </small> </div> ";
  return buffer;
  }
function program15(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_label_purchased_from_$", "Telekom", options) : helperMissing.call(depth0, "localized", "settings_label_purchased_from_$", "Telekom", options)))
    + " ";
  return buffer;
  }

function program17(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_label_purchased_from_$_by_$", "6Wunderkinder", depth0.adminName, options) : helperMissing.call(depth0, "localized", "settings_label_purchased_from_$_by_$", "6Wunderkinder", depth0.adminName, options)))
    + " ";
  return buffer;
  }

function program19(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.isAdmin, {hash:{},inverse:self.noop,fn:self.program(20, program20, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.isMember, {hash:{},inverse:self.noop,fn:self.program(29, program29, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  return buffer;
  }
function program20(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <div class=\"cols\"> <div class=\"col-32 text-right\"/> <div class=\"col-68\"> ";
  stack1 = helpers['if'].call(depth0, depth0.billOn, {hash:{},inverse:self.program(24, program24, data),fn:self.program(21, program21, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </div> </div> ";
  return buffer;
  }
function program21(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers.unless.call(depth0, depth0.isTelekomPromo, {hash:{},inverse:self.noop,fn:self.program(22, program22, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  return buffer;
  }
function program22(depth0,data) {
  
  var buffer = "", stack1, stack2, options;
  buffer += " <p class=\"pro-account-billing\"> <small> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "setting_label_next_billing_date", options) : helperMissing.call(depth0, "localized", "setting_label_next_billing_date", options)))
    + " ";
  if (stack2 = helpers.billOn) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.billOn; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + " (";
  if (stack2 = helpers.subscriptionType) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.subscriptionType; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + ") </small> </p> ";
  return buffer;
  }

function program24(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <p class=\"pro-account-expire\"> <small> ";
  stack1 = helpers['if'].call(depth0, depth0.expiresRelative, {hash:{},inverse:self.program(27, program27, data),fn:self.program(25, program25, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </small> </p> ";
  return buffer;
  }
function program25(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_payment_info_expires_$_relative", depth0.expiresRelative, options) : helperMissing.call(depth0, "localized", "settings_payment_info_expires_$_relative", depth0.expiresRelative, options)))
    + " ";
  return buffer;
  }

function program27(depth0,data) {
  
  var buffer = "", stack1, stack2, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_payment_info_expires_$_absolute", depth0.expiresIn, options) : helperMissing.call(depth0, "localized", "settings_payment_info_expires_$_absolute", depth0.expiresIn, options)))
    + " ";
  if (stack2 = helpers.expiresOn) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.expiresOn; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + " ";
  return buffer;
  }

function program29(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <div class=\"cols\"> <div class=\"col-32 text-right\"/> <div class=\"col-68\"> ";
  stack1 = helpers['if'].call(depth0, depth0.billOn, {hash:{},inverse:self.program(32, program32, data),fn:self.program(30, program30, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </div> </div> ";
  return buffer;
  }
function program30(depth0,data) {
  
  
  return " ";
  }

function program32(depth0,data) {
  
  
  return " <p class=\"pro-account-expire\"> <small/> </p> ";
  }

function program34(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <div class=\"cols ";
  stack1 = helpers.unless.call(depth0, depth0.adyen_subscription, {hash:{},inverse:self.noop,fn:self.program(35, program35, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"> <div class=\"col-32 text-right\"> ";
  stack1 = helpers.unless.call(depth0, depth0.adyenSubscription, {hash:{},inverse:self.noop,fn:self.program(37, program37, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.isCanceled, {hash:{},inverse:self.noop,fn:self.program(37, program37, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </div> <div class=\"col-68\"> <p class=\"pro-account-platform\"> <small> ";
  stack1 = helpers['if'].call(depth0, depth0.isTelekomPromo, {hash:{},inverse:self.program(39, program39, data),fn:self.program(15, program15, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </small> </p> ";
  stack1 = helpers['if'].call(depth0, depth0.billOn, {hash:{},inverse:self.program(24, program24, data),fn:self.program(22, program22, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.isManageEnabled, {hash:{},inverse:self.noop,fn:self.program(41, program41, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </div> </div> ";
  return buffer;
  }
function program35(depth0,data) {
  
  
  return "top";
  }

function program37(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_label_pro_account", options) : helperMissing.call(depth0, "localized", "settings_label_pro_account", options)))
    + " ";
  return buffer;
  }

function program39(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_label_purchased_from_$", depth0.store, options) : helperMissing.call(depth0, "localized", "settings_label_purchased_from_$", depth0.store, options)))
    + " ";
  return buffer;
  }

function program41(depth0,data) {
  
  var buffer = "", stack1, stack2, options;
  buffer += " <p class=\"pro-account-manage\" data-key-aria-label=\"settings_manage_subscription_button\" tabindex=\"0\"> <small> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_manage_subscription_button", options) : helperMissing.call(depth0, "localized", "settings_manage_subscription_button", options)))
    + ": <a class=\"manage\" href=\""
    + escapeExpression(((stack1 = ((stack1 = ((stack1 = depth0.user),stack1 == null || stack1 === false ? stack1 : stack1.product)),stack1 == null || stack1 === false ? stack1 : stack1.manage_link)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" target=\"_blank\" data-key-aria-label=\"store\" tabindex=\"0\">";
  if (stack2 = helpers.store) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.store; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "</a> </small> </p> ";
  return buffer;
  }

function program43(depth0,data) {
  
  
  return "hidden";
  }

  buffer += "<div class=\"settings\"> <!-- Picture --> <div class=\"separator\"> <div class=\"cols top\"> <div class=\"col-32\"> <div class=\"avatar-frame\"> <div class=\"avatar large hover choose\"> ";
  stack2 = helpers['if'].call(depth0, ((stack1 = depth0.user),stack1 == null || stack1 === false ? stack1 : stack1.isPro), {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " <span class=\"icon edit-pen\"></span> <img /> <div class=\"progress-bar-wrapper hidden\"><span></span></div> <div class=\"drop-message\"><span>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_drop_image", options) : helperMissing.call(depth0, "localized", "settings_account_drop_image", options)))
    + "</span></div> <div class=\"message error hidden\"><span>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "file_uploaded_failed", options) : helperMissing.call(depth0, "localized", "file_uploaded_failed", options)))
    + "</span></div> <span class=\"spinner\"></span> </div> <div class=\"avatar-upload\"> <div class=\"drop-zone\"></div> </div> </div> </div> <div class=\"col-68\"> <div class=\"pro-status-wrapper\"></div> </div> </div> </div> <div class=\"separator cols-no-indent basic-account-settings\"> <!-- Full Name --> <div class=\"cols\"> <div class=\"col-32 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_name", options) : helperMissing.call(depth0, "localized", "label_name", options)))
    + "</div> <div class=\"col-68\"> <input type=\"text\" id=\"edit-full-name\" data-key-aria-label=\"label_name\" data-key-placeholder=\"label_name\" value=\""
    + escapeExpression(((stack1 = ((stack1 = depth0.user),stack1 == null || stack1 === false ? stack1 : stack1.name)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" initial-value=\"";
  if (stack2 = helpers.name) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.name; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" tabindex=\"0\"/> </div> </div> <!-- Email --> <div class=\"cols\"> <div class=\"col-32 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_email", options) : helperMissing.call(depth0, "localized", "label_email", options)))
    + "</div> <div class=\"col-40\"> <input type=\"text\" id=\"edit-email\" data-key-aria-label=\"label_email\" data-key-placeholder=\"label_email\" value=\""
    + escapeExpression(((stack1 = ((stack1 = depth0.user),stack1 == null || stack1 === false ? stack1 : stack1.email)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" initial-value=\"";
  if (stack2 = helpers.email) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.email; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" disabled tabindex=\"0\"/> </div> <div class=\"col-28\"> <button id=\"change-email\" class=\"full\" data-key-aria-label=\"settings_account_change_email\" tabindex=\"0\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_change_email", options) : helperMissing.call(depth0, "localized", "settings_account_change_email", options)))
    + " </button> </div> </div> <!-- Password for email confirm --> <div class=\"cols password-confirm\"> <div class=\"col-32 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_password", options) : helperMissing.call(depth0, "localized", "label_password", options)))
    + "</div> <div class=\"col-40\"> <input type=\"password\" id=\"edit-email-pw-confirm\" data-key-aria-label=\"label_password\" disabled tabindex=\"0\"/> </div> <div class=\"col-28\"></div> </div> <!-- Change Email --> <div class=\"cols change-email-buttons\"> <div class=\"col-32 text-right\"></div> <div class=\"col-40\"> <div class=\"cols password-error error-message\"> <div class=\"col-100\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "api_error_incorrect_password", options) : helperMissing.call(depth0, "localized", "api_error_incorrect_password", options)))
    + "</div> </div> <div class=\"cols\"> <div class=\"col-50\"> <button class=\"full\" id=\"cancel-email\" data-key-aria-label=\"button_cancel\" tabindex=\"0\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_cancel", options) : helperMissing.call(depth0, "localized", "button_cancel", options)))
    + " </button> </div> <div class=\"col-50\"> <button class=\"full blue disabled\" id=\"save-email\" disabled data-key-aria-label=\"button_save\" tabindex=\"0\" > ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_save", options) : helperMissing.call(depth0, "localized", "button_save", options)))
    + " </button> </div> </div> </div> <div class=\"col-28\"></div> </div> <!-- Change Password --> <div class=\"cols show-password-buttons\"> <div class=\"col-32 text-right\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_password", options) : helperMissing.call(depth0, "localized", "label_password", options)))
    + " </div> <div class=\"col-40\"> <input type=\"password\" class=\"old-password\" data-key-placeholder=\"settings_account_current_password\" data-key-aria-label=\"settings_account_current_password\" tabindex=\"0\"/> <button id=\"change-password\" class=\"full\" data-key-aria-label=\"settings_account_change_password\" tabindex=\"0\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_change_password", options) : helperMissing.call(depth0, "localized", "settings_account_change_password", options)))
    + " </button> </div> <div class=\"col-28\"></div> </div> <div class=\"cols change-password-buttons\"> <div class=\"col-32\"/> <div class=\"col-40\"> <div class=\"cols\"> <div class=\"col-100\"> <input type=\"password\" class=\"new-password\" data-key-placeholder=\"settings_account_new_password\" data-key-aria-label=\"settings_account_new_password\" tabindex=\"0\"/> </div> </div> <div class=\"cols\"> <div class=\"col-100\"> <input id=\"confirm-password\" type=\"password\" class=\"confirm-password\" data-key-placeholder=\"settings_account_repeat_new_password\" data-key-aria-label=\"settings_account_repeat_new_password\" tabindex=\"0\"/> </div> </div> <div class=\"cols change-password-error error-message\"> <div class=\"col-100\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_change_password_error", options) : helperMissing.call(depth0, "localized", "settings_account_change_password_error", options)))
    + " </div> </div> <div class=\"cols\"> <div class=\"col-50\"> <button class=\"full\" id=\"cancel-password\" data-key-aria-label=\"button_cancel\" tabindex=\"0\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_cancel", options) : helperMissing.call(depth0, "localized", "button_cancel", options)))
    + " </button> </div> <div class=\"col-50\"> <button class=\"full blue\" id=\"save-password\" data-key-aria-label=\"button_save\" tabindex=\"0\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_save", options) : helperMissing.call(depth0, "localized", "button_save", options)))
    + " </button> </div> </div> </div> <div class=\"col-28\"></div> </div> </div> ";
  stack2 = helpers.unless.call(depth0, depth0.isIE, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " <!-- Pro Account Status --> ";
  stack2 = helpers['if'].call(depth0, ((stack1 = depth0.user),stack1 == null || stack1 === false ? stack1 : stack1.isPro), {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " <!-- google --> <div class=\"separator cols-no-indent google-connect-settings\"> <div class=\"cols google\"> <div class=\"col-32 text-right\">Google</div> <div class=\"col-40\"> <button class=\"full connect ";
  stack2 = helpers['if'].call(depth0, depth0.connectedToGoogle, {hash:{},inverse:self.noop,fn:self.program(43, program43, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\" role=\"button\" data-key-aria-label=\"button_connect\" tabindex=\"0\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_connect", options) : helperMissing.call(depth0, "localized", "button_connect", options)))
    + " </button> <button class=\"full disconnect ";
  stack2 = helpers.unless.call(depth0, depth0.connectedToGoogle, {hash:{},inverse:self.noop,fn:self.program(43, program43, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\" role=\"button\" data-key-aria-label=\"button_disconnect\" tabindex=\"0\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_disconnect", options) : helperMissing.call(depth0, "localized", "button_disconnect", options)))
    + " </button> </div> <div class=\"col-28\"></div> </div> </div> <!-- FACEBOOK --> <div class=\"separator cols-no-indent facebook-connect-settings\"> <div class=\"facebook\"> <div class=\"cols\"> <div class=\"col-32 text-right\">Facebook</div> <div class=\"col-40\"> <button class=\"full connect ";
  stack2 = helpers['if'].call(depth0, depth0.connectedToFacebook, {hash:{},inverse:self.noop,fn:self.program(43, program43, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\" role=\"button\" data-key-aria-label=\"button_connect_facebook\" tabindex=\"0\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_connect", options) : helperMissing.call(depth0, "localized", "button_connect", options)))
    + " </button> <button class=\"full disconnect ";
  stack2 = helpers.unless.call(depth0, depth0.connectedToFacebook, {hash:{},inverse:self.noop,fn:self.program(43, program43, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\" role=\"button\" data-key-aria-label=\"button_disconnect\" tabindex=\"0\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_disconnect", options) : helperMissing.call(depth0, "localized", "button_disconnect", options)))
    + " </button> </div> <div class=\"col-28\"></div> </div> <div class=\"cols\"> <div class=\"col-32\"></div> <div class=\"col-68\"> <span class=\"icon facebook-icon\"></span> <p><small>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_connect_facebook_account", options) : helperMissing.call(depth0, "localized", "settings_account_connect_facebook_account", options)))
    + "</small></p> </div> </div> </div> </div> <!-- Delete Account --> <div class=\"separator noline delete-form\" tabindex=\"0\"> <div class=\"cols delete-account-heading\"> <div class=\"col-20\"> <div class=\"icon attention\"></div> </div> <div class=\"col-80\"> <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_delete_account_confirm", options) : helperMissing.call(depth0, "localized", "settings_account_delete_account_confirm", options)))
    + "</h3> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_delete_account_confirm_text", options) : helperMissing.call(depth0, "localized", "settings_account_delete_account_confirm_text", options)))
    + "</p> </div> </div> <div class=\"cols delete-account-password\"> <div class=\"col-50 text-right\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_current_password", options) : helperMissing.call(depth0, "localized", "settings_account_current_password", options)))
    + " </div> <div class=\"col-50\"> <input type=\"password\" class=\"delete-password\" data-key-aria-label=\"settings_account_current_password\" tabindex=\"0\"/> </div> </div> <div class=\"cols delete-account-confirm\"> <div class=\"col-50 text-right\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_delete_confirmation", options) : helperMissing.call(depth0, "localized", "settings_account_delete_confirmation", options)))
    + " </div> <div class=\"col-50\"> <input type=\"text\" class=\"delete-confirm\" data-key-aria-label=\"settings_account_delete_confirmation\" tabindex=\"0\"/> </div> </div> <div class=\"cols delete-password-error error-message\"> <div class=\"col-100 text-right\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "api_error_incorrect_password", options) : helperMissing.call(depth0, "localized", "api_error_incorrect_password", options)))
    + " </div> </div> <div class=\"cols text-\"> <div class=\"col-50\"></div> <div class=\"col-50\"> <div class=\"cols\"> <div class=\"col-50\"> <button class=\"full\" id=\"cancel-delete-account\" data-key-aria-label=\"button_cancel\" tabindex=\"0\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_cancel", options) : helperMissing.call(depth0, "localized", "button_cancel", options)))
    + " </button> </div> <div class=\"col-50\"> <button class=\"full red disabled\" id=\"delete-account\" disabled data-key-aria-label=\"button_delete\" tabindex=\"0\"><span/> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_delete", options) : helperMissing.call(depth0, "localized", "button_delete", options)))
    + " </button> </div> </div> </div> </div> </div> <div class=\"separator center show-delete-wrapper\"> <a class=\"show-delete tabEnd\" role=\"button\" data-key-aria-label=\"settings_account_delete_account\" tabindex=\"0\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_account_delete_account", options) : helperMissing.call(depth0, "localized", "settings_account_delete_account", options)))
    + " </a> </div> </div>";
  return buffer;
  });
});
define('styles/settings/settingsAccount',[],function() { return {'name': 'settings/settingsAccount', 'styles': ".dialog .avatar-frame{width:120px;height:120px;-webkit-box-shadow:0 1px 6px rgba(0,0,0,0.35),0 0 0 1px rgba(0,0,0,0.05);box-shadow:0 1px 6px rgba(0,0,0,0.35),0 0 0 1px rgba(0,0,0,0.05);-webkit-border-radius:5px;border-radius:5px;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #fff), color-stop(1, #e9e9e9));background-image:-webkit-linear-gradient(top, #fff 0, #e9e9e9 100%);background-image:-moz-linear-gradient(top, #fff 0, #e9e9e9 100%);background-image:-o-linear-gradient(top, #fff 0, #e9e9e9 100%);background-image:-ms-linear-gradient(top, #fff 0, #e9e9e9 100%);background-image:linear-gradient(top, #fff 0, #e9e9e9 100%);padding:4px;} .dialog .avatar-frame.small{height:60px;width:60px} .dialog .avatar-frame .avatar .edit-pen{position:absolute;bottom:4px;right:4px;opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);z-index:100} .dialog .avatar-frame .avatar input{left:auto !important;right:0 !important} .dialog .avatar-frame .avatar:before{position:absolute;background:transparent;width:120px;height:120px} .dialog .avatar-frame .avatar.hover:hover:before{background:rgba(0,0,0,0.3)} .dialog .avatar-frame .avatar.hover:hover .edit-pen{position:absolute;bottom:4px;right:4px;opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);z-index:100} .dialog .avatar-frame .avatar.hover:hover:before{position:absolute;background:transparent;width:120px;height:120px;-webkit-box-shadow:inset 0 0 3px rgba(0,0,0,0.5);box-shadow:inset 0 0 3px rgba(0,0,0,0.5);-webkit-border-radius:0;border-radius:0} .dialog .avatar-frame .avatar.hover:hover.hover:hover:before{background:rgba(0,0,0,0.3)} .dialog .avatar-frame .avatar.hover:hover.hover:hover .edit-pen{opacity:1;-ms-filter:none;filter:none} .dialog .avatar-frame .icon.pro{position:absolute;z-index:100;top:-19px;right:-19px} .dialog .choose input{z-index:999} .dialog .page-buy{position:relative} .dialog .facebook p{margin-left:20px} .dialog .facebook .facebook-icon{float:left;margin-left:-4px} .dialog .delete .show-delete-wrapper{color:#959494;text-shadow:1px 1px 1px #f6f6f6;height:16px;} .dialog .delete .show-delete-wrapper:hover{cursor:pointer} .dialog .delete .show-delete-wrapper.invisible{visibility:visible;height:0;opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0)} .dialog .cancelation-options{display:none;overflow:hidden} .dialog .change-password-buttons,.dialog .change-email-buttons,.dialog .delete-form,.dialog .old-password,.dialog .password-confirm{display:none} " }; });
define('styles/_fileupload',[],function() { return {'name': '_fileupload', 'styles': ".progress-bar-wrapper{margin-left:12px;width:100px;height:11px;position:absolute;bottom:50px;-webkit-border-radius:20px;border-radius:20px;border:2px solid #fff;opacity:.8;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\";filter:alpha(opacity=80);} .progress-bar-wrapper span{height:7px !important;margin:2px;width:0%;position:absolute;-webkit-border-radius:20px;border-radius:20px;background-color:#fff;-webkit-transition:400ms width;-moz-transition:400ms width;-o-transition:400ms width;-ms-transition:400ms width;transition:400ms width} .drop-message{width:120px;height:120px;position:absolute;top:1px;left:0;background:rgba(0,0,0,0.5);display:none;} .drop-message span{text-align:center;display:block;margin-top:50px;color:#fff;opacity:1;-ms-filter:none;filter:none} .message{display:block} .choose.drop .drop-message{display:block} .choose.loading .spinner{-webkit-animation:rotate .8s linear infinite;-moz-animation:rotate .8s linear infinite;-webkit-animation:rotate .8s linear infinite;-moz-animation:rotate .8s linear infinite;-o-animation:rotate .8s linear infinite;-ms-animation:rotate .8s linear infinite;animation:rotate .8s linear infinite;display:block;position:absolute !important;left:50%;top:50%;margin-left:-10px;margin-top:-10px;width:19px !important;height:19px !important;background:url(\"images/loading.png\");opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50)} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){#wunderlist-base .avatar-upload.loading span{background:url(\"images/loading@2x.png\");-webkit-background-size:19px;-moz-background-size:19px;background-size:19px} }" }; });
define('views/Settings/SettingsAccountView',[

  'application/runtime',

  'vendor/moment',

  'helpers/BlobHelper',
  'helpers/PlatformHeaders',

  'views/Pro/SubscriptionView',
  'views/Pro/StatusView',
  'views/Settings/InvoiceDownloaderView',
  'views/Settings/RestoreDataView',

  'views/Settings/Controllers/SettingsAccountViewController',
  'views/Settings/Controllers/SettingsAccountViewOAuthController',
  'views/Settings/Controllers/SettingsAccountViewExportController',

  'views/Settings/SettingsSubview',

  'wunderbits/views/WBFileSelectorView',
  'wunderbits/WBFileUploader',
  'collections/ServiceCollection',

  'template!settings/settingsAccount',
  'style!settings/settingsAccount',
  'style!_fileupload'

], function (
  runtime,
  moment,
  BlobHelper, PlatformHeaders,
  ProSubscriptionView, ProStatusView, InvoiceDownloaderView, RestoreDataView,
  SettingsAccountViewController, SettingsAccountViewOAuthController,
  SettingsAccountViewExportController,
  SettingsSubview,
  WBFileSelectorView, WBFileUploader,
  ServiceCollection,
  accountTemplate,
  settingsAccountStyle,
  fileuploadStyle,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;
  var config = runtime.config;

  var _super = SettingsSubview.prototype;

  var knownErrors = {
    'validation_error.email_taken': 'api_error_account_already_exists',
    'access_denied.incorrect_credentials': 'api_error_incorrect_password',
    500: 'api_error_unknown'
  };

  var platforms = {
    'echo': '6Wunderkinder',
    'mac_app_store': 'Mac App Store',
    'google_play': 'Google Play',
    'ios_app_store':'iOS App Store',
    'adyen': '6Wunderkinder',
    'invite_your_friends': '6Wunderkinder',
    '6wunderkinder': '6Wunderkinder'
  };

  return SettingsSubview.extend({

    'template': accountTemplate,

    'styles': [
      settingsAccountStyle,
      fileuploadStyle
    ],

    'className': 'content-inner',

    'implements': [
      SettingsAccountViewController,
      SettingsAccountViewOAuthController,
      SettingsAccountViewExportController
    ],

    'emits': {

      // SettingsAccountViewOAuthController
      'click .facebook .disconnect': 'click:facebook:disconnect',
      'click .facebook .connect': 'click:facebook:connect',
      'click .google .connect': 'click:google:connect',
      'click .google .disconnect': 'click:google:disconnect',

      // Show account edit properties
      'click .show-delete': 'click:showDelete',

      'click #change-email': 'click:changeEmail',
      'click #cancel-email': 'click:cancelEmail',
      'click #save-email': 'click:saveEmail',

      'click #change-password': 'click:changePassword',
      'click #cancel-password': 'click:cancelPassword',
      'click #save-password': 'click:savePassword',
      'click #cancel-delete-account': 'click:cancelDeleteAccount',
      'click #delete-account': 'click:deleteAccount',

      // pro stuff
      'click .go-pro': 'click:goPro',
      'click #cancel-pro': 'toggle:confirmation',
      'click .return-cancel': 'toggle:confirmation',
      'click .confirm-cancel': 'click:confirmCancel',

      // Edit account properties
      'blur #edit-full-name': 'blur:editFullName',

      'keydown #edit-full-name': 'keydown',
      'keydown #edit-email': 'keydown',
      'keydown #edit-email-pw-confirm': 'keydown',
      'keydown #confirm-password': 'keydown',

      'keydown #cancel-password, #cancel-email, #cancel-delete-account': 'keydown:cancelEdit',
      'keydown #save-password, #save-email, #delete-account': 'keydown:confirmEdit',

      'keyup .password-confirm input': 'keyup:confirmPassword',
      'keyup .delete-password, .delete-confirm': 'keyup:delete',

      'keyup .new-password': 'keyup:password',
      'keyup .confirm-password': 'keyup:password',

      // SettingsAccountViewOExportController
      'click .export-start': 'click:export'
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.proStatusView = self.addSubview(new ProStatusView());
      self.subscriptionView = self.addSubview(new ProSubscriptionView());
      self.invoiceDownloader = self.addSubview(new InvoiceDownloaderView());
      self.importer = self.addSubview(new RestoreDataView());

      var headers = _.extend({
        'Authorization': 'Bearer ' + runtime.user.attributes.token,
        'X-Requested-With':'XMLHttpRequest',
        'X-File-Name': ''
      }, PlatformHeaders.headers);

      self.fileUploader = new WBFileUploader({
        'acceptedFileTypes': ['image/gif', 'image/jpeg', 'image/png'],
        'uploadAction': 'PUT',
        'uploadURL': config.api.host + '/me',
        'customHeaders': headers,
        'onProgress': function (count) {

          self.$progressBar.removeClass('hidden');
          self.$progressBar.find('span').css('width', count + '%');

          runtime.trigger('analytics:Preferences:avatarUploadStarted');
        },
        'onUploadComplete': function (data) {

          self.$progressBar.addClass('hidden');
          self.dropTarget.addClass('loading');

          runtime.user.save({
            'avatar': data.avatar
          }, {
            'success': function () {

              runtime.trigger('analytics:Preferences:avatarUploadFinished');

              var $image = self.dropTarget.find('img').removeClass('hidden');
              var loadBind = self.bindTo($image, 'load', function () {

                self.dropTarget.removeClass('loading');
                self.unbindFrom(loadBind);
              });

              _.delay(function () {
                // this is here in the strange off chance the load event fails...
                // which it does all the time http://api.jquery.com/load-event/
                // look at the caveats.
                self.dropTarget.removeClass('loading');
              }, 3000);

              // force avatar change on next sync so that change event fires at least once after the upload finishes
              // /AND/ after a sync after the upload has finished (defeat any replication delay)
              self.bindOnceTo(runtime, 'sync:end', self.updateAvatar);
              runtime.trigger('sync:start');
            }
          });
        },
        'onError': function () {

          self.$progressBar.addClass('hidden');
          self.dropTarget.removeClass('loading');
          var $errorMsg = self.$('.message.error');
          $errorMsg.removeClass('hidden');

          _.delay(function () {

            $errorMsg.addClass('hidden');
          }, 5000);
        }
      });

      // services
      self.services = new ServiceCollection('/services/all');
      self.bindTo(runtime, 'services:ready', self.updateServices);
      self.bindTo(self.services, 'add remove', self.updateServices);

      self.bindTo(runtime.user, 'change:avatar', self.updateAvatar);
      self.bindTo(runtime.user, 'change:email', self.updateEmail);
      self.bindTo(runtime.user, 'change:name', self.updateName);
      self.bindTo(runtime.user, 'change:product', self.deferredRender);
      self.bindTo(runtime.settings, 'change:date_format', self.deferredRender);

      self.bindTo(runtime, 'close:edits', self.closeAllEdits);
    },

    'render': function () {

      var self = this;

      runtime.settings.ready.done(self.deferredRender, self);

      return self;
    },

    'updateServices': function () {

      var self = this;

      self.facebookService = self.services.find(function (service) {
        return service.attributes.provider_type === 'facebook' && service.has('oauth_access_token') && service.has('online_id');
      });

      self.googleService = self.services.find(function (service) {
        return service.attributes.provider_type === 'google' && service.has('oauth_access_token') && service.has('online_id');
      });

      if (self.facebookService || self.googleService) {
        self.updateServiceButtons();
      }
    },

    'deferredRender': function () {

      var self = this;
      var json;
      var user = runtime.user;
      var product = runtime.user.attributes.product;
      var isPro = user.isPro();
      json = runtime.settings.toJSON();
      json.isIE = runtime.env.isIE();
      json.user = user.toJSON();
      json.connectedToFacebook = !!self.facebookService;
      json.user.isPro = isPro;
      json.isUnregistered = runtime.user.isUnregistered();

      if (isPro) {

        var dateSetting = runtime.settings.attributes.date_format;
        json.expiresIn = moment(product.expires_at).diff(moment(), 'days');
        json.expiresOn = moment(product.expires_at).format(dateSetting);
        json.billOn = product.recurring && !product.canceled ? moment(product.expires_at).format(dateSetting): false;
        json.expiresRelative = json.expiresIn === 0 ? runtime.language.getText('label_relative_date_today_mid_sentence'): json.expiresIn === 1 ? runtime.language.getText('label_relative_date_tomorrow'): false;

        json.subscriptionType = product.value;
        json.adyenSubscription = product.provider === 'adyen';

        json.isGroupProduct = runtime.user.attributes.product.is_member;
        json.isAdmin = runtime.user.isProTeamAdmin();
        json.adminName = runtime.user.getAdminName();
        json.isMember = runtime.user.isProTeamMember();

        json.isCanceled = product.canceled;
        json.recurring = product.recurring;
        json.isManageEnabled = product.platform === 'google_play' || product.platform === 'ios_app_store';
        json.store = platforms[product.platform || product.provider];

        json.isTelekomPromo = product.product_id === 'telekom_6month_promotion';
      }

      self = _super.render.call(self, json);

      self.facebookButtons = {
        'connect': self.$('.facebook .connect'),
        'disconnect': self.$('.facebook .disconnect')
      };

      self.googleButtons = {
        'connect': self.$('.google .connect'),
        'disconnect': self.$('.google .disconnect')
      };

      // add pro related buttons
      var statusEl = self.proStatusView.render(json).$el;
      self.$('.pro-status-wrapper').html(statusEl);

      var $subscribtionEl = self.subscriptionView.render().$el;

      var onProRoute = runtime.currentRoute().indexOf('/pro') >= 0;

      if (!onProRoute) {

        $subscribtionEl.addClass('hidden');
      }
      else {

        self.$('.settings').addClass('hidden');
      }

      self.setupImportButton();
      self.el.appendChild($subscribtionEl[0]);
      self.updateAvatar();
      self.updateServices();

      if (runtime.user.isUnregistered()) {

        self.$('.basic-account-settings, .pro-account-settings, .account-backup-settings, .facebook-connect-settings, .google-connect-settings, .delete, .edit-pen').addClass('hidden');
        self.$('.avatar').removeClass('hover');
      }
      else {

        self.setupAvatarUpload();
        self.setupInvoicesDownload();
      }
    },

    'setupImportButton': function () {

      var self = this;

      self.$('.account-backup-settings .import').prepend(self.importer.render().el);

      self.bindTo(self.importer, 'processing:backupData', function () {
        self.$('.backup-feedback').removeClass('hidden');
      });

      self.bindTo(self.importer, 'processing:complete', function () {
        self.$('.backup-feedback').addClass('hidden');
      });

      self.bindTo(self.importer, 'processing:error', function () {
        self.$('.backup-feedback').addClass('hidden');
        self.$('.back-up-error').removeClass('hidden');
      });
    },

    'uploadAvatar': function (file) {

      var self = this;

      // ensure the route is correct to prevent DnD leak
      if (runtime.currentRoute() === 'preferences/account') {

        // run upload
        self.fileUploader.upload(file[0]);
      }
    },

    'updateAvatar': function () {

      var self = this;
      var $avatar = self.$('.avatar.choose img');
      var now = moment().unix();
      var url = runtime.user.getAvatarURL();

      function onAvatarLoaded () {

        if (self.lastUpdatedAvatarTimestamp !== now) {

          // every time the avatar is updated,
          // reset the edit mode and progress bar
          self.$('.edit-pen').removeClass('hidden').hide().fadeIn(100);
          self.$('.progress-bar-wrapper').fadeOut(100);

          // save the timestamp and unbind the handler
          self.lastUpdatedAvatarTimestamp = now;
          $avatar.off('load');

          // mopy over the image url to subscription view
          self.subscriptionView.$('img').attr('src', $avatar.attr('src'));
        }

        $avatar.toggleClass('opaque', runtime.user.attributes.avatar === null);
        $avatar.removeClass('hidden');
      }


      if (url && $avatar.length) {
        BlobHelper.loadImage(url, $avatar, onAvatarLoaded);
      }
      else {
        $avatar.addClass('hidden');
      }
    },

    'updateEmail': function () {

      var self = this;
      self.$('#edit-email').val(runtime.user.attributes.email);
    },

    'updateName': function () {

      var self = this;
      self.$('#edit-full-name').val(runtime.user.attributes.name);
    },

    'setupAvatarUpload': function () {

      var self = this;
      // setup file uploader
      if (!self.fileSelectorView) {
        self.dropTarget = self.$('.choose');
        var view = new WBFileSelectorView({
          'dropTarget': self.dropTarget,
          'urlBlocker': 'tasks/'
        });

        self.$progressBar = self.$('.progress-bar-wrapper');

        self.fileSelectorView = self.addSubview(view, 'selectorView');
        self.fileSelectorView.setElement(self.dropTarget);
        self.bindTo(self.fileSelectorView, 'selected:files', self.uploadAvatar);
      }
    },

    'setupInvoicesDownload': function () {

      var self = this;

      if (self.destroyed) {
        return;
      }

      self.invoiceDownloader && self.$('.google-connect-settings').before(self.invoiceDownloader.render().el);
    },

    'resetEditInputs': function (e) {

      var $elem = $(e.currentTarget);
      var elemId = $elem.attr('id');
      var eventMap = {

        'edit-full-name': 'name',
        'edit-email': 'email'
      };

      $elem.val(runtime.settings.get(eventMap[elemId]));
    },

    // Change EMail
    'showChangeEmail': function () {

      var self = this;

      var $input = self.$('#edit-email');
      var $changeButton = self.$('#change-email');

      $input.prop('disabled', false).focus();
      $changeButton.addClass('hidden');
      self.$('.password-confirm, .change-email-buttons').slideDown(200);

      // disable name, password, delete, and connect
      self.$('#edit-full-name, #change-password, .delete-account, .facebook a, #cancel-pro').prop('disabled', true).addClass('disabled');
      self.trigger('check:email', undefined, self.$('#edit-email').val());
    },

    'hideChangeEmail': function () {

      var self = this;

      var $input = self.$('#edit-email');

      $input.prop('disabled', true);
      $input.val(runtime.user.attributes.email);
      self.$('#edit-email-pw-confirm').val('').attr('aria-label', runtime.language.getText('label_password'));
      self.$('.password-confirm, .password-error, .change-email-buttons').slideUp(200, function () {

        self.$('#change-email').removeClass('hidden').focus();
      });
      self.enableAllInputs();
    },

    'updateEmailInputs': function (state) {

      var self = this;
      if (state) {

        self.$('#edit-email-pw-confirm').prop('disabled', false);

        var disabledState = self.$('.password-confirm input').val() === '';
        self.$('#save-email').prop('disabled', disabledState).toggleClass('disabled', disabledState);
      }
      else {
        self.$('#edit-email-pw-confirm, #save-email').prop('disabled', true);
      }
    },

    'enableAllInputs': function () {

      var self = this;
      self.$('.settings .disabled').removeClass('disabled').prop('disabled', false);
    },

    'renderEmailError': function (xhr) {

      var data = xhr.response.data;
      var self = this;

      var $passwordError = self.$('.password-error');
      var $confirmPasswordInput = self.$('#edit-email-pw-confirm');

      if (data && (data.errors.type in knownErrors || xhr.status in knownErrors)) {

        var key = knownErrors[data.errors.type];

        $passwordError.html(runtime.language.getLabel(key).toString());
        $confirmPasswordInput.attr('aria-label', runtime.language.getText(key));
        self.renderLabels();
      }

      $passwordError.slideDown(200, function () {

        $confirmPasswordInput.focus();
      });
    },

    // Change Password
    'showChangePassword': function () {

      var self = this;

      var $saveButtons = self.$('.change-password-buttons');
      var $changeButton = self.$('#change-password');
      var $oldPassword = self.$('.old-password');
      $changeButton.hide();

      $saveButtons.slideDown(200, function() {

        $oldPassword.focus();
      });

      $oldPassword.show();

      self.toggleSavePasswordButton(false);

      // disable name, email, delete, and connect
      self.$('#edit-full-name, #change-email, .delete-account, .facebook a, #cancel-pro').prop('disabled', true).addClass('disabled');
    },

    'toggleSavePasswordButton': function (state) {

      var self = this;
      self.$('#save-password').toggleClass('disabled', !state).prop('disabled', !state);
    },

    'hideChangePassword': function () {

      var self = this;
      var $saveButtons = self.$('.change-password-buttons');
      var $changeButton = self.$('#change-password');

      $changeButton.show();
      $saveButtons.slideUp(200);
      self.$('.old-password').val('').hide().attr('aria-label', runtime.language.getText('settings_account_current_password'));
      self.$('.error-message').css('display','none');

      $saveButtons.find('input').each(function (idx, el) {

        $(el).val('');
        $changeButton.focus();
      });

      self.enableAllInputs();
    },

    'showPasswordError': function () {

      var self = this;
      var $error = self.$('.change-password-error');
      var $passwordInput = self.$('.old-password');
      $passwordInput.attr('aria-label', runtime.language.getText('settings_account_change_password_error'));
      $error.slideDown(200, function () {

        $passwordInput.focus();
      });
    },

    'hidePasswordError': function () {

      this.$('.error-message').slideUp(200);
    },

    // DELETE ACCOUNT
    'showDeleteAccount': function () {

      var self = this;
      var $saveButtons = self.$('.delete-form');
      var $changeButton = self.$('.show-delete-wrapper');

      $changeButton.addClass('hidden');

      $saveButtons.slideDown(400, function () {

        self.trigger('force:window:resize');
        self.$('.delete-form').focus();
      });

      self.$el.closest('.content-inner').animate({
        'scrollTop': $saveButtons.offset().top
      });

      self.$('.delete-password-confirm').show();
      self.$('#edit-full-name, #change-email, #change-password, #delete-account, .facebook a, #cancel-pro').prop('disabled', true).addClass('disabled');
    },

    'hideDeleteAccount': function () {

      var self = this;

      var $saveButtons = self.$('.delete-form');
      var $changeButton = self.$('.show-delete-wrapper');
      self.$('.delete-password').attr('aria-label', runtime.language.getText('settings_account_current_password'));

      $changeButton.removeClass('hidden');

      $saveButtons.slideUp(200, function () {

        self.trigger('force:window:resize');
        self.$('.show-delete').focus();
      });

      self.$('.delete-password-confirm').hide();

      $saveButtons.find('input').val('');
      self.$('.delete-password-error').slideUp(200);

      self.enableAllInputs();
    },

    'renderDeleteAccountError': function (xhr) {


      var self = this;
      var data = xhr.response.data;
      var $passwordError = self.$('.delete-password-error');
      var $deleteButton = self.$('#delete-account');
      var $passwordInput = self.$('.delete-password');

      var key = 'api_error_incorrect_password';
      if (data && (data.errors.type in knownErrors || xhr.status in knownErrors)) {
        key = knownErrors[data.errors.type];
      }

      $passwordError.find('div').html(runtime.language.getLabel(key).toString());
      self.renderLabels();

      $passwordInput.attr('aria-label', runtime.language.getText(key));

      $passwordError.slideDown(200, function () {
        $passwordInput.focus();
      });

      $deleteButton.removeClass('loading');
    },

    'toggleDeleteButton': function (state) {

      var self = this;
      var $deleteButton = self.$('#delete-account');
      $deleteButton.prop('disabled', !state).toggleClass('disabled', !state);
    },

    // Services
    'updateServiceButtons': function () {

      var self = this;
      var fbConnected = !!self.facebookService;
      var gConnected = !!self.googleService;

      if (self.facebookButtons) {
        self.facebookButtons.connect.toggleClass('hidden', fbConnected);
        self.facebookButtons.disconnect.toggleClass('hidden', !fbConnected);
      }

      if (self.googleButtons) {
        self.googleButtons.connect.toggleClass('hidden', gConnected);
        self.googleButtons.disconnect.toggleClass('hidden', !gConnected);
      }
    },

    'toggleConnectButtonStatus': function (type, state) {

      var self = this;
      var button;
      var key = state === 'connecting' ? 'label_connecting': 'button_connect';

      if (type === 'facebook') {
        button = self.facebookButtons.connect;
      }
      else if (type === 'google') {
        button = self.googleButtons.connect;
      }

      button && button.text(runtime.language.getText(key));
    },

    'toggleConfirmation': function () {

      var self = this;
      var $cancelOptions = self.$('.cancelation-options');
      var isOpen = $cancelOptions.hasClass('closed');
      self.$('.confirm-cancel').removeClass('loading');

      self.$('#edit-full-name, #change-password, .delete-account, .facebook a, #change-email').prop('disabled', isOpen).toggleClass('disabled', isOpen);
      self.$('#cancel-pro').prop('disabled', isOpen).toggleClass('disabled', isOpen);

      $cancelOptions[isOpen ? 'slideDown': 'slideUp'](200);
      $cancelOptions.toggleClass('closed', !isOpen);
    },

    'closeAllEdits': function () {

      var self = this;
      self.hideChangeEmail();
      self.hideDeleteAccount();
      self.hideChangePassword();
    }
  });
});
define('templates/settings/settingsFiltersHeadline',['vendor/handlebars'], function(H) {
var name = 'settings/settingsFiltersHeadline';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"separator filter-setting tabStart\" tabindex=\"0\" role=\"heading\"> <div class=\"cols\"> <div class=\"col-100\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, depth0.label, options) : helperMissing.call(depth0, "localized", depth0.label, options)))
    + " </div> </div> </div>";
  return buffer;
  });
});
define('templates/settings/settingsFiltersItem',['vendor/handlebars'], function(H) {
var name = 'settings/settingsFiltersItem';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;


  buffer += "<div class=\"separator filter-setting\"> <div class=\"cols\"> <div class=\"col-50\"> <label for=\"show-smartlist-visibility-";
  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\"> <span class='icon list-";
  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "'></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, depth0.label, options) : helperMissing.call(depth0, "localized", depth0.label, options)))
    + " </label> </div> <div class=\"col-50 text-right\"> <select class=\"small\" id=\"edit-smartlist-visibility-";
  if (stack2 = helpers.name) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.name; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"";
  if (stack2 = helpers.label) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.label; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\"> <option value=\"auto\" data-key-text=\"settings_sidebar_smart_lists_auto\"></option> <option value=\"visible\" data-key-text=\"settings_sidebar_smart_lists_visible\"></option> <option value=\"hidden\" data-key-text=\"settings_sidebar_smart_lists_hidden\"></option> </select> </div> </div> </div>";
  return buffer;
  });
});
define('views/Settings/SettingsFiltersView',[

  'application/runtime',

  'views/Settings/SettingsSubview',

  'template!settings/settingsFiltersHeadline',
  'template!settings/settingsFiltersItem'

], function (

  runtime,
  SettingsSubview,
  filtersHeadlineTemplate,
  filtersItemTemplate,
  undefined

) {

  

  var $ = runtime.$;
  var _ = runtime._;

  var _super = SettingsSubview.prototype;

  var _filters = _.clone(runtime.smartLists);

  return SettingsSubview.extend({

    'template': filtersItemTemplate,

    'className': 'content-inner',

    initialize: function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.selectables = [];
      _.each(_filters, function(filter) {

        self.selectables.push('smartlist_visibility_' + filter);
      });

      _.each(self.selectables, function (key) {

        self.bindTo(runtime.settings, 'change:' + key, function () {

          self.updateSelectable(key);
        });
      });
    },

    'render': function () {

      var self = this;

      self.$el.empty();

      var header = $(filtersHeadlineTemplate({'label': 'settings_sidebar_smart_lists_title'}));

      self.el.appendChild(header[0]);

      var fragment = document.createDocumentFragment();

      _.each(_filters, function(name) {

        var title = name === 'assigned'? 'assigned_to_me': name;

        var filter = $(self.template({
          'name': name,
          'label': 'smart_list_' + title
        }));

        var filterKey = 'smartlist_visibility_' + name;
        var setting = runtime.settings.get(filterKey);
        var selectMenu = filter.find('select');
        var option = selectMenu.find('option[value="' + setting + '"]');
        option.length && option.prop('selected', true);

        (setting === 'hidden') && filter.addClass('disabled');

        self.bindTo(selectMenu, 'change', function() {

          var setting = selectMenu.val();
          filter.toggleClass('disabled', (setting === 'hidden'));
          runtime.settings.save(filterKey, setting);
          runtime.trigger('analytics:Preferences:change-' + filterKey, setting);
        });

        fragment.appendChild(filter[0]);
      });

      self.el.appendChild(fragment);

      self.renderLocalized();

      $(_.last(self.$('.filter-setting select'))).addClass('tabEnd');

      var current = new Date();
      self.$el.find('.list-today').html(current.getDate());

      return self;
    },

    'updateSelectable': function (key) {

      var self = this;
      var value = runtime.settings.get(key);
      var $element = self.$el.find('#edit-' + key.replace(/_/g, '-'));

      if (value === 'hidden'){
        $element.parent().addClass('disabled');
      }
      else {
        $element.parent().removeClass('disabled');
      }

      var $option = $element.find('option[value="' + value + '"]');

      $option.prop('selected', true);
    }
  });
});
define('views/Settings/Controllers/SettingsShortcutsViewController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  Keycodes,
  WBModalViewController,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;

  return WBModalViewController.extend({

    'implements': {

      'focus:input': 'onFocusInput',

      'keydown': 'onKeydown',

      'change:select': 'onSelectChange',

      'blur': 'onBlur',

      'click:showMore': 'onToggleAdvancedShortcuts',
      'click:reset': 'resetShortcuts'
    },

    'onSelectChange': function (e) {

      this.saveChanges($(e.currentTarget));
    },

    'onFocusInput': function (e) {

      var self = this;
      self.defer(function () {
        $(e.target).select();
      });
    },

    'onBlur': function (e) {

      var self = this;
      var view = self.view;

      var $elem = $(e.currentTarget);
      var val = $.trim($elem.val());
      var id = $elem.attr('id');
      var shortcutKey = id.replace(/-/g, '_');
      var $this;

      if (val !== runtime.settings.get(shortcutKey)) {

        self.saveChanges($elem);
        // blank any inputs that have the same value!
        view.$('input.shortcut').not($elem).each(function (idx, thisElem) {

          $this = $(thisElem);
          if ($this.val() === val) {
            $this.val('');
            self.saveChanges($this);
          }
        });
      }
      else {
        $elem.val(runtime.settings.get(shortcutKey));
      }
    },

    'onKeydown': function (e) {

      var self = this;

      var ignore = [9];
      var $elem = $(e.currentTarget);
      var id = $elem.attr('id');
      var shortcutKey = id.replace(/-/g, '_');
      var shortcut = false;

      if (e.which === Keycodes.esc) {

        // cancel
        $elem.val(runtime.settings.get(shortcutKey));
        $elem.blur();
      }
      else if (!_.include(ignore, e.which)) {

        e.preventDefault();
        e.stopPropagation();

        // convert keydown event into shortcut string
        shortcut = self.getShortcutKeys(e, shortcutKey);

        if (shortcut !== false) {

          $elem.val(shortcut);
        }
      }
    },

    'onToggleAdvancedShortcuts': function () {

      var self = this;
      var view = self.view;

      var $advanced = view.$('.advanced-shortcuts');
      var isHidden = $advanced.hasClass('hidden');
      var btnLabel;

      btnLabel = isHidden ? runtime.language.getLabel('settings_shortcuts_hide').toString() : runtime.language.getLabel('settings_shortcuts_show_more').toString();

      view.$('.show-advanced-shortcuts').html(btnLabel);
      view.renderLocalized();

      $advanced.toggleClass('hidden', !isHidden);

      view.$('#shortcut-goto-preferences').focus();

      runtime.trigger('analytics:Preferences:toggleShowAdvancedShortcuts', isHidden ? 'show' : 'hide');

      view.trigger('change:content');
    },

    'resetShortcuts': function () {

      runtime.settings.resetShortcuts();
    },

    'saveChanges': function ($elem) {

      var val = $.trim($elem.val());
      var id = $elem.attr('id');
      var shortcutKey = id.replace(/-/g, '_');

      if (val !== runtime.settings.get(shortcutKey)) {
        runtime.settings.save(shortcutKey, val);
      }
    },

    'getShortcutKeys': function (e, shortcutKey) {

      var ignore = [16, 17, 18, 91, 93, 27];
      var modifiers = ['altKey', 'ctrlKey', 'metaKey', 'shiftKey'];
      var charCode = e.which;
      var character = (Keycodes[charCode] !== undefined) ? Keycodes[charCode] : String.fromCharCode(charCode);
      character = character.toUpperCase();

      var shortcutGroups = {

        'returns': /^((ALT|SHIFT|META|CTRL)\s\+\s)*RETURN$/,
        'deletes': /^((ALT|SHIFT|META|CTRL)\s\+\s)*BACKSPACE|DEL$/,
        'keyCombos': /^((ALT|SHIFT|META|CTRL)\s\+\s)+.$/,
        'singleKeys': /^.$/
      };
      var allowedShortcutsMap = {

        'shortcut_delete': [shortcutGroups.deletes],

        'shortcut_add_new_task': [shortcutGroups.keyCombos],
        'shortcut_add_new_list': [shortcutGroups.keyCombos],

        'shortcut_goto_filter_all': [shortcutGroups.keyCombos],
        'shortcut_goto_filter_completed': [shortcutGroups.keyCombos],
        'shortcut_goto_filter_conversations': [shortcutGroups.keyCombos],
        'shortcut_goto_filter_starred': [shortcutGroups.keyCombos],
        'shortcut_goto_filter_today': [shortcutGroups.keyCombos],
        'shortcut_goto_filter_week': [shortcutGroups.keyCombos],
        'shortcut_goto_inbox': [shortcutGroups.keyCombos],
        'shortcut_goto_search': [shortcutGroups.keyCombos],
        'shortcut_goto_preferences': [shortcutGroups.keyCombos],
        'shortcut_mark_task_done': [shortcutGroups.keyCombos],
        'shortcut_mark_task_starred': [shortcutGroups.keyCombos],

        'shortcut_navigate_lists': [shortcutGroups.keyCombos],
        'shortcut_navigate_tasks': [shortcutGroups.keyCombos],

        'shortcut_select_all_tasks': [shortcutGroups.keyCombos],
        'shortcut_send_via_email': [shortcutGroups.keyCombos],

        'shortcut_sync': [shortcutGroups.singleKeys],


        // TODO re-enable for 2.0
        //'shortcut_copy_tasks': [shortcutGroups.keyCombos],
        //'shortcut_cut_tasks': [shortcutGroups.keyCombos],
        //'shortcut_paste_tasks': [shortcutGroups.keyCombos]
      };
      var val = false;
      var match = false;

      if (_.include(ignore, e.which)) {

        return val;
      }

      _.each(modifiers, function (modifier) {

        if (e[modifier] === true) {

          modifier = modifier.replace('Key', '').toUpperCase();
          if (val) {
            val += ' + ' + modifier;
          }
          else {
            val = modifier;
          }
        }
      });

      if (!val) {
        val = character;
      }
      else {
        val += ' + ' + character;
      }

      // validate combo return false if not valid for shortcut
      if (allowedShortcutsMap[shortcutKey]) {

        _.each(allowedShortcutsMap[shortcutKey], function (regex) {

          if (val.match(regex) !== null) {
            match = true;
          }
        });

        if (match === false ) {
          val = false;
        }
      }

      // ignore combos of only shift + key
      return val;
    }
  });
});
define('templates/settings/settingsShortcuts',['vendor/handlebars'], function(H) {
var name = 'settings/settingsShortcuts';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function", self=this;

function program1(depth0,data) {
  
  
  return "selected";
  }

function program3(depth0,data) {
  
  var buffer = "", stack1, stack2, options;
  buffer += " <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_open_conversations_smart_list", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_open_conversations_smart_list", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-goto-filter-done\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_goto_filter_conversations) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_goto_filter_conversations; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_open_conversations_smart_list\"/> </div> </div> ";
  return buffer;
  }

  buffer += "<!-- Tasks --> <div class=\"separator\"> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_new_task", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_new_task", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut tabStart\" id=\"shortcut-add-new-task\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_add_new_task) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_add_new_task; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_new_task\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_new_list", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_new_list", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-add-new-list\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_add_new_list) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_add_new_list; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_new_list\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_mark_done", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_mark_done", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-mark-task-done\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_mark_task_done) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_mark_task_done; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_mark_done\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_mark_starred", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_mark_starred", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-mark-task-starred\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_mark_task_starred) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_mark_task_starred; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_mark_starred\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_select_all_tasks", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_select_all_tasks", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-select-all-tasks\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_select_all_tasks) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_select_all_tasks; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_select_all_tasks\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_delete_item", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_delete_item", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-delete\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_delete) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_delete; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_delete_item\"/> </div> </div> </div> <!-- TODO re-enable for 2.0 <div class=\"separator\"> <div class=\"cols\"> <div class=\"col-60 text-right\">Copy tasks</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-copy-tasks\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_copy_tasks) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_copy_tasks; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">Cut tasks</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-cut-tasks\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_cut_tasks) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_cut_tasks; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">Paste tasks</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-paste-tasks\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_paste_tasks) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_paste_tasks; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_step_through_task", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_step_through_task", options)))
    + "</div> <div class=\"col-40\"> <select class=\"shortcut\" id=\"shortcut-navigate-tasks\"> <option value=\"ARROW KEYS\" data-key-text=\"settings_shortcuts_arrow_keys\" ";
  stack2 = helpers['if'].call(depth0, depth0['is shortcut_navigate_tasks ARROW KEYS'], {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "></option> <option value=\"+-\" ";
  stack2 = helpers['if'].call(depth0, depth0['is shortcut_navigate_tasks +-'], {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += ">+-</option> </select> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_step_through_list", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_step_through_list", options)))
    + "</div> <div class=\"col-40\"> <select class=\"shortcut\" id=\"shortcut-navigate-lists\"> <option value=\"ARROW KEYS\" data-key-text=\"settings_shortcuts_arrow_keys\" ";
  stack2 = helpers['if'].call(depth0, depth0['is shortcut_navigate_lists ARROW KEYS'], {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "></option> <option value=\"+-\" ";
  stack2 = helpers['if'].call(depth0, depth0['is shortcut_navigate_lists +-'], {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += ">+-</option> </select> </div> </div> </div> --> <div class=\"separator\"> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_open_search", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_open_search", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-goto-search\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_goto_search) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_goto_search; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_open_search\"/> </div> </div> </div> <!-- Advanced --> <div class=\"separator advanced-shortcuts hidden\"> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_open_preferences", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_open_preferences", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-goto-preferences\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_goto_preferences) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_goto_preferences; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_open_preferences\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_email_list", options) : helperMissing.call(depth0, "localized", "button_email_list", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-send-via-email\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_send_via_email) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_send_via_email; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"button_email_list\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_show_notifications", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_show_notifications", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-show-notifications\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_show_notifications) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_show_notifications; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_show_notifications\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_open_inbox", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_open_inbox", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-goto-inbox\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_goto_inbox) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_goto_inbox; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_open_inbox\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_open_assigned_smart_list", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_open_assigned_smart_list", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-goto-filter-assigned\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_goto_filter_assigned) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_goto_filter_assigned; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_open_assigned_smart_list\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_open_starred_smart_list", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_open_starred_smart_list", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-goto-filter-starred\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_goto_filter_starred) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_goto_filter_starred; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_open_starred_smart_list\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_open_today_smart_list", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_open_today_smart_list", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-goto-filter-today\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_goto_filter_today) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_goto_filter_today; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_open_today_smart_list\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_open_week_smart_list", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_open_week_smart_list", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-goto-filter-week\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_goto_filter_week) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_goto_filter_week; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_open_week_smart_list\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_open_all_smart_list", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_open_all_smart_list", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-goto-filter-all\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_goto_filter_all) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_goto_filter_all; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_open_all_smart_list\"/> </div> </div> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_open_done_smart_list", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_open_done_smart_list", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-goto-filter-done\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_goto_filter_completed) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_goto_filter_completed; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"settings_shortcuts_open_done_smart_list\"/> </div> </div> ";
  stack2 = helpers.unless.call(depth0, depth0.commentsEnabled, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </div> <div class=\"separator\"> <div class=\"cols\"> <div class=\"col-60 text-right\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_sync", options) : helperMissing.call(depth0, "localized", "label_sync", options)))
    + "</div> <div class=\"col-40\"> <input class=\"shortcut\" id=\"shortcut-sync\" type=\"text\" value=\"";
  if (stack2 = helpers.shortcut_sync) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.shortcut_sync; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\" data-key-aria-label=\"label_sync\"/> </div> </div> </div> <div class=\"actions separator noline cols\"> <div class=\"col-100\"> <button class=\"reset-shortcuts\" tabindex=\"0\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_reset", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_reset", options)))
    + "</button><button class=\"show-advanced-shortcuts tabEnd\" tabindex=\"0\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_shortcuts_show_more", options) : helperMissing.call(depth0, "localized", "settings_shortcuts_show_more", options)))
    + "</button> </div> </div>";
  return buffer;
  });
});
/*jshint expr:true*/
define('views/Settings/SettingsShortcutsView',[

  'application/runtime',

  'wunderbits/helpers/keycodes',

  'views/Settings/Controllers/SettingsShortcutsViewController',

  'views/Settings/SettingsSubview',

  'template!settings/settingsShortcuts'

], function (

  runtime,
  Keycodes,
  SettingsShortcutsViewController,
  SettingsSubview,
  shortcutsTemplate,
  undefined
) {

  

  var _ = runtime._;

  var _super = SettingsSubview.prototype;
  var _shortcutKeys = [

    'shortcut_delete',
    'shortcut_add_new_task',
    'shortcut_add_new_list',
    'shortcut_goto_filter_all',
    'shortcut_goto_filter_assigned',
    'shortcut_goto_filter_completed',
    'shortcut_goto_filter_conversations',
    'shortcut_goto_filter_starred',
    'shortcut_goto_filter_today',
    'shortcut_goto_filter_week',
    'shortcut_goto_inbox',
    'shortcut_goto_search',
    'shortcut_goto_preferences',
    'shortcut_mark_task_done',
    'shortcut_mark_task_starred',
    'shortcut_navigate_lists',
    'shortcut_navigate_tasks',
    'shortcut_select_all_tasks',
    'shortcut_send_via_email',
    'shortcut_sync',
  ];

  return SettingsSubview.extend({

    'template': shortcutsTemplate,

    'className': 'content-inner',

    'implements': [SettingsShortcutsViewController],

    'emits': {

      'focus input': 'focus:input', //'_onFocusInput',

      'keydown input.shortcut': 'keydown', //'_handleInputKeys',

      'change select.shortcut': 'change:select', //'_onSelectChange',

      'blur .shortcut': 'blur', //'_onBlur',

      'click .show-advanced-shortcuts': 'click:showMore', //'_onToggleAdvancedShortcuts',
      'click .reset-shortcuts': 'click:reset' //_resetShortcuts'
    },

    initialize: function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      _.each(_shortcutKeys, function (key) {

        self.bindTo(runtime.settings, 'change:' + key, function () {

          self.updateShortcut(key);
        });
      });
    },

    render: function () {

      var self = this;
      var json;

      json = runtime.settings.toJSON();
      json.commentsEnabled = runtime.feature_comments_disabled;
      _.each(json, function (val, key) {

        if (val) {

          json['is '+ key + ' ' + val] = true;
        }
      });

      self = _super.render.call(self, json);

      return self;
    },

    'updateShortcut': function (key) {

      var self = this;
      self.$('#' + key.replace(/_/g, '-')).val(runtime.settings.get(key));
    }
  });
});
define('views/Settings/Controllers/SettingsNotificationsViewController',[

  'application/runtime',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  WBModalViewController,
  undefined
) {

  

  var $ = runtime.$;

  return WBModalViewController.extend({

    'implements': {

      'change:toggle': 'onChangeToggleable'
    },

    'onChangeToggleable': function (e) {

      var $elem = $(e.currentTarget);
      var options = {};

      // ids to settings keys
      var eventsMap = {

        'edit-notifications-email-enabled': 'notifications_email_enabled',
        'edit-notifications-push-enabled': 'notifications_push_enabled',
        'edit-notifications-desktop-enabled': 'notifications_desktop_enabled'
      };

      // use the value of the option
      options[eventsMap[$elem.attr('id')]] = $elem.is(':checked') ? 'true' : 'false';
      runtime.trigger('analytics:Preferences:toggleNotification-' + eventsMap[$elem.attr('id')], $elem.is(':checked'));
      runtime.settings.save(options);
    }
  });
});
define('templates/settings/settingsNotifications',['vendor/handlebars'], function(H) {
var name = 'settings/settingsNotifications';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;

function program1(depth0,data) {
  
  var buffer = "", stack1, stack2, options;
  buffer += " <div class=\"separator\"> <div class=\"cols\"> <div class=\"col-50\"> <label> <input id=\"edit-notifications-email-enabled\" type=\"checkbox\" ";
  stack1 = helpers['if'].call(depth0, depth0['is notifications_email_enabled true'], {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "/> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_notifications_email_enabled", options) : helperMissing.call(depth0, "localized", "settings_notifications_email_enabled", options)))
    + " </label> </div> <div class=\"col-50\"> <label> <input id=\"edit-notifications-push-enabled\" type=\"checkbox\" ";
  stack2 = helpers['if'].call(depth0, depth0['is notifications_push_enabled true'], {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "/> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_notifications_push_enabled", options) : helperMissing.call(depth0, "localized", "settings_notifications_push_enabled", options)))
    + " </label> </div> </div> </div> ";
  return buffer;
  }
function program2(depth0,data) {
  
  
  return "checked";
  }

  buffer += "<!-- Notifications --> <div class=\"separator tabStart\" tabindex=\"0\" role=\"heading\"> <div class=\"cols\"> <p class=\"strong\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_notifications_notify_me_of_important_events_mobile", options) : helperMissing.call(depth0, "localized", "settings_notifications_notify_me_of_important_events_mobile", options)))
    + "</p> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_notifications_notify_me_on_text", options) : helperMissing.call(depth0, "localized", "settings_notifications_notify_me_on_text", options)))
    + "</p> </div> </div> ";
  stack2 = helpers.unless.call(depth0, depth0.isUnregisteredUser, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " <div class=\"separator\" <div class=\"cols\"> <div class=\"col-50\"> <label> <input id=\"edit-notifications-desktop-enabled\" class=\"tabEnd\" type=\"checkbox\" ";
  stack2 = helpers['if'].call(depth0, depth0['is notifications_desktop_enabled true'], {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "/> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_notifications_desktop_enabled", options) : helperMissing.call(depth0, "localized", "settings_notifications_desktop_enabled", options)))
    + " </label> </div> <div class=\"col-50\"> </div> </div> </div>";
  return buffer;
  });
});
define('views/Settings/SettingsNotificationsView',[

  'application/runtime',

  'views/Settings/Controllers/SettingsNotificationsViewController',

  'views/Settings/SettingsSubview',

  'template!settings/settingsNotifications'

], function (runtime, SettingsNotificationsViewController, SettingsSubview, notificationsTemplate, undefined) {

  

  var _ = runtime._;

  var _super = SettingsSubview.prototype;

  return SettingsSubview.extend({

    'template': notificationsTemplate,

    'className': 'content-inner',

    'implements': [SettingsNotificationsViewController],

    'emits': {

      'change input': 'change:toggle' //_onChangeToggleable'
    },

    initialize: function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.selectables = [

        'notifications_email_enabled',
        'notifications_push_enabled',
        'notifications_desktop_enabled'
      ];

      _.each(self.selectables, function (key) {

        self.bindTo(runtime.settings, 'change:' + key, function () {

          self.updateToggleable(key);
        });
      });
    },

    render: function () {

      var self = this;
      var json;

      json = runtime.settings.toJSON();
      _.each(json, function (val, key) {

        if (val) {
          json['is '+ key + ' ' + val] = true;
        }
      });

      json.isUnregisteredUser = runtime.user.isUnregistered();

      self = _super.render.call(self, json);

      return self;
    },

    'updateToggleable': function (key) {

      var self = this;
      var value = runtime.settings.get(key);
      var $toggle = self.$el.find('#edit-' + key.replace(/_/g, '-'));
      $toggle.prop('checked', value === 'true');
    }
  });
});
define('views/Settings/Controllers/SettingsAboutViewController',[

  'application/runtime',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  WBModalViewController,
  undefined
) {

  

  var $ = runtime.$;

  return WBModalViewController.extend({

    'implements': {

      'click:privacyPolicy': 'onClickTogglePrivacyPolicy',
      'click:link': 'onClickLink'
    },

    'onClickTogglePrivacyPolicy': function () {

      this.view.showTogglePrivacyPolicy();
    },

    'onClickLink': function (ev) {

      var $el = $(ev.target);
      var href = $el.attr('href');

      if (href) {
        runtime.trigger('analytics:Preferences:clickAboutLink', href);
      }
    }
  });
});
define('templates/privacyPolicy',['vendor/handlebars'], function(H) {
var name = 'privacyPolicy';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<h2>Imprint</h2> <p> 6 Wunderkinder GmbH<br> Brunnenstr. 141<br> 10115 Berlin (Mitte) </p> <h3>Contact</h3> <p>Mail: hello@6wunderkinder.com</p> <h3>Handelsregister</h3> <p> AG Charlottenburg HRB 128663 B<br> UstID DE815214657 </p> <h3>Geschäftsführer</h3> <p>Christian Reber</p> <h2>Privacy Policy</h2> <p>We, 6Wunderkinder GmbH (hereinafter \"6Wunderkinder\"), regard the protection and the confidentiality of your data as very important. We collect and use your personal data in accordance with the relevant provisions of German data protection legislation. In this Privacy Policy, we would like to tell you which personal data we collect and what we use it for.</p> <p>Below, 6Wunderkinder tells you about the type and extent of and the purposes for which personal data are collected and used. You can call up this information on our website anytime.</p> <h3>Controller</h3> <p>The controller within the meaning of German data protection laws is:</p> <p>6 Wunderkinder GmbH<br>Brunnenstr. 141<br>D-10115 Berlin (Mitte)<br></p> <p>If you have any questions or concerns about data protection, you are welcome to also contact us by email at this address: <a href=\"mailto:support@wunderlist.com\" data-track=\"Mailto:Support Contact:Privacy Policy\">support@wunderlist.com</a></p> <h3>Subject of Data Protection</h3> <p>The subject of data protection is personal data. According to Section 3, Subsection 1 of the German Federal Data Protection Act (\"Bundesdatenschutzgesetz\"), these are individual details on personal or objective circumstances of a certain person or certain persons. These include details such as your name, your postal address, your email address, your telephone number or, where appropriate, even use-data.</p> <h3>Collection and Use of Data</h3> <h4>Automated Data Collection</h4> <p>When you access 6Wunderkinder websites, your internet browser automatically transmits data for technical reasons. The following data are stored separately from other data that you may have sent us:</p> <ul> <li>your date and time of access,</li> <li>your browser-type and version,</li> <li>the operating system you use,</li> <li>the URL of the website you have previously visited,</li> <li>the quantity of data transmitted.</li> </ul> <p>For technical reasons these data are stored and are not assigned to any identifiable person at any time.</p> <h4>Data Entered by Users</h4> <p>You can use the Wunderlist product both with and without registering. However, you can only access Wunderlist using certain terminals such as an iPhone, iPod, iPad, Windows, Mac or Android and without additional functions. In order to make use of all its advantages, you have to register. To do this, you must enter your email address and select a password. We require these data in order to guarantee that you are able to make full use of our entire offer. We need these and possibly other data not least in order to respond to your wishes, questions and criticism.</p> <p>In future, we plan to introduce an option which will allow you to design your account personally. For example, you will be able to add a photo, choose a username and set up a connection to your Facebook user account. You will not be obliged to design your account personally; this will be entirely voluntary.</p> <p>The central function of Wunderlist product is task management. You will be able to use this product both online and offline.</p> <p>Where Wunderlist is used solely offline, the data you enter will be stored de-centrally on your storage medium. In such a case, we will not be able to access these data.</p> <p>If you use Wunderlist in combination with a registered account, all data and tasks entered will be integrated into a database. The purpose of this database is to allow you to use Wunderlist at various different levels and call up your tasks anywhere and at any time. Data are transmitted to the respective terminal using SSL encryption so that your data are transmitted securely.</p> <p>We use personal data in order to enable secure, effective and user-related use of Wunderlist services, including for:</p> <ul> <li>calling up the task-list via the internet;</li> <li>anonymously analysing task management statistics for press releases by 6Wunderkinder and studies;</li> <li>recommending Wunderlist by using the \"Invite\" function for friends and acquaintances (email address).</li> </ul> <h4>Transfer of Data</h4> <p>We will not transfer your data to third parties as a matter of course without letting you know in advance or asking for your prior permission. We may only transfer your data to third parties without informing you separately beforehand in the following exceptional cases as explained below:</p> <ul> <li>If required for investigating the illegal use of Wunderlist or for legal proceedings, personal data will be transferred to the criminal investigation authorities and, if appropriate, to injured third parties. We will only do this if there are concrete indications of illegal and/or abusive behaviour. We can only transfer on your personal data if this is used to enforce General Terms and Conditions of Business or other agreements. We are also legally obliged to give certain public authorities information. These are criminal investigation authorities, public authorities which prosecute administrative offences entailing fines and the German finance authorities.</li> <li>Occasionally we depend on contractually affiliated external companies and external service providers to supply services such as the supply of advertising measures (only if you have given your explicit prior consent), processing payments (PayPal, credit card etc.), storing your data and customer service. In such cases, information is transferred to these companies or individuals in order to enable them to process this information further. We carefully select these external service providers and review them regularly to ensure that your privacy is preserved. The service providers may only use the data for the purposes stipulated by us. We also contractually require the service providers to treat your data solely in accordance with this Privacy Policy and the German data protection laws.</li> <li>In order to further develop our business, we may alter the corporate structure of 6Wunderkinder GmbH by changing its legal form. We may also form, sell or buy subsidiaries, divisions or parts of the company. In such transactions, customer information together with the part of the company to be transferred will be passed on. Every time personal data are transferred to third parties to the extent prescribed, 6Wunderkinder will ensure that this is done in accordance with this Privacy Policy and the relevant data protection laws.</li> </ul> <h4>Newsletter</h4> <p>6Wunderkinder provides a newsletter service free of charge. We use the newsletter to inform you about new products and send you general information about 6Wunderkinder. We need your email address in order to send you the newsletter. You can enter your email address on 6Wunderkinder's start page, which is available at <a href=\"http://www.6wunderkinder.com\">http://www.6wunderkinder.com</a>. We will store and use your email address solely to send you the newsletter.</p> <p>Of course you can unsubscribe the newsletter at any time. Every newsletter contains the information on how you can unsubscribe the newsletter with effect for the future.</p> <h4>Cookies</h4> <p>6Wunderkinder stores so-called \"cookies\" in order to be able to offer you a comprehensive range of functions and to make it easier to use our websites. \"Cookies\" are small files which are stored on your computer with the help of the internet browser. If you do not want to use \"cookies\", you can prevent \"cookies\" from being stored on your computer using the corresponding settings on your internet browser. Please note that this may restrict the functional capability and the range of functions of our offer.</p> <h3>Analysis of Wunderlist</h3> <h4>Statistical Data</h4> <p>When Wunderlist is used, we collect statistical data which can be traced to you. We use it to improve Wunderlist.</p> <h4>Google Analytics</h4> <p>6Wunderkinder uses Google Analytics, a web analysis service of Google Inc. (\"Google\"). Google Analytics uses so-called \"cookies\", text files which are stored on your computer and which enable you to analyse your use of Wunderlist. The information generated by the cookie on your use of Wunderlist (including your abbreviated IP address) is transmitted to a Google server in the USA and are stored there. Google will use this information to assess your use of Wunderlist, to compile reports on the activities for us and to provide more services connected with use of Wunderlist and the internet. It is also possible that Google may transmit this information to third parties if this is prescribed by law or if third parties process this information on behalf of Google.</p> <p><strong>You can deactivate Google Analytics by means of a browser add-on if you do not want Wunderlist analysis. You can download this here: <a href=\"http://tools.google.com/dlpage/gaoptout?hl=de\"> http://tools.google.com/dlpage/gaoptout?hl=de.</a></strong></p> <h4>Deleting Your Data</h4> <p>If your data are no longer required for the aforementioned purposes, we will delete them. Completed tasks will remain stored and will be marked \"Completed\" in the database. If you delete your account, we will also delete all data completely from your account (lists, tasks and shared lists). Data you have entered in lists belonging to third parties will remain in existence as these are part of third party accounts. If data has to be retained for statutory reasons, these will be blocked and will then no longer be available for any further use.</p> <h4>Right to Information and Correction</h4> <p>You naturally have the right to receive information about the data held and stored by 6Wunderkinder about you. Equally, you have the right to have incorrect data corrected or blocked. To have this done, please contact: <a href=\"mailto:support@wunderlist.com\" data-track=\"Mailto:Support Contact:Privacy Policy\">support@wunderlist.com</a> or by post to the address given above.</p> <h4>Amendments to this Privacy Policy</h4> <p>We reserve the right to amend this Privacy Policy. You can call up the current version of the Privacy Policy at any time at: <a href=\"http://www.6wunderkinder.com/privacy-policy\">www.6wunderkinder.com/privacy-policy</a>.</p>";
  });
});
define('styles/_privacyPolicy',[],function() { return {'name': '_privacyPolicy', 'styles': ".dialog .content .separator .privacy-policy{background:#fff;padding:30px;overflow:auto;max-height:150px;-webkit-box-shadow:inset 0 0 5px rgba(0,0,0,0.1);box-shadow:inset 0 0 5px rgba(0,0,0,0.1);border:1px solid #ccc;} .dialog .content .separator .privacy-policy p,.dialog .content .separator .privacy-policy h4,.dialog .content .separator .privacy-policy li{font-size:12px;margin-bottom:10px} .dialog .content .separator .privacy-policy h4{margin-bottom:0} .dialog .content .separator .privacy-policy h3{font-size:14px} .dialog .content .separator .privacy-policy h2{font-size:18px;margin-bottom:10px} .dialog .content .separator .privacy-policy a{color:#4597df} .dialog .content .separator .privacy-policy ul{padding:0 20px;list-style:disc;font-weight:400;line-height:18px} " }; });
define('views/Settings/SettingsPrivacyPolicyView',[

  'application/runtime',
  'wunderbits/WBView',

  'template!privacyPolicy',

  'style!_privacyPolicy'

], function (runtime, WBView, privacyPolicyTemplate, privacyPolicyStyles, undefined) {

  

  var _super = WBView.prototype;

  return WBView.extend({

    'template': privacyPolicyTemplate,

    'styles': [
      privacyPolicyStyles
    ],

    'attributes': {
      'tabindex': 0
    },

    'className': 'privacy-policy',

    'render': function () {

      var self = this;
      _super.render.apply(self, arguments);

      return self;
    },
  });
});
define('templates/settings/settingsAbout',['vendor/handlebars'], function(H) {
var name = 'settings/settingsAbout';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;


  buffer += "<div class=\"separator big center tabStart\" tabindex=\"0\"> <span class=\"icon wunderlist-icon\"></span> <h2>Wunderlist</h2> <h3 class=\"version\">";
  if (stack1 = helpers.release) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.release; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</h3> <p>Copyright © 2014 6 Wunderkinder Gmbh</p> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_rights_reserved", options) : helperMissing.call(depth0, "localized", "label_rights_reserved", options)))
    + "</p> <p> <a class=\"toggle-privacy-policy\" target=\"blank\" tabindex=\"0\" role=\"link\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_privacy_policy", options) : helperMissing.call(depth0, "localized", "settings_privacy_policy", options)))
    + " / ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_imprint", options) : helperMissing.call(depth0, "localized", "settings_imprint", options)))
    + "</a> - <a href=\"http://www.wunderlist.com/terms-of-use\" target=\"blank\" tabindex=\"0\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_terms_of_use", options) : helperMissing.call(depth0, "localized", "settings_terms_of_use", options)))
    + "</a> </p> </div> <div class=\"separator privacy-wrapper hidden\"></div> <div class=\"separator big\"> <ul class=\"social-links\"> <li><span class=\"icon google-btn arrow-btn\"></span><a href=\"https://plus.google.com/105356136092009396367\" target=\"_blank\" class=\"button withArrow\">+1</a></li> <li><span class=\"icon facebook-btn arrow-btn\"></span><a href=\"http://www.facebook.com/wunderlist\" target=\"_blank\" class=\"button withArrow\">Like</a></li> <li><span class=\"icon twitter-btn arrow-btn\"></span><a href=\"https://twitter.com/wunderlist\" target=\"_blank\" class=\"button withArrow\">Follow</a></li> <li><span class=\"icon sixw-btn arrow-btn\"></span><a href=\"http://www.6wunderkinder.com\" target=\"_blank\" class=\"button withArrow\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_visit_website", options) : helperMissing.call(depth0, "localized", "settings_visit_website", options)))
    + "</a></li> <li><span class=\"icon support-btn arrow-btn\"></span><a href=\"http://support.wunderlist.com/\" target=\"_blank\" class=\"button withArrow\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_get_help", options) : helperMissing.call(depth0, "localized", "settings_get_help", options)))
    + "</a></li> </ul> </div> <div class=\"separator center\"> <h2 tabindex=\"0\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_third_party_libraries", options) : helperMissing.call(depth0, "localized", "settings_third_party_libraries", options)))
    + "</h2> <div tabindex=\"0\" class=\"separator noline\"> <h3>RequireJS</h3> <p> Copyright © 2010-2011 The Dojo Foundation<br> License: <a href=\"https://github.com/jrburke/requirejs/blob/master/LICENSE\" target=\"_blank\">BSD, MIT</a> </p> </div> <div tabindex=\"0\" class=\"separator noline\"> <h3>jQuery</h3> <p> Copyright © 2012 jQuery Foundation and other contributors<br> License: <a href=\"http://jquery.org/license\" target=\"_blank\">jquery.org/license</a> </p> </div> <div tabindex=\"0\" class=\"separator noline\"> <h3>Backbone.js</h3> <p> Copyright © 2010-2012 Jeremy Ashkenas, DocumentCloud<br> License: <A href=\"https://github.com/documentcloud/backbone/blob/master/LICENSE\" target=\"_blank\">github.com/documentcloud/backbone</a> </p> </div> <div tabindex=\"0\" class=\"separator noline\"> <h3>Lo-Dash</h3> <p> Copyright © 2012 John-David Dalton<br> License: <a href=\"https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\" target=\"_blank\">MIT</a> </p> </div> <div tabindex=\"0\" class=\"separator noline\"> <h3>jQuery++</h3> <p> Copyright © 2012 Bitovi<br> License: <a href=\"https://github.com/bitovi/jquerypp/blob/master/license.md\" target=\"_blank\">github.com/bitovi/jquerypp</a> </p> </div> <div tabindex=\"0\" class=\"separator noline\"> <h3>Stylus</h3> <p> Copyright © 2010 LearnBoost<br> License: <a href=\"https://github.com/LearnBoost/stylus/blob/master/LICENSE\" target=\"_blank\">MIT</a> </p> </div> <div tabindex=\"0\" class=\"separator noline\"> <h3>handlebars.js</h3> <p> Copyright © 2011 by Yehuda Katz<br> License: <a href=\"https://github.com/wycats/handlebars.js/blob/master/LICENSE\" target=\"_blank\">github.com/wycats/handlebars.js</a> </p> </div> <div tabindex=\"0\" class=\"separator noline\"> <h3>Moment.js</h3> <p> Copyright © 2011-2012 Tim Wood<br> License: <a href=\"https://github.com/timrwood/moment/blob/master/LICENSE\" target=\"_blank\">github.com/timrwood/moment</a> </p> </div> <div tabindex=\"0\" class=\"separator noline\"> <h3>Mousetrap</h3> <p>Copyright © 2012 Craig Campbell<br/>License: <a href=\"http://www.apache.org/licenses/LICENSE-2.0.html\" target=\"_blank\">Apache License 2.0</a></p> </div> <div tabindex=\"0\" class=\"separator noline\"> <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_background_credits", options) : helperMissing.call(depth0, "localized", "settings_background_credits", options)))
    + "</h2> <p> <a href=\"http://artcore-illustrations.de/\" target=\"_blank\">Artcore</a> - <a href=\"http://www.dvq.co.nz/\" target=\"_blank\">Matthew Skiles</a> - <a href=\"http://500px.com/constantin_gololobov\" target=\"_blank\">Constantin Gololobov</a> - <a href=\"http://www.flickr.com/photos/tycn\" target=\"_blank\">Brandon Harris</a> - <a href=\"http://www.justinkiner.com/\" target=\"_blank\">Justin Kiner</a> - <a href=\"http://bo0xvn.deviantart.com/\" target=\"_blank\">Vu Minh Hai</a> - <a href=\"http://www.jinnavanringen.com\" target=\"_blank\">Jinna Van Ringen</a> - <a href=\"http://fiftyfootshadows.net/\" target=\"_blank\">John Carey</a> </p> </div> <div class=\"tabEnd\" tabindex=\"0\" data-key-aria-label=\"aria_user_menu_hint\"/> </div>";
  return buffer;
  });
});
define('views/Settings/SettingsAboutView',[

  'application/runtime',

  'views/Settings/Controllers/SettingsAboutViewController',

  'views/Settings/SettingsSubview',

  'views/Settings/SettingsPrivacyPolicyView',

  'template!settings/settingsAbout'

], function (runtime, SettingsAboutViewController, SettingsSubview, SettingsPrivacyPolicyView, aboutTemplate, undefined) {

  

  var config = runtime.config;

  var _super = SettingsSubview.prototype;

  return SettingsSubview.extend({

    'template': aboutTemplate,

    'className': 'content-inner',

    'implements': [SettingsAboutViewController],

    'emits': {

      'click .toggle-privacy-policy': 'click:privacyPolicy', // 'onClickTogglePrivacyPolicy',
      'click a': 'click:link', //'onClickLink'
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.privacyView = self.addSubview(new SettingsPrivacyPolicyView());
    },

    'render': function () {

      var self = this;

      var data = {
        'release': config.release
      };

      _super.render.call(self, data);

      self.privacyEl = self.$('.privacy-wrapper');
      self.privacyEl.html(self.privacyView.render().el);


      return self;
    },

    'showTogglePrivacyPolicy': function () {

      var self = this;
      self.privacyEl.toggleClass('hidden');
      if (!self.privacyEl.hasClass('hidden')) {
        console.log('focussing');
        self.defer(function () {
          self.privacyView.$el.focus();
        });
      }
    }
  });
});
define('models/ProductManagementModel',[
  'application/runtime',

  'wunderbits/WBModel',

  'collections/ContactCollection',
  'collections/ProductsCollection'

], function (runtime, WBModel, ContactCollection, ProductsCollection, undefined) {

  

  var _super = WBModel.prototype;

  var $ = runtime.$;
  var _ = runtime._;
  var io = runtime.io;

  var fromSyncOptions = {
    'fromSync': true
  };

  return WBModel.extend({

    'defaults': {
      'online': true
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.bindOnceTo(runtime, 'groupProduct:addAdmin', function () {

        self.addUserToSubscription(runtime.user.id, null);
      });

      self.products = new ProductsCollection('/products/all');
      self.specialProducts = new ProductsCollection('/products/specialProducts');

      self.pendingInvites = [];
    },

    'fetch': function () {

      var self = this;
      var def = new $.Deferred();

      if (!self.products || !self.products.length) {

        io.get('/products/adyen', {
          'locale': runtime.settings.attributes.account_locale || 'en'
        }).done(function (data) {

          self.set('online', true);
          self.products.reset(data);

          def.resolve();
        }).fail(function () {

          self.set('online', false);
          def.reject();
        });
      }
      else {

        def.resolveWith(null, [self]);
      }

      return def.promise();
    },

    'fetchSpecialProducts': function () {

      var self = this;
      var deferred = new $.Deferred();

      if (!self.specialProducts || !self.specialProducts.length) {

        io.get('/products/6wunderkinder', {
          'locale': runtime.settings.attributes.account_locale || 'en'
        }).done(function (data) {

          self.set('online', true);
          self.specialProducts.reset(data);

          deferred.resolve();
        }).fail(function () {

          self.set('online', false);
          deferred.reject();
        });
      }
      else {
        deferred.resolve(self);
      }

      return deferred.promise();
    },

    'getCurrentTeamProduct': function () {

      return runtime.user.attributes.group_product;
    },

    'removeUserFromSubscription': function (memberId, callback) {

      var self = this;
      var contacts = new ContactCollection('/contacts/all');

      io['delete']('/subscription/memberships', {

        'user_id': memberId
      }).done(function () {

        var memberArray = runtime.user.attributes.group_product.members;
        var newMembers;

        var memberToRemove = contacts.get(memberId) || runtime.user;
        memberToRemove.set('isTeamMember', false).trigger('change');
        newMembers = _.reject(memberArray, {'id':memberToRemove.attributes.id});

        if (!memberToRemove.attributes.name) {

          contacts.remove(memberToRemove, fromSyncOptions);
        }

        memberArray = newMembers;
        var newProduct = self.createNewTeamProduct(memberArray);

        runtime.user.save({
          'group_product':newProduct
        });

        runtime.trigger('sync:start');

        callback && typeof callback === 'function' && callback();
      });
    },

    'addUserToSubscription': function (memberId, email, callback, errorCallback) {

      var self = this;
      var contacts = new ContactCollection('/contacts/all');

      io.post('/subscription/memberships', {

        'user_id': memberId,
        'email':email
      }).done(function () {

        if (memberId) {

          var memberArray = _.clone(runtime.user.attributes.group_product.members);

          var newModel = contacts.get(memberId) || runtime.user;
          newModel.set('isTeamMember', true).trigger('change');
          memberArray.push(newModel.attributes);

          var newProduct = self.createNewTeamProduct(memberArray);

          runtime.user.save({
            'group_product':newProduct
          });
        }

        self.removePendingInvite(memberId);

        runtime.trigger('sync:start');

        callback && typeof callback === 'function' && callback();
      }).fail(function (data) {

        self.removePendingInvite(memberId);

        if (data && data.response && data.response.data && data.response.data.errors) {

          errorCallback && typeof errorCallback === 'function' && errorCallback();
        }
      });
    },

    'createNewTeamProduct': function(memberArray) {

      var newProduct = _.clone(runtime.user.attributes.group_product);
      newProduct.members = memberArray;

      return newProduct;
    },

    'changeGroupProduct': function (newProductId, callback) {

      var self = this;

      io.put('/subscriptions/group', {

        'product_id': newProductId
      }).done(function () {

        // we have to trigger a sync, to get the new products from wunderpay
        runtime.trigger('sync:start');
        // on syncEnd, run the callback
        self.bindOnceTo(runtime, 'sync:end', function () {

          callback && typeof callback === 'function' && callback();
        });
      });
    },

    'addPendingInvites': function (memberId, deferred) {

      var self = this;

      self.pendingInvites.push(memberId);

      return deferred.resolve();
    },

    'removePendingInvite': function (memberId) {

      var self = this;
      var removeIndex = self.pendingInvites.indexOf(memberId);

      self.pendingInvites.splice(removeIndex, 1);
    },

    'getPendingInviteCount': function () {

      return this.pendingInvites.length;
    },

    'cancelTeamPlan': function (callback, errorCallback) {

      var self = this;

      io['delete']('/subscriptions/group').done(function () {

        runtime.trigger('sync:start');
        // on syncEnd, run the callback
        self.bindOnceTo(runtime, 'sync:end', function () {
          callback && typeof callback === 'function' && callback();
          runtime.trigger('groupProduct:cancelled');
        });
      }).fail(function () {

        errorCallback && typeof errorCallback === 'function' && errorCallback();
      });
    },

    'getTotalSlotsCount': function () {

      var teamProduct = this.getCurrentTeamProduct();
      return teamProduct && teamProduct.max_memberships_count;
    },

    'getTakenSlotsCount': function () {

      var groupProduct = runtime.user.attributes.group_product;

      return groupProduct && groupProduct.members.length;
    },

    'getOpenSlotsCount': function () {

      var self = this;
      return self.getTotalSlotsCount() - self.getTakenSlotsCount();
    },

    'isSlotsOpen': function () {

      return this.getTotalSlotsCount() > this.getTakenSlotsCount();
    },

    'sync': function () {}
  });
});
define('views/Settings/GroupBillingOutletController',[

  'application/runtime',

  'wunderbits/WBViewController'

], function (
  runtime,
  WBViewController,
  undefined
) {

  

  var config = runtime.config;

  return WBViewController.extend({

    'implements': {
      'goTo:externalGroupBilling': 'goToGroupBilling'
    },

    'goToGroupBilling': function () {

      runtime.openUrl(config.business.host + '/team_accounts/new', true);
    }
  });
});
define('templates/settings/settingsGroupBilling',['vendor/handlebars'], function(H) {
var name = 'settings/settingsGroupBilling';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"group-billing\"> <div class=\"hero-img\"></div> <div class=\"separator noline center teams-heading\"> <h2 class=\"strong\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "group_billing_packages_title", options) : helperMissing.call(depth0, "localized", "group_billing_packages_title", options)))
    + "</h2> <p class=\"team-plan\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "group_billing_packages_text", options) : helperMissing.call(depth0, "localized", "group_billing_packages_text", options)))
    + "</p> </div> <div class=\"cols\"> <div class=\"col-15\"></div> <div class=\"col-70\"> <button class=\"full green go-to-business\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_label_buy_wunderlist_for_business", options) : helperMissing.call(depth0, "localized", "button_label_buy_wunderlist_for_business", options)))
    + "</button> </div> <div class=\"col-15 price\"></div> </div> </div>";
  return buffer;
  });
});
define('styles/_groupBillingStyle',[],function() { return {'name': '_groupBillingStyle', 'styles': "#wunderlist-base .service-unavailable .line:after{height:50% !important} #wunderlist-base .service-unavailable .line:before{height:50% !important} #wunderlist-base .group-billing h2{font-size:21px;color:#423e3e;margin:14px 0 10px 0;text-shadow:0 1px 0 #fff} #wunderlist-base .group-billing h3{width:90%;margin:0 auto} #wunderlist-base .group-billing .cancelation-options.closed{display:none} #wunderlist-base .group-billing .hero-img{background-image:url(\"images/team-pro-hero.png\");background-repeat:no-repeat;width:550px;height:150px;margin-left:-20px;margin-top:-10px;-webkit-background-size:cover;-moz-background-size:cover;background-size:cover;background-position:center center} #wunderlist-base .group-billing .offline{text-align:center !important;font-weight:bold} #wunderlist-base .group-billing .manage-team{padding-bottom:0 !important;} #wunderlist-base .group-billing .manage-team h3{font-size:16px !important;text-shadow:0 1px 0 #fff;margin-bottom:0 !important} #wunderlist-base .group-billing .manage-team .counter{color:#bdbcbb;font-weight:bold;font-size:12px;text-shadow:0 1px 0 #fff;} #wunderlist-base .group-billing .manage-team .counter.maxed{color:#c82525} #wunderlist-base .group-billing p{line-height:24px;color:#423e3e;width:90%;font-size:14px;margin:0 auto;text-shadow:0 1px 0 #fff;} #wunderlist-base .group-billing p.team-plan{font-size:14px !important;line-height:21px !important} #wunderlist-base .group-billing p.cancel-error{color:#f00 !important} #wunderlist-base .group-billing p.cancel-notice .token_0{font-weight:bold} #wunderlist-base .group-billing p a{color:#4597df} #wunderlist-base .group-billing input{padding:8px;-webkit-border-radius:4px;border-radius:4px;width:95%;margin:0 auto;display:block} #wunderlist-base .group-billing button,#wunderlist-base .group-billing .button{color:#fff;margin-bottom:3px;} #wunderlist-base .group-billing button.manage-link,#wunderlist-base .group-billing .button.manage-link{color:#666 !important;margin:-14px 0 0 0;position:absolute;width:79px;height:29px;display:none} #wunderlist-base .group-billing button.view,#wunderlist-base .group-billing .button.view{color:#666 !important;font-size:13px;line-height:13px;padding-top:4px;margin:0 0 1px 8px;-webkit-border-radius:3px;border-radius:3px} #wunderlist-base .group-billing button.buy-plan,#wunderlist-base .group-billing .button.buy-plan{margin:-14px 0 0 -42px;right:192px;position:absolute;width:120px;line-height:0;height:25px;height:29px;font-size:12px;-webkit-border-radius:3px;border-radius:3px} #wunderlist-base .group-billing button.buy,#wunderlist-base .group-billing .button.buy,#wunderlist-base .group-billing button.go-to-business,#wunderlist-base .group-billing .button.go-to-business{font-size:16px;padding:15px 25px} #wunderlist-base .group-billing button.upgrade,#wunderlist-base .group-billing .button.upgrade{font-size:13px;line-height:13px;padding-top:4px;margin:0 0 1px 8px;-webkit-border-radius:3px;border-radius:3px} #wunderlist-base .group-billing button.cancel-terms-of-use,#wunderlist-base .group-billing .button.cancel-terms-of-use,#wunderlist-base .group-billing button.return-cancel,#wunderlist-base .group-billing .button.return-cancel,#wunderlist-base .group-billing button.return-change,#wunderlist-base .group-billing .button.return-change{color:#423e3e} #wunderlist-base .group-billing .button-wrapper,#wunderlist-base .group-billing .manage{padding-right:0 !important} #wunderlist-base .group-billing .alert-image{text-align:right} #wunderlist-base .group-billing .plan-change .change-btn-group{margin:10px 0} #wunderlist-base .group-billing .plan-change p{font-size:14px !important;line-height:21px !important;font-weight:normal} #wunderlist-base .group-billing .member-count-response{text-align:center;color:#d62822;} #wunderlist-base .group-billing .member-count-response a{color:#d62822;font-weight:bold} #wunderlist-base .group-billing .buy-options .center{text-align:center;font-size:13px;font-weight:normal;margin-bottom:10px;line-height:17px !important;} #wunderlist-base .group-billing .buy-options .center.error{color:#c82525} #wunderlist-base .group-billing .manage{margin-top:8px !important;text-decoration:none !important;} #wunderlist-base .group-billing .manage .contacts.slots-free li .invitable{opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50);} #wunderlist-base .group-billing .manage .contacts.slots-free li .invitable .state{display:none} #wunderlist-base .group-billing .manage .group:first-child{background:none} #wunderlist-base .group-billing .manage li:hover .pro-teammate{background-position:-610px -132px} #wunderlist-base .group-billing .manage li .name{color:#423e3e} #wunderlist-base .group-billing .manage li .description{color:$linkblue} #wunderlist-base .group-billing .manage li .state{float:right;position:relative;} #wunderlist-base .group-billing .manage li .state.add-pro-teammate{opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50);} #wunderlist-base .group-billing .manage li .state.add-pro-teammate:hover{opacity:1;-ms-filter:none;filter:none} #wunderlist-base .group-billing .manage li .pro-small{position:absolute;right:-8px;top:-5px} #wunderlist-base .group-billing .manage li::after{content:'';width:90%;height:1px;margin-top:-10px;position:absolute;background-image:-webkit-gradient(linear, left top, right top, color-stop(0, #fff), color-stop(0.5, #dedede), color-stop(1, #fff));background-image:-webkit-linear-gradient(left, #fff 0%, #dedede 50%, #fff 100%);background-image:-moz-linear-gradient(left, #fff 0%, #dedede 50%, #fff 100%);background-image:-o-linear-gradient(left, #fff 0%, #dedede 50%, #fff 100%);background-image:-ms-linear-gradient(left, #fff 0%, #dedede 50%, #fff 100%);background-image:linear-gradient(left, #fff 0%, #dedede 50%, #fff 100%);background-repeat:no-repeat} #wunderlist-base .group-billing .manage li:last-child:after{height:0} #wunderlist-base .group-billing .groups{width:430px;margin:15px auto 15px auto;background:#fff;border:1px solid #cdcdcd;-webkit-border-radius:4px;border-radius:4px;color:#7d7b7c;position:relative;-webkit-box-shadow:0 1px 1px rgba(0,0,0,0.1);box-shadow:0 1px 1px rgba(0,0,0,0.1);font-size:14px;font-weight:normal;} #wunderlist-base .group-billing .groups.products .state{margin:0 11px 0 10px} #wunderlist-base .group-billing .groups.line:after{content:'';position:absolute;width:1px;height:87.5%;border-left:1px solid #cdcdcd;right:25%;top:0} #wunderlist-base .group-billing .groups.line-save:before{content:'';position:absolute;width:1px;height:87.5%;border-left:1px solid #cdcdcd;right:42%;top:0;z-index:99999} #wunderlist-base .group-billing .groups.summary{margin-bottom:10px;padding-top:3px;padding-bottom:3px;} #wunderlist-base .group-billing .groups.summary .group:first-child{-webkit-border-radius:4px !important;border-radius:4px !important;background:none !important} #wunderlist-base .group-billing .groups.summary:after{right:50%;height:100%} #wunderlist-base .group-billing .groups .group{padding-top:15px;padding-bottom:15px;text-align:left;margin-bottom:0 !important;border-top:1px solid #cdcdcd;position:relative;overflow:hidden;} #wunderlist-base .group-billing .groups .group.group-item.has-savings:hover{cursor:pointer;background:#f8fbfe;border-top:1px solid #dae8f7;border-bottom:1px solid #dae8f7;} #wunderlist-base .group-billing .groups .group.group-item.has-savings:hover:last-child{border-bottom:none !important;border-bottom-left-radius:4px;border-bottom-right-radius:4px} #wunderlist-base .group-billing .groups .group.group-item.has-savings:hover + .group{border-top:none !important;} #wunderlist-base .group-billing .groups .group.group-item.has-savings:hover + .group.selected{border-top:1px solid #b4d3e6 !important;margin-top:-1px} #wunderlist-base .group-billing .groups .group div.name span,#wunderlist-base .group-billing .groups .group div.name .token_0{font-weight:bold;min-width:25px;display:inline-block;text-align:center} #wunderlist-base .group-billing .groups .group div.price{text-align:center;color:#2b88d9;font-weight:bold;font-size:17px;line-height:15px;padding-right:0 !important} #wunderlist-base .group-billing .groups .group div.save{text-align:center;color:#fff;font-size:17px;font-weight:bold;position:relative;z-index:99;} #wunderlist-base .group-billing .groups .group div.save.amount{color:#94b978;font-weight:bold;font-size:16px;line-height:0} #wunderlist-base .group-billing .groups .group div.save .highlight{position:absolute;margin-left:-27px;margin-top:-5px;z-index:-50} #wunderlist-base .group-billing .groups .group div.accounts-summary{font-weight:normal;font-size:15px;line-height:15px;} #wunderlist-base .group-billing .groups .group div.accounts-summary .token_0{font-weight:bold} #wunderlist-base .group-billing .groups .group div.large-team{font-size:14px;color:#666;text-align:center;display:inline-block;font-weight:bold;} #wunderlist-base .group-billing .groups .group div.large-team a{display:inline-block;color:#2b88d9} #wunderlist-base .group-billing .groups .group .savings{position:absolute;font-size:10px;right:-70px;opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);z-index:9999;display:block;margin-top:-4px} #wunderlist-base .group-billing .groups .group.headings{cursor:default;} #wunderlist-base .group-billing .groups .group.headings .team-heading{line-height:1;font-size:15px} #wunderlist-base .group-billing .groups .group.headings .price{line-height:17px;color:#737272;} #wunderlist-base .group-billing .groups .group.headings .price span{display:block;font-size:11px;font-weight:normal;color:#a3a3a2} #wunderlist-base .group-billing .groups .group:first-child{border-top-left-radius:4px;border-top-right-radius:4px;font-weight:bold;border-top:none !important;background:#fbfbfb !important;padding-top:6px;padding-bottom:5px;} #wunderlist-base .group-billing .groups .group:first-child.input-container{background:none !important;position:relative;} #wunderlist-base .group-billing .groups .group:first-child.input-container input{margin-top:5px;padding-right:30px} #wunderlist-base .group-billing .groups .group:first-child.input-container .clear{position:absolute;right:18px;top:18px} #wunderlist-base .group-billing .groups .group.search-container{border-top:none;padding-top:4px;padding-bottom:0;} #wunderlist-base .group-billing .groups .group.search-container .info-container{margin:-3px 0 10px 4px;vertical-align:top;} #wunderlist-base .group-billing .groups .group.search-container .info-container .name{font-weight:bold;font-size:13px;margin-top:2px} #wunderlist-base .group-billing .groups .group.search-container .info-container .description{margin-top:3px;font-size:11px;} #wunderlist-base .group-billing .groups .group.search-container .info-container .description.empty-name{font-size:13px;margin-top:10px;font-weight:bold} #wunderlist-base .group-billing .groups .group.search-container .info-container .description a{display:block;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis} #wunderlist-base .group-billing .groups .group.search-container .error-already-pro{color:#d62822;padding:20px} #wunderlist-base .group-billing .groups .group.selected{border-top:1px solid #b4d3e6 !important;background:#e2f1fb !important;border-bottom:1px solid #b4d3e6 !important;} #wunderlist-base .group-billing .groups .group.selected:last-child{border-bottom:none !important;border-bottom-left-radius:4px;border-bottom-right-radius:4px} #wunderlist-base .group-billing .groups .group.selected + .group{border-top:none !important} #wunderlist-base .group-billing .groups .group.current .manage-link{display:block !important} #wunderlist-base .group-billing .groups .group.current .buy-plan{display:none !important} #wunderlist-base .group-billing .groups .group .owned{height:21px;margin-top:-7px;background-position:-441px -164px;cursor:default} #wunderlist-base .group-billing .groups .group .coachmark-text{font-size:12px;color:#bdbcbb;text-align:center;width:300px;line-height:17px;margin:0 auto;padding-bottom:20px} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){#wunderlist-base .group-billing .hero-img{background-image:url(\"images/team-pro-hero@2x.png\")} }" }; });
define('views/Settings/GroupBillingOutlet',[
  'application/runtime',

  'collections/ProductsCollection',

  'models/ProductManagementModel',
  'views/Settings/GroupBillingOutletController',

  'wunderbits/WBViewPresenter',

  'template!settings/settingsGroupBilling',

  'style!_groupBillingStyle'

], function (
  runtime,
  ProductsCollection,
  ProductManagementModel,
  GroupBillingController,
  WBViewPresenter,
  groupBillingTemplate,
  groupBillingStyle,
  undefined
) {

  

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'template': groupBillingTemplate,

    'className': 'content-inner',

    'styles': [groupBillingStyle],

    'implements': [GroupBillingController],

    'observes': {
      'runtime': {
        'groupProduct:cancelled': 'render',
        'language:change': 'render'
      }
    },

    'emits': {
      'click .go-to-business': 'goTo:externalGroupBilling'
    },


    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);
      self.bindTo(runtime.user, 'change', self.checkProState);
    },

    'checkProState': function (userModel) {

      var self = this;
      var groupProduct = userModel.attributes.group_product;

      if (groupProduct && groupProduct.expired_at) {

        self.render();
      }
      else if (runtime.user.isProTeamAdmin()) {

        runtime.trigger('route:preferences/team-manage');
      }
    },

    'render': function () {

      var self = this;
      _super.render.apply(self);

      return self;
    }
  });
});

define('templates/settings/proAccountUser',['vendor/handlebars'], function(H) {
var name = 'settings/proAccountUser';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, self=this, functionType="function", escapeExpression=this.escapeExpression;

function program1(depth0,data) {
  
  
  return "invitable";
  }

function program3(depth0,data) {
  
  
  return " <div class=\"icon pro-small\"></div> ";
  }

function program5(depth0,data) {
  
  
  return " empty-name";
  }

function program7(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <a class=\"icon state ";
  stack1 = helpers['if'].call(depth0, depth0.isTeamMember, {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.canBeInvited, {hash:{},inverse:self.noop,fn:self.program(10, program10, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"><span/></a> ";
  return buffer;
  }
function program8(depth0,data) {
  
  
  return "pro-teammate";
  }

function program10(depth0,data) {
  
  
  return "add-pro-teammate";
  }

  buffer += "<div class=\"cols ";
  stack1 = helpers.unless.call(depth0, depth0.isTeamMember, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"> <div class=\"col-10\"> <div class=\"avatar medium\"> ";
  stack1 = helpers['if'].call(depth0, depth0.isPro, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " <img /> </div> </div> <div class=\"col-82 info-container\"> <div class=\"name\">";
  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</div> <div class=\"description ";
  stack1 = helpers.unless.call(depth0, depth0.name, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"><a>";
  if (stack1 = helpers.email) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.email; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</a></div> </div> <div class=\"col-07\"> ";
  stack1 = helpers['if'].call(depth0, depth0.isOnline, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </div> </div> ";
  return buffer;
  });
});
// this view is an individual contact or potential contact for the group billing
// search in the ManageProAccountsView.
define('views/Settings/ProAccountUserView',[
  'application/runtime',

  'wunderbits/WBView',

  'template!settings/proAccountUser',

  'style!_groupBillingStyle'

], function (
  runtime,
  WBView,
  proAccountUserTemplate,
  groupBillingStyle,
  undefined
) {

  

  var _super = WBView.prototype;

  return WBView.extend({

    'template': proAccountUserTemplate,

    'tagName': 'li',

    'styles': [groupBillingStyle],

    'renderData': {
      'avatar': undefined,
      'name': undefined,
      'email': undefined,
      'canBeInvited': false,
      'isTeamMember': false,
      'isPro': undefined,
      'isOnline': undefined
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.bindTo(self.model, 'change:isTeamMember', function (model) {

        if (!model.attributes.isTeamMember) {

          self.$el.addClass('remove-member');
        }
      });

      self.bindTo(self.model, 'change:pro', self.render);
    },

    'formatData': function (data) {

      var self = this;
      data.avatar = self.model.attributes.avatar;
      data.name = self.model.attributes.name;
      data.email = self.model.attributes.email;
      data.isPro = data.email === runtime.user.attributes.email ? runtime.user.isPro(): self.model.attributes.pro || self.model.attributes.isTeamMember;

      data.isTeamMember = self.model.attributes.isTeamMember;
      // TODO: clean up this statement, its confusing
      // essentially, a person is invitable if he is not a team member, if he is not pro, if he has a name and is not a "new fake contact" or if the email is a valid one.
      data.canBeInvited = !data.isTeamMember && !data.isPro && ((data.name && !self.model.attributes.createdContact) || self.model.attributes.isValidEmail);
      data.isOnline = self.isOnline || runtime.env.isOnline();

      return data;
    },

    'render': function (model, isOnline) {

      var self = this;
      self.model = model || self.model;
      self.isOnline = isOnline;

      _super.render.call(self, self.formatData(self.renderData));

      self.$el.attr('rel', self.model.id);

      return self;
    }
  });
});

define('templates/settings/manageProAccounts',['vendor/handlebars'], function(H) {
var name = 'settings/manageProAccounts';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"group input-container\"> <input type=\"text\" data-key-placeholder=\"group_billing_email_address_input_placeholder\"/> <span class=\"clear icon detail-delete hidden\"></span> </div> <div class=\"cols group search-container\"> <div class=\"col-03\"></div> <div class=\"col-96 height-adjust\"> <ul class=\"contacts\"> </ul> </div> <p class=\"coachmark-text hidden\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "group_billing_search_coachmark", options) : helperMissing.call(depth0, "localized", "group_billing_search_coachmark", options)))
    + "</p> <p class=\"error-already-pro hidden\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "error_goup_billing_user_already_pro", options) : helperMissing.call(depth0, "localized", "error_goup_billing_user_already_pro", options)))
    + "</p> </div> ";
  return buffer;
  });
});
// this view is the manage pro status view, where an admin can add and remove
// users by searching or adding an email

define('views/Settings/ManageProAccountsView',[
  'application/runtime',

  'models/ProductManagementModel',

  'collections/ContactCollection',

  'views/Settings/ProAccountUserView',

  'wunderbits/WBView',
  'wunderbits/WBModel',

  'wunderbits/helpers/email',

  'template!settings/manageProAccounts',

  'style!_groupBillingStyle'

], function (
  runtime,
  ProductManagementModel,
  ContactsCollection,
  ProAccountUserView,
  WBView, WBModel,
  EmailHelper,
  manageProAccountsTemplate,
  groupBillingStyle,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var global = runtime.global;

  var _super = WBView.prototype;

  return WBView.extend({

    'template': manageProAccountsTemplate,

    'styles': [groupBillingStyle],

    'events': {
      'keyup input': '_checkFriendMatch',
      'click .add-pro-teammate': '_addTeammate',
      'click .pro-teammate': '_removeTeammate',
      'click .clear': '_resetSearch'
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);
      self.model = new ProductManagementModel();
      self.contacts = new ContactsCollection('/contacts/all');

      self._online = runtime.env.isOnline();
      self._debouncedTriggerResize = _.debounce(self._triggerResize, 250);
      self.bindConnectionEvents();
    },

    'bindConnectionEvents': function () {

      var self = this;

      self._onlineHandler && self.unbindFrom(self._onlineHandler);
      self._offlineHandler && self.unbindFrom(self._offlineHandler);

      self._onlineHandler = self.bindTo(runtime.env, 'online', function () {

        self._online = true;
        self.render();
      });

      self._offlineHandler = self.bindTo(runtime.env, 'offline', function () {

        self._online = false;
        self.render();
      });
    },

    'render': function () {

      var self = this;

      _super.render.call(self);

      self.model.fetch().done(function () {

        self.renderPeople(self.contacts.getTeamMembers());
      });

      self.bindTo(runtime.user, 'change:group_product', function () {

        if (!runtime.user.isProTeamAdmin()) {
          self.contacts.resetTeamStatus();
        }
      });

      return self;
    },

    '_checkKeyDown': function (ev) {

      var self = this;

      if (ev && ev.which === 13) {

        if (self.fakeModel && self.fakeModel.attributes.isValidEmail || self.enterKeyEnabled) {

          self.$('.add-pro-teammate').trigger('click');
        }
      }
    },

    '_checkFriendMatch': function (ev) {

      var self = this;
      // if there is no ev, this method is called from the removal of a teamate
      var term = ev && $(ev.target).val() || '';
      var matches;
      self.enterKeyEnabled = false;
      self.$('.clear').removeClass('hidden');

      self.hideCoachmark();

      if (!self._online) {

        return;
      }

      if (term.length > 0) {

        matches = self.contacts.searchByEmailOrName(term);
        self.renderPeople(matches);

        // if there are matches, trigger a resize to make sure the the modal
        // stays in the viewport
        self.defer(function () {
          !self.$el.closest('.content-inner').hasClass('hidden') && (matches.length) && $(global).trigger('resize');
        });
      }

      // if there are no matches, create a fake user
      if (!matches || !matches.length || term.indexOf('@') > 0) {
        self._createInvitable(term, matches);
      }

      if (matches && matches.length === 1) {
        self.enterKeyEnabled = true;
      }

      if (matches && matches.length > 0) {
        self.fakeModel = null;
      }

      // simply clear the search if there are no terms
      if (!term) {

        self._resetSearch();
      }

      self._checkKeyDown(ev);
    },

    'clearResults': function () {

      var self = this;
      var $contacts = self.$('.contacts');
      var $heightAdjuster = self.$('.height-adjust');

      $contacts.empty();
      $heightAdjuster.removeAttr('style');
      $contacts.removeClass('invisible');
      self._debouncedTriggerResize();
    },

    '_triggerResize': function () {

      var self = this;
      !self.$el.closest('.content-inner').hasClass('hidden') && $(global).trigger('resize');
    },

    'renderPeople': function (people) {

      var self = this;
      var $contacts = self.$('.contacts');
      var maxSlots = self.model.getTotalSlotsCount();
      var currentSlots = self.model.getTakenSlotsCount();

      self.enterKeyEnabled = false;

      $contacts.toggleClass('slots-free', maxSlots === currentSlots);

      var peopleFrag = document.createDocumentFragment();
      // no people in the group should show the coachmark

      people.length === 0 || (people.length === 1 && people[0].id === runtime.user.id) ? self.showCoachmark(): self.hideCoachmark();

      _.each(people, function (model) {

        var user = self.addSubview(new ProAccountUserView({
          'model': model
        }), model.id);

        peopleFrag.appendChild(user.render(model, self._online).el);
      });

      // hide the container so that the height can be calculated
      $contacts.addClass('invisible hide-overflow').html(peopleFrag);

      var height = $contacts.height();

      if (people.length && height === 0 && runtime.currentRoute().indexOf('team-manage') !== -1) {
        // in the event that the height was trying to be calculated and wasn't
        // ready, wait till next tick to try again.
        self.defer(self.renderPeople, self, people);
        return;
      }

      var $heightAdjuster = self.$('.height-adjust');

      $heightAdjuster.css('height', height);
      $contacts.removeClass('invisible hide-overflow');
      self._debouncedTriggerResize();
    },

    'showCoachmark': function () {

      var self = this;
      self.$('.coachmark-text').removeClass('hidden');
      self.renderLocalized();
    },

    'hideCoachmark': function () {

      this.$('.coachmark-text, .error-already-pro').addClass('hidden');
    },

    '_resetSearch': function (ev) {

      var self = this;

      if (ev) {

        self.$('input').val('');
      }

      self.$('input').focus();
      self.$('.clear').addClass('hidden');
      self.clearResults();
      self.renderPeople(self.contacts.getTeamMembers());
    },

    '_addTeammate': function (ev) {

      var self = this;
      var id = self._getIdByTarget(ev);
      var emailValue = self.$('input').val();

      var pendingDeferred = new $.Deferred();

      self.model.addPendingInvites(id, pendingDeferred).then(function () {

        var maxSlots = self.model.getTotalSlotsCount();
        var currentSlots = self.model.getTakenSlotsCount();
        var pendingSlots = self.model.getPendingInviteCount();

        if (maxSlots >= (currentSlots + pendingSlots)) {

          var $target = $(ev.target).closest('a');
          $target.addClass('loading');
          // no id means that the email is not a friend of this admin, will
          //either need to invite them or make them a wunderlist user
          if (!id) {

            self._requestInviteByIdOrEmail(null, emailValue, $target);

            return;
          }

          var teammateModel = self.contacts.get(id);

          teammateModel.set({
            'member': 'true'
          });

          self._requestInviteByIdOrEmail(id, null, $target, teammateModel);
        }
        else {

          self.model.removePendingInvite(id);
        }
      });
    },

    '_requestInviteByIdOrEmail': function (id, email, buttonTarget, model) {

      var self = this;

      // this method adds a user to a sub. if it fails with an error code,
      // the requested user is already pro.

      self.model.addUserToSubscription(id, email, function () {

        buttonTarget.removeClass('loading');
        buttonTarget.closest('.invitable').removeClass('invitable');
        buttonTarget.removeClass('add-pro-teammate').addClass('added-pro-teammate');
        runtime.user.trigger('change:group_product');
        self.$('input').val('').focus();

        _.delay(function () {

          model && model.set({
            'pro': 'true'
          }).trigger('change');

          buttonTarget.removeClass('added-pro-teammate').addClass('pro-teammate');

          if (!id) {

            self._checkFriendMatch();
          }
        }, 1500);
      },
      function () {

        buttonTarget.removeClass('loading');
        buttonTarget.closest('.invitable').removeClass('invitable');
        self.$('.error-already-pro').removeClass('hidden');

        model && model.set({
          'pro': 'true'
        }).trigger('change');
      });
    },

    '_removeTeammate': function  (ev) {

      var self = this;
      var id = self._getIdByTarget(ev);

      var $target = $(ev.target).closest('a');
      $target.addClass('loading');

      var teammateModel = self.contacts.get(id);
      teammateModel.set({
        'member':'false',
        'pro':false
      });

      self.model.removeUserFromSubscription(id, function () {

        $target.removeClass('loading');
        self.$('input').val('');

        _.delay(function () {

          self._checkFriendMatch();
        }, 400);
      });
    },

    '_getIdByTarget': function (ev) {

      return $(ev.target).closest('li').attr('rel');
    },

    '_createInvitable': function (currentText, matches) {

      var self = this;
      matches || (matches = []);

      var isEmail = EmailHelper.isValidEmail(currentText);

      if (self.fakeModel) {

        self.fakeModel.set({
          'name': isEmail ? currentText.split('@')[0] : currentText,
          'email': isEmail ? currentText : '',
          'isValidEmail':isEmail
        });
      }
      else {

        self.fakeModel = new WBModel({
          'avatar': null,
          'name': isEmail ? '' : currentText,
          'email': isEmail ? currentText : '',
          'isValidEmail':isEmail,
          'createdContact': true
        });
      }

      // if the currentText is an exact match on an existing match, don't
      // add (and render) it twice
      var exists = _.find(matches, function (match) {
        var key = isEmail ? 'email' : 'name';
        return match.attributes[key].toLowerCase() === currentText.toLowerCase();
      });

      exists || (matches = matches.concat(self.fakeModel));

      self.renderPeople(matches);
    }
  });
});

define('templates/settings/settingsGroupManage',['vendor/handlebars'], function(H) {
var name = 'settings/settingsGroupManage';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType="function";

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.isAllowedToChangePlan, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  return buffer;
  }
function program2(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <button class=\"full green upgrade\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "group_billing_upgrade_button_label", options) : helperMissing.call(depth0, "localized", "group_billing_upgrade_button_label", options)))
    + " </button> ";
  return buffer;
  }

function program4(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <a class=\"cancel-pro-package\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "group_billing_cancel_team_plan", options) : helperMissing.call(depth0, "localized", "group_billing_cancel_team_plan", options)))
    + "</a> ";
  return buffer;
  }

function program6(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <span>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_label_expires_in_$", depth0.expiresIn, options) : helperMissing.call(depth0, "localized", "settings_label_expires_in_$", depth0.expiresIn, options)))
    + "</span> ";
  return buffer;
  }

  buffer += "<div class=\"group-billing\"> <div class=\"separator noline center\"> <h2 class=\"strong\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "group_billing_team_plan_title", options) : helperMissing.call(depth0, "localized", "group_billing_team_plan_title", options)))
    + "</h2> <p class=\"team-plan\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "group_billing_team_plan_text", options) : helperMissing.call(depth0, "localized", "group_billing_team_plan_text", options)))
    + "</p> </div> <div class=\"groups line summary\"> <div class=\"cols group\"> <div class=\"col-03\"></div> <div class=\"col-49 accounts-summary\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "group_billing_plan_table_package_name_$", depth0.productSize, options) : helperMissing.call(depth0, "localized", "group_billing_plan_table_package_name_$", depth0.productSize, options)))
    + " </div> <div class=\"col-17 price\"> ";
  if (stack2 = helpers.price) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.price; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </div> <div class=\"col-27\"> ";
  stack2 = helpers.unless.call(depth0, depth0.isCancelled, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </div> </div> </div> <div class=\"separator noline center manage-team\"> <h3 class=\"strong\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "group_billing_manage_team_header", options) : helperMissing.call(depth0, "localized", "group_billing_manage_team_header", options)))
    + "</h3> <span class=\"counter\"></span> </div> <div class=\"groups manage\"> </div> <div class=\"separator cancel-wrapper\"></div> <div class=\"separator delete\"> <div class=\"cancelation-options closed\"> <div class=\"cols\"> <div class=\"col-30 alert-image\"> <div class=\"icon attention\"></div> </div> <div class=\"col-60\"> <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "group_billing_cancel_header", options) : helperMissing.call(depth0, "localized", "group_billing_cancel_header", options)))
    + "</h3> <p class=\"small\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "group_billing_cancel_text", options) : helperMissing.call(depth0, "localized", "group_billing_cancel_text", options)))
    + "</p> <p class=\"manage-account-error error-message hidden\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_manage_subscription_error", options) : helperMissing.call(depth0, "localized", "settings_manage_subscription_error", options)))
    + "</p> </div> </div> <div class=\"cols small\"> <div class=\"col-32\"></div> <div class=\"col-40\"> <div class=\"cols\"> <div class=\"col-50\"> <button class=\"return-cancel full\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_no", options) : helperMissing.call(depth0, "localized", "button_no", options)))
    + "</button> </div> <div class=\"col-50\"> <button class=\"confirm-cancel full red\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_yes", options) : helperMissing.call(depth0, "localized", "button_yes", options)))
    + "<span/></button> </div> </div> </div> <div class=\"col-20\"></div> </div> </div> <div class=\"nopadding center show-delete-wrapper\"> <a class=\"cancel-success hidden\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "setting_label_cancel_subscription_success", options) : helperMissing.call(depth0, "localized", "setting_label_cancel_subscription_success", options)))
    + "</a> ";
  stack2 = helpers.unless.call(depth0, depth0.isCancelled, {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " ";
  stack2 = helpers['if'].call(depth0, depth0.isCancelled, {hash:{},inverse:self.noop,fn:self.program(6, program6, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " <p class=\"cancel-error hidden\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "api_error_general_error", options) : helperMissing.call(depth0, "localized", "api_error_general_error", options)))
    + "</p> </div> </div> </div>";
  return buffer;
  });
});
// this view is the main view for managing group billing statuses.
// It gives details about an admin's current account, options to change plan,
// and has the ManageProAccountsView as a subView to manage subscriptions.

define('views/Settings/ManageTeamsView',[
  'application/runtime',

  'models/ProductManagementModel',

  'views/Settings/ManageProAccountsView',

  'vendor/moment',

  'wunderbits/WBView',

  'template!settings/settingsGroupManage',

  'style!_groupBillingStyle'

], function (
  runtime,
  ProductManagementModel,
  ManageProAccountsView,
  moment,
  WBView,
  groupManageTemplate,
  groupBillingStyle,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var global = runtime.global;
  var config = runtime.config;

  var _super = WBView.prototype;

  return WBView.extend({

    'template': groupManageTemplate,

    'className': 'content-inner',

    'styles': [groupBillingStyle],

    'renderData': {
      'productSize': undefined,
      'price': undefined,
      'isCancelled': undefined,
      'planLabel': undefined,
      'expiresIn': undefined,
      'isAllowedToChangePlan': undefined
    },

    'events': {
      'click .cancel-pro-package': '_showCancelProPlanConfirmation',
      'click .return-cancel': 'hideCancelProPlanConfirmation',
      'click .confirm-cancel': '_confirmCancelTeamPlan',

      'click .upgrade': 'changePlan'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.manageProAccounts = self.addSubview(new ManageProAccountsView());
      self.model = new ProductManagementModel();

      self.bindTo(runtime.user, 'change:group_product', function () {

        self._deferredRender();

        self._updatePlaninfo();

        var attrs = runtime.user.attributes;
        if (attrs.group_product && attrs.group_product.expired_at) {

          runtime.trigger('route:preferences/teams');
        }
      });

      self.bindTo(runtime.env, 'online',  self._updateCounter);
      self.bindTo(runtime.env, 'offline', function () {

        self._updateCounter('offline');
      });
    },

    'formatData': function (data) {

      var self = this;
      var current = self.model.getCurrentTeamProduct();

      if (!current) {
        return data;
      }

      data.isAllowedToChangePlan = current.provider !== '6wunderkinder';
      data.productSize = current.max_memberships_count;
      data.price = current.value;
      data.isCancelled = runtime.user.attributes.group_product.canceled;
      data.planLabel = runtime.language.getText([data.isCancelled ? 'group_billing_view_plans_button_label': 'group_billing_upgrade_button_label']);
      data.expiresIn = moment(runtime.user.attributes.group_product.expires_at).from(moment().sod(), true);

      return data;
    },

    'render': function () {

      var self = this;

      if (runtime.user.isProTeamAdmin()) {

        var regularProducts = self.model.fetch();
        var specialProducts = self.model.fetchSpecialProducts();

        self.when(regularProducts, specialProducts).done(self._deferredRender, self).fail(function () {

          runtime.trigger('offline');
        }, self);
      }

      return self;
    },

    '_deferredRender': function () {

      var self = this;

      var current = self.model.getCurrentTeamProduct();
      if (!self.destroyed && current) {

        var data = self.formatData(self.renderData);
        _super.render.call(self, data);

        self.$('.manage').append(self.manageProAccounts.render().el);
        // this has to be timed out here, because of the animation in the search
        // container. the resize is bound in WBModal, which calls _checkScroll
        _.delay(function () {

          if (!self.destroyed) {

            runtime.trigger('window:resize');
          }
        }, 350);

        self._updateCounter();
      }
    },

    'changePlan': function () {

      var self = this;
      var product = self.model.getCurrentTeamProduct();
      var price = product.value;
      var amount = product.max_memberships_count;
      var expires = self.getUserFormattedDate(product.expires_at);
      global.open(config.business.host + '/team_size/new?current_amount=' + amount + '&current_price=' + price + '&expires_at=' + expires,'_blank');
    },

    'getUserFormattedDate': function (date) {

      var dateSetting = runtime.settings.attributes.date_format;
      return moment(date).format(dateSetting);
    },

    '_showCancelProPlanConfirmation': function () {

      var self = this;
      self.$('.cancel-pro-package').fadeOut();

      var $cancelPrompt = self.$('.cancelation-options');
      $cancelPrompt.slideDown(300, function () {
        $(global).trigger('resize');
      });
    },

    'hideCancelProPlanConfirmation': function (ev) {

      var self = this;
      ev && self.$('.cancel-pro-package').fadeIn();
      var $cancelPrompt = self.$('.cancelation-options');

      $cancelPrompt.slideUp(300, function () {

        self.$('.confirm-cancel').removeClass('loading');

        if (!ev) {

          self.$('.cancel-pro-package').addClass('hidden');
          self.$('.cancel-success').removeClass('hidden');
        }
      });
    },

    '_confirmCancelTeamPlan': function () {

      var self = this;
      self.$('.confirm-cancel').addClass('loading');
      self.model.cancelTeamPlan(self.hideCancelProPlanConfirmation, function () {

        self.$('.confirm-cancel').removeClass('loading');
        self.$('.cancel-error').removeClass('hidden');
      });
    },

    '_updatePlaninfo': function  ()  {

      var self = this;
      var currentProduct = self.model.getCurrentTeamProduct();

      if (!currentProduct) {

        return;
      }

      var price = currentProduct && currentProduct.value;
      var groupProduct = runtime.user.attributes.group_product;

      if (groupProduct && groupProduct.canceled) {

        self.$('.upgrade').html(runtime.language.getText('group_billing_view_plans_button_label'));
      }

      if (currentProduct.max_memberships_count) {

        self.$('.accounts-summary').text(runtime.language.getText('group_billing_plan_table_package_name_$', currentProduct.max_memberships_count));
      }

      self.$('.price b').html(price);
    },

    '_updateCounter': function (connectionState) {

      var self = this;
      var $counter = self.$('.counter');

      if (connectionState === 'offline') {

        // change this
        self.$('.counter').text(runtime.language.getText('userbar_no_internet_connection'));
        return;
      }

      var takenCount = self.model.getTakenSlotsCount();
      var freeCount = self.model.getTotalSlotsCount();
      var countText = runtime.language.getText('group_billing_manage_count_$_of_$', String(takenCount), String(freeCount));

      $counter.toggleClass('maxed', takenCount === freeCount);
      $counter.html(countText);

      self.$('.contacts').toggleClass('slots-free', self.model.getTakenSlotsCount() === self.model.getTotalSlotsCount());
    }
  });
});

define('views/Settings/Controllers/SettingsViewController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  Keycodes,
  WBModalViewController,
  undefined
) {

  

  var $ = runtime.$;

  return WBModalViewController.extend({

    'implements': {
      'click:tab': 'onSelectSubview',
      'keydown:tab': 'handleKeys'
    },

    'onSelectSubview': function (e) {

      var self = this;
      var view = self.view;
      var section = $(e.target).closest('a').attr('rel');

      // If my pro subscription is a team subscription managed by an admin
      if (section === 'teams' && runtime.user.isProTeamAdmin()) {
        section = 'team-manage';
      }

      runtime.trigger('analytics:Preferences:clickTab', section);
      runtime.trigger('route:preferences/' + section);
      view.accountView && !view.accountView.destroyed && view.accountView.closeAllEdits();
    },

    'handleKeys': function (ev) {

      var self = this;
      if (ev.which === Keycodes.tab) {
        self.handleTabKey(ev);
      }
    },

    'handleTabKey': function (ev) {

      var view = this.view;

      if (!ev.shiftKey) {
        view.getSubview(view.currentSection).$('.tabStart').focus();
      }

      ev.preventDefault();
      ev.stopPropagation();
    }
  });
});
define('templates/settings/settings',['vendor/handlebars'], function(H) {
var name = 'settings/settings';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;

function program1(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <li class=\"teams ";
  stack1 = helpers['if'].call(depth0, depth0.isMember, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\" role=\"tab\" tabindex=\"0\" data-key-aria-label=\"settings_heading_team\" data-key-aria-label=\"\"> <a rel=\"teams\"> <span class=\"icon settings-group\"></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_heading_team", options) : helperMissing.call(depth0, "localized", "settings_heading_team", options)))
    + " </a> </li> ";
  return buffer;
  }
function program2(depth0,data) {
  
  
  return " hidden ";
  }

  buffer += "<div class=\"tabs\"> <ul role=\"tabpanel\"> <li role=\"tab\" tabindex=\"0\" tabindex=\"0\" data-key-aria-label=\"settings_heading_general\"> <a rel=\"general\"> <span class=\"icon settings-general\"></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_heading_general", options) : helperMissing.call(depth0, "localized", "settings_heading_general", options)))
    + " </a> </li> <li role=\"tab\" tabindex=\"0\"data-key-aria-label=\"settings_heading_account\"> <a rel=\"account\"> <span class=\"icon settings-account\"></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_heading_account", options) : helperMissing.call(depth0, "localized", "settings_heading_account", options)))
    + " </a> </li> ";
  stack2 = helpers.unless.call(depth0, depth0.isUnregistered, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " <li role=\"tab\" tabindex=\"0\" data-key-aria-label=\"\" data-key-aria-label=\"settings_heading_shortcuts\"> <a rel=\"shortcuts\"> <span class=\"icon settings-shortcuts\"></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_heading_shortcuts", options) : helperMissing.call(depth0, "localized", "settings_heading_shortcuts", options)))
    + " </a> </li> <li role=\"tab\" tabindex=\"0\" data-key-aria-label=\"\" data-key-aria-label=\"settings_heading_sidebar\"> <a rel=\"sidebar\"> <span class=\"icon settings-sidebar\"></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_heading_sidebar", options) : helperMissing.call(depth0, "localized", "settings_heading_sidebar", options)))
    + " </a> </li> <li role=\"tab\" tabindex=\"0\" data-key-aria-label=\"\" data-key-aria-label=\"settings_heading_notification\"> <a rel=\"notifications\"> <span class=\"icon settings-notifications\"></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_heading_notification", options) : helperMissing.call(depth0, "localized", "settings_heading_notification", options)))
    + " </a> </li> <li role=\"tab\" tabindex=\"0\" data-key-aria-label=\"settings_heading_about\"> <a rel=\"about\"> <span class=\"icon settings-about\"></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_heading_about", options) : helperMissing.call(depth0, "localized", "settings_heading_about", options)))
    + " </a> </li> </ul> </div> ";
  return buffer;
  });
});
define('styles/modals/settingsModal',[],function() { return {'name': 'modals/settingsModal', 'styles': "#settings{width:550px;} #settings .actions{text-align:center;} #settings .actions button{float:none} #settings .time-format text{margin:0 8px} #settings .manage{color:#4597df;text-decoration:underline} #settings .pro-section-style h3{font-size:24px;font-weight:600;margin-bottom:10px;color:#544f4f;} #settings .pro-section-style h3.upgrade-header,#settings .pro-section-style h3.yay-pro{font-weight:normal;} #settings .pro-section-style h3.upgrade-header .token_0,#settings .pro-section-style h3.yay-pro .token_0{font-weight:bold} #settings .pro-section-style .teams{margin-top:10px} #settings .pro-section-style p{color:#737272;text-shadow:0 1px 0 #fff;margin-bottom:11px;line-height:17px} #settings .pro-section-style b{display:block} #settings .pro-section-style .accept-terms a{font-weight:bold;color:#737272} #settings .pro-benefits div.benefit{background:url(\"images/sprites/benefits.png\");} #settings .pro-benefits div.benefit.comments{background-position:0 -102px;width:138px;height:102px} #settings .pro-benefits div.benefit.assigning{background-position:0 0;width:138px;height:102px} #settings .pro-benefits div.benefit.subtasks{background-position:-276px 0;width:138px;height:102px} #settings .pro-benefits div.benefit.backgrounds{background-position:-138px 0;width:138px;height:102px} #settings .pro-benefits div.benefit.attachments{background-position:-138px -102px;width:138px;height:102px;margin-left:1px} #settings .pro-benefits h4{font-size:16px;margin-bottom:6px;} #settings .pro-benefits h4 span.light{font-weight:200;font-size:14px} #settings .pro-benefits p{width:270px;font-size:13px;line-height:17px;color:#737272} #settings .filter-setting{line-height:20px;} #settings .filter-setting .icon{margin-right:10px;margin-top:-3px} #settings .filter-setting.disabled label{color:#bdbcbb} #settings .filter-setting.disabled .icon{opacity:.8;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\";filter:alpha(opacity=80)} #settings .filter-setting.disabled select{pointer-events:auto} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){#settings .pro-benefits div.benefit{background-image:url(\"images/sprites/benefits-retina.png\");-webkit-background-size:414px;-moz-background-size:414px;background-size:414px} }" }; });
define('views/Settings/SettingsView',[

  'application/runtime',

  'collections/ServiceCollection',

  'helpers/Auth/facebook',

  'wunderbits/WBModalView',
  'wunderbits/WBBlurHelper',

  'views/Settings/SettingsGeneralView',
  'views/Settings/SettingsAccountView',
  'views/Settings/SettingsFiltersView',
  'views/Settings/SettingsShortcutsView',
  'views/Settings/SettingsNotificationsView',
  'views/Settings/SettingsAboutView',
  'views/Settings/GroupBillingOutlet',
  'views/Settings/ManageTeamsView',

  'views/Settings/Controllers/SettingsViewController',

  'template!settings/settings',

  'style!modals/settingsModal'

], function (
  runtime,
  ServiceCollection,
  FacebookHelper,
  WBModalView, WBBlurHelper,
  GeneralView, AccountView, FiltersView, ShortcutsView, NotificationsView, AboutView, GroupBillingOutlet, ManageTeamsView,
  SettingsViewController,
  settingsTemplate,
  settingsModalStyle,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var _super = WBModalView.prototype;
  var _blur = WBBlurHelper;

  var subViewMap = [
    {'name': 'general', 'const': GeneralView},
    {'name': 'account', 'const': AccountView},
    {'name': 'shortcuts', 'const': ShortcutsView},
    {'name': 'sidebar', 'const': FiltersView},
    {'name': 'notifications', 'const': NotificationsView},
    {'name': 'about', 'const': AboutView},
    {'name': 'team-manage', 'const': ManageTeamsView}
  ];

  return WBModalView.extend({

    'template': settingsTemplate,

    'styles': [
      settingsModalStyle
    ],

    'implements': [
      SettingsViewController
    ],

    'emits': {

      'click .tabs li a': 'click:tab',
      'keydown .tabs li': 'keydown:tab'
    },

    'renderData': {

      'isMember': undefined,
      'isUnregistered': undefined
    },

    'initialize': function (options) {

      // SettingsView will handle show and hide of each tab section subview
      var self = this;
      self.subViewMap = subViewMap.slice(0);

      if (runtime.user.isProTeamAdmin()) {
        self.subViewMap.splice(2, 0, {'name': 'team-manage', 'const': ManageTeamsView});
      } else {
        self.subViewMap.splice(2, 0, {'name': 'teams', 'const': GroupBillingOutlet});
      }

      // No group billing management, unless user is the admin
      if (runtime.user.isProTeamMember() && !runtime.user.isProTeamAdmin()) {
        self.subViewMap.splice(7, 1);
      }

      // No group billing on unregistered mode
      if (runtime.user.isUnregistered()) {
        self.subViewMap.splice(6, 1);
      }

      self._isRendered = false;

      options || (options = {});

      _super.initialize.apply(self, arguments);

      self.bindTo(runtime, 'settings:navigate', self.navigate);
      self.bindTo(runtime, 'settings:close', self.onSettingsClose);

      self.bindTo(runtime.user, 'change:product', function() {

        self.updateTeamsTab();
        self.render();
      });

      self.bindTo(runtime, 'settings:section', self.renderWithSection);
    },

    'formatData': function (data) {

      var user = runtime.user;

      data.isMember = user.isProTeamMember();
      data.isUnregistered = runtime.user.isUnregistered();

      return data;
    },

    'render': function () {

      var self = this;

      var dialogOptions = {
        'id': 'settings',
        'title': runtime.language.getLabel('userbar_preferences').toString(),
        'close': runtime.language.getText('button_done')
      };

      if (self._isRendered) {
        return;
      }

      _super.render.call(self, dialogOptions);

      var tabsEl = $(self.template(self.formatData(self.renderData)))[0];
      var $content = self.$('.content');
      $content[0].appendChild(tabsEl);

      self._isRendered = true;

      self.renderLocalized();
      self.updateTeamsTab();

      return self;
    },

    'renderWithSection': function (section, options) {

      var self = this;

      self.currentSection = section;

      _blur.run();

      self.render();
      self.onClose = self.onClose || options && options.onClose;
      self.returnFocus = runtime.focus;

      // save facebook service first so that account tab will render with correct disconnect/connect
      if (options && options.token) {

        self.registerFacebookService(options.token);
      }

      // destroy previous shown view
      var view;
      _.each(self.subViewMap, function (subView) {

        if (subView.name !== section) {
          view = self[subView.name + 'View'];
          view && !view.destroyed && view.destroy();
        }
      });

      // render section
      var renderSection = section === 'account-pro' ? 'account' : section;
      var viewData = _.where(self.subViewMap, {'name': renderSection})[0];
      var newView = self[viewData.name + 'View'];
      if (!newView || newView.destroyed) {
        newView = self[viewData.name + 'View'] = self.addSubview(new viewData['const'](undefined, options), viewData.name);
        newView.render();
        self.$('.tabs').after(newView.el);
        self.bindToSubview(newView);
      }

      if (section === 'account-pro') {
        // reset the section to render the correct view
        section = 'account';
        if (self.accountView) {
          self.accountView.subscriptionView.render();
          self.accountView.subscriptionView.showBenefits();

          self.defer(function () {
            self.accountView.subscriptionView.$('.tabStart').focus();
          });
        }

      }
      else {
        self.accountView && self.accountView.subscriptionView && self.accountView.subscriptionView.hideBenefits();
      }

      self.showRenderedSection(section);
    },

    'bindToSubview': function (subview) {

      var self = this;

      self.bindTo(subview, 'focus:tab', self.refocusTab);

      // The change:content event is triggered by the Shortcuts tab view,
      // to make sure the dialog is scrollable when toggling advanced shortcuts
      self.bindTo(subview, 'change:content', self.checkScrolling);
    },

    'refocusTab': function () {

      var self = this;
      self.$('.tabs li.active').focus();
    },

    'showRenderedSection': function (section) {

      var self = this;
      self[section + 'View'] && self[section + 'View'].$el.removeClass('hidden');
      self.$('.active').removeClass('active');

      if (section === 'team-manage') {
        self[section + 'View'].manageProAccounts.render();
        section = 'teams';
      }

      self.$('a[rel=' + section + ']').parent().addClass('active').focus();
      self.checkScrolling();

      self.$('.content-inner').scrollTop(0);

      runtime.trigger('title:set', section, {
        'isPrefsTabKey': true
      });
    },

    'onSettingsClose': function () {

      var self = this;
      self.isVisible() && self.trigger('click:close');
    },

    'onRemove': function () {

      var self = this;

      // clean out all subviews
      _.each(self.subViewMap, function (subView) {

        self[subView.name + 'View'] = null;
      });
    },


    'updateTeamsTab': function () {

      var self = this;
      var showTeamsTab = true;

      if (runtime.user.isProTeamMember() && !runtime.user.isProTeamAdmin()) {
        showTeamsTab = false;
      }

      self.$('li.teams').toggleClass('hidden', !showTeamsTab);
    },

    'navigate': function (direction) {

      var self = this;
      var tabs = _.pluck(self.subViewMap, 'name');
      var thisSection = self.currentSection === 'team-manage' ? 'teams' : self.currentSection;
      var currentIndex = _.indexOf(tabs, thisSection);
      var newIndex, tab;

      if (direction === 'right') {
        newIndex = (currentIndex + 1) <= (tabs.length - 2) ? currentIndex + 1 : 0;
      }
      else if (direction === 'left') {
        newIndex = (currentIndex - 1) >= 0 ? currentIndex - 1 : tabs.length - 2;
      }

      // to tab view
      if (direction === 'right' || direction === 'left') {

        tab = tabs[newIndex] === 'teams' && runtime.user.isProTeamAdmin() ? 'team-manage' : tabs[newIndex];

        _blur.run();
        runtime.trigger('route:preferences/' + tab);
        self.accountView && !self.accountView.destroyed && self.accountView.closeAllEdits();
      }
    },

    //FACEBOOK
    'registerFacebookService': function (token) {

      var self = this;

      self.accountView.toggleConnectToFBButtonStatus('connecting');

      self.bindTo(runtime, 'services:ready', function () {

        FacebookHelper.registerFacebookService(token);
      });
    }
  });
});

define('views/Main/ModalManagerView',[

  'application/runtime',

  'wunderbits/WBViewPresenter',

  'labs/FlashCards/FlashCardsModalView',
  'views/Social/RateModalView',
  'views/Social/TellModalView',
  'views/Debug/DebugModalView',
  'views/IYF/InviteYourFriendsView',
  'labs/LabsView',
  'views/Main/WhatsNewView',
  'views/Modals/ConfirmationModalView',
  'views/Reminders/RemindersView',
  'views/Settings/SettingsView'

], function (
  runtime,
  WBViewPresenter,
  FlashCardsModalView, RateModalView, TellModalView, DebugModalView, InviteYourFriendsView, LabsView, WhatsNewView, ConfirmationModalView, RemindersView, SettingsView,
  undefined
) {

  

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'id': 'modals',

    'modalClasses': {

      'flashCards': FlashCardsModalView,
      'labs': LabsView,
      'inviteYourFriends': InviteYourFriendsView,
      'whatsNew': WhatsNewView,
      'rate': RateModalView,
      'tell': TellModalView,
      'debug': DebugModalView,
      'confirm': ConfirmationModalView,
      'preferences': SettingsView
    },

    'observes': {
      'runtime': {
        'modal:show': 'showModal',
        'modal:close': 'closeModal',
        'modal:confirm': 'showConfirmation'
      }
    },

    'render': function () {

      var self = this;
      _super.render.apply(self, arguments);

      var view = self.addSubview(new RemindersView(), 'reminders');
      self.$el.append(view.render().el);

      return self;
    },

    'showConfirmation': function (options) {

      var self = this;
      self.showModal('confirm', options);
    },

    'closeModal': function () {

      var self = this;
      var view = self.getSubview('modal');
      view && view.trigger('close');
    },

    'showModal': function (name, options) {

      var self = this;
      var ViewClass = self.modalClasses[name];
      options.name = name;
      var view = self.addSubview(new ViewClass(options), 'modal');
      self.$el.append(view.render().el);
    }
  });
});
define('wunderbits/helpers/selection',[

  '../lib/dependencies',
  '../WBSingleton'

], function (dependencies, WBSingleton) {

  

  var $ = dependencies.$;

  return WBSingleton.extend({

    // set a custom selection
    setSelectionRange: function (input, selectionStart, selectionEnd) {

      var range;

      if (input.setSelectionRange) {

        input.focus();
        input.setSelectionRange(selectionStart, selectionEnd);
      }
      else if (input.createTextRange) {

        range = input.createTextRange();
        range.collapse(true);
        range.moveEnd('character', selectionEnd);
        range.moveStart('character', selectionStart);
        range.select();
      }
    },

    // shortcut for moving cursor to specific point
    setCaretToPos: function (input, pos) {

      var self = this;
      self.setSelectionRange(input, pos, pos);
    },

    // sets caret to start or end, based on where on the input clicked
    setCaretByClick: function (input, el, e) {

      var self = this;
      var setPosition = self.getCaretFromMousePos(input, el, e);

      self.setCaretToPos(input, setPosition);
    },

    // sets caret to start or end, based on where on the input clicked
    getCaretFromMousePos: function (input, el, e) {

      var $input = $(input);
      var $el = $(el);
      var elHeight = $el.height();
      var elY = $el.offset().top;
      var elMiddleY = elY + (elHeight / 2);
      var clickY = e.pageY;
      var setPosition = 0;

      //console.log('elY: ', elY, 'elHeight: ', elHeight, 'elMid: ', elMiddleY, 'rawClick: ', clickY);

      if (clickY > elMiddleY) {

        setPosition = $input.val().length;
      }

      return setPosition;
    },

    // find current caret position
    getCaretPos: function (input) {

      var caretPos, range, bookmark;
      if (input.setSelectionRange) {

        caretPos = input.selectionStart;
      }
      else if (document.selection && document.selection.createRange) {

        range = document.selection.createRange();
        bookmark = range.getBookmark();
        caretPos = bookmark.charCodeAt(2) - 2;
      }

      return caretPos;
    },

    //Source: http://stackoverflow.com/questions/3545018/selected-text-event-trigger-in-javascript
    getSelectedText: function () {

      var text = '';

      if (window.getSelection) {
        text = window.getSelection().toString();

        //Aparently Firefox textarea elements don't always work with getSelection()
        //SEE: http://forums.mozillazine.org/viewtopic.php?f=25&t=2268557
        if (!text && document.activeElement && document.activeElement.value && typeof document.activeElement.value === 'string') {

          var activeEl = document.activeElement;
          text = activeEl.value.substring(activeEl.selectionStart, activeEl.selectionEnd);
        }
      }
      else if (document.getSelection) {
        text = document.getSelection().toString();
      }
      else if (document.selection) {    //IE
        text = document.selection.createRange().text;
      }

      return text;
    }
  });
});
define('wunderbits/helpers/emoji',[

  '../lib/dependencies',

  './strings',
  './xss',

  '../WBSingleton',

  '../mixins/EmojiData'

], function (
  dependencies,
  StringsHelper, XSSHelper,
  WBSingleton,
  EmojiData,
  undefined
) {

  

  var $ = dependencies.$;

  return WBSingleton.extend({

    'emojify': function (textNode) {

      var self = this;

      var text = XSSHelper.clean(textNode.nodeValue);
      text = self.getEmojifiedString(text);
      $(textNode).replaceWith($('<div/>').html(text).html());
    },

    'getEmojifiedString': function (string) {

      var self = this;
      var unicode, name;

      for (var i = 0, len = string.length; i < len; i++) {
        unicode = string && StringsHelper.unicodeAt(string, i).toString(16);
        name = EmojiData.unicodeIndex[unicode];
        if (name) {

          unicode = '<span title="' + name + '" class="emoji emoticon _' + unicode + '">&#x' + unicode + '</span>';
          string = StringsHelper.replaceAt(string, i, unicode, 1);
          string = self.getEmojifiedString(string);
        }
      }

      return string;
    }

  });
});
define('wunderbits/mixins/DomTreeMixin',[

  '../global',
  '../WBMixin'

], function(
  global,
  WBMixin,
  undefined
) {

  

  var document = global.document;
  var filter = global.NodeFilter;

  var acceptNodesFn = function () {
    return filter.FILTER_ACCEPT;
  };

  function process (node, fn, context) {
    var newNodes = fn.call(context, node);
    newNodes && swapNode(node, newNodes);
  }

  function swapNode (oldNode, newNodes) {

    var parentNode = oldNode.parentNode;
    if (!parentNode) {
      return;
    }

    var current = oldNode, node;
    newNodes = [].slice.call(newNodes);
    while (newNodes.length) {
      node = newNodes.pop();
      parentNode.insertBefore(node, current);
      current = node;
    }
    parentNode.removeChild(oldNode);
  }

  function useTreeWalker (parent, fn, context) {

    var treeWalker = document.createTreeWalker(parent, filter.SHOW_TEXT, acceptNodesFn, false);
    while (treeWalker.nextNode()) {
      process(treeWalker.currentNode, fn, context);
    }
  }

  function useNodeLooper (parent, fn, context, recursive) {

    // gather all child nodes into an array
    var nodes = [].slice.call(parent.childNodes), node;

    // and loop through them
    while (nodes.length) {
      node = nodes.shift();

      // if it's a text node, then process it
      if (node.nodeType === 3) {
        process(node, fn, context);
      }
      // otherwise for all other nodes, gather all the children into the array
      else if (recursive && node.childNodes.length) {
        nodes.push.apply(nodes, node.childNodes);
      }
    }
  }

  return WBMixin.extend({

    // walk all text nodes & replace them with marked tokens
    'renderTokens': function ($el, helper) {

      var self = this;
      $el = $el || self.$el;

      if ($el.length) {
        self.walkTextNodes($el[0], helper.tokenize, helper);
      }

      return self;
    },

    // Find all text nodes & apply fn over each text node
    'walkTextNodes': function (parent, fn, context, recursive) {

      context || (context = this);

      // recursive by default
      (recursive === undefined) && (recursive = true);

      // use tree walker, if available
      if (recursive && 'createTreeWalker' in  document) {
        useTreeWalker(parent, fn, context);
      }
      // fallback to old-school "looping through the nodes"
      else {
        useNodeLooper(parent, fn, context, recursive);
      }
    }
  });
});

define('wunderbits/mixins/UnicodeEmojiViewMixin',[
  '../helpers/emoji',
  './DomTreeMixin'
], function(
  EmojiHelper,
  DomTreeMixin,
  undefined
) {

  

  return DomTreeMixin.extend({

    'renderEmoji': function ($el) {

      var self = this;
      $el = $el || self.$el;

      if ($el.length) {
        self.walkTextNodes($el[0], EmojiHelper.emojify, EmojiHelper);
      }
      return self;
    }
  });

});
define('templates/sidebarItem',['vendor/handlebars'], function(H) {
var name = 'sidebarItem';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  
  return " <span class=\"icon list-sharing hidden\" aria-hidden=\"true\"></span> ";
  }

  buffer += "<a href=\"";
  if (stack1 = helpers.url) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.url; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" tabindex=\"-1\" aria-label=\"";
  if (stack1 = helpers.titleText) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.titleText; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\"> <span class=\"icon delete-list hidden right\" aria-hidden=\"true\"></span> <span class=\"icon ";
  if (stack1 = helpers.icon) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.icon; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" aria-hidden=\"true\">";
  if (stack1 = helpers.iconLabel) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.iconLabel; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</span> <span class=\"count\" aria-hidden=\"true\"></span> <span class=\"title\">";
  if (stack1 = helpers.title) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.title; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</span> </a> ";
  stack1 = helpers.unless.call(depth0, depth0.isSmartList, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " <span class=\"input-wrapper hidden\"> <input maxlength=\"255\" class=\"edit\" type=\"text\"/> </div>";
  return buffer;
  });
});
define('styles/sidebarItem',[],function() { return {'name': 'sidebarItem', 'styles': ".sidebarItem{position:relative;overflow:hidden;height:36px;z-index:15;} .sidebarItem:focus{outline:none} .sidebarItem.unreadComments[rel=\"conversations\"] .title,.sidebarItem.unreadComments.list .title{color:#1476cc} .sidebarItem.animate-up{height:0 !important;overflow:hidden} .sidebarItem.collapsed{height:0;overflow:hidden} .sidebarItem.animate-down{height:36px;overflow:hidden} .sidebarItem.active-drag{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #f9f9f9), color-stop(1, #f0f0f0));background-image:-webkit-linear-gradient(top, #f9f9f9 0, #f0f0f0 100%);background-image:-moz-linear-gradient(top, #f9f9f9 0, #f0f0f0 100%);background-image:-o-linear-gradient(top, #f9f9f9 0, #f0f0f0 100%);background-image:-ms-linear-gradient(top, #f9f9f9 0, #f0f0f0 100%);background-image:linear-gradient(top, #f9f9f9 0, #f0f0f0 100%);} .sidebarItem.active-drag .list-sharing{display:none !important} .sidebarItem.touch-edit-disabled{opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50)} .sidebarItem .list-sharing{display:none;position:absolute;right:12px;top:9px;opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60);z-index:25} .sidebarItem .input-wrapper{position:absolute;top:5px;left:37px;right:10px;} .sidebarItem .input-wrapper input{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;font-weight:bold;border:1px solid #3f84b3;-webkit-box-shadow:inset 0 1px 4px rgba(0,0,0,0.1);box-shadow:inset 0 1px 4px rgba(0,0,0,0.1)} .sidebarItem .input-wrapper:-moz-placeholder{color:rgba(0,0,0,0.3)} .sidebarItem a{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;height:36px;padding:8px;padding-right:12px;display:block;color:#423e3e;font-weight:bold;position:relative;text-shadow:0 1px 0 #fff;background:url(\"images/textures/divider.png\") center bottom repeat-x;-webkit-user-select:none;} .sidebarItem a .count{margin-top:2px;float:right;color:#b0b0b0} .sidebarItem a .edit-mode{float:right} .sidebarItem a .title{white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis;position:absolute;top:10px;left:38px;right:42px} .sidebarItem a.addlist{z-index:600;background:none;} .sidebarItem a.addlist .icon.list-list{display:none} .sidebarItem a.addlist.active{margin-top:-2px;border:none;border-top:2px solid #ececec;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;height:36px;background:url(\"images/textures/list-active.jpg\");color:#fff;text-shadow:0 1px 2px rgba(0,0,0,0.3);} .sidebarItem a.addlist.active .icon.detail-add{display:none} .sidebarItem a.addlist.active .icon.list-list{display:block} .sidebarItem a.addlist.active .title,.sidebarItem a.addlist.active:hover .title{color:#fff} .sidebarItem a.addlist .title{color:#999} .sidebarItem a.addlist:hover .title{color:#625f5f} .sidebarItem a.addlist:hover .icon{opacity:1;-ms-filter:none;filter:none} .sidebarItem.active{margin-top:-2px;border-top:2px solid #ececec;} .sidebarItem.active.unreadComments .title{color:#fff} .sidebarItem.active a{background:url(\"images/textures/list-active.jpg\");background-position:0 -36px;color:#fff;text-shadow:0 1px 2px rgba(0,0,0,0.45);border-bottom:1px solid transparent;} .sidebarItem.active a .count{color:#fff} .sidebarItem.active.list .count{display:none} .sidebarItem.active.list .list-sharing{display:block;margin-right:-1px;} .sidebarItem.active.list .list-sharing:hover{opacity:1;-ms-filter:none;filter:none} .sidebarItem.active.list.list-search .list-sharing{display:none} .sidebarItem.active.list.list-search .count{display:block} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){.sidebarItem.active a{-webkit-background-size:128px 72px;-moz-background-size:128px 72px;background-size:128px 72px;background-image:url(\"images/textures/list-active@2x.jpg\")} }" }; });
define('views/Sidebar/ItemView',[

  'application/runtime',

  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/selection',

  'collections/TaskCollection',

  'wunderbits/WBViewPresenter',
  'wunderbits/mixins/UnicodeEmojiViewMixin',

  'template!sidebarItem',

  'style!sidebarItem'

], function (runtime, Keycodes, selectionHelper, TaskCollection, WBViewPresenter, UnicodeEmojiViewMixin, sidebarItemTemplate, sidebarItemStyle) {

  

  var _ = runtime._;
  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'renderData': {
      'id': undefined,
      'url': undefined,
      'icon': undefined,
      'title': undefined
    },

    'observes': {
      'collection': {
        'update:tasks_count': 'renderTasksCount',
        'update:unreadState': 'renderUnreadState'
      }
    },

    'template': sidebarItemTemplate,

    'styles': [
      sidebarItemStyle
    ],

    'tagName': 'li',

    'className': 'sidebarItem',

    'attributes': {

      'tabindex': 0
    },

    'renderCountsDebounceTime': 250,

    // these methods must be implemented by the subclass and should each return a string
    'getCollectionUrl': null,
    'getPublicUrl': null,
    'getIconClass': null,

    'initialize': function () {

      var self = this;

      // Create the collection we need for looking up task counts
      // Needs to be done before the super initializer is called, as that one will wire up the observes.collection binds
      var collectionUrl = self.getCollectionUrl.call(self);
      self.collection = new TaskCollection(collectionUrl);

      // This public render method should always be debounced - also do this before the the super init, because of the observes bindings
      self.renderTasksCount = _.debounce(self.renderTasksCount, self.renderCountsDebounceTime);
      _super.initialize.apply(self, arguments);
      UnicodeEmojiViewMixin.applyTo(self);
      self.collection.updateUnreadState();
    },

    'formatData': function (data) {

      var self = this;
      data = _super.formatData.call(self, data);

      data.id = self.model.id;
      data.icon = self.getIconClass();
      data.url = self.getPublicUrl();
      data.title = self.model.escape('title');

      return data;
    },

    'render': function () {

      var self = this;

      var data = self.formatData(self.renderData);
      _super.render.call(self, data);

      self.$el.attr('rel', data.id);
      self.$el.attr('data-position', self.model.attributes.position);

      self.renderTasksCount();

      return self;
    },

    'renderTasksCount': function (count) {

      var self = this;

      // This method is delayed/debounced sometimes,
      // The view might be destroyed.
      if (self.destroyed) {
        return;
      }

      var $count = self.$('.count');
      count = count || self.collection.count || '';

      $count.text(count);
    },

    'renderUnreadState': function (count) {

      var self = this;
      if (!runtime.feature_comments_disabled) {

        self.$el.toggleClass('unreadComments', count > 0);
      }
    },

    'remove': function (options) {

      var self = this;
      options || (options = {});

      function remove () {
        _super.remove.apply(self, arguments);
      }

      if (options.animate === false) {
        remove();
      }
      else {
        self.$el.slideUp(200, remove);
      }
    }
  });
});
define('views/Sidebar/EditController',[

  'application/runtime',

  'wunderbits/helpers/strings',

  'wunderbits/WBViewController',

  'wunderbits/WBBlurHelper',
  'wunderbits/helpers/selection',
  'wunderbits/helpers/keycodes'

], function (
  runtime,
  Strings,
  WBViewController,
  blurHelper, selectionHelper, keycodes,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;

  return WBViewController.extend({

    'implements': {

      'change:input': 'onInputChange',
      'blur:input': 'onInputBlur',
      'click:input': 'onInputClick'
    },

    'onInputBlur': function () {

      var self = this;
      var hasValue = !!self.view.$('input').val();

      if (hasValue) {

        var trigger = self.view.state.isDirty ? keycodes.enter : keycodes.esc;
        self.onInputChange({ which: trigger });
      }
      else {
        self.redirectToListURL();
      }
    },

    'onInputClick': function (ev) {

      ev.stopPropagation();
      ev.preventDefault();
    },

    // hook for subclasses to hook into to change the value before save
    'getSaveValue': function (value) {

      value = Strings.emojiTokensToUnicode(value);
      return value;
    },

    'onInputChange': function (ev) {

      var self = this;

      var $input = self.view.$('input');
      var value = $.trim($input.val());

      var titleLength = value.length;
      var caretPosition = selectionHelper.getCaretPos($input[0]);
      var keyPressed = ev.which;
      var notEditedOrHasEmptyTitle = !self.view.state.isDirty || titleLength === 0;
      var caretNotAtBeginningOrHasEmptyTitle = caretPosition < 1 || titleLength === 0;

      if ((keyPressed == keycodes.spaceBar || keyPressed === keycodes.tab) && (notEditedOrHasEmptyTitle) && (caretNotAtBeginningOrHasEmptyTitle)) {

        $input.val('');
        ev.preventDefault && ev.preventDefault();
      }
      else if (self.view.state.isEditMode && ev.which === keycodes.enter && value !== ' ' && value !== '') {

        var options = { 'success': self.redirectToListURL };
        var data = { 'title': self.getSaveValue(value) };

        self.view.model.save(data, options);
        $input.val('').blur();
      }
      else if (ev.which === keycodes.esc) {

        if (self.view.model.attributes.isNewModel) {

          runtime.trigger('sidebar:deleteAndSelectNext', self.view.model, {
            'confirm': false,
            'animate': false
          });
        }
        else {
          $input.val('').blur();
          self.redirectToListURL();
        }

        ev.stopPropagation && ev.stopPropagation();
      }
      else if (ev.which === keycodes.enter) {

        $input.val('').blur();
        self.redirectToListURL();
        ev.stopPropagation && ev.stopPropagation();
      }
      else {

        self.view.state.isDirty = true;
      }
    },

    'redirectToListURL': function () {

      var self = this;

      self.view.stopEditMode();

      _.delay(function () {

        if (runtime.focus === 'confirmation') {
          return;
        }

        self.view.model.set('isNewModel', false);

        var currentURL = window.location.href;
        var isCurrentListOpen = currentURL.indexOf(self.view.model.id) >= 0;
        var route = self.view.model.isSavedSearch() ? 'search/' + encodeURIComponent(self.view.model.getCleanTitle()) : 'lists/' + self.view.model.id;
        isCurrentListOpen && runtime.trigger('route:' + route);
      }, runtime.env.isTouchDevice() ? 500 : 1);
    }
  });
});
define('views/Sidebar/ListItemView',[

  'application/runtime',

  'views/Sidebar/ItemView',
  'views/Sidebar/EditController',

  'wunderbits/helpers/selection',
  'wunderbits/helpers/keycodes'

], function (
  runtime,
  ItemView,
  EditController,
  selectionHelper,
  keycodesHelper,
  undefined
) {

  

  var _ = runtime._;
  var _super = ItemView.prototype;

  return ItemView.extend({

    'state': {
      'isEditMode': false,
      'isDirty': false
    },

    'implements': [EditController],

    'emits': {

      'keydown input': 'change:input',
      'blur input': 'blur:input',
      'click input': 'click:input'
    },

    'observes': {
      'model': {
        'change:share_id': 'renderSharedState',
        'change:role': 'renderRole',
        'change:title': 'renderTitle'
      }
    },

    'getCollectionUrl': function () {

      return '/lists/' + this.model.id + '/tasks';
    },

    'getPublicUrl': function () {

      return '#/lists/' + this.model.id;
    },

    'getIconClass': function () {

      return 'list-list';
    },

    'render': function () {

      var self = this;

      var data = self.formatData(self.renderData);
      _super.render.call(self, data);

      self.renderSharedState();
      self.renderRole();
      self.renderTasksCount();

      self.$el.addClass('draggable');
      self.renderEmoji(self.$('.title'));

      return self;
    },

    'renderTitle': function () {

      this.$('.title').text(this.model.attributes.title);
    },

    'renderTasksCount': function () {

      var self = this;

      if (self.destroyed) {
        return;
      }

      var $share = self.$('.list-sharing');
      _super.renderTasksCount.apply(self, arguments);

      if (runtime.loadContext === 'login' && !runtime.beforeDone) {

        self.$('.count').text('...');
        self.bindOnceTo(runtime, 'sync:end', self.renderTasksCount);
      }
      // for new list models that have not yet been synced and have no online id, sharing is not possible, so we have to wait to show the share icon
      else if (!self.model.attributes.online_id) {

        self.bindOnceTo(runtime, 'sync:end', function () {

          $share.toggleClass('hidden', !self.isShareable());
        });
      }
      else if (!self.state.isEditMode) {
        $share.removeClass('hidden');
      }
      else if (runtime.loadContext === 'login' && runtime.beforeDone) {
        runtime.trigger('taskCounts:rendered');
      }
    },

    'renderRole': function() {

      var self = this;
      var role = self.model.attributes.role;
      self.$el.removeClass('owner member').addClass(role);
    },

    'renderSharedState': function() {

      var self = this;

      var isShared = self.model.isShared();
      self.$el.toggleClass('shared', isShared);
    },

    'startEditMode': function (options) {

      var self = this;

      options || (options = {});

      if (!self.state.isEditMode) {

        self.state.isEditMode = true;
        self.state.isDirty = false;
        runtime.trigger('actions:set', null);

        var titleText = self.model.getCleanTitle();
        var $title = self.$('.title');
        var $inputwrapper = self.$('.input-wrapper');
        var $input = $inputwrapper.find('input').attr('placeholder', titleText);

        $inputwrapper.removeClass('hidden');
        $input.val(titleText);
        $title.addClass('hidden');

        self.$('.list-sharing').addClass('hidden');

        self.$el.removeClass('draggable');

        self.bindOnceTo(runtime, 'sidebar:edit:cancel', self.stopEditMode);

        _.delay(function () {
          $input.focus();
          $input[0].setSelectionRange(0, 255);
        }, options.selectDelay || 0);
      }

      return self;
    },

    'stopEditMode': function () {

      var self = this;
      var isTouchMode = self.$el.hasClass('touch-edit');

      self.state.isEditMode = false;
      self.render();

      if (isTouchMode) {

        self.$('.delete-list').removeClass('hidden');
        self.$('.list-list').addClass('hidden');
        self.$('.title').addClass('touch-edit-mode');
      }

      self.$('.list-sharing').toggleClass('hidden', !self.isShareable());
      self.$('.input-wrapper').addClass('hidden');
      !self.model.destroying && runtime.trigger('actions:set', self.model);
      runtime.trigger('sidebar:edit:stopped');

      self.$el.focus();
    },

    'isShareable': function () {

      var self = this;

      return !!self.model.attributes.online_id && !runtime.user.isUnregistered();
    }
  });
});
define('views/Sidebar/InboxItemView',[

  'application/runtime',

  'views/Sidebar/ItemView'

], function (
  runtime,
  ItemView,
  undefined
) {

  

  var _super = ItemView.prototype;

  return ItemView.extend({

    'getCollectionUrl': function () {

      return '/lists/inbox/tasks';
    },

    'getPublicUrl': function () {

      return '#/lists/inbox';
    },

    'getIconClass': function () {

      return 'list-inbox';
    },

    'render': function () {

      var self = this;

      var data = self.formatData(self.renderData);
      _super.render.call(self, data);

      self.renderTitle();

      return self;
    },

    'renderTitle': function () {

      var self = this;
      var $title = self.$('.title');

      $title.html(runtime.language.getLabel('smart_list_inbox').toString());
      self.renderLocalized();
    }
  });
});
define('views/Sidebar/SearchEditController',[

  'views/Sidebar/EditController'

], function (
  EditController,
  undefined
) {

  

  return EditController.extend({

    // hook for subclasses to hook into to change the value before save
    'getSaveValue': function (value) {
      return '{{' + value + '}}';
    }
  });
});
define('views/Sidebar/SearchItemView',[

  'application/runtime',

  'collections/TaskCollection',
  'views/Sidebar/ListItemView',
  'views/Sidebar/SearchEditController',

  'wunderbits/helpers/selection',
  'wunderbits/helpers/keycodes'

], function (
  runtime,
  TaskCollection,
  ListItemView,
  SearchEditController,
  selectionHelper,
  keycodesHelper,
  undefined
) {

  

  var _super = ListItemView.prototype;

  return ListItemView.extend({

    'observes': {
      'runtime': {
        'savedSeach:updateCount': 'renderTasksCount'
      }
    },

    'className': 'list-search',

    'implements': [SearchEditController],

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.bindTo(runtime, 'search:keywords', self.checkSearchQuery);
    },

    'checkSearchQuery': function (query, options) {

      var self = this;
      options = options || {};
      var titleQuery = self.model.getCleanTitle();

      if (!options.silent && titleQuery === query) {
        self.$el.addClass('selected active');
      }
    },

    'getPublicUrl': function () {

      return '#/search/' + this.model.getCleanTitle();
    },

    'getIconClass': function () {

      return 'list-saved-search';
    },

    'formatData': function (data) {

      var self = this;
      data = _super.formatData.call(self, data);

      data.title = self.model.getCleanTitle();

      return data;
    },

    'renderTasksCount': function () {

      var self = this;

      if (self.destroyed) {
        return;
      }

      var $count = self.$('.count');

      var readyBind = self.bindTo(runtime, 'collection:search:ready', function (url) {

        if (url === '/search/' + encodeURIComponent(self.model.getCleanTitle())) {

          self.unbindFrom(readyBind);
          var searchCollection = new TaskCollection(url);
          var count = searchCollection.length;

          $count.text(count);
          $count.toggleClass('hidden', !count);
        }
      });

      runtime.trigger('search:keywords', self.model.getCleanTitle(), {
        'silent': true
      });
    },
  });
});
define('helpers/SortBehaviorMixin',[

  'application/runtime',
  'wunderbits/WBSingleton',
  'wunderbits/mixins/WBBindableMixin'

], function (runtime, WBSingleton, WBBindableMixin, undefined) {

  

  var $ = runtime.$;
  var _ = runtime._;

  return WBSingleton.extend({

    'oldHeight': '',

    'dragHeight': '',

    'dragWidth': '',

    'defaultPadding': '',

    'direction': '',

    'lastTarget':'',

    'lastTop': '',

    'dragParent': '',

    'init': function() {

      var self = this;
      WBBindableMixin.applyTo(self);
    },

    'dragStart': function(ev, drag, moveFree) {

      var self = this;

      self.direction = null;

      if (!drag.element) {
        return;
      }

      self.dragParent = drag.element.parent();
      self.oldHeight = self.dragParent.height();

      self.dragHeight = drag.element.outerHeight();
      self.dragWidth = drag.element.outerWidth();
      self.defaultPadding = drag.element.css('padding-bottom');

      self.moveFree = moveFree;

      if (!moveFree) {
        drag.element.css({
          'position':'absolute',
          'top': drag.element.offset().top
        });
      }

      self.keyupBind = self.bindTo($(document), 'keyup', function (ev) {

        if (ev.which === 27) {
          drag.cancel();
          self.endDrag(ev, drag);
        }
      });

      self.dragParent.find('li').removeClass('animate-up animate-down');

      drag.element.addClass('dragging');

      if (moveFree) {
        // this is the actual element, we only care about the clone having the class
        // might need to come back to this
        //drag.element.removeClass('dragging');
        drag.limit($('.main-interface'));
      }
      else {
        drag.limit(self.dragParent).vertical();
      }
      self.getDirection(drag.element);

      runtime.trigger('focus:set', 'sidebar-drag');
    },

    'dragOver': function (ev, drag, drop) {

      var self = this;
      var target = drop.element;
      // prevent from dropping on yourself
      if (drag.element[0] === drop.element[0] || drop.element.data().type === 'filter' || drop.element.data().type === 'inbox') {
        return;
      }

      if (self.moveFree) {
        drag.element.removeClass('dragging');
      }

      // reset the drag element
      drag.element.removeClass('dragOver').css({
        'padding-bottom': self.defaultPadding,
        'padding-top': self.defaultPadding
      });

      // reset the hover
      self.dragParent.find('.dragOver:not(.dragging)').css({
        'padding-bottom': self.defaultPadding,
        'padding-top': self.defaultPadding
      });

      // remove the classes on the last item we hovered
      self.lastTarget && self.lastTarget.removeClass('dragOver');
      $(target).addClass('dragOver').removeClass('first-task-position first-task-position-next');
      self.lastTarget = $(target);
    },

    'dragDown': function(ev, drag) {

      drag.distance(10);
    },

    'dragMove':function(ev, drop, drag) {

      var self = this;
      var target = drag.element;

      var $drag = $('.dragging');
      var dragOffset = $drag.offset();

      if (!dragOffset) {
        drag.cancel();
      }

      var dragBottom = dragOffset.top + $drag.outerHeight();
      var dragTop = dragOffset.top ;

      var hoverOffset = drop.element.offset();
      var hoverOuterHeight = drop.element.outerHeight();
      var hoverBottom = hoverOffset.top + hoverOuterHeight;
      var hoverTop = hoverOffset.top;

      if (drag.element[0] === drop.element[0]) {
        return;
      }

      drag.element.css({
        'padding-bottom': self.defaultPadding,
        'padding-top': self.defaultPadding
      });

      // gets the direction, then adds padding depending on which way
      self.getDirection(target);

      var shouldReturn;
      if (self.direction && self.direction === 'up') {
        shouldReturn = self.dragMoveUp(drop, dragOffset, dragTop, hoverTop, hoverOffset, hoverOuterHeight);
        if (shouldReturn) {
          return;
        }
      }
      else if (self.direction === 'down') {
        shouldReturn = self.dragMoveDown(drop, drag, dragOffset, dragBottom, hoverBottom, hoverOffset, hoverOuterHeight);
        if (shouldReturn) {
          return;
        }
      }
    },

    'dragMoveUp': function (drop, dragOffset, dragTop, hoverTop, hoverOffset, hoverOuterHeight) {

      var self = this;

      var $liFirst = self.dragParent.find('li:first');
      var $liLast = self.dragParent.find('li:last');

      // this is a fix for the first (and later the last) hover element, because there is no "next" or "prev",
      // so it needs a separate selector entirely. I tried using an || to combine the if statements, but that didnt
      // really work. adding a #TODO here because I think this has room to improve
      if (drop.element[0] === $liFirst[0]) {
        // this is extra logic that makes the top tasks feel more natural when dragging up
        if (dragOffset.top <= $liFirst.offset().top + $liFirst.outerHeight()/1.5) {
          self.dragParent.find('li').not(drop.element).css({
            'padding-bottom': self.defaultPadding,
            'padding-top': self.defaultPadding
          });
          $liFirst.css({
            'padding-top': self.dragHeight + 'px',
            'padding-bottom': self.defaultPadding
          });
        }
        return true;
      }

      // last task fix
      if (drop.element[0] === $liLast[0]) {
        $liLast.css({
          'padding-top': self.dragHeight + 'px',
          'padding-bottom': self.defaultPadding
        });
      }

      if (drop.element.hasClass('subtask')) {
        if (dragTop <= hoverTop - 20) {
          drop.element.css({
            'padding-bottom': self.defaultPadding,
            'padding-top': self.defaultPadding
          });

          drop.element.prev().not('.dragging').css({
            'padding-top': self.dragHeight + 'px',
            'padding-bottom': self.defaultPadding
          });

          return true;
        }

        self.dragParent.find('li').not(drop.element).css({
          'padding-bottom': self.defaultPadding,
          'padding-top': self.defaultPadding
        });

        drop.element.not('.dragging').css({
          'padding-top': self.dragHeight + 'px',
          'padding-bottom': self.defaultPadding
        });

        return true;
      }

      // standard drag element
      if (dragOffset.top >= hoverOffset.top - (hoverOuterHeight / 3)) {

        self.dragParent.find('.dragOver').not('.dragging').css({
          'padding-top': self.dragHeight + 'px',
          'padding-bottom': self.defaultPadding
        });
      }
    },

    'dragMoveDown': function (drop, drag, dragOffset, dragBottom, hoverBottom, hoverOffset, hoverOuterHeight) {

      var self = this;

      var $liFirst = self.dragParent.find('li:first');
      var $liLast = self.dragParent.find('li:last');

      // down direction on top subtask
      if (drop.element[0] === $liFirst[0]) {
        if (dragOffset.top >= $liFirst.offset().top + $liFirst.outerHeight()/4) {
          $liFirst.css({
            'padding-top': self.defaultPadding ,
            'padding-bottom': self.dragHeight + 'px'
          });
        }
        return true;
      }

      // last task fix
      if (drop.element[0] === $liLast[0] && dragOffset.top >= $liLast.offset().top) {
        $liLast.css({
          'padding-top': self.defaultPadding,
          'padding-bottom': self.dragHeight + 'px'
        });
      }

      // last subtask
      if (drag.element.hasClass('subtask')) {
        var $liLastPrev = $liLast.prev();
        if (drop.element[0] === $liLastPrev[0] && dragOffset.top >= $liLastPrev.offset().top -  + $liFirst.outerHeight()/4) {
          $liLastPrev.css({
            'padding-top': self.defaultPadding,
            'padding-bottom': self.dragHeight + 'px'
          });
        }
      }

      if (drop.element.hasClass('subtask')) {
        if (dragBottom >= hoverBottom + 15) {
          drop.element.css({
            'padding-bottom': self.defaultPadding,
            'padding-top': self.defaultPadding
          });

          drop.element.next().not('.dragging').css({
            'padding-top': self.dragHeight + 'px',
            'padding-bottom': self.defaultPadding
          });

          return true;
        }

        self.dragParent.find('li').not(drop.element).css({

          'padding-bottom': self.defaultPadding,
          'padding-top': self.defaultPadding
        });

        drop.element.not('.dragging').css({

          'padding-top': self.defaultPadding,
          'padding-bottom': self.dragHeight + 'px'
        });

        return true;
      }

      // standarad drag
      if ($('.dragging').offset().top + 50 >= hoverOffset.top + hoverOuterHeight/3) {

        self.dragParent.find('.dragOver').css({

          'padding-top': self.defaultPadding,
          'padding-bottom': self.dragHeight + 'px'
        });
      }
    },

    // move task is fired on the drop, this method figures out where it should go
    'moveTask': function (ev, drop, drag, index, dragging, forcedDirection) {

      var self = this;

       // if the drag element is also the drop element just cancel
      if ((drag.element[0] === drop.element[0]) || index === -1) {

        drag.element.removeAttr('style');
        return;
      }

      var target = drop.element;

      if (target.parent('ol').hasClass('completed-tasks')) {

        return;
      }

      // cleanup the list -- no animate class removes the transition which prevents the 'jump' caused after the drop
      self.dragParent.find('li').css({

        'padding-bottom':self.defaultPadding,
        'padding-top': self.defaultPadding
      });

      if (!dragging) {

        dragging = drag.element;
      }

      // iterate over the dragging tasks
      _.each(dragging, function (el, pos) {

        var lastPos = self.dragParent.find('li').length;

        $(dragging[pos]).addClass('just-dropped');

        // subtasks have the addtask as their last li, so we need a special conditional for them
        if (drag.element.hasClass('subtask') && target[0] === self.dragParent.find('li:last').prev()[0]) {

          self.dragParent.find('li').eq(lastPos - 2)[self.direction === 'down' ? 'after' : 'before'](dragging[pos]);
          return;
        }

        if (target[0] === self.dragParent.find('li:last')[0]) {

          self.dragParent.find('li').eq(lastPos -1 )[self.direction === 'down' ? 'after' : 'before'](dragging[pos]);
          return;
        }

        if (target[0] === self.dragParent.find('li:first')[0]) {

          if (self.direction === 'down') {

            self.dragParent.find('li').eq(index).after(dragging[pos]);
          }
          else {

            self.dragParent.find('li').eq(0).before(dragging[pos]);
          }

          return;
        }

        // move the drag item to before/after the dropzone.
        if (forcedDirection) {
          self.dragParent.find('li').eq(index)[forcedDirection](dragging[pos]);
        }
        else {

          self.dragParent.find('li').eq(index)[self.direction === 'down' ? 'after': 'before'](dragging[pos]);
        }
      });
    },

    'endDrag': function(ev, drag) {

      var self = this;

      self.keyupBind && self.unbindFrom(self.keyupBind);

      // reset the drag element
      drag && drag.element.removeAttr('style');
      // clear out any saved states
      self.dragHeight = 0;
      self.dragWidth = 0;
      self.lastTarget = null;
      self.direction = null;
      self.moveFree = null;
      self.dragStarted = false;

      runtime.trigger('list:sorting:end');

      if (!drag || !drag.element || !self.dragParent) {
        return;
      }

      self.dragParent.height(self.oldHeight).removeAttr('style');

      self.dragParent.find('li').removeAttr('style unselectable').removeClass('dragOver dragging animate collapse-cell first-task-position first-task-position-next lists-in-filter-hover scale-up');
      $('.drag-clone').remove();
      $('.list-hover').removeClass('list-hover');
      $('.lists-in-filter-hover').removeClass('lists-in-filter-hover');
    },

    'getDirection': function(drag) {

      var self = this;
      var dragTop;
      // for tasks
      if (drag.hasClass('taskItem')) {
        dragTop = $('.drag-clone').offset().top;
      }
      else {
        dragTop = drag.offset().top;
      }
      if (self.lastTop && dragTop < self.lastTop) {

        if (dragTop !== self.lastTop) {
          self.direction = 'up';
        }
        else {
          self.direction = 'down';
        }
      }
      else {

        if (dragTop !== self.lastTop) {
          self.direction = 'down';
        }
      }
      self.lastTop = dragTop;
    }
  });
});
define('styles/_sort',[],function() { return {'name': '_sort', 'styles': ".drag-clone{list-style:none;-webkit-user-select:none;} .drag-clone .badge{position:absolute;z-index:9999;right:-10px;top:-10px;padding:10px 7px;text-align:center;font-weight:bold;color:#fff;-webkit-border-radius:15px;border-radius:15px;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #e74545), color-stop(1, #c12020));background-image:-webkit-linear-gradient(top, #e74545 0, #c12020 100%);background-image:-moz-linear-gradient(top, #e74545 0, #c12020 100%);background-image:-o-linear-gradient(top, #e74545 0, #c12020 100%);background-image:-ms-linear-gradient(top, #e74545 0, #c12020 100%);background-image:linear-gradient(top, #e74545 0, #c12020 100%);-webkit-box-shadow:inset 1px 0 3px rgba(255,255,255,0.2);box-shadow:inset 1px 0 3px rgba(255,255,255,0.2);text-shadow:0 -1px 0 rgba(0,0,0,0.7);border:1px solid #8c0404;line-height:0} .drag-clone-reset{width:242px !important;left:0 !important;height:16px !important;padding:10px 14px 11px 14px;display:block;font-weight:bold;background:url(\"images/textures/list-active.jpg\");color:#fff;text-shadow:0 1px 2px rgba(0,0,0,0.3);-webkit-box-shadow:inset 0 1px 0 rgba(0,0,0,0.3);box-shadow:inset 0 1px 0 rgba(0,0,0,0.3);} .drag-clone-reset .icon.list-list{margin-left:-5px} .drag-clone-reset .fake-title{position:absolute;top:11px;left:40px;right:40px;} .drag-clone-reset .fake-title .fake-new-list{width:250px;} .drag-clone-reset .fake-title .fake-new-list div{position:absolute !important} .no-animate{-webkit-transition:none !important;-moz-transition:none !important;-o-transition:none !important;-ms-transition:none !important;transition:none !important} .new-list-dropzone{position:absolute;height:auto;bottom:0;top:0;left:0;right:0;margin-top:50em} .list-hover{-webkit-box-shadow:inset 0 0 0 3px #3d86b8;box-shadow:inset 0 0 0 3px #3d86b8} .not-allowed{cursor:not-allowed} " }; });
define('views/Sidebar/ListsCollectionView',[

  'application/runtime',

  'collections/ListCollection',
  'collections/TaskCollection',

  'wunderbits/WBView',
  'views/Sidebar/ListItemView',
  'views/Sidebar/InboxItemView',
  'views/Sidebar/SearchItemView',

  'helpers/SortBehaviorMixin',

  'style!_sort'

], function (
  runtime,
  ListCollection, TaskCollection,
  WBView, ListItemView, InboxItemView, SearchItemView,
  Sort,
  sortStyle,
  undefined) {

  

  var _ = runtime._;
  var $ = runtime.$;

  var _super = WBView.prototype;

  return WBView.extend({

    'tagName': 'ul',

    'events':  function () {

      var events = {

        'draginit  .draggable': '_startDrag',
        'dragover .draggable': '_dragOver',
        'dragmove .draggable': '_dragmove',
        'dragend .draggable': '_endDrag',
        'dragdown .draggable': '_dragDown',
        'dropon li': '_moveItem',
        'dropmove li': '_dropMove',
        'dropout li':'_leaveDropZone'
      };

      var touchEvents = {

        'touchstart .draggable': '_touchStart',
        'touchend .draggable': '_touchEnd',
        'mousedown .draggable': '_touchStart',
        'mouseup .draggable': '_touchEnd',
        'contextmenu .draggable a': '_cancelContextMenuForTouch'
      };

      if (runtime.env.isTouchDevice()) {

        _.extend(events, touchEvents);
      }

      return events;
    },

    'styles': [sortStyle],

    'className': 'lists-collection',

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.ready = new $.Deferred();

      self.hasRendered = new $.Deferred();

      var listsReady = new $.Deferred();
      self.bindTo(runtime, 'lists:ready', function (lists) {

        self.allLists = lists;
        listsReady.resolve();
      });

      self.tasks = new TaskCollection('/tasks/all');
      self.bindTo(self.tasks, 'add remove reset', function () {
        runtime.trigger('savedSeach:updateCount');
      });

      self._debouncedDelegateEvents = _.debounce(self.delegateEvents, 100);

      self.when(listsReady).done(function () {

        self.lists = new ListCollection('/lists/all/sortable');
        // on reset (e.g. collection sort) rerender the sortable lists:
        self.bindTo(self.lists, 'change:position', self.checkPositions);
        self.bindTo(self.lists, 'add', self.onModelAdd);
        self.bindTo(self.lists, 'remove', self.onModelRemove);
        self.bindTo(runtime, 'window:resize', self._debouncedDelegateEvents);
        self.ready.resolve();
      }, self);

      self.bindTo(runtime, 'list:toTop', self.moveListItemToTop);
      self.bindTo(runtime, 'list:toBottom', self.moveListItemToBottom);
      self.bindTo(runtime, 'sidebar:edit', self.editListWithID);
      self.bindTo(runtime, 'list:sorting:end', self.cleanUpAfterDrag);

      // dynamic events based on context must be re-delegated on context change
      self.bindTo(runtime.env, 'change:context', function () {
        self.delegateEvents();
      });

      self.bindTo(runtime, 'query:apply', self.applyQuery);

      // benchmark
      self.triggerUserListRendered = _.once(function () {
        runtime.trigger('timeline:start', 'user_lists_rendered');
      });
    },

    'render': function () {

      var self = this;
      var frag = document.createDocumentFragment();
      var el, $el;

      self.ready.done(function () {

        _super.render.apply(self, arguments);

        self.hasCalledRenderOnce = true;

        _.each(self.allLists.models, function (model) {

          var view = self.getViewInstance(model);
          el = view.render().el;
          $el = $(el);

          $el.not('[rel="inbox"]').addClass('list');
          frag.appendChild(el);
        });

        runtime.trigger('lists:rendered');

        self.hasRendered.resolve();
      });

      self.el.appendChild(frag);
      return self;
    },

    'applyQuery': function (listId, taskId) {

      var self = this;
      var list = self.lists.get(listId);
      var task = self.tasks.get(taskId);
      var query = list.getCleanTitle();
      var parts = query.split(' ');
      var title = task.attributes.title;

      _.each(parts, function (part) {

        var isPartTag = part.indexOf('#') === 0;
        var hasTaskTagAlready = title.indexOf(part) >= 0;
        if (isPartTag && !hasTaskTagAlready) {
          title += ' ' + part;
        }
      });

      task.save({
        'title': title
      }, {
        'success': function () {
          runtime.trigger('savedSeach:updateCount');
        }
      });
    },

    'getViewInstance': function (model) {

      var self = this;
      var ItemConstructorClass;

      if (model.attributes.inbox) {
        ItemConstructorClass = InboxItemView;
      }
      else if (model.isSavedSearch()) {
        ItemConstructorClass = SearchItemView;
      }
      else {
        ItemConstructorClass = ListItemView;
        self.triggerUserListRendered();
      }

      var view = self.addSubview(new ItemConstructorClass({
        'model': model
      }), model.id);

      return view;
    },

    // on position change events, checkPositions checks list model position in the collection against
    // their rendered DOM positions, removes and adds back views to their correct DOM positions
    // along with their previous selection states and correct animations
    'checkPositions': function () {

      var self = this;
      var $lists = self.$('li');
      var activeId = self.$('.active').attr('rel');
      var wrongModels = [];

      self.lists.sort();

      _.each(self.lists.models, function (model, idx) {

        var $list = $($lists[idx]);
        if ($list.attr('rel') !== model.id) {

          wrongModels.push(model);
          self.destroySubview(model.id);
        }
      });

      var correctModels = _.difference(self.lists.models, wrongModels);
      _.each(wrongModels, function (wrongModel) {

        // render list view
        var view = self.getViewInstance(wrongModel);
        view.render();

        var $el = view.$el;

        // is this still needed?
        $el.not('[rel="inbox"]').addClass('list');
        // setup animation
        $el.addClass('animate-up');

        if (wrongModel.id === activeId) {

          self.$('li').removeClass('active selected');
          $el.addClass('active selected');
        }

        correctModels.sort(function (a, b) {

          var aPos = a.attributes.position;
          var bPos = b.attributes.position;

          return aPos > bPos ? 1 : aPos < bPos ? -1 : 0;
        });

        var beforeModel = _.find(correctModels.reverse(), function (model) {

          return model.attributes.position < wrongModel.attributes.position;
        });

        var afterModel = _.find(correctModels.reverse(), function (model) {

          return model.attributes.position > wrongModel.attributes.position;
        });

        // place it
        if ((beforeModel && !afterModel) || (beforeModel && afterModel)) {

          $lists.filter('[rel="' + beforeModel.id + '"]').after(view.el);
        }
        else if (!beforeModel && afterModel) {

          $lists.filter('[rel="' + afterModel.id + '"]').before(view.el);
        }
        else {

          self.el.appendChild(view.el);
        }

        // finish animation
        self.defer(function () {

          $el.removeClass('animate-up');
          $el.addClass('animate-down');
        });

        // update correct models/views
        correctModels.push(wrongModel);
        $lists = self.$('li');
      });
    },

    'editListWithID': function (id, options) {

      var self = this;
      var view = self.getSubview(id);
      view && view.startEditMode(options);
    },

    'onModelAdd': function (model, collection, options) {

      var self = this;

      if (!self.hasCalledRenderOnce) {
        return;
      }

      var view = self.getViewInstance(model);
      var el = view.render().el;
      var $el = $(el);

      $el.not('[rel="inbox"]').addClass('list');
      if (options && options.animate) {

        $el.addClass('animate-up');
      }

      if (options && options.active) {

        self.$('li').removeClass('active selected');
        $el.addClass('active selected');
      }

      // splice in
      var previousModel = self.lists.at(_.indexOf(self.lists.models, model) - 1);
      var previousListID = previousModel && previousModel.attributes.id;

      if (previousListID && previousListID !== 'inbox') {

        var $previous = self.$('[rel=' + previousListID + ']');

        if ($previous.length) {

          $previous.after(el);
        }
        else {

          self.$el.append(el).addClass('list');
        }
      }
      else {

        self.$el.prepend(el).addClass('list');
      }

      if (options && options.animate) {

        self.defer(function () {

          $el.removeClass('animate-up');
          $el.addClass('animate-down');
        });
      }
    },

    'onModelRemove': function (model, collection, options) {

      var self = this;
      var view = self.getSubview(model.id);
      view.remove(options);
    },

    // the following methods deal with dragging, dropping, sorting, and creating lists on the fly with drop
    '_startDrag': function(ev, drag) {

      var self = this;
      var listsHieight = self.$el.outerHeight();
      var listWidth = self.$('li').outerWidth();
      var moveFree = false;
      var itemWidth = self.$el.parent().outerWidth();

      if (drag && !self.dragReady && (runtime.env.isTouchDevice() && !runtime.env.isPointerEnabled())) {

        drag.cancel();
        return;
      }

      if (!drag || !drag.element) {

        return;
      }

      // if the ul doesnt have a height, the space for the active
      // drag item is lost, and we cant drag to the bottom
      self.$el.height(listsHieight);

      runtime.trigger('list:sorting:start');

      // need the width or the absolute positioned items flip out
      drag.element.css({
        'width': itemWidth + 'px'
      }).addClass('active-drag');

      self.$('li').removeClass('dropped-list');

      // event, drag object, and initial top
      Sort.dragStart(ev, drag, moveFree, listWidth);

      if (ev.type !== 'MSPointerMove') {
        self.blockListChangeFromDragEnd = true;
      }
      // We dont want the border to be calculated as part of the height,
      // so we have to apply it after since it is only a visual thing
      if (!drag.element.hasClass('active')) {
        drag.element.css({
          'border-top':'1px dotted rgba(0, 0, 0, 0.2)'
        });
      }
    },

    '_dragOver': function(ev, drag, drop) {

      var self = this;
      self.dragObj = drag;
      self.dropObj = drop;

      Sort.dragOver(ev, drag, drop);
    },

    '_dragmove': function(ev, drag) {

      var self = this;

      var isAddlistEl = $(ev.target).closest('a').hasClass('addlist');
      var isNewListDropzone = $(ev.target).closest('div').hasClass('new-list-dropzone');
      var isFilterContainer = $(ev.target).closest('ul').hasClass('filters-collection');
      var $li = self.$('li');

      if (isAddlistEl || isNewListDropzone || isFilterContainer) {

        var index = self.$('li:last').index();

        if (self.lists.length > 1) {

          if (self.$('li:last')[0] === drag.element[0]) {

            $li.eq(index - 1).after(drag.element);
          }
          else {

            $li.eq(index).after(drag.element);
          }

          //self.calculateDraggedModelPositions();
        }
      }
    },

    '_dropMove': function(ev, drop, drag) {

      var self = this;

      if (!runtime.isSidebarVisible) {

        return;
      }

      var isTasksDrag = drag.element.hasClass('taskItem');

      if (isTasksDrag && drop.element.attr('rel') !== 'all' && drop.element.attr('rel') !== 'week') {
        // this is the blue highlight around lists when tasks are dragged over it
        self.$('li, a').removeClass('list-hover');
        drag.dragClone.removeClass('not-allowed');

        drop.element.addClass('list-hover');
      }

      if (isTasksDrag) {

        drag.dragClone.addClass('is-over-sidebar');
      }

      if (drop.element.data().type === 'filter') {

        return;
      }

      Sort.dragMove(ev, drop, drag);
    },

    '_moveItem': function(ev, drop, drag) {

      var self = this;

      if (!runtime.isSidebarVisible) {

        return;
      }

      if (!drag || !drop) {

        drag.cancel();
        return;
      }

      if (drag.element && drag.element.hasClass('taskItem')) {

        _.each(drag.dragElements, function (el) {

          var taskId = $(el).attr('rel');
          var dropId = drop.element.attr('rel');

          var list = self.lists.get(dropId);
          var action = list.isSavedSearch() ? 'query:apply' : 'drop:move';
          runtime.trigger(action, dropId, taskId);
        });

        return;
      }

      // this is the postion of the dropzone
      var index = self.$('.dragOver').index();

      if (index >= 0 ) {

        Sort.moveTask(ev, drop, drag, index);
        self.calculateDraggedModelPositions();
      }
    },

    'moveListItemToTop': function (ev, drop, drag) {

      var self = this;

      Sort.moveTask(ev, drop, drag, 0);
      self.calculateDraggedModelPositions();
    },

    'moveListItemToBottom': function (ev, drop, drag) {

      var self = this;
      var $items = self.$el.children('li');

      $items.length && Sort.moveTask(ev, drop, drag, $items.length - 1);
      $items.length && self.calculateDraggedModelPositions();
    },

    '_leaveDropZone': function (ev, drop, drag) {

      var self = this;
      drag.dragClone && drag.dragClone.removeClass('is-over-sidebar');
      self.$el.find('li, a').removeClass('list-hover');
    },

    '_dragDown': function (ev, drag) {

      var self = this;

      self.dragObj = drag;

      Sort.dragDown(ev, drag);
    },

    '_cancelContextMenuForTouch': function () {

      return false;
    },

    '_touchStart': function (ev) {

      var self = this;

      self.blockListChangeFromDragEnd = false;
      clearTimeout(self.waitPress);
      self.dragReady = false;
      ev.stopPropagation();

      self.$('li').removeClass('active-drag');

      self.waitPress = setTimeout(function () {

        ev.preventDefault();
        self.dragReady = true;
        $(ev.target).closest('li').trigger('draginit', self.dragObj).addClass('active-drag');
      }, 500);
    },

    '_touchEnd': function () {

      var self = this;

      clearTimeout(self.waitPress);
      self.dragReady = false;
      self.$('li').removeAttr('style').removeClass('active-drag');
    },

    '_simulateDrop': function (ev) {

      var self = this;

      clearTimeout(self.waitPress);
      if (!self.dropObj || !self.dragObj) {

        return;
      }

      self._moveItem(ev, self.dropObj, self.dragObj);
    },

    '_endDrag': function(ev, drag) {

      var self = this;

      clearTimeout(self.waitPress);

      self._simulateDrop(ev);
      // just cleanup
      Sort.endDrag(ev, drag);

      self.dragObj = null;
      self.dropObj = null;
      self.dragReady = null;

      drag.element.removeClass('active-drag').addClass('dropped-list');
      runtime.trigger('list:sorting:end');
    },

    'cleanUpAfterDrag': function () {

      var self = this;
      self.$('li').removeAttr('style').removeClass('active-drag');
      self.$('.active').next().find('a').removeAttr('style');
      self.$('.addlist, .lists-collection').removeAttr('style');
    },

    // update model position attributes to reflect their position in the DOM
    'calculateDraggedModelPositions': function () {

      var self = this;
      var $droppedElements = self.$('.just-dropped');
      var numElements = $droppedElements.size();
      var beforeId, afterId, beforePosition, afterPosition, increment, lastPosition;
      //create a collection of lists excluding the inbox filter hybrid:
      var collection = self.lists;
      collection.sort();

      beforeId = self.$('li[rel="' + $($droppedElements[0]).attr('rel') + '"]').prev().attr('rel');
      afterId = self.$('li[rel="' + $($droppedElements[numElements - 1]).attr('rel') + '"]').next().attr('rel');

      beforePosition = beforeId && collection.get(beforeId).attributes.position || 0;
      afterPosition = afterId && collection.get(afterId).attributes.position || 0;

      // calculate start position and increment
      if (!beforeId && afterId) {

        beforePosition = afterPosition - 10;
        increment = (afterPosition - beforePosition) / (numElements + 1);
      }
      else if (!afterId && beforeId) {

        increment = 10;
      }
      else if (afterId && beforeId) {

        // calculate start and increment - use collections!
        var beforeModel = collection.get(beforeId);
        // broke this out here for debugging nest if you want to ...
        var curIndex = _.indexOf(collection.models, beforeModel);
        var nextIndex = curIndex + 1;
        var nextModel = collection.at(nextIndex);
        var nextId = nextModel ? nextModel.attributes.id : undefined;

        afterPosition = nextId ? collection.get(nextId).attributes.position : collection.get(afterId).attributes.position;
        increment = (afterPosition - beforePosition) / (numElements + 1);
      }

      lastPosition = beforePosition;

      // save new positions on the models
      _.each($droppedElements, function (el) {

        lastPosition += increment;
        var id = $(el).attr('rel');
        var model = collection.get(id);
        model && model.save({'position': lastPosition}, {'silent': true});
        model._previousAttributes.position = lastPosition;
        model && self.allLists.trigger('change', model, {'changes': {'position': true}});
      });

      // remove helper classes
      $droppedElements.removeClass('just-dropped');
    }
  });
});
define('models/FilterModel',[

  'wunderbits/WBModel'

], function (WBModel, undefined) {

  

  return WBModel.extend({

    'defaults': {
      'type': 'Filter',
      'isFilter': true
    }

  });
});
define('views/Sidebar/SmartListItemView',[

  'application/runtime',

  'views/Sidebar/ItemView'

], function (
  runtime,
  ItemView,
  undefined
) {

  

  var _super = ItemView.prototype;

  return ItemView.extend({

    'renderData': {
      'iconLabel': undefined,
      'isSmartList': undefined,
      'titleText': undefined
    },

    'observes': {
      'collection': {
        'update:tasks_count': ['renderTasksCount', 'checkVisibility']
      }
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.settingKey = 'smartlist_visibility_' + self.model.attributes.name;

      self.bindTo(runtime.settings, 'change:' + self.settingKey, function () {

        self.checkVisibility();
      });

      self.bindTo(runtime, 'routed', function () {
        self.checkVisibility();
      });
    },

    'getCollectionUrl': function () {

      return '/tasks/filter/' + this.model.attributes.name;
    },

    'getPublicUrl': function () {

      return '#/lists/' + this.model.attributes.name;
    },

    'getIconClass': function () {

      return 'list-' + this.model.attributes.name;
    },

    'formatData': function (data) {

      var self = this;
      data = _super.formatData.call(self, data);

      if (data.icon === 'list-today') {
        var current = new Date();
        data.iconLabel = current.getDate();
      }

      data.id = self.model.attributes.name;
      data.title = self.model.attributes.title;
      data.titleText = self.model.attributes.titleText;

      data.isSmartList = true;

      return data;
    },

    'render': function () {

      var self = this;

      var data = self.formatData(self.renderData);
      _super.render.call(self, data);

      self.$el.attr('rel', data.name).attr('data-type', 'filter');

      self.checkVisibility();

      return self;
    },

    'hide': function() {

      var self = this;

      var route = runtime.currentRoute();
      var isList = route.indexOf('lists/') !== -1;
      var isThisList = route.indexOf('lists/' + self.model.attributes.name) !== -1;
      var isPreferences = route.indexOf('preferences') !== -1;

      if (isList && isThisList) {

        self.$el.addClass('forced-visible animate-down visible').removeClass('animate-up');
        self.makeAriaVisible();
      }
      else if ((isList && !isThisList) || isPreferences) {

        self.$el.removeClass('forced-visible animate-down visible').addClass('animate-up');
        self.hideFromAria();
        runtime.trigger('smartlist:hidden', self.model.attributes.name);
      }
    },

    'show': function() {

      var self = this;
      self.$el.removeClass('animate-up').addClass('animate-down visible').attr('aria-hidden', false);
      self.makeAriaVisible();
      runtime.trigger('smartlist:visible', self.model.attributes.name);
    },

    'hideFromAria': function () {

      this.$el.attr('aria-hidden', 'true').attr('tabindex', '-1');
    },

    'makeAriaVisible': function () {

      this.$el.attr('aria-hidden', 'false').attr('tabindex', '0');
    },

    'checkVisibility': function () {

      var self = this;
      var count = self.collection.count;
      var setting = runtime.settings.get(self.settingKey);

      // For done filter, use the length, as the count will be always zero
      if (self.model.attributes.name === 'completed') {
        count = self.collection.length;
      }

      var settingHidden = (setting === 'hidden');
      var settingVisible = (setting === 'visible');

      self.$el.toggleClass('user-disabled', settingHidden);
      self.$el.toggleClass('user-enabled', settingVisible);

      if (settingHidden || (count === 0 && setting === 'auto')) {

        self.hide();
      }
      else if (setting === 'visible' || (count > 0 && setting === 'auto')) {

        self.show();
      }
    }
  });
});
define('views/Sidebar/SmartListsCollectionView',[

  'application/runtime',

  'models/FilterModel',

  'collections/TaskCollection',

  'views/Sidebar/SmartListItemView',

  'wunderbits/WBView'

], function (runtime, FilterModel, TaskCollection, SmartListItemView, WBView, undefined) {

  

  var _ = runtime._;
  var $ = runtime.$;

  var _super = WBView.prototype;

  var filters = runtime.smartLists;

  return WBView.extend({

    'tagName': 'ul',

    'className': 'filters-collection',

    'events': {

      'dropmove li': '_dropMove',
      'dropout li':'_leaveDropZone',
      'dropon  li': '_moveTask'
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.ready = new $.Deferred();
      self.hasRendered = new $.Deferred();

      self.bindTo(runtime, 'lists:ready', self.ready.resolve);
      self.bindTo(runtime, 'sidebar:forcedVisibleList', self.setForcedVisible);
    },

    'render': function () {

      var self = this;

      self.ready.done(function () {

        _super.render.apply(self, arguments);

        self.hasCalledRenderOnce = true;

        self.destroySubviews();

        var filterFragments = self.renderFiltersToFragment();

        self.$el.empty().append(filterFragments);

        self.hasRendered.resolve();
      });

      return self;
    },

    '_renderFilter': function (filter) {

      var self = this;

      var titleKeyFragment = (filter === 'assigned') ? 'assigned_to_me' : filter;

      var model = new FilterModel({
        'title': runtime.language.getLabel('smart_list_' + titleKeyFragment),
        'titleText': runtime.language.getText('smart_list_' + titleKeyFragment),
        'name': filter
      });

      var view = self.addSubview(new SmartListItemView({
        'model': model
      }), filter);

      return view.render().el;
    },

    'renderFiltersToFragment': function () {

      var self = this;
      var frag = document.createDocumentFragment();

      if (self._filterBindings) {
        _.each(self._filterBindings, self.unbind);
      }
      self._filterBindings = [];

      _.each(filters, function(filter) {

        frag.appendChild(self._renderFilter(filter));
      });

      return frag;
    },

    /* jshint indent: false */
    '_moveTask': function(ev, drop, drag) {

      if (!runtime.isSidebarVisible) {

        return;
      }


      if (drag.element.hasClass('taskItem')) {

        _.each(drag.dragElements, function(el) {

          var allTasks = new TaskCollection('/tasks/all');

          var taskId = $(el).attr('rel');
          var listId = allTasks.get(taskId).attributes.list_id;
          var complete = allTasks.get(taskId).attributes.completed;
          var typeOrId = drop.element.attr('rel');

          switch (typeOrId) {

            case 'starred':

              if (!complete) {

                runtime.trigger('drop:starred', taskId, listId);
              }
            break;

            case 'all':
              // its already here!
            break;

            case 'week':
              // nothing happens here
            break;

            case 'completed':
              runtime.trigger('drop:done', taskId, listId);
            break;

            case 'assigned':

              !complete && runtime.trigger('drop:assigned', taskId, listId);
            break;

            case 'conversations':

              // wut
            break;

            case 'today':

              if (!complete) {

                runtime.trigger('drop:today', taskId, listId);
              }
            break;

            default:
                runtime.trigger('drop:move', typeOrId, taskId);
            break;
          }
        });

        return;
      }
      else if (drag.element.hasClass('list')) {

        runtime.trigger('list:toTop', ev, drop, drag);
      }
    },

    '_dropMove': function (ev, drop, drag) {

      var self = this;

      if (runtime.isSidebarVisible && drag.element.hasClass('taskItem')) {

        drag.dragClone.addClass('is-over-sidebar');

        self.$('li').removeClass('list-hover');

        drag.dragClone.removeClass('not-allowed');

        var assignFilterButNotShared = drop.element.attr('rel') === 'assigned' && (drag && !drag.isShared);

        if (drop.element.attr('rel') === 'all' || drop.element.attr('rel') === 'week' || drop.element.attr('rel') === 'conversations' || assignFilterButNotShared) {

          drag.dragClone.addClass('not-allowed');
          return;
        }

        // this is the blue highlight around lists when tasks are dragged over it
        drop.element.addClass('list-hover');
      }
    },

    '_leaveDropZone': function (ev, drop, drag) {

      var self = this;
      drag.dragClone && drag.dragClone.removeClass('is-over-sidebar');
      self.$('li, a').removeClass('list-hover');
    },

    'setForcedVisible': function (id) {

      var self = this;
      var $item = self.$('[rel="' + id + '"]');
      self.$revertItem = $item;
    },

    // this methods is executed by its parent (SidebarView) each time a list is selected and is responsible for making sure that the currently selected smart list is visible, and that items made temporarily visible are cleaned up
    'ensureVisibility': function (id) {

      var self = this;

      if (self.$revertItem) {

        self.$revertItem
          .addClass('animate-up')
          .removeClass('forced-visible')
          .removeClass('visible')
          .removeClass('animate-down');

        delete self.$revertItem;
      }

      if (filters.indexOf(id) >= 0) {

        var $item = self.$('[rel="' + id + '"]');
        var isHidden = $item.hasClass('user-disabled');

        if (isHidden) {

          $item
            .addClass('forced-visible')
            .addClass('animate-down')
            .removeClass('animate-up')
            .css('opacity', 0)
            .animate({ 'opacity': 1 });

          self.$revertItem = $item;
        }
      }
    }
  });
});
define('views/Sidebar/Controllers/SidebarController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/strings',

  'wunderbits/WBViewController'

], function (
  runtime,
  Keycodes,
  Strings,
  WBViewController,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;

  return WBViewController.extend({

    'implements': {

      'click:list': 'openList',
      'doubleClick:list': 'triggerEditList',
      'click:sharing': 'onDoubleClickShareList',

      'click:delete': 'touchDeleteList',
      'click:edit': 'triggerEditList',

      'click:addlist': 'addNewList',

      // the mousedown fix needs to be applied to the filters also,
      // even though they are not draggable, otherwise the events
      // will propagate differently - this way the processing is unified
      'mouse:down': 'mouseDownFix',

      'route:list': 'routeToList'
    },

    'addNewList': function (ev) {

      var self = this;
      var title = runtime.language.getText('placeholder_new_list');
      var $addlist = self.view.$('.addlist');
      $addlist.addClass('hidden').removeClass('active selected');
      self.view.sortableLists.sort();
      var lastList = self.view.sortableLists.at(self.view.sortableLists.length - 1);
      var position = lastList ? lastList.attributes.position + 10 : 0;
      title = Strings.emojiTokensToUnicode(title);

      self.view.lists.add({
        'title': title,
        'position': position
      }, {
        // active must be true to avoid a flicker of unselected state
        // in the sidebar, because of delay in the router
        'active': true,
        'success': function (list) {

          list.set('isNewModel', true);
          runtime.trigger('route:lists/' + list.id + '/edit');
          self.bindOnceTo(runtime, 'sync:end', function () {

            runtime.trigger('show:coach_mark_share_list');
          });
        }
      });

      if (ev && ev.target) {
        runtime.trigger('analytics:Sidebar:clickAddList');
      }
      else {
        runtime.trigger('analytics:Sidebar:addListFromShortcut');
      }
    },

    'openList': function (ev) {

      var self = this;

      var $target = $(ev.target);

      if (self.view.listsView.blockListChangeFromDragEnd && runtime.env.isTouchDevice() && ev.type !== 'MSPointerDown' || ($target.closest('li').hasClass('dropped-list') && runtime.env.isFirefox())) {
        // this is here because firefox published a bug where mousemove did not cancel a click event
        $target.closest('li').removeClass('dropped-list');
        ev.preventDefault();
        return;
      }

      if (self.openListTimeout) {
        window.clearTimeout(self.openListTimeout);
      }

      //cant prevent default here, or the list doesnt change
      if (ev && ev.type !== 'MSPointerDown') {
        ev && ev.preventDefault();
      }

      var id = $(ev.target).closest('li').attr('rel');

      var action = function () {

        // in tablet mode we open edit mode on click
        if (self.view.isTouchEditing && self.didHandleTouchEditMode(ev, id)) {
          return;
        }

        self.view.setSelectionByID(id);

        if (runtime.env.isMicro() || runtime.env.isMini()) {
          runtime.trigger('sidebar:toggle', false);
        }

        runtime.trigger('focus:set', 'sidebar').trigger('browser:unselect');
        runtime.trigger('search:cancel');

        self.defer(function () {
          self.routeToList(id);
        });

        self.isOpeningList = true;
        window.setTimeout(function () {
          self.isOpeningList = false;
        }, 500);
      };

      var listOpenDelay = !runtime.env.isTouchDevice() && (runtime.env.isMicro() || runtime.env.isMini()) ? 300 : 0;

      self.view.setSelectionByID(id);

      if (listOpenDelay) {
        self.openListTimeout = setTimeout(action, listOpenDelay);
      }
      else {
        self.openListTimeout && clearTimeout(self.openListTimeout);
        self.defer(action);
      }
    },

    'didHandleTouchEditMode': function (ev, id) {

      var self = this, view = self.view;
      var $target = $(ev.target);

      // in touch mode, ignore the edit mode if we are trying to delete the list
      if ($target.first().hasClass('delete-list')) {

        ev.preventDefault();
        ev.stopPropagation();
        return true;
      }

      var list = view.lists.get(id);
      var ownerID = list && list.attributes.owner_id;
      view.cancelEditModes();

      // if it is the user's list, then let them in
      if (list && id !== 'inbox' && (!ownerID || ownerID === runtime.user.id)) {

        self.view.listsView.editListWithID(id, {
          'selectDelay': 250
        });

        ev.preventDefault();
        runtime.trigger('route:lists/' + id + '/edit');

        return true;
      }
    },

    'triggerEditList': function (ev) {

      var self = this;

      if (!ev || ev && ev.target && runtime.env.isTouchDevice()) {
        return;
      }

      var id = $(ev.target).closest('.list').attr('rel');

      if (ev && ev.editTarget && ev.editTarget.id) {
        id = ev.editTarget.id;
      }

      if (id) {

        var currentURL = window.location.href.split('#')[1] .replace('#', '');
        var wasTriggeredByShareIcon = ev && $(ev.target).hasClass('list-sharing');
        var isAlreadyInEditMode = currentURL.indexOf('/lists/' + id + '/edit') >= 0;

        if (ev && ev.onlyEditIfOnListURL && currentURL !== '/lists/' + id || wasTriggeredByShareIcon || isAlreadyInEditMode) {

          return;
        }

        if (self.openListTimeout) {
          window.clearTimeout(self.openListTimeout);
        }

        var list = self.view.lists.get(id);
        var ownerID = list && list.attributes.owner_id;

        if (list && id !== 'inbox' && (!ownerID || ownerID === runtime.user.id)) {

          runtime.trigger('analytics:Sidebar:doubleClickToEditList');
          self.defer(_.bind(runtime.trigger, runtime, 'route:lists/' + id  + '/edit'));
        }
      }
    },

    'onDoubleClickShareList': function (ev) {

      var self = this;
      var $target = ev && $(ev.target);
      var href = $target.parent().find('a:first').attr('href');
      var listRoute = href && href.split('#/')[1];
      var shareRoute = listRoute + '/share';
      var currentRoute = runtime.currentRoute();
      var isShareRouteAlreadyActive = shareRoute === currentRoute;

      var triggerRoute = listRoute;

      if (!isShareRouteAlreadyActive) {
        self.shareReturnRoute = currentRoute;
        triggerRoute = shareRoute;
      }
      else {
        triggerRoute = self.shareReturnRoute || listRoute;
        delete self.shareReturnRoute;
      }

      if (triggerRoute === shareRoute) {
        runtime.trigger('analytics:Sidebar:clickShareList');
      }

      runtime.trigger('route:' + triggerRoute);
      return false;
    },

    'touchDeleteList': function (ev) {

      var self = this;
      ev.preventDefault();
      var id = $(ev.target).closest('li').attr('rel');
      var model = self.view.lists.get(id);
      self.view.deleteAndSelectNext(model);
    },

    'mouseDownFix': function (ev) {

      if (ev.preventDefault) {
        if (!runtime.env.isFirefox() && (ev.metaKey || ev.ctrlKey || $(ev.target).is('input'))) {
          return;
        }
        ev.preventDefault();
      }
    },

    'routeToList': function (id) {

      var self = this;
      var list = self.view.lists.get(id);

      if (list && list.isSavedSearch()) {
        self.defer(function () {
          runtime.trigger('route:search/' + encodeURIComponent(list.getCleanTitle()));
        });
      }
      else {
        runtime.trigger('route:lists/' + id);
      }
    }
  });
});
define('views/Sidebar/Controllers/SidebarDragController',[

  'application/runtime',

  'wunderbits/helpers/strings',

  'wunderbits/WBViewController'

], function (
  runtime,
  Strings,
  WBViewController,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;

  return WBViewController.extend({

    'implements': {

      'hover:addlist': 'hoverAddListCreateFromDrop',
      'dropon:addlist': 'createListFromDrag',
      'dropout:addlist': 'leaveDropZone',

      'drag:dropzone': 'dragOverDropZone',
      'dropon:dropzone': 'createListFromDrag',
      'dragout:dropzone': 'dragout',
    },

    // drag stuff, move to own controller yah
    'hoverAddListCreateFromDrop': function(ev, drop, drag) {

      if (runtime.isSidebarVisible && drag.element.hasClass('taskItem') && !drag.element.hasClass('list')) {

        var self = this;

        // TODO move to view:
        self.view.$el.find('li, a').removeClass('list-hover');

        drop.element.addClass('list-hover');
        drag.dragClone.addClass('is-over-sidebar');
      }
    },

    'createListFromDrag': function(ev, drop, drag) {

      var self = this;

      if (runtime.isSidebarVisible && drag.element.hasClass('taskItem')) {

        // creates a new list and navigates to the edit URL
        self.bindTo(runtime, 'lists:ready', function (allLists) {

          var lastList = self.view.sortableLists.at(self.view.sortableLists.length - 1);
          var position = lastList ? lastList.attributes.position + 1 : 0;

          allLists.add({
            'title': 'New list',
            'position': position
          },{
            success: function (list) {

              runtime.trigger('analytics:Sidebar:createListFromDragItems');
              runtime.trigger('route:lists/' + list.id + '/edit');

              _.each(drag.dragElements, function (el) {

                var taskId = $(el).attr('rel');
                runtime.trigger('drop:move', list.id, taskId);
                self.view.debouncedCalculateDropZone();
              });
            }
          });
        });
      }
      else if (drag.element.hasClass('list')) {

        runtime.trigger('list:toBottom', ev, drop, drag);
      }
    },

    'leaveDropZone': function (ev, drop, drag) {

      var self = this;
      drag.dragClone && runtime.isSidebarVisible && drag.dragClone.addClass('is-over-sidebar');
      // TODO move to view:
      self.view.$el.find('li, a').removeClass('list-hover');
    },

    // dropzone drag stuff
    'dragOverDropZone': function(ev, drop, drag) {

      var self = this;
      if (runtime.isSidebarVisible && drag.element.hasClass('taskItem')) {
        // this event is captured here, but it is handled in the MainInterfaceView
        // #onEnterDropZone because that is where the drag-clone is. Same is true
        // for the dragOut, check #onLeaveDropZone
        runtime.trigger('drag:enter:dropzone', drag);
        // we are hovering the drop zone, lock in the drag
        drag.limit(self.view.$('.new-list-dropzone')).vertical();
      }
    },

    'dragOut': function (ev, drop, drag) {

      if (!runtime.isSidebarVisible) {
        return;
      }

      // this is all cleanup on the clone when leaving the sidebar
      if (runtime.isSidebarVisible && drag.element.hasClass('taskItem')) {
        runtime.trigger('drag:leave:dropzone', drag);
        // we are leaving the drop zone, unlock in the drag, and set its limit globally
        drag._vertical = false;
      }
    }
  });
});
define('views/Sidebar/Controllers/SidebarKeysController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',

  'wunderbits/WBViewController'

], function (
  runtime,
  Keycodes,
  WBViewController,
  undefined
) {

  

  var $ = runtime.$;

  return WBViewController.extend({

    'implements': {

      'keydown': 'handleKeys',
    },

    'handleKeys': function (ev) {

      var self = this;

      if (ev.which === Keycodes.tab) {
        self.handleTab(ev);
      }
      else if (ev.which === Keycodes.enter) {
        self.handleEnter(ev);
      }
    },

    'handleTab': function (ev) {

      var self = this;
      var actionTaken;
      if ($(ev.target).parents('.lists-scroll').length) {
        if (ev.shiftKey) {
          // focus search button
          actionTaken = true;
          runtime.trigger('tab:to:searchButton');
        }
        else {
          // focus task browser
          self.view.navigateLists('right');
          actionTaken = true;
        }
      }

      if (actionTaken) {
        self.stopItCold(ev);
      }
    },

    'handleEnter': function (ev) {

      var self = this;
      var $target = $(ev.target);
      var actionTaken;

      if ($target.hasClass('addlist')) {
        $target.click();
        actionTaken = true;
      }

      if (actionTaken) {
        self.stopItCold(ev);
      }
    },

    'stopItCold': function (ev) {
      ev.preventDefault();
      ev.stopPropagation();
    }
  });
});
define('views/AvatarView',[

  'application/runtime',

  'helpers/BlobHelper',
  'helpers/URLResolver',

  'collections/AssignableCollection',

  'wunderbits/WBView'

], function (

  runtime,
  BlobHelper, URLResolver,
  AssignableCollection,
  WBView,
  undefined
) {

  

  var _super = WBView.prototype;
  var _ = runtime._;
  return WBView.extend({

    'className': 'avatar',

    'renderData': {

      'id': undefined
    },

    'initialize': function (options) {

      var self = this;
      self.options = options && options;
      _super.initialize.apply(self, arguments);

      var urlTail = (self.options && self.options.listId) || 'all';
      self.assignables = new AssignableCollection('/assignables/' + urlTail);

      // This binding can't be called directly, as the collection or model
      // will be passed as first argument, and #render will think it's
      // the options object and do all kinds of crazy stuff...
      self.bindTo(self.assignables, 'add remove change', function (model) {

        // only trigger render when the added/changed model is for this view!
        if (model.attributes.assignable_id === options.id) {
          self.render();
        }
      });
    },

    'formatData': function (data) {

      var self = this;
      data = _super.formatData.call(self, data);

      data.id = self.options.id;

      return data;
    },

    'render': function (options) {

      var self = this;

      self.options = _.extend(self.options, options) || options;

      self.options.id = options && options.id || self.options.id;
      self.options.isOwnAvatar = options && options.isOwnAvatar;

      var data = self.formatData(self.renderData);

      // Default size is 25px
      self.options.size && self.$el.addClass(self.options.size);
      // Wunderlist icon
      if (self.options.system) {
        self.$el.addClass('wunderlist-avatar');
        return self;
      }

      self.$el.html('<img src=""/>');

      if (self.options.isOwnAvatar || data.id === runtime.user.id) {

        if (self.options.showPro) {
          self.updateOwnProBadge();
          self.bindTo(runtime.user, 'change:product', self.updateOwnProBadge);
        }

        self.updateOwnAvatar();
        self.updateTitle(runtime.user);
        self.bindUserAvatarChanges();

      }
      else {

        var person = self.assignables.findWhere({
          'assignable_id' : data.id
        });

        self.updateAvatar(person);

        if (self.options && self.options.url) {

          self.setImage(self.options.url);
        }

        self.updateTitle(person);
      }

      return self;
    },

    'bindUserAvatarChanges': function () {

      var self = this;

      self.bindTo(runtime.user, 'change:avatar', self.updateOwnAvatar);
      self.bindTo(runtime.user, 'change:id', self.updateOwnAvatar);
    },

    'updateTitle': function (person) {

      var self = this;

      person && self.$el.attr('title', person.attributes.name);
    },

    'updateAvatar': function (person) {

      var self = this;
      var avatar;

      if (person) {

        avatar = person.attributes.avatar ? person.attributes.avatar : '';
        avatar && self.setImage(avatar);
      }

      if (!avatar && self.options.facebook) {

        var picId = self.options.facebook.id;
        avatar = '//graph.facebook.com/' + picId + '/picture';

        if (runtime.env.isChromeApp()) {
          avatar = 'https:' + avatar;
        }

        avatar = URLResolver.resolve(avatar);
        avatar && self.setImage(avatar);
      }

      self.$el.toggleClass('blank', !!avatar);
    },

    'updateOwnAvatar': function () {

      var self = this;
      self.setImage(runtime.user.getAvatarURL());
    },

    'updateOwnProBadge': function () {

      var self = this;
      var isPro = runtime.user.isPro();

      self.$el.toggleClass('pro-user', isPro);
    },

    'setImage': function (url) {

      var self = this;
      var $img = self.$('img');
      var loaded = false;
      var brokenAvatarFallback = _.once(function (e) {
        !loaded && self.replaceBrokenAvatar(e);
      });

      url && BlobHelper.loadImage(url, $img, function () {

        loaded = true;
        $img.removeClass('hidden');
      }, brokenAvatarFallback);
    },

    'replaceBrokenAvatar': function () {

      var self = this;
      if (!self.destroyed) {
        self.$('img').addClass('hidden');
      }
    }
  });
});

define('styles/_popover',[],function() { return {'name': '_popover', 'styles': "#wunderlist-base .popover{display:none;position:absolute;-webkit-border-radius:4px;border-radius:4px;background:#f9f9f9;min-height:15px;min-width:150px;max-width:304px;z-index:1500;color:#423e3e;-webkit-box-shadow:0 1px 6px rgba(0,0,0,0.4);box-shadow:0 1px 6px rgba(0,0,0,0.4);} #wunderlist-base .popover .scroll-wrapper{position:relative;overflow:hidden;width:211px} #wunderlist-base .popover .buttonbar{zoom:1;} #wunderlist-base .popover .buttonbar:before,#wunderlist-base .popover .buttonbar:after{content:\"\";display:table} #wunderlist-base .popover .buttonbar:after{clear:both} #wunderlist-base .popover .buttonbar.full{padding:0;margin-bottom:12px;} #wunderlist-base .popover .buttonbar.full a{text-align:center;width:50%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis} #wunderlist-base .popover .buttonbar.toggle-date-type{padding:12px 12px 0 12px} #wunderlist-base .popover .arrow{position:absolute;border-width:12px;border-style:solid;width:0;height:0;z-index:100} #wunderlist-base .popover.top .arrow{left:50%;margin-left:-12px;bottom:-23px;border-color:#f9f9f9 transparent transparent transparent} #wunderlist-base .popover.right .arrow{top:50%;margin-top:-12px;left:-23px;border-color:transparent #f9f9f9 transparent transparent} #wunderlist-base .popover.bottom .arrow{left:50%;margin-left:-12px;top:-23px;border-color:transparent transparent #f9f9f9 transparent} #wunderlist-base .popover.left .arrow{top:50%;margin-top:-12px;right:-23px;border-color:transparent transparent transparent #f9f9f9} #wunderlist-base .popover .inner{padding:12px;font-size:13px;} #wunderlist-base .popover .inner .buttonbar{margin:12px 0 0 0} #wunderlist-base .popover .content p{zoom:1;font-size:11px;} #wunderlist-base .popover .content p:before,#wunderlist-base .popover .content p:after{content:\"\";display:table} #wunderlist-base .popover .content p:after{clear:both} #wunderlist-base .popover .content p.center{padding:10px} #wunderlist-base .popover .content p a{color:#2e93e3;font-weight:bold;} #wunderlist-base .popover .content p a:hover{text-decoration:underline} #wunderlist-base .popover .content.scroll{overflow:scroll} #wunderlist-base .popover div.header{text-align:center;font-weight:bold;height:19px;padding-top:2px;color:#423e3e;font-size:14px;} #wunderlist-base .popover div.header .button{margin:0;position:absolute;right:12px;top:12px;} #wunderlist-base .popover div.header .button.left{left:12px;right:auto} #wunderlist-base .popover .top{margin:-12px -12px 0 -12px;padding:12px;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #f7f7f7), color-stop(1, #f0f0f0));background-image:-webkit-linear-gradient(top, #f7f7f7 0, #f0f0f0 100%);background-image:-moz-linear-gradient(top, #f7f7f7 0, #f0f0f0 100%);background-image:-o-linear-gradient(top, #f7f7f7 0, #f0f0f0 100%);background-image:-ms-linear-gradient(top, #f7f7f7 0, #f0f0f0 100%);background-image:linear-gradient(top, #f7f7f7 0, #f0f0f0 100%);border-bottom:1px solid #bebebe;-webkit-box-shadow:0 2px 2px rgba(0,0,0,0.1);box-shadow:0 2px 2px rgba(0,0,0,0.1);-webkit-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0;} #wunderlist-base .popover .top input{padding:8px;-webkit-border-radius:4px;border-radius:4px} #wunderlist-base .popover .list-menu{margin:-12px;} #wunderlist-base .popover .list-menu li.disabled{text-shadow:0 1px 0 #fff;display:block;padding:6px 10px;background:transparent !important;text-shadow:none !important;color:#aaa;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis;} #wunderlist-base .popover .list-menu li.disabled.last-sync{white-space:normal;overflow:visible;} #wunderlist-base .popover .list-menu li.disabled.last-sync .icon.offline{display:none;margin-top:-2px} #wunderlist-base .popover .list-menu li.disabled.last-sync.offline .icon.offline{display:inline-block} #wunderlist-base .popover .list-menu li.active a{color:#fff;background:#3595e1;text-shadow:0 1px 0 rgba(0,0,0,0.5);} #wunderlist-base .popover .list-menu li.active a .popover{text-shadow:none;display:block} #wunderlist-base .popover .list-menu li a{text-shadow:0 1px 0 #fff;display:block;padding:5px 10px;color:#423e3e;} #wunderlist-base .popover .list-menu li a.open-backgrounds:before{content:'\\25b6';float:right} #wunderlist-base .popover .list-menu li a:hover{color:#fff;background:#3595e1;text-shadow:0 1px 0 rgba(0,0,0,0.5);} #wunderlist-base .popover .list-menu li a:hover.open-backgrounds:after{margin-top:-10px;content:'';width:0;height:30px;position:absolute;right:-27px;border-bottom:51px solid transparent;border-right:106px solid transparent;border-bottom-left-radius:100%;-webkit-transform:rotate(-30deg);-moz-transform:rotate(-30deg);-o-transform:rotate(-30deg);-ms-transform:rotate(-30deg);transform:rotate(-30deg)} #wunderlist-base .popover .list-menu li a:hover .popover{text-shadow:none;display:block} #wunderlist-base .popover .list-menu li a.disabled{background:transparent !important;text-shadow:none !important;color:#aaa} #wunderlist-base .popover .list-menu li.separator{padding-bottom:5px;margin-bottom:5px;border-bottom:1px solid #fff;-webkit-box-shadow:inset 0 -1px 0 rgba(0,0,0,0.05);box-shadow:inset 0 -1px 0 rgba(0,0,0,0.05)} #wunderlist-base .popover .list-menu li:first-child a{-webkit-border-radius:3px 3px 0 0;border-radius:3px 3px 0 0} #wunderlist-base .popover .list-menu li:last-child a{-webkit-border-radius:0 0 3px 3px;border-radius:0 0 3px 3px} #wunderlist-base .popover .list-people{margin-bottom:5px;} #wunderlist-base .popover .list-people li{zoom:1;position:relative;min-height:35px;padding:8px 0;border-bottom:1px solid rgba(0,0,0,0.05);-webkit-box-shadow:inset 0 1px 0 #fff;box-shadow:inset 0 1px 0 #fff;line-height:18px;} #wunderlist-base .popover .list-people li:before,#wunderlist-base .popover .list-people li:after{content:\"\";display:table} #wunderlist-base .popover .list-people li:after{clear:both} #wunderlist-base .popover .list-people li:first-child,#wunderlist-base .popover .list-people li.new-friend{-webkit-box-shadow:none;box-shadow:none} #wunderlist-base .popover .list-people li:last-child{border-bottom:none} #wunderlist-base .popover .list-people li .avatar{position:absolute;top:10px} #wunderlist-base .popover .list-people li .name{color:#423e3e;padding-left:43px;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis;} #wunderlist-base .popover .list-people li .name .name-inner{white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis;display:inline-block;max-width:120px} #wunderlist-base .popover .list-people li .name .tag{margin-left:0} #wunderlist-base .popover .list-people li .description{color:#737272;font-size:11px;padding-left:43px;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis;} #wunderlist-base .popover .list-people li .description a{color:#2e93e3} #wunderlist-base .popover .list-people li .buttons{padding-left:43px;margin-top:5px} #wunderlist-base .popover .list-people li .button.leave-list,#wunderlist-base .popover .list-people li .button.invite-person,#wunderlist-base .popover .list-people li .button.delete-person,#wunderlist-base .popover .list-people li .button.invite-person-success{float:right;margin:5px 4px 0 0} #wunderlist-base .popover .list-people li .button.invite-person .icon,#wunderlist-base .popover .list-people li .button.delete-person .icon{margin:-4px -2px} #wunderlist-base .popover .list-people li .button.invite-person-success .icon{margin:-3px -4px -5px 0} #wunderlist-base .popover .list-people li .button.leave-list{margin-left:5px} #wunderlist-base .popover .list-people li.comment-notification .sender-info{display:block;padding-left:43px;font-size:12px;font-weight:400;word-wrap:break-word} #wunderlist-base .popover .list-people li.comment-notification .task-title{font-weight:bold;color:#423e3e} #wunderlist-base .popover .list-people li.comment-notification .comment-text{font-weight:bold;display:block;color:#1268b2;} #wunderlist-base .popover .list-people li.comment-notification .comment-text:visited{color:#1268b2} #wunderlist-base .popover .list-people li.comment-notification .comment-text:active{color:#1268b2} #wunderlist-base .popover .list-people li.message{border:none !important;-webkit-box-shadow:none;box-shadow:none;} #wunderlist-base .popover .list-people li.message .icon{top:20px;margin-top:0} #wunderlist-base .popover .list-people li.message .name{padding-top:10px;font-weight:bold} #wunderlist-base .popover .list-people li.message textarea{margin-top:10px} #wunderlist-base .popover .list-people li.not-shared{margin-top:30px;color:#939393;text-align:center;text-shadow:0 1px 0 #fff;} #wunderlist-base .popover .list-people li.not-shared:before{display:none} #wunderlist-base .popover .list-people li.not-shared h3{font-size:18px;margin:5px 0;font-weight:500} #wunderlist-base .popover .list-people li.not-shared p{font-size:12px;font-weight:400;padding:0 10px;word-wrap:break-word;} #wunderlist-base .popover .list-people li.not-shared p text{display:inline} #wunderlist-base .popover .list-people li[rel=owner] ~ li.not-shared{display:none} #wunderlist-base .popover .empty-list-coachmark{color:#939393;text-align:center;text-shadow:0 1px 0 #fff;} #wunderlist-base .popover .empty-list-coachmark:before{display:none} #wunderlist-base .popover .empty-list-coachmark h3{font-size:18px;margin:5px 0;font-weight:500} #wunderlist-base .popover .empty-list-coachmark p{font-size:12px;font-weight:400;padding:0 10px;word-wrap:break-word;} #wunderlist-base .popover .empty-list-coachmark p text{display:inline} #wunderlist-base .popover .empty-list-coachmark .icon.bell-large{margin-top:25px;margin-bottom:18px;cursor:default} html[dir=rtl] #wunderlist-base .popover.backgrounds{right:initial;left:-227px} html[dir=rtl] #wunderlist-base .popover .list-menu li a.open-backgrounds:before{content:'\\25c0';float:left} html[dir=rtl] #wunderlist-base .popover .list-people li .name,html[dir=rtl] #wunderlist-base .popover .list-people li .description{padding-left:initial;padding-right:43px} html[dir=rtl] #wunderlist-base .popover .list-people li .button{margin-left:5px} html[dir=rtl] #wunderlist-base .popover .list-people li .button.leave-list,html[dir=rtl] #wunderlist-base .popover .list-people li .button.invite-person,html[dir=rtl] #wunderlist-base .popover .list-people li .button.delete-person,html[dir=rtl] #wunderlist-base .popover .list-people li .button.invite-person-success{float:left} " }; });
define('wunderbits/WBPopoverView',[

  './WBRuntime',
  './WBView',

  'style!_popover'

], function (WBRuntime, WBView, popoverStyle, undefined) {

  

  var _ = WBRuntime._;
  var $ = WBRuntime.$;
  var Backbone = WBRuntime.Backbone;
  var window = WBRuntime.global;

  var _super = WBView.prototype;

  return WBView.extend({

    'className': 'popover',

    'styles': [popoverStyle],

    //Require a WBView as content and a jquery object as target
    initialize: function (options) {

      var self = this;

      _super.initialize.apply(self, arguments);

      if (!(self.options.content instanceof Backbone.View)) {

        throw new Error('Cannot init class without a Backbone view as content');
      }

      if (!(self.options.target instanceof $)) {

        throw new Error('Cannot init class without a Jquery object as target');
      }

      self.name = options.name;
      self.content = self.options.content;
      self.$target = self.options.target;
      self.ignoredElements = self.options.ignoredElements;
      self._bindPopoverEvents();
      self._bindTargetEvents();
      self.popoverOpened = false;
      self.forceTop = options.forceTop;

      if (options.id) {

        self.id = 'error-handle';
      }

      self.debouncedClose = _.debounce(function (source) {

        self.popoverOpened && self.trigger('popover:close', source);
      }, 500, true);

      self.bindTo(WBRuntime, 'interface:scroll', self.debouncedClose);
    },

    //Creates the dom for show the arrow and apppend on the popover
    //Renders the content view and append to the popover
    //Appends the popover to the body
    //If hover options is set, binds the events related
    renderToDOM: function () {

      var self = this;
      var arrow = $('<div>').addClass('arrow');
      var $selfEl = $(self.el);

      $selfEl.html(arrow);
      $selfEl.append(self.options.prerenderedContent === true ? self.content.el : self.content.render().el);
      $('body').append(self.el);

      if (self.options.hover) {

        self._bindHoverEventsOnPopover();
      }

      return self;
    },

    onDestroy: function () {

      var self = this;

      $(document).unbind('click.' + self.cid);

      self.options = null;
      self.content = null;
      self.$target = null;
    },

    toggleVisible: function () {

      var self = this;

      if (self.popoverOpened) {

        self.trigger('popover:close');
      }
      else {

        self.trigger('popover:open');
      }
    },

    // helper to determine if outside click event is on an element for which we need to ignore
    isEventOnIgnoredElement: function (e) {

      var self = this;
      var onIgnoredElement = false;

      if (!e) {
        return false;
      }

      // ignore optional elements e.g. an input that expects user interaction along with the popover
      _.each(self.ignoredElements, function ($el) {

        if ($(e.target)[0] === $el[0]) {

          onIgnoredElement = true;
        }
      });

      return onIgnoredElement;
    },

    //Binds hover events if the options is set, otherwise use
    //click events as default
    _bindTargetEvents: function () {

      var self = this;

      if (self.options.bindToTarget !== false) {

        if (self.options.hover) {

          self._bindHoverEventsOnTarget();
          return;
        }
        self._bindClickEventsOnTarget();
      }
    },

    //Verify if the click was outside of the popover
    //if true, just trigger the popover close event
    _bindOutsideClick: function () {

      var self = this;

      self.outsideClick = self.bindTo($(document), 'click.' + self.cid, function (e) {

        if (self.destroyed || self.isEventOnIgnoredElement(e)) {

          return;
        }

        // Verify if the click was on the popover itself or in the popver's content
        if (e.target === self.el || $(e.target).parents('.popover').size()) {

          return;
        }

        var options = self.options;
        if (typeof options.onBlur === 'function') {

          options.onBlur.call(options.context);
        }

        self.trigger('popover:close');
      });
    },

    //Sets the toggle behavior,
    //If popover is it open, then close,
    //otherwise open it
    _bindClickEventsOnTarget: function () {

      var self = this;
      // var onIgnoredElement = false;

      self.bindTo(self.$target, 'click', function (e) {

        if (self.isEventOnIgnoredElement(e)) {

          return;
        }

        self.toggleVisible();

        e.stopPropagation();
      });
    },

    _bindHoverEventsOnTarget: function () {

      var self = this;
      var timeOpen, delay; //, timeClose

      //Sets the default delay to 500 on hover event
      delay = self.options.delay || 500;

      self.bindTo(self.$target, 'mouseenter', function () {

        timeOpen = window.setTimeout(function () {
          self.trigger('popover:open');
        }, delay);

        //Prevent a previous mouse leave to trigger the closing event
        window.clearTimeout(self.timeClose);
      });

      self.bindTo(self.$target, 'mouseleave', function () {

        //using self here is needed to set properly the mouseleave on the popover every render
        self.timeClose = window.setTimeout(function () {
          self.trigger('popover:close');
        }, delay);

        //Prevent a previuos mouse enter to trigger the closing event
        window.clearTimeout(timeOpen);
      });
    },

    //Binds the main events to the popover
    _bindPopoverEvents: function () {

      var self = this;

      self.on('popover:open', self._openPopover, self);
      self.on('popover:close', self._closePopover, self);
    },

    //Gets info about the target object (position and size),
    _getTargetInfo: function () {

      var self = this;

      return _.extend(self.$target.offset(), {
        'width': self.$target.outerWidth(),
        'height': self.$target.outerHeight()
      });
    },

    //Calculates the position of the popover
    _setPopoverLocation: function () {

      var self = this;
      var absoluteLocation, position;

      //Distance between the popover and the target
      self.margin = self.options.margin || 20;

      //Gives you the target's size and position
      self.targetInfo = self._getTargetInfo();

      //Gives you the popover dimentions
      self.popoverSize = {
        'width': $(self.el).width(),
        'height':$(self.el).height()
      };

      //Default position
      position = self.options.position || self._getDefaultPosition();
      //Gets the offset value passed in the options
      self.offset = self._getOffset();

      //Gets  the quadrat where the target is
      self.quadrant = self._getQuadrant();

      //Based on the position passed in the options, chooses the proper calculation method
      //These methods calculate the position considering the quadrant where the target is
      //That is necessary to permit the popover to move with the window resizing
      //Defining which css property to use to get the correct absolute positoning

      /* jshint indent: false */
      switch (position) {

        case 'top':
          absoluteLocation = self._getTopPosition();
          break;

        case 'right':
          absoluteLocation = self._getRightPosition();
          break;

        case 'left':
          absoluteLocation = self._getLeftPosition();
          break;

        case 'bottom':
          absoluteLocation = self._getBottomPosition();
          break;

        default:
          absoluteLocation = self.getDefaultLocation();
          break;
      }

      //Sets the css position and adds the position on the the dom
      self.$el
        .css(absoluteLocation)
        .addClass(position);

      //Calculates the arrow position
      self._setArrowLocation(position, self.options.arrowPosition, self.options.arrowOffset);
    },

    _getTopPosition: function () {

      var self = this;
      var position = {};

      if (self.quadrant.vertical === 'top' || self.forceTop) {

        position.top = self.targetInfo.top - self.popoverSize.height - self.margin;
      }
      else {

        position.bottom = $(document).height() - self.targetInfo.top + self.margin;
      }

      if (self.quadrant.horizontal === 'left') {

        position.left = self.targetInfo.left + self.targetInfo.width / 2 - self.popoverSize.width / 2 + self.offset;
      }
      else {

        position.right = $('.main-interface').width() - self.targetInfo.left - self.targetInfo.width / 2 - self.popoverSize.width / 2 - self.offset;
      }

      return position;
    },

    _getRightPosition: function () {

      var self = this;
      var position = {};

      if (self.quadrant.vertical === 'top') {

        position.top = self.targetInfo.top + self.targetInfo.height / 2 - self.popoverSize.height / 2;

        if (position.top < 0) {

          self.offset = position.top - 10;
          position.top -= self.offset;
        }

      }
      else {
        position.bottom = $(document).height() - self.targetInfo.top - self.popoverSize.height / 2 - self.targetInfo.height / 2;

        if (position.bottom < 0) {

          self.offset = (position.bottom - 10) * -1;
          position.bottom += self.offset;
        }
      }

      if (self.quadrant.horizontal === 'left') {

        position.left = self.targetInfo.left + self.targetInfo.width + self.margin;
      }
      else {
        position.right = $('.main-interface').width() - self.targetInfo.left - self.targetInfo.width - self.popoverSize.width - self.margin;
      }

      return position;
    },

    _getBottomPosition: function () {

      var self = this;
      var position = {};

      if (self.quadrant.vertical === 'top') {

        position.top = self.targetInfo.top + self.targetInfo.height + self.margin;
      }
      else {

        position.bottom = $(document).height() - self.targetInfo.top - self.targetInfo.height - self.popoverSize.height - self.margin;
      }

      if (self.quadrant.horizontal === 'left') {

        position.left = self.targetInfo.left + self.targetInfo.width / 2 - self.popoverSize.width / 2 + self.offset;
      }
      else {
        //
        position.right = $('.main-interface').width() - self.targetInfo.left - self.targetInfo.width / 2 - self.popoverSize.width / 2 - self.offset;

      }

      return position;
    },

    _getLeftPosition: function () {

      var self = this;
      var position = {};

      if (self.quadrant.vertical === 'top') {

        position.top = self.targetInfo.top + self.targetInfo.height / 2 - self.popoverSize.height / 2;
        if (position.top < 0) {

          self.offset = position.top - 10;
          position.top -= self.offset;
        }
      }
      else {

        position.bottom = $(document).height() - self.targetInfo.top - self.popoverSize.height / 2 - self.targetInfo.height / 2;
        if (position.bottom < 0) {

          self.offset = (position.bottom - 10) * -1;
          position.bottom += self.offset;
        }
      }

      if (self.quadrant.horizontal === 'left') {

        position.left = self.targetInfo.left - self.popoverSize.width - self.margin;
      }
      else{

        position.right = $('.main-interface').width() - self.targetInfo.left + self.margin;
      }

      return position;
    },

    //Returns the quadrant where the target is.
    //Necessary to calculate correctly the absolute position of popover.
    _getQuadrant: function () {

      var self = this;
      return {

        vertical: self.targetInfo.top > $(document).height() * 0.5 ? 'bottom':'top',
        horizontal: self.targetInfo.left > $(document).width() * 0.5 ? 'right':'left'
      };
    },

    //Chosses the best position according the target's location
    //If the target is on the top half of the window, it will return the bottom position
    //otherwise returns top position.
    _getDefaultPosition: function () {

      var self = this;

      return self.targetInfo.top > $(document).height() * 0.5 ? 'top':'bottom';
    },

    //Define the arrow location considering the offset option
    //Always sets the arrow on the middle of the target element
    _setArrowLocation: function (position, arrowPosition, arrowOffset) {

      var self = this;
      var arrowSize = 12; // Defined on the css
      var $arrow = self.$el.find('.arrow');
      var offset;

      if (position === 'top' || position === 'bottom') {

        if (arrowPosition === 'left') {

          offset = $arrow.outerWidth() + self.offset;
        }
        else if (arrowPosition === 'right') {

          offset = self.popoverSize.width - $arrow.outerWidth() + self.offset;
        }
        else if (arrowPosition === 'center') {

          offset = self.popoverSize.width / 2 + self.offset;
        }
        else {

          offset = self.popoverSize.width / 2;
        }

        $arrow.css('left', (offset + arrowOffset) + 'px');
        $arrow.css('margin-left', - self.offset - arrowSize);
      }
      else{

        offset = self.popoverSize.height / 2;
        $arrow.css('top', (offset + arrowOffset) + 'px');
        $arrow.css('margin-top', + self.offset - arrowSize);
      }
    },

    //Get the offset according with the option passed
    //Uses options.position (string or negative/positive value) to set popover offset
    //Strings for options.position could be 'top', 'right', 'left' or 'bottom'
    _getOffset: function () {

      var self = this;
      var offset = self.options.offset;
      offset = typeof(offset) === 'undefined' ? 0 : _.isFunction(offset) ? offset() : offset;

      if ( typeof(offset) === 'string' ) {

        /* jshint indent: false */
        switch (offset) {
          case 'top':
            offset = self.popoverSize.height /2 - self.targetInfo.height / 2;
            break;

          case 'right':
            offset = self.popoverSize.width /2 - self.targetInfo.width / 2;
            break;

          case 'bottom':
            offset = -(self.popoverSize.height /2 - self.targetInfo.height / 2);
            break;

          case 'left':
            offset = - (self.popoverSize.width /2 - self.targetInfo.width / 2);
            break;
        }
      }

      return offset;
    },

    //Set the flag used on the toggle behavior method
    //Called when the 'popover:open' event is trigged
    _openPopover: function () {

      var self = this;
      var options = self.options;
      var context = options.context;

      // close any popovers left in a open state
      if (options.closeOthers) {
        $('body').click();
      }

      if (typeof options.preventOpen === 'function') {
        if (options.preventOpen.call(context)) {
          return;
        }
      }

      self.popoverOpened = true;
      self.renderToDOM();
      self._bindOutsideClick(self.ignoredElements);
      self._setPopoverLocation();
      self._show();

      if (options.onShow) {
        options.onShow.call(context);
      }
    },

    //Verify if the animation option is set, if true, use the fade animation
    _closePopover: function (options) {

      var self = this;

      // this is hack around an FF scroll bug
      // https://wunderlist.lighthouseapp.com/projects/97517-web/tickets/1718-Firefox-Datepicker-in-Detail-View-flashing#ticket-1718-2
      if ((self.name === 'detail-date' || self.name === 'detail-assign') && options === 'lists') {

        return;
      }

      options || (options = {});
      self.options || (self.options = {});

      self.popoverOpened = false;
      self.outsideClick && self.unbindFrom(self.outsideClick);

      if (self.options.onClose) {
        self.options.onClose.call(self.options.context);
      }

      if (self.options && !self.options.animation) {

        if (options.fadeOut) {
          self.$el.fadeOut(150, function () {
            self._cleanUpAndRemovePopover();
          });
        }
        else {
          self._cleanUpAndRemovePopover();
        }

        return;
      }

      self.$el && self.$el.fadeOut('fast', _.bind(self._cleanUpAndRemovePopover,self));
    },

    //Makes some clean up, then remove the element
    //even removing the element sometimes keeps the properties
    _cleanUpAndRemovePopover: function () {

      var self = this;

      if(!self.destroyed) {

        self.$el.removeClass('top right bottom left');
        self.$el.css({top: '', bottom: '', right: '', left: ''});
        self.$el.remove();
      }
    },

    //Verify the animation option, if true, use the fade animation
    _show: function () {

      var self = this;

      if (!self.options.animation) {

        self.$el.show();
        return;
      }

      self.$el.fadeIn('fast');
    },

    //When the hover option is set, prevent the popover closing
    //when moving the mouse to inside the popover
    _bindHoverEventsOnPopover: function () {

      var self = this;
      self.$el.on({

        mouseenter: _.bind(function () {
          window.clearTimeout(self.timeClose);
        }, self),

        mouseleave: _.bind(function () {
          self.trigger('popover:close');
        }, self)
      });
    }
  });
});
/*!
jQuery Waypoints - v1.1.7
Copyright (c) 2011-2012 Caleb Troughton
Dual licensed under the MIT license and GPL license.
https://github.com/imakewebthings/jquery-waypoints/blob/master/MIT-license.txt
https://github.com/imakewebthings/jquery-waypoints/blob/master/GPL-license.txt
*/

/*
Waypoints is a small jQuery plugin that makes it easy to execute a function
whenever you scroll to an element.

GitHub Repository: https://github.com/imakewebthings/jquery-waypoints
Documentation and Examples: http://imakewebthings.github.com/jquery-waypoints

Changelog:
	v1.1.7
		- Actually fix the post-load bug in Issue #28 from v1.1.3.
	v1.1.6
		- Fix potential memory leak by unbinding events on empty context elements.
	v1.1.5
		- Make plugin compatible with Browserify/RequireJS. (Thanks @cjroebuck)
	v1.1.4
		- Add handler option to give alternate binding method. (Issue #34)
	v1.1.3
		- Fix cases where waypoints are added post-load and should be triggered
		  immediately. (Issue #28)
	v1.1.2
		- Fixed error thrown by waypoints with triggerOnce option that were
		  triggered via resize refresh.
	v1.1.1
		- Fixed bug in initialization where all offsets were being calculated
		  as if set to 0 initially, causing unwarranted triggers during the
		  subsequent refresh.
		- Added onlyOnScroll, an option for individual waypoints that disables
		  triggers due to an offset refresh that crosses the current scroll
		  point. (All credit to @knuton on this one.)
	v1.1
		- Moved the continuous option out of global settings and into the options
		  object for individual waypoints.
		- Added the context option, which allows for using waypoints within any
		  scrollable element, not just the window.
	v1.0.2
		- Moved scroll and resize handler bindings out of load.  Should play nicer
		  with async loaders like Head JS and LABjs.
		- Fixed a 1px off error when using certain % offsets.
		- Added unit tests.
	v1.0.1
		- Added $.waypoints('viewportHeight').
		- Fixed iOS bug (using the new viewportHeight method).
		- Added offset function alias: 'bottom-in-view'.
	v1.0
		- Initial release.
	
Support:
	- jQuery versions 1.4.3+
	- IE6+, FF3+, Chrome 6+, Safari 4+, Opera 11
	- Other versions and browsers may work, these are just the ones I've looked at.
*/

(function (factory) {
  var define = window.define;
  if (typeof define === "function" && define.amd) {
    define('vendor/waypoints',['vendor/jquery', 'wunderbits/global'], factory);
  } else {
    factory(window.$, window);
  }
}).call(this, function (jQuery, window) {

(function($, wp, wps, window, undefined){
	'$:nomunge';
	
	var $w = $(window),
	
	// Keeping common strings as variables = better minification
	eventName = 'waypoint.reached',
	
	/*
	For the waypoint and direction passed in, trigger the waypoint.reached
	event and deal with the triggerOnce option.
	*/
	triggerWaypoint = function(way, dir) {
		way.element.trigger(eventName, dir);
		if (way.options.triggerOnce) {
			way.element[wp]('destroy');
		}
	},
	
	/*
	Given a jQuery element and Context, returns the index of that element in the waypoints
	array.  Returns the index, or -1 if the element is not a waypoint.
	*/
	waypointIndex = function(el, context) {
		if (!context) return -1;
		var i = context.waypoints.length - 1;
		while (i >= 0 && context.waypoints[i].element[0] !== el[0]) {
			i -= 1;
		}
		return i;
	},
	
	// Private list of all elements used as scrolling contexts for waypoints.
	contexts = [],
	
	/*
	Context Class - represents a scrolling context.  Properties include:
		element: jQuery object containing a single HTML element.
		waypoints: Array of waypoints operating under this scroll context.
		oldScroll: Keeps the previous scroll position to determine scroll direction.
		didScroll: Flag used in scrolling the context's scroll event.
		didResize: Flag used in scrolling the context's resize event.
		doScroll: Function that checks for crossed waypoints. Called from throttler.
	*/
	Context = function(context) {
		$.extend(this, {
			element: $(context),
			oldScroll: 0,
			
			/*
			List of all elements that have been registered as waypoints.
			Each object in the array contains:
				element: jQuery object containing a single HTML element.
				offset: The window scroll offset, in px, that triggers the waypoint event.
				options: Options object that was passed to the waypoint fn function.
			*/
			'waypoints': [],
			
			didScroll: false,
			didResize: false,
	
			doScroll: $.proxy(function() {
				var newScroll = this.element.scrollTop(),
				
				// Are we scrolling up or down? Used for direction argument in callback.
				isDown = newScroll > this.oldScroll,
				that = this,

				// Get a list of all waypoints that were crossed since last scroll move.
				pointsHit = $.grep(this.waypoints, function(el, i) {
					return isDown ?
						(el.offset > that.oldScroll && el.offset <= newScroll) :
						(el.offset <= that.oldScroll && el.offset > newScroll);
				}),
				len = pointsHit.length;
				
				// iOS adjustment
				if (!this.oldScroll || !newScroll) {
					$[wps]('refresh');
				}

				// Done with scroll comparisons, store new scroll before ejection
				this.oldScroll = newScroll;

				// No waypoints crossed? Eject.
				if (!len) return;

				// If several waypoints triggered, need to do so in reverse order going up
				if (!isDown) pointsHit.reverse();

				/*
				One scroll move may cross several waypoints.  If the waypoint's continuous
				option is true it should fire even if it isn't the last waypoint.  If false,
				it will only fire if it's the last one.
				*/
				$.each(pointsHit, function(i, point) {
					if (point.options.continuous || i === len - 1) {
						triggerWaypoint(point, [isDown ? 'down' : 'up']);
					}
				});
			}, this)
		});
		
		// Setup scroll and resize handlers.  Throttled at the settings-defined rate limits.
		$(context).bind('scroll.waypoints', $.proxy(function() {
			if (!this.didScroll) {
				this.didScroll = true;
				window.setTimeout($.proxy(function() {
					this.doScroll();
					this.didScroll = false;
				}, this), $[wps].settings.scrollThrottle);
			}
		}, this)).bind('resize.waypoints', $.proxy(function() {
			if (!this.didResize) {
				this.didResize = true;
				window.setTimeout($.proxy(function() {
					$[wps]('refresh');
					this.didResize = false;
				}, this), $[wps].settings.resizeThrottle);
			}
		}, this));
		
		$w.load($.proxy(function() {
			/*
			Fire a scroll check, should the page be loaded at a non-zero scroll value,
			as with a fragment id link or a page refresh.
			*/
			this.doScroll();
		}, this));
	},
	
	/* Returns a Context object from the contexts array, given the raw HTML element
	for that context. */
	getContextByElement = function(element) {
		var found = null;
		
		$.each(contexts, function(i, c) {
			if (c.element[0] === element) {
				found = c;
				return false;
			}
		});
		
		return found;
	},
	
	// Methods exposed to the effin' object 
	methods = {
		/*
		jQuery.fn.waypoint([handler], [options])
		
		handler
			function, optional
			A callback function called when the user scrolls past the element.
			The function signature is function(event, direction) where event is
			a standard jQuery Event Object and direction is a string, either 'down'
			or 'up' indicating which direction the user is scrolling.
			
		options
			object, optional
			A map of options to apply to this set of waypoints, including where on
			the browser window the waypoint is triggered. For a full list of
			options and their defaults, see $.fn.waypoint.defaults.
			
		This is how you register an element as a waypoint. When the user scrolls past
		that element it triggers waypoint.reached, a custom event. Since the
		parameters for creating a waypoint are optional, we have a few different
		possible signatures. Let’s look at each of them.

		someElements.waypoint();
			
		Calling .waypoint with no parameters will register the elements as waypoints
		using the default options. The elements will fire the waypoint.reached event,
		but calling it in this way does not bind any handler to the event. You can
		bind to the event yourself, as with any other event, like so:

		someElements.bind('waypoint.reached', function(event, direction) {
		   // make it rain
		});
			
		You will usually want to create a waypoint and immediately bind a function to
		waypoint.reached, and can do so by passing a handler as the first argument to
		.waypoint:

		someElements.waypoint(function(event, direction) {
		   if (direction === 'down') {
		      // do this on the way down
		   }
		   else {
		      // do this on the way back up through the waypoint
		   }
		});
			
		This will still use the default options, which will trigger the waypoint when
		the top of the element hits the top of the window. We can pass .waypoint an
		options object to customize things:

		someElements.waypoint(function(event, direction) {
		   // do something amazing
		}, {
		   offset: '50%'  // middle of the page
		});
			
		You can also pass just an options object.

		someElements.waypoint({
		   offset: 100  // 100px from the top
		});
			
		This behaves like .waypoint(), in that it registers the elements as waypoints
		but binds no event handlers.

		Calling .waypoint on an existing waypoint will extend the previous options.
		If the call includes a handler, it will be bound to waypoint.reached without
		unbinding any other handlers.
		*/
		init: function(f, options) {
			// Register each element as a waypoint, add to array.
			this.each(function() {
				var cElement = $.fn[wp].defaults.context,
				context,
				$this = $(this);

				// Default window context or a specific element?
				if (options && options.context) {
					cElement = options.context;
				}

				// Find the closest element that matches the context
				if (!$.isWindow(cElement)) {
					cElement = $this.closest(cElement)[0];
				}
				context = getContextByElement(cElement);

				// Not a context yet? Create and push.
				if (!context) {
					context = new Context(cElement);
					contexts.push(context);
				}
				
				// Extend default and preexisting options
				var ndx = waypointIndex($this, context),
				base = ndx < 0 ? $.fn[wp].defaults : context.waypoints[ndx].options,
				opts = $.extend({}, base, options);
				
				// Offset aliases
				opts.offset = opts.offset === "bottom-in-view" ?
					function() {
						var cHeight = $.isWindow(cElement) ? $[wps]('viewportHeight')
							: $(cElement).height();
						return cHeight - $(this).outerHeight();
					} : opts.offset;

				// Update, or create new waypoint
				if (ndx < 0) {
					context.waypoints.push({
						'element': $this,
						'offset': null,
						'options': opts
					});
				}
				else {
					context.waypoints[ndx].options = opts;
				}
				
				// Bind the function if it was passed in.
				if (f) {
					$this.bind(eventName, f);
				}
				// Bind the function in the handler option if it exists.
				if (options && options.handler) {
					$this.bind(eventName, options.handler);
				}
			});
			
			// Need to re-sort+refresh the waypoints array after new elements are added.
			$[wps]('refresh');
			
			return this;
		},
		
		
		/*
		jQuery.fn.waypoint('remove')
		
		Passing the string 'remove' to .waypoint unregisters the elements as waypoints
		and wipes any custom options, but leaves the waypoint.reached events bound.
		Calling .waypoint again in the future would reregister the waypoint and the old
		handlers would continue to work.
		*/
		remove: function() {
			return this.each(function(i, el) {
				var $el = $(el);
				
				$.each(contexts, function(i, c) {
					var ndx = waypointIndex($el, c);

					if (ndx >= 0) {
						c.waypoints.splice(ndx, 1);

						if (!c.waypoints.length) {
							c.element.unbind('scroll.waypoints resize.waypoints');
							contexts.splice(i, 1);
						}
					}
				});
			});
		},
		
		/*
		jQuery.fn.waypoint('destroy')
		
		Passing the string 'destroy' to .waypoint will unbind all waypoint.reached
		event handlers on those elements and unregisters them as waypoints.
		*/
		destroy: function() {
			return this.unbind(eventName)[wp]('remove');
		}
	},
	
	/*
	Methods used by the jQuery object extension.
	*/
	jQMethods = {
		
		/*
		jQuery.waypoints('refresh')
		
		This will force a recalculation of each waypoint’s trigger point based on
		its offset option and context. This is called automatically whenever the window
		(or other defined context) is resized, new waypoints are added, or a waypoint’s
		options are modified. If your project is changing the DOM or page layout without
		doing one of these things, you may want to manually call this refresh.
		*/
		refresh: function() {
			$.each(contexts, function(i, c) {
				var isWin = $.isWindow(c.element[0]),
				contextOffset = isWin ? 0 : c.element.offset().top,
				contextHeight = isWin ? $[wps]('viewportHeight') : c.element.height(),
				contextScroll = isWin ? 0 : c.element.scrollTop();
				
				$.each(c.waypoints, function(j, o) {
					/* $.each isn't safe from element removal due to triggerOnce.
					Should rewrite the loop but this is way easier. */
					if (!o) return;

					// Adjustment is just the offset if it's a px value
					var adjustment = o.options.offset,
					oldOffset = o.offset;

					// Set adjustment to the return value if offset is a function.
					if (typeof o.options.offset === "function") {
						adjustment = o.options.offset.apply(o.element);
					}
					// Calculate the adjustment if offset is a percentage.
					else if (typeof o.options.offset === "string") {
						var amount = parseFloat(o.options.offset);
						adjustment = o.options.offset.indexOf("%") ?
							Math.ceil(contextHeight * (amount / 100)) : amount;
					}

					/* 
					Set the element offset to the window scroll offset, less
					all our adjustments.
					*/
					o.offset = o.element.offset().top - contextOffset
						+ contextScroll - adjustment;

					/*
					An element offset change across the current scroll point triggers
					the event, just as if we scrolled past it unless prevented by an
					optional flag.
					*/
					if (o.options.onlyOnScroll) return;

					if (oldOffset !== null && c.oldScroll > oldOffset && c.oldScroll <= o.offset) {
						triggerWaypoint(o, ['up']);
					}
					else if (oldOffset !== null && c.oldScroll < oldOffset && c.oldScroll >= o.offset) {
						triggerWaypoint(o, ['down']);
					}
					/* For new waypoints added after load, check that down should have
					already been triggered */
					else if (!oldOffset && c.element.scrollTop() > o.offset) {
						triggerWaypoint(o, ['down']);
					}
				});
				
				// Keep waypoints sorted by offset value.
				c.waypoints.sort(function(a, b) {
					return a.offset - b.offset;
				});
			});
		},
		
		
		/*
		jQuery.waypoints('viewportHeight')
		
		This will return the height of the viewport, adjusting for inconsistencies
		that come with calling $(window).height() in iOS. Recommended for use
		within any offset functions.
		*/
		viewportHeight: function() {
			return (window.innerHeight ? window.innerHeight : $w.height());
		},
		
		
		/*
		jQuery.waypoints()
		
		This will return a jQuery object with a collection of all registered waypoint
		elements.

		$('.post').waypoint();
		$('.ad-unit').waypoint(function(event, direction) {
		   // Passed an ad unit
		});
		console.log($.waypoints());
		
		The example above would log a jQuery object containing all .post and .ad-unit
		elements.
		*/
		aggregate: function() {
			var points = $();
			$.each(contexts, function(i, c) {
				$.each(c.waypoints, function(i, e) {
					points = points.add(e.element);
				});
			});
			return points;
		}
	};

	
	/*
	fn extension.  Delegates to appropriate method.
	*/
	$.fn[wp] = function(method) {
		
		if (methods[method]) {
			return methods[method].apply(this, Array.prototype.slice.call(arguments, 1));
		}
		else if (typeof method === "function" || !method) {
			return methods.init.apply(this, arguments);
		}
		else if (typeof method === "object") {
			return methods.init.apply(this, [null, method]);
		}
		else {
			$.error( 'Method ' + method + ' does not exist on jQuery ' + wp );
		}
	};
	
	
	/*
	The default options object that is extended when calling .waypoint. It has the
	following properties:
	
	context
		string | element | jQuery*
		default: window
		The context defines which scrollable element the waypoint belongs to and acts
		within. The default, window, means the waypoint offset is calculated with relation
		to the whole viewport.  You can set this to another element to use the waypoints
		within that element.  Accepts a selector string, *but if you use jQuery 1.6+ it
		also accepts a raw HTML element or jQuery object.
	
	continuous
		boolean
		default: true
		If true, and multiple waypoints are triggered in one scroll, this waypoint will
		trigger even if it is not the last waypoint reached.  If false, it will only
		trigger if it is the last waypoint.
		
	handler
		function
		default: undefined
		An alternative way to bind functions to the waypoint, without using the function
		as the first argument to the waypoint function.

	offset
		number | string | function
		default: 0
		Determines how far the top of the element must be from the top of the browser
		window to trigger a waypoint. It can be a number, which is taken as a number
		of pixels, a string representing a percentage of the viewport height, or a
		function that will return a number of pixels.
		
	onlyOnScroll
		boolean
		default: false
		If true, this waypoint will not trigger if an offset change during a refresh
		causes it to pass the current scroll point.
		
	triggerOnce
		boolean
		default: false
		If true, the waypoint will be destroyed when triggered.
	
	An offset of 250 would trigger the waypoint when the top of the element is 250px
	from the top of the viewport. Negative values for any offset work as you might
	expect. A value of -100 would trigger the waypoint when the element is 100px above
	the top of the window.

	offset: '100%'
	
	A string percentage will determine the pixel offset based on the height of the
	window. When resizing the window, this offset will automatically be recalculated
	without needing to call $.waypoints('refresh').

	// The bottom of the element is in view
	offset: function() {
	   return $.waypoints('viewportHeight') - $(this).outerHeight();
	}
	
	Offset can take a function, which must return a number of pixels from the top of
	the window. The this value will always refer to the raw HTML element of the
	waypoint. As with % values, functions are recalculated automatically when the
	window resizes. For more on recalculating offsets, see $.waypoints('refresh').
	
	An offset value of 'bottom-in-view' will act as an alias for the function in the
	example above, as this is a common usage.
	
	offset: 'bottom-in-view'
	
	You can see this alias in use on the Scroll Analytics example page.

	The triggerOnce flag, if true, will destroy the waypoint after the first trigger.
	This is just a shortcut for calling .waypoint('destroy') within the waypoint
	handler. This is useful in situations such as scroll analytics, where you only
	want to record an event once for each page visit.
	
	The context option lets you use Waypoints within an element other than the window.
	You can define the context with a selector string and the waypoint will act within
	the nearest ancestor that matches this selector.
	
	$('.something-scrollable .waypoint').waypoint({
	   context: '.something-scrollable'
	});
	
	You can see this in action on the Dial Controls example.
	
	The handler option gives authors an alternative way to bind functions when
	creating a waypoint.  In place of:
	
	$('.item').waypoint(function(event, direction) {
	   // make things happen
	});
	
	You may instead write:
	
	$('.item').waypoint({
	   handler: function(event, direction) {
	      // make things happen
	   }
	});
	
	*/
	$.fn[wp].defaults = {
		continuous: true,
		offset: 0,
		triggerOnce: false,
		context: window
	};
	
	
	
	
	
	/*
	jQuery object extension. Delegates to appropriate methods above.
	*/
	$[wps] = function(method) {
		if (jQMethods[method]) {
			return jQMethods[method].apply(this);
		}
		else {
			return jQMethods['aggregate']();
		}
	};
	
	
	/*
	$.waypoints.settings
	
	Settings object that determines some of the plugin’s behavior.
		
	resizeThrottle
		number
		default: 200
		For performance reasons, the refresh performed during resizes is
		throttled. This value is the rate-limit in milliseconds between resize
		refreshes. For more information on throttling, check out Ben Alman’s
		throttle / debounce plugin.
		http://benalman.com/projects/jquery-throttle-debounce-plugin/
		
	scrollThrottle
		number
		default: 100
		For performance reasons, checking for any crossed waypoints during a
		scroll event is throttled. This value is the rate-limit in milliseconds
		between scroll checks. For more information on throttling, check out Ben
		Alman’s throttle / debounce plugin.
		http://benalman.com/projects/jquery-throttle-debounce-plugin/
	*/
	$[wps].settings = {
		resizeThrottle: 200,
		scrollThrottle: 100
	};
	
	$w.load(function() {
		// Calculate everything once on load.
		$[wps]('refresh');
	});
})(jQuery, 'waypoint', 'waypoints', window);

});

define('templates/notificationItem',['vendor/handlebars'], function(H) {
var name = 'notificationItem';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  
  return "<span class=\"icon detail-delete\"></span>";
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <div class=\"buttons\"> <a class=\"button green\" target=\"_blank\" href=\"";
  if (stack1 = helpers.readMoreLink) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.readMoreLink; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\"><b>Read More</b></a> </div> ";
  return buffer;
  }

  buffer += "<div class=\"content\"/> ";
  stack1 = helpers['if'].call(depth0, depth0.showDismiss, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.showReadMore, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  });
});
define('views/Notifications/NotificationItemView',[

  'application/runtime',

  'wunderbits/WBView',

  'template!notificationItem'

], function (runtime, WBView, template, undefined) {

  

  var _ = runtime._;

  var _super = WBView.prototype;

  return WBView.extend({

    'tagName': 'li',

    'template': template,

    'attributes': {

      'tabindex': '0'
    },

    'events': {

      'click .icon.detail-delete': '_deleteNotification'
    },

    'initialize': function (options) {

      var self = this;

      self.options = options || {};
      self.model = self.options.model;

      _super.initialize.apply(self, arguments);

      self.subView = self.options.subView;

      self.bindTo(self, 'shown', self.onShow);

      self.bindTo(self.model, 'destroy', self._remove);
      self.bindTo(self.model, 'change:read', self._onChangeRead);
      self.bindTo(runtime.language, 'change:data', self.subView.render);
    },

    'render': function () {

      var self = this;
      var data = {};

      data.showDismiss = self.options.showDismiss;
      data.showReadMore = self.options.showReadMore;
      data.readMoreLink = self.options.readMoreLink;

      _super.render.call(self, data);

      self.$('.content').append(self.addSubview(self.subView).render().el);
      self.$el.attr('rel', self.model.id);

      self._onChangeRead();

      return self;
    },

    // Executed each time the ActivityCenter is shown and this notification is shown, even if it's not actually visible (i.e. too far down in the viewport)
    'onShow': function () {
      
      var self = this;
      self.subView.trigger('shown');
    },

    '_remove': function() {

      var self = this;

      self.destroy();
    },

    '_deleteNotification': function (e) {

      var self = this;

      e && e.stopPropagation();

      self.model.destroy();
    },

    '_onChangeRead': function () {

      var self = this;
      var $icon = self.$el.find('.age');

      _.delay(function () {

        // this delay could have a zombie reference
        if (self.el !== null) {

          self.model && $icon[self.model.attributes.read ? 'removeClass' : 'addClass']('unread');
        }
      }, 1000);
    }
  });
});
define('helpers/messageParser',[

  'application/runtime',

  'collections/ListCollection',
  'collections/TaskCollection',

  'wunderbits/helpers/xss',
  'wunderbits/WBSingleton'

], function (runtime, ListCollection, TaskCollection, XSSHelper, WBSingleton, undefined) {

  

  var _ = runtime._;

  return WBSingleton.extend({

    'parseNotification': function (message, links) {

      var self = this,
          replacements = [];

      // Avoid XSS cleanup from messing up the substring positions
      message = XSSHelper.reverseClean(message);

      // Find all the reploacement positions
      replacements = _.map(links, function (link) {

        var href;
        var replace = XSSHelper.clean(message.substr(link.substring[0], link.substring[1]));

        if (link.type === 'Task') {

          href = self._createTaskURL(link.id);
        }
        else if (link.type === 'List') {

          href = self._createListURL(link.id);
        }

        if (href) {

          href = '<a href="' + href + '">' + replace + '</a>';
        }
        else {
          href = replace;
        }

        if (href) {

          href = '<strong>' + href + '</strong>';
          return [replace, href];
        }
      });

      // Clean up XSS posibilities before replacing & inserting into the DOM
      message = XSSHelper.clean(message);

      // Replace
      _.each(_.compact(replacements), function(replacement) {

        var replace = replacement[0],
        href = replacement[1];

        message = message.replace(replace, href);
      });

      return message;
    },

    '_createListURL': function (resourceId) {

      var string = '';

      var lists = new ListCollection('/lists/all');
      var list = lists.get(resourceId) || lists.get(lists.getIdByAltId(resourceId));

      if (list) {

        string = '#/lists/' + list.attributes.id;
      }

      return string || false;
    },

    '_createTaskURL': function (resourceId) {

      var string = '';

      var tasks = new TaskCollection('/tasks/all');
      var task = tasks.get(resourceId) || tasks.get(tasks.getIdByAltId(resourceId));

      if (task) {

        string = '#/tasks/' + task.attributes.id;
      }

      return string || false;
    }
  });
});
define('templates/notificationsShare',['vendor/handlebars'], function(H) {
var name = 'notificationsShare';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";

function program1(depth0,data) {
  
  var buffer = "", stack1, stack2, options;
  buffer += " <div class=\"buttons\"> <a class=\"button small rounded bluetext accept ";
  stack1 = helpers['if'].call(depth0, depth0.hideAcceptButton, {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "notifications_event_accept", options) : helperMissing.call(depth0, "localized", "notifications_event_accept", options)))
    + "</a> <a class=\"button bluetext transparent accepted ";
  stack2 = helpers.unless.call(depth0, ((stack1 = depth0.share),stack1 == null || stack1 === false ? stack1 : stack1.accepted_at), {hash:{},inverse:self.noop,fn:self.program(2, program2, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\"> <span class=\"icon popover-accepted\"></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "notifications_event_accepted", options) : helperMissing.call(depth0, "localized", "notifications_event_accepted", options)))
    + " </a> </div> ";
  return buffer;
  }
function program2(depth0,data) {
  
  
  return "hidden";
  }

function program4(depth0,data) {
  
  
  return "unread";
  }

  buffer += "<div class=\"share-info\"> <div class=\"creator\" aria-hidden=\"true\"></div> <div class=\"name\"> ";
  if (stack1 = helpers.message) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.message; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </div> </div> <div class=\"footer\"> ";
  stack1 = helpers['if'].call(depth0, depth0.isCreated, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " <div class=\"age ";
  stack1 = helpers.unless.call(depth0, depth0.read, {hash:{},inverse:self.noop,fn:self.program(4, program4, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\">";
  if (stack1 = helpers.ago) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.ago; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</div> </footer>";
  return buffer;
  });
});
define('views/Notifications/NotificationsShareView',[

  'application/runtime',
  'vendor/moment',

  'collections/ListCollection',

  'helpers/messageParser',

  'wunderbits/WBView',
  'views/AvatarView',

  'template!notificationsShare'

], function(runtime, moment, ListCollection, messageParser, WBView, AvatarView, shareTemplate, undefined) {

  

  var _ = runtime._;

  var _super = WBView.prototype;
  var _parser = messageParser;

  return WBView.extend({

    'template': shareTemplate,

    'tagName': 'div',
    'className': 'share-notification',

    'events': {
      'click a.ignore': '_onIgnore',
      'click a.accept': '_onAccept'
    },

    'initialize': function (options) {

      var self = this;
      options = options || {};
      self.lists = new ListCollection('/lists/all');
      self.shareModel = options.shareModel;
      self.notificationModel = options.notificationModel;
      self.type = options.type;

      _super.initialize.apply(self, arguments);

      self.shareModel && self.bindTo(self.shareModel, 'change:accepted_at', self._shareAccepted);

      self.bindTo(runtime, 'time:nextMinute', self.onChangeMinute);
    },

    'render': function() {

      var self = this;
      var json = self.notificationModel.toJSON();

      // make sure we escape all values from user input
      json.message = _.escape(json.message);
      json.summary = _.escape(json.summary);

      json.share = self.shareModel && self.shareModel.toJSON();

      json.isCreated = self.type === 'created';
      json.isAccepted = self.type === 'accepted';

      json.hideAcceptButton = !(json.isCreated && json.share) || (json.share && json.share.accepted_at);

      var list = json.share && self.lists.get(json.share.resource_id);
      // make sure this value is escaped, since it's from user input
      json.listName = list && list.escape('title');

      json.ago = moment(json.created_at).fromNow();

      json.message = _parser.parseNotification(json.message, json.links);

      _super.render.call(self, json);

      if (json.share && json.share.accepted_at) {

        self.defer(function () {

          self.$el && self.$el.closest('li').find('.detail-delete').remove();
        });
      }

      if (json.listName || json.isAccepted) {

        self.defer(function () {
          // removes dismiss icon for already accepted share invites
          self.$el && self.$el.closest('li').find('.detail-delete').remove();
        });
      }

      self.renderAvatar(json.triggered_by.id);

      return self;
    },

    'renderAvatar': function (id) {

      var self = this;
      var $creator = self.$('.creator');

      self.avatarView = self.avatarView || self.addSubview(new AvatarView({size: 'medium'}), 'avatarView');

      $creator.html(self.avatarView.render({id: id}).$el);
    },

    'onChangeMinute': function () {

      var self = this;
      var ago = moment(self.notificationModel.attributes.created_at).fromNow();

      self.$('.age').text(ago);
    },

    '_onAccept': function() {

      this.shareModel.accept();
    },

    '_onIgnore': function() {

      // TODO what happens here?
    },

    '_shareAccepted': function() {

      var self = this;
      var $accept = self.$el.find('.accept');
      var $accepted = self.$el.find('.accepted');

      if (self.shareModel.attributes.accepted_at) {

        $accept.addClass('hidden');
        $accepted.removeClass('hidden');

        self.$el.closest('li').find('.detail-delete').remove();
      }
      else {

        $accept.removeClass('hidden');
        $accepted.addClass('hidden');
      }
    }

  });
});
define('helpers/firefox',[

  'application/runtime',

  'wunderbits/WBSingleton'

], function (runtime, WBSingleton) {

  

  var $ = runtime.$;
  var navigator = runtime.global.navigator;

  // feature detect
  var mozApps = navigator.mozApps;

  return WBSingleton.extend({

    'isInstallable': function () {

      return !!mozApps;
    },

    // get install state - returns promise - resolves iff installed
    'isInstalled': function () {

      var requestDeferred = new $.Deferred();

      if (mozApps) {

        var request = mozApps.getSelf();
        request.onsuccess = function () {

          if (request.result) {

            requestDeferred.resolve();
          }
          else {

            requestDeferred.reject();
          }
        };
      }
      else {

        requestDeferred.reject();
      }

      return requestDeferred.promise();
    },

    'installApp': function () {

      var self = this;
      var installationDeferred = new $.Deferred();

      if (mozApps) {

        var request = mozApps.install('http://web.dev.wunderlist.com:5000//manifest.webapp');
        request.onsuccess = function () {
          // great - display a message, or redirect to a launch page
          installationDeferred.resolve();
        };
        request.onerror = function () {
          // whoops - this.error.name has details
          installationDeferred.rejectWith(self, arguments);
        };
      }
      else {

        installationDeferred.reject();
      }

      return installationDeferred.promise();
    }

  });
});
define('templates/notificationsBrowserStore',['vendor/handlebars'], function(H) {
var name = 'notificationsBrowserStore';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function", self=this;

function program1(depth0,data) {
  
  
  return "hidden";
  }

function program3(depth0,data) {
  
  var stack1, options;
  options = {hash:{},data:data};
  return escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_add_to_chrome", options) : helperMissing.call(depth0, "localized", "button_add_to_chrome", options)));
  }

  buffer += "<div class=\"share-info\"> <div class=\"chrome-icon\"></div> <div class=\"name\"> ";
  if (stack1 = helpers.message) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.message; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + " </div> </div> <div class=\"footer\"> <div class=\"buttons\"> <a class=\"app-install button small rounded bluetext accept ";
  stack1 = helpers['if'].call(depth0, depth0.hideAcceptButton, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"> ";
  stack1 = helpers['if'].call(depth0, depth0.isChrome, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </a> <a class=\"button bluetext transparent accepted ";
  stack1 = helpers.unless.call(depth0, depth0.isAdded, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"> <span class=\"icon popover-accepted\"></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_add_to_store_added", options) : helperMissing.call(depth0, "localized", "button_add_to_store_added", options)))
    + " </a> </div> </footer> ";
  return buffer;
  });
});
define('views/Notifications/NotificationBrowserStoreView',[

  'application/runtime',
  'vendor/moment',

  'collections/ListCollection',

  'helpers/firefox',
  'helpers/messageParser',

  'wunderbits/WBView',

  'template!notificationsBrowserStore'

], function(runtime, moment, ListCollection, Firefox, messageParser, WBView, browserTemplate, undefined) {

  

  var _super = WBView.prototype;
  var _parser = messageParser;

  var chromeWebAppURL = 'https://chrome.google.com/webstore/detail/fjliknjliaohjgjajlgolhijphojjdkc';
  var chromeExtensionURL = 'https://chrome.google.com/webstore/detail/dmnddeddcgdllibmaodanoonljfdmooc';

  return WBView.extend({

    'template': browserTemplate,

    'tagName': 'div',
    'className': 'browser-notification',

    'events': {

      'click a.ignore': '_onIgnore',
      'click a.accept': '_onAddToStore'
    },

    'initialize': function (options) {

      var self = this;
      options = options || {};
      self.notificationModel = options.notificationModel;
      self.type = options.type;

      _super.initialize.apply(self, arguments);
    },

    'render': function() {

      var self = this;
      var json = self.notificationModel.toJSON();

      json.isChrome = self.type === 'chrome' || self.type === 'chrome_extension';
      json.isFirefox = self.type === 'firefox';

      json.message = _parser.parseNotification(json.message, json.links);

      _super.render.call(self, json);
      self.notificationModel.save({'read': true});

      // TODO remove when chrome install process bug-external is fixed
      // https://code.google.com/p/chromium/issues/detail?id=162485
      var url = self.type === 'chrome' ? chromeWebAppURL : self.type === 'chrome_extension' ? chromeExtensionURL : null;
      url && self.$('.app-install').attr('href', url).attr('target', '_blank');

      return self;
    },

    '_onAddToStore': function() {

      var self = this;
      var url;

      if (self.type === 'chrome') {

        url = chromeWebAppURL;
        // TODO reenable when chrome install process bug-external is fixed
        // chrome.webstore.install(url, self._successfullyAddedToStore, self._failedOrCanceled);
      }
      else if (self.type === 'chrome_extension') {

        url = chromeExtensionURL;
        // chrome.webstore.install(url, self._successfullyAddedToStore, self._failedOrCanceled);
      }
      else if (self.type === 'firefox') {

        Firefox.installApp();
      }
    },

    '_successfullyAddedToStore': function () {

      var self = this;

      self.notificationModel.set({

        'hideAcceptButton':true,
        'isAdded':true
      });

      runtime.settings.save('new_installation', 'true');

      self.render();
    },

    '_failedOrCanceled': function (e) {

      var console = runtime.console;
      console.log(e);
    },

    '_onIgnore': function() {

      // TODO what happens here?
    }
  });
});
define('templates/notificationsCampaign',['vendor/handlebars'], function(H) {
var name = 'notificationsCampaign';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"share-info\"> <span class=\"avatar medium wunderlist-avatar\"></span> <div class=\"name\"> ";
  if (stack1 = helpers.message) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.message; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + " </div> </div> <div class=\"footer\"> <div class=\"buttons\"> <a class=\"go button small rounded bluetext\">";
  if (stack1 = helpers.buttonText) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.buttonText; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</a> </div> </footer> ";
  return buffer;
  });
});
define('views/Notifications/NotificationCampaignView',[

  'application/runtime',
  'vendor/moment',

  'helpers/messageParser',

  'wunderbits/WBView',

  'template!notificationsCampaign'

], function(runtime, moment,  messageParser, WBView, campaignNotificationTemplate, undefined) {

  

  var _super = WBView.prototype;
  var _parser = messageParser;

  return WBView.extend({

    'template': campaignNotificationTemplate,

    'tagName': 'div',
    'className': 'campaign-notification',

    'events': {

      'click a.go': 'go'
    },

    'initialize': function (options) {

      var self = this;
      self.options = options || {};
      self.notificationModel = self.options.notificationModel;

      _super.initialize.apply(self, arguments);

      self.bindTo(self, 'shown', self.onShow);
    },

    'renderData': {

      'message': undefined,
      'buttonText': undefined
    },

    'formatData': function (data) {

      var self = this;
      data = _super.formatData.call(self, data);

      var attributes = self.notificationModel.attributes;

      data.message = _parser.parseNotification(attributes.message, attributes.links);
      data.buttonText = attributes.buttonText;

      return data;
    },

    'render': function() {

      var self = this;

      self.formatData(self.renderData);
      _super.render.call(self, self.renderData);
      self.notificationModel.save({'read': true});

      return self;
    },

    'onShow': function () {

      var self = this;
      if (self.notificationModel.id === 'campaign_iyf') {
        runtime.trigger('trackingService', 'UI.Show', 'ActivityCenter/IYFNotification');
      }
    },

    'go': function () {

      var self = this;

      if (self.notificationModel.id === 'campaign_iyf') {
        runtime.trigger('trackingService', 'UI.Tap', 'ActivityCenter/IYFNotification/Button');
      }

      self.options.buttonCallback && self.options.buttonCallback();
    }
  });
});
define('templates/notifications/commentNotificationItem',['vendor/handlebars'], function(H) {
var name = 'notifications/commentNotificationItem';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", self=this, escapeExpression=this.escapeExpression;

function program1(depth0,data) {
  
  
  return "unread";
  }

  buffer += "<span class=\"author\" aria-hidden=\"true\"></span> <div class=\"sender-info\"> ";
  if (stack1 = helpers.markup) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.markup; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </div> <div class=\"footer\"> <div class=\"age ";
  stack1 = helpers.unless.call(depth0, depth0.read, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"> ";
  if (stack1 = helpers.ago) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.ago; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + " </div> </div>";
  return buffer;
  });
});
define('views/Notifications/NotificationCommentsView',[

  'application/runtime',

  'wunderbits/WBView',
  'vendor/moment',
  'views/AvatarView',
  'wunderbits/mixins/UnicodeEmojiViewMixin',

  'template!notifications/commentNotificationItem'

], function (
  runtime,
  WBView,
  moment,
  AvatarView,
  UnicodeEmojiViewMixin,
  template,
  undefined
) {

  

  var _ = runtime._;

  var _super = WBView.prototype;

  return WBView.extend({

    'tagName': 'li',

    'template': template,

    'className': 'comment-notification',

    'attributes': {

      'tabindex': '0'
    },

    'renderData': {
      'id': undefined,
      'markup': undefined,
      'ago': undefined,
    },

    'formatData': function (data) {

      var self = this;

      if (!self.model) {
        return;
      }

      var attributes = self.model.attributes;
      data.id = attributes.id;
      data.markup = attributes.markup;
      data.ago = moment(attributes.created_at).fromNow();

      return data;
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);
      UnicodeEmojiViewMixin.applyTo(self);

      self.bindTo(self.model, 'change:read', self.onChangeRead);
    },

    'render': function () {

      var self = this;
      _super.render.call(self, self.formatData(self.renderData));

      self.$el.attr('rel', self.model.id);
      self.model.attributes.author && self.renderAvatar(self.model.attributes.author.id);

      _.delay(function () {

        self.wrapTaskLink();
        self.wrapCreator();
      }, 10);


      self.renderEmoji(self.$('.comment-text'));
      self.renderEmoji(self.$('.token_1'));

      self.onChangeRead();

      return self;
    },

    'wrapCreator': function () {

      var self = this;

      if (self.model) {
        self.$('.token_0').wrap('<strong>');
      }
    },

    'wrapTaskLink': function () {

      var self = this;

      if (self.model) {

        var selector = self.model.attributes.commenters && self.model.attributes.commenters.length < 2 || self.model.attributes.commenters === 0 ? '.token_1': '.token_2';
        self.$(selector).wrap('<a href="#/tasks/' + self.model.attributes.id + '" class="task-title">');
      }
    },

    'renderAvatar': function (id) {

      var self = this;
      var $author = self.$('.author');

      self.avatarView = self.avatarView || self.addSubview(new AvatarView({size: 'medium'}), 'avatarView');

      $author.html(self.avatarView.render({id: id}).$el);
    },

    'onChangeRead': function () {

      var self = this;
      var $icon = self.$('.age');

      _.delay(function () {

        // this delay could have a zombie reference
        if (self.el !== null) {

          self.model && $icon[self.model.attributes.read ? 'removeClass' : 'addClass']('unread');
        }
      }, 1000);
    }
  });
});
define('templates/notificationsTask',['vendor/handlebars'], function(H) {
var name = 'notificationsTask';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", self=this, escapeExpression=this.escapeExpression;

function program1(depth0,data) {
  
  
  return "unread";
  }

  buffer += "<div class=\"task-info\"> <div class=\"creator\"></div> <div class=\"name\"> ";
  if (stack1 = helpers.message) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.message; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </div> </div> <div class=\"footer\"> <div class=\"age ";
  stack1 = helpers.unless.call(depth0, depth0.read, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\">";
  if (stack1 = helpers.ago) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.ago; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</div> </div>";
  return buffer;
  });
});
define('views/Notifications/NotificationsTaskView',[

  'application/runtime',
  'vendor/moment',

  'collections/ListCollection',

  'helpers/messageParser',

  'models/UserModel',

  'wunderbits/WBView',
  'views/AvatarView',

  'template!notificationsTask'

], function(runtime, moment, ListCollection, messageParser, UserModel, WBView, AvatarView, taskTemplate, undefined) {

  

  var _ = runtime._;

  var _super = WBView.prototype;
  var _parser = messageParser;

  return WBView.extend({

    'template': taskTemplate,

    'tagName': 'div',
    'className': 'task-notification',

    'initialize': function (options) {

      var self = this;
      options = options || {};

      self.lists = new ListCollection('/lists/all');

      self.notificationModel = options.notificationModel;
      self.taskModel = options.taskModel;
      self.listModel = self.taskModel && self.lists.get(self.taskModel.attributes.list_id);

      _super.initialize.apply(self, arguments);

      self.bindTo(runtime, 'time:nextMinute', self.onChangeMinute);
    },

    'render': function() {

      var self = this;
      var json = self.notificationModel.toJSON();

      // make sure we escape all values that could contain user input
      json.message = _.escape(json.message);
      json.summary = _.escape(json.summary);

      json.message = _parser.parseNotification(json.message, json.links);

      json.task = self.taskModel && self.taskModel.toJSON();
      json.list = self.listModel && self.listModel.toJSON();
      json.ago = moment(json.created_at).fromNow();

      _super.render.call(self, json);

      self.renderAvatar(json);

      return self;
    },

    'renderAvatar': function (data) {

      var self = this;
      var $creator = self.$('.creator');

      self.avatarView = self.avatarView || self.addSubview(new AvatarView({size: 'medium', system: data.system}), 'avatarView');

      $creator.html(self.avatarView.render({id: data.triggered_by.id}).$el);
    },

    'onChangeMinute': function () {

      var self = this;
      var ago = moment(self.notificationModel.attributes.created_at).fromNow();

      self.$('.age').text(ago);
    }
  });
});
define('views/Notifications/Controllers/NotificationsPopoverViewController',[

  'application/runtime',
  'wunderbits/WBViewController',

], function (
  runtime,
  WBViewController,
  undefined
) {

  

  return WBViewController.extend({

    'implements': {
      'click:link': 'onClickLink',
      'scroll:top': 'scrollToTop'
    },

    'onClickLink': function () {

      // use mediator event to set a flag in the browser, which will
      // force the next route change to re-render the browser
      runtime.trigger('browser:force:render');
      runtime.trigger('activityCenter:linkClicked');
    },

    'scrollToTop': function () {

      this.view.scrollToTop();
    }
  });
});
define('views/Popovers/PopoverView',[

  'application/runtime',

  'wunderbits/WBViewPresenter',
  'wunderbits/WBPopoverView'


], function (runtime, WBViewPresenter, WBPopoverView, template, undefined) {

  

  var _ = runtime._;
  var window = runtime.global;

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.bindTo(runtime, 'popover:close', self.close);
    },

    'open': function (options) {

      var self = this;

      // reconfig is a flag that extends new options for a popover open, overwriting the initial settings.
      // Used when calling popover.trigger('open', {reconfig:true}) with your new options
      if (options.reconfig) {

        _.extend(self.config, options);
      }

      var popover = self.getPopover(options);
      self.returnRoute = options && options.returnRoute;
      popover.trigger('popover:open');
      self.trigger('opened');
    },

    'close': function (options) {

      var self = this;
      self.doNotRoute = options && options.doNotRoute;
      var popover = self.getPopover(_.extend(options || {}, {
        'autoCreate': false
      }));
      popover && popover.trigger('popover:close', options);
      self.trigger('closed');
    },

    'toggle': function (state, options) {

      var self = this;
      state = _.isArray(state) ? state[0] : state;

      if (!state) {
        state = self.isOpen ? 'close' : 'open';
      }

      self[state](options);
    },

    'getPopover': function (options) {

      var self = this;
      var config = self.getPopoverConfig();

      if (!self.popover && options.autoCreate !== false) {

        if (config.prerenderedContent) {
          config.content.render();
        }
        self.popover = self.addSubview(new WBPopoverView(config));
      }

      return self.popover;
    },

    'getPopoverConfig': function () {

      var self = this;

      if (self.destroyed) {

        return;
      }

      return _.extend({
        'context': self,
        'content': self,
        'target': self.options.target,
        'offset': self.options.offset,
        'position': self.options.position,
        'onShow': self.onPopoverShow.bind(self),
        'onClose': self.onPopoverClose.bind(self)
      }, self.config || {});
    },

    'onPopoverShow': function () {

      var self = this;

      if (!self.isOpen) {

        self.isOpen = true;

        self.defer(function () {
          self.openURL = window.location.href;
          _.isFunction(self.onShow) && self.onShow();
          self.options && _.isFunction(self.options.onShow) && self.options.onShow();
        });
      }
    },

    'onPopoverClose': function () {

      var self = this;

      if (self.isOpen) {

        self.isOpen = false;

        self.delay(function () {

          if (self.destroyed) {
            return;
          }

          var currentURL = window.location.href;
          var isOpenURLActive = (currentURL === self.openURL);
          var returnRoute = self.returnRoute || 'lists/inbox';

          if (isOpenURLActive) {

            runtime.trigger('route:' + returnRoute, {'trigger': false});
          }

          var options = self.options;
          _.isFunction(self.onClose) && self.onClose();
          _.isFunction(options.onClose) && options.onClose.call(self);
        }, 50);
      }
    }
  });
});
define('templates/notificationsPopover',['vendor/handlebars'], function(H) {
var name = 'notificationsPopover';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"header\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_activity_center", options) : helperMissing.call(depth0, "localized", "label_activity_center", options)))
    + "</div> <div class=\"content\" role=\"document\" tabindex=\"0\" data-key-aria-label=\"aria_activity_center_hint\"> <ul class=\"list-people\"></ul> <div class=\"empty-list-coachmark\"> <span class=\"icon bell-large\"></span> <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "notifications_no_notifications", options) : helperMissing.call(depth0, "localized", "notifications_no_notifications", options)))
    + "</h3> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "notifications_no_notifications_message", options) : helperMissing.call(depth0, "localized", "notifications_no_notifications_message", options)))
    + "</p> </div> </div> ";
  return buffer;
  });
});
define('styles/popover/notificationsPopover',[],function() { return {'name': 'popover/notificationsPopover', 'styles': "#wunderlist-base .popover-notifications{min-width:250px;word-wrap:break-word;} #wunderlist-base .popover-notifications .header{cursor:pointer} #wunderlist-base .popover-notifications .list-people{margin:0 -5px 0 0;padding-right:5px;max-height:300px;overflow:auto;} #wunderlist-base .popover-notifications .list-people li{padding:10px 0 8px 0;} #wunderlist-base .popover-notifications .list-people li .chrome-icon{background:url(\"images/wunderlist-login.png\");background-position:-276px -83px;height:32px;width:32px;-webkit-background-size:488px 243px;-moz-background-size:488px 243px;background-size:488px 243px;float:left} #wunderlist-base .popover-notifications .list-people li .content a{color:#423e3e} #wunderlist-base .popover-notifications .list-people li .task-info,#wunderlist-base .popover-notifications .list-people li .share-info{margin-right:18px;} #wunderlist-base .popover-notifications .list-people li .task-info font-size:12px img[src=\"\"],#wunderlist-base .popover-notifications .list-people li .share-info font-size:12px img[src=\"\"]{visibility:hidden} #wunderlist-base .popover-notifications .list-people li .name{overflow:visible;white-space:normal} #wunderlist-base .popover-notifications .list-people li .age{float:right;color:#a3a3a2;font-size:11px;} #wunderlist-base .popover-notifications .list-people li .age.unread{color:#1268b2} #wunderlist-base .popover-notifications .list-people li .icon.detail-delete{position:absolute;right:0;top:9px;opacity:.75;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=75)\";filter:alpha(opacity=75);} #wunderlist-base .popover-notifications .list-people li .icon.detail-delete:hover{opacity:1;-ms-filter:none;filter:none} html[dir=rtl] #notifications-popover{left:auto !important;right:13px !important;} html[dir=rtl] #notifications-popover .arrow{margin-left:72px !important} " }; });
define('views/Notifications/NotificationsPopoverView',[

  'application/runtime',

  'vendor/waypoints',

  'collections/ContactCollection',
  'collections/NotificationCollection',
  'collections/ShareCollection',
  'collections/TaskCollection',

  'views/Notifications/NotificationItemView',
  'views/Notifications/NotificationsShareView',
  'views/Notifications/NotificationBrowserStoreView',
  'views/Notifications/NotificationCampaignView',
  'views/Notifications/NotificationCommentsView',
  'views/Notifications/NotificationsTaskView',

  'views/Notifications/Controllers/NotificationsPopoverViewController',

  'views/Popovers/PopoverView',

  'template!notificationsPopover',

  'style!popover/notificationsPopover'

], function (
  runtime,
  waypoints,
  ContactCollection, NotificationCollection, ShareCollection, TaskCollection,
  NotificationItemView, NotificationsShareView, NotificationBrowserStoreView,
  NotificationCampaignView, NotificationCommentsTaskView, NotificationsTaskView,
  NotificationsPopoverViewController,
  PopoverView,
  template,
  notificationsPopoverStyle,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;

  var _super = PopoverView.prototype;

  return PopoverView.extend({

    'template': template,

    'styles': [
      notificationsPopoverStyle
    ],

    'className': 'inner popover-notifications',

    'config': {

      'prerenderedContent': true,
      'bindToTarget': false,
      'offset': function () {

        return (runtime.env.isMicro() || runtime.env.isMini() ? 0 : 50);
      },
      'margin': 16,
      'id': 'notifications-popover'
    },

    'implements': [NotificationsPopoverViewController],

    'events': {

      'click a': 'click:link',
      'click .header': 'scroll:top'
    },

    'initialize': function() {

      var self = this;
      self._notifications = new NotificationCollection('/notifications/all');
      self._tasks = new TaskCollection('/tasks/all');
      self._shares = new ShareCollection('/shares/all');
      self._pendingShares = new ShareCollection('/shares/pending');

      self._lastTop = 0;

      // chunk stuff
      self._chunkSize = 8;
      self._currentChunkLastId = null;

      _super.initialize.apply(self, arguments);

      self._notificationViews = [];
      self._numNotificationViews = 0;
      self._notifications.sort();
      self.bindTo(self._notifications, 'add', self._onAddNotification);
      self.bindTo(self._notifications, 'remove', self._onRemoveNotification);
      self.bindTo(self._shares, 'change:accepted_at', self.render);

      self._debouncedActivityCenterUpdate = _.debounce(self.updateActivityCenterEmptyState, 250);

      self.debouncedTriggerShowEvent = _.debounce(self.triggerShowEvent, 250);
    },

    'render': function () {

      var self = this;

      _super.render.apply(self, arguments);

      self._lastTop = 0;
      self._notifications.sort(true);
      self._notifications.length && self._renderChunk(self._notifications.at(0).attributes.id, 'down');
      self.updateActivityCenterEmptyState();

      self.applyScrollBind();

      return self;
    },

    '_renderChunk': function (thisId, direction) {

      var self = this;
      var frag = document.createDocumentFragment();
      var down = direction === 'down';

      var thisModel = self._notifications.get(thisId);
      var thisIndex = _.indexOf(self._notifications.models, thisModel);

      var increment = self._chunkSize * 2;
      var stopIndex = down ? thisIndex + increment : thisIndex - increment;

      var i = thisIndex;
      var x = thisIndex;

      while (down ? x < self._notifications.length && i < stopIndex : x >= 0 && i > stopIndex) {

        var notificationModel = self._notifications.at(x);

        if (!notificationModel) {
          down ? x++ : x--;
          return;
        }

        var _view = self._createNotificationView(notificationModel);
        if (_view ) {
          var _createdSubView = self.addSubview(_view, notificationModel.id);

          if (_createdSubView) {
            self._notificationViews.push(_createdSubView);
            self._numNotificationViews++;
            frag.appendChild(_createdSubView.render().el);
          }

          // advance
          down ? i++ : i--;
        }

        down ? x++ : x--;
      }

      self.$el.find('ul')[down ? 'append' : 'prepend'](frag);
    },

    '_renderNextDownChunk': function () {

      var self = this;
      var lastViewIndex = self._notificationViews.length - 1;
      var lastView = self._notificationViews[lastViewIndex];
      var lastTriggerId = lastView.$el.attr('rel');

      self._renderChunk(lastTriggerId, 'down');
      self._createAllWaypoints();
    },

    'triggerShowEvent': function () {

      var self = this;

      if (runtime.focus !== 'notifications') {
        return;
      }

      _.each(self._notificationViews, function (view) {
        if (!view.shown) {
          view.shown = true;
          view.trigger('shown');
        }
      });
    },

    '_markAllAsRead': function () {

      var self = this;

      self._notifications.each(function (model) {
        model.save('read', true);
      });
    },

    'onShow': function () {

      var self = this;

      self.scrollToLastPosition();
      self.resetEvents();
      self._createAllWaypoints();
      self._markAllAsRead();

      runtime.trigger('trackingService', 'UI.Show', 'ActivityCenter');

      self.debouncedTriggerShowEvent();
    },

    'onClose': function () {

      var self = this;

      self.defer(function () {

        if (self.returnFocus && runtime.focus === 'notifications') {
          runtime.trigger('focus:set', self.returnFocus);
          self.returnFocus = null;
        }
      });

      runtime.trigger('trackingService', 'UI.Dismiss', 'ActivityCenter');

      _.each(self._notificationViews, function (view) {
        view.shown = false;
      });
    },

    'scrollToTop': function () {

      var self = this;
      self.$('.list-people').animate({
        'scrollTop': 0
      });
    },

    'resetEvents': function () {

      var self = this;

      self.delegateEvents();
      self.delegateSubviewsEvents();
      self.applyScrollBind();
    },

    'applyScrollBind': function () {

      var self = this;
      self.$('.list-people').scroll(self._onScroll.bind(self));
    },

    '_createNotificationView': function (notificationModel) {

      var self = this;
      var trigger = notificationModel.attributes.trigger;
      var nameSpace = trigger.split(':')[0];
      var action = trigger.split(':')[1];
      var _shareModel, _taskModel, _view;


      if (nameSpace === 'task' || nameSpace === 'file') {

        _taskModel = self._tasks.get(notificationModel.attributes.resource_id);

        _view = self._generateTaskSubView(_taskModel, notificationModel);
      }
      else if (nameSpace === 'system') {

        if (action === 'message') {
          _view = self._generateSystemMessageSubView(notificationModel);
        }
        else {
          _view = self._generateTaskSubView(undefined, notificationModel);
        }
      }
      else if (nameSpace === 'browser') {

        _view = self._generateBrowserAddRequestSubView(notificationModel);
      }
      else if (nameSpace === 'comment') {

        _view = self.generateCommentsSubview(_taskModel, notificationModel);
      }
      else if (nameSpace === 'campaign') {

        if (action === 'iyf') {

          _view = self.generateCampainNotification(notificationModel);
        }
      }
      else if (nameSpace === 'message') {

        // remove!
        _view = self.generateCommentNotificationSubview(_shareModel, action, notificationModel);
      }
      else if (nameSpace === 'share') {

        if (action === 'created') {

          _shareModel = self._pendingShares.get(notificationModel.attributes.resource_id) || self._shares.get(notificationModel.attributes.resource_id);
        }
        else {

          _shareModel = self._shares.get(notificationModel.attributes.resource_id);
        }

        _view = self._generateShareSubView(_shareModel, action, notificationModel);
      }

      // DEBUG LEAVE IN WHILE API IS STILL IMPLEMENTING NOTIFICATIONS
      if (!_view) {

        runtime.console.info('Handling of this Event is not implement in our app: ', notificationModel.attributes);
        // mark all unhandled events as read
        // TODO remove once all events are handled properly
        notificationModel.save({'read': true});
      }
      else {
        self.debouncedTriggerShowEvent();
      }

      return _view;
    },

    '_onAddNotification': function (notificationModel) {

      var self = this;
      var _view = self._createNotificationView(notificationModel);

      if (_view) {

        self._notificationViews.unshift(self.addSubview(_view, notificationModel.id));
        self.$('ul').prepend(self._notificationViews[0].render().el);
        self._lastTop = 0;
        self._numNotificationViews++;
        self._debouncedActivityCenterUpdate();
      }
    },

    '_onRemoveNotification': function (model) {

      var self = this;
      var view = self.getSubview(model.id);

      if (view) {

        self.destroySubview(view);
      }

      self._onDismissNotification();
    },

    'generateCommentNotificationSubview': function (taskModel, type, notificationModel) {

      var _commentNotificationView = new NotificationItemView({

        'showDismiss': type === 'created',
        'model': notificationModel,
        'subView': new NotificationsShareView({

          'notificationModel': notificationModel,
          'type': type
        })
      });

      return _commentNotificationView;
    },

    'generateCommentsSubview': function (taskModel, notificationModel) {

      return new NotificationCommentsTaskView({
        'model': notificationModel
      });
    },

    '_generateShareSubView': function (shareModel, type, notificationModel) {

      var _shareView = new NotificationItemView({

        'showDismiss': type === 'created',
        'model': notificationModel,
        'subView': new NotificationsShareView({

          'shareModel': shareModel,
          'notificationModel': notificationModel,
          'type': type
        })
      });

      return _shareView;
    },

    '_generateTaskSubView': function (taskModel, notificationModel) {

      var _taskView = new NotificationItemView({

        'showDismiss': false,
        'model': notificationModel,
        'subView': new NotificationsTaskView({

          'taskModel': taskModel,
          'notificationModel': notificationModel
        })
      });

      return _taskView;
    },

    '_generateSystemMessageSubView': function (notificationModel) {

      var data = notificationModel.attributes.data;
      var link = data && data.link;

      notificationModel.save({'system': true});

      var _view = new NotificationItemView({
        'showDismiss': true,
        'showReadMore': !!link,
        'readMoreLink': link && link,
        'model': notificationModel,
        'subView': new NotificationsTaskView({

          'notificationModel': notificationModel
        })
      });

      return _view;
    },

    '_generateBrowserAddRequestSubView': function (notificationModel) {

      var _taskView = new NotificationItemView({

        'showDismiss': false,
        'model': notificationModel,
        'subView': new NotificationBrowserStoreView({
          'notificationModel': notificationModel,
          'type': notificationModel.id
        })
      });

      return _taskView;
    },

    'generateCampainNotification': function (notificationModel) {

      var _view = new NotificationItemView({

        'showDismiss': false,
        'model': notificationModel,
        'subView': new NotificationCampaignView({

          'notificationModel': notificationModel,
          'type': notificationModel.attributes.id,
          'buttonCallback': function () {

            runtime.trigger('route:inviteYourFriends');
          }
        })
      });

      return _view;
    },

    // UI EVENT HANDLERS

    // WAYPOINT SHIZZ
    '_createAllWaypoints': function () {

      var self = this;
      _.each(self._notificationViews, function (view, idx) {

        self._createWaypoint(view, idx);
      });
    },

    '_createWaypoint': function (notificationView, idx) {

      if (!notificationView.$el) {

        return;
      }

      var self = this;
      var notificationID = notificationView.$el.attr('rel');
      var notificationModel = self._notifications.get(notificationID);
      var downIndex = self._notificationViews.length - (2 * self._chunkSize);
      downIndex = downIndex <= self._chunkSize ? self._chunkSize : downIndex;
      var isDownTrigger = downIndex === idx;

      // register waypoint for this view!
      notificationView.$el.waypoint('destroy');

      if (notificationModel && isDownTrigger) {

        self.defer(function () {

          notificationView.$el.waypoint(function () {

            isDownTrigger && self._renderNextDownChunk();
          }, {

            'context': self.$el.find('.list-people'),
            'triggerOnce': false,
            'onlyOnScroll': false,
            //'offset': -20
            'offset': 'bottom-in-view'
          });
        });
      }
    },

    '_onReadNotification': function (e) {

      var self = this;
      var $el = $(e.target).closest('li');
      var notificationID = $el.attr('rel');
      var model = self._notifications.get(notificationID);
      model && model.save({'read': true});
    },

    '_onDismissNotification': function () {

      var self = this;

      self._numNotificationViews--;
      self._debouncedActivityCenterUpdate();
    },

    'updateActivityCenterEmptyState': function () {

      var self = this;
      self.$('div.empty-list-coachmark').toggleClass('hidden', self._numNotificationViews !== 0);
    },

    '_onScroll': function () {

      var self = this;
      self._lastTop = self.$el.find('.list-people').scrollTop();
    },

    'scrollToLastPosition': function () {

      var self = this;
      self.$el.find('.list-people').scrollTop(self._lastTop);
    },

    '_onPopoverShow': function () {

      var self = this;
      _super._onPopoverShow.apply(self, arguments);
      self.defer(function () {
        console.log('trying to focus content ... ');
        self.$(' > .content').focus();
      });
    }
  });
});
define('views/Popovers/Controllers/UserPopoverViewController',[

  'application/runtime',
  'wunderbits/helpers/keycodes',
  'wunderbits/WBViewController',

], function (
  runtime,
  Keycodes,
  WBViewController,
  undefined
) {

  

  var $ = runtime.$;

  return WBViewController.extend({

    'implements': {

      'click:link': 'clickLink',
      'logout': 'clickLogout',
      'click:background': 'clickBackground',
      'sync': 'syncNow',
      'goto:proBenefits': 'goToProBenefits',
      'keydown': 'handleKeys'
    },

    'handleKeys': function (ev) {

      var view = this.view;
      var isMainEl = ev.target === view.el;
      if (!isMainEl && ev.which === Keycodes.enter) {
        $(ev.target).find('a').click();
        ev.stopPropagation();
      }
      else if (ev.which === Keycodes.tab) {
        view.navigate(ev.shiftKey ? 'up' : 'down');
        ev.preventDefault();
        ev.stopPropagation();
      }
    },

    'clickBackground': function (e) {

      this.stopEventFully(e);

      var bgThumb = $(e.target).closest('li');
      if (bgThumb.parent().hasClass('not-pro') && !runtime.user.isPro()) {
        return;
      }

      var background = $.trim(e.target.className.replace('background-','wlbackground').replace('active', ''));
      var current = runtime.settings.attributes.background;
      var num = parseInt(background.substr(-2), 10);

      if (current !== background && (num < 17 || runtime.user.isPro())) {
        runtime.settings.save('background', background);
        runtime.trigger('analytics:UserMenu:changeBackground', background);
      }
    },

    'clickLink': function (ev) {

      var self = this;
      var view = self.view;
      var $target = $(ev.target);
      if (ev.target.tagName !== 'A') {
        $target = $target.closest('a');
      }

      view.close();

      var action = $target.attr('data-analytics-action');
      if (action) {
        runtime.trigger('analytics:UserMenu:' + action);
        if (action === 'clickBecomePro') {
          runtime.trigger('analytics:ProAccounts:startProFunnel', 'userMenu');
        }
      }

      var elementPath = $target.attr('data-track-path');
      if (elementPath) {
        runtime.trigger('trackingService', 'UI.Tap', elementPath);
      }
    },

    'clickLogout': function() {

      this.view.renderLoggingOut();

      runtime.trigger('popover:close');
      runtime.trigger('user:logout');
      runtime.trigger('analytics:UserMenu:clickLogout');
    },

    'syncNow': function () {

      runtime.trigger('popover:close');
      runtime.trigger('sync:start');
      runtime.trigger('analytics:UserMenu:clickSync');
    },

    'goToProBenefits': function () {

      runtime.trigger('route:preferences/account/pro');
    }
  });
});
define('wunderbits/mixins/StatefulMixin',[

  '../lib/dependencies',
  '../WBMixin'

], function (dependencies, WBMixin, undefined) {

  

  var _ = dependencies._;
  var w_ = dependencies.w_;

  return WBMixin.extend({

    'attributes': {},
    'options': {},

    'initialize': function (attributes, options) {

      var self = this;
      self.attributes = attributes || {};
      self.options = options || {};
      self.changed = {};
    },

    'set': function (key, val, options) {

      var self = this;
      if (key === null) {
        return self;
      }

      var attrs, attr;
      // Handle both `"key", value` and `{key: value}` -style arguments.
      if (typeof key === 'object') {
        attrs = key;
        options = val;
      } else {
        attrs = {};
        attrs[key] = val;
      }

      // default options are empty
      options || (options = {});

      // no need to track changes on options.silent
      if (options.silent) {
        w_.merge(self.attributes, attr);
      }
      // For each `set` attribute, update or delete the current value.
      else {
        var changes = self.changes(attrs, options);
        self._trigger(attrs, changes, options);
      }
    },

    'changes': function (attrs, options) {

      var self = this;
      var key, val;
      var changes = [];

      var prev = _.clone(self.attributes);
      var current = self.attributes;
      self.changed = {};

      for (key in attrs) {
        val = attrs[key];
        if (!_.isEqual(current[key], val)) {
          changes.push(key);
        }
        if (!_.isEqual(prev[key], val)) {
          self.changed[key] = val;
        } else {
          delete self.changed[key];
        }

        options.unset ? delete current[key] : current[key] = val;
      }
      return changes;
    },

    '_trigger': function (attrs, changes, options) {

      var self = this;
      var current = self.attributes;

      // if any changes found
      // & if this is an EventEmitter,
      // trigger the change events
      var attr;
      while (changes && changes.length && self.trigger) {
        attr = changes.shift();
        self.trigger('change:' + attr, self, current[attr], options);
      }
    }
  });

});
define('wunderbits/models/StateModel',[

  '../WBClass',
  '../mixins/WBEventsMixin',
  '../mixins/StatefulMixin'

], function (
  WBClass, WBEventsMixin, StatefulMixin,
  undefined
) {

  

  return WBClass.extend({

    'mixins': [
      WBEventsMixin,
      StatefulMixin
    ],

    'initialize': function (attributes) {

      var self = this;

      if (attributes) {
        self.attributes = attributes;
      }
    }
  });
});
define('templates/userPopover',['vendor/handlebars'], function(H) {
var name = 'userPopover';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function", self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <li class=\"last-sync disabled\" aria-visible=\"false\"> <span class=\"icon offline\"></span> <span class=\"label\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "userbar_last_synced_$", options) : helperMissing.call(depth0, "localized", "userbar_last_synced_$", options)))
    + "</span> </li> ";
  return buffer;
  }

function program3(depth0,data) {
  
  
  return "disabled";
  }

function program5(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_sync_full", options) : helperMissing.call(depth0, "localized", "settings_sync_full", options)))
    + " ";
  return buffer;
  }

function program7(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "userbar_user_name_for_unregistered_mode", options) : helperMissing.call(depth0, "localized", "userbar_user_name_for_unregistered_mode", options)))
    + " ";
  return buffer;
  }

function program9(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <li role=\"menuitem\" tabindex=\"0\"> <a data-path=\"preferences/account/pro\" data-analytics-action=\"clickBecomePro\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_label_become_a_pro", options) : helperMissing.call(depth0, "localized", "settings_label_become_a_pro", options)))
    + " </a> </li> ";
  return buffer;
  }

function program11(depth0,data) {
  
  
  return "not-pro";
  }

function program13(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <p> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_backgrounds_update_$", "$settings_label_pro_account", options) : helperMissing.call(depth0, "localized", "benefit_backgrounds_update_$", "$settings_label_pro_account", options)))
    + ". </p> ";
  return buffer;
  }

function program15(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <li role=\"menuitem\" tabindex=\"0\"> <a href=\"";
  if (stack1 = helpers.extensionLink) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.extensionLink; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" data-analytics-action=\"clickExtensionInstall\" target=\"_blank\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_install_browser_extension", options) : helperMissing.call(depth0, "localized", "label_install_browser_extension", options)))
    + " </a> </li> ";
  return buffer;
  }

function program17(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <li role=\"menuitem\" tabindex=\"0\"> <a data-path=\"rate\" data-analytics-action=\"clickRateApp\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "rate_label", options) : helperMissing.call(depth0, "localized", "rate_label", options)))
    + " </a> </li> ";
  return buffer;
  }

function program19(depth0,data) {
  
  
  return " <li class=\"separator\" role=\"menuitem\" tabindex=\"0\"> <a data-path=\"labs\" data-analytics-action=\"clickLabs\">Labs</a> </li> ";
  }

function program21(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <li role=\"menuitem\" tabindex=\"0\"><a data-path=\"try/login\" class=\"login\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_log_in", options) : helperMissing.call(depth0, "localized", "button_log_in", options)))
    + "</a></li> <li role=\"menuitem\" tabindex=\"0\"><a data-path=\"try/signup\" class=\"signup\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_sign_up", options) : helperMissing.call(depth0, "localized", "button_sign_up", options)))
    + "</a></li> ";
  return buffer;
  }

function program23(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <li class=\"email disabled\" aria-visible=\"false\">";
  if (stack1 = helpers.email) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.email; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</li> <li role=\"menuitem\" tabindex=\"0\"><a class=\"logout\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_log_out", options) : helperMissing.call(depth0, "localized", "button_log_out", options)))
    + "</a></li> ";
  return buffer;
  }

  buffer += "<div class=\"content\"> <ul class=\"list-menu\"> ";
  stack1 = helpers.unless.call(depth0, depth0.isUnregisteredUser, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " <li class=\"separator\" role=\"menuitem\" tabindex=\"0\"> <a class=\"sync-now ";
  stack1 = helpers['if'].call(depth0, depth0.isUnregisteredUser, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"> ";
  stack1 = helpers.unless.call(depth0, depth0.isUnregisteredUser, {hash:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </a> </li> ";
  stack1 = helpers.unless.call(depth0, depth0.isPro, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " <li role=\"menuitem\" tabindex=\"0\"> <a data-path=\"preferences/account\" data-analytics-action=\"clickAccountSettings\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "userbar_account_settings", options) : helperMissing.call(depth0, "localized", "userbar_account_settings", options)))
    + " </a> </li> <li role=\"menuitem\" tabindex=\"0\"> <a data-path=\"preferences/general\" data-analytics-action=\"clickAccountSettings\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "userbar_preferences", options) : helperMissing.call(depth0, "localized", "userbar_preferences", options)))
    + " </a> </li> <li class=\"separator\" role=\"menuitem\" tabindex=\"0\"> <a class=\"open-backgrounds\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "userbar_change_background", options) : helperMissing.call(depth0, "localized", "userbar_change_background", options)))
    + " <div class=\"popover backgrounds\"> <div class=\"inner\"> <ul class=\"list-backgrounds\"> <li class=\"background-01\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-02\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-03\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-04\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-05\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-06\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-07\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-08\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-09\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-10\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-11\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-12\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-13\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-14\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-15\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-16\" role=\"menuitem\" tabindex=\"0\"></li> <ul class=\"list-pro-backgrounds ";
  stack2 = helpers.unless.call(depth0, depth0.isPro, {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\"> <li class=\"background-17\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-18\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-19\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-20\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-21\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-22\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-23\" role=\"menuitem\" tabindex=\"0\"></li> <li class=\"background-24\" role=\"menuitem\" tabindex=\"0\"></li> </ul> </ul> ";
  stack2 = helpers.unless.call(depth0, depth0.isPro, {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </div> </div> </a> </li> ";
  stack2 = helpers['if'].call(depth0, depth0.extensionLink, {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " ";
  stack2 = helpers['if'].call(depth0, depth0.isChrome, {hash:{},inverse:self.noop,fn:self.program(17, program17, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " <li class=\"separator\" role=\"menuitem\" tabindex=\"0\"> <a data-path=\"invite-your-friends\" data-track-path=\"UserMenu/InviteYourFriendsLink\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "iyf4_usermenu_label", options) : helperMissing.call(depth0, "localized", "iyf4_usermenu_label", options)))
    + " </a> </li> <li role=\"menuitem\" tabindex=\"0\"> <a data-path=\"tell-your-friends\" data-analytics-action=\"clickTellFriends\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_tell_friends", options) : helperMissing.call(depth0, "localized", "label_tell_friends", options)))
    + " </a> </li> <li class=\"separator\" role=\"menuitem\" tabindex=\"0\"> <a data-path=\"whatsnew\" data-analytics-action=\"clickWhatsNew\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "whatsnew_title", options) : helperMissing.call(depth0, "localized", "whatsnew_title", options)))
    + " </a> </li> ";
  stack2 = helpers['if'].call(depth0, depth0.isLabsEnabled, {hash:{},inverse:self.noop,fn:self.program(19, program19, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " ";
  stack2 = helpers['if'].call(depth0, depth0.isUnregisteredUser, {hash:{},inverse:self.program(23, program23, data),fn:self.program(21, program21, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </ul> </div>";
  return buffer;
  });
});
define('styles/popover/userPopover',[],function() { return {'name': 'popover/userPopover', 'styles': "#user-popover .arrow{display:none} #user-popover > .inner{width:200px;border:1px solid #f9f9f9;-webkit-border-radius:4px;border-radius:4px;} #user-popover > .inner p{text-align:center;margin:9px 0 2px 0;font-size:13px} #user-popover > .inner .backgrounds{width:228px;right:-227px;top:24px;} #user-popover > .inner .backgrounds token{color:#7aae45;font-weight:bold} html[dir=rtl] #user-popover{right:5px !important} " }; });
define('styles/popover/backgroundPopover',[],function() { return {'name': 'popover/backgroundPopover', 'styles': "#wunderlist-base .list-backgrounds li{position:relative;display:inline-block;-webkit-box-shadow:inset 0 0 0 1px rgba(0,0,0,0.25);box-shadow:inset 0 0 0 1px rgba(0,0,0,0.25);width:48px;height:48px;-webkit-background-size:48px 48px;-moz-background-size:48px 48px;background-size:48px 48px;} #wunderlist-base .list-backgrounds li.active{-webkit-box-shadow:inset 0 0 0 1px rgba(0,0,0,0.8),inset 0 0 15px rgba(0,0,0,0.5);box-shadow:inset 0 0 0 1px rgba(0,0,0,0.8),inset 0 0 15px rgba(0,0,0,0.5)} #wunderlist-base .list-backgrounds .list-pro-backgrounds.not-pro li{opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50);} #wunderlist-base .list-backgrounds .list-pro-backgrounds.not-pro li:hover{cursor:auto} " }; });
define('views/Popovers/UserPopoverView',[

  'application/runtime',

  'vendor/moment',

  'wunderbits/helpers/keycodes',

  'views/Popovers/Controllers/UserPopoverViewController',

  'views/Popovers/PopoverView',

  'wunderbits/models/StateModel',

  'template!userPopover',

  'style!popover/userPopover',
  'style!popover/backgroundPopover'

], function (
  runtime,
  moment,
  Keycodes,
  UserPopoverViewController,
  PopoverView,
  StateModel,
  template,
  userPopoverStyle,
  backgroundPopoverStyle,
  undefined
) {

  

  var $ = runtime.$;
  var _super = PopoverView.prototype;

  // helper to reduce redudant code
  var language;
  function getLabel () {
    language = language || runtime.language;
    return language.getLabel.apply(language, arguments).toString();
  }

  return PopoverView.extend({

    'template': template,

    'styles': [
      userPopoverStyle,
      backgroundPopoverStyle
    ],

    'className': 'inner',

    'attributes': {
      'role': 'menu',
      'tabindex': '0'
    },

    'config': {
      'bindToTarget': false,
      'margin': 4,
      'offset': 100,
      'id':'user-popover'
    },

    'implements': [UserPopoverViewController],

    'emits': {
      'click a': 'click:link', //'clickLink',
      'click .logout': 'logout', // 'clickLogout',
      'click .backgrounds li': 'click:background', //'clickBackground',
      'click .sync-now': 'sync', //'syncNow',
      'click .backgrounds token': 'goto:proBenefits', //'goToProBenefits',
      'keydown': 'keydown',
      'keydown li': 'keydown'
    },

    'renderData': {
      'email': undefined,
      'isPro': undefined,
      'isChrome': undefined,
      'isUnregisteredUser': undefined,
      'isIE': undefined,
      'extensionLink': undefined,
      'isPackagedApp': undefined,
      'isLabsEnabled': undefined,
      'syncStatus': undefined,
      'pendingCount': undefined
    },

    'formatData': function () {

      var self = this;
      self.state.set({
        'email': runtime.user.attributes.email,
        'isPro': runtime.user.isPro(),
        'isChrome': runtime.env.isChrome(),
        'isUnregisteredUser': runtime.user.isUnregistered(),
        'isIE': runtime.env.isIE(),
        'extensionLink': runtime.env.relevantExtensionLink(),
        'isPackagedApp': runtime.env.isPackagedApp(),
        'isLabsEnabled': runtime.isLabsEnabled()
      });

      return self.state.attributes;
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.state = new StateModel(self.renderData);

      self.ready = new $.Deferred();

      // TODO MOVE TO OBSERVES HASH
      self.bindTo(runtime.user, 'change:email', self._onChangeUserEmail);
      self.bindTo(runtime, 'user:ready', self.ready.resolve);
      self.bindTo(runtime, 'userMenu:navigate', self.navigate);
      self.bindTo(runtime, 'userMenu:select', self.select);
      self.bindTo(runtime.settings, 'change:background', self.selectCurrentBackground);

      self.bindTo(self.state, 'change:syncStatus', self.renderSyncStatus);
      self.bindTo(self.state, 'change:pendingCount', self.renderSyncStatus);

      // self.bindTo(runtime, 'sync:end', self._updateLastSynced);
      self.bindTo(runtime, 'sync', self.updateSyncStatus);

      // On registration, user-ready is fired before this view is even initialized
      // So, If the user model has an ID, then resolve the deferred immediately
      runtime.user.id && self.ready.resolve();
    },

    'render': function () {

      var self = this;

      self.ready.done(function () {

        self.formatData();
        _super.render.call(self, self.state.attributes);
      });

      self.selectCurrentBackground();

      self.bindTo(runtime, 'user:loggingOut', function () {

        if (self.$el) {
          var label = getLabel('label_logging_out');
          self.$('.logout').html(label);
          self.renderLocalized();
        }
      });

      self.updateSyncStatus();
      self.$el.attr('aria-label',  runtime.language.getText('aria_user_menu_hint'));

      return self;
    },

    'navigate': function (direction) {

      var self = this;
      var $els = self.$('.list-menu>li').not('.disabled');
      var $current = $els.filter('.active');
      var menuSize = $els.size();
      var curIndex = $els.index($current);
      var nextIndex;

      if ((direction === 'left' || direction === 'right') && $current.size() && $current.children('a').hasClass('open-backgrounds')) {
        self.navigateBackgrounds(direction);
      }
      else if ($current.size()) {
        if (direction === 'up' || direction === 'down') {
          $els.removeClass('active');
        }

        if (direction === 'up') {
          nextIndex = curIndex > 0 ? curIndex - 1 : menuSize - 1;
        }
        else if (direction === 'down') {
          nextIndex = curIndex < menuSize - 1 ? curIndex + 1 : 0;
        }

        if (nextIndex !== undefined) {
          var $next = $($els.get(nextIndex));
          if ($next.children('a').hasClass('open-backgrounds')) {
            self.selectCurrentBackground();
          }
          $next.addClass('active').focus();
        }
      }
      else {
        $($els.get(0)).addClass('active').focus();
      }
    },

    'navigateBackgrounds': function (direction) {

      var self = this;
      var $els = self.$('.list-backgrounds>li').add('.list-pro-backgrounds>li');
      var $current = $els.filter('.active');
      var menuSize = $els.size();
      var curIndex = $els.index($current);
      var nextIndex;

      if ($current.size()) {
        if (direction === 'left' || direction === 'right') {
          $els.removeClass('active');
        }

        if (direction === 'left') {
          nextIndex = curIndex > 0 ? curIndex - 1 : menuSize - 1;
        }
        else if (direction === 'right') {
          nextIndex = curIndex < menuSize - 1 ? curIndex + 1 : 0;
        }

        $($els.get(nextIndex)).addClass('active').focus();
      }
      else {
        $($els.get(0)).addClass('active').focus();
      }
    },

    'select': function () {

      var self = this;
      var $active = self.$('.active a');
      var size = $active.size();
      var href = $active.attr('href');
      var url = href && href.replace('#/', '');

      if (url) {
        runtime.trigger('route:' + url);
      }
      else if ($active.hasClass('logout')) {
        $active.click();
      }
      else if (size && $active.hasClass('open-backgrounds')) {
        self.$('.list-backgrounds>li.active').add('.list-pro-backgrounds>li.active').click();
      }
    },

    'selectCurrentBackground': function () {

      var self = this;
      self.$('.list-backgrounds>li').add('.list-pro-backgrounds>li').removeClass('active');
      self.$('.background-'+runtime.settings.attributes.background.substr(-2)).addClass('active').focus();
    },

    '_onChangeUserEmail': function () {

      var self = this;
      var email = runtime.user.attributes.email;
      self.$('a.email').text(email);
    },

    'renderLoggingOut': function () {

      this.$('.logout').html(getLabel('label_logging_out'));
    },

    'updateSyncStatus': function (status) {

      var self = this;
      self.state.set({
        'syncStatus': status,
        'pendingCount': runtime.pendingChanges()
      });
    },

    'renderSyncStatus': function () {

      var self = this;
      var online = runtime.env.isOnline();
      var data = self.state.attributes;
      var status = data.syncStatus;
      var count = data.pendingCount;
      var label;

      if (status === 'logout') {
        label = getLabel('label_logging_out');
      }
      else if (online) {

        if (runtime.isSyncing) {

          if (status === 'stillFetching') {
            label = getLabel('label_still_fetching_tasks');
          }
          else {
            label = getLabel('userbar_sync_in_progress');
          }
        }
        else {

          if (!count) {
            label = getLabel('userbar_last_synced_$', moment(runtime.lastSync).fromNow());
          }
          else if (count === 1) {
            label = getLabel('userbar_$_unsynced_item', count);
          }
          else {
            label = getLabel('userbar_$_unsynced_item_plural', count);
          }
        }
      }
      else {

        if (!count) {
          label = getLabel('userbar_no_internet_connection');
        }
        else if (count === 1) {
          label = getLabel('userbar_$_unsynced_item', count);
        }
        else {
          label = getLabel('userbar_$_unsynced_item_plural', count);
        }
      }

      self.$('.last-sync').toggleClass('offline', !online).find('.label').html(label);
      self.renderLabels();
    },

    'open': function () {

      var self = this;
      _super.open.apply(self, arguments);
      self.returnFocus = runtime.focus;

      self.defer(function () {
        runtime.trigger('focus:set', 'userMenu');
      });

      self.$el.focus();
    },

    'close': function () {

      var self = this;
      _super.close.apply(self, arguments);

      self.defer(function () {
        if (runtime.focus === 'userMenu') {
          runtime.trigger('focus:set', self.returnFocus);
        }
      });
    },
  });
});
define('views/Toolbar/Controllers/ToolbarController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',

  'wunderbits/WBViewController'

], function (
  runtime,
  Keycodes,
  WBViewController,
  undefined
) {

  

  return WBViewController.extend({

    'implements': {

      'set:focus': 'setFocus',
      'click:user': 'clickUserAvatar',
      'click:search': 'searchClicked',
      'click:saveSearch': 'saveSearchClicked',
      'click:resetSearch': 'resetSearch',

      'track:activityCenter': 'trackOpenActivityCenter'
    },

    'setFocus': function () {

      runtime.trigger('focus:sidebar');
    },

    'clickUserAvatar': function () {

      var action = runtime.currentRoute() === 'me' ? 'close' : 'open';
      runtime.trigger('analytics:Toolbar:clickUserAvatar', action);
    },

    'searchClicked': function (ev) {

      ev.preventDefault();
      ev.stopPropagation();
      runtime.trigger('route:search');
      runtime.trigger('analytics:Search:clickStart');
    },

    'saveSearchClicked': function () {

      var self = this;
      var view = self.view;
      var query = view.$('input').val();

      if (!view.lists.hasSavedSearch(query)) {

        var data = {
          'title': '{{' + query + '}}',
          'position': view.lists.getNextPosition()
        };

        view.lists.add(data, {
          'active': true
        });
      }
    },

    'resetSearch': function (ev) {

      var self = this;
      var view = self.view;

      ev.preventDefault();
      ev.stopPropagation();

      view.currentSuggestion = null;

      if (view.isSearchActive) {

        runtime.trigger('search:cancel', true);
        view.$('.tag-suggestion').html('');

        var url = view.searchReturnURL;
        view.onSearchSoftCancel();

        if (url) {
          runtime.trigger('route:' + url);
        }
        else {
          runtime.trigger('route');
        }

        if (ev.which) {
          runtime.trigger('analytics:Search:espaceCancel');
        }
        else {
          runtime.trigger('analytics:Search:clickCancel');
        }
      }
    },

    'trackOpenActivityCenter': function () {

      runtime.trigger('trackingService', 'UI.Tap', 'Sidebar/ShowActivityCenterButton');
    }
  });
});
define('views/Toolbar/Controllers/ToolbarKeysController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',

  'wunderbits/WBViewController'

], function (
  runtime,
  Keycodes,
  WBViewController,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;
  var window = runtime.global;

  var _super = WBViewController.prototype;

  return WBViewController.extend({

    'implements': {

      'keydown:button': 'handleKeys',

      'keyup:search': 'debouncedOnChangeSearchTerm',
      'keydown:search': 'searchKeydown'
    },

    'initialize': function () {

      var self = this;
      self.debouncedOnChangeSearchTerm = _.debounce(self.changeSearchTerm, 250);
      _super.initialize.apply(self, arguments);
    },

    'handleKeys': function (ev) {

      var self = this;
      var actionTaken;

      if (ev.which === Keycodes.enter) {
        $(ev.target).click();
        actionTaken = true;
      }
      else if (ev.which === Keycodes.tab) {
        self.handleTab(ev);
        actionTaken = true;
      }

      if (actionTaken) {
        ev.stopPropagation();
        ev.preventDefault();
      }
    },

    'handleTab': function (ev) {

      var self = this;
      var view = self.view;

      var $searchButton = view.$('#search');
      var $activityCenterButton = view.$('#notifications-count');
      var $userMenuButton = view.$('#user');

      var isSearchButton = ev.target === $searchButton[0];
      var isActivityCenterButton = ev.target === $activityCenterButton[0];
      var isUserMenuButton = ev.target === $userMenuButton[0];

      if (ev.shiftKey) {
        if (isSearchButton) {
          $activityCenterButton.focus();
        }
        else if (isActivityCenterButton) {
          $userMenuButton.focus();
        }
        else if (isUserMenuButton) {
          // hm....
        }
      }
      else {
        if (isSearchButton) {
          // convenience trigger to refocus active element in sidebar lists
          runtime.trigger('sidebar:focus:active');
        }
        else if (isActivityCenterButton) {
          $searchButton.focus();
        }
        else if (isUserMenuButton) {
          $activityCenterButton.focus();
        }
      }
    },

    'handleEnter': function () {

    },

    // search specific ... maybe separate controller?
    'changeSearchTerm': function () {

      var self = this;
      var view = self.view;
      var val = view.$('input').val();

      if (self.searchTimer) {
        window.clearTimeout(self.searchTimer);
      }

      self.searchTimer = window.setTimeout(function () {

        if (val === view.lastSearchTerm) {
          return;
        }
        else if (val) {
          runtime.trigger('route:search/' + encodeURIComponent(val));
          runtime.trigger('searchterm:' + val);
          runtime.trigger('analytics:Search:queryLength', val.length);

          // todo move to view
          view.$('.tag-suggestion').html('');

          view.tagAutocompleteEnabled && runtime.trigger('tags:getSuggestions', '#' + val);
        }
        else {
          runtime.trigger('route:search');
        }

        if (val === '') {

          // todo move to view
          view.currentSuggestion = null;
          view.$('.tag-suggestion').html('');
        }
      }, 10);
    },

    'searchKeydown': function (ev) {

      var self = this;
      var view = self.view;

      if (ev.which === Keycodes.esc) {
        view.trigger('click:resetSearch', ev);
      }

      if (ev.which === Keycodes.tab) {
        if (view.fillFromAutoComplete()) {
          ev.preventDefault();
        }
      }

      if (ev.which === Keycodes.backspace) {
        return;
      }

      var val = view.$('input').val();
      if (val === '') {
        view.currentSuggestion = null;
        view.$('.tag-suggestion').html('');
      }

      var key = String.fromCharCode(ev.which).toLowerCase();
      var suggestion = key + view.$('.tag-suggestion').text();

      view.$('.tag-suggestion').html('<span style="opacity:0">' + _.escape(val) + key + '+</span>' + suggestion.substring(val.length + 3));
    }
  });
});
define('templates/toolbars',['vendor/handlebars'], function(H) {
var name = 'toolbars';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing, self=this;

function program1(depth0,data) {
  
  
  return " <div id=\"logo\"> <span class=\"icon logo\"></span> </div> ";
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <a data-path=\"activitycenter\" id=\"logo\"> <span class=\"icon logo\"></span> </a> <a data-path=\"activitycenter\" id=\"notifications-count\" role=\"button\" tabindex=\"0\" data-key-aria-label=\"label_activity_center\"> <span class=\"icon bell\"/> <span class=\"icon bell-left\"></span> <span class=\"bell-mid\"> <span class=\"count\">";
  if (stack1 = helpers.notifications_count) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.notifications_count; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</span> </span> <span class=\"icon bell-right\"></span> </a> ";
  return buffer;
  }

  buffer += "<a id=\"user\" data-path=\"me\" role=\"button\" tabindex=\"0\" aria-label=\"User Menu\" class=\"left\"></a> <div id=\"sync\"> <a data-path=\"me\"> <span class=\"icon offline hidden\"></span> </a> <span class=\"syncing hidden\"></span> </div> <div class=\"unregistered hidden\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "userbar_user_name_for_unregistered_mode", options) : helperMissing.call(depth0, "localized", "userbar_user_name_for_unregistered_mode", options)))
    + "</div> <div id=\"main-toolbar\"> <div class=\"logo-wrapper\"> ";
  stack2 = helpers['if'].call(depth0, depth0.isUnregisteredUser, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " ";
  stack2 = helpers.unless.call(depth0, depth0.isUnregisteredUser, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </div> <a id=\"search\" role=\"button\" tabindex=\"0\" data-key-aria-label=\"aria_search\"> <span class=\"icon menu-search\"></span> </a> </div> <div id=\"search-toolbar\"> <span class=\"icon menu-search\"></span> <input type=\"text\" data-key-placeholder=\"placeholder_search\"/> <!-- <a id=\"save-search\"> <span class=\"icon detail-save\"></span> </a> --> <span class=\"tag-suggestion\"></span> <a id=\"reset-search\" role=\"button\" data-key-aria-label=\"aria_exit_search\" tabindex=\"0\"> <span class=\"icon detail-delete\"></span> </a> </div>";
  return buffer;
  });
});
define('views/Toolbar/ToolbarView',[

  'application/runtime',

  'vendor/moment',

  'wunderbits/helpers/keycodes',

  'collections/ListCollection',
  'collections/NotificationCollection',

  'wunderbits/WBViewPresenter',
  'views/AvatarView',
  'wunderbits/WBPopoverView',
  'views/Notifications/NotificationsPopoverView',
  'views/Popovers/UserPopoverView',

  'views/Toolbar/Controllers/ToolbarController',
  'views/Toolbar/Controllers/ToolbarKeysController',

  'template!toolbars',

  'style!_bars'

], function (
  runtime,
  moment,
  Keycodes,
  ListCollection, NotificationCollection,
  WBViewPresenter, AvatarView, WBPopoverView, NotificationsPopoverView, UserPopoverView,
  ToolbarController, ToolbarKeysController,
  toolbarsTemplate,
  barsStyle,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'template': toolbarsTemplate,

    'id': 'toolbar',

    'styles': [barsStyle],

    'allowSoftCancel': true,

    'implements': [
      ToolbarController,
      ToolbarKeysController
    ],

    'emits': {

      'click': 'set:focus', //'setFocus',
      'click #user': 'click:user', //onClickUserAvatar',
      'click #search': 'click:search', //searchClicked',
      'click #save-search': 'click:saveSearch', //saveSearchClicked',
      'click #reset-search': 'click:resetSearch', //'resetSearch',

      'click #notifications-count': 'track:activityCenter',

      'touchstart #search': 'click:search', //searchClicked',
      'touchstart #reset-search': 'click:resetSearch', //'resetSearch',

      'keyup input': 'keyup:search',//'debouncedOnChangeSearchTerm',
      'keydown input': 'keydown:search', //'searchKeydown',
      'keydown a': 'keydown:button',//'handleKeys'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.initialRender = new $.Deferred();

      self.lists = new ListCollection('/lists/all');
      self._notifications = new NotificationCollection('/notifications/all');
      self._unreadNotifications = new NotificationCollection('/notifications/unread');

      self.bindTo(self._unreadNotifications, 'add remove', self._updateNotificationsCount);

      // trigger specific focus states from other views (switching contexts)
      self.bindTo(runtime, 'tab:to:searchButton', self.focusSearchButton);

      self.bindTo(runtime, 'search:start', self.onSearchStart);
      self.bindTo(runtime, 'search:cancel', self.onSearchSoftCancel);

      self.bindTo(runtime, 'toolbar:userMenu', self.toggleUserPopover);
      self.bindTo(runtime, 'toolbar:notifications', self.toggleNotificationsPopover);

      self.bindTo(runtime, 'sync', self.updateSyncStatus);

      self.bindTo(runtime, 'tags:suggestions', function (tags) {

        if (tags.length && self.$('input').is(':focus')) {

          var currentVal = self.$('input').val();
          self.currentSuggestion = _.first(tags).substring(1);

          var suggestion = _.first(tags).substring(currentVal.length + 1);
          self.$('.tag-suggestion').html('<span style="opacity:0">' + currentVal + '+</span>' + suggestion);
        }
        else {
          self.currentSuggestion = null;
          self.$('.tag-suggestion').html('');
        }
      });

      self.bindTo(runtime, 'search:keywords', self.updateSaveSearchEnabled);
    },

    'render': function () {

      var self = this;
      var json = runtime.user.toJSON();

      json.notifications_count = self._unreadNotifications.length;
      json.isUnregisteredUser = runtime.user.isUnregistered();

      _super.render.call(self, json);

      self._updateBadgeStyle(json.notifications_count);

      self.initialRender.resolve();

      self.userPopover = null;

      self.avatarView = self.avatarView || self.addSubview(new AvatarView({showPro:true}), 'avatarView');
      self.$('#user').html(self.avatarView.render({
        'id': runtime.user.id,
        'isOwnAvatar': true
      }).$el);

      self.updateSyncStatus();

      return self;
    },

    'updateSaveSearchEnabled': function () { // (query)

      // disabling for 2.3.0

      // var self = this;

      // var currentQuery = self.$('input').val();
      // var $search = self.$('#search-toolbar');

      // if (query == currentQuery) {
      //   var isSavedAlready = self.lists.hasSavedSearch(query);
      //   $search.toggleClass('allow-save', !isSavedAlready);
      // }
      // else if (!query) {
      //   $search.toggleClass('allow-save', false);
      // }
    },

    'updateSyncStatus': function () {

      var self = this;
      var $offline = self.$('#sync .offline');
      var $syncing = self.$('#sync .syncing');

      self.defer(function () {

        if (runtime.user.isUnregistered()) {

          self.$('.unregistered').removeClass('hidden');
          return;
        }

        if (runtime.env.isOnline()) {

          if (runtime.isSyncing) {
            $syncing.removeClass('hidden');
            $offline.addClass('hidden');
          }
          else {
            $syncing.addClass('hidden');
            $offline.addClass('hidden');
          }
        }
        else {
          $syncing.addClass('hidden');
          $offline.removeClass('hidden');
        }
      });
    },

    'toggleReturnButton': function (state) {

      var self = this;

      if (self.isSearchActive) {
        return;
      }

      var $returnEl = self.$('#return');

      if (state) {
        $returnEl.show();
      }
      else {
        $returnEl.hide();
      }
    },

    '_updateNotificationsCount': function () {

      var self = this;
      var count = self._unreadNotifications.length;
      var $countEl = self.$('#notifications-count .count');

      $countEl.text(count);
      self._updateBadgeStyle(count);
    },

    '_updateBadgeStyle': function(count) {

      var self = this;
      var $countEl = self.$('#notifications-count');

      if(count !== 0) {
        $countEl.addClass('unread');
      }
      else {
        $countEl.removeClass('unread');
      }
    },

    'fillFromAutoComplete': function () {

      var self = this;
      var $searchInput = self.$('input');
      var currentValue = $searchInput.val();
      var changed = false;

      if (self.currentSuggestion && self.currentSuggestion !== currentValue) {
        $searchInput.val(self.currentSuggestion);
        changed = true;
      }

      return changed;
    },

    'onSearchSoftCancel': function () {

      var self = this;
      if (self.isSearchActive && self.allowSoftCancel) {
        self.isSearchActive = false;
        self.$('#main-toolbar .menu-search').show();
        self.$('#search-toolbar').hide();
        self.$('input').val('');
      }

      self.lastSearchTerm = null;
    },

    'onSearchStart': function (term, returnRoute, options) {

      var self = this;

      self.initialRender.done(function () {

        var showUI = !self.lists.hasSavedSearch(term);
        if (!showUI) {
          runtime.trigger('sidebar:deselect');
          runtime.trigger('search:keywords', term);
          return;
        }

        options || (options = {});

        self.updateSaveSearchEnabled(term);

        var wasSearchActive = self.isSearchActive;
        var action = 'focus';
        var $input = self.$('input');

        term !== $input.val() && $input.val(term || '');

        if (!wasSearchActive) {

          self.isSearchActive = true;
          self.wasSearchEverActiveBefore = true;
          self.$('#main-toolbar .menu-search').hide();
          self.$('#search-toolbar').show();
          action = 'select';
          self.searchReturnURL = returnRoute;
        }

        if (term) {

          runtime.trigger('sidebar:deselect');
          runtime.trigger('search:keywords', term);
        }
        else if (wasSearchActive) {

          // show last browser state if no search term in search input
          var listID = self.searchReturnURL && self.searchReturnURL.replace('lists/', '');

          if (!listID || listID === 'inbox') {

            listID = options.inboxID;
          }

          runtime.trigger('interface:setListOrFilter', listID, options.inboxID);
        }

        runtime.trigger('focus:set', 'sidebar');

        self.lastSearchTerm = term;

        // focus input field
        self.defer(function () {
          $input[action]();
        });
      });
    },

    'toggleNotificationsPopover': function (state, options) {

      var self = this;

      if (!self.notificationsPopover) {
        self.notificationsPopover = self.addSubview(new NotificationsPopoverView({
          'target': self.$('#notifications-count')
        }));
      }

      if (!self.notificationsPopover.isOpen) {

        self.notificationsPopover.returnFocus = runtime.focus;
      }

      runtime.trigger('analytics:Toolbar:clickToggleActivityCenter', state ? 'open' : 'close');
      self.notificationsPopover.toggle(state, options);
    },

    'toggleUserPopover': function (state, options) {

      var self = this;

      var $user = self.$('#user');

      if (!self.userPopover) {

        self.userPopover = self.addSubview(new UserPopoverView({
          'target': $user
        }));

        self.userPopover.onClose = function () {
          self.defer(function () {

            if (self.destroyed || (self.userPopover && self.userPopover.destroyed) || !self.userPopover) {
              return;
            }

            self.userPopover.destroy();
            self.userPopover = null;
          });
        };
      }

      self.userPopover.toggle(state, options);
    },

    'focusSearchButton': function () {

      var self = this;
      self.$('#search').focus();
    }
  });
});
define('templates/sidebarActions',['vendor/handlebars'], function(H) {
var name = 'sidebarActions';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<a class=\"sidebarActions-action delete disabled\"> <span class=\"icon detail-trash\"></span> </a> <a class=\"sidebarActions-action button edit-lists\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_edit", options) : helperMissing.call(depth0, "localized", "button_edit", options)))
    + "</a> <a data-path=\"preferences/general\" class=\"sidebarActions-action settings\" tabindex=\"0\" role=\"button\" data-key-aria-label=\"userbar_preferences\"> <span class=\"icon settings\"/> </a>";
  return buffer;
  });
});
define('styles/sidebarActions',[],function() { return {'name': 'sidebarActions', 'styles': ".sidebarActions{bottom:0;left:0;right:0;height:38px;position:absolute;z-index:1000} .sidebarActions-action{padding:6px 18px 0 15px;opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60);position:absolute;top:0;bottom:0;} .sidebarActions-action:hover{opacity:1;-ms-filter:none;filter:none} .sidebarActions-action.disabled,.sidebarActions-action.disabled:hover{opacity:.2;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=20)\";filter:alpha(opacity=20)} .sidebarActions-action.delete{left:0;padding:11px 8px} .sidebarActions-action.edit-lists{margin-left:11px;display:none} .sidebarActions-action.settings{padding:0;top:12px;right:10px;height:19px} .sidebarActions-wrapper{position:absolute;top:7px;left:50px;right:50px} body.touch .upgrade-to-pro{display:none} html[dir=rtl] #sidebar-actions a.action.delete{left:initial;right:0} html[dir=rtl] #sidebar-actions a.action.settings{right:initial;left:8px} " }; });
define('views/Sidebar/SidebarActionsView',[

  'application/runtime',

  'wunderbits/helpers/keycodes',

  'wunderbits/WBView',

  'template!sidebarActions',
  'style!sidebarActions'

], function (runtime, Keycodes, WBView, sidebarActionsTemplate, sidebarActionsStyle, undefined) {

  

  var _super = WBView.prototype;

  var $ = runtime.$;

  return WBView.extend({

    'className': 'sidebarActions',

    'styles': [sidebarActionsStyle],

    'template': sidebarActionsTemplate,

    'events': {

      'click .delete': 'deleteTarget',
      'click .settings': 'openSettings',
      'click .edit-lists': 'editLists',

      'keydown .settings': 'handleKeys'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.bindTo(runtime, 'actions:set', self.setTarget);
      self.bindTo(runtime, 'actions:delete', self.deleteTarget);
      self.bindTo(runtime, 'actions:edit', self.editTarget);

      self.bindTo(runtime, 'sidebar:editmode:end', function () {
        self.toggleEditButton(false);
      });

      self.bindTo(runtime, 'sidebar:editmode:start', function () {
        self.toggleEditButton(true);
      });
    },

    'handleKeys': function (ev) {

      if (ev.which === Keycodes.enter) {

        $(ev.target).click();
        ev.preventDefault();
        ev.stopPropagation();
      }
    },

    'setTarget': function (target) {

      var self = this;

      self.deletableTarget = null;
      self.editableTarget = null;

      if (target) {

        var ownerID = target.attributes.owner_id;
        var isInbox = (target.id === 'inbox');
        var isOwner = (runtime.user.id === ownerID);

        if (!isInbox) {
          self.deletableTarget = target;
        }

        if (!ownerID || isOwner) {
          self.editableTarget = target;
        }
      }

      self.$('.delete').toggleClass('disabled', !self.deletableTarget);
    },

    'editTarget': function () {

      var self = this;

      if (self.editableTarget) {
        var target = self.editableTarget;
        self.setTarget();
        runtime.trigger('sidebar:edit:start', {
          'editTarget': target,
          'onlyEditIfOnListURL': true
        });
      }
    },

    'editLists': function () {

      var self = this;

      if (!self.isEditing) {

        self.editTarget();

        runtime.trigger('sidebar:editmode:start');
        runtime.trigger('analytics:Sidebar:clickActionsEditLists', 'startEdit');

        self.isEditing = true;
      }
      else {

        runtime.trigger('sidebar:editmode:end');
        runtime.trigger('analytics:Sidebar:clickActionsEditLists', 'stopEdit');

        self.isEditing = false;
      }

      self.toggleEditButton(self.isEditing);
    },

    'toggleEditButton': function (state) {

      var self = this;

      if (state !== undefined) {
        self.isEditing = state;
      }

      if (self.isEditing) {
        self.$el.find('.edit-lists').html(runtime.language.getLabel('button_done').toString());
      }
      else {
        self.$el.find('.edit-lists').html(runtime.language.getLabel('button_edit').toString());
      }

      self.renderLabels();
    },

    'deleteTarget': function () {

      var self = this;
      runtime.trigger('analytics:Sidebar:clickActionsDelete', !!self.deletableTarget ? 'hasTarget' : 'noTarget');
      if (self.deletableTarget) {
        var target = self.deletableTarget;
        self.setTarget();
        runtime.trigger('sidebar:deleteAndSelectNext', target);
      }
    },

    'openSettings': function () {

      runtime.trigger('analytics:Sidebar:clickPreferencesGears');
    }
  });
});
define('templates/tagCloudItem',['vendor/handlebars'], function(H) {
var name = 'tagCloudItem';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<a class=\"percent-";
  if (stack1 = helpers.percent) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.percent; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" data-path=\"search/";
  if (stack1 = helpers.tagUri) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.tagUri; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\">";
  if (stack1 = helpers.tag) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.tag; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</a>";
  return buffer;
  });
});
define('styles/tagCloud',[],function() { return {'name': 'tagCloud', 'styles': ".tagCloud{position:relative;z-index:600;display:block;margin:10px 20px 0 20px;text-align:center;break-word:break-word;word-wrap:break-word;} .tagCloud a{font-weight:normal;font-size:12px;margin-right:6px;display:inline-block;color:#aaa;} .tagCloud a.percent-10{color:#aaa;font-weight:100} .tagCloud a.percent-20{color:#909090;font-weight:200} .tagCloud a.percent-30{color:#777;font-weight:300} .tagCloud a.percent-40{color:#6a6a6a;font-weight:400} .tagCloud a.percent-50{color:#5d5d5d;font-weight:500} .tagCloud a.percent-60{color:#515151;font-weight:600} .tagCloud a.percent-70{color:#5d5d5d;font-weight:700} .tagCloud a.percent-80{color:#444;font-weight:800} .tagCloud a.percent-90{color:#111;font-weight:900} .tagCloud a.percent-100{color:#000;font-weight:900} .tagCloud a:hover{color:#000} " }; });
define('views/Sidebar/TagCloud',[

  'application/runtime',

  'collections/TaskCollection',

  'wunderbits/WBView',

  'template!tagCloudItem',

  'style!tagCloud'

], function (runtime, TaskCollection, WBView, tagItemTemplate, tagCloudStyle) {

  

  var _ = runtime._;
  var $ = runtime.$;

  var _super = WBView.prototype;

  return WBView.extend({

    'className': 'tagCloud',

    'styles': [
      tagCloudStyle
    ],

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.tasks = new TaskCollection('/tasks/all');

      self.debouncedRender = _.debounce(self.render, 2000);

      self.bindTo(self.tasks, 'change:title add remove', self.debouncedRender);
      self.bindTo(runtime, 'tags:tagCloud', self.renderTags);
    },

    'render': function () {

      var self = this;
      _super.render.apply(self, arguments);

      self.getTagCloud();

      return self;
    },

    'getTagCloud': function () {

      runtime.on('db:allTasksLoaded', function () {

        runtime.trigger('tags:getTagCloud');
      });
    },

    'renderTags': function (tags) {

      var self = this;
      var tagData, tagEl, tagCount;

      // alphabatize
      tags = tags && _.sortBy(tags, 'tag');
      // get the max total
      var max = _.max(_.map(tags, function (tag) {

        return tag.ids.length;
      }));

      runtime.on('tasks:ready', function () {

        self.$el.empty();
        var itemsFrag = document.createDocumentFragment();

        for (var key in tags) {

          tagCount = tags[key].ids.length;

          if (tagCount) {
            // percent is of the largest tag to ids count
            // this way the max counts get the maximum weight
            var percent = Math.round((tagCount/max) * 10) * 10;
            tagData = {

              'tag': _.escape(tags[key].tag.replace(/^#/, '')),
              'tagUri': encodeURIComponent(tags[key].tag),
              'percent': percent
            };

            tagEl = $(tagItemTemplate(tagData))[0];

            itemsFrag.appendChild(tagEl);
          }
        }

        self.el.appendChild(itemsFrag);
      });
    }
  });
});
define('helpers/SidebarItemVisibilityHelper',[

  'application/runtime',

  'wunderbits/WBSingleton'

], function (runtime, WBSingleton) {

  

  function _getScrollPosition ($item, $viewport) {

    var itemOffset = $item.offset().top;
    var itemHeight = $item.height();
    var viewportHeight = $viewport.height();
    var viewportScroll = $viewport.scrollTop();
    var viewportOffset = $viewport.offset().top;

    var itemStart = itemOffset;
    var itemEnd = itemOffset + itemHeight;
    var viewportStart = viewportOffset;
    var viewportEnd = viewportOffset + viewportHeight;

    if (itemStart < viewportStart) {
      return (viewportScroll + (itemStart - viewportStart)) - (itemHeight / 2);
    }
    else if (itemEnd > viewportEnd) {
      return (viewportScroll + (itemEnd - viewportEnd)) + (itemHeight / 2);
    }
  }

  return WBSingleton.extend({

    'scrollToItem': function ($item, $viewport, options) {

      // offset() returns undefined when $item is css display:none
      if ($item.offset() === undefined) {

        return;
      }

      var shouldAnimate = options && options.animate;
      var newScrollPosition = _getScrollPosition($item, $viewport);

      if (newScrollPosition !== undefined) {

        if (shouldAnimate) {
          $viewport.stop().animate({ 'scrollTop': newScrollPosition }, 100);
        }
        else {
          $viewport.scrollTop(newScrollPosition);
        }
      }
    }
  });
});
define('templates/sidebar',['vendor/handlebars'], function(H) {
var name = 'sidebar';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"lists-scroll\"> <div class=\"sidebarItem\"> <a class=\"addlist\" role=\"button\" data-key-aria-label=\"settings_shortcuts_new_list\" tabindex=\"0\"> <span class=\"icon detail-add\"></span> <span class=\"icon list-list\"></span> <span class=\"title\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "placeholder_add_list", options) : helperMissing.call(depth0, "localized", "placeholder_add_list", options)))
    + "</span> </a> </div> </div> <div class=\"new-list-dropzone\"/>";
  return buffer;
  });
});
define('views/Sidebar/SidebarView',[

  'application/runtime',

  'collections/ListCollection',
  'collections/TaskCollection',
  'collections/ShareCollection',

  'views/Sidebar/ListsCollectionView',
  'views/Sidebar/SmartListsCollectionView',

  'views/Sidebar/Controllers/SidebarController',
  'views/Sidebar/Controllers/SidebarDragController',
  'views/Sidebar/Controllers/SidebarKeysController',

  'views/Toolbar/ToolbarView',
  'views/Sidebar/SidebarActionsView',
  'views/Sidebar/TagCloud',

  'wunderbits/helpers/keycodes',
  'helpers/SidebarItemVisibilityHelper',
  'helpers/SortBehaviorMixin',
  'wunderbits/helpers/strings',

  'wunderbits/WBViewPresenter',
  'wunderbits/WBPopoverView',
  'wunderbits/WBBlurHelper',

  'template!sidebar',
  'style!_lists'

], function (

  runtime,
  ListCollection, TaskCollection, ShareCollection,
  ListsCollectionView, SmartListsCollectionView,
  SidebarController, SidebarDragController, SidebarKeysController,
  ToolbarView, SidebarActionsView, TagCloudView,
  Keycodes, SidebarItemVisibilityHelper, Sort, Strings,
  WBViewPresenter, WBPopoverView, WBBlurHelper,
  listsTemplate, listsStyle,
  undefined

) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var window = runtime.global;

  var _super = WBViewPresenter.prototype;
  var _blur = WBBlurHelper;
  var _visibility = SidebarItemVisibilityHelper;

  return WBViewPresenter.extend({

    'template': listsTemplate,

    'styles': [listsStyle],

    'className': 'lists-inner',

    'attributes': {

      'tabindex': 0
    },

    'implements': [
      SidebarController,
      SidebarDragController,
      SidebarKeysController
    ],

    'emits': {

      'click li:not(.delete-list) a': 'click:list', // openList
      'MSPointerDown li:not(.delete-list) a': 'click:list',
      'click li.active .list-sharing': 'click:sharing',  //_onDoubleClickShareList
      'dblclick li': 'doubleClick:list', //triggerEditList

      'click .delete-list': 'click:delete', //touchDeleteList
      'click .edit-mode': 'click:edit', //triggerEditList

      // the mousedown fix needs to be applied to the filters also,
      // even though they are not draggable, otherwise the events
      // will propagate differently - this way the processing is unified
      'mousedown .draggable a, .filters-collection a': 'mouse:down', //_mouseDownFix

      'dropmove .addlist': 'hover:addlist', //_hoverAddListCreateFromDrop
      'dropon .addlist': 'dropon:addlist', //_createListFromDrag
      'dropout .addlist': 'dropout:addlist', //_leaveDropZone

      'dropover .new-list-dropzone': 'drag:dropzone', //_dragOverDropZone
      'dropon .new-list-dropzone': 'dropon:dropzone', //_createListFromDrag
      'dropout .new-list-dropzone': 'dragout:dropzone', //_dragOut

      'click .addlist': 'click:addlist', //addNewList

      'keydown': 'keydown' //handleKeys
    },

    'initialize': function (options) {

      var self = this;

      _super.initialize.apply(this, arguments);

      self.debouncedCalculateDropZone = _.debounce(self.calculateDropZone, 250);

      // this is a hack to show the IYF stuff. We need a better way of handling this that does not re-render the whole thing
      // self.bindTo(runtime.user, 'change:product', self.render);

      self.bindTo(self, 'select', self.onSelectList);
      self.bindTo(self, 'deselect', self.onUnselectAll);

      self.bindTo(runtime, 'sidebar:focus:active', self.focusActive);

      self.bindTo(runtime, 'sidebar:select', self.onSelectList);
      self.bindTo(runtime, 'sidebar:reselect', self.onReselectList);
      self.bindTo(runtime, 'sidebar:deselect', self.onUnselectAll);
      self.bindTo(runtime, 'sidebar:edit:start', self.triggerEditList);
      self.bindTo(runtime, 'sidebar:deleteAndSelectNext', self.deleteAndSelectNext);
      self.bindTo(runtime, 'sidebar:selected:add:task', self.routeToAddTask);
      self.bindTo(runtime, 'sidebar:navigate', self.navigateLists);
      self.bindTo(runtime, 'focus:changed', self.saveGlobalFocus);
      self.bindTo(runtime, 'smartlist', self.debouncedCalculateDropZone);
      self.bindTo(runtime, 'sidebar:editmode:start', self.enterTouchEdit);
      self.bindTo(runtime, 'sidebar:editmode:end', self.exitTouchEdit);
      self.bindTo(runtime, 'list:sorting:start', self.filtersVisuallyDisabled);
      self.bindTo(runtime, 'list:sorting:end', self.filtersVisuallyRestored);

      self.bindTo(runtime, 'lists:new', self.addNewList);
      self.bindTo(runtime, 'sidebar:edit:stopped', self.showAddList);

      self.lists = new ListCollection('/lists/all');
      self.sortableLists = new ListCollection('/lists/all/sortable');
      self.shares = new ShareCollection('/shares/all');

      self.listsView = self.addSubview(new ListsCollectionView(options));
      self.filterView = self.addSubview(new SmartListsCollectionView(options));
      self.toolbarView = self.addSubview(new ToolbarView({
        'user': options && options.user
      }));

      if (runtime.isLabsEnabled('tag_cloud')) {
        self.tagCloudView = self.addSubview(new TagCloudView());
      }

      self.sidebarActionsView = self.addSubview(new SidebarActionsView());
      self.bindTo(self.sortableLists, 'change:position', self.sortableLists.sort, self.sortableLists);

      self.debouncedRouteChange = _.debounce(function (id) {
        if (runtime.focus === 'sidebar') {

          runtime.supressSidebarClose(true);
          self.routeToList(id);
        }
      }, 250);
    },

    'routeToList': function (id) {

      var self = this;
      self.trigger('route:list', id);
    },

    'render': function () {

      var self = this;

      var toolbarFrag = document.createDocumentFragment();
      toolbarFrag.appendChild(self.toolbarView.render().el);
      toolbarFrag.appendChild(self.sidebarActionsView.render().el);

      self.$el.empty().append(toolbarFrag);
      self.$el.append(self.template());

      var listFrag = document.createDocumentFragment();
      listFrag.appendChild(self.filterView.render().el);
      listFrag.appendChild(self.listsView.render().el);
      var $list = self.$('.lists-scroll');
      $list.prepend(listFrag);
      self.tagCloudView && $list.append(self.tagCloudView.render().el);

      self.delegateEvents();

      self.listsView.hasRendered.done(function() {
        var $inbox = self.listsView.$el.find('li[rel="inbox"]');
        self.filterView.$el.prepend($inbox);
      });

      self.when(self.listsView.hasRendered, self.filterView.hasRendered).done(self.debouncedCalculateDropZone);
      self.renderLocalized();

      return self;
    },

    'routeToAddTask': function () {

      var self = this;
      var id = self.getSelectedID();
      if (id && id !== 'completed' && id !== 'week') {
        runtime.trigger('route:lists/' + id + '/tasks/new');
      }
    },

    'triggerEditList': function (ev) {

      var self = this;
      self.trigger('doubleClick:list', ev);
    },

    'addNewList': function (ev) {

      var self = this;
      self.trigger('click:addlist', ev);
    },

    'getSelectedID': function () {

      var self = this;
      return self.$('li.active').attr('rel');
    },

    'onReselectList': function (trigger) {

      var self = this;
      var id = self.getSelectedID() || self.$('li').first().attr('rel');
      id && self.onSelectList(id, {
        'trigger': (trigger !== undefined ? trigger : true)
      });
    },

    'enterTouchEdit': function () {

      var self = this;
      if (!runtime.env.isTouchDevice()) {
        return;
      }

      self.isTouchEditing = true;
      var $ListCollection = self.$('.lists-collection');
      $ListCollection.find('li').addClass('touch-edit');
      self.filtersVisuallyDisabled();

      _.each(self.lists.models, function (list) {

        if(!list.attributes.owner_id || list.attributes.owner_id === runtime.user.id) {

          $ListCollection.find('.list-list, .list-sharing').addClass('hidden');
          $ListCollection.find('li[rel="' + list.id + '"] .title').addClass('touch-edit-mode');
          $ListCollection.find('.delete-list').removeClass('hidden');
        }
      });

      var id = self.getSelectedID();
      var blockers = ['inbox', 'completed', 'all', 'today', 'week', 'starred'];

      if (blockers.indexOf(id) < 0 && runtime.currentRoute().indexOf('/edit') < 0) {
        runtime.trigger('route:lists/' + id + '/edit');
      }
    },

    'exitTouchEdit': function () {

      var self = this;
      if (self.isTouchEditing) {
        self.isTouchEditing = false;
        self.cancelEditModes();

        self.filtersVisuallyRestored();
        var $ListCollection = self.$el.find('.lists-collection');

        $ListCollection.find('li').removeClass('touch-edit');
        $ListCollection.find('.count, .list-list, .list-sharing').removeClass('hidden');
        $ListCollection.find('.delete-list, .edit-mode').addClass('hidden');
        $ListCollection.find('.title').removeClass('touch-edit-mode');
      }
    },

    'filtersVisuallyDisabled': function () {

      var self = this;
      var $FilterCollection = self.$('.filters-collection');

      _blur.run();
      $FilterCollection.find('li').addClass('touch-edit-disabled');
    },

    'filtersVisuallyRestored': function () {

      var self = this;
      var $FilterCollection = self.$('.filters-collection');

      $FilterCollection.find('li').removeClass('touch-edit-disabled');
    },

    'deleteAndSelectNext': function (model, options) {

      var self = this;
      var shouldPromptBefore = runtime.settings.attributes.confirm_delete_entity === 'true';

      options || (options = {});

      var action = function () {

        if (self.deleteTimeout) {
          window.clearTimeout(self.deleteTimeout);
        }

        var $el = self.$('[rel="' + model.id + '"]').addClass('destroyed');
        var index = $el.index();

        var filtersLength = self.$('.filters-collection li').not('.user-disabled, .animate-up').length;

        var selectedIndex = index + filtersLength;
        var $items = self.$('li').not('.destroyed, .user-disabled, .animate-up');
        var nextEl = $items.get(selectedIndex);

        if (!nextEl) {
          nextEl = $items.get(selectedIndex - 1);
        }

        self.$('li').removeClass('active selected');
        var nextID = $(nextEl).addClass('active selected').focus().attr('rel');

        var deleteDelay = options.animate === false ? 1 : 500;

        self.deleteTimeout = window.setTimeout(function () {
          self.onSelectList(nextID, { trigger: true });
          self.debouncedCalculateDropZone();
        }, deleteDelay);

        if (model.isShared() && model.isMember()) {

          var shareModel = self.shares.get(model.attributes.share_id);
          shareModel && shareModel.destroy();
        }
        else {

          model.destroy(options);
        }

        if (shouldPromptBefore && options.confirm !== false) {
          var analyticsAction = model.isShared() && !model.isOwner() ? 'confirmLeaveList' : 'confirmDeleteList';
          runtime.trigger('analytics:Sidebar:' + analyticsAction);
        }
        else {
          runtime.trigger('analytics:Sidebar:deleteListWithoutConfirmation');
        }
      };

      var isShared = model.isShared() && !model.isOwner();
      var customTitleKey = isShared ? 'sharing_leave_action' : 'label_are_you_sure_permanently_delete_$_list';
      var customConfirmKey = isShared ? 'sharing_leave_button' : 'label_delete_list';

      var confirmationOptions = {

        'confirm': action,
        'cancel': function () {
          runtime.trigger('actions:set', model);
          runtime.trigger('analytics:Sidebar:cancelDeleteList');
        },

        'customTitle': runtime.language.getLabel(customTitleKey, model.escape('title')).toString(),
        'customText': runtime.language.getLabel('label_cant_undo').toString(),
        'confirmText': runtime.language.getLabel(customConfirmKey).toString()
      };

      if (shouldPromptBefore && options.confirm !== false) {
        runtime.trigger('modal:confirm', confirmationOptions);
      }
      else {
        action();
      }
    },

    'onUnselectAll': function () {

      var self = this;
      self.$('li.active').removeClass('active');
      runtime.trigger('sidebar:selected', null);
    },

    'cancelEditModes': function () {

      runtime.trigger('sidebar:edit:cancel');
    },

    'setSelectionByID': function (id) {

      var self = this;

      self.listsView.ready.done(function () {

        _blur.run();

        self.$('li.active').removeClass('active selected');
        self.$('li[rel="' + id + '"]').addClass('active').focus();
        runtime.trigger('actions:set', self.lists.get(id));
        runtime.trigger('sidebar:selected', id);

        self.debouncedCalculateDropZone();

        if (!self.isTouchEditing) {
          self.scrollToItemWithID(id);
        }

        self.filterView.ensureVisibility(id);
      });
    },

    'scrollToItemWithID': function (id) {

      var self = this;
      var $item = self.$('[rel="' + id + '"]');

      _visibility.scrollToItem($item, self.$('.lists-scroll'), {
        'animate': self.hasExecutedScrollCheck
      });
      self.hasExecutedScrollCheck = true;
    },

    'navigateLists': function (direction) {

      var self = this;
      var notSelectors = '.user-disabled, .animate-up, .destroyed, .hidden';
      var $filters = self.$el.find('.filters-collection').find('li').not(notSelectors);
      var $lists = self.$el.find('.lists-collection').find('li').not(notSelectors);
      var $addlist = self.$el.find('.addlist').not(notSelectors);
      $lists = $filters.add($lists).add($addlist);
      var listIndex = 0;
      var counter = 0;
      var $list, $task, taskId;
      // make sure we have no action target until the route is activated
      runtime.trigger('actions:set', null);

      $lists.each(function (idx, el) {

        if (el === $lists.filter('.active')[0]) {

          listIndex = counter;
          return;
        }
        else {
          counter += 1;
        }
      });

      if (direction === 'up') {

        if (listIndex > 0) {
          $list = $($lists.get(listIndex - 1));
        }
        else {
          $list = $($lists.get($lists.size() - 1));
        }
      }
      else if (direction === 'down') {

        if (listIndex < $lists.length - 1) {
          $list = $($lists.get(listIndex + 1));
        }
        else {
          $list = $($lists.get(0));
        }
      }
      else if (direction === 'right') {

        // to task view
        // this may not be super elegant, but it does get the correct first task id!
        $task = $($('.task-list').find('li').get(0));
        taskId = $task.attr('rel');

        if (taskId !== undefined) {

          if (runtime.currentRoute().indexOf(self.getSelectedID()) >= 0) {
            $task.addClass('active selected').focus();
            runtime.trigger('focus:set', 'browser');
          }
        }
        else {
          runtime.trigger('route:lists/' + self.getSelectedID() + '/tasks/new');
        }

        if (runtime.env.isMicro() || runtime.env.isMini()) {
          runtime.trigger('sidebar:toggle', false);
        }
      }

      if ($list && (direction === 'up' || direction === 'down')) {

        $lists.removeClass('active selected');
        $list.addClass('active selected').focus();
        if ($list[0] !== $addlist[0]) {
          self.debouncedRouteChange($list.attr('rel'));
          self.scrollToItemWithID($list.attr('rel'));
        }
      }
    },

    'saveGlobalFocus': function (focus) {

      var self = this;
      if (focus === 'sidebar') {
        // make sure focus is set for ARIA
        self.$('.active').focus();
      }
    },

    'onSelectList': function (id, options) {

      var self = this;

      if (self.listsView.blockListChangeFromDragEnd && runtime.env.isTouchDevice()) {
        return;
      }

      self.setSelectionByID(id);

      if (options && options.trigger) {
        runtime.trigger('route:lists/' + id);
      }
    },

    'showAddList': function () {

      this.$('.addlist').removeClass('hidden');
    },

    // this method is used to position the dropzone beneath lists,
    // needs to be called every time a list is added or removed
    'calculateDropZone': function() {

      var self = this;
      var filtersHeight = self.$el.find('.filters-collection').outerHeight();
      var listsHeight = self.$el.find('.lists-collection').outerHeight();
      var addListHeight = self.$el.find('.addlist').outerHeight();
      var topMargin = filtersHeight + listsHeight + addListHeight;

      // the height of a listitem is about 3em from the addlist button to position the dropzone
      self.$el.find('.new-list-dropzone').css('margin-top', topMargin +'px' );
    },

    'focusActive': function () {

      var self = this;
      self.$('.active').focus();
    }
  });
});
define('views/Tasks/Controllers/TaskItemViewARIAController',[

  'application/runtime',

  'wunderbits/helpers/date',

  'vendor/moment',

  'collections/AssignableCollection',

  'wunderbits/WBViewController'

], function (

  runtime,
  DateHelper,
  moment,
  AssignableCollection,
  WBViewController
) {

  

  var _ = runtime._;

  var _super = WBViewController.prototype;

  return WBViewController.extend({

    'assignables': undefined,

    'implements': {
      'change': 'updateARIALabel',
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);
      self.assignables = new AssignableCollection('/assignables/' + self.model.attributes.list_id);
    },

    'updateARIALabel': function () {

      var self = this;
      var model = self.model;
      var attributes = model.attributes;

      var string = attributes.title;

      string += self.getCompletedString();
      string += self.getCommentsString();
      string += self.getAttachmentsString();
      string += self.getDueDateString();
      string += self.getRepeatString();
      string += self.getAssignmentString();
      string += self.getStarredString();

      self.view.renderAriaLabel(string);
    },

    'getAssignmentString': function () {

      var self = this;
      var model = self.model;
      var string = '';
      if (model.isAssigned()) {
        var assignee = self.assignables.where({'assignable_id' : model.attributes.assignee_id})[0];
        if (assignee) {
          // TODO LOCALIZE
          string += ' Assigned to ' + assignee.attributes.name;
        }
      }

      return string;
    },

    'getAttachmentsString': function () {

      var string = '';
      if (this.model.hasAttachment()) {
        // TODO LOCALIZE
        string += ' ' + 'Has attachments.';
      }
      return string;
    },

    'getCommentsString': function () {

      var string = '';
      if (this.model.hasComments()) {
        // TODO LOCALIZE
        string += ' ' + 'Has comments.';
      }

      return string;
    },

    'getCompletedString': function () {

      var string = '';
      if (this.model.isCompleted()) {
        string += ' ' +  runtime.language.getText('voiceover_task_completed');
      }

      return string;
    },

    'getDueDateString': function () {
      
      var self = this;
      var model = self.model;
      var string = '';

      if (model.hasDueDate()) {

        var date = DateHelper.convertServerDateToLocalDate(model.attributes.due_date);
        var humanizedDate = date && DateHelper.humanizeDueDate(date, null, true);
        var dueOn;

        // Render the date
        if (DateHelper.isHumanizeable(date) && humanizedDate.indexOf('label_relative_date_') !== -1) {
          // the indexOf above is to insure that a key was returned and not a formatted date
          // should never happen, but it has been a bug that was reported by a few users for some time
          dueOn = runtime.language.getText('label_due_$', '$' + humanizedDate);
        }
        else {
          dueOn = runtime.language.getText('label_due_on', moment(date, 'YYYY-MM-DD').format('MMM D, YYYY'));
        }

        string += ' ' + dueOn;
      }

      return string;

    },

    'getRepeatString': function () {

      var self = this;
      var attributes = self.model.attributes;
      var string = '';

      // Reoccurance info
      var interval = attributes.recurrence_type;
      var frequency = attributes.recurrence_count;
      if (interval && frequency && interval.toLowerCase() !== 'none' && _.last(interval) !== 's') {

        var repeatString;
        if (frequency === 1) {
          repeatString = runtime.language.getText('label_repeat_' + interval).toString();
        }
        else if (frequency > 1) {
          repeatString = runtime.language.getText('label_repeat_' + interval + '_$_plural', frequency).toString();
        }

        if (repeatString) {
          string = ' ' + repeatString;
        }
      }

      return string;
    },

    'getStarredString': function () {

      var string = '';
      if (this.model.isStarred()) {
        string += ' ' +  runtime.language.getText('voiceover_task_starred');
      }

      return string;
    }
  });
});
define('views/Tasks/Controllers/TaskItemViewClickController',[

  'wunderbits/WBViewController'

], function (WBViewController) {

  

  return WBViewController.extend({

    'implements': {
      'stop:click': 'stopEvent'
    },

    'stopEvent': function (ev) {
      ev && ev.stopPropagation();
    }
  });
});
define('views/Tasks/Controllers/TaskItemViewModelController',[

  'application/runtime',

  'vendor/moment',

  'wunderbits/WBViewController'

], function (
  runtime,
  moment,
  WBViewController
) {

  

  var _ = runtime._;
  var $ = runtime.$;

  return WBViewController.extend({

    'implements': {
      'destroy': 'remove',

      'change:title': 'updateTitle',
      'change:list_id': 'onChangeListId',
      'change:dateData': 'updateDueDateAndRepeat',
      'change:completed': 'onChangeCompleted',
      'change:starred': 'onChangeStarred',
      'change:assignee_id': 'onChangeAssigned',
      'change:attachments': 'updateAttachmentIcon',
      'change:subtaskCompletion': 'updateSubtaskProgress',
      'change:hasComments': 'updateCommentsBubble',
      'change:hasUnreadComments': 'updateUnreadCommentsBubble'
    },

    'remove': function () {

      var view = this.view;
      if (!view.destroyed) {
        view.animateUp();
        _.delay(function () {

          !view.destroyed && view.destroy();
        }, 1000);
      }
    },

    'onChangeAssigned': function () {

      var self = this;
      self.view.renderAssignee(self.model.attributes.assignee_id);
    },

    'onChangeCompleted': function () {

      var self = this;
      var view = self.view;

      _.delay(function () {

        if (!view.destroyed) {
          view.destroy();
        }
      }, 300);
    },

    'onChangeListId': function () {

      var self = this;
      var view = self.view;

      if (runtime.listId !== 'week') {
        self.remove();
      }
      else {
        view.renderDateLabel();
      }
    },

    'onChangeStarred': function () {

      var self = this;
      var view = self.view;

      var $firstElement = $(view.$el.parents('.tasks').children()[0]);
      var id = self.model.id;
      var starred = self.model.attributes.starred;

      if (runtime.listId !== 'week' && runtime.listId !== 'today') {

        _.delay(function () {

          // destroy the view only when it has been animated
          if (!view.destroyed && starred && ($firstElement.attr('rel') !== id || $firstElement.hasClass('animate-up'))) {
            view.destroy();
          }
        }, 1000);
      }
    },

    'updateCommentsBubble': function () {

      var self = this;
      self.view.renderCommentsBubble(self.model.hasComments());
    },

    'updateUnreadCommentsBubble': function () {

      var self = this;
      self.view.renderUnreadCommentsBubble(!!self.model.attributes.hasUnreadComments);
    },

    'updateAttachmentIcon': function () {

      var self = this;
      self.view.renderAttachmentIcon(self.model.hasAttachment());
    },

    'updateDueDateAndRepeat': function () {

      var self = this;
      var view = self.view;
      var attributes = self.model.attributes;

      // if the TBV is on the smart list today and the model is no longer in the today collection
      // remove and end
      if (runtime.listId === 'today' && !self.model.isInTodayCollection()) {
        self.remove();
        return;
      }

      var recurrenceType = attributes.recurrence_type;
      if (!recurrenceType || recurrenceType === 'none' || attributes.recurrence_count === 0) {
        view.renderReccurrence(false);
      }
      else {
        view.renderReccurrence(true);
      }

      view.renderDueDateVisibility(attributes.due_date);
    },

    'updateSubtaskProgress': function () {

      var self = this;
      self.view.renderSubtaskProgress();
    },

    'updateTitle': function () {

      var self = this;
      self.view.renderTitle(self.model.attributes.title);
    }
  });
});
define('wunderbits/helpers/links',[
  './tokenizer'
], function (Tokenizer, undefined) {

  

  var protoRegexp = /^((ht|f)tps?)?:\/\//;

  return Tokenizer.extend({

    'validateTLD': true,
    'invalidLeadingChars': /[#@\.\/\\]/,
    'validationRegExp': /^((ht|f)tps?:\/\/)?([\w\-\.]+\.(\w{2,6}))(:\d+)?/,
    'extractionRegExp': /(?:(?:ht|f)tps?:\/\/)?(?:[\w\-\.]+\.(?:[a-z]{2,6}))(?::\d+)?(?:\/[\S]*|\b)/g,

    'createLink': function (url) {

      var link = document.createElement('a');
      link.className = 'linkout';

      // open non-wunderlist urls in a new tab/window
      // TODO: move this check out of wunderbits
      if (url.indexOf('wunderlist.com/#') < 0) {
        link.target = '_blank';
      }

      // if the url is missing protocol, default to http
      var href = url;
      protoRegexp.test(href) || (href = 'http://' + href);
      link.href = href;

      // TODO: bring back the max length thingy
      link.textContent = url;
      return link;
    },

    'extractLinks': function (text) {
      return this.extractTokens(text);
    }
  });
});
define('wunderbits/mixins/LinkingViewMixin',[
  '../helpers/links',
  './DomTreeMixin'
], function (
  LinkHelper,
  DomTreeMixin,
  undefined
) {

  

  return DomTreeMixin.extend({
    'renderLinks': function ($el) {
      return this.renderTokens($el, LinkHelper);
    }
  });
});

define('wunderbits/mixins/EmailLinkingViewMixin',[
  '../helpers/email',
  './DomTreeMixin'
], function (
  EmailHelper,
  DomTreeMixin,
  undefined
) {

  

  return DomTreeMixin.extend({
    'renderEmails': function ($el) {
      return this.renderTokens($el, EmailHelper);
    }
  });
});

define('wunderbits/helpers/tag',[
  './tokenizer'
], function (Tokenizer, undefined) {

  

  return Tokenizer.extend({

    'invalidLeadingChars': /[\w\/\?=&]/,
    'validationRegExp': /^#[^\s$#]+/,
    'extractionRegExp': /#[^\s$#]+/g,
    'validateTLD': false,

    'createLink': function (tag) {
      var link = document.createElement('a');
      link.className = 'hash linkout';

      if(tag === '#bug') {
        link.className += ' hash-bug';
      } else if(tag === '#in-qa') {
        link.className += ' hash-qa';
      } else if(tag === '#in-review') {
        link.className += ' hash-review';
      }

      link.href = '#/search/' + encodeURIComponent(tag);
      link.textContent = tag;
      return link;
    }
  });
});
define('wunderbits/mixins/TaggingViewMixin',[
  '../helpers/tag',
  './DomTreeMixin'
], function(
  TagHelper,
  DomTreeMixin,
  undefined
) {

  

  return DomTreeMixin.extend({
    'renderTags': function ($el) {
      return this.renderTokens($el, TagHelper);
    }
  });
});
define('templates/taskItem',['vendor/handlebars'], function(H) {
var name = 'taskItem';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", self=this, escapeExpression=this.escapeExpression;

function program1(depth0,data) {
  
  
  return " task-checked ";
  }

function program3(depth0,data) {
  
  
  return " task-starred ";
  }

function program5(depth0,data) {
  
  
  return "task-recurring";
  }

function program7(depth0,data) {
  
  
  return "overdue";
  }

function program9(depth0,data) {
  
  var stack1;
  if (stack1 = helpers.due_date) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.due_date; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  if(stack1 || stack1 === 0) { return stack1; }
  else { return ''; }
  }

function program11(depth0,data) {
  
  
  return "hidden";
  }

function program13(depth0,data) {
  
  
  return " hidden ";
  }

function program15(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <div class=\"taskItem-progress ";
  stack1 = helpers.unless.call(depth0, depth0.hasSubtasks, {hash:{},inverse:self.noop,fn:self.program(16, program16, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"> <span class=\"taskItem-progress-bar\"></span> </div> ";
  return buffer;
  }
function program16(depth0,data) {
  
  
  return "transparent";
  }

  buffer += "<div class=\"taskItem-body\"> <a class=\"taskItem-checkbox\" tabindex=\"-1\" aria-hidden=\"true\"> <span class=\"icon task-checkbox ";
  stack1 = helpers['if'].call(depth0, depth0.done, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"/> </a> <a class=\"icon task-separator\" tabindex=\"-1\" aria-hidden=\"true\"></a> <a class=\"taskItem-star\" tabindex=\"-1\" aria-hidden=\"true\"> <span class=\"icon faded task-star ";
  stack1 = helpers['if'].call(depth0, depth0.starred, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " right\"/> </a> <a class=\"taskItem-assign hidden right\" tabindex=\"-1\" aria-hidden=\"true\"></a> <a class=\"icon task-recurrence ";
  stack1 = helpers['if'].call(depth0, depth0.recurrence_type, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " right\" tabindex=\"-1\" aria-hidden=\"true\"></a> <a class=\"taskItem-duedate ";
  stack1 = helpers['if'].call(depth0, depth0.overdue, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " right\" tabindex=\"-1\" aria-hidden=\"true\"> ";
  stack1 = helpers['if'].call(depth0, depth0.due_date, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </a> <span class=\"icon task-attachment ";
  stack1 = helpers.unless.call(depth0, depth0.hasAttachment, {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " right\"/> <span class=\"icon has-comments ";
  stack1 = helpers.unless.call(depth0, depth0.hasComments, {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " right\"></span> <div class=\"taskItem-titleWrapper\" tabindex=\"-1\" aria-hidden=\"true\"> <span class=\"taskItem-titleWrapper-title\">";
  if (stack1 = helpers.title) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.title; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</span> </div> ";
  stack1 = helpers['if'].call(depth0, depth0.subtaskProgressEnabled, {hash:{},inverse:self.noop,fn:self.program(15, program15, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </div> ";
  return buffer;
  });
});
define('styles/taskItem',[],function() { return {'name': 'taskItem', 'styles': ".taskItem{height:37px;z-index:100 !important;list-style:none;overflow:hidden;} .taskItem:focus{outline:none} .taskItem.active .taskItem-body,.taskItem.selected .taskItem-body{background-position:0 -34px} .taskItem.blur{filter:blur(50px);opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0)} .taskItem.collapsed{height:0;opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60);overflow:hidden} .taskItem.first-task-position{padding-top:37px !important} .taskItem.first-task-position-next{padding-bottom:37px !important} .taskItem.animate-up{height:0;opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60);overflow:hidden !important} .taskItem.lists-in-filter-hover{opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60)} .taskItem.animate-down{height:37px;opacity:1;-ms-filter:none;filter:none} .taskItem.animate-empty-task{margin-top:40px} .taskItem.animate-empty-task-close{margin-top:0} .taskItem.fall-out{z-index:5 !important;margin-top:55px;opacity:0 !important;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\" !important;filter:alpha(opacity=0) !important} .taskItem.return-up{margin-top:-55px;opacity:0 !important;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\" !important;filter:alpha(opacity=0) !important} .taskItem.fall-in{opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0)} .taskItem.scale-up{-webkit-transform:scale(1.1);-moz-transform:scale(1.1);-o-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)} .taskItem.dragging{z-index:9999 !important;width:300px;overflow:visible;} .taskItem.dragging .duedate{display:none} .taskItem.dragging.is-over-sidebar .taskItem-body{left:150px} .taskItem.dragging.is-over-sidebar .badge{right:-155px} .taskItem.done{opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60);list-style:none;} .taskItem.done .title{text-decoration:line-through;text-shadow:none} .taskItem.done .taskItem-duedate,.taskItem.done .icon.task-star,.taskItem.done .icon.task-recurring{cursor:default} .taskItem-body{-webkit-box-shadow:0 1px 3px rgba(0,0,0,0.4),0 0 0 1px rgba(0,0,0,0.08);box-shadow:0 1px 3px rgba(0,0,0,0.4),0 0 0 1px rgba(0,0,0,0.08);background:#eaeaea url(\"images/textures/task.png\") repeat-x;-webkit-border-radius:4px;border-radius:4px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;list-style:none;position:relative;height:34px;margin:1px 1px 0 1px;} .taskItem-body .icon.task-separator{position:absolute;z-index:1;left:34px;top:1px;height:100%;cursor:default} .taskItem-body .icon.task-checkbox{position:absolute;z-index:1;left:9px;top:8px} .taskItem-body .icon.task-star{position:relative;z-index:1;margin:0 10px 0 6px;} .taskItem-body .icon.task-star.task-starred{margin-top:-1px;margin-right:6px;margin-left:4px} .taskItem-body .icon.task-recurrence{display:none;position:relative;z-index:1;} .taskItem-body .icon.task-recurrence.task-recurring{display:block;margin-top:9px;} .taskItem-body .icon.task-recurrence.task-recurring:hover{cursor:default} .taskItem-body .icon.task-attachment{height:18px;margin-top:8px;} .taskItem-body .icon.task-attachment.overflow{margin-top:-1px;position:absolute;right:0} .taskItem-body .icon.has-comments{margin-top:8px} .taskItem-assign{position:relative;z-index:1;float:right;margin:6px 3px 0 6px} .taskItem-titleWrapper{white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis;z-index:1;display:block;margin:0 0 0 44px;padding:9px 0;line-height:16px;color:#423e3e;position:relative;text-shadow:0 1px 0 rgba(255,255,255,0.8);} .taskItem-titleWrapper:focus{outline:none} .taskItem-titleWrapper a{color:#4597df;} .taskItem-titleWrapper a.hash-bug{color:#c1443c} .taskItem-titleWrapper a.hash-qa{color:#35ac44} .taskItem-titleWrapper a.hash-review{color:#bb9342} .taskItem-progress{position:absolute;top:0;left:0;right:0;height:100%;opacity:1;-ms-filter:none;filter:none;-webkit-transition:opacity 225ms ease;-moz-transition:opacity 225ms ease;-o-transition:opacity 225ms ease;-ms-transition:opacity 225ms ease;transition:opacity 225ms ease} .taskItem-progress-bar{z-index:0;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:relative;display:block;top:0;height:100%;width:0%;-webkit-transition:width 225ms ease;-moz-transition:width 225ms ease;-o-transition:width 225ms ease;-ms-transition:width 225ms ease;transition:width 225ms ease;border-right:1px solid #abd2ff;background-image:-webkit-gradient(linear, right top, left top, color-stop(0, rgba(171,210,255,0.5)), color-stop(1, rgba(171,210,255,0)));background-image:-webkit-linear-gradient(right, rgba(171,210,255,0.5) 0, rgba(171,210,255,0) 100%);background-image:-moz-linear-gradient(right, rgba(171,210,255,0.5) 0, rgba(171,210,255,0) 100%);background-image:-o-linear-gradient(right, rgba(171,210,255,0.5) 0, rgba(171,210,255,0) 100%);background-image:-ms-linear-gradient(right, rgba(171,210,255,0.5) 0, rgba(171,210,255,0) 100%);background-image:linear-gradient(right, rgba(171,210,255,0.5) 0, rgba(171,210,255,0) 100%);} .taskItem-progress-bar.completed{-webkit-border-radius:3px;border-radius:3px;border-color:transparent;border-right:0} .taskItem-duedate{position:relative;z-index:1;font-size:11px;color:#3b6594;line-height:14px;margin:11px 3px 0 7px;text-shadow:0 1px 0 rgba(255,255,255,0.8);max-width:200px;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis;} .taskItem-duedate.overdue{color:#b3312d} .taskItem-duedate:hover{cursor:default} .taskItem-duedate:hover{cursor:default} .clone-title{color:#423e3e;} .clone-title a{color:#4597df} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){.taskItem-body{background-image:url(\"images/textures/task@2x.png\");-webkit-background-size:96px 68px;-moz-background-size:96px 68px;background-size:96px 68px} }html[dir=rtl] li.taskItem .taskItem-body .taskItem-checkbox .icon{left:initial;right:7px} html[dir=rtl] li.taskItem .taskItem-body .icon.task-separator{left:initial;right:34px} html[dir=rtl] li.taskItem .taskItem-body .taskItem-star .icon{margin-right:4px;margin-left:8px;} html[dir=rtl] li.taskItem .taskItem-body .taskItem-star .icon.taskItem--starred{margin-left:6px} html[dir=rtl] li.taskItem .taskItem-body .taskItem-titleWrapper{margin-left:initial;margin-right:44px} " }; });
define('views/Tasks/TaskItemView',[

  'application/runtime',

  'vendor/moment',
  'vendor/handlebars',

  'wunderbits/helpers/date',

  'collections/ListCollection',
  'collections/CommentsCollection',

  'wunderbits/WBViewPresenter',
  'views/AvatarView',

  'views/Tasks/Controllers/TaskItemViewARIAController',
  'views/Tasks/Controllers/TaskItemViewClickController',
  'views/Tasks/Controllers/TaskItemViewModelController',

  'wunderbits/mixins/LinkingViewMixin',
  'wunderbits/mixins/EmailLinkingViewMixin',
  'wunderbits/mixins/TaggingViewMixin',
  'wunderbits/mixins/UnicodeEmojiViewMixin',

  'template!taskItem',
  'style!taskItem'

], function (
  runtime,
  moment, Handlebars,
  DateHelper,
  ListCollection, CommentsCollection,
  WBViewPresenter, AvatarView,
  TaskItemViewARIAController, TaskItemViewClickController, TaskItemViewModelController,
  LinkingViewMixin, EmailLinkingViewMixin, TaggingViewMixin, UnicodeEmojiViewMixin,
  taskItemTemplate, taskItemStyle,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var window = runtime.global;

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'template': taskItemTemplate,

    'implements': [
      TaskItemViewARIAController,
      TaskItemViewClickController,
      TaskItemViewModelController
    ],

    'observes': {

      'model': {

        'change': '>change',

        'destroy': '>destroy',

        'change:title': '>change:title',
        'change:list_id': '>change:list_id',
        'change:due_date change:recurrence_type change:recurrence_count': '>change:dateData',
        'change:completed': '>change:completed',
        'change:starred': '>change:starred',
        'change:assignee_id': '>change:assignee_id',
        'change:hasSubtasks change:note change:hasFiles': '>change:attachments',
        'change:subtaskCompletion': '>change:subtaskCompletion',
        'change:hasComments': '>change:hasComments',
        'change:hasUnreadComments': '>change:hasUnreadComments',
      },

      'runtime': {
        'db:allDataLoaded': '>change'
      }
    },

    'renderData': {
      'done': undefined,
      'hasAttachment': undefined,
      'recurrence_type': undefined,
      'starred': undefined,
      'title': undefined,
      'hasComments': undefined,
      'hasUnreadComments': undefined,
      'hasSubtasks': undefined,
      'subtaskProgressEnabled': undefined
    },

    'formatData': function (data) {

      var self = this;
      var model = self.model;
      var attributes = model.attributes;
      data = _super.formatData.call(self, data);

      data.title = attributes.title;
      data.recurrence_type = attributes.recurrence_type === 'none' ? false : attributes.recurrence_type;
      data.hasAttachment = model.hasAttachment();
      data.hasComments = model.hasComments();
      data.hasUnreadComments = model.hasUnreadComments();
      data.done = attributes.completed;
      data.starred = attributes.starred;
      data.hasSubtasks = model.hasSubtasks();
      data.subtaskProgressEnabled = runtime.config.name === 'beta' && runtime.user.isPro() && runtime.settings.attributes.labs_subtask_progress_enabled === 'true';

      return data;
    },

    'tagName': 'li',

    'attributes': {
      'tabindex': 0
    },

    'className': 'taskItem',

    'styles': [taskItemStyle],

    'events': {
      'click .taskItem-duedate, .icon.task-recurring': '_ignoreDetailCall'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      LinkingViewMixin.applyTo(self);
      EmailLinkingViewMixin.applyTo(self);
      TaggingViewMixin.applyTo(self);
      UnicodeEmojiViewMixin.applyTo(self);

      self.bindTo(runtime.settings, 'change:date_format', function () {

        self.trigger('change:dateData');
      });

      return self;
    },

    'render': function (options) {

      var self = this;
      var $el;
      if (!self.model || self.destroyed) {
        return;
      }

      // remove any duplicates (slow animations, etc.)
      $('#tasks').find('li[rel="' + self.model.id + '"]').remove();

      // render template
      _super.render.call(self, self.formatData(self.renderData));

      $el = self.$el;
      $el.attr('rel', self.model.id);

      self.trigger('change:hasUnreadComments');
      self.trigger('change:dateData');
      self.trigger('change:assignee_id');

      var $title = self.$('.taskItem-titleWrapper-title');
      self.renderTags($title);
      self.renderLinks($title);
      self.renderEmails($title);
      self.renderEmoji($title);

      self.renderSubtaskProgress();

      // TODO task item should not be managing this :/
      // select task if id matches current url
      var urlRegexp = new RegExp('tasks\\\/' + self.model.id + '$');
      if (urlRegexp.test(window.location.hash)) {
        $el.addClass('active selected');
      }

      if (self.model.attributes.completed) {
        $el.addClass('done');
      }

      self.renderStarredAnimation(options);
      self.renderDoneAnimation(options);

      return self;
    },

    'renderStarredAnimation': function (options) {

      var self = this;
      var $el = self.$el;

      // this is for handling starred animations on render
      if (options && options.animateModel === self.model && options.checkHandling === undefined) {

        $el.addClass('collapsed, animate-up');
        _.delay(function () {

          if (!self.destroyed) {
            $el.removeClass('collapsed, animate-up').addClass('animate-down');
            _.delay(function () {

              !self.destroyed && $el.removeClass('animate-down');
            }, 350);
          }
        }, 75);
      }

    },

    'renderDoneAnimation': function (options) {

      var self = this;
      var $el = self.$el;

      // this is for handling done animations on render
      if (options && options.checkHandling) {

        $el.addClass('pop-in').fadeIn(100);

        _.delay(function () {

          !self.destroyed && $el.removeClass('pop-in').addClass('pop-out');
        }, 90);

        _.delay(function () {

          !self.destroyed && $el.removeClass('pop-out').addClass('pop-back');
        }, 310);

        _.delay(function () {

          !self.destroyed && $el.removeClass('pop-back').removeAttr('style');
        }, 1000);
      }

    },

    'renderAriaLabel': function  (string) {

      var self = this;
      self.$el.attr('aria-label', string);
    },

    'renderDateLabel': function () {

      var self = this;
      if (self.destroyed) {
        return;
      }

      var duedate = moment(DateHelper.convertServerDateToLocalDate(self.model.attributes.due_date)).sod();
      var $duedate = self.$('.taskItem-duedate');
      var now = moment().sod();
      var humanizedDate;

      if (duedate.diff(now, 'days') < 0) {

        $duedate.addClass('overdue');
        if (self.model.attributes.recurrence_type) {
          self.$('.task-recurrence').addClass('overdue');
        }
      }
      else {

        $duedate.removeClass('overdue');
        if (self.model.attributes.recurrence_type) {
          self.$('.task-recurrence').removeClass('overdue');
        }
      }

      if (runtime.listId === 'week' && duedate.diff(now, 'days') >= 0) {

        if (self.model.attributes.list_id === 'inbox') {
          humanizedDate = runtime.language.getLabel('smart_list_inbox').toString();
        }
        else {

          var lists = new ListCollection('/lists/all');
          humanizedDate = lists.get(self.model.attributes.list_id).escape('title');
        }
      }
      else {
        humanizedDate = DateHelper.humanizeDueDate(duedate, runtime.settings.attributes.date_format);
      }

      $duedate.html(humanizedDate);
      self.renderLabels();
    },

    'animateUp': function () {

      var self = this;
      self.$el.addClass('animate-up');
    },

    'renderAttachmentIcon': function (state) {

      var self = this;
      self.$('.task-attachment').toggleClass('hidden', !state);
    },

    'renderCommentsBubble': function (state) {

      var self = this;
      self.$('.has-comments').toggleClass('hidden', !state);
    },

    'renderUnreadCommentsBubble': function (state) {

      var self = this;
      self.$('.has-comments').toggleClass('has-unread-comments', state);
    },

    'renderAssignee': function (assigneeId) {

      var self = this;
      var $assignee = self.$('.taskItem-assign');

      $assignee.toggleClass('hidden', !assigneeId);

      if (assigneeId) {
        self.avatarView = self.avatarView || self.addSubview(new AvatarView({'listId': self.model.attributes.list_id, size: 'small'}), 'avatarView');
        $assignee.html(self.avatarView.render({'id': assigneeId}).$el);
      }
    },

    'renderReccurrence': function (state) {

      var self = this;
      self.$('.task-recurrence').toggleClass('task-recurring', state);
    },

    'renderDueDateVisibility': function (state) {

      var self = this;
      var $duedate = self.$('.taskItem-duedate');

      if (state) {
        $duedate.removeClass('hidden');
        self.renderDateLabel();
      }
      else {
        $duedate.empty().addClass('hidden');
      }
    },

    'renderTitle': function (string) {

      var self = this;
      var $title = self.$('.taskItem-titleWrapper-title');

      $title.text(string);
      self.renderLinks($title);
      self.renderEmails($title);
      self.renderEmoji($title);
      self.renderTags($title);
    },

    'renderSubtaskProgress': function () {

      var self = this;

      if (runtime.isLabsEnabled('subtask_progress')) {

        var hasSubtasks = self.model.hasSubtasks();
        var $subtaskProgresContainer = self.$('.taskItem-progress');
        var $bar = $subtaskProgresContainer.find('.taskItem-progress-bar');

        if (hasSubtasks) {

          var percent = self.model.attributes.subtaskCompletion || 0;
          $bar.css({'width': percent + '%'});

          if (percent === 0) {
            hasSubtasks = false;
          }

          $bar.toggleClass('completed',  percent === 100);
        }

        $subtaskProgresContainer.toggleClass('transparent', !hasSubtasks);
      }
    },

    'animateAndDestroy': function () {

      var self = this;
      
      !self.destroyed && self.$el.addClass('animate-up');

      _.delay(function () {

        !self.destroyed && self.destroy();
      }, 1000);
    }
  });
});
define('models/TasksGroupModel',[

  'wunderbits/WBModel'

], function (WBModel, undefined) {

  

  return WBModel.extend({

    'defaults': {

      'chunking': true,
      'currentOffset': 0,

      'destroy': false,
      'doneFilter': false,

      'filter': undefined,

      'itemsPerRender': undefined,

      'listID': undefined,
      'listTitle': undefined,

      'scrollThreshold': undefined,
      'showHeading': false,
      'showCompleted': true,
      'hideCompletedHeading': false
    }

  });
});
define('templates/tasks',['vendor/handlebars'], function(H) {
var name = 'tasks';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <h2 class=\"heading normal\"><a href=\"/#/lists/";
  if (stack1 = helpers.listId) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.listId; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\">";
  if (stack1 = helpers.listTitle) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.listTitle; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</a></h2> ";
  return buffer;
  }

function program3(depth0,data) {
  
  
  return " <a class=\"delete-completed hidden\"> <span class=\"icon trash-delete\" /> </a> ";
  }

function program5(depth0,data) {
  
  
  return "completed-";
  }

function program7(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers.unless.call(depth0, depth0.hideCompletedHeading, {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " <ol class=\"completed-tasks\"></ol> ";
  return buffer;
  }
function program8(depth0,data) {
  
  
  return " <h2 class=\"heading completed\"> <span class=\"icon toggle-completed-tasks\"></span> <a class=\"completed-items-heading\"></a> </h2> ";
  }

  stack1 = helpers['if'].call(depth0, depth0.showHeading, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.allowClearCompleted, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " <ol class=\"";
  stack1 = helpers['if'].call(depth0, depth0.doneFilter, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "tasks\"></ol> ";
  stack1 = helpers['if'].call(depth0, depth0.showCompleted, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  });
});
// TaskGroupBaseView
// ----------------------------
// This document handles grouping of tasks in lists.
define('views/Tasks/TasksGroupBaseView',[

  'application/runtime',

  'vendor/moment',

  'collections/ListCollection',
  'collections/TaskCollection',

  'helpers/collectionSorting',

  'wunderbits/WBViewPresenter',

  'views/Tasks/TaskItemView',

  'models/TasksGroupModel',

  'template!tasks'

],  function (
  runtime,
  moment,
  ListCollection, TaskCollection,
  collectionSorting,
  WBViewPresenter,
  TaskItemView,
  TasksGroupModel,
  tasksTemplate,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var window = runtime.global;

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'template': tasksTemplate,

    'className': 'grouped-tasks',

    'observes': {
      // TGV State Model
      'model': {

        'change:destroy': '_destroyGroup',
        'change:showCompleted': ['_throttledDisplayOfCompleted', '_debounedDisplayOfCompleted']
      },
      // The Task Collection
      'collection': {

        'add remove change:completed': 'updateCompletedTasks',
        'remove add change:completed change:starred change:due_date change:assignee_id': '_handleHeadings',
        'remove': '_onRemoveModel'
      },
      // The List Model
      'list': {
        'change:title': '_onChangeListTitle'
      }
    },

    'initialize': function (options) {

      var self = this;

      self.model = new TasksGroupModel({

        'chunking': options.chunking,

        'filter': options.filter,

        'itemsPerRender': options.itemsPerRender,

        'listID': options.listID,
        'listTitle': options.listTitle,

        'scrollThreshold': options.scrollThreshold
      });

      // list titles
      var lists = new ListCollection('/lists/all');
      self.list = lists.get(options.listID);

      self._throttledDisplayOfCompleted = _.throttle(_.bind(self._displayOfCompleted, self), 500);
      self._debounedDisplayOfCompleted = _.debounce(self._displayOfCompleted, 500);

      _super.initialize.apply(self, arguments);

      // debouncers
      self._debouncedUpdateShowCompleted = _.debounce(self._updateShowCompleted, 250, true);
      self._debouncedFreezeHeight = _.debounce(self._freezeHeight, 250, true);
      self._debouncedRemoveStyle = _.debounce(self._removeStyle, 250);
      self._throttledOnScroll = _.throttle(self._onScroll, 250);
      self.debouncedTaskAddedFromSync = _.debounce(self.taskAddedFromSync, 250);

      self.taskFactory = options.taskFactory;
      self.$scrollEl = options.scrollEl;

      // TODO
      // what the fudge is this?
      self.animationPromise = new $.Deferred();
      self.bindTo(runtime, 'animation:complete', function() {

        self.animationPromise.resolve();
        self.animationPromise = new $.Deferred();
      });

      // global events that all task groups must respond to
      self.bindTo(runtime, 'force:cleanup', self._forceCleanUp);
      self.bindTo(runtime, 'force:loadAll', self._renderRemainingChunks);

      // get a reference to the allTasks collection
      self.bindTo(runtime, 'tasks:ready', function (allTasks) {

        self.allTasks = allTasks;
      });

      // scroll
      self.$scrollEl && self.bindTo(self.$scrollEl, 'scroll', self._throttledOnScroll);
      // resize
      self.bindTo(runtime, 'window:resize', self._throttledOnScroll);
    },

    'renderData': {

      'hideCompletedHeading': undefined,
      'listTitle': undefined,
      'showCompleted': undefined,
      'showHeading': undefined,
      'listId': undefined
    },

    'formatData': function (data) {

      var self = this;
      data = _super.formatData.apply(self, data);

      var attributes = self.model.attributes;
      data.hideCompletedHeading = attributes.hideCompletedHeading;
      data.listTitle = _.isFunction(attributes.listTitle) ? attributes.listTitle() : attributes.listTitle,
      data.showCompleted = attributes.showCompleted;
      data.showHeading = attributes.showHeading;
      data.listId = attributes.listID;

      return data;
    },

    'render': function() {

      var self = this;

      var data = self.formatData(self.renderData);
      var html = tasksTemplate(data);
      self.$el.html(html);

      var attributes = self.model.attributes;
      self.$el.attr('rel', attributes.listID);

      return self;
    },

    'addChunkedItemsToFragments': function (chunkedItems, regularFragment, doneFragment)  {

      var self = this;

      _.each(chunkedItems, function (model) {

        // is this model already rendered?
        if (self.getSubview(model.id)) {
          return;
        }

        var task = self.addSubview(self.taskFactory(model), model.id);
        model.attributes.completed ? doneFragment.appendChild(task.render().el) : regularFragment.appendChild(task.render().el);
      });
    },

    // This method renders the grouping, puts the tasks in the template's <ol> and
    // renders each task for that lists collection of tasks
    '_renderTasksAsGroup': function () {

      var self = this;
      var doneFragment = document.createDocumentFragment();
      var regularFragment = document.createDocumentFragment();
      var attributes = self.model.attributes;
      var items;

      // This is here because a search is coming through as an array.
      // So we dont care about the collection layer above
      items = self.collection.models ? self.collection.models : self.collection;
      self.totalItems = items.length;

      if (!self.listOrInboxLength) {
        self.listOrInboxLength = self.totalItems;
      }

      // filter out anything not wanted
      items = self.filterCollectionItems(items);

      // Sort the items coming in
      // binary sort against multiple fields
      items = self.sortCollectionItems(items);

      // chunked items are the items that are due for the next chunked rendering
      var chunkedItems;
      if (attributes.chunking) {
        var offset = attributes.currentOffset;
        chunkedItems = items.slice(offset, offset + attributes.itemsPerRender);
      }
      else {
        chunkedItems = items;
      }

      if (items.length) {

        self.addChunkedItemsToFragments(chunkedItems, regularFragment, doneFragment);

        // append the frags
        var $regularTasks = self.$('.tasks');
        $regularTasks[0] && $regularTasks[0].appendChild(regularFragment);
        var $completedTasks = self.$('.completed-tasks');
        $completedTasks[0] && $completedTasks[0].appendChild(doneFragment);
        // check state, if it is still correct
        self.model.set({ 'showCompleted': self._canHaveCompletedHeading() });
        // moves the counter so the next position will render a viewport sized batch
        var currentOffset = attributes.currentOffset;
        self.model.set({ 'currentOffset': currentOffset + attributes.itemsPerRender });
      }
      else {
        self.model.set({'showCompleted': false});
      }

      if (!attributes.chunking || chunkedItems.length === 0) {
        runtime.trigger('tasks:inList', attributes.listID);
      }

      self.updateCompletedTasks(true);

      return attributes.chunking ? chunkedItems.length : 0;
    },

    'filterCollectionItems': function (items) {

      // implement in subclass
      return items;
    },

    'sortCollectionItems': function (items) {

      items.sort(function (a, b) {

        return collectionSorting.dualBinarySort('completed', 'position', a, b, true);
      });

      return items;
    },

    '_renderRemainingChunks': function () {

      var self = this;
      var remaining = self._renderTasksAsGroup();

      if (remaining > 0) {
        self._renderRemainingChunks();
      }
    },

    'getCompletedTaskCount': function () {

      var self = this;
      var listID = self.model.attributes.listID;

      if (listID) {
        var tasks = new TaskCollection('/lists/' + listID + '/tasks');
        return _.filter(tasks.models, function (task) {

          return task.isCompleted();
        }).length;
      }
    },

    'updateCompletedTasks': function (noDelay, collection, eventOptions) {

      eventOptions = eventOptions || {};
      if (eventOptions.fromDestructiveSort) {
        return;
      }

      var self = this;

      if (self.model.attributes.listID) {

        var action = function () {

          var count = self.getCompletedTaskCount();
          var $el = self.$('.completed-items-heading');
          var key = count === 1 ? 'label_completed_tasks_heading' : 'label_$_completed_tasks_heading_plural';
          var label = runtime.language.getLabel(key, count).toString();

          $el.html(label);
          self.renderLabels();
        };

        if (noDelay) {
          action();
        }
        else {
          // or defer for some reason, e.g. completed task animation
          self.defer(action);
        }
      }
    },

    '_onRemoveModel': function (model, collection, options) {

      options = options || {};
      var self = this;
      var view = self.getSubview(model.id);
      var shouldRemoveWithoutAnimations = options.fromDestructiveSort || options.fromStorage || options.fromSync;

      if (view && shouldRemoveWithoutAnimations) {
        if (view.$el.hasClass('active') || view.$el.hasClass('selected')) {
          // deferred so that it happens after subview desctruction
          self.defer(function () {

            runtime.trigger('tasks:updateSelectionCount');
          });
        }

        self.destroySubview(model.id);
      }
    },

    '_onChangeListTitle': function () {

      var self = this;
      var listTitle = self.model.attributes.listTitle;

      if (_.isFunction(listTitle)) {
        listTitle = listTitle();
      }
      else {
        listTitle = self.list && _.escape(self.list.attributes.title);
      }

      self.$('.heading.normal a').html(listTitle);
      self.renderLabels();
    },

    // This method handles the important starring animation. Has different behavior
    // if it is in certain filters. Is a reaction from a model change
    '_handleStarredAnimation': function (model) {

      var self = this;
      var isTouchDevice = runtime.env.isTouchDevice();
      var isStarred = model.changedAttributes().starred;
      var $firstElement = $('.grouped-tasks[rel="' + model.attributes.list_id + '"] li').not('.clone, animate-up').filter(':first');
      var $taskEl = $('li[rel="' + model.id + '"]');
      var oldHeight = $taskEl.parent().outerHeight();
      var isActive = $taskEl.hasClass('active');
      var isSelected = $taskEl.hasClass('selected');
      var filter = self.model.attributes.filter;

      // if not the first task
      if ($firstElement && isStarred && (model.id !== $firstElement.attr('rel') || self.$('.grouped-tasks li.animate-up').size() !== 0) && filter !== 'today') {

        $taskEl.parent('ol').css({'height':oldHeight + 'px'});
        // animate old task up
        _.delay(function() {
          // this delay is here for the initial click on the star, so there is a slight moment before it animates
          $taskEl.addClass('animate-up');
        }, (isTouchDevice ? 0 : 100));

        // create and animate a new copy of this model
        // creating a new model will destroy the previously animating model
        var starDelay = runtime.env.isAnimationEnabled() ? 350 : 0;
        _.delay(function () {

          var newPosition = self._newFirstPosition(false, model);
          self._updatePosition(model, newPosition);

          self._renderSingleTask(model, {
            'animate': model,
            'toTop': true,
            'cleanupHeight':true,
            'active': isActive,
            'selected': isSelected
          });
        }, starDelay);
      }
      // When task is first task in dom
      else {
        self.handleStarredAnimationWhenFirstItem(model, isStarred, $taskEl);
      }
    },

    'handleStarredAnimationWhenFirstItem': function (model, isStarred) {

      var self = this;
      self.$('li[rel="' + model.id + '"] .task-star').toggleClass('task-starred', isStarred);
    },

    // This method handles the completed animation. The use of clones is messy, but necessary
    '_handleCompletedAnimation': function (model, options) {

      var self = this;
      var $taskEl = self.$('li[rel="' + model.id + '"]');
      var $clone = null;
      var position = $taskEl.offset();
      var isCompleted = model.changedAttributes().completed;
      var toTop, newPosition;
      var isSelected = $taskEl.hasClass('selected');
      var isActive = $taskEl.hasClass('active');
      var filter = self.model.attributes.filter;

      self._debouncedUpdateShowCompleted();
      self._debouncedFreezeHeight();

      if (position) {

        $clone = $taskEl.clone().addClass('clone').css({position:'absolute', left:position.left, top:position.top, width: $taskEl.width()});
        var $newLocation;

        // ANIMATIONS
        // this is the completed animation
        if (isCompleted) {

          var completeDelay = runtime.env.isAnimationEnabled() ? 300 : 0;
          toTop = true;

          $clone.addClass('fall-out');

          if (!options.fromSync) {
            newPosition = self._newFirstPosition(true, model);
            self._updatePosition(model, newPosition);
          }

          $newLocation = $taskEl.clone().addClass('clone').css({'display':'block', 'opacity':'0', 'position':'relative', 'height':'0px', 'left':0, 'top':0});

          if (self.$('.completed-tasks li').length) {
            self.$('.completed-tasks:first').prepend($newLocation);
          }

          if ($taskEl[0] === self.$('.tasks li:last')[0]) {
            $taskEl.animate({'opacity':0, 'height':0}, completeDelay);
          }

          $taskEl.animate({'height':0}, completeDelay);
          $newLocation.animate({'height': (runtime.env.isTouchDevice() ? '48px' : '37px')}, completeDelay);
        }
        // this is the undone animation
        else {

          if (!options.fromSync) {
            newPosition = self._newLastPosition(false, model);
            self._updatePosition(model, newPosition);
          }

          $newLocation = $taskEl.clone().addClass('clone').css({'display':'block', 'opacity':'0', 'position':'relative', 'height':'0px', 'left':0, 'top':0});

          self.$('.tasks:last')[0].appendChild($newLocation[0]);

          $taskEl.animate({'opacity':0.1}, 150, function () {

            $taskEl.animate({'height':'0px'}, 150);
            $newLocation.animate({'height': (runtime.env.isTouchDevice() ? '48px' : '37px')}, 150, function () {

              self._freezeTasksHeight();
            });
          });
        }

        // RENDER NEW TASK VIEW (in proper place, etc.)
        _.delay(function () {

          self.destroySubview(model.id);

          var showCompleted = runtime.settings.attributes.show_completed_items === 'true' || filter === 'search';
          if (!showCompleted) {
            isSelected = false;
            isActive = false;
          }

          // After the animation is complete, call the newly rendered done (or undone) task
          self._renderSingleTask(model, {
            'animate': model,
            'cleanupHeight': true,
            'checkHandling': true,
            'completed': true,
            'active': isActive,
            'selected': isSelected
          });

          self._debouncedRemoveStyle();
        }, 400);
      }
      else {

        self._renderSingleTask(model, {
          'animate': model,
          'cleanupHeight': true,
          'checkHandling': true,
          'completed': true
        });

        self._debouncedRemoveStyle();
      }
    },

    // this method handles filter heading cleanup after a model is removed/destroyed/marked deleted/completed/changed etc.
    '_handleHeadings': function (model, collection, eventOptions) {

      eventOptions = eventOptions || {};
      if (eventOptions.fromDestructiveSort) {
        return;
      }

      var self = this;
      if (model && !_.has(model.changedAttributes(), 'completed')) {
        self.model.set({'showCompleted': self._canHaveCompletedHeading()});
      }
    },

    '_freezeHeight': function () {

      var self = this;

      if (self.destroyed) {
        return;
      }

      var wrapperHeight = self.$el.outerHeight();
      self.$el.css({'height': wrapperHeight + 'px'});
    },

    '_freezeTasksHeight': function () {

      var self = this;
      var $tasks = self.$('ol.tasks');
      var wrapperHeight = $tasks.outerHeight();

      $tasks.css({'height': wrapperHeight + 'px'});
    },

    '_removeStyle': function () {

      var self = this;

      if (self.destroyed) {
        return;
      }

      self.$el.removeAttr('style');
      self.$('ol.tasks').removeAttr('style');
    },

    // This method shows or hides the completed heading in lists, is a
    // reaction from the state model change
    '_displayOfCompleted': function (model) {

      var self = this;
      var $completedTasks = $('.completed-tasks');

      // since this method is throttled, it can be executed
      // after the view has been destroyed - but shouldn't
      if (self.destroyed) {
        return;
      }

      var doneTaskCount = _.filter(self.collection.models, function (taskModel) {

        return taskModel.isCompleted();
      });

      if (!doneTaskCount.length) {
        if (!model.showHeading) {
          $completedTasks.prev('.heading.completed').hide();
          return;
        }

        _.delay(function () {

          $completedTasks.prev('.heading.completed').hide();
        }, 800);

        return;
      }

      var action;
      if (self.model.attributes.filter === 'completed') {
        action = 'show';
      }
      else {
        action = model.attributes.showCompleted ? 'show': 'hide';
      }

      $completedTasks.prev('.heading.completed')[action]();
    },

    '_updateShowCompleted': function () {

      var self = this;

      _.delay(function () {

        self.model.set({'showCompleted': self._canHaveCompletedHeading()});
      }, 250);
    },

    // This method iterates over a collection and checks if there are any completed tasks.
    // Then shows/hides the heading based on the state model
    '_canHaveCompletedHeading': function() {

      var self = this;
      var newState;
      var completedTasks = [];

      _.each(self.collection.models, function (model){

        if (model.attributes.completed) {
          completedTasks.push(model);
        }
      });

      newState = !completedTasks.length ? false : true;
      self.renderLabels();

      return newState;
    },

    'roomForTasks': function (completed) {

      var self = this;
      self.taskHeight = self.taskHeight || self.$('.taskItem').first().height() || (runtime.env.isTouchDevice() ? 48 : 37);
      var buffer = 5;
      var normalTaskCount = $('#tasks .tasks li').length;
      var completedTaskCount = $('#tasks .completed-tasks li').length;
      var currentTaskCount = completed ? normalTaskCount + completedTaskCount : normalTaskCount;

      self.tasksToFitViewport = Math.floor((window.innerHeight) / self.taskHeight + buffer);

      var viewportHasSpace = currentTaskCount > self.tasksToFitViewport ? false : true;

      return viewportHasSpace;
    },

    'isVisible': function ($el) {

      var top = $el.offset().top;
      return top < window.innerHeight;
    },

    '_renderDestructivelySortedTask': function (model) {

      var self = this;

      if (self.roomForTasks(false)) {
        var taskFrag = document.createDocumentFragment();
        var task = self.addSubview(self.taskFactory(model), model.id);
        taskFrag.appendChild(task.el);
        self.$('ol.tasks')[0].appendChild(taskFrag);
        task.render();
      }

      self.resetCurrentOffset();
    },

    'getShouldDisplayCompleted': function () {

      return runtime.settings.attributes.show_completed_items === 'true';
    },

    // do not remove !! implemented by subclasses
    'updateCompletedState': function () {},

    'incrementCurrentOffset': function () {

      var self = this;
      self.model.set({

        'currentOffset': self.model.attributes.currentOffset++
      });
    },

    'resetCurrentOffset': function () {

      var self = this;
      if (!self.destroyed) {
        self.model.set({'currentOffset': 0});
      }
    },

    'taskAddedFromSync': function () {

      var self = this;
      self.resetCurrentOffset();
      self._renderTasksAsGroup();
    },

    // Handles the rendering of a single task. Could be from a newly starred/done task, or adding a task.
    '_renderSingleTask': function (model, options, eventOptions) {

      var self = this;

      options = options || {};
      eventOptions = eventOptions || {};

      if (((options.fromSync || eventOptions.fromSync) && !runtime.beforeDone) || (options.fromStorage || eventOptions.fromStorage)) {
        self.debouncedTaskAddedFromSync();
        return;
      }

      eventOptions = eventOptions || {};
      if (eventOptions.fromDestructiveSort) {
        self._renderDestructivelySortedTask(model);
        return;
      }

      // if the completed item already exists in the group, quit here
      if (self.$('.done[rel="' + model.id + '"]').not('.clone').length) {
        return;
      }

      var animateModel;
      // var attributes = self.model.attributes;
      var taskFrag = document.createDocumentFragment();
      var shouldDisplayCompleted = self.getShouldDisplayCompleted();
      var $ol;

      // if its a newly added task, the option will be a collecion
      // and have a url, because no render options are set
      var isNewTask = options && options.url ? true: false;
      var modelCompleted = model.attributes.completed;
      // var modelPosition = model.attributes.position;

      // update completed state
      self.updateCompletedState();

      // don't render completed tasks on groups where they are not visible!!!!!
      if (!self.model.attributes.showCompleted && modelCompleted) {
        return;
      }

      if (isNewTask) {
        options.toTop = model.attributes.starred ? true: false;
        animateModel = model;
        options.checkHandling = true;
      }

      if (options && options.animate === model) {
        // this is the model of the new task, so we know what to animate on the taskitemview
        animateModel = options.animate;
      }

      if (!options) {
        options = {};
        options.checkHandling = true;
        animateModel = model;
      }
      options = self.checkSelectOptions(options, model.isCompleted(), shouldDisplayCompleted);

      // create the subview
      var task = self.addSubview(self.taskFactory(model), model.id);
      task.$el.toggleClass('active', options.active).toggleClass('selected', options.selected);
      task.$el.attr('data-single-render', 'true');

      taskFrag.appendChild(task.el);

      $ol = self.getOl(model, options);

      self.model.set({'showCompleted': self._canHaveCompletedHeading()});

      // Where it goes!
      self.placeIntoDom(model, taskFrag, $ol, options);

      task.render({

        'animateModel': animateModel,
        'checkHandling': options.checkHandling
      });

      if (options && options.cleanupHeight) {

        $.when(self.animationPromise).then(function () {

          self.$('ol').removeAttr('style');
        });
      }

      model.unset('forceRender').save();
    },

    'checkSelectOptions': function (options, isCompleted, shouldDisplayCompleted) {

      // make sure we keep the active and selected state
      // TODO: LOGIC IN HERE!!!
      if (options.active !== true) {
        options.active = false;
      }
      if (options.selected !== true) {
        options.selected = false;
      }

      // if we're not supposed to display completed tasks,
      // then they also cannot be selected or active
      if (isCompleted && !shouldDisplayCompleted) {
        options.selected = false;
        options.active = false;
      }

      return options;
    },

    // keep the extra argument bitte, used by subclasses!
    'getOl': function (model) {

      var self = this;
      return model.isCompleted() ? self.$('ol.completed-tasks') : self.$('ol.tasks');
    },

    'appendSingleTaskWithPosition': function (model, taskFrag, $ol) {

      var self = this;
      var modelCompleted = model.attributes.completed;
      var modelPosition = model.attributes.position;

      self.collection.sort({'force': true});

      // when task has a position!!
      var beforeId = null;
      var afterId = null;
      var found = false;
      var models = self.collection.where({'completed': modelCompleted ? true : false});

      // look for a before model
      var thisModel, isSameModel;
      models = models.reverse();
      for (var i=0, len = models.length; i < len; i++) {

        thisModel = models[i];
        isSameModel = thisModel.id === model.id;
        if (!found && !isSameModel && thisModel.attributes.position < modelPosition) {

          beforeId = thisModel.attributes.id;
          found = true;
        }
      }

      // check for an after model
      found = false;
      models = models.reverse();
      for (var i2 = 0, len2 = models.length; i2 < len2; i2++) {

        thisModel = models[i2];
        isSameModel = thisModel.id === model.id;
        if (!found && !isSameModel && thisModel.attributes.position > modelPosition) {

          afterId = thisModel.attributes.id;
          found = true;
        }
      }

      // check for models in the DOM
      var $beforeEl = beforeId && $ol.find('li[rel="' + beforeId + '"]');
      var $afterEl = afterId && $ol.find('li[rel="' + afterId + '"]');
      var before = $beforeEl && $beforeEl.size();
      var after = $afterEl && $afterEl.size();

      if (((before && !after) || (before && after)) && self.isVisible($beforeEl)) {

        $beforeEl.after(taskFrag);
        self.incrementCurrentOffset();
      }
      else if (!before && after && self.isVisible($afterEl)) {

        $afterEl.before(taskFrag);
        self.incrementCurrentOffset();
      }
      else if (self.roomForTasks(modelCompleted) || model.attributes.forceRender) {

        $ol.append(taskFrag);
        self.incrementCurrentOffset();
      }
      else {

        // destroy the subview we have no room for
        self.destroySubview(model.id);
        // reset chunked render counter so that when scrolling the missing tasks are then rendered
        self.resetCurrentOffset();
      }
    },

    // do not remove extra arg, used by subclasses
    'placeIntoDom': function (model, frag, $ol) {

      var self = this;
      var modelPosition = model.attributes.position;

      // Where it goes!
      if (modelPosition !== 'undefined') {
        self.appendSingleTaskWithPosition(model, frag, $ol);
      }
      else {
        $ol[0].appendChild(frag);
        self.incrementCurrentOffset();
      }
    },

    '_forceCleanUp': function (listId) {

      var self = this;
      if (listId === self.model.attributes.listID || listId === self.model.attributes.filter) {
        !self.destroyed && self.$('ol').removeAttr('style');
      }
    },

    '_destroyGroup': function () {

      var self = this;
      self.destroy();
    },

    // Is called on a scroll, calls the rendering of a new group after the offset
    // and the threshold are higher than the container.
    '_onScroll': function () {

      var self = this;

      if (self.destroyed) {
        return;
      }

      var el = self.$el;
      var elPosition = el.position();
      var container = self.$scrollEl[0];

      self.defer(function () {

        if (self.destroyed || (self.options.testVisibility && elPosition.top >= self.$scrollEl.outerHeight())) {
          // if not stop execution
          return;
        }

        if (elPosition.top + el.height() - (container.scrollTop + container.offsetHeight) < self.model.attributes.scrollThreshold) {

          self._renderTasksAsGroup();
          $.Drop.compile();
        }
      });
    },

    'onDestroy': function () {

      var self = this;

      // destroy all queued timers to avoid animations happening
      // after we've switched views
      if (self.queuedTimers) {
        _.each(self.queuedTimers, window.clearTimeout);
      }
    },

    // helper to calc top position attribute
    '_newFirstPosition': function (isCompleted, model) {

      var self = this;
      var targetModel, elComplete;

      isCompleted = isCompleted || false;

      self.collection.sort();

      $.each(self.collection.models, function (idx, el) {

        elComplete = el.attributes.completed;
        elComplete = elComplete === 'undefined' ? false : elComplete;

        if (el.id !== model.id && elComplete === isCompleted) {

          targetModel = el;
          // end the loop
          return false;
        }
      });

      if (targetModel) {
        return targetModel.attributes.position - 10;
      }
      else {
        return 0;
      }
    },

    '_newLastPosition': function (isCompleted) {

      var self = this;

      isCompleted = isCompleted || false;

      var models = self.collection.where({'completed': isCompleted});
      models = _.sortBy(models, function (model) {

        return model.attributes.position;
      });

      if (models.length) {
        return models[models.length - 1].attributes.position + 10;
      }
      else {
        return 0;
      }
    },

    '_updatePosition': function (model, position) {

      model.save({'position': position}, {'silent': true});
      model._previousAttributes.position = position;
      model && model.collection.trigger('change', model, {'changes': {'position': true}});
      // TODO REMOVE DEBUG HELPER:
      runtime.trigger('change:position');
    }
  });
});
define('controllers/Tasks/DeleteCompletedTasksController',[

  'application/runtime',
  'wunderbits/WBViewController',
  'collections/TaskCollection'

], function (
  runtime,
  WBViewController,
  TaskCollection,
  undefined
) {

  

  var _ = runtime._;

  return WBViewController.extend({

    'implements': {

      'delete:completed': 'deleteCompleted'
    },

    'getConfirmationLabels': function (completed) {

      var getLabel = runtime.language.getLabel;

      var labels = {
        'text': getLabel('label_cant_undo').toString()
      };

      if (!completed.length) {
        throw new Error('Cannot delete completed tasks if they do not exist');
      }
      else if (completed.length === 1) {
        labels.title = getLabel('label_are_you_sure_permanently_delete_$_task', _.escape(completed[0].attributes.title)).toString();
        labels.confirm = getLabel('label_delete_task').toString();
      }
      else {
        labels.title = getLabel('label_are_you_sure_permanently_delete_task_plural').toString();
        labels.confirm = getLabel('label_delete_task_plural').toString();
      }

      return labels;
    },

    'deleteCompleted': function () {

      var self = this;
      var deferred = self.deferred();
      var listId = self.view.model.attributes.listID;
      var tasks = new TaskCollection('/lists/' + listId + '/tasks');

      var completed = tasks.filter(function (model) {
        return model.isCompleted();
      });

      var shouldPromptBefore = runtime.settings.get('confirm_delete_entity') === 'true';
      
      var action = function () {
        _.invoke(completed, 'destroy');
        deferred.resolve();
      };

      if (shouldPromptBefore) {

        var labels = self.getConfirmationLabels(completed);

        runtime.trigger('modal:confirm', {
          'customTitle': labels.title,
          'customText': labels.text,
          'confirmText': labels.confirm,
          'confirm': action,
          'cancel': deferred.reject
        });
      }
      else {
        action();
      }

      return deferred.promise();
    }
  });
});
// TaskGroupBaseFilterView
// ----------------------------
// This document handles grouping of tasks in a filter.
// Inherits from TaskGroupBaseView
// Overrides or extends methods with filter specific logics.
define('views/Tasks/TasksGroupBaseFilterView',[

  'application/runtime',

  'vendor/moment',

  'helpers/collectionSorting',
  'wunderbits/helpers/strings',

  'views/Tasks/TasksGroupBaseView',
  'controllers/Tasks/DeleteCompletedTasksController',
  'wunderbits/mixins/UnicodeEmojiViewMixin',

  'template!tasks'

],  function (
  runtime,
  moment,
  collectionSorting, Strings,
  TasksGroupBaseView,
  DeleteCompletedTasksController,
  UnicodeEmojiViewMixin,
  tasksTemplate,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var window = runtime.global;

  var _super = TasksGroupBaseView.prototype;

  return TasksGroupBaseView.extend({

    'template': tasksTemplate,

    'className': 'grouped-tasks',

    'observes': {

      'collection': {

        'change:due_date': '_onChangeDueDate',
        'change:hasUnreadComments': '_onChangeUnreadCommentState'
      }
    },

    'implements': [
      DeleteCompletedTasksController
    ],

    'emits': {
      'click .delete-completed': 'delete:completed'
    },

    'initialize': function (options) {

      var self = this;
      _super.initialize.apply(self, arguments);
      UnicodeEmojiViewMixin.applyTo(self);

      if (options.listID === 'inbox') {
        options.listTitle = runtime.language.getLabel('smart_list_inbox').toString();
      }

      var title = _.isFunction(options.listTitle) ? options.listTitle() : options.listTitle;

      self.model.set({
        'listTitle': title,
        'showHeading': true,
        'showCompleted': options.filter === 'search' || options.filter === 'completed',
        'hideCompletedHeading': options.filter === 'search' || options.filter === 'completed',
      });

      self.model.set({

        // adams not sure what you are trying to do here?
        'listTitle': Strings.emojiTokensToUnicode(title)
      });

      // bind in order to update list heading in week/today groups on lang. change
      if (options.filter.indexOf('todayPlus') !== -1) {
        self.bindTo(runtime, 'language:change', self._onChangeListTitle);
      }
    },

    'formatData': function (data) {

      var self = this;
      data = _super.formatData.apply(self, data);

      if (self.model.attributes.filter === 'completed') {
        data.allowClearCompleted = true;
      }

      return data;
    },

    'render': function() {

      var self = this;
      _super.render.apply(self, arguments);

      var attributes = self.model.attributes;
      if (attributes.filter && attributes.filter.indexOf('todayPlus') !== -1) {
        self.$('.normal a').removeAttr('href').addClass('no-hover');
      }

      var title = self.model.attributes.listTitle;
      title = _.isFunction(title) ? title() : title;
      self.model.set('listTitle', Strings.emojiTokensToUnicode(title));

      self.renderEmoji(self.$('.normal a'));

      return self;
    },

    'addChunkedItemsToFragments': function (chunkedItems, regularFragment, doneFragment)  {

      var self = this;
      var now = moment().sod();
      var filter = self.model.attributes.filter;

      _.each(chunkedItems, function (model) {

        // is this model already rendered?
        if (self.getSubview(model.id)) {
          return;
        }

        // does this model belong to this filter?
        if (filter) {

          if (filter === 'starred' && !model.attributes.starred) {
            return;
          }
          else if (filter === 'assigned') {

            if (!model.attributes.assignee_id || model.attributes.assignee_id !== runtime.user.id) {
              return;
            }
          }
          else if (filter === 'conversations') {

            if (!model.attributes.hasComments) {
              return;
            }
          }
          else if (filter === 'today') {

            if (!model.attributes.due_date) {
              return;
            }

            var duedate = moment(model.attributes.due_date, 'YYYY-MM-DD').sod();
            if (duedate && duedate.diff(now, 'days') > 0) {
              return;
            }
          }
          else if (filter === 'completed' && !model.attributes.completed) {
            return;
          }
        }

        var task = self.addSubview(self.taskFactory(model), model.id);
        model.attributes.completed ? doneFragment.appendChild(task.render().el) : regularFragment.appendChild(task.render().el);
      });
    },

    // This method renders the grouping, puts the tasks in the template's <ol> and
    // renders each task for that lists collection of tasks
    '_renderTasksAsGroup': function () {

      var self = this;

      //if it is a filter update the state model to hide the completed
      var filter = self.model.attributes.filter;
      if (filter) {
        self.model.set({'showCompleted': filter === 'search'});
      }

      return _super._renderTasksAsGroup.apply(self, arguments);
    },

    'filterCollectionItems': function (items) {

      var self = this;

      // filter out complete items for certain smart lists, before sort
      var filter = self.model.attributes.filter;
      var smartLists = _.without(runtime.smartLists, 'completed');

      if (smartLists.indexOf(filter) !== -1) {
        items = _.filter(items, function (item) {
          return !item.isCompleted();
        });
      }

      return items;
    },

    'sortCollectionItems': function (items) {

      var self = this;

      items.sort(function (a, b) {

        // this check puts the correct type of tasks at the top of the collection,
        // so that they will show up in the chunkedItems array
        var filterOrder;
        switch (self.model.attributes.filter) {

        case 'starred':
          filterOrder = collectionSorting.dualBinarySort('starred', 'position', a, b);
          break;

        case 'today':
          filterOrder = collectionSorting.dualBinarySort('due_date', 'position', a, b, false, true);
          break;

        // week filter view collections
        case 'todayPlus0':
        case 'todayPlus1':
        case 'todayPlus2':
        case 'todayPlus3':
        case 'todayPlus4':
        case 'todayPlus5':
        case 'todayPlus6':
          filterOrder = collectionSorting.dualBinarySort('due_date', 'list_id', a, b, false, true);
          break;

        case 'completed':
          filterOrder = collectionSorting.dualBinarySort('completed', 'completed_at', a, b);
          break;

        case 'assigned':
          filterOrder = collectionSorting.dualBinarySort('assignee_id', 'position', a, b);
          break;

        case 'conversations':
          filterOrder = collectionSorting.dualBinarySort('hasComments', 'position', a, b);
          break;

        case 'all':
          filterOrder = collectionSorting.dualBinarySort('completed', 'position', a, b, true);
          break;

        // default list sort
        default:
          filterOrder = collectionSorting.dualBinarySort('completed', 'position', a, b, true);
          break;
        }

        return filterOrder;
      });

      return items;
    },

    '_onChangeDueDate': function (model) {

      var self = this;

      var weekFilters = ['todayPlus0', 'todayPlus1', 'todayPlus2', 'todayPlus3', 'todayPlus4', 'todayPlus5', 'todayPlus6'];

      // this is special logic for the today group in the week filter
      var filter = self.model.attributes.filter;
      if ((filter === 'todayPlus0' || filter === 'today') && model.isInTodayCollection() && self.collection.get(model.id)) {

        var wanted = self.collection.where({'completed': false});

        wanted = _.filter(wanted, function (wantedModel) {

          return wantedModel.isInTodayCollection();
        });

        if (wanted.length > 1) {

          self.collection.remove(model);

          self.defer(function () {

            self.collection.add(model);
          });
        }
      }
      else if (_.indexOf(weekFilters, filter) !== -1) {

        self.destroySubview(model.id);
      }
    },

    '_onChangeUnreadCommentState': function (model) {

      var self = this;
      if (model.attributes.hasUnreadComments && self.collection.get(model.id)) {

        var wanted = self.collection.where({'completed': false});

        wanted = _.filter(wanted, function (wantedModel) {

          return wantedModel.attributes.hasUnreadComments;
        });

        if (wanted.length > 1) {

          self.collection.remove(model);

          self.defer(function () {

            self.collection.add(model);
          });
        }
      }
    },


    'handleStarredAnimationWhenFirstItem': function (model) {

      var self = this;

      if (self.model.attributes.filter === 'starred') {

        self.getSubview(model.id).animateAndDestroy();
      }
      else {

        _super.handleStarredAnimationWhenFirstItem.apply(self, arguments);
      }
    },

    // This method handles the completed animation. The use of clones is messy, but necessary
    '_handleCompletedAnimation': function (model) {

      var self = this;
      var filter = self.model.attributes.filter;

      if (filter && filter === 'completed') {

        var view = self.getSubview(model.id);
        view && view.animateAndDestroy();
        self._handleHeadings.apply(self, arguments);
      }
      else {

        _super._handleCompletedAnimation.apply(self, arguments);
      }
    },

    // Simple method that checks if we are in a detail view. if we are, close it before the continuing
    '_closeDetailView': function(taskEl) {

      _.delay(function() {

        if (window.location.href.indexOf('tasks') >= 0) {
          runtime.publish('detail:close');
        }

        taskEl.remove();
      }, 200);
    },

    // this method handles filter heading cleanup after a model is removed/destroyed/marked deleted/completed/changed etc.
    '_handleHeadings': function (model, collection, eventOptions) {

      eventOptions = eventOptions || {};
      if (eventOptions.fromDestructiveSort) {
        return;
      }

      var self = this;
      var wantedTasks, attributes;
      var filter = self.model.attributes.filter;

      if (filter === 'all') {
        attributes = {'completed': false};
      }
      else if (filter === 'starred') {
        attributes = {'completed': false, 'starred': true};
      }
      else if (filter === 'completed') {
        attributes = {'completed': true};
      }
      else {
        attributes = {'completed': false};
      }

      if (filter === 'search') {
        wantedTasks = self.collection.models;
      }
      else {
        wantedTasks = self.collection.where(attributes);
      }

      if (filter === 'today') {
        wantedTasks = _.filter(wantedTasks, function (model) {

          return model.isInTodayCollection();
        });
      }

      if (filter === 'assigned') {
        wantedTasks = _.filter(wantedTasks, function (model) {

          return model.isAssignedToMe();
        });
      }

      if (filter === 'conversations') {
        wantedTasks = _.filter(wantedTasks, function (model) {

          return model.hasComments();
        });
      }

      if (wantedTasks.length) {
        clearTimeout(self.headingTimeout);
        self.$('.heading, .delete-completed').removeClass('hidden');
      }
      else {
        clearTimeout(self.headingTimeout);
        self.headingTimeout = setTimeout(function () {

          self.$el && self.$('.heading, .delete-completed').addClass('hidden');
        }, 400);
      }
    },


    'roomForTasks': function (completed) {

      var self = this;
      self.taskHeight = self.taskHeight || self.$('.taskItem').first().height() || (runtime.env.isTouchDevice() ? 48 : 37);
      var buffer = 5;
      var normalTaskCount = $('#tasks .tasks li').length;
      var inboxCount = $('#tasks .grouped-tasks[rel="inbox"] li').length;
      var completedTaskCount = $('#tasks .completed-tasks li').length;
      var currentTaskCount = completed ? normalTaskCount + completedTaskCount : normalTaskCount;

      self.tasksToFitViewport = Math.floor((window.innerHeight) / self.taskHeight + buffer);

      var viewportHasSpace;

      // today and starred have special logic and never call this method
      var addTaskFilters = ['all'];
      if ((_.indexOf(addTaskFilters, self.model.attributes.filter) !== -1) && self.collection.url === '/lists/inbox/tasks') {
        viewportHasSpace = inboxCount > self.tasksToFitViewport ? false : true;
      }
      else {
        viewportHasSpace = currentTaskCount > self.tasksToFitViewport ? false : true;
      }

      return viewportHasSpace;
    },

    'getShouldDisplayCompleted': function () {

      var self = this;
      return self.model.attributes.filter === 'search' || self.model.attributes.filter === 'completed';
    },

    'updateCompletedState': function () {

      var self = this;
      var filter = self.model.attributes.filter;
      if (filter && (filter !== 'completed' && filter !== 'search')) {

        self.model.set({

          'showCompleted': false
        });
      }
    },

    'checkSelectOptions': function (options) {

      // make sure we keep the active and selected state
      // TODO: LOGIC IN HERE!!!
      if (options.active !== true) {
        options.active = false;
      }
      if (options.selected !== true) {
        options.selected = false;
      }

      return options;
    },

    'getOl': function (model, options) {

      var self = this;
      var filter = self.model.attributes.filter;
      var $ol;

      if (filter && filter !== 'search' && !options.weekFilter) {

        var listId;
        if (options && options.listId) {
          listId = options.listId;
          options.checkHandling = true;
        }
        else {
          listId = model.attributes.list_id;
        }

        $ol = $('div[rel="' + listId + '"] ol');

        if (!$ol.length) {
          var $inbox = $('div[rel="inbox"]');
          $inbox.find('h2').removeClass('hidden');
          $ol = $inbox.find('ol');
        }
      }
      else {

        $ol = model.isCompleted() ? self.$('ol.completed-tasks') : self.$('ol.tasks');
      }

      return $ol;
    },

    'placeIntoDom': function (model, taskFrag, $ol, options) {

      var self = this;
      var modelPosition = model.attributes.position;
      var modelIndex, nextIndex, $afterEl, id;
      var sortType = options.conversationsFilter ? 'hasUnreadComments': 'due_date';

      // TODO break out filter specifics to subclass methods TBV
      // Where it goes!
      if (modelPosition !== 'undefined' && !options.weekFilter && !options.todayFilter && !options.conversationsFilter) {

        self.appendSingleTaskWithPosition(model, taskFrag, $ol);
      }
      else if (options.weekFilter) {

        modelIndex = _.indexOf(self.collection.models, model);
        nextIndex = self.collection.at(modelIndex + 1) ? modelIndex + 1 : self.collection.length - 1;
        $afterEl = $ol.find('li[rel="' + self.collection.at(nextIndex).attributes.id + '"]');

        if ($afterEl.size() === 1) {
          $afterEl.before(taskFrag);
        }
        else {
          $ol.append(taskFrag);
        }
        self.incrementCurrentOffset();
      }
      else if (options.todayFilter || options.conversationsFilter) {

        var filterModels = self.collection.models;
        filterModels = filterModels.sort(function (a, b) {

          return collectionSorting.dualBinarySort(sortType, 'position', a, b, false, true);
        });

        modelIndex = _.indexOf(filterModels, model);
        nextIndex = filterModels[modelIndex + 1] ? modelIndex + 1 : filterModels.length - 1;
        id = filterModels[nextIndex] && filterModels[nextIndex].attributes.id;
        id && ($afterEl = $ol.find('li[rel="' + id + '"]'));

        if ($afterEl && $afterEl.size() === 1) {
          $afterEl.before(taskFrag);
        }
        else {
          $ol[0].appendChild(taskFrag);
        }

        self.incrementCurrentOffset();
      }
      else {

        $ol[0].appendChild(taskFrag);
        self.incrementCurrentOffset();
      }
    }
  });
});
define('helpers/Animator',[

  'vendor/jquery',
  'vendor/lodash',

  'wunderbits/WBSingleton'

], function ($, _, WBSingleton, undefined) {

  

  return WBSingleton.extend({

    'wobble': function (target) {

      target.addClass('wobble');

      _.delay(function(){

        target.removeClass('wobble');
      }, 500);
    },

    'isAnimatingOrClone': function (el) {

      var $el = $(el);
      var animations = '.animate-up, .animate-down, .pop-in, .pop-out, .pop-back, .clone, .clone-title, .animated';

      return $el.is(animations);
    }
  });

});
define('mixins/TaskBrowserView/ViewportMixin',[

  'application/runtime',
  'wunderbits/WBMixin'

], function (runtime, WBMixin, undefined) {

  

  var $ = runtime.$;
  var global = runtime.global;

  return WBMixin.extend({

    'checkViewport': function() {

      var self = this;
      var taskHeight = self.$('.taskItem').first().height() || (runtime.env.isTouchDevice() ? 48 : 37);
      var buffer = 5;
      self.currentTaskCount = self.$('.taskItem').length;
      self.tasksToFitViewport = Math.floor((global.innerHeight) / taskHeight + buffer);
      var viewportHasSpace = self.currentTaskCount > self.tasksToFitViewport ? false : true;

      return viewportHasSpace;
    },

    '_scrollTop': function() {

      var self = this;
      self.$el.closest('.tasks-scroll').scrollTop(0);
    },

    '_scrollTaskCheck': function (el, viewport, parent) {

      var delay = 150;
      var $task = $(el);
      var $viewport = viewport;

      parent = parent || $(global);
      var windowHeight = parent.height();
      var currentScroll = $viewport.scrollTop();
      var taskTop, taskHeight, taskBottom;

      if ($task.size() === 0) {

        return;
      }

      taskTop = $task.offset().top;
      taskHeight = $task.height();
      taskBottom = taskTop + taskHeight;

      if (taskBottom > windowHeight) {

        $viewport.stop(true, true).animate({'scrollTop': currentScroll + taskTop - (taskHeight/2)}, delay);
      }
      else if (taskTop <= 0) {

        if ((currentScroll - windowHeight) + taskTop > 0) {

          $viewport.stop(true, true).animate({'scrollTop': (currentScroll - windowHeight) - taskTop + (taskHeight/2)}, delay);
        }
        else {

          $viewport.stop(true, true).animate({'scrollTop': 0}, delay);
        }
      }
    },
  });
});
define('mixins/TaskBrowserView/KeyboardShortcutMixin',[

  'application/runtime',
  'vendor/moment',
  'helpers/Animator',
  'collections/TaskCollection',
  'wunderbits/WBMixin',

], function (runtime, moment, Animator, TaskCollection, WBMixin, undefined) {

  

  var $ = runtime.$;
  var _ = runtime._;

  var _animator = Animator;

  return WBMixin.extend({

    '_openEditTitleFromShortcut': function () {

      var self = this;
      var id = self.$('.active').not('.done').attr('rel');

      if (id) {

        if (runtime.currentRoute() !== 'tasks/' + id) {
          runtime.trigger('route:tasks/' + id + '/title/edit');
        }

        $.when(self.detailPromise).then(function () {
          runtime.trigger('route:tasks/' + id + '/title/edit');
        });
      }
    },

    '_toggleDoneFromShortcut' : function () {

      var self = this;
      var $selectedTasks, $thisTask, numTasks;

      if (!self.allTasks) {
        self.allTasks = new TaskCollection('/tasks/all');
      }

      if (_animator.isAnimatingOrClone() || runtime.focus === 'addTask' || runtime.focus === 'addTaskDatePicker') {

        return;
      }

      $selectedTasks = self.$('.taskItem.selected').not('.clone');
      numTasks = $selectedTasks.size();

      if (self.allTasksAreInList.state() === 'pending') {

        self.currentLists[$($selectedTasks[0]).closest('.grouped-tasks').attr('rel')]._renderRemainingChunks();
      }

      $.when(self.allTasksAreInList).then(function () {

        for (var i = 0; i <= numTasks; i++) {

          $thisTask = $($selectedTasks.get(i));
          if (_animator.isAnimatingOrClone($thisTask)) {
            return;
          }

          var id = $thisTask.attr('rel');
          var task = id && self.allTasks.get(id);

          if (task) {

            var analyticsKey = 'analytics:Tasks:' + (task.isCompleted() ? 'unmarkDone' : 'markDone');
            runtime.trigger(analyticsKey, 'keyboard');

            !task.isCompleted() && self._beginCheckOff(undefined, $thisTask);
            self._markAsDone(undefined, $thisTask);
          }
        }
      });
    },

    'selectTaskById': function (id) {

      var self = this;
      var $target = self.$('[rel="' + id + '"]');

      if (!$target.hasClass('active')) {
        $target.addClass('selected active').focus();
      }
    },

    '_toggleStarredFromShortcut': function () {

      var self = this;
      var $selectedTasks, $thisTask, numTasks;

      if (!self.allTasks) {
        self.allTasks = new TaskCollection('/tasks/all');
      }

      $selectedTasks = self.$('.taskItem.selected').not('.clone');
      numTasks = $selectedTasks.size();

      if (runtime.focus === 'addTask' || runtime.focus === 'addTaskDatePicker' || $selectedTasks.hasClass('done')) {
        return;
      }

      for (var i = numTasks; i >= 0; i--) {

        $thisTask = $($selectedTasks.get(i));
        if (_animator.isAnimatingOrClone($thisTask)) {
          return;
        }

        self.clearOut && clearTimeout(self.clearOut);

        var id = $thisTask.attr('rel');
        var task = id && self.allTasks.get(id);

        if (task) {
          task.save({ 'starred': !task.attributes.starred });
        }
      }
    },

    // delete a task
    '_deleteTaskFromShortcut': function (options) {

      var self = this;
      var $selectedTasks, $thisTask, numTasks, taskModel;
      var shouldPromptBefore = runtime.settings.attributes.confirm_delete_entity === 'true';

      if (options && options.ignorePrompt) {

        shouldPromptBefore = false;
      }

      $selectedTasks = self.$('.taskItem.selected').not('.clone');
      numTasks = $selectedTasks.size();

      if (numTasks === 0) {

        return;
      }

      var throttleSelectNext = _.throttle(function(taskModel) {

        runtime.trigger('task:deleted', taskModel);
      }, 100);

      // what we doin
      var action = function () {

        _.each(self.currentLists, function (list, idx) {

          self.currentLists[idx]._renderRemainingChunks();
        });

        $.when(self.allTasksAreInList).then(function () {

          _.each($selectedTasks, function (el) {

            $thisTask = $(el);
            if (_animator.isAnimatingOrClone($thisTask)) {
              return;
            }

            taskModel = self.allTasks.get($thisTask.attr('rel'));
            taskModel && taskModel.destroy();
          });

          throttleSelectNext(taskModel);
          self._routeToList('browser');
        });
      };

      var confirmationOptions = {

        'confirm': action,
        'cancel': function () {}
      };

      if (numTasks > 1) {

        confirmationOptions.customTitle = runtime.language.getLabel('label_are_you_sure_permanently_delete_task_plural').toString();
        confirmationOptions.confirmText = runtime.language.getLabel('label_delete_task_plural').toString();
      }
      else {

        var singleTaskModel = self.allTasks.get($selectedTasks.attr('rel'));

        confirmationOptions.customTitle = runtime.language.getLabel('label_are_you_sure_permanently_delete_$_task', singleTaskModel.escape('title')).toString();
        confirmationOptions.confirmText = runtime.language.getLabel('label_delete_task').toString();
      }

      confirmationOptions.customText = runtime.language.getLabel('label_cant_undo').toString();

      // get confirmation
      if (shouldPromptBefore) {

        runtime.trigger('modal:confirm', confirmationOptions);
      }
      else {

        // do it
        action();
      }
    },

    'selectNextTask': function (taskModel) {

      var self = this;

      var $el = self.$('[rel="' + taskModel.id + '"]').addClass('destroyed');
      var index = $el.index();

      var selectedIndex = index;
      var $items = self.$('li').not('.destroyed, .animate-up');
      var nextEl = $items.get(selectedIndex);

      if (!nextEl || self.$(nextEl).hasClass('done')) {
        nextEl = $items.get(selectedIndex - 1);
      }

      self.$('li').removeClass('active selected');
      self.$(nextEl).addClass('active selected').focus();

      self.updateSelectedCount();
    },

    // copy pasta
    '_copyTasks': function () {

      var self = this;
      self._updateCopiedTaskIds();
      self.copyOrCut = 'copy';
      self.cutModels = {};
    },

    '_cutTasks': function () {

      var self = this;
      self._updateCopiedTaskIds();
      self.copyOrCut = 'cut';
      self.cutModels = {};
    },

    '_pasteTasks': function () {

      var self = this;
      var $lastSelected = self.$('.selected').filter(':last');
      var selectedId = $lastSelected.attr('rel');
      var filterOrListId = self.currentListId ? self.currentListId : 'inbox';
      var data, taskModel, cutModel, thisModel, subtasks, listID, isStarred, dueDate, collection;
      var startPosition, afterPosition, increment, lastPosition;

      // no pasties in the done filter!
      if (self.currentFilter === 'completed') {

        return;
      }

      listID = self.$('.active').closest('.grouped-tasks').attr('rel') || filterOrListId;
      collection = new TaskCollection('/lists/' + listID + '/tasks');

      // if no task is selected, paste each task to end of list
      if ($lastSelected.size() === 0) {

        startPosition = collection.positions.normal.last;
        increment = 1;
      }
      else {
        // calculate start and increment
        startPosition = collection.get(selectedId).attributes.position;

        var lastNotCompletedId = _.last(_.filter(collection.models, function (model) {

          return !model.isCompleted();
        })).attributes.id;

        // if this is the last list item
        if (selectedId === lastNotCompletedId) {

          increment = 1;
        }
        else {

          // broke this out here for debugging nest if you want to ...
          var curModel = collection.get(selectedId);
          var curIndex = collection.indexOf(curModel);
          var nextIndex = curIndex + 1;
          var nextId = collection.at(nextIndex).attributes.id;

          afterPosition = collection.get(nextId).attributes.position;
          increment = (afterPosition - startPosition) / (self.copiedTaskIds.length + 1);
        }
      }

      // first pasted task's position
      lastPosition = startPosition + increment;

      // gotta paste em all
      _.each(self.copiedTaskIds, function (id) {

        // get this task id's model
        // even if a stored local identifier has been overwritten by a sync id
        taskModel = self.allTasks.get(id);
        cutModel = self.cutModels && self.cutModels[id];

        thisModel = taskModel || cutModel;

        // filter setup
        if (self.currentFilter === 'starred') {

          isStarred = true;
        }

        if (self.currentFilter === 'today') {

          dueDate = moment().format('YYYY-MM-DD');
        }

        // create a copy and pasta
        data = {

          'title': thisModel.attributes.title,
          'list_id': listID,
          'starred': isStarred || thisModel.isStarred(),
          'due_date': dueDate || thisModel.attributes.due_date,
          'position': lastPosition,
          'reminder_date': thisModel.attributes.reminder_date,
          'reminder_time': thisModel.attributes.reminder_time,
          'recurrence_count': thisModel.attributes.recurrence_count,
          'recurrence_type': thisModel.attributes.recurrence_type,
          'note': thisModel.attributes.note,

          'from_paste': true
        };

        if (self.allTasks) {

          var thisBind = self.bindTo(self.allTasks, 'add', function (model) {

            // no garbabe plz
            self.unbindFrom(thisBind);

            // subtasks
            subtasks = new TaskCollection('/tasks/' + thisModel.id + '/subtasks');

            _.each(subtasks.models, function (subtaskModel) {

              data = {

                'title': subtaskModel.attributes.title,
                'list_id': listID,
                'parent_id': model.id,
                'order': subtaskModel.attributes.order
              };

              self.allSubTasks.add(data);
            });
          });

          // yup it's down here, add after creating one-off bind
          self.allTasks.add(data);
        }

        // if cut delete original
        if (self.copyOrCut === 'cut' && taskModel) {

          self.cutModels[taskModel.id] = taskModel.clone();
          taskModel.destroy();
        }

        lastPosition += increment;
      });
    },

    // copy/cut helper
    '_updateCopiedTaskIds': function () {

      var self = this;
      var $selectedTasks = self.$('.taskItem.selected').not('.clone');
      var $this;

      self.copiedTaskIds = [];

      _.each($selectedTasks, function (el) {

        $this = $(el);
        self.copiedTaskIds.push($this.attr('rel'));
      });
    },

    // select all tasks
    '_selectAllTasks': function () {

      var self = this;

      if (runtime.focus !== 'sidebar') {

        if (self.allTasksAreInList.state() === 'pending') {

          self.chunkingOption = false;
          if (self.lastRenderedFilterType) {
            self.lastRenderedFilterType = null;
            self.renderFilterOfType(self.currentFilter);
          }

          if (self.lastRenderedListID) {
            self.lastRenderedListID = null;
            self.renderListWithID(self.currentListId);
          }
        }

        $.when(self.allTasksAreInList).then(function () {

          runtime.trigger('detail:close', function () {

            self.selectType = self.$('.selected').hasClass('done') ? 'completed' : 'regular';
            var $tasks;

            if (self.selectType ===  'regular') {
              $tasks = self.$('.taskItem').not('.done');
            }
            else {
              $tasks = self.$('.taskItem.done');
            }

            $tasks.addClass('selected');
            runtime.trigger('focus:set', 'browser');
            self.updateSelectedCount();
          });
        });
      }
    },

    // selected task reset helper
    '_resetSelectedTasks': function () {

      var self = this;
      var $tasks = self.$('.taskItem');
      var $activeTask = $tasks.filter('.active');

      $tasks.removeClass('active selected');

      if (self._focus === 'browser') {

        $activeTask.addClass('active selected').focus();
      }

      _.defer(self.updateSelectedCount);
    },

    '_navigateTasks': function (direction, select) {

      var self = this;
      var $tasks = self.$('.taskItem').not('.animate-up');
      var $selectedTasks = $tasks.filter('.selected');
      var listID = self.lastRenderedListID;
      var filter = self.lastRenderedFilterType;
      var list = listID || filter;
      var taskIndex = 0;
      var activeIndex = 0;
      var counter = 0;
      var activeTask = $tasks.filter('.active')[0];
      var $task, currentTask, addClass, addAllClass, removeClass, newlySelected, nextType;
      var detailViewState = window.location.href.indexOf('tasks');

      if (select && (direction === 'up' || direction === 'down')) {

        addClass = 'selected';
        removeClass = '';

        if (direction === 'up') {

          currentTask = $selectedTasks.filter(':first')[0];
        }
        else if(direction === 'down') {

          currentTask = $selectedTasks.filter(':last')[0];
        }
      }
      else {

        addClass = 'active selected';
        removeClass = 'active selected';
        currentTask = activeTask;
      }

      _.each($tasks, function (el) {

        if (el === currentTask) {

          taskIndex = counter;
        }
        else if (el === activeTask) {

          activeIndex = counter;
        }

        counter += 1;
      });

      // this restricts multiselect to groups (completed/not-completed)
      if (direction === 'up' && select) {

        self.selectType = $($tasks.get(taskIndex)).hasClass('done') ? 'completed':'regular';
        nextType = $($tasks.get(taskIndex - 1)).hasClass('done') ? 'completed':'regular';

        if (self.selectType === 'regular' && nextType === 'completed' || self.selectType === 'completed' && nextType == 'regular') {
          return;
        }
      } else if (direction === 'down' && select){

        self.selectType = $($tasks.get(taskIndex)).hasClass('done') ? 'completed':'regular';
        nextType = $($tasks.get(taskIndex + 1)).hasClass('done') ? 'completed':'regular';
        if (self.selectType === 'regular' && nextType === 'completed' || self.selectType === 'completed' && nextType == 'regular') {
          return;
        }
      }

      if (direction === 'up') {

        if (taskIndex > 0) {

          $task = $($tasks.get(taskIndex - 1));
          $tasks.removeClass(removeClass);

          $task.addClass(addClass).focus();
        }
        else if (!select) {

          self.chunkingOption = false;
          if (self.lastRenderedFilterType) {
            self.lastRenderedFilterType = null;
            self.renderFilterOfType(self.currentFilter);
          }

          if (self.lastRenderedListID) {
            self.lastRenderedListID = null;
            self.renderListWithID(self.currentListId);
          }

          $.when(self.allTasksAreInList).then(function () {

            if (select) {
              addClass = 'active';
              addAllClass = 'selected';
              removeClass = 'active';
            }
            else {
              addClass = 'active selected';
              addAllClass = '';
              removeClass = 'active selected';
            }

            $tasks = self.$('.taskItem').not('.animate-up');
            $tasks.addClass(addAllClass).removeClass(removeClass);
            $task = $($tasks.get($tasks.size() - 1));

            var ignoreCompleted = self.currentListId && self.$el.hasClass('completed-hidden');

            if (ignoreCompleted && $task.hasClass('done')) {
              $tasks.not('.done').last().addClass(addClass).focus();
            }
            else {
              $task.addClass(addClass).focus();
            }

            _.delay(function () {

              if (!self.destroyed) {

                self._scrollTaskCheck(self.$('li.active'), self.$el.closest('.tasks-scroll'));
                self.chunkingOption = true;
              }
            }, 200);
          });
        }
      }
      else if (direction === 'down') {

        if (taskIndex < $tasks.length - 1) {
          $task = $($tasks.get(taskIndex + 1));
          $tasks.removeClass(removeClass);

          var ignoreCompleted = self.currentListId && self.$el.hasClass('completed-hidden');

          if (ignoreCompleted && $task.hasClass('done')) {
            $task = $tasks.first();
          }

          $task.addClass(addClass).focus();
        }
        else if (!select) {
          $task = $($tasks.get(0));
          $tasks.removeClass(removeClass);
          $task.addClass(addClass).focus();
        }
      }
      else if (direction === 'left') {

        $tasks.removeClass('active selected');

        var setFocus = detailViewState >= 0 ? 'browser':'sidebar';
        var returnRoute = 'lists/' + list;

        // if we are in a search state, meaning we are searching or in a task
        // route for a search result, then change the focus and the return route
        if (runtime.inSearchState) {

          setFocus = 'browser';
          returnRoute = 'search';

          // append search term, only if it is truthy
          if (runtime.currentSearchTerm) {
            returnRoute += '/' + runtime.currentSearchTerm;
          }
        }

        runtime.trigger('route:' + returnRoute);

        _.defer(function () {

          runtime.trigger('focus:set', setFocus);
        });

        var shouldShowSidebar = true;

        if (detailViewState >= 0 && (runtime.env.isMicro() || runtime.env.isMini()) && !runtime.inSearchState) {
          shouldShowSidebar = false;
        }
        runtime.trigger('sidebar:toggle', shouldShowSidebar);
      }
      else if (direction === 'right') {

        // to detail view
        var $selected = $tasks.filter('.active');
        var id = $selected.attr('rel');
        id && runtime.trigger('route:tasks/' + id);
      }

      if ((direction === 'up' || direction === 'down') && $task && $task.length !== 0) {

        if (!select) {

          if (detailViewState >= 0) {

            self.debouncedRouteChange($task.attr('rel'));
          }
          self._scrollTaskCheck(self.$('li.active'), self.$el.closest('.tasks-scroll'));
        }
        else {
          newlySelected = direction === 'up' ? ':first' : ':last';
          self._scrollTaskCheck(self.$('li.selected').filter(newlySelected), self.$el.closest('.tasks-scroll'), $(window));
        }
      }

      if ($tasks.filter('.selected').length > 1 && detailViewState >= 0) {

        self._routeToList('browser');
      }

      self.updateSelectedCount();
    },

    'updateSelectedCount': function () {

      var self = this;
      var eventName = 'browser:selectionChanged';
      var $allTasks = self.$('.taskItem').not('.clone');
      var $selectedTasks = $allTasks.filter('.selected, .active');
      var numTasks = $selectedTasks.size();
      var allIds = [];
      var hasAssigneeInList, allTaskModels, allWithDueDateCount;

      $allTasks.each(function (index, el) {
        var id = $(el).attr('rel');
        id && allIds.push(id);
      });

      allTaskModels = self.allTasks.filter(function (task) {
        return allIds.indexOf(task.id) >= 0;
      });

      hasAssigneeInList = _.filter(allTaskModels, function (task) {
        return !task.isCompleted() && task.isAssigned();
      }).length;

      allWithDueDateCount = _.filter(allTaskModels, function (task) {
        return !task.isCompleted() && task.hasDueDate();
      }).length;

      runtime.unpublish(eventName).publish(eventName, {
        'selected': numTasks,
        'withDueDate': allWithDueDateCount,
        'hasAssignee': hasAssigneeInList
      });

      // if there are no selected tasks and the focus is in the wrong state, fix it
      // this can occur when a sync deletes the only selected task(s)
      if (numTasks === 0 && runtime.focus === 'browser') {

        runtime.trigger('focus:set', 'sidebar');
      }
    }
  });
});
/*jshint expr:true */

define('mixins/TaskBrowserView/DragEventsMixin',[

  'application/runtime',
  'vendor/moment',

  'collections/TaskCollection',

  'helpers/SortBehaviorMixin',
  'helpers/Animator',

  'wunderbits/WBMixin',

], function (runtime, moment, TaskCollection, Sort, Animator, WBMixin, undefined) {

  

  var $ = runtime.$;
  var _ = runtime._;

  var _animator = Animator;

  return WBMixin.extend({

    '_startDrag': function(ev, drag) {

      var self = this;
      var moveFree = true;
      var taskWidth = self.$el.find('.taskItem').outerWidth();

      if (!drag || !drag.element) {
        return;
      }

      var $existingDragClone = $('.drag-clone');

      drag.isShared = self.isListShared(self.currentListId);
      if (drag.dragClone || $existingDragClone.length) {
        $existingDragClone.remove();
      }

      if (runtime.env.isMicro() && runtime.isSidebarVisible) {
        drag.cancel();
        return;
      }

      var isLinkOut = $(ev.target).hasClass('linkout');
      if ((isLinkOut && runtime.env.isIE()) || drag && !self.dragReady && (runtime.env.isTouchDevice() && !runtime.env.isPointerEnabled())) {
        drag.cancel();
        return;
      }

      self.dragging = [];

      drag.scrolls($('.tasks-scroll'), {
        'distance' : 100,
        'direction' : 'y'
      });

      if (self.currentListId) {
        self.currentLists[self.currentListId] && self.currentLists[self.currentListId].$el.removeClass('share-list');
      }

      if (_animator.isAnimatingOrClone(drag.element)) {
        drag.cancel();
        return;
      }

      // this is the drag clone, lets us change shape, and in general just have more control
      var $dragClone = drag.element.clone().addClass('drag-clone dragging').removeClass('animate');
      $('.main-interface').append($dragClone);

      drag.dragClone = $dragClone;
      // jQ++ method for attaching the clone to our cursor
      drag.representative($dragClone, $dragClone.outerWidth()/2, $dragClone.outerHeight()/2);

      // if the drag element isnt selected, cleanup and put the dragged element in the array
      if (drag.element && !drag.element.hasClass('selected')) {
        self.$el.find('.selected').removeClass('selected active');
        self.dragging.push(drag.element);
      }
      // we pass in the event, the drag object, and the freemove option
      Sort.dragStart(ev, drag, moveFree, taskWidth);

      if (drag.element && drag.element[0] !== Sort.dragParent.find('li:first')[0]) {
        drag.element.next('li').css({'margin-top': Sort.dragHeight +'px'}).addClass('collapse-cell');
      }

      // grab all the selected elements, and hide them and collapse the DOM around them.
      _.each(self.$el.find('.selected'), function (el){

        self.dragging.push(el);
        $(el).css({
          'position':'absolute',
          'display':'none'
        });
      });

      if (!self.currentFilter) {
        Sort.dragParent.closest('div').addClass('positionForDrop');
        self.delegateEvents();
      }
      // don't want to see the drag element anymore
      drag.element.hide();

      // if we are dragging more than 1 element swap the UI
      if (self.dragging.length > 1) {
        // create badge with count and stack
        $('.drag-clone .task-star, .drag-clone .duedate, .drag-clone .task-recurring').hide();
        // #TODO figure out a way to abstract this a bit.
        $('.drag-clone').prepend('<span class="badge">' + self.dragging.length + '</span>').append('<div class="task-body" style="z-index:-5;margin-top:-32px;margin-left:3px; width:' + ($dragClone.outerWidth() - 6) +'px;"/>');
      }
      if (self.dragging.length > 2) {
        $('.drag-clone').append('<div class="task-body" style="z-index:-7;margin-top:-32px;margin-left:5px; width:' + ($dragClone.outerWidth() - 10) +'px"/>');
      }
      // this puts the saved drag elements on the drag object that can be sent to the other dropzones
      drag.dragElements = self.dragging;

      // setup method to cancel user drag from other places in the app
      // self.dragCancelBind = self.bindTo(runtime, 'tasks:drag:cancel', function () {

      //   self.drag && self.drag.cancel();
      // });

      self.drag = drag;
      runtime.trigger('drag:start');
      runtime.trigger('focus:set', 'browser');
    },

    '_dragOver': function(ev, drag, drop) {

      var self = this;
      Sort.dragOver(ev, drag, drop);

      var $dropContainer = drop.element.closest('ol');

      if (self.currentFilter &&  !$dropContainer.hasClass('lists-inner') && $dropContainer.attr('id') !== 'lists' && !$dropContainer.hasClass('main-interface')) {

        $dropContainer.find('li').addClass('lists-in-filter-hover');
      }
    },

    '_dropMove': function(ev, drop, drag) {

      var self = this;

      self.dragObj = drag;
      self.dropObj = drop;

      // This disables sort in filters. change to only check against 'today' or 'week' to enable it again
      if (self.currentFilter || drag.element.hasClass('done')) {

        return;
      }

      Sort.dragMove(ev, drop, drag);

      if (drop.element[0] === Sort.dragParent.find('li:not(.dragOver)').eq(1)[0] && drag.element[0] === Sort.dragParent.find('li:first')[0] && $('.drag-clone').offset().top < drop.element.offset().top) {

        drop.element.addClass('first-task-position').removeClass('first-task-position-next');
      }
      else if (drop.element[0] === Sort.dragParent.find('li:not(.dragOver)').eq(1)[0] && drag.element[0] === Sort.dragParent.find('li:first')[0]){

        $('.first-task-position').removeClass('first-task-position').addClass('first-task-position-next');
      }
      else {
        $('.first-task-position').removeClass('first-task-position');
        $('.first-task-position-next').removeClass('first-task-position-next');
      }

      self.$el.find('.collapse-cell').css({'margin-top':'0px'});
    },

    '_dragDown': function(ev, drag) {

      var self = this;
      Sort.dragDown(ev, drag);
      
      self.dragObj = {};
      $.extend(true, self.dragObj, drag);
    },

    '_simulateDrop': function (ev) {

      var self = this;

      clearTimeout(self.waitPress);

      if (!self.dropObj || !self.dragObj) {

        return;
      }

      self._moveTask(ev, self.dropObj, self.dragObj);
    },

    '_preventContextMenu': function (ev) {

      console.log('_preventContextMenu');

      ev.preventDefault();
      return false;
    },

    '_touchStart': function (ev) {

      var self = this;
      var moveBind;

      if (ev.type === 'MSPointerDown') {

        return;
      }

      clearTimeout(self.waitPress);
      self.dragReady = false;
      self.doNotSelect = false;

      self.waitPress = _.delay(function () {

        moveBind && self.unbindFrom(moveBind);
        self.dragReady = true;
        self.doNotSelect = false;
        self._startDrag(ev, self.dragObj);
      }, 250);

      moveBind = self.bindTo($(ev.target), 'touchmove', function () {
        self.doNotSelect = true;
        clearTimeout(self.waitPress);
        // this check is to prevent the context menu on longpress
        // for touch chromebooks
        if (runtime.env.isChromeOS() && runtime.env.isTouchDevice()) {

          self._preventContextMenu(ev);
        }
      });
    },

    '_touchEnd': function (ev) {

      var self = this;
      if (ev.type === 'MSPointerUp') {
        if ($(ev.target).closest('li').hasClass('selected') || window.location.href.indexOf('tasks') >= 0) {
          ev.preventDefault();
          self._openDetailViewByTap(ev);
        }
        else {
          self.$('.taskItem').removeClass('selected active');
          $(ev.target).closest('li').addClass('selected');
        }

        return;
      }
      self._endDrag(ev, self.dragObj);
    },

    '_moveToFirstOrLast': function (ev, drop, drag) {

      var self = this;
      var index;
      var direction;
      var taskCount = Sort.dragParent.find('li').length;

      if (drop.element.hasClass('positionForDrop') && $('.drag-clone').length && taskCount > self.dragging.length) {

        var dragTop = $('.drag-clone').offset().top;

        var $firstTask = Sort.dragParent.find('li:first');
        var $lastTask = Sort.dragParent.find('li:last');
        var firstTaskTop = $firstTask.offset().top;
        var lastTaskTop = $lastTask.offset().top;
        if (dragTop < firstTaskTop) {

          //if (drag.element[0] === $firstTask[0] ) return;
          Sort.moveTask(ev, drop, drag, 0, self.dragging);
          self.calculateDraggedModelPositions(drop, drag.dragElements);
          return;
        }
        else if (dragTop > lastTaskTop) {

          index = $lastTask.index();
          if (drag.element[0] === $lastTask[0] || index === 0) {

            return;
          }
          direction = 'after';
          Sort.moveTask(ev, drop, drag, index, self.dragging, direction);
          self.calculateDraggedModelPositions(drop, drag.dragElements);
          return;
        }
      }
    },

    '_moveTask': function (ev, drop, drag) {

      var self = this;
      if (!drag || !drop) {
        drag.cancel();
        return;
      }

      var $dragContainer = drag.element.parent().parent();
      var $dropContainer = drop.element.parent().parent();
      var listId = $dropContainer.attr('rel');
      var $dragOver;
      var isFilter, index;
      var id = drag.element.attr('rel');

      Sort.dragParent.closest('.positionForDrop').removeClass('positionForDrop');
      // this is for sorting between lists in filters
      if ($dropContainer[0] !== $dragContainer[0] && !$dropContainer.hasClass('lists-inner') && $dropContainer.attr('id') !== 'lists') {

        if (self.currentFilter === 'week') {

          var oldListId = $dragContainer.attr('rel');
          self.changeDueDate(listId, oldListId, drag.dragElements);
          $dropContainer.find('li').removeClass('lists-in-filter-hover');
        }
        else {

          var taskId;
          var newListId = $dropContainer.attr('rel');
          isFilter = true;

          _.each(drag.dragElements, function(el){

            taskId = $(el).attr('rel');
            runtime.trigger('drop:move', newListId, taskId, isFilter);
          });

          $dropContainer.find('li').removeClass('lists-in-filter-hover');
          return;
        }
      }
      else {
        $dropContainer.find('li').removeClass('lists-in-filter-hover');
      }

      if (!self.currentFilter) {
        // move within list
        $dragOver = self.$el.find('.dragOver');

        var dropIsDone = drop.element.hasClass('done');
        var dragIsDone = drag.element.hasClass('done');
        var isTouchDevice = runtime.env.isTouchDevice();

        if ((dropIsDone && !dragIsDone) && !isTouchDevice || (dragIsDone && !dropIsDone) && !isTouchDevice) {
          _.each(drag.dragElements, function (el) {

            self._toggleDoneFromDragAndDrop($(el).attr('rel'), listId, dropIsDone);
          });
          return;
        }
        // this is the postion of the dropzone
        index = $dragOver.index();

        // this is all ui!
        if (self.currentFilter !== 'today' && self.currentFilter !== 'week') {
          var detailViewState = window.location.href.indexOf('tasks');
          Sort.moveTask(ev, drop, drag, index, self.dragging);
          // update model positions
          self.calculateDraggedModelPositions(drop, drag.dragElements);

          if (detailViewState >= 0) {
            runtime.trigger('route:tasks/' + id);
          }
        }
      }
    },

    '_dragOut': function(ev, drop, drag) {

      var self = this;
      var $dragContainer = drag.element.closest('ol');

      if (self.currentFilter) {
        $dragContainer.find('li').removeClass('lists-in-filter-hover');
      }
    },

    '_endDrag': function(ev, drag) {

      var self = this;
      runtime.trigger('drag:end');

      if (!self.currentFilter && (self.dropObj && !self.dropObj.element.hasClass('done'))) {

        self._simulateDrop(ev);
      }

      Sort.endDrag(ev, drag);
      self.dragReady = null;
      self.dragObj = null;
      self.dropObj = null;
      self.drag = null;
      self.waitPress = null;

      if (!Sort.dragParent) {
        return;
      }

      self.$el.find('li').removeAttr('unselectable').removeClass('scale-up collapse-cell first-task-position first-task-position-next lists-in-filter-hover');

      self.cleanAfterDrag();

      if (!self.doNotSelect) {

        drag && drag.element && drag.element.addClass('selected');
      }

      runtime.trigger('browser:ensureSelectedRoute');
    },

    'cleanAfterDrag': function () {

      if (!Sort.dragParent) {

        return;
      }

      Sort.dragParent.closest('.positionForDrop').removeClass('positionForDrop');
      Sort.dragParent.parent().next().not('h2').removeAttr('style');
      Sort.dragParent.next().not('h2').removeAttr('style');
    },

    '_setStarredFromDragAndDrop': function(id, listId) {

      var self = this;

      listId = listId || self.allTasks.get(id).attributes.list_id;

      var taskCollection = new TaskCollection('/lists/' + listId + '/tasks');
      var taskModel = taskCollection.get(id);
      var silentTrue;

      if (!taskModel.isStarred()) {

        if (self.currentFilter === 'today' || self.currentFilter === 'week') {

          silentTrue = {

            'silent':true
          };
        }
        // animations are reactions to model changes
        _.delay(function() {

          taskModel.save({
            'starred': true
          }, silentTrue);

          if (self.currentFilter === 'today' || self.currentFilter === 'week') {

            self.changedStarred(taskModel);
            taskModel && self.allTasks.trigger('change', taskModel, {'changes': {'starred': true}});
          }
        }, 100);
      }
    },

    '_toggleDoneFromDragAndDrop': function(id, listId, state) {

      var self = this;

      listId = listId || self.allTasks.get(id).attributes.list_id;

      var taskCollection = new TaskCollection('/lists/' + listId + '/tasks');
      var taskModel = taskCollection.get(id);

      // animations are reactions to model changes
      _.delay(function() {

        taskModel.save({
          'completed': state
        });
      }, 100);
    },

    '_setDoneFromDragAndDrop': function (id, listId) {

      var self = this;

      self._toggleDoneFromDragAndDrop(id, listId, true);
    },

    '_setTodayFromDragAndDrop': function(id, listId) {

      var self = this;

      listId = listId || self.allTasks.get(id).attributes.list_id;

      var taskCollection = new TaskCollection('/lists/' + listId + '/tasks');
      var taskModel = taskCollection.get(id);
      var today = moment().format('YYYY-MM-DD');

      taskModel.save({
        'due_date': today
      });
    },

    '_setAssignedFromDragAndDrop': function (id, listId) {

      var self = this;
      listId = listId || self.allTasks.get(id).attributes.list_id;
      var taskCollection = new TaskCollection('/lists/' + listId + '/tasks');
      var taskModel = taskCollection.get(id);
      var list = self.lists.get(listId);

      if (list.isShared() && runtime.user.isPro()) {

        taskModel.save({
          'assignee_id': runtime.user.id
        });
      }
    },

    'changeListFromDragAndDrop': function (listId, id) {

      var self = this;
      var oldListId = self.allTasks.get(id).attributes.list_id;
      var oldList = new TaskCollection('/lists/' + oldListId + '/tasks');
      var taskModel = oldList.get(id);
      var newList = new TaskCollection('/lists/' + listId + '/tasks');
      var newPosition, positions, firstPos, lastPos;
      var listModel = self.lists.get(listId);
      var isInList = listModel && listModel.isMemberOfList(taskModel.attributes.assignee_id);

      var assignee = isInList ? taskModel.attributes.assignee_id:null;

      // This is super important:
      newList.updatePositions();
      positions = newList.positions;

      // get the first and last task collection model positions
      firstPos = positions ? positions.normal.first : 0;
      lastPos = positions ? positions.normal.last : 0;

      if (taskModel.isStarred() || runtime.settings.attributes.new_task_location === 'top') {
        newPosition = newList.models.length ? firstPos - 10 : 0;
      }
      else {
        newPosition = newList.models.length ? lastPos + 10 : 0;
      }

      oldList.remove(taskModel);

      taskModel.save({
        'assignee_id': assignee,
        'list_id': listId,
        'position': newPosition,
        'forceRender': !!self.currentFilter
      });

      newList.add(taskModel);
    },
  });
});
define('mixins/TaskBrowserView/SubviewMixin',[

  'application/runtime',
  'wunderbits/mixins/WBSubviewsMixin',

], function (runtime, WBSubviewsMixin) {

  

  var _ = runtime._;

  return WBSubviewsMixin.extend({

    'subviewDestroyQueue': [],

    // detach any subviews from DOM and destroy after a one second delay
    // prevents destruction delaying rendering
    'destroySubviews': function () {

      var self = this;
      var subview;
      // need a stable reference for the delayed closure
      var subviews = _.clone(self._subviews) || [];

      self.subviewDestroyQueue = self.subviewDestroyQueue.concat(subviews);

      // reset this so that subview addition doesn't trigger premature destruction
      self._subviews = [];
      self._namedSubviews = [];

      while (subviews.length) {
        subview = subviews.shift();
        subview.$el.detach();
      }

      // lets be super smart and debounce the destruction so that list switching
      // is not interrupted by the delayed destruction of another list's subviews
      if (!self.debouncedEmptyDestroyQueue) {
        self.debouncedEmptyDestroyQueue = _.debounce(self.emptyDestroyQueue, 1000);
      }

      _.delay(function () {

        self.debouncedEmptyDestroyQueue();
      }, 1000);
    },

    'emptyDestroyQueue': function () {

      var self = this;
      var subviews = self.subviewDestroyQueue;
      var subview;

      while (subviews.length) {
        subview = subviews.shift();
        subview && !subview.destroyed && subview.destroy();
      }
    }
  });
});
define('styles/_tasks',[],function() { return {'name': '_tasks', 'styles': "#wunderlist-base.background-05 #tasks .tasks-404,#wunderlist-base.background-06 #tasks .tasks-404{-webkit-border-radius:15px;border-radius:15px;padding:10px 15px 0 15px;margin:0 25%;background:rgba(0,0,0,0.3)} #wunderlist-base #tasks{top:0;bottom:0;left:270px;right:10px;} #wunderlist-base #tasks .tasks-scroll{overflow-y:auto;overflow-x:hidden;position:absolute;bottom:0;top:0;left:0;right:0;padding:6px 7px 60px 17px;-webkit-overflow-scrolling:touch;} #wunderlist-base #tasks .tasks-scroll .task-list{padding-bottom:12px} #wunderlist-base #tasks .tasks-404{position:absolute;left:0;right:0;text-align:center;top:50%;margin-top:-110px !important;} #wunderlist-base #tasks .tasks-404 h2{font-size:18px;color:rgba(255,255,255,0.85);text-shadow:0 1px 0 rgba(0,0,0,0.4)} #wunderlist-base #tasks .grouped-tasks{position:relative;} #wunderlist-base #tasks .grouped-tasks.positionForDrop{padding-top:60px;margin-top:-60px;padding-bottom:60px} #wunderlist-base #tasks h2,#wunderlist-base #tasks .normal a{color:#fff;font-size:12px;margin-top:20px !important;margin-bottom:10px;text-shadow:0 1px 0 rgba(0,0,0,0.45);word-wrap:break-word;} #wunderlist-base #tasks h2 a.no-hover:hover,#wunderlist-base #tasks .normal a a.no-hover:hover{cursor:default !important} #wunderlist-base #tasks h2.no-results,#wunderlist-base #tasks .normal a.no-results{font-size:22px;font-weight:bold;text-transform:none} #wunderlist-base #tasks h2 .toggle-completed-tasks,#wunderlist-base #tasks .normal a .toggle-completed-tasks{float:right} #wunderlist-base #tasks .delete-completed{position:absolute;right:0;top:-8px;color:#fff;text-shadow:0 1px 0 rgba(0,0,0,0.45);opacity:.4;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=40)\";filter:alpha(opacity=40);} #wunderlist-base #tasks .delete-completed:hover{opacity:.8;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\";filter:alpha(opacity=80)} #wunderlist-base .task-list.completed-hidden .completed-items-heading{opacity:.7;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=70)\";filter:alpha(opacity=70);} #wunderlist-base .task-list.completed-hidden .completed-items-heading:hover{opacity:1;-ms-filter:none;filter:none} #wunderlist-base .task-list.completed-hidden .completed-tasks{display:none} #wunderlist-base body.background-06 #tasks h2,#wunderlist-base body.background-19 #tasks h2,#wunderlist-base body.background-24 #tasks h2,#wunderlist-base body.background-06 #tasks .normal a,#wunderlist-base body.background-19 #tasks .normal a,#wunderlist-base body.background-24 #tasks .normal a{color:rgba(66,62,62,0.9);text-shadow:0 1px 0 rgba(255,255,255,0.45)} " }; });
// TaskBrowserView
// ----------------------------
// This document is responsible for the tasks that appear in a list/filter.
// Can render a list or filter. itemFactory is capable of rendering any number of tasks it is fed
// Handles events for clicking a task
// Handles keyboard navigation in tasks
// Knows the viewport, and how many tasks can fit on a screen at any given time

define('views/Tasks/TasksBrowserView',[

  'application/runtime',
  'vendor/moment',

  'wunderbits/WBView',

  // 'views/Tasks/TasksGroupView',
  'views/Tasks/TasksGroupBaseView',
  'views/Tasks/TasksGroupBaseFilterView',
  'views/Tasks/TaskItemView',

  'collections/TaskCollection',
  'collections/ListCollection',

  'helpers/Animator',
  'wunderbits/helpers/date',
  'helpers/SortBehaviorMixin',

  'mixins/TaskBrowserView/ViewportMixin',
  'mixins/TaskBrowserView/KeyboardShortcutMixin',
  'mixins/TaskBrowserView/DragEventsMixin',
  'mixins/TaskBrowserView/SubviewMixin',

  'style!_tasks',
  'style!taskItem'

], function (

  runtime, moment,
  WBView, TasksGroupView, TasksGroupFilterView, TaskItemView,
  TaskCollection, ListCollection,
  Animator, DateHelper, Sort,
  TBVViewportMixin, TBVKeyboardShortcutMixin, TBVDragEventsMixin, SubviewMixin,
  tasksStyle, taskitemStyle,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var global = runtime.global;

  var _super = WBView.prototype;
  var _animator = Animator;

  var weekGroups = [
    {
      'id': 'Today',
      'collection': 'todayPlus0'
    },
    {
      'id': 'Tomorrow',
      'collection': 'todayPlus1'
    },
    {
      'id': 2,
      'collection': 'todayPlus2'
    },
    {
      'id': 3,
      'collection': 'todayPlus3'
    },
    {
      'id': 4,
      'collection': 'todayPlus4'
    },
    {
      'id': 5,
      'collection': 'todayPlus5'
    },
    {
      'id': 6,
      'collection': 'todayPlus6'
    }
  ];

  return WBView.extend({

    'className': 'task-list',

    'styles': [tasksStyle, taskitemStyle],

    'events': function () {

        var events = {

          'mousedown a.task-checkbox': '_debouncedBeginCheckOff',
          'mousemove': '_cancelCheckOff',

          'click .taskItem-checkbox': '_debouncedMarkAsDone',
          'click .taskItem-star': '_debouncedToggleStarred',

          'click a.hash': '_handleHashLink',

          'dblclick .taskItem-titleWrapper-title': '_editTitle',
          'dblclick .taskItem-duedate': '_editDueDate',
          'dblclick .taskItem-assign': '_editAssignee',
          'dblclick .icon.task-recurring': '_editRepeat',
          'dblclick .icon.has-comments': 'openComments',

          'click .toggle-completed-tasks, .heading.completed a': '_toggleCompletedTasks',
          'mousedown .drag-clone':'_preventFocus'
        };

        if (runtime.env.isTouchDevice()) {

          var touchEvents = {

            'click .taskItem': '_openDetailViewByTap',
            'touchstart .taskItem':'_touchStart',
            'touchend .taskItem': '_touchEnd',
            'touchstart .taskItem-checkbox': '_debouncedBeginCheckOff',
            'touchend .taskItem-checkbox': '_debouncedMarkAsDone',
            'touchstart .taskItem-star': '_debouncedToggleStarred',
            'swipeleft .taskItem': '_onDeleteTask',
            'mousedown .taskItem':'_touchStart',
            'mouseup .taskItem': '_touchEnd',
            'MSGestureHold .taskItem': '_preventContextMenu'
          };

          _.extend(events, touchEvents);
        }
        else {

          var mouseEvents = {

            'click .taskItem': '_onClickTask',
            'dblclick .taskItem': '_onClickTask'
          };

          _.extend(events, mouseEvents);
        }

        var dragEvents = {

          'draginit .taskItem': '_startDrag',
          'dragover .taskItem': '_dragOver',
          'dropon .taskItem': '_moveTask',
          'dropon .grouped-tasks': '_moveToFirstOrLast',
          'dropmove .taskItem':'_dropMove',
          'dragend .taskItem': '_endDrag',
          'dragout .taskItem': '_dragOut',
          'dragdown .taskItem': '_dragDown'
        };

        _.extend(events, dragEvents);

        // if the device is an MS tablet, it will have pointer events
        if (runtime.env.isPointerEnabled()) {

          var pointerEvents = {

            'MSPointerDown .taskItem':'_touchStart',
            'MSPointerUp .taskItem':'_touchEnd',
            'MSPointerDown .taskItem-checkbox': '_debouncedBeginCheckOff',
            'MSPointerDown .taskItem-star': '_debouncedToggleStarred',
          };

          _.extend(events, pointerEvents);
        }

        return events;
      },

    'initialize': function (options) {

      var self = this;

      options = options || {};

      TBVKeyboardShortcutMixin.applyTo(self);
      TBVDragEventsMixin.applyTo(self);
      TBVViewportMixin.applyTo(self);

      // debouncers
      self._debouncedBeginCheckOff = _.debounce(self._beginCheckOff, 250, true);
      self._debouncedToggleStarred = _.debounce(self._toggleStarred, 250, true);
      self._debouncedMarkAsDone = _.debounce(self._markAsDone, 250, true);
      self._debounceUpdateHighlight = _.debounce(self.updateTaskHighlightState, 150);
      _super.initialize.apply(self, arguments);


      SubviewMixin.applyTo(self);

      var listsPromise = self.deferred();
      var tasksPromise = self.deferred();
      self.detailPromise = self.deferred();
      self.allTasksAreInList = self.deferred();
      self.ready = self.deferred();
      self.chunkingOption = true;

      // "global" variables
      // I am putting these here for reference as they are interspersed throughout the code
      self.currentList = null;
      self.currentLists = {};
      self.currentFilter = null;
      self.currentListId = null;
      self.currentTaskCount = null;
      self.lastFilterOrList = null;
      self.tasksToFitViewport = null;
      self.copiedTaskIds = [];
      self.copyOrCut = null;
      self._focus = null;
      self.selectType = null;

      // since we have events dynamic by size, we have to create and
      // re-delegate events each time the env context changes
      self.bindTo(runtime.env, 'change:context', function () {
        self.delegateEvents();
      });

      self.bindTo(runtime, 'lists:ready', function (allLists) {

        self.lists = allLists;
        listsPromise.resolve();
      });

      self.when(listsPromise).done(function () {

        self.bindTo(self.lists, 'add', function (model) {

          if (self.currentFilter) {

            self.renderSingleListToFilter(model);
          }
        });
      });

      self.bindTo(runtime, 'tasks:ready', function(allTasks) {

        self.allTasks = allTasks;
        tasksPromise.resolve();
      });

      self.when(tasksPromise).done(function () {

        self.bindTo(self.allTasks, 'change:starred', self.changedStarred);
        self.bindTo(self.allTasks, 'change:completed', self.changedCompleted);
        self.bindTo(self.allTasks, 'change:position', self.onChangeTaskPosition);
        self.bindTo(self.allTasks, 'change:hasComments', self.addSingleTask);

        self.bindTo(self.allTasks, 'change:assignee_id', self.updateSelectedCount);
        self.bindTo(self.allTasks, 'change:due_date', self.updateSelectedCount);

        self.bindTo(self.allTasks, 'change:completed', function () {
          _.delay(self.updateSelectedCount, 500);
        });

        self.bindTo(runtime, 'task:deleted', self.selectNextTask);
        self.bindTo(runtime, 'tasks:updateSelectionCount', self.updateSelectedCount);

        Sort.init();
      });

      self.bindTo(runtime, 'subtasks:ready', function (allSubTasks) {

        self.allSubTasks = allSubTasks;
      });

      self.when(listsPromise, tasksPromise).done(function(){

        self.ready.resolve();

        self.bindTo(runtime, 'collection:search:ready', self.setSearchGroup, self);
        self.bindTo(runtime, 'browser:navigate', self._navigateTasks);
        self.bindTo(runtime, 'focus:changed', self._onFocusChange);
        self.bindTo(runtime, 'browser:taskId', self._getCurrentId);

        self.bindTo(runtime, 'drop:starred', self._setStarredFromDragAndDrop);
        self.bindTo(runtime, 'drop:done', self._setDoneFromDragAndDrop);
        self.bindTo(runtime, 'drop:assigned', self._setAssignedFromDragAndDrop);
        self.bindTo(runtime, 'drop:today', self._setTodayFromDragAndDrop);
        self.bindTo(runtime, 'drop:move', self.changeListFromDragAndDrop);

        self.bindTo(runtime, 'detail:rendered', function () {

          self.detailPromise.resolve();
          runtime.env._onWindowResize();
        });

        self.bindTo(runtime, 'browser:unselect', self._resetSelectedTasks);
        self.bindTo(runtime, 'browser:select', self.selectTaskById);
        self.bindTo(runtime, 'browser:drag:clean', self.cleanAfterDrag);

        // Global shortcuts
        self.bindTo(runtime, 'tasks:markDone', self._toggleDoneFromShortcut);
        self.bindTo(runtime, 'tasks:markStarred', self._toggleStarredFromShortcut);
        self.bindTo(runtime, 'tasks:editTitle', self._openEditTitleFromShortcut);
        self.bindTo(runtime, 'tasks:toggleSelected', self.toggleSelected);
        self.deleteBind = self.bindTo(runtime, 'tasks:delete', self._deleteTaskFromShortcut);

        self.bindTo(runtime, 'tasks:selectFirst', self._onSelectFirst);

        self.bindTo(runtime.settings, 'change:show_completed_items', self._updateDisplayCompletedTasks);
        // copy pasta
        self.bindTo(runtime, 'tasks:copy', self._copyTasks);
        self.bindTo(runtime, 'tasks:cut', self._cutTasks);
        self.bindTo(runtime, 'tasks:paste', self._pasteTasks);
        self.bindTo(runtime, 'tasks:selectAll', self._selectAllTasks);

        self.debouncedRouteChange = _.debounce(function (id) {

          if (self._focus === 'browser') {

            runtime.trigger('route:tasks/' + id);
          }
        }, 250);

        self.delegateEvents();
        self._getCurrentId();
      }, self);

      self.bindTo(runtime, 'window:resize', function () {

        self.delegateEvents();
      });

      self.bindTo(runtime, 'focus:changed', self.forceFocus);

      self.bindTo(runtime, 'browser:ensureSelectedRoute', self._ensureSelectedRoute);
    },

    'bindToAllTasksRendered': function () {

      var self = this;
      self.tasksRenderedBind && self.unbindFrom(self.tasksRenderedBind);

      var listDeferreds = {};

      // set up deffereds for all rendering list/collections
      if (self.currentListId) {

        listDeferreds[self.currentListId] = new $.Deferred();
      }
      else if (self.currentFilter === 'week') {

        _.each(weekGroups, function (weekGroup) {

          listDeferreds[weekGroup.collection] = new $.Deferred();
        });
      }
      else if (self.currentFilter) {

        _.each(self.lists.models, function (list) {

          listDeferreds[list.id] = new $.Deferred();
        });
      }

      if (_.size(listDeferreds) > 1) {

        self.when.apply(self, _.toArray(listDeferreds)).done(self.allTasksAreInList.resolve, self);
      }
      else {

        listDeferreds[self.currentListId] && listDeferreds[self.currentListId].then(function () {
          self.allTasksAreInList.resolve();
        });
      }

      // now listen
      self.tasksRenderedBind = self.bindTo(runtime, 'tasks:inList', function (listId) {

        if (self.currentListId) {

          listDeferreds[listId] && listDeferreds[listId].resolve();
        }
        else if (self.currentFilter) {

          listDeferreds[listId] && listDeferreds[listId].resolve();
        }
      });

    },

    'toggleSelected': function () {

      var self = this;
      var isDetailViewOpen = runtime.currentRoute().indexOf('tasks') === 0;
      var direction = 'right';

      if (isDetailViewOpen) {
        direction = 'left';
      }

      self._navigateTasks(direction);
    },

    '_ensureSelectedRoute': function () {

      var self = this;
      var route = runtime.currentRoute();
      var isDetailViewOpen = route.indexOf('tasks/') === 0;

      self.defer(function () {

        var currentSelectId = self.$('.selected').attr('rel');

        if (isDetailViewOpen && currentSelectId && route.indexOf('tasks/' + currentSelectId) < 0) {

          runtime.trigger('route:tasks/' + currentSelectId);
        }
      });
    },

    // Simple click task method, changes route and highlights it
    '_onClickTask': function (ev) {

      var self = this;

      if ($(ev.target).hasClass('linkout')) {

        return;
      }

      // this is here so that links on taskitems work correctly
      ev.preventDefault();

      var $task = $(ev.target).closest('.taskItem');
      self.selectType = self.$('.selected, .active').hasClass('done') ? 'completed' : 'regular';

      var id = $task.attr('rel');
      var detailViewState = global.location.href.indexOf('tasks');
      var metaKey = (ev.altKey || ev.metaKey);

      var ignoreTargets = ['.taskItem-titleWrapper-title', '.taskItem-duedate', '.task-recurrence', '.taskItem-assign'];
      ignoreTargets = ignoreTargets.join();

      // if its an edit route and the detail view has never been opened,
      // we have to open it or the detail defer will never resolve
      if ($(ev.target).is(ignoreTargets) && self.detailPromise.state() === 'pending') {

        runtime.trigger('route:tasks/' + id);
      }

      if (detailViewState >= 0 || ev.type === 'dblclick') {

        if (!metaKey && !ev.shiftKey) {

          if (runtime.env.isMini()) {

            runtime.trigger('sidebar:toggle', false);
          }

          runtime.trigger('route:tasks/' + id).trigger('focus:set', 'browser');
          self.defer(self.updateSelectedCount);

          return;
        }
        else {

          self._routeToList('browser');
        }
      }
      else {

        self._focus = 'browser';
      }

      if (metaKey || ev.shiftKey) {

        self._selectMultipleTasks($task, metaKey);
      }
      else if (!metaKey) {

        $task.addClass('active selected').focus();
        self.$('.taskItem').not($task).removeClass('active selected');
        runtime.trigger('focus:set', 'browser');
        self.updateSelectedCount();
      }
    },

    '_selectMultipleTasks': function (task, metaKey) {

      var self = this;
      var $selectedTasks, $activeTask, $tasks, activeIndex, taskIndex, start, end, i;

      $selectedTasks = self.$('.selected').not('.clone');
      $activeTask = self.$('.active').not('.clone');
      var $task = task;

      if (self.selectType === 'regular' && $task.hasClass('done') || self.selectType === 'completed' && !$task.hasClass('done')) {
        return;
      }

      // move into next tick in case there was a runtime reroute
      self.defer(function () {

        $activeTask.addClass('active').focus();
        $selectedTasks.addClass('selected');

        if (metaKey) {
          // clicks with meta key
          $task.toggleClass('selected');
        }
        else {
          // clicks with shift key
          $tasks = self.$('.taskItem').not('.clone');

          activeIndex = _.indexOf($tasks, $activeTask[0]);
          taskIndex = _.indexOf($tasks, $task[0]);

          start = activeIndex < taskIndex ? activeIndex : taskIndex;
          end = activeIndex < taskIndex ? taskIndex : activeIndex;

          for (i = start; i <= end; i++) {

            $($tasks[i]).addClass('selected');
          }
        }

        self.updateSelectedCount();
      });
    },

    '_openDetailViewByTap': function (ev) {

      var self = this;
      var $target = $(ev.target);

      if ($target.hasClass('linkout') || $target.hasClass('icon') || $target.hasClass('dragging') || (runtime.env.isPointerEnabled() && ev.type === 'click')) {
        return;
      }

      var $task = $target.closest('.taskItem');

      var id = $task.attr('rel');

      if (runtime.env.isMicro() || runtime.env.isMini()) {
        runtime.trigger('sidebar:toggle', false);
      }

      self.defer(function () {

        runtime.trigger('route:tasks/' + id);
      });
    },

    // mark a task done
    '_beginCheckOff': function (ev, taskEl) {

      ev && ev.stopPropagation();

      var self = this;
      var $taskEl = ev ? $(ev.target).closest('.taskItem') : taskEl ? $(taskEl) : null;
      var $checkbox = $taskEl.find('.icon.task-checkbox');
      var listId = $taskEl.parent().parent().attr('rel');
      var taskCollection = self.getCollection(listId);
      var taskModel;

      taskModel = taskCollection.get($taskEl.attr('rel'));

      if (_animator.isAnimatingOrClone($taskEl)) {

        if (ev && ($(ev.target).hasClass('task-checkbox') || $(ev.target).hasClass('task-star') ||  $(ev.target).hasClass('task-starred'))) {

          ev.stopPropagation();
        }
        return;
      }

      self.clickedDown = true;

      if (!taskModel.isCompleted()) {

        $checkbox.addClass('task-checked');

        var position = $taskEl.find('.taskItem-titleWrapper-title').offset();
        var $clone = $taskEl.find('.taskItem-titleWrapper-title').clone().addClass('clone-title').css({
          'position':'absolute',
          'overflow':'hidden',
          'opacity':'0.6',
          'height':'15px',
          'left':position.left,
          'top':position.top + parseInt($taskEl.find('.taskItem-titleWrapper-title').css('padding-top'),10),
          'margin-right': '50px',
          'width': '0px',
          'z-index':'125',
          'text-decoration':'line-through'
        });

        $('body').append($clone);
        $clone.animate({
          'width': $taskEl.find('.taskItem-titleWrapper-title').width() + 'px'
        }, 200);
      }
      else {
        $checkbox.removeClass('task-checked');
        $taskEl.find('.taskItem-titleWrapper-title').css('text-decoration','none');
      }
    },

    '_cancelCheckOff': function(ev) {

      var self = this;
      var $el = $(ev.target).closest('.taskItem');
      var listId = $el.parent().parent().attr('rel');
      var taskCollection = new TaskCollection('/lists/' + listId + '/tasks');
      var taskModel = taskCollection.get($el.attr('rel'));

      if (!self.clickedDown) {
        return;
      }

      if (self.clickedDown) {

        if (taskModel && taskModel.isCompleted()) {
          $el.find('.icon.task-checkbox').addClass('task-checked');
          $el.css({'opacity':'0.6'});
          $el.find('.taskItem-titleWrapper-title').css('text-decoration','line-through');
        }
        else {
          $el.find('.icon.task-checkbox').removeClass('task-checked');
          $el.css({'opacity':'1'});
          $el.find('.taskItem-titleWrapper-title').css('text-decoration','none');
          $('.clone-title').remove();
        }
      }

      self.clickedDown = false;
    },

    '_markAsDone': function(ev, taskEl) {

      var self = this;

      var $el = (ev ? $(ev.target).closest('.taskItem') : taskEl ? $(taskEl) : null);
      var wasSelected = $el.hasClass('selected');
      var showCompleted = runtime.settings.attributes.show_completed_items === 'true';
      var listId = $el.parent().parent().attr('rel');
      var taskCollection = self.getCollection(listId);
      var taskModel, isDoneNow;

      taskModel = taskCollection.get($el.attr('rel'));
      isDoneNow = !taskModel.isCompleted();

      if (ev) {

        var analyticsKey = 'analytics:Tasks:' + (taskModel.isCompleted() ? 'unmarkDone' : 'markDone');
        runtime.trigger(analyticsKey, 'taskItem');
      }

      if (_animator.isAnimatingOrClone($el)) {

        return;
      }

      ev && ev.stopPropagation();
      ev && ev.preventDefault();

      self.clickedDown = false;

      // this el should now be considered a clone
      // as we will be generating another view via the task group manager with our call to taskModel.save
      // dupe prevention
      $el.addClass('done clone');

      $('.clone-title').remove();

      taskModel.save({

        'completed': isDoneNow,
        'completed_at': (isDoneNow ? DateHelper.getServerNow() : null)
      });

      if (wasSelected && isDoneNow && !showCompleted) {

        self.selectNextOrPrevious($el);
        _.delay(_.bind(runtime.trigger, runtime, 'focus:set', 'browser'), 100);
      }
    },

    'selectNextOrPrevious': function ($element) {

      var self = this;
      var $next = $element.next('.taskItem').not('.done');

      if (!$next.length) {
        $next = $element.prev('.taskItem').not('.done');
      }

      if (!$next.length) {
        $next = self.$('ol.tasks li').not('.done').last();
      }

      _.delay(function () {

        self.$('.taskItem').removeClass('selected active');
        $next.addClass('selected active').focus();
      }, 100);
    },

    '_onDeleteTask': function (ev) {

      var self = this;
      var $thisTask = $(ev.target).closest('.taskItem');
      var taskModel = self.allTasks.get($thisTask.attr('rel'));

      if (runtime.isSidebarVisible && !runtime.env.isLarge()) {

        return;
      }

      var action = function () {

        taskModel && taskModel.destroy();
      };

      var confirmationOptions = {

        'confirm': action,
        'cancel': function () {},
        'customTitle': runtime.language.getLabel('label_are_you_sure_permanently_delete_$_task', taskModel.attributes.title).toString(),
        'confirmText': runtime.language.getLabel('label_delete_task').toString()
      };

      // get confirmation
      if (runtime.settings.attributes.confirm_delete_entity === 'true') {

        runtime.trigger('modal:confirm', confirmationOptions);
      }
      else {
        // do it
        action();
      }
    },

    // star a task
    '_toggleStarred': function (ev) {

      var self = this;
      var $el = $(ev.target).closest('.taskItem');
      var listId = $el.parent().parent().attr('rel');
      var taskCollection = self.getCollection(listId);
      var taskModel;

      // this is here to remove the height after we know it is the last item in the loop
      self.clearOut = global.setTimeout(function(){

        runtime.trigger('animation:complete');
      }, 800);

      taskModel = taskCollection.get($el.attr('rel'));

      var isStarredNow = !taskModel.isStarred();

      if (_animator.isAnimatingOrClone($el)) {

        if ($(ev.target).hasClass('task-checkbox') || $(ev.target).hasClass('task-star') ||  $(ev.target).hasClass('task-starred')) {

          ev.stopPropagation();
        }
        return;
      }

      ev && ev.stopPropagation();
      ev && ev.preventDefault();

      if (taskModel.isCompleted()){

        return;
      }

      // animations are reactions to model changes
      // TODO remove commented out delay once verified that it is not not needed
      taskModel.save({

        'starred': isStarredNow
      });

      if (self.currentFilter === 'today' || self.currentFilter === 'week') {

        self.changedStarred(taskModel);
        $el.find('.icon.task-star').toggleClass('task-starred', isStarredNow);
      }
    },

    'ensureOpenDetailView': function (id) {

      var self = this;

      if (self.detailPromise.state() === 'pending') {
        runtime.trigger('route:tasks/' + id);
      }
    },

    // Double clicking a task opens the detail view with the title editable
    '_editTitle': function (ev) {

      var self = this;

      ev.stopPropagation();

      if ($(ev.target).hasClass('taskItem-duedate')) {
        self._editDueDate(ev);
        return;
      }

      if ($(ev.target).hasClass('task-recurring')) {
        self._editRepeat(ev);
        return;
      }

      var $task = $(ev.target).closest('.taskItem');
      var id = $task.attr('rel');

      self.when(self.detailPromise).then(function () {

        runtime.trigger('route:tasks/' + id + '/title/edit');
      });

      self.ensureOpenDetailView(id);
    },

    'openComments': function (ev) {

      var self = this;

      ev.stopPropagation();

      var $task = $(ev.target).closest('.taskItem');
      var id = $task.attr('rel');

      self.when(self.detailPromise).then(function () {

        runtime.trigger('route:tasks/' + id + '/comments/edit');
      });

      self.ensureOpenDetailView(id);
    },

    // Double clicking a duedate opens the detail view with the dudate editable
    '_editDueDate': function(ev) {

      var self = this;

      ev.stopPropagation();

      var $task = $(ev.target).closest('.taskItem');
      var id = $task.attr('rel');

      self.when(self.detailPromise).then(function() {

        runtime.trigger('route:tasks/' + id + '/duedate/edit');
      });

      self.ensureOpenDetailView(id);
    },

    '_editAssignee': function (ev) {

      var self = this;

      ev.stopPropagation();

      var $task = $(ev.target).closest('.taskItem');
      var id = $task.attr('rel');

      self.when(self.detailPromise).then(function() {

        runtime.trigger('route:tasks/' + id + '/assignee/edit');
      });

      self.ensureOpenDetailView(id);
    },

    // Same as above, except there is no URL for frequency, so it is then selected after it opens
    '_editRepeat': function(ev) {

      var self = this;

      ev.stopPropagation();

      var $task = $(ev.target).closest('.taskItem');
      var id = $task.attr('rel');

      self.when(self.detailPromise).then(function() {

        runtime.trigger('route:tasks/' + id + '/duedate/edit');
        setTimeout(function(){
          $('#edit-repeat-frequency').focus();
        }, 500);
      });

      self.ensureOpenDetailView(id);
    },

    // route to list helper
    '_routeToList': function (focus) {

      var self = this;
      var filterOrListId = self.currentListId ? self.currentListId : self.currentFilter ? self.currentFilter : 'inbox';

      if (!focus) {
        focus = 'sidebar';
      }

      runtime.trigger('detail:toggle', false);

      self.defer(function () {
        runtime
          .trigger('route:lists/' + filterOrListId, {
            'trigger': false
          })
          .trigger('focus:set', focus);
      });
    },

    // collection helper
    'getCollection': function (listId) {

      var self = this;
      var taskCollection;

      if (self.currentFilter === 'week') {

        taskCollection = new TaskCollection('/tasks/filter/' + listId);
      }
      else {

        taskCollection = new TaskCollection('/lists/' + listId + '/tasks');
      }

      return taskCollection;
    },

    'resetDragMixin': function () {

      var self = this;

      self.dragReady = null;
      self.dragObj = null;
      self.dropObj = null;
      self.drag = null;
      self.waitPress = null;
    },

    // FILTER AND LIST RENDERING

    // The next three methods are the different ways to render lists.
    // renderFilterOfType can be passed a filter, and it will render tasks grouped by lists that fit that filter
    // renderByCollection can be passed a collection of tasks, and it will group them and and render them
    // renderListWithID can be passed a listID and render that specific list
    'renderFilterOfType': function (filter) {

      var self = this;

      self.resetDragMixin();

      self.allTasksAreInList = new $.Deferred();

      self.currentFilter = filter;
      self.currentListId = null;
      self.bindToAllTasksRendered();

      runtime.trigger('browser:render', filter);

      self.ready.done(function () {

        if (self.lastRenderedFilterType !== filter) {

          runtime.trigger('browser:hide404');
          delete self.lastSearchHash;

          var frag = document.createDocumentFragment();
          var detailViewState = global.location.href.indexOf('tasks');

          self.checkViewport();

          // If there was a previous subview and we aren't in the detail view, clear it out
          if (_.size(self.currentLists) && detailViewState <= 0 && self.lastRenderedFilterType !== filter) {

            self.destroySubviews();
          }

          if (detailViewState === -1 && self.lastRenderedFilterType !== filter) {
            self._scrollTop();
          }

          self.unbindCollections();

          // set current collection to all
          self.taskCollection = new TaskCollection('/lists/all/tasks');

          if (filter !== 'week') {

            self.$el.removeClass('week');
            if (filter === 'today') {
              self.$el.addClass('today');
            }
            else {
              self.$el.removeClass('today');
            }

            // 404 stuff

            var smartListMainCollection = new TaskCollection('/tasks/filter/' + filter);

            self.filter404Bind = self.bindTo(smartListMainCollection, 'add remove', function () {
              self.setFilterGroup(smartListMainCollection);
            });
            self.setFilterGroup(smartListMainCollection);

            _.each(self.lists.models, function (model) {

              if (model.isSavedSearch()) {
                return;
              }

              var filterTaskCollection = new TaskCollection('/lists/' + model.id + '/tasks');
              self.bindTo(filterTaskCollection, 'add', self.addSingleTask);

              self.currentLists[model.id] = self.addSubview(new TasksGroupFilterView({

                'listTitle': model.escape('title'),
                'filter': filter,
                'listID': model.id,
                'chunking': self.chunkingOption,
                'collection': filterTaskCollection,
                'taskFactory': self.itemFactory,
                'itemsPerRender': self.tasksToFitViewport,
                'testVisibility': true,
                'scrollThreshold': 300,
                'scrollEl': self.$el.parent()
              }));

              var currentList = self.currentLists[model.id];
              currentList.render();

              !currentList.$el.find('li').length && currentList.$el.find('.heading').addClass('hidden');
              frag.appendChild(currentList.el);
            });
          }
          else if (filter === 'week') {

            self.$el.addClass('week');

            self.setWeekGroup();

            var weekCollection = new TaskCollection('/tasks/filter/week');
            self.bindTo(weekCollection, 'add remove', self.setWeekGroup);

            _.each(weekGroups, function (group, idx) {

              // this collection is cached, but we get reference through the URL
              var filterTaskCollection = new TaskCollection('/tasks/filter/' + group.collection);
              var listId = group.collection;

              self.bindTo(filterTaskCollection, 'add', function (model, collection) {

                self.addSingleTask(model, _.extend(collection, {'listId': listId}));
              });

              self.bindTo(filterTaskCollection, 'change:completed', function (model) {

                //var listId = group.collection;
                self.changedCompleted(model, null, {'listId': listId});
              });

              var listTitle = function () {

                var isRelative = isNaN(parseInt(group.id, 10));
                var dateString = isRelative && moment().add('days', idx).format('MMM. DD');
                var listTitle;
                if (isRelative) {

                  listTitle = runtime.language.getLabel('label_relative_date_' + group.id.toLowerCase() + '_with_date', dateString).toString();
                }
                else {

                  listTitle = moment().add('days', idx).format('dddd, MMM. DD');
                }

                return listTitle;
              };

              self.currentLists[group.collection] = self.addSubview(new TasksGroupFilterView({
                'listTitle': listTitle,
                'filter': group.collection,
                'listID': group.collection,
                'chunking': self.chunkingOption,
                'collection': filterTaskCollection,
                'taskFactory': self.itemFactory,
                'itemsPerRender': self.tasksToFitViewport,
                'scrollThreshold': 300,
                'scrollEl': self.$el.parent()
              }));

              self.currentLists[group.collection].render();

              !self.currentLists[group.collection].$el.find('li').length && self.currentLists[group.collection].$el.find('.heading').addClass('hidden');
              frag.appendChild(self.currentLists[group.collection].el);
            });
          }
          else {

            throw new Error('wtf?');
          }

          self.$el.empty().html(frag);
          self.lastRenderedFilterType = filter;
          self.lastRenderedListID = null;

          // now render chunks
          _.each(self.currentLists, function (list) {

            if (self.chunkingOption) {
              list.roomForTasks(filter === 'completed') && list._renderTasksAsGroup();
            }
            else {
              list._renderTasksAsGroup();
            }

            list._handleHeadings();
          });

          self._updateDisplayCompletedTasks();

          _.delay(function () {

            if (self._currentTaskId) {

              self._renderTasksToId(self._currentTaskId).done(function () {

                self._scrollTaskCheck(self.$('li.active'), self.$el.closest('.tasks-scroll'));
              });
            }
          }, 500);
        }
      });
      self.chunkingOption = true;

      return self;
    },

    'renderSingleListToFilter': function (model) {

      var self = this;
      var filterTaskCollection = new TaskCollection('/lists/' + model.id + '/tasks');
      var sortableLists = new ListCollection('/lists/all/sortable');
      var listIndex;

      self.bindTo(filterTaskCollection, 'add', self.addSingleTask);

      self.currentLists[model.id] = self.addSubview(new TasksGroupFilterView({
        'listTitle': model.escape('title'),
        'filter': self.currentFilter,
        'listID': model.id,
        'chunking': self.chunkingOption,
        'collection': filterTaskCollection,
        'taskFactory': self.itemFactory,
        'itemsPerRender': self.tasksToFitViewport,
        'scrollThreshold': 300,
        'scrollEl': self.$el.parent()
      }));

      var list = self.currentLists[model.id];
      list.render();
      list.roomForTasks() && list._renderTasksAsGroup();

      !self.currentLists[model.id].$el.find('li').length && self.currentLists[model.id].$el.find('.heading').addClass('hidden');

      // render into the filter, in the right locale, oh yeah!
      listIndex = _.indexOf(sortableLists.models, model);
      if (sortableLists.models[listIndex + 1]) {

        self.$el.find('.grouped-tasks[rel="' + sortableLists.models[listIndex+1].attributes.id + '"]').before(self.currentLists[model.id].el);
      }
      else {

        self.el.appendChild(self.currentLists[model.id].el);
      }
    },

    // search collection
    'renderByCollection': function (collection) {

      var self = this;
      var frag = document.createDocumentFragment();
      var lastIDs = [];
      var listTitle;
      var listId;
      var detailViewState = global.location.href.indexOf('tasks');

      self.resetDragMixin();

      self.allTasksAreInList = new $.Deferred();

      self.$el.removeClass('week');
      runtime.trigger('browser:hide404');

      // clean up subview groups
      if (_.size(self.currentLists) && detailViewState <= 0) {
        self.destroySubviews();
      }

      if (detailViewState === -1) {
        self._scrollTop();
      }

      self.checkViewport();
      self.unbindCollections();
      self.currentFilter = 'search';
      self.bindToAllTasksRendered();

      runtime.trigger('browser:render', 'search');

      self._updateDisplayCompletedTasks();

      _.each(collection.models, function (model) {

        if (lastIDs.indexOf(model.attributes.list_id) === -1 ) {

          _.each(self.lists.models, function (listModel) {

            if (listModel.id === model.attributes.list_id) {

              listTitle = listModel.escape('title');
              listId = listModel.attributes.id;
            }
          });

          var searchCollection = new TaskCollection('/search/list/' + listId);
          searchCollection.reset(collection.where({'list_id': listId}));

          var searchTaskCollection = new TaskCollection('/lists/' + listId + '/tasks');
          self.addTaskBind = self.bindTo(searchTaskCollection, 'add', self.addSingleTask);

          self.currentLists[listId] = self.addSubview(new TasksGroupFilterView({
            'listTitle':listTitle,
            'filter': 'search',
            'listID': model.attributes.list_id,
            'chunking':self.chunkingOption,
            'collection': searchCollection,
            'taskFactory': self.itemFactory,
            'itemsPerRender': self.tasksToFitViewport,
            'testVisibility': true,
            'scrollThreshold': 300,
            'scrollEl': self.$el.parent()
          }));

          self.currentLists[listId].render();
          frag.appendChild(self.currentLists[listId].el);
          lastIDs.push(model.attributes.list_id);
        }
      });

      self.$el.empty().html(frag);

      // now render chunks
      _.each(self.currentLists, function (list) {

        list._renderTasksAsGroup();
        list._handleHeadings();
      });

      self.renderLocalized();
    },

    'renderListWithID': function (listID) {

      var self = this;

      var detailViewState = global.location.href.indexOf('tasks');

      self.resetDragMixin();

      self.$el.removeClass('week');
      runtime.trigger('browser:hide404');

      self.currentListId = listID;
      self.currentFilter = null;
      self.bindToAllTasksRendered();

      runtime.trigger('browser:render', listID);

      self.allTasksAreInList = new $.Deferred();

      self.when(self.ready).then(function() {

        if (self.lastRenderedListID !== listID && !runtime.inSearchState) {

          var list = self.lists.get(listID);
          if (list && list.isSavedSearch()) {
            self.setSearchGroup('/search/' + encodeURIComponent(list.getCleanTitle()));
            return;
          }

          delete self.lastSearchHash;

          self.unbindCollections();
          self.checkViewport();

          if (self.currentListId && detailViewState <= 0 && self.lastRenderedListID !== listID){

            self.destroySubviews();
          }

          if (detailViewState === -1 && self.lastRenderedListID !== listID) {
            self._scrollTop();
          }

          self.taskCollection = new TaskCollection('/lists/' + listID + '/tasks');

          // bind to current collection
          self.addTaskBind = self.bindTo(self.taskCollection, 'add', self.addSingleTask);

          self.currentLists[listID] = self.addSubview(new TasksGroupView({
            'listID': listID,
            'collection': self.taskCollection,
            'taskFactory': self.itemFactory,
            'chunking':self.chunkingOption,
            'itemsPerRender': self.tasksToFitViewport,
            'testVisibility': true,
            'scrollThreshold': 500,
            'scrollEl': self.$el.parent()
          }));

          self.$el.empty().html(self.currentLists[listID].render().$el);

          list = self.currentLists[listID];
          list.roomForTasks() && list._renderTasksAsGroup();
          list._handleHeadings();

          self.lastRenderedListID = listID;
          self.lastRenderedFilterType = null;

          if (self.isListShared(listID)) {
            self.currentLists[listID].$el.addClass('share-list');
          }

          self._updateDisplayCompletedTasks();

          // if coming from a route with a task ID, scroll to the task
          // chunking needs to handle rendering to an id first for this to do anything #TODO
          _.delay(function () {

            if (self._currentTaskId) {
              self._renderTasksToId(self._currentTaskId).done(function () {

                if (!self.destroyed) {

                  self._scrollTaskCheck(self.$('li.active'), self.$el.closest('.tasks-scroll'));
                }
              });
            }

          }, 500);
        }

        self.updateSelectedCount();

      });
      self.chunkingOption = true;

      return self;
    },

    'isListShared': function (listID) {

      var self = this;
      var listModel = self.lists.get(listID);

      return listModel && listModel.isShared() ? true : false;
    },

    'unbindCollections': function () {

      var self = this;
      var unbindCollection;

      //unbind any previous collections
      if (_.size(self.currentLists)) {

        _.each(self.currentLists, function (lists, idx){

          if (self.lastRenderedFilterType === 'week') {

            unbindCollection = new TaskCollection('/tasks/filter/' + idx);
          }
          else {

            unbindCollection = new TaskCollection('/lists/' + idx + '/tasks');

            self.addTaskBind && self.unbindFrom(self.addTaskBind);
            self.filter404Bind && self.unbindFrom(self.filter404Bind);
          }

          self.unbindFromTarget(unbindCollection);
        });
      }

      if (self.lastRenderedFilterType === 'week') {

        var weekCollection = new TaskCollection('/tasks/filter/week');
        self.unbindFromTarget(weekCollection);
      }

      self.currentLists = {};
    },

    // Its an itemFactory! pass it a model and it will create a task instance
    'itemFactory': function (model) {

      return new TaskItemView({'model': model});
    },

    'changedStarred': function (model) {

      var self = this;
      var isStarredNow = model.changedAttributes().starred;
      var listId = model.attributes.list_id;

      if (!self.currentLists[listId] && self.currentFilter !== 'week') {

        return;
      }
      else if (self.currentFilter === 'week' || self.currentFilter === 'today') {

        var newPosition = self.setFirstPositionInOtherList(false, model);
        model.save({'position': newPosition}, {'silent': true});
        // backbone waits until change even to set prev attr, we need it set now!
        model._previousAttributes.position = newPosition;
        model && self.allTasks.trigger('change', model, {'changes': {'position': true}});
      }

      if (self.currentFilter !== 'week') {

        self.currentLists[model.attributes.list_id]._handleStarredAnimation(model);
      }

      self.$('li[rel="' + model.id + '"] .icon.task-star').toggleClass('task-starred', isStarredNow);
    },

    'changedCompleted': function (model, collection, options) {

      var self = this;
      var listId = model.attributes.list_id;
      var $el = self.$('[rel="' + model.id + '"]');
      var wasSelected = $el.hasClass('selected');
      var showCompleted = runtime.settings.attributes.show_completed_items === 'true';

      if (!self.currentLists[listId]) {

        if (options && options.listId && self.currentFilter === 'week') {

          listId = options.listId;
        }
        else {

          return;
        }
      }

      // change from sync, changing a task to completed, but
      // in a context where we don't show completed tasks
      // - try to select the next or previous task in the list
      if (wasSelected && options.fromSync && !showCompleted && model.isCompleted()) {

        self.selectNextOrPrevious($el);
      }

      self.currentLists[listId]._handleCompletedAnimation(model, options);
      runtime.trigger('force:cleanup', listId);
    },

    'setFirstPositionInOtherList': function (isCompleted, model) {

      var targetModel, elComplete;

      var listId = model.attributes.list_id;
      isCompleted = isCompleted || false;

      var collection = new TaskCollection('/lists/' + listId + '/tasks');

      collection.sort();

      $.each(collection.models, function (idx, el) {

        elComplete = el.isCompleted();
        elComplete = elComplete === 'undefined' ? false : elComplete;

        if (el.id !== model.id && elComplete === isCompleted) {

          targetModel = el;

          // end the loop
          return false;
        }
      });

      if (targetModel) {

        return targetModel.attributes.position - 10;
      }
      else {

        return 0;
      }
    },

    'addSingleTask': function (model, options, eventOptions) {

      options = options || {};
      eventOptions = eventOptions || {};
      var self = this;
      var listId = model.attributes.list_id;
      // hack for safari 6, do not change this:
      try {
        options.weekFilter = false;
      }
      catch (e) {
        console.log(e);
      }

      var changes = model.changedAttributes();

      if (self.currentFilter === 'week') {

        options.weekFilter = true;
      }

      if (self.currentFilter === 'conversations') {

        options.conversationsFilter = true;
      }
      else if (_.size(changes) === 1 && 'hasComments' in changes && self.currentFilter !== 'conversations') {
        // do not add hasComment changed tasks to other filters/lists ...
        return;
      }

      if (!self.currentLists[listId]) {

        if (self.currentFilter === 'week') {

          listId = options.listId;
        }
        else {

          return;
        }
      }
      else if (self.currentFilter === 'starred' && !model.isStarred()) {

        return;
      }
      else if (self.currentFilter === 'assigned' && !model.isAssignedToMe()) {

        return;
      }
      else if (self.currentFilter === 'conversations' && !model.hasComments()) {

        return;
      }
      else if (self.currentFilter === 'completed' && !model.isCompleted()) {

        return;
      }
      else if (self.currentFilter === 'today') {

        var modelDueDate = model.attributes.due_date;
        var duedate = modelDueDate && moment(modelDueDate);
        var now = moment().sod();

        if ( (duedate && duedate.diff(now, 'days') > 0) || !duedate) {

          // do not add tasks that do not belong in this smart list!
          return;
        }

        options.todayFilter = true;
      }

      listId && self.currentLists[listId]._renderSingleTask(model, options, eventOptions);
    },

    'onChangeTaskPosition': function (model) {

      var self = this;
      var listId = model.attributes.list_id;
      var collection;

      if (!self.currentLists[listId] || !('position' in model.changed) || ('starred' in model.changed) || ('completed' in model.changed)) {

        return;
      }

      collection = new TaskCollection('/lists/' + listId + '/tasks');

      model.set('from_paste', true);

      collection.sort();

      // is it already in the right spot?
      var modelIndex = _.indexOf(collection.models, model);
      var $modelEl = self.$el.find('li[rel="' + model.id + '"]');

      var nextModel = collection.at(modelIndex + 1);
      var previousModel = collection.at(modelIndex - 1);
      var isBeforeNext = false, isAfterPrevious = false;

      if (nextModel) {

        var $nextModelEl = self.$el.find('li[rel="' + nextModel.id + '"]');

        if ($modelEl.next().attr('rel') === $nextModelEl.attr('rel')) {

          isBeforeNext = true;
        }
      }
      else if(!$modelEl.next().length){

        isBeforeNext = true;
      }

      if (previousModel) {

        var $previousModelEl = self.$el.find('li[rel="' + previousModel.id + '"]');

        if ($modelEl.prev().attr('rel') === $previousModelEl.attr('rel')) {

          isAfterPrevious = true;
        }
      }
      else if (!$modelEl.prev().length) {

        isAfterPrevious = true;
      }

      // trigger events, do not touch completed tasks
      if ((!isBeforeNext || !isAfterPrevious) && !model.attributes.completed) {

        self.drag && self.drag.cancel();

        collection.remove(model);
        _.delay(function () {
          collection.add(model);
        });
      }
    },

    '_onSelectFirst': function () {

      var self = this;

      self.defer(function () {

        var hasActiveTask = !!self.$('li.active').length;

        if (hasActiveTask) {
          return;
        }

        var classes = 'active selected';
        self.$('li').removeClass(classes);
        self.$('li').first().addClass(classes).focus();
      });
    },

    '_onFocusChange': function (focus) {

      var self = this;

      if (self.destroyed) {
        return;
      }

      self._focus = focus;
      // if the focus is add task, we need to remove
      // the cached _currentTaskId that was being referenced
      // in #_getCurrentId from the route change
      if (focus === 'addTask') {
        self._currentTaskId = null;
      }

      self._debounceUpdateHighlight();
    },

    '_getCurrentId': function (id) {

      var self = this;

      if (id) {

        self._currentTaskId = id;
      }
      else {

        id = self._currentTaskId;
      }

      self.updateTaskHighlightState();
    },

    /* jshint indent: false */
    'updateTaskHighlightState': function () {

      var self = this;
      if (self.destroyed) {
        return;
      }

      var $tasks = self.$('.taskItem');

      // sidebar should always remove focus/selected state from browser
      // in the taskBrowser we use the currentTaskId to keep track of highlight
      // in smart lists or a new list, if that task is not there,
      // select the first one.

      switch (runtime.focus) {

        case 'sidebar':
          $tasks.removeClass('active selected');
          self._currentTaskId = null;
        break;

        case 'browser':
          if (self._currentTaskId) {

            var taskSelector = $tasks.filter('li[rel="' + self._currentTaskId + '"]').addClass('active selected').focus();
            $tasks.not('li[rel="' + self._currentTaskId + '"]').removeClass('active selected');

            if (!taskSelector.length) {

              self._onSelectFirst();
            }
          }
        break;
      }
    },

    // This method handles what to show in search, ex no results etc.
    'setSearchGroup': function (url, options) {

      var self = this;
      options = options || {};

      if (options.silent) {
        return;
      }

      self.searchSubCollection = new TaskCollection(url);

      if (!self.searchSubCollection.length) {

        runtime.trigger('browser:show404', 'search');
      }
      else {

        runtime.trigger('browser:hide404');
        self.$el.removeClass('hidden');

        self.searchSubCollection.models.sort(function(a, b) {
          return self.lists.get(a.attributes.list_id).attributes.position - self.lists.get(b.attributes.list_id).attributes.position;
        });

        // make sure we don't re-render the view if the result has not changed since the last render, by saving the models ids and comparing each time the search collection is re-published
        var searchHash = self.searchSubCollection.pluck('id').join('#');

        if (searchHash !== self.lastSearchHash) {

          self.lastSearchHash = searchHash;
          self.renderByCollection(self.searchSubCollection);
        }
      }
    },

    'setFilterGroup': function (collection) {

      var self = this;
      var type = collection.url && String(collection.url).split('/')[3];

      if (!collection.length) {

        runtime.trigger('browser:show404', type);
      }
      else {

        runtime.trigger('browser:hide404');
        self.$el.removeClass('hidden');
      }
    },

    // this method handles what to show in week when no results
    'setWeekGroup': function () {

      var self = this;

      var weekCollection = new TaskCollection('/tasks/filter/week');

      if (!weekCollection.length) {

        runtime.trigger('browser:show404', 'week');
      }
      else {

        runtime.trigger('browser:hide404');
        self.$el.removeClass('hidden');
      }
    },

    // renders remaining tasks until the task of our id is in the dom
    '_renderTasksToId': function (id) {

      var self = this;
      var remaining;
      var model = self.allTasks.get(id);
      var listId = model && model.attributes.list_id;
      var deferred = new $.Deferred();

      // this is only for lists !!!
      if (_.size(self.currentLists) > 1 || !listId) {

        return deferred.resolve().promise();
      }

      var $task = self.$el.find('li[rel="' + id + '"]');

      remaining = $task.size() === 0 ? self.currentLists[listId] ? self.currentLists[listId]._renderTasksAsGroup() : 0 : 0;

      if (remaining > 0 && $task.size() === 0) {

        return self._renderTasksToId(id);
      } else {

        self._currentTaskId = null;
        return deferred.resolve().promise();
      }
    },

    'changeDueDate': function(listId, oldListId, dragElements) {

      var self = this;
      var dateMap = {

        'todayPlus0': 0,
        'todayPlus1':1,
        'todayPlus2':2,
        'todayPlus3':3,
        'todayPlus4':4,
        'todayPlus5':5,
        'todayPlus6':6
      };

      _.each(dragElements, function(el) {

        var model = self.allTasks.get($(el).attr('rel'));
        var oldCollection = new TaskCollection('/tasks/filter/' + oldListId);
        var newCollection = new TaskCollection('/tasks/filter/' + listId);

        oldCollection.remove(model);
        model.save({
          'due_date':moment().sod().add('days', dateMap[listId]).format('YYYY-MM-DD')
        });

        newCollection.add(model);
      });
    },

    // update model position attributes to reflect their position in the DOM
    calculateDraggedModelPositions: function () {

      var self = this;
      var $droppedElements = $('.just-dropped');
      var numElements = $droppedElements.size();
      var beforeId, afterId, beforePosition, afterPosition, increment, lastPosition;

      beforeId = self.$el.find('li[rel="' + $($droppedElements[0]).attr('rel') + '"]').prev().attr('rel');
      afterId = self.$el.find('li[rel="' + $($droppedElements[numElements - 1]).attr('rel') + '"]').next().attr('rel');

      self.allTasks.sort();

      beforePosition = beforeId && self.allTasks.get(beforeId).attributes.position;
      afterPosition = afterId && self.allTasks.get(afterId).attributes.position;

      // calculate start position and increment
      if (!beforeId && afterId) {

        beforePosition = afterPosition - 1;
        increment = (afterPosition - beforePosition) / (numElements + 1);
      }
      else if (!afterId && beforeId) {

        increment = 1;
      }
      else if (afterId && beforeId) {

        // calculate start and increment - use collections!
        var beforeModel = self.allTasks.get(beforeId);
        var listID = beforeModel.attributes.list_id;
        var collection = new TaskCollection('/lists/' + listID + '/tasks');

        collection.sort();

        // broke this out here for debugging nest if you want to ...
        var curIndex = collection.indexOf(beforeModel);
        var nextIndex = curIndex + 1;
        var nextId = collection.at(nextIndex).attributes.id;

        afterPosition = collection.get(nextId).attributes.position;
        increment = (afterPosition - beforePosition) / (numElements + 1);
      }

      lastPosition = beforePosition;

      // save new positions on the models
      _.each($droppedElements, function (el) {

        lastPosition += increment;
        var id = $(el).attr('rel');
        var model = self.allTasks.get(id);
        model && model.save({'position': lastPosition}, {'silent': true});
        // backbone waits for a change event to set previous attr, we need it to be set now!
        model._previousAttributes.position = lastPosition;
        model && self.allTasks.trigger('change', model, {'changes': {'position': true}});
      });

      // remove helper classes
      $droppedElements.removeClass('just-dropped');
    },

    '_preventFocus': function(ev) {

      ev.stopPropagation();
    },

    '_updateDisplayCompletedTasks': function () {

      var self = this;
      var setting = runtime.settings.attributes.show_completed_items;
      var enabled = setting === 'true';

      // force completed tasks to be visible in completed smart list
      if (self.currentFilter === 'completed' || self.currentFilter === 'search') {
        enabled = true;
      }

      self.$el.toggleClass('completed-hidden', !enabled);

      var $selected = self.$('.selected.active');
      if (!enabled && $selected.hasClass('done')) {
        self.selectNextOrPrevious($selected);
      }
    },

    '_toggleCompletedTasks': function() {

      var currentSetting = runtime.settings.attributes.show_completed_items;
      var newSetting = currentSetting === 'true' ? 'false' : 'true';
      runtime.settings.save('show_completed_items', newSetting);

      // clicking the toggle should also set the focus correctly
      _.delay(_.bind(runtime.trigger, runtime, 'focus:set', 'browser'), 100);
    },

    '_handleHashLink': function (ev) {

      var self = this;
      var query;

      if (ev.shiftKey) {

        var tag = self.$(ev.target).text();
        var current = runtime.currentSearchTerm || '';
        var isAlreadyInQuery = current.indexOf(tag) >= 0;

        if (!isAlreadyInQuery && self.currentFilter === 'search') {
          query = current + ' ' + tag;

        }
        else if (runtime.listId) {
          query = tag + ' list=' + runtime.listId;
        }

        if (query) {
          runtime.trigger('route:search/' + encodeURIComponent(query));
          ev.stopPropagation();
          ev.preventDefault();
        }
      }
    },

    'forceFocus': function (focus) {

      var self = this;
      // TODO REMOVE BEFORE MERGE RELEASE -> MASTER
      if (focus === 'browser') {
        self.$('.active').focus();
      }
    }
  });
});
define('templates/sharingListUser',['vendor/handlebars'], function(H) {
var name = 'sharingListUser';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, self=this, functionType="function", escapeExpression=this.escapeExpression;

function program1(depth0,data) {
  
  
  return " <a class=\"button leave-list\">Leave</a> ";
  }

function program3(depth0,data) {
  
  
  return " <a class=\"button transparent-bg delete-person\"> <span class=\"icon detail-delete\"></span> </a> ";
  }

  buffer += "<a class=\"button blue invite-person-success hidden\"> <span class=\"icon list-completed\"></span> </a> <a class=\"button invite-person\"> <span class=\"icon popover-share\"></span> </a> ";
  stack1 = helpers['if'].call(depth0, depth0.iAmMember, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.iAmOwner, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " <div class=\"picture\"></div> <div class=\"name\"> <span class=\"name-inner\">";
  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</span> </div> <div class=\"description\"><a>";
  if (stack1 = helpers.email) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.email; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</a></div>";
  return buffer;
  });
});
define('views/Sharing/SharingListUserView',[

  'application/runtime',

  'vendor/md5',

  'models/ShareModel',

  'collections/ContactCollection',
  'collections/ShareCollection',

  'wunderbits/WBView',
  'views/AvatarView',

  'template!sharingListUser'

], function (runtime, MD5, ShareModel, ContactCollection, ShareCollection, WBView, AvatarView, template, undefined) {

  

  var $ = runtime.$;
  var _ = runtime._;

  var _super = WBView.prototype;

  return WBView.extend({

    'template': template,
    'tagName': 'li',
    'events': {

      'click .invite-person': '_onInvite',
      'click .delete-person': '_onRemove'
    },

    'initialize': function (options) {

      var self = this;
      // for adding shares
      self.shareCollection = new ShareCollection('/shares/all');
      self.contactCollection = new ContactCollection('/contacts/friends');

      options = options || {};

      self.options = options;
      self.contact = options.contact || {};
      self.contact.name = self.contact.name || self.contact.username;
      self.role = options.role || 'member';
      self.ownerId = options.ownerId;
      self.shareModel = options.shareModel;
      self.tempModel = options.tempModel;
      self.fbFriend = options.fbFriend;
      self.isFacebookFriend = options.isFacebookFriend;
      self.listId = options.listId;

      _super.initialize.apply(self, arguments);

      if (self.tempModel) {

        self.bindTo(self.tempModel, 'change:email', self._updateUser);
      }

      if (self.contact) {

        self.bindTo(runtime, 'sendInvite:' + self.contact.id, self._onInvite);
      }

      // share model binds, when present
      if (self.shareModel) {

        self.bindTo(self.shareModel, 'change', self.render);
        self.bindTo(self.shareModel, 'destroy', self._onUnShare);

        // if the recipient is a facebook user, but there has no name yet, wait for the facebook data loading to fetch
        var recipient = self.shareModel.attributes.recipient;
        if(recipient.facebook && !recipient.name) {
          self.bindTo(runtime, 'facebook:friends:fetched', self._updateFacebookUser);
        }
      }
    },

    'render': function (model, options) {

      var self = this;
      var json, sJson, isPending;
      if (self.shareModel) {

        sJson = self.shareModel ? self.shareModel.toJSON() : {};
        json = self.contact;

        // If the model was just saved, use recipient as contact
        if (options && options.changes && options.changes.recipient) {
          var recipient = self.shareModel.attributes.recipient;
          recipient && _.extend(json, recipient);
        }

        // var recipientEmail = json && json.provider_type === 'email' ? json.provider_id : json.email ? json.email : null;

        // json.email = json.email || recipientEmail;
        isPending = ('accepted_at' in sJson && !sJson.accepted_at);
      }
      else if (self.tempModel){

        json = self.tempModel.toJSON();
        isPending = false;
      }
      else {

        json = self.contact;
      }

      if (json.provider_type === 'email') {

        json.email = json.provider_id;
      }

      // name
      if (json.email && !json.name) {

        json.name = json.email.split('@')[0];
      }
      else if (self.fbFriend) {

        json.name = self.fbFriend.attributes.name;
        self.$el.attr('rel', self.fbFriend.id);
      }

      json.iAmMember = (self.role === 'member' && runtime.user.id === json.id);
      json.iAmOwner = (self.ownerId === runtime.user.id);

      // render template
      _super.render.call(self, json);

      // show invited fb peeps
      if (self.fbFriend && self.fbFriend.attributes.invited) {

        self._showInvited();
      }

      // can't remove owner from the list
      if(self.role === 'owner') {

        self.$el.attr('rel', 'owner');
      } else {

        self.$el.attr('rel', json.id);
      }

      // view sepcific
      if (self.options.view === 'member') {

        self.$el.find('.remove-member').removeClass('hidden');

        if (self.shareModel && self.shareModel.attributes.isFacebookFriend) {
          self.$el.addClass('facebook-invite');
        }
      }
      else if (self.options.view === 'recent' || self.options.view === 'contact') {

        if (self.options.isListMember || sJson) {

          // is recent or contact
          self._showInvited();
        }
      }

      // tags
      var $tagSpan;
      if(self.role === 'owner') {
        $tagSpan = $('<span/>').html(runtime.language.getLabel('sharing_list_owner').toString()).addClass('owner');
      }
      else if(isPending) {
        $tagSpan = $('<span/>').html(runtime.language.getLabel('sharing_list_pending_member').toString()).addClass('pending');
      }
      $tagSpan && self.$el.find('.name').append($tagSpan.addClass('badge'));

      // avatar
      self.renderAvatar(json.id);

      // localized
      self.renderLocalized();

      return self;
    },

    'renderAvatar': function (id) {

      var self = this;
      var $picture = self.$('.picture');

      self.avatarView = self.avatarView || self.addSubview(new AvatarView({size: 'medium', facebook: self.fbFriend}), 'avatarView');

      $picture.html(self.avatarView.render({id: id}).$el);
    },

    '_showInvited': function () {

      var self = this;

      self.$el.find('.tag.pending').removeClass('hidden');
      self.$el.find('.button.invite-person').addClass('hidden');
      self.$el.find('.button.invite-person-success').removeClass('hidden');
    },

    // ui events
    '_onInvite': function () {

      var self = this;
      var data = {};

      if (self.tempModel) {

        data.accepted_at = null;
        data.resource_id = self.options.listId;
        data.recipient =  {'email': self.tempModel.attributes.email};
        data.name = self.tempModel.attributes.name;
      }
      else if (self.fbFriend) {

        data.accepted_at = null;
        data.resource_id = self.options.listId;
        data.name = self.fbFriend.attributes.name;
        data.isFacebookFriend = true;
        data.recipient =  {
          'facebook': self.fbFriend.id
        };
      }
      else {

        data.resource_id = self.options.listId;
        data.accepted_at = null;
        data.name = self.contact.name;
        data.recipient =  {
          'id': self.contact.id
        };
      }

      // needed for before sync checking that user created the share
      data.sender = {

        'id': runtime.user.id
      };

      runtime.trigger('analytics:ShareDialog:invitePerson', self.fbFriend ? 'facebook' : 'other');

      // we dont want to add the fb pending invite because we dont yet know
      // if they actually sent it.
      if (!self.fbFriend) {

        data && self.shareCollection.add(data);
        self._showInvited();
      }
    },

    'createFacebookInvite': function (fbId, fbName) {

      var self = this;
      var data = {};

      data.accepted_at = null;
      data.resource_id = self.options.listId;
      data.isFacebookFriend = true;
      data.recipient =  {
        'username': fbName,
        'facebook': fbId
      };

      data.sender = {

        'id': runtime.user.id
      };

      var filter = _.filter(self.shareCollection.models, function (model) {

        return model.attributes.recipient.facebook === data.recipient.facebook && model.attributes.resource_id === self.listId;
      });

      if (!filter.length) {

        data && self.shareCollection.add(data);
        self._showInvited();
      }
    },

    '_onRemove': function (ev) {

      var self = this;

      ev & ev.stopPropagation();

      if (self.shareModel) {

        self.shareModel.destroy();
        !self.destroyed && self.destroy();
      }
    },

    // model events
    '_updateUser': function () {

      var self = this;
      var email = self.tempModel.attributes.email;
      var name = self.tempModel.attributes.name;

      self.$el.find('.description a').text(email);
      self.$el.find('.name').text(name);

      self.$el.find('.tag.pending').addClass('hidden');
      self.$el.find('.button.invite-person')[email === runtime.user.attributes.email ? 'addClass' : 'removeClass']('hidden');
      self.$el.find('.button.invite-person-success').addClass('hidden');
    },

    '_updateFacebookUser': function(fbFriends) {

      var self = this;
      var recipient = self.shareModel && self.shareModel.attributes.recipient;
      var fbFriend = recipient.facebook && fbFriends.get(recipient.facebook);
      if(fbFriend) {
        self.fbFriend = fbFriend;
        self.render();
      }
    },

    '_onUnShare': function() {

      var self = this;

      self.destroy();
    }
  });
});
define('views/Sharing/Controllers/SharingListInvitesViewController',[

  'application/runtime',

  'helpers/Auth/facebook',
  'wunderbits/helpers/keycodes',
  'wunderbits/WBValidationHelper',

  'views/Sharing/SharingListUserView',

  'wunderbits/WBViewController',

], function (
  runtime,
  Facebook, Keycodes, ValidationHelper,
  SharingListUserView,
  WBViewController,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;
  var Backbone = runtime.Backbone;

  return WBViewController.extend({

    'implements': {

      'keyup:invite': 'handleInviteInput',
      'invite:person': 'onInvitePerson'
    },

    'onInvitePerson': function (e) {

      var self = this;
      var $target = $(e.target);

      if ($target.closest('.tab').hasClass('facebook')) {
        self.onInviteFacebook($target);
      }
    },

    'handleInviteInput': function (ev) {

      var self = this;
      var view = self.view;
      var string = view.getInputValue();
      var containers = view.getContainers();
      var $recentContainer = containers.$recent;
      var $ul = containers.$ul;

      if (ev.which === Keycodes.enter) {
        ev.preventDefault();
        ev.stopPropagation();
        view.attemptToInvite();
        view.clearInput();
      }

      // if there is text
      if (string.length) {
        // render search results or create new temp invite
        if (!self.isPendingEmail(string) && !self.searchContacts(string) && !self.newInviteRendered && ValidationHelper.isValidEmail(string) && string !== runtime.user.attributes.email) {
          self.createTempInvite(string, $recentContainer, $ul);
        }
        // update temp invite
        else if (ValidationHelper.isValidEmail(string)) {
          self.updateTempInvite(string, $recentContainer);
        }
      }
      // otherwise cleanup
      else {
        if (self.newInviteRendered) {
          view.newInviteViews[view.newInviteViews.length - 1].destroy();
        }
        // if text is all deleted, stop updating new invited view
        $recentContainer.removeClass('hidden');
        $ul.find('li').removeClass('hidden');
        self.newInviteRendered = false;
      }
    },

    'createTempInvite': function (string, $recentContainer, $ul) {

      var self = this;
      var view = self.view;

      (!self.newInviteModel) && (self.newInviteModel = new Backbone.Model({
        'list_id': view.listModel.id
      }));

      self.newInviteModel.set({
        'email': string,
        'name': string.split('@')[0]
      });

      // init subview
      view.newInviteViews.push(view.addSubview(new SharingListUserView({

        'listId': view.listModel.id,
        'tempModel': self.newInviteModel
      })));

      // render
      var lastView = _.last(view.newInviteViews);
      lastView && $ul.append(
        lastView.render().$el.addClass('new-friend').removeClass('hidden')
      );

      // make visible
      $recentContainer.removeClass('hidden');

      self.newInviteRendered = true;
    },

    'updateTempInvite': function (string, $recentContainer) {

      var self = this;
      var view = self.view;

      if (!self.searchContacts(string) && !self.isPendingEmail(string)) {
        // if new invite already rendered, update email address until user clicks the invite button
        $recentContainer.removeClass('hidden');

        view.newInviteViews[view.newInviteViews.length - 1].$el.removeClass('hidden');
        self.newInviteModel.set({

          'email': string,
          'name': string.split('@')[0]
        });
      }
      else if (self.searchContacts(string)) {
        $recentContainer.removeClass('hidden');
      }
      else {
        $recentContainer.addClass('hidden');
        var $view = view.newInviteViews.length && view.newInviteViews[view.newInviteViews.length - 1].$el;
        $view && $view.addClass('hidden');
      }
    },

    'searchContacts': function (string) {

      var self = this;
      var view = self.view;
      var contactIndices = [];

      string = string.toLowerCase();

      // create and cache contact search index
      !self.contactSearchIndex && self.createContactSearchIndex();
      _.each(self.contactSearchIndex, function (el, idx) {

        if (el && el.indexOf(_.escape(string)) !== -1) {

          contactIndices.push(idx);
        }
      });

      view.renderSearchResults(contactIndices);
      return contactIndices.length;
    },

    'createContactSearchIndex': function () {

      var self = this;
      var view = self.view;
      var string;

      var searchModels = _.union([], view.friends && view.friends.models);
      self.contactSearchIndex = {};
      searchModels = _.without(searchModels, undefined);

      _.each(searchModels, function (model) {

        string = model.attributes.name + (model.attributes.email || '');
        self.contactSearchIndex[model.id] = string.toLowerCase();
      });
    },

    // pending (won't show in search because they are not in contacts >_<)
    'isPendingEmail': function (string) {

      var self = this;
      var view = self.view;
      var models = _.filter(view.listShares.models, function (model) {

        var attr = model.attributes;

        return attr.recipient && attr.recipient.provider_id === string;
      });

      return models.length > 0;
    }
  });
});
define('templates/sharing/sharingListInvites',['vendor/handlebars'], function(H) {
var name = 'sharing/sharingListInvites';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += " <div class=\"top\"> <div class=\"header\"> <a class=\"button left back-to-members\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_back", options) : helperMissing.call(depth0, "localized", "button_back", options)))
    + "</a> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "sharing_invite", options) : helperMissing.call(depth0, "localized", "sharing_invite", options)))
    + " </div> <input class=\"big\" type=\"text\" data-key-placeholder=\"placeholder_sharing_search\"/> </div> <div class=\"content\"> <div class=\"tab recent-shares\"> <ul class=\"list-people\"> <li class=\"no-contacts\"> <div class=\"icon no-share-empty-coach\"></div> <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "coachmark_sharing_recent_no_contacts_heading", options) : helperMissing.call(depth0, "localized", "coachmark_sharing_recent_no_contacts_heading", options)))
    + "</h3> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "coachmark_sharing_recent_no_contacts_text_$", depth0.list, options) : helperMissing.call(depth0, "localized", "coachmark_sharing_recent_no_contacts_text_$", depth0.list, options)))
    + "</p> </li> </ul> </div> </div>";
  return buffer;
  });
});
define('views/Sharing/SharingListInvitesView',[

  'application/runtime',

  'helpers/Auth/facebook',

  'collections/ContactCollection',
  'collections/ServiceCollection',
  'collections/ShareCollection',

  'views/Sharing/SharingListUserView',

  'views/Sharing/Controllers/SharingListInvitesViewController',

  'wunderbits/WBViewPresenter',

  'template!sharing/sharingListInvites'

], function (
  runtime,
  Facebook,
  ContactCollection, ServiceCollection, ShareCollection,
  SharingListUserView,
  SharingListInvitesViewController,
  WBViewPresenter,
  template,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'implements': [SharingListInvitesViewController],

    'emits': {
      'keyup input': 'keyup:invite',
      'click .invite-person': 'invite:person'
    },

    'className': 'page invite hidden',

    'template': template,

    'renderData': {
      'list': undefined
    },

    'formatData': function (data) {

      var self = this;
      _super.formatData.apply(self, data);

      data.list = _.escape(self.listModel.attributes.title);

      return data;
    },

    'initialize': function (options) {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.listModel = options.list;
      self.shareModel = options.share;

      self.contacts = new ContactCollection('/contacts/all');
      self.friends = new ContactCollection('/contacts/friends');
      self.listShares = new ShareCollection('/shares/' + self.listModel.id + '/shares');

      self.when(runtime.whenSharesIsReady(), runtime.whenContactsIsReady(), runtime.whenServicesIsReady()).done(function () {

        self.deferredInit(options);
      });
    },

    'deferredInit': function () {

      var self = this;
      self.initInviteViews();
    },

    'render': function () {

      var self = this;
      _super.render.apply(self, self.formatData(self.renderData));

      var $recent = self.$el.find('.recent-shares ul');

      if (self.recentViews && self.recentViews.length) {
        $recent.removeClass('hidden');
        self.$el.find('.recent-shares .list-people').empty();

        var fragment = document.createDocumentFragment();
        var view;
        for (var i=0, len=self.recentViews.length; i < len; i++) {
          view = self.recentViews[i];
          fragment.appendChild(view.render().el);
        }
        $recent[0].appendChild(fragment);
      }

      return this;
    },

    'initInviteViews': function() {

      var self = this;
      var models = self.friends.models;
      var model, view;

      // init recent subviews (_friends collection)
      self.recentViews = [];

      for (var i=0, len=models.length; i < len; i++) {
        model = models[i];
        if (model.id !==  self.listModel.attributes.owner_id && !self.getSubview('invite' + model.id)) {
          view = self.addSubview(new SharingListUserView({
            'listId': self.listModel.id,
            'contact': model.attributes,
            'shareModel': self.listShares.getByRecipientId(model.id),
            'view': 'recent'
          }, 'invite' + model.id));
          self.recentViews.push(self.addSubview(view));
        }
      }

      // init just invited views
      self.newInviteViews = [];
    },

    'attemptToInvite': function () {

      var self = this;
      var invitables = self.$('.list-people > li').not('.hidden');
      var invitableCount = invitables.length - 1;
      if (invitableCount === 1) {
        var id = $(invitables[1]).attr('rel');
        runtime.trigger('sendInvite:' + id);
        !id && invitables.find('.new-friend .invite-person').trigger('click');
      }
    },

    // DOM SETTERS
    'clearInput': function () {

      this.$('input').val('');
    },

    // DOM GETTERS
    'getInputValue': function () {

      return $.trim(this.$('input').val());
    },

    'getContainers': function () {

      var self = this;

      var containers = {
        '$recent': undefined,
        '$ul': undefined
      };

      if (!self.currentTab || self.currentTab === 'recent') {
        containers.$recent = self.$('.recent-shares');
      }
      else {
        containers.$recent = self.$('.fb-friends');
      }

      containers.$ul = containers.$recent.find('ul');

      return containers;
    },

    // SEARCH
    'renderSearchResults': function (contactIds) {

      var self = this;
      var $container;
      var $contacts;

      if (!self.currentTab || self.currentTab === 'recent') {
        $container = self.$el.find('.recent-shares');
        $contacts = $container.find('.list-people > li');
      }
      else {
        $container = self.$el.find('.fb-friends');
        $contacts = $container.find('ul > li');
      }

      if (contactIds.length) {
        $container.removeClass('hidden');

        var $this;
        for (var i=0, len = $contacts.length; i < len; i++) {
          $this = $($contacts[i]);
          if(!_.include(contactIds, $this.attr('rel'))) {
            $this.addClass('hidden');
          }
          else {
            $this.removeClass('hidden');
          }
        }
      }
      else {
        $contacts.addClass('hidden');
        $container.addClass('hidden');
      }
    },
  });
});
define('templates/sharing/sharingListMembers',['vendor/handlebars'], function(H) {
var name = 'sharing/sharingListMembers';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"header\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "sharing_list_members", options) : helperMissing.call(depth0, "localized", "sharing_list_members", options)))
    + " </div> <div class=\"content\"> <div class=\"list-members\"> <ul class=\"list-people\"> <li class=\"not-shared\"> <span class=\"icon popover-notshared\"></span> <h3>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "sharing_invite_friends", options) : helperMissing.call(depth0, "localized", "sharing_invite_friends", options)))
    + "</h3> <p>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "coachmark_sharing_invite_friends_text_$", depth0.list, options) : helperMissing.call(depth0, "localized", "coachmark_sharing_invite_friends_text_$", depth0.list, options)))
    + "</p> </li> </ul> </div> </div> <button class=\"blue full invite-more-friends\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "sharing_invite_friends", options) : helperMissing.call(depth0, "localized", "sharing_invite_friends", options)))
    + "</button>";
  return buffer;
  });
});
define('views/Sharing/SharingListMembersView',[

  'application/runtime',

  'collections/ContactCollection',
  'collections/ShareCollection',

  'views/Sharing/SharingListUserView',

  'wunderbits/WBViewPresenter',

  'template!sharing/sharingListMembers'

], function (
  runtime,
  ContactCollection, ShareCollection,
  SharingListUserView,
  WBViewPresenter,
  template,
  undefined
) {

  

  var _ = runtime._;

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'className': 'page members',

    'template': template,

    'renderData': {
      'list': undefined
    },

    'formatData': function (data) {

      var self = this;
      _super.formatData.apply(self, data);

      data.list = _.escape(self.listModel.attributes.title);

      return data;
    },

    'initialize': function (options) {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.listModel = options.list;
      self.shareModel = options.share;

      self.contacts = new ContactCollection('/contacts/all');
      self.listShares = new ShareCollection('/shares/' + self.listModel.id + '/shares');

      self.when(runtime.whenSharesIsReady(), runtime.whenContactsIsReady(), runtime.whenServicesIsReady()).done(function () {

        self.deferredInit(options);
      });

      self.bindTo(self.listShares, 'add', self.onAddShare);
    },

    'deferredInit': function () {

      var self = this;
      var models = self.listShares.models;
      var shareModel, userSubView;

      // init share subviews (listShares collection)
      self.shareViews = [];
      for (var i=0, len = models.length; i < len; i++) {
        shareModel = models[i];
        userSubView = self.generateUserSubView(shareModel);
        userSubView && self.shareViews.push(userSubView);
      }

      // self view
      var selfSubView = self.generateSelfSubView();
      selfSubView && self.shareViews.push(selfSubView);
    },

    'render': function () {

      var self = this;
      _super.render.apply(self, self.formatData(self.renderData));

      var $notShared = self.$('.not-shared');
      var shareViews = self.shareViews;
      var shareView;

      if (shareViews.length) {
        $notShared.addClass('hidden');
        var $shares = self.$('.list-members ul');
        $shares.removeClass('hidden');

        var fragment = document.createDocumentFragment();
        for (var i=0, len=shareViews.length; i < len; i++) {
          shareView = shareViews[i];
          fragment.appendChild(shareView.render().el);
        }

        $shares[0].appendChild(fragment);

        // move the owner to the top of the list
        var owner = $shares.find('li[rel="owner"]');
        if (owner.length) {
          owner.prependTo($shares);
        }
      }
      else {
        $notShared.removeClass('hidden');
      }

      return this;
    },

    'generateSelfSubView': function () {

      var self = this;
      var role = 'member';

      if (!self.listShares.length) {
        return;
      }

      if (self.listModel.attributes.owner_id === runtime.user.id) {
        role = 'owner';
      }

      self.selfViewGenerated = true;

      return self.addSubview(new SharingListUserView({

        'contact': runtime.user.attributes,
        'listId': self.listModel.id,
        'view': 'member',
        'role': role
      }), 'selfView');
    },

    'generateUserSubView': function (shareModel) {

      var self = this;
      var attributes = shareModel.attributes;
      var contact, contactId, contactData;
      var role = 'member';

      // if I am the recipient of a share, the sender is the owner
      contact = attributes.recipient;
      contactId = contact.id;
      if (contactId === runtime.user.id) {
        contact = attributes.sender;
        contactId = attributes.sender.id;
      }

      if (!contactId) {
        contactId = self.contacts.getIdByAltId(contact.email);
      }

      if (self.listModel.attributes.owner_id === contactId) {
        role = 'owner';
      }

      contactData = self.buildContactData(contactId, contact);

      if (contactData && !self.getSubview('share' + contactData.id)) {
        return self.addSubview(new SharingListUserView({
          'isFacebookFriend': shareModel.attributes.isFacebookFriend,
          'contact': contactData,
          'listId': self.listModel.id,
          'ownerId': self.listModel.attributes.owner_id,
          'shareModel': shareModel,
          'view': 'member',
          'role': role
        }), 'share' + contactData.id);
      }
    },

    'buildContactData': function (contactId, contact) {

      var self = this;
      var contactData = {};
      var contactModel = self.contacts.get(contactId);
      var name = contact.name || contact.username;

      if (contactModel) {
        contactData = contactModel.attributes;
      }
      else if (contact.email) {
        contactData.email = contact.email;
        contactData.name = name;
      }
      else {
        contactData.id = contactId;
        contactData.name = name;
      }

      return contactData;
    },

    // COLLECTION EVENTS
    'onAddShare': function (shareModel) {

      var self = this;
      var userSubView = self.generateUserSubView(shareModel);
      var $shares = self.$el.find('.list-members ul');

      if (userSubView) {
        self.shareViews = self.shareViews || [];
        self.shareViews.push(userSubView);
        $shares.append(userSubView.render().el);
      }

      if (!self.selfViewGenerated) {
        var selfView = self.generateSelfSubView();
        selfView && $shares.prepend(selfView.render().el);
      }
    },
  });
});
define('views/Sharing/Controllers/SharingListPopoverController',[

  'application/runtime',

  'wunderbits/WBViewController',

], function (
  runtime,
  WBViewController,
  undefined
) {

  

  return WBViewController.extend({

    'implements': {

      // Invite input
      'blur:invite': 'handleInviteBlur',
      'toggle:pages': 'togglePages',
      'back': 'backtoInvites',

      // Unsharing
      'leave:share': 'onLeavingShare',

      // unregistered mode
      'signup': 'onSignup'
    },

    'handleInviteBlur': function (e) {

      this.view.showListMembers(e);
    },

    'togglePages': function (e) {

      this.view.togglePages(e);
    },

    'backtoInvites': function (e) {

      this.view.backtoInvites(e);
    },

    'onLeavingShare': function () {

      var self = this;
      var view = self.view;
      var shouldPromptBefore = runtime.settings.attributes.confirm_delete_entity === 'true';

      // Cache the reference, since this view might be destroyed when the action is executed
      var shareModel = view.shareModel;

      var action = function () {

        shareModel.destroy();
      };

      var confirmationOptions = {

        'confirm': action,
        'cancel': function () {
        },
        'customTitle': runtime.language.getLabel('sharing_leave_action').toString(),
        'customText': runtime.language.getLabel('label_cant_undo').toString(),
        'confirmText': runtime.language.getLabel('sharing_leave_button').toString()
      };

      if (shouldPromptBefore) {
        runtime.trigger('modal:confirm', confirmationOptions);
      }
      else {
        action();
      }

      view.close();
    },

    'onSignup': function () {

      runtime.trigger('route:try/signup');
    }
  });
});
define('styles/popover/sharingPopover',[],function() { return {'name': 'popover/sharingPopover', 'styles': "#wunderlist-base .inner.popover-sharing{padding:0;width:304px;height:352px;overflow:hidden;position:relative;} #wunderlist-base .inner.popover-sharing .header{height:34px} #wunderlist-base .inner.popover-sharing .invite-more-friends,#wunderlist-base .inner.popover-sharing .leave-shared-list,#wunderlist-base .inner.popover-sharing .resend-email,#wunderlist-base .inner.popover-sharing .leave-list{padding:8px 10px} #wunderlist-base .inner.popover-sharing .page{width:100%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:12px;-webkit-transform:translateX(0);-moz-transform:translateX(0);-o-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);position:absolute;top:0;} #wunderlist-base .inner.popover-sharing .page.hidden{display:block !important} #wunderlist-base .inner.popover-sharing .page.members .invite-person-success,#wunderlist-base .inner.popover-sharing .page.members .invite-person{display:none} #wunderlist-base .inner.popover-sharing .page.members .list-people{height:248px;margin-bottom:12px;overflow-y:auto} #wunderlist-base .inner.popover-sharing .page.members .facebook-invite .name{margin-top:7px} #wunderlist-base .inner.popover-sharing .page.members.hidden{-webkit-transform:translateX(-100%);-moz-transform:translateX(-100%);-o-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%)} #wunderlist-base .inner.popover-sharing .page.invite .delete-person{display:none} #wunderlist-base .inner.popover-sharing .page.invite.hidden{-webkit-transform:translateX(100%);-moz-transform:translateX(100%);-o-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%)} #wunderlist-base .inner.popover-sharing .page.invite .no-contacts{text-align:center;color:#939393;padding:0 15px;top:10px;} #wunderlist-base .inner.popover-sharing .page.invite .no-contacts h3{font-size:18px;margin:5px 0;font-weight:500} #wunderlist-base .inner.popover-sharing .page.invite .no-contacts p{font-size:12px;font-weight:400;padding:0 10px;word-wrap:break-word} #wunderlist-base .inner.popover-sharing .tab{overflow-y:auto;height:218px;} #wunderlist-base .inner.popover-sharing .tab .fb-friends .name{margin-top:7px} #wunderlist-base .inner.popover-sharing .tab.recent-shares .no-shares{color:#939393;text-shadow:0 1px 0 #fff;text-align:center;} #wunderlist-base .inner.popover-sharing .tab.recent-shares .no-shares .no-share-empty-coach{height:90px;display:block;margin:0 auto;margin-top:8px;text-shadow:0 1px 0 #fff;} #wunderlist-base .inner.popover-sharing .tab.recent-shares .no-shares .no-share-empty-coach:before{display:none} #wunderlist-base .inner.popover-sharing .tab.recent-shares .no-shares h3{font-size:18px;margin:10px 0 5px 0;font-weight:500} #wunderlist-base .inner.popover-sharing .tab.recent-shares .no-shares p{font-size:12px;font-weight:400} #wunderlist-base .inner.popover-sharing .connect-fb{margin-top:60px} html[dir=rtl] #wunderlist-base #sharing-popover.popover.right{right:279px !important;} html[dir=rtl] #wunderlist-base #sharing-popover.popover.right .arrow{border-color:transparent transparent transparent #f9f9f9 !important;right:-20px !important} html[dir=rtl] #wunderlist-base #sharing-popover.popover.right .button{margin-left:0} " }; });
define('views/Sharing/SharingListPopoverView',[

  'application/runtime',

  'collections/ShareCollection',
  'collections/ContactCollection',
  'collections/ServiceCollection',

  'views/Sharing/SharingListInvitesView',
  'views/Sharing/SharingListMembersView',
  'views/Sharing/SharingListUserView',
  'views/Popovers/PopoverView',

  'views/Sharing/Controllers/SharingListPopoverController',

  'helpers/Auth/facebook',

  'wunderbits/WBPopoverView',
  'wunderbits/WBValidationHelper',

  'style!popover/sharingPopover',

], function (
  runtime,
  ShareCollection, ContactCollection, ServiceCollection,
  SharingListInvitesView, SharingListMembersView, SharingListUserView, PopoverView,
  SharingListPopoverController,
  facebook,
  WBPopoverView, ValidationHelper,
  sharingPopoverStyle,
  undefined
) {

  

  var _super = PopoverView.prototype;
  var _facebook = facebook;

  return PopoverView.extend({

    'className': 'inner popover-sharing',

    'config': {
      'bindToTarget': false,
      'id': 'sharing-popover'
    },

    'implements': [
      SharingListPopoverController
    ],

    'styles': [
      sharingPopoverStyle
    ],

    'emits': {

      // Navigation
      'click .invite-more-friends': 'toggle:pages',
      'click .back-to-members': 'toggle:pages',
      'click .back-to-invites': 'back',

      // Unsharing
      'click .leave-list': 'leave:share',

      // unregistered mode
      'click .signup': 'signup'
    },

    'initialize': function (options) {

      var self = this;

      self.listModel = options.list;
      self.shareModel = options.share;

      var ownerId = options.list.attributes.owner_id;
      self.isOwner = (!ownerId || ownerId === runtime.user.id);

      // get reference to share collections
      self.listShares = new ShareCollection('/shares/' + self.listModel.id + '/shares');
      self.friends = new ContactCollection('/contacts/friends');
      self.contacts = new ContactCollection('/contacts/all');
      self.services = new ServiceCollection('/services/all');

      _super.initialize.apply(self, arguments);

      self.when(
        runtime.whenSharesIsReady(),
        runtime.whenContactsIsReady(),
        runtime.whenServicesIsReady()
      ).then(self.deferredInit, self, options);

      // bind to new shares from the collection
      self.bindTo(self.listShares, 'remove', self.onRemoveShare);
      self.bindTo(self.listShares, 'change add remove', self.checkMembersVisibility);
    },

    'deferredInit': function (options) {

      var self = this;

      // if the list has no shares, it's not shared
      self.isOwner && !self.listShares.length && self.markAsUnshared();

      if (options && options.token) {
        self.bindTo(runtime, 'services:ready', function () {

          _facebook.registerFacebookService(options.token);
        });
      }
    },

    'checkMembersVisibility': function () {

      var self = this;
      var share = self.listShares.models[0];

      if (share && share.attributes.sender.id === runtime.user.id) {
        self.$('.members').removeClass('hidden');
        self.$('.invite').addClass('hidden');
      }
    },

    'render': function () {

      var self = this;
      self.when(
        runtime.whenSharesIsReady(),
        runtime.whenContactsIsReady(),
        runtime.whenServicesIsReady()
      ).then(self.deferredRender, self);
      return self;
    },

    'deferredRender': function () {

      var self = this;
      _super.render.apply(self, arguments);

      var isUnregistered = runtime.user.isUnregistered();

      var membersView = self.addSubview(new SharingListMembersView({
        'list': self.listModel,
        'share': self.shareModel
      }), 'shareMembersView');

      self.el.appendChild(membersView.render().el);

      if (isUnregistered) {
        return;
      }

      var invitesView = self.addSubview(new SharingListInvitesView({
        'list': self.listModel,
        'share': self.shareModel
      }), 'shareInvitesView');

      self.el.appendChild(invitesView.render().el);

      // make life simpler
      self.$listMembers = self.$el.find('.list-members');
      self.$contacts = self.$el.find('.contacts');

      // show correct page
      if (!self.listShares.length && self.friends.length) {
        self.$('.page.members').addClass('hidden');
        self.$('.page.invite').removeClass('hidden');
      }

      // set correct popover animation class, if existing
      if (self.options.trigger === 'actionBar') {
        self.popover.$el.addClass('from-actionbar');
      }
      else if (self.options.trigger === 'listNavBar') {
        self.popover.$el.addClass('from-navbar');
      }
    },

    'togglePages': function () {

      var self = this;
      self.$('.page').toggleClass('hidden');
      if (self.$('.members').hasClass('hidden')) {
        self.$el.find('.invite input').select();
      }

      var action = self.$('.page.members').hasClass('hidden') ? 'clickInviteFriends' : 'clickBackToMembers';
      runtime.trigger('analytics:ShareDialog:' + action);
    },

    'backtoInvites': function () {

      var self = this;
      self.$('.tab.recent-shares').removeClass('hidden');
      self.$('.tab.invite-person').addClass('hidden');
    },

    'showListMembers': function () {

      this.$('.list-members').removeClass('hidden');
    },

    'onRemoveShare': function(model) {

      var self = this;
      // this cleans up the checkbox success
      self.$el.find('li[rel="' + model.attributes.recipient.id + '"] .invite-person').removeClass('hidden');
      self.$el.find('li[rel="' + model.attributes.recipient.id + '"] .invite-person-success').addClass('hidden');

      self.isOwner && !self.listShares.length && self.markAsUnshared();
    },

    'markAsUnshared':  function() {

      var self = this;
      self.listModel.unset('share_id').save();
    }
  });
});
define('templates/listToolbar',['vendor/handlebars'], function(H) {
var name = 'listToolbar';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<a class=\"button dark listToolbar-toggle-lists\"> <span class=\"icon list-list\"></span> </a> <h1 class=\"listToolbar-title\"></h1> <a class=\"button dark listToolbar-toggle-sharepopover hidden\"> <span class=\"icon list-sharing\"></span> </a>";
  });
});
define('styles/listToolbar',[],function() { return {'name': 'listToolbar', 'styles': "#wunderlist-base .listToolbar{display:none;-webkit-backface-visibility:hidden;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(41,41,41,0.75)), color-stop(1, rgba(21,21,21,0.8)));background-image:-webkit-linear-gradient(top, rgba(41,41,41,0.75) 0, rgba(21,21,21,0.8) 100%);background-image:-moz-linear-gradient(top, rgba(41,41,41,0.75) 0, rgba(21,21,21,0.8) 100%);background-image:-o-linear-gradient(top, rgba(41,41,41,0.75) 0, rgba(21,21,21,0.8) 100%);background-image:-ms-linear-gradient(top, rgba(41,41,41,0.75) 0, rgba(21,21,21,0.8) 100%);background-image:linear-gradient(top, rgba(41,41,41,0.75) 0, rgba(21,21,21,0.8) 100%);height:37px;border-bottom:1px solid #000;-webkit-box-shadow:0 1px 2px rgba(0,0,0,0.25);box-shadow:0 1px 2px rgba(0,0,0,0.25);z-index:100;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;z-index:2000;zoom:1} #wunderlist-base .listToolbar:before,#wunderlist-base .listToolbar:after{content:\"\";display:table} #wunderlist-base .listToolbar:after{clear:both} #wunderlist-base .listToolbar-title{white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis;color:#f7f6f6;text-align:center;position:absolute;left:60px;right:60px;font-size:23px;text-shadow:0 1px 0 #000;margin-top:2px} #wunderlist-base .listToolbar-toggle-sharepopover{float:right;margin-right:0} html[dir=rtl] #wunderlist-base .listToolbar a{right:10px !important;left:auto !important;float:right} " }; });
define('views/Toolbar/ListToolbarView',[

  'application/runtime',
  'wunderbits/WBView',
  'wunderbits/mixins/WBBindableMixin',

  'views/Sharing/SharingListPopoverView',

  'template!listToolbar',
  'style!listToolbar'

], function (runtime, WBView, WBBindableMixin, SharingListPopoverView, listToolbarTemplate, listToolbarStyle, undefined) {

  

  var _ = runtime._;

  var _super = WBView.prototype;

  return WBView.extend({

    'template': listToolbarTemplate,

    'className': 'listToolbar',

    'styles': [listToolbarStyle],

    'events': {

      'click': '_onClickOrTap',
      'click .listToolbar-toggle-lists': '_throttledToggleLists',
      'click .listToolbar-toggle-sharepopover': '_throttledToggleSharePopover',

      'touchstart': '_onClickOrTap',
      'touchstart .listToolbar-toggle-lists': '_throttledToggleLists',
      'touchstart .listToolbar-toggle-sharepopover': '_throttledToggleSharePopover'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.bindTo(runtime, 'search:start', self.updateSearchTitle);

      // debouncers
      self._throttledToggleLists = _.throttle(self.toggleLists, 1);
      self._throttledToggleSharePopover = _.throttle(self.toggleSharePopover, 1);
    },

    'setTitle': function (title, listModel) {

      var self = this;
      self.$('.listToolbar-title').html(title);
      self.renderLabels();
      self.list = listModel;
    },

    'updateSearchTitle': function (term) {

      var self = this;

      if (term) {

        if (!self.oldTitle) {
          self.oldTitle = self.$('.listToolbar-title').html();
        }

        self.setTitle(_.escape(term));
      }
      else {

        self.setTitle(self.oldTitle);
        delete self.oldTitle;
      }

      self.toggleShareButton(false);
    },

    'toggleShareButton': function (isShown, list) {

      var self = this;

      if (self._listIsSavedTimeout) {
        self.unbindFrom(self._listIsSavedTimeout);
      }

      if (list && list.isSavedSearch()) {
        isShown = false;
      }

      // if this is a brand new list, sharing is not possible
      // until it has been synced and has an online Id
      if (isShown && list && !list.has('online_id')) {

        self.$('.listToolbar-toggle-sharepopover').toggleClass('hidden', true);

        self._listIsSavedTimeout = self.bindOnceTo(runtime, 'sync:end', function () {
          self.toggleShareButton(isShown, list);
        });
      }
      else {

        self.$('.listToolbar-toggle-sharepopover').toggleClass('hidden', !isShown);
      }
    },

    'toggleLists': function (e) {

      runtime.trigger('sidebar:toggle');
      runtime.trigger('sidebar:editmode:end');

      if (runtime.env.isMicro() || runtime.env.isMini()) {

        runtime.trigger('detail:close');
        runtime.trigger('focus:set', 'browser');
        runtime.trigger('tasks:selectFirst', {
          'force': false
        });
      }
      else if (runtime.env.isMedium()) {

        runtime.trigger('focus:set', 'browser');
        runtime.trigger('tasks:selectFirst', {
          'force': false
        });
      }

      e.stopPropagation();
      e.preventDefault();
    },

    'toggleSharePopover': function (e) {

      var self = this;
      var listRoute = 'lists/' + self.list.id;
      var shareRoute = listRoute + '/share';

      if (runtime.currentRoute() === shareRoute) {

        runtime.trigger('route:' + listRoute);
      }
      else {

        runtime.trigger('route:' + shareRoute);
      }

      e.stopPropagation();
      e.preventDefault();
    },

    '_onClickOrTap': function () {

      runtime.trigger('browser:toolbar:clicked');
    }
  });
});
define('views/Toolbar/Controllers/ActionBarViewController',[

  'application/runtime',
  'wunderbits/WBViewController'

], function (
  runtime,
  WBViewController,
  undefined
) {

  

  var $ = runtime.$;

  return WBViewController.extend({

    'implements': {

      'toggle:menu': 'toggleMenu',
      'delete:task': 'onDelete',
      'share:list': 'onShareList',

      'flashcards:run': 'runFlashCards'
    },

    'toggleMenu': function (e) {

      this.view.toggleMenu(e);
    },

    'onDelete': function (e) {

      if (!$(e.target).hasClass('disabled')) {

        runtime.trigger('tasks:delete');
        runtime.trigger('analytics:TaskActionBar:DeleteSelectedTasks');
      }
    },

    'onShareList': function () {

      var shareRoute = 'lists/' + runtime.listId + '/action/share';
      var isShareRouteActive = runtime.currentRoute() === shareRoute;

      if (!this.view.isSharingEnabled() || isShareRouteActive) {
        return;
      }

      runtime.trigger('route:' + shareRoute);
      runtime.trigger('analytics:TaskActionBar:clickShareList');
    },

    'runFlashCards': function () {

      if (runtime.isLabsEnabled('flash_cards')) {

        runtime.trigger('route:labs/flash-cards/' + runtime.listId);
      }
    }
  });
});
define('views/Toolbar/Controllers/ActionBarEmailController',[

  'application/runtime',
  'wunderbits/WBViewController'

], function (
  runtime,
  WBViewController,
  undefined
) {

  

  return WBViewController.extend({

    'implements': {

      'email:list': 'emailList',
      'email:tasks': 'emailSelectedTasks'
    },

    'emailList': function () {

      var self = this;
      var view = self.view;

      runtime.trigger('email:list', runtime.listId);
      view.collapseMenu();
      runtime.trigger('analytics:TaskActionBar:EmailList');
    },

    'emailSelectedTasks': function () {

      var self = this;
      var view = self.view;
      var taskIds = view.getSelectedTasks();

      if (taskIds.length) {
        runtime.trigger('email:list', runtime.listId, taskIds);
        runtime.trigger('analytics:TaskActionBar:EmailSelectedTasks');
      }

      view.collapseMenu();
    }
  });
});
define('views/Toolbar/Controllers/ActionBarPrintController',[

  'application/runtime',
  'wunderbits/WBViewController'

], function (
  runtime,
  WBViewController,
  undefined
) {

  

  var _ = runtime._;

  return WBViewController.extend({

    'implements': {

      'print:list': 'printList',
      'print:tasks': 'printSelected'
    },

    'printList': function (e, onlySelected) {

      // collapse now, because window.print stops script execution
      this.view.collapseMenu();

      var printType = (onlySelected ? 'selectedTasks' : 'list');

      // setup a forced print type
      runtime.trigger('set:printType', printType);

      runtime.trigger('realtime:disconnect');

      // chrome will not run window.print until all open network connections are closed
      // shut down realtime and resume after calling print
      _.delay(function () {

        window.print();

        _.delay(function () {
          runtime.trigger('realtime:reconnect');
          // reset print forcer
          runtime.trigger('set:printType', null);
        }, 1000);
      }, 1000);

      runtime.trigger('analytics:TaskActionBar:PrintList', printType);
    },

    'printSelected': function (e) {

      var self = this;

      if (!self.view.isParentLIDisabled(e)) {

        var onlySelected = true;
        self.printList(e, onlySelected);
      }
    }
  });
});
define('views/Toolbar/Controllers/ActionBarKeysController',[

  'application/runtime',
  'wunderbits/helpers/keycodes',
  'wunderbits/WBViewController'

], function (
  runtime,
  Keycodes,
  WBViewController,
  undefined
) {

  

  var $ = runtime.$;

  return WBViewController.extend({

    'implements': {

      'keydown': 'handleKeys'
    },

    'handleKeys': function (e) {

      var self = this;
      var view = self.view;
      var which = e.which;
      var $target = $(e.target);

      if (which === Keycodes.tab) {
        self.handleTab(e, $target);
      }
      else if (which === Keycodes.enter) {
        self.handleEnter(e, $target);
      }
      else if (which === Keycodes.esc) {
        view.focusMenuItemToggle($target);
        self.stopItCold(e);
      }
    },

    'handleEnter': function (e, $target) {

      var self = this;

      var $parentContainer = $target.closest('div');
      if ($parentContainer.hasClass('actionBar-top')) {
        self.handleMenuItemEnter(e, $target);
      }
      else if ($parentContainer.hasClass('actionBar-bottom')) {
        self.handleMenuBarEnter(e, $target);
      }
    },

    'handleMenuItemEnter': function (e, $target) {

      var self = this;
      var view = self.view;
      var isDisabled = $target.hasClass('disabled');
      !isDisabled && $target.find('a').click();
      view.focusMenuItemToggle($target);
      self.stopItCold(e);
    },

    'handleMenuBarEnter': function (e, $target) {

      var self = this;
      $target.click();
      self.stopItCold(e);
    },

    'handleTab': function (e, $target) {

      var self = this;

      if ($target.hasClass('first-menu-item') || $target.hasClass('last-menu-item')) {
        self.handleMenuItemTab(e, $target);
      }
      else if (e.shiftKey && $target.hasClass('first-tab')) {

        // ewwww this is dirty :(
        runtime.trigger('focus:set', 'browser');
        $($('.task-list').find('li.active').get(0)).focus();
        self.stopItCold(e);
      }
      else if (!e.shiftKey && $target.hasClass('last-tab')) {

        var id = $('.task-list').find('li.active').attr('rel');

        // route to new completed focus route
        if (id) {
          runtime.trigger('route:tasks/' + id + '/title/focus');
        }
        else {
          runtime.trigger('route:' + runtime.currentRoute());
        }
        self.stopItCold(e);
      }
    },

    'handleMenuItemTab': function (e, $target) {

      var self = this;
      var view = self.view;

      if (e.shiftKey && $target.hasClass('first-menu-item')) {
        view.focusLastMenuItem($target);
        self.stopItCold(e);
      }
      else if (!e.shiftKey && $target.hasClass('last-menu-item')) {
        view.focusFirstMenuItem($target);
        self.stopItCold(e);
      }
    },

    'stopItCold': function (e) {

      e.preventDefault();
      e.stopPropagation();
    }
  });
});
define('helpers/destructiveSorting',[

  'application/runtime',

  'collections/AssignableCollection',
  'collections/ListCollection',
  'collections/ShareCollection',
  'collections/TaskCollection',

  'helpers/collectionSorting',
  'helpers/Positions',

  'vendor/moment',

  'wunderbits/WBSingleton'

], function (
  runtime,
  AssignableCollection, ListCollection, ShareCollection, TaskCollection,
  collectionSorting, PositionsHelper,
  moment,
  WBSingleton,
  undefined
) {

  

  var _ = runtime._;

  var sorts = ['alpha', 'dueDate', 'assignee', 'position'];

  return WBSingleton.extend({

    'init': function () {

      runtime.on('destructive:sort', this.resortCollection);
    },

    'resortCollection': function (collection, sort, listID) {

      var self = this;
      if (!collection) {
        return;
      }

      var models;
      if (collection.models[0] && /task/i.test(collection.models[0].attributes.type)) {
        models = collection.where({'completed': false});
      }
      else {
        models = _.clone(collection.models);
      }

      // empty collection :D
      collection.remove(models, {'fromDestructiveSort': true});

      // sort the array
      switch (sort) {

      case 'alpha':
        models = self.sortByAlpha(models);
        break;

      case 'dueDate':
        models = self.sortByDueDate(models);
        break;

      case 'assignee':
        models = self.sortByAssignee(models, listID);
        break;

      case 'position':
        models = self.sortByPosition(models);
        break;
      }

      // change positions - dis is destructive - no going back now :D
      var position = 0;
      _.each(models, function (model) {

        model.save({

          'position': position
        });

        position += 10;
      });

      collection.add(models, {
        'bypassSort': true,
        'fromDestructiveSort': true
      });

      return models;
    },

    'resortList': function (listID, sort) {

      var self = this;

      var collection = new TaskCollection('/lists/' + listID + '/tasks');
      if (!collection.models.length || _.indexOf(sorts, sort) < 0) {
        // nothing to do
        return;
      }

      var models = self.resortCollection(collection, sort, listID);

      // for testability
      return models;
    },

    'resortSortableLists': function (sort) {

      var self = this;

      var collection = new ListCollection('/lists/all/sortable');

      if (!collection.models.length || _.indexOf(sorts, sort) < 0) {
        // nothing to do
        return;
      }

      var models = self.resortCollection(collection, sort);

      // for testability
      return models;

    },

    // for normalizing collections when they contain duplicate positions, or broken positions
    'sortByPosition': function (models) {

      models.sort(function (a, b) {

        var aPosition = a.attributes.position;
        var bPosition = b.attributes.position;

        // sort by position if valid and not the same
        if (PositionsHelper.isValidPosition(aPosition) && PositionsHelper.isValidPosition(bPosition) && aPosition !== bPosition) {

          return aPosition < bPosition ? -1 : aPosition > bPosition ? 1 : 0;
        }
        else {
          // fallback to ids
          return a.id < b.id ? -1 : a.id > b.id ? 1 : 0;
        }
      });

      return models;
    },

    'sortByAlpha': function (models) {

      var titleCache = {};
      function getTitle (model) {

        var cachedVal = titleCache[model.id];
        if (cachedVal !== undefined) {

          return cachedVal;
        }
        else {

          titleCache[model.id] = model.attributes.title.toLowerCase();
          return titleCache[model.id];
        }
      }

      // When sorting alphabetcially, all items within a list will sorted from A to Z.
      models.sort(function (a, b) {

        var aTitle = getTitle(a);
        var bTitle = getTitle(b);

        if (aTitle === bTitle) {

          aTitle = a.attributes.position;
          bTitle = b.attributes.position;
        }

        return aTitle > bTitle ? 1 : aTitle < bTitle ? -1 : 0;
      });

      return models;
    },

    'sortByDueDate': function (models) {
      // Sorting by due date will sort all items with a set due date from latest to oldest.
      // All items without a set date, will be sorted by creation date underneath (oldest to latest).

      var datesCache = {

        'created_at': {},
        'due_date': {}
      };

      function getDate (model, type) {

        var cachedVal = datesCache[type][model.id];
        if (cachedVal !== undefined) {

          return cachedVal;
        }
        else {

          datesCache[type][model.id] = model.attributes[type] ? moment(model.attributes[type]).valueOf() : undefined;
          return datesCache[type][model.id];
        }
      }

      var modelsWithDueDate = _.filter(models, function (model) {

        return !!model.attributes.due_date;
      });

      var modelsWithoutDueDate = _.filter(models, function (model) {

        return !model.attributes.due_date;
      });

      modelsWithDueDate.sort(function (a, b) {

        var aVal = getDate(a, 'due_date');
        var bVal = getDate(b, 'due_date');

        if (aVal === bVal) {

          aVal = a.attributes.position;
          bVal = b.attributes.position;
        }

        return aVal > bVal ? 1 : aVal < bVal ? -1 : 0;
      });

      modelsWithoutDueDate.sort(function (a, b) {

        var aVal, bVal;

        if (!a.attributes.created_at || !b.attributes.created_at) {

          aVal = a.attributes.created_at;
          bVal = b.attributes.created_at;
          return !aVal && bVal ? 1 : aVal && !bVal ? -1 : 0;
        }
        else {

          aVal = getDate(a, 'created_at');
          bVal = getDate(b, 'created_at');

          if (aVal === bVal) {

            aVal = a.attributes.position;
            bVal = b.attributes.position;
          }

          return aVal > bVal ? 1 : aVal < bVal ? -1 : 0;
        }
      });

      // make them kiss
      models = modelsWithDueDate.concat(modelsWithoutDueDate);
      return models;
    },

    'sortByAssignee': function (models, listID) {
      // Assignees will be sorted from A to Z and within one assignee same like we sort due dates.
      // All items without assignees, will be sorted first by due date then by creation date (oldest to latest).
      var self = this;

      var nameCache = {};
      function getName (model) {

        var cachedVal = nameCache[model.id];
        if (cachedVal !== undefined) {

          return cachedVal;
        }
        else {

          nameCache[model.id] = self.getAssigneeNameFromId(model.attributes.assignee_id, listID).toLowerCase();
          return nameCache[model.id];
        }
      }

      var modelsWithAssignee = _.filter(models, function (model) {

        return !!model.attributes.assignee_id;
      });

      var modelsWithoutAssignee = _.filter(models, function (model) {

        return !model.attributes.assignee_id;
      });

      modelsWithAssignee.sort(function (a, b) {

        var aName = getName(a);
        var bName = getName(b);

        if (aName === bName) {

          aName = a.attributes.position;
          bName = b.attributes.position;
        }

        return aName > bName ? 1 : aName < bName ? -1 : 0;
      });

      modelsWithoutAssignee = self.sortByDueDate(modelsWithoutAssignee);

      models = modelsWithAssignee.concat(modelsWithoutAssignee);
      return models;
    },

    'getAssigneeNameFromId': function (assigneeID, listID) {
      // returns name from assigneeID by looking up in assignables collection
      var assigneesCollection = new AssignableCollection('/assignables/' + listID);
      return assigneesCollection.where({'assignable_id': assigneeID})[0].attributes.name;
    }
  });
});
define('views/Toolbar/Controllers/ActionBarSortController',[

  'application/runtime',

  'helpers/destructiveSorting',

  'wunderbits/WBViewController'

], function (
  runtime,
  DestructiveSorting,
  WBViewController,
  undefined
) {

  

  var _ = runtime._;

  var _super = WBViewController.prototype;

  return WBViewController.extend({

    'implements': {

      'sort:alpha': 'debouncedSortAlpha',
      'sort:date': 'debouncedSortDate',
      'sort:assignee': 'debouncedSortAssignee'
    },

    'initialize': function () {

      var self = this;

      self.debouncedSortAlpha = _.debounce(self.sortAlpha, 250);
      self.debouncedSortDate = _.debounce(self.sortDate, 250);
      self.debouncedSortAssignee = _.debounce(self.sortAssignee, 250);

      _super.initialize.apply(self, arguments);
    },

    'sortAlpha': function () {

      DestructiveSorting.resortList(runtime.listId, 'alpha');
      runtime.trigger('analytics:TaskActionBar:Sort', 'alpha');
      this.view.collapseMenu();
    },

    'sortDate': function () {

      var self = this;
      var view = self.view;

      var isEnabled = view.isDateSortingEnabled();
      if (isEnabled) {
        DestructiveSorting.resortList(runtime.listId, 'dueDate');
        runtime.trigger('analytics:TaskActionBar:Sort', 'dueDate');
        view.collapseMenu();
      }
    },

    'sortAssignee': function () {

      var self = this;
      var view = self.view;
      
      var isEnabled = view.isAssigneeSortingEnabled();
      if (isEnabled) {
        DestructiveSorting.resortList(runtime.listId, 'assignee');
        runtime.trigger('analytics:TaskActionBar:Sort', 'assignee');
        view.collapseMenu();
      }
    }
  });
});
define('templates/actionBar',['vendor/handlebars'], function(H) {
var name = 'actionBar';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  
  return " <a class=\"icon action-flash-cards\" role=\"button\" tabindex=\"0\" aria-label=\"flash cards\"></a> <span class=\"icon action-divider\"></span> ";
  }

  buffer += "<div class=\"actionBar-top\"> <ul class=\"actionBar-top-email\"> <li tabindex=\"0\" class=\"first-menu-item\" data-key-aria-label=\"button_email_list\"> <a class=\"actionBar-top-email-all\"> <span class=\"icon action-list\"></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_email_list", options) : helperMissing.call(depth0, "localized", "button_email_list", options)))
    + " </a> </li> <li tabindex=\"0\" class=\"last-menu-item\" data-key-aria-label=\"actionbar_email_selected_item\"> <a class=\"actionBar-top-email-selected\"> <span class=\"icon action-list-selected\"></span> <span class=\"email-items-label\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "actionbar_email_selected_item", options) : helperMissing.call(depth0, "localized", "actionbar_email_selected_item", options)))
    + "</span> </a> </li> </ul> <ul class=\"actionBar-top-print\"> <li tabindex=\"0\" class=\"first-menu-item\" data-key-aria-label=\"button_print_list\"> <a class=\"actionBar-top-print-all\"> <span class=\"icon action-list\"></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_print_list", options) : helperMissing.call(depth0, "localized", "button_print_list", options)))
    + " </a> </li> <li tabindex=\"0\" class=\"last-menu-item\" data-key-aria-label=\"actionbar_print_selected_item\"> <a class=\"actionBar-top-print-selected\"> <span class=\"icon action-list-selected\"></span> <span class=\"print-items-label\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "actionbar_print_selected_item", options) : helperMissing.call(depth0, "localized", "actionbar_print_selected_item", options)))
    + "</span> </a> </li> </ul> <ul class=\"actionBar-top-sort\"> <li tabindex=\"0\" class=\"first-menu-item\" data-key-aria-label=\"actionbar_sort_alphabetically\"> <a class=\"actionBar-top-sort-az\"> <span class=\"icon action-sort-az\"></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "actionbar_sort_alphabetically", options) : helperMissing.call(depth0, "localized", "actionbar_sort_alphabetically", options)))
    + " </a> </li> <li tabindex=\"0\" data-key-aria-label=\"actionbar_sort_due_date\"> <a class=\"actionBar-top-sort-date\"> <span class=\"icon action-sort-date\"></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "actionbar_sort_due_date", options) : helperMissing.call(depth0, "localized", "actionbar_sort_due_date", options)))
    + " </a> </li> <li tabindex=\"0\" class=\"last-menu-item\" data-key-aria-label=\"actionbar_sort_assignee\"> <a class=\"actionBar-top-sort-assign\"> <span class=\"icon action-sort-assign\"></span> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "actionbar_sort_assignee", options) : helperMissing.call(depth0, "localized", "actionbar_sort_assignee", options)))
    + " </a> </li> </ul> </div> <div class=\"actionBar-bottom\"> <a class=\"icon action-share first-tab\" role=\"button\" tabindex=\"0\" data-key-aria-label=\"voiceover_share_list\"></a> <span class=\"icon action-divider\"></span> <a class=\"icon action-email\" data-menu=\"email\" role=\"button\" tabindex=\"0\" data-key-aria-label=\"button_email_list\"></a> <span class=\"icon action-divider\"></span> <a class=\"icon action-print\" data-menu=\"print\" role=\"button\" tabindex=\"0\" data-key-aria-label=\"button_print_list\"></a> <span class=\"icon action-divider\"></span> <a class=\"icon action-sort\" data-menu=\"sort\" role=\"button\" tabindex=\"0\" data-key-aria-label=\"aria_sort_list\"></a> <span class=\"icon action-divider\"></span> ";
  stack2 = helpers['if'].call(depth0, depth0.labsFlashCardsEnabled, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " <a class=\"icon action-delete last-tab\" role=\"button\" tabindex=\"0\" data-key-aria-label=\"button_delete\"></a> </div>";
  return buffer;
  });
});
define('styles/actionBar',[],function() { return {'name': 'actionBar', 'styles': ".actionBar{opacity:1;-ms-filter:none;filter:none;position:absolute;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:0 !important;z-index:999;bottom:20px;left:50%;width:190px;margin-left:-96px;-webkit-transition:opacity 200ms ease-in;-moz-transition:opacity 200ms ease-in;-o-transition:opacity 200ms ease-in;-ms-transition:opacity 200ms ease-in;transition:opacity 200ms ease-in;} .actionBar.expanded .actionBar-top{height:102px;} .actionBar.expanded .actionBar-top ul.active{z-index:1;} .actionBar.expanded .actionBar-top ul.active li{opacity:1;-ms-filter:none;filter:none} .actionBar.expanded .actionBar-bottom a{opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60);} .actionBar.expanded .actionBar-bottom a.active{opacity:1;-ms-filter:none;filter:none} .actionBar.expanded.big .actionBar-top{height:136px} .actionBar-top,.actionBar-bottom{position:absolute;bottom:0;height:34px;width:100%} .actionBar-top{-webkit-border-radius:4px;border-radius:4px;-webkit-box-shadow:0 2px 7px rgba(0,0,0,0.5),0 0 0 1px rgba(0,0,0,0.9);box-shadow:0 2px 7px rgba(0,0,0,0.5),0 0 0 1px rgba(0,0,0,0.9);background:rgba(31,31,31,0.9);-webkit-transition:height 120ms linear;-moz-transition:height 120ms linear;-o-transition:height 120ms linear;-ms-transition:height 120ms linear;transition:height 120ms linear;} .actionBar-top ul{position:absolute;z-index:0;top:0;width:100%;bottom:35px;overflow:hidden;-webkit-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0;} .actionBar-top ul.active li.disabled{opacity:.4 !important;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=40)\" !important;filter:alpha(opacity=40) !important;} .actionBar-top ul.active li.disabled a{cursor:default} .actionBar-top li{position:relative;height:30px;padding:2px !important;opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);-webkit-transition:opacity 200ms linear;-moz-transition:opacity 200ms linear;-o-transition:opacity 200ms linear;-ms-transition:opacity 200ms linear;transition:opacity 200ms linear;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.05),inset 0 -1px 0 rgba(0,0,0,0.3);box-shadow:inset 0 1px 0 rgba(255,255,255,0.05),inset 0 -1px 0 rgba(0,0,0,0.3);} .actionBar-top li:last-child{-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.05);box-shadow:inset 0 1px 0 rgba(255,255,255,0.05)} .actionBar-top li:focus{outline:none;} .actionBar-top li:focus a{background:#2d9ef8;text-shadow:0 -1px 0 rgba(0,0,0,0.4)} .actionBar-top li a{display:block;font-size:12px;padding:7px 7px 7px 34px;color:#fff;text-shadow:0 -1px 0 #000;-webkit-border-radius:3px;border-radius:3px;} .actionBar-top li a:hover,.actionBar-top li a:focus{outline:none;background:#2d9ef8;text-shadow:0 -1px 0 rgba(0,0,0,0.4)} .actionBar-top li a span.icon{position:absolute;left:8px;top:6px} .actionBar-bottom{-webkit-box-shadow:inset 0 0 0 1px rgba(255,255,255,0.06);box-shadow:inset 0 0 0 1px rgba(255,255,255,0.06);background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(255,255,255,0.24)), color-stop(1, rgba(255,255,255,0)));background-image:-webkit-linear-gradient(top, rgba(255,255,255,0.24) 0, rgba(255,255,255,0) 100%);background-image:-moz-linear-gradient(top, rgba(255,255,255,0.24) 0, rgba(255,255,255,0) 100%);background-image:-o-linear-gradient(top, rgba(255,255,255,0.24) 0, rgba(255,255,255,0) 100%);background-image:-ms-linear-gradient(top, rgba(255,255,255,0.24) 0, rgba(255,255,255,0) 100%);background-image:linear-gradient(top, rgba(255,255,255,0.24) 0, rgba(255,255,255,0) 100%);-webkit-border-radius:4px;border-radius:4px;text-align:center;font-size:0;} .actionBar-bottom a{position:relative;z-index:2;display:inline-block;margin:1px 2px 0 2px;} .actionBar-bottom a:focus{outline:none} .actionBar-bottom a.action-share{margin:1px 1px 0 3px} .actionBar-bottom a.disabled{opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60);cursor:default} " }; });
define('views/Toolbar/ActionBarView',[

  'application/runtime',

  'collections/ListCollection',
  'collections/TaskCollection',

  'wunderbits/WBViewPresenter',

  './Controllers/ActionBarViewController',
  './Controllers/ActionBarEmailController',
  './Controllers/ActionBarPrintController',
  './Controllers/ActionBarKeysController',
  './Controllers/ActionBarSortController',

  'template!actionBar',
  'style!actionBar'

], function (

  runtime,
  ListCollection, TaskCollection,
  WBViewPresenter,
  ActionBarViewController, ActionBarEmailController,
  ActionBarPrintController, ActionBarKeysController, ActionBarSortController,
  actionBarTemplate, actionBarStyle,
  undefined

) {

  

  var $ = runtime.$;
  var _ = runtime._;

  var _super = WBViewPresenter.prototype;

  var _ariaDisabled = 'aria-disabled';

  return WBViewPresenter.extend({

    'template': actionBarTemplate,

    'className': 'actionBar',

    'styles': [actionBarStyle],

    'implements': [
      ActionBarViewController,
      ActionBarEmailController,
      ActionBarPrintController,
      ActionBarKeysController,
      ActionBarSortController
    ],

    'emits': {

      'click .actionBar-bottom a': 'toggle:menu',

      'click .actionBar-top-email-all': 'email:list',
      'click .actionBar-top-email-selected': 'email:tasks',

      'click .actionBar-top-print-all': 'print:list',
      'click .actionBar-top-print-selected': 'print:tasks',

      'click .actionBar-top-sort-az': 'sort:alpha',
      'click .actionBar-top-sort-date': 'sort:date',
      'click .actionBar-top-sort-assign': 'sort:assignee',

      'click .actionBar-bottom a.action-share': 'share:list',
      'click .actionBar-bottom a.action-delete': 'delete:task',
      'click .actionBar-bottom a.action-flash-cards': 'flashcards:run',

      'keydown': 'keydown'
    },

    'observes': {

      'runtime': {

        'taskActions:show': 'showBar',
        'taskActions:hide': 'hideBar',
        'taskActions:focus': 'focusStart',
        'browser:render': 'onRenderTaskBrowser',
        'browser:selectionChanged': [
          'updateLabelsThatDependOnTaskSelectionCounts',
          'updateTrashDisabled',
          'updateSortDisabled'
        ]
      }
    },

    'initialize': function() {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.updateIconMargins = _.throttle(self.updateIconMargins, 250);
      self.checkWidths = _.throttle(self.checkWidths, 250);
      self.debouncedUpdateDisabled = _.debounce(self.updateDisabled, 250);
    },

    'renderData': {

      'isChromeApp': null,
      'labsFlashCardsEnabled': null
    },

    'formatData': function () {

      var self = this;
      var data = _super.formatData.apply(self, arguments);

      data.isChromeApp = runtime.env.isChromeApp();
      data.labsFlashCardsEnabled = runtime.isLabsEnabled('flash_cards');

      return data;
    },

    'render': function () {

      var self = this;

      _super.render.apply(self, arguments);

      self.defer(function () {

        runtime.trigger('tasks:updateSelectionCount');
        self.updateLabelsThatDependOnTaskSelectionCounts();

        self.checkWidths();
        self.on('localized', self.checkWidths);
      });

      self.delegateEvents();

      return self;
    },

    'checkWidths': function () {

      var self = this;
      var widths = [];
      var normalWidth = 190;
      var buffer = 20;

      var $clone = self.$('.actionBar-top').clone();
      // setup to make widths measurable:
      $clone.find('ul').css({'width': 'auto', 'position': 'absolute'});
      $clone.find('ul li').css({'white-space': 'pre'});
      $clone.css({'visibility': 'hidden'});

      self.el.appendChild($clone[0]);
      $clone.find('ul').each(function () {

        widths.push($(this).width());
      });

      var max = _.max(widths);
      var newWidth = max > normalWidth ? max + buffer : normalWidth;

      self.$el.css({
        'width': newWidth,
        'margin-left': -Math.floor((newWidth)/2)
      });

      self.updateIconMargins(newWidth);

      $clone.remove();
    },

    'updateIconMargins': function (totalSpace) {

      var self = this;

      var $dividers = self.$('.actionBar-bottom .action-divider');
      var $triggerIcons = self.$('.actionBar-bottom a.icon');

      var dividersCount = $dividers.length;
      var triggerCount = $triggerIcons.length;
      var dividerWidth = $($dividers[0]).width();
      var triggerWidth = $($triggerIcons[0]).width();

      var availableSpace = totalSpace - (dividerWidth * dividersCount) - (triggerWidth * triggerCount);

      var margin = availableSpace / (triggerCount * 2);

      $triggerIcons.css({
        'margin-left': margin + 'px',
        'margin-right': margin + 'px'
      });
    },

    'showForFirstTime': function () {

      var self = this;

      if (!self.$el.hasClass('visible')) {

        self.barTimeout && clearTimeout(self.barTimeout);
        self.showBar();
        self.timingOut = true;
        self.barTimeout = setTimeout(function () {

          if (self.destroyed) {
            return;
          }

          self.timingOut = false;

          if (self.$el.hasClass('visible')) {
            !self.userOpenned && self.hideBar();
          }
        }, 1200);
      }
    },

    'onRenderTaskBrowser': function (listId) {

      var self = this;

      if (listId !== self.lastListId && !runtime.env.isTouchDevice()) {

        self.showForFirstTime();
        self.updateDisabled(listId);
        self.lastListId = listId;

        self.tasksCollectionBind && self.unbindFrom(self.tasksCollectionBind);

        var tasks = new TaskCollection('/lists/' + listId + '/tasks');
        self.tasksCollectionBind = self.bindTo(tasks, 'add remove change', self.debouncedUpdateDisabled);
      }
    },

    'updateLabelsThatDependOnTaskSelectionCounts': function () {

      var self = this;

      var $printLabel = self.$('.print-items-label');
      var $emailLabel = self.$('.email-items-label');

      if (runtime.selectedTaskCount > 1) {
        $printLabel.html(runtime.language.getLabel('actionbar_print_$_selected_items_plural', runtime.selectedTaskCount).toString());
        $emailLabel.html(runtime.language.getLabel('actionbar_email_$_selected_items_plural', runtime.selectedTaskCount).toString());
      }
      else {
        $printLabel.html(runtime.language.getLabel('actionbar_print_selected_item').toString());
        $emailLabel.html(runtime.language.getLabel('actionbar_email_selected_item').toString());
      }

      $printLabel.parents('li').toggleClass('disabled', !runtime.selectedTaskCount).attr(_ariaDisabled, !runtime.selectedTaskCount);
      $emailLabel.parents('li').toggleClass('disabled', !runtime.selectedTaskCount).attr(_ariaDisabled, !runtime.selectedTaskCount);

      if (runtime.isLabsEnabled('flash_cards')) {
        // self.$('.flash-cards-selected').parents('li').toggleClass('disabled', !runtime.selectedTaskCount);
        // ALWAYS DISABLED FOR NOW, implement the selection stuff later
        self.$('.flash-cards-selected').parents('li').toggleClass('disabled', true).attr(_ariaDisabled, true);
      }

      self.renderLabels();
    },

    'updateDisabled': function (listId) {

      var eventOptions = arguments[2] || {};
      if (eventOptions.fromDestructiveSort) {
        return;
      }

      var self = this;

      listId = _.isString(listId) ? listId : self.lastListId;

      // disable sharing and sorting on non share/sortable smart lists or inbox
      var disallowed = _.clone(runtime.smartLists);
      disallowed.push('inbox', 'search');

      var $shareIcon = self.$('.icon.action-share');
      var $sortIcon = self.$('.icon.action-sort');
      var state;

      if (listId) {

        state = _.indexOf(disallowed, listId) >= 0 || runtime.user.isUnregistered();
        var lists = new ListCollection('/lists/all/sortable');
        var list = lists.get(listId);
        if (list) {
          state = !list.attributes.online_id;
          !state && self.bindOnceTo(runtime, 'sync:end', self.updateDisabled);
        }

        // sharing
        $shareIcon.toggleClass('disabled', state).attr(_ariaDisabled, state);

        //sorting
        // inbox disallowes sharing, but allows sorting
        if (listId === 'inbox') {
          state = false;
        }

        var tasks = new TaskCollection('/lists/' + listId + '/tasks');
        tasks = tasks.where({
          'completed': false
        });

        if (tasks.length < 2) {
          state = true;
        }

        $sortIcon.toggleClass('disabled', state).attr(_ariaDisabled, state);
      }
    },

    'updateSortDisabled': function (count) {

      var self = this;
      var $sortByDueDate = self.$('.actionBar-top-sort-date').closest('li');
      var $sortByAssignee = self.$('.actionBar-top-sort-assign').closest('li');

      $sortByDueDate.toggleClass('disabled', !count.withDueDate).attr(_ariaDisabled, !count.withDueDate);
      $sortByAssignee.toggleClass('disabled', !count.hasAssignee).attr(_ariaDisabled, !count.hasAssignee);
    },

    'updateTrashDisabled': function (count) {

      var self = this;
      count = count && count.selected || runtime.selectedTaskCount;
      self.$('.icon.action-delete').toggleClass('disabled', !count).attr(_ariaDisabled, !count);
    },

    'getSelectedTasks': function () {

      var self = this;
      var taskIds = [];

      var $tasks = self.$el.closest('#tasks').find('.taskItem.active, .taskItem.selected');
      _.each($tasks, function (task) {

        taskIds.push($(task).attr('rel'));
      });

      return taskIds;
    },

    'showBar': function (source) {

      var self = this;
      if (source === 'mouse') {
        self.userOpenned = true;
      }
      self.$el.addClass('visible');
    },

    'hideBar': function (source) {

      var self = this;

      // if the action/share route is active, it means the popover
      // is still visible and we shouldn't hide the action bar
      if (runtime.currentRoute().indexOf('action/share') >= 0) {
        return;
      }

      if (source === 'mouse') {
        self.userOpenned = false;
      }

      if (!self.timingOut) {
        self.$el.removeClass('visible');
        self.collapseMenu();
      }
    },

    'expandMenu': function (menuClass) {

      var self = this;

      self.$el.addClass('expanded');
      self.$el.toggleClass('big', menuClass === 'actionBar-top-sort');
    },

    'collapseMenu': function () {

      var self = this;
      self.$el.removeClass('expanded');
      self.$('.actionBar-bottom .active').removeClass('active');
    },

    'toggleMenu': function (e) {

      var self = this;

      var $menus = self.$('.actionBar-top ul');
      var $items = self.$('.actionBar-bottom a');
      var $currentItem = $(e.target);

      if ($currentItem.hasClass('disabled')) {
        return;
      }

      var isCurrentOpen = $currentItem.hasClass('active');
      var className = 'actionBar-top-' + $currentItem.attr('data-menu');
      var $currentMenu = self.$('.' + className);

      $items.removeClass('active');
      $menus.removeClass('active');
      $currentItem.addClass('active');
      $currentMenu.addClass('active');

      var closed;
      if (isCurrentOpen || !$currentMenu.length) {
        closed = true;
        self.defer(self.collapseMenu);
      }
      else {
        self.defer(function(){
          self.expandMenu(className);
          $currentMenu.find('li').first().focus();
        });
      }

      runtime.trigger('analytics:TaskActionBar:' + (closed ? 'Close' : 'Open') + 'Menu', className);
    },

    'isSharingEnabled': function () {

      return !this.$('a.action-share').hasClass('disabled');
    },

    'isDateSortingEnabled': function () {

      return !this.$('.actionBar-top-sort-date').closest('li').hasClass('disabled');
    },

    'isAssigneeSortingEnabled': function () {

      return !this.$('.actionBar-top-sort-assign').closest('li').hasClass('disabled');
    },

    'isParentLIDisabled': function (e) {

      return $(e.target).parents('li').hasClass('disabled');
    },

    // true focus
    'focusStart': function () {

      this.$('.actionBar-bottom a').first().focus();
      runtime.trigger('focus:set', 'taskActions');
    },

    'focusFirstMenuItem': function ($target) {

      $target.closest('ul').find('.first-menu-item').focus();
    },

    'focusLastMenuItem': function ($target) {
      $target.closest('ul').find('.last-menu-item').focus();
    },

    'focusMenuItemToggle': function ($target) {

      var self = this;
      var $ul = $target.closest('ul');

      if ($ul.length) {
        var toggleClass = /actionBar-top-([^\s]+)/.exec($ul[0].className)[1];
        self.collapseMenu();
        self.$('.actionBar-bottom .action-' + toggleClass).focus();
      }
    }
  });
});
define('wunderbits/WBDatePickerModel',[

  './lib/dependencies',
  'vendor/moment',

  './WBModel'

], function (dependencies, moment, WBModel) {

  

  var $ = dependencies.$;
  var _ = dependencies._;

  var _repeatPatterns = [];
  var _repeatTypes = { d: "Day", w: "Week", m: "Month", y: "Year" };

  return WBModel.extend({

    defaults: {
      'date': null,
      'interval': null,
      'frequency': null
    },

    initialize: function (options) {

      var self = this;
      self._options = options || {};

      self._settingsModel = self._options.settingsModel;

      self._createSmartPatterns();

      self.on('error', self._onError);
    },

    validate: function (attrs) {

      var self = this;
      var validIntervals = ['days', 'weeks', 'months', 'years'];

      // no loops !
      if (!attrs.date && !self.attributes.date && (attrs.interval || attrs.frequency)) {

        return 'not possible to set repeat data without a date';
      }
      else if ((attrs.date || self.attributes.date) && (!self.attributes.interval || !self.attributes.frequency) && (attrs.interval && !attrs.frequency) || (!attrs.interval && attrs.frequency)) {

        return 'not possible to set repeat data without both attribute pairs present on the model or in the save attrs ' + self._attrsToString(attrs);
      }
      else if (attrs.interval && !_.include(validIntervals, attrs.interval)) {

        return attrs.interval + ' is not a valid value for interval ' + self._attrsToString(attrs);
      }
      else if (attrs.frequency && (!_.isNumber(attrs.frequency) || _.isNaN(attrs.frequency))) {

        return attrs.frequency + ' is not a valid value for frequency ' + self._attrsToString(attrs);

      }else if (_.isNaN(attrs.date)) {

        return attrs.date + ' is not a valid value for date ' + self._attrsToString(attrs);
      }
    },

    _attrsToString: function (attrs) {

      return '{date: ' + attrs.date + ', interval: ' + attrs.interval + ', frequency: ' + attrs.frequency +'}';
    },

    _onError: function (model, e) {

      throw new Error(e);
    },

    parse: function (string, format) {

      var self = this;
      var date = moment(string, format).toDate().getTime();
      date = Math.floor(date);

      if (string.length === 0) {

        return self.set({ 'date': null });
      }

      if (date) {

        self.set({ date: date });
      }
    },

    parseSmartDate: function (string, futureOnly, ignoreRepeats, fromInput) {

      var self = this;
      var date;

      string = $.trim(string);

      if (string.length === 0) {

        return self.set({ 'date': null });
      }

      if (!ignoreRepeats) {
        // try for repeat patterns: every 1 days, etc.
        string = self.processRepeatPatterns(string);
        if (string === '') {

          // empty string is a breaker, we out
          return;
        }
      }

      // try for basic keywords: today, next thursday, etc.
      date = self.processDateKeywords(string);

      // try processing user formatted dates (based on format string setting)
      if (!_.isNumber(date) || _.isNaN(date)) {

        date = self.processUserFormattedDate(string);
      }

      if (date && date > moment().startOf('year').valueOf() && !_.isNaN(date)) {

        if (futureOnly) {

          if (moment(date) < moment().sod()) {

            return;
          }
        }

        self.set({ 'date': date}, {'fromInput': fromInput});
      }
    },

    processUserFormattedDate: function (string) {

      var self = this;
      var format = self._settingsModel.attributes.date_format;
      var separator = format.match(/\W/);
      var userParts = string.split(separator);

      string = $.trim(string);

      if (userParts.length === 3 && string.length >= 8) {

        _.each(userParts, function (val, key) {

          userParts[key] = self._pad(val, 2);
        });

        string = userParts.join(separator);

        if (string.length === format.length) {

          return moment(string, format).valueOf();
        }
      }

      return undefined;
    },

    getRepetitions: function (number) {

      var self = this;
      var dates = [];
      var type = self.attributes.frequency;
      var count = self.attributes.interval;
      var date = self.attributes.date;

      if (!date || !self.repeats()) {

        return dates;
      }

      while (number-- >= 0) {

        date = date.clone();
        date['add' + type + 's'].apply(date, [ count ]);
        dates.push(date);
      }

      return dates;
    },

    processDateKeywords: function (string) {

      var date = moment().sod();
      var daysOfTheWeek = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];
      var nextWeek = false;
      var thisDay, today, offset, parts;

      // TODO translate string from international to english (reverse the localization)
      string = string.toLowerCase();
      parts = string.split(' ');

      if (parts[0] === 'next' && _.include(daysOfTheWeek, parts[1])) {

        string = parts[1];
        nextWeek = true;
      }

      // single days of the week
      if (_.include(daysOfTheWeek, string)) {

        thisDay = _.indexOf(daysOfTheWeek, string) + 1;
        today = _.indexOf(daysOfTheWeek, moment().sod().format('dddd').toLowerCase()) + 1;
        offset = thisDay - today;

        // if the day has already occured this week, select the next week's day
        if (offset <= 0) {

          offset += 7;
        }

        // if the next keyword is present and the offset doesn't already push the day to the next week
        if (nextWeek && offset <= (7 - today)) {

          offset += 7;
        }

        date = moment().sod().add('days', offset);
      }
      else {

        /* jshint indent: false */
        switch (string) {

          case 'today':
            break;

          case 'tomorrow':
            date = date.add('days', 1);
            break;

          case 'yesterday':
            date = date.subtract('days', 1);
            break;

          case 'next week':
            date = date.add('weeks', 1);
            break;

          case 'next month':
            date = date.add('months', 1);
            break;

          case 'next year':
            date = date.add('years', 1);
            break;

          default:
            return undefined;
        }
      }

      return date.valueOf();
    },

    processRepeatPatterns: function (string) {

      var self = this;
      var date, interval;

      for (var i = 0; i < _repeatPatterns.length; i ++) {

        string = string.replace(_repeatPatterns[i][0], _repeatPatterns[i][1]);
      }

      string = string.replace(/\/(\d*)(d|w|m|y)\w*/, function (match, count, type) {

        date = self.attributes.date || moment().sod().valueOf();

        if (parseInt(count, 10) === 0 || count === '' || _.isNaN(count)) {

          // not a valid parse
          return;
        }

        if(!_repeatTypes[type]) {

          // not a valid parse
          return;
        }

        interval = _repeatTypes[type].toLowerCase() + 's';

        self.set({
          'date': date,
          'interval': interval,
          'frequency': parseInt(count, 10)
        });
        return '';
      });

      return string;
    },

    repeats: function() {

      var self = this;
      var type = self.attributes.interval;

      return type && (type != 'None');
    },

    _createSmartPatterns: function () {

      var affixes = { 'every (\\d+) $': '$1', 'every $': 1, '$ly': 1, 'bi$ly': 2, 'every other $': 2 };
      var patterns = { 'daily': '/d', 'annually': '/y', 'biweekly': '/2w', 'every (\\w+)day': '/w $1day', 'every other (\\w+)day': '/2w $1day' };
      var t, affix, pattern, replacement;

      for (t in _repeatTypes) {

        for (affix in affixes) {

          pattern = affix.replace('$', _repeatTypes[t]).toLowerCase();
          patterns[pattern] = '/' + affixes[affix] + t;
        }
      }

      for (pattern in patterns) {

        replacement = patterns[pattern];
        pattern = new RegExp(pattern, 'i');
        _repeatPatterns.push([ pattern, replacement ]);
      }
    },

    _pad: function (str, pad) {

      str = String(str);

      while (str.length < pad) {

        str = '0' + str;
      }

      return str;
    }
  });
});
define('templates/WBDatePicker',['vendor/handlebars'], function(H) {
var name = 'WBDatePicker';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, functionType="function", self=this, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;

function program1(depth0,data) {
  
  
  return " <div id=\"edit-repeat-wrapper\" class=\"hidden\"> <label for=\"edit-repeat\" value=\"Repeat\"/> <select id=\"edit-repeat\"> <option value=\"never\" data-key-text=\"label_repeat_never\"selected></option> <option value=\"daily\" data-key-text=\"label_repeat_every_day\"></option> <option value=\"weekly\" data-key-text=\"label_repeat_every_week\"></option> <option value=\"monthly\" data-key-text=\"label_repeat_every_month\"></option> <option value=\"yearly\" data-key-text=\"label_repeat_every_year\"></option> </select> </div> ";
  }

function program3(depth0,data) {
  
  
  return " <div class=\"input-fake\" id=\"edit-reminder-time-container\"> <label for=\"edit-reminder-time\" value=\"Time\"/> <input id=\"edit-reminder-time-hour\" class=\"chromeless smaller\" type=\"text\" value=\"12\"/>: <input id=\"edit-reminder-time-minute\" class=\"chromeless smaller\" type=\"text\" value=\"00\"/> <select id=\"edit-reminder-time-ampm\" class=\"chromeless tiny\"> <option value=\"am\" data-key-text=\"label_time_am\" selected></option> <option value=\"pm\" data-key-text=\"label_time_pm\"></option> </select> </div> ";
  }

function program5(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <a class=\"no-date button full\"> ";
  if (stack1 = helpers.noDateButtonString) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.noDateButtonString; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </a> ";
  return buffer;
  }

  buffer += "<form> <ol class=\"months\"></ol> <div class=\"datepicker-actions\"> ";
  stack1 = helpers['if'].call(depth0, depth0.showRepeats, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.showTime, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " <a class=\"cancel button\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_cancel", options) : helperMissing.call(depth0, "localized", "button_cancel", options)))
    + "</a> ";
  stack2 = helpers['if'].call(depth0, depth0.showNoDateButton, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </div> </form>";
  return buffer;
  });
});
define('templates/WBDatePickerMonth',['vendor/handlebars'], function(H) {
var name = 'WBDatePickerMonth';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;


  buffer += "<li data-month=\"";
  if (stack1 = helpers.liRel) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.liRel; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\"> <h3> <span class=\"icon menu-down showNextMonth\"></span> <span class=\"icon menu-up showPrevMonth\"></span> ";
  if (stack1 = helpers.date) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.date; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + " </h3> <table> <thead class=\"head\"> <tr> <th>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_day_0", options) : helperMissing.call(depth0, "localized", "label_day_0", options)))
    + "</th> <th>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_day_1", options) : helperMissing.call(depth0, "localized", "label_day_1", options)))
    + "</th> <th>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_day_2", options) : helperMissing.call(depth0, "localized", "label_day_2", options)))
    + "</th> <th>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_day_3", options) : helperMissing.call(depth0, "localized", "label_day_3", options)))
    + "</th> <th>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_day_4", options) : helperMissing.call(depth0, "localized", "label_day_4", options)))
    + "</th> <th>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_day_5", options) : helperMissing.call(depth0, "localized", "label_day_5", options)))
    + "</th> <th>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_day_6", options) : helperMissing.call(depth0, "localized", "label_day_6", options)))
    + "</th> </tr> </thead> <tbody> </tbody> </table> </li>";
  return buffer;
  });
});
define('styles/_datepicker',[],function() { return {'name': '_datepicker', 'styles': ".date-pickers{width:211px} .datepicker{width:187px;padding:12px;} .datepicker form{width:100%} .datepicker h3{text-shadow:0 1px 0 #fff;font-size:12px;height:22px;text-align:center;color:#423e3e;} .datepicker h3.current{bottom:0;top:500px} .datepicker h3 span{position:absolute;left:5px;top:3px;cursor:pointer;} .datepicker h3 span.showNextMonth{left:auto;right:11px} .datepicker table{width:100%;} .datepicker table th,.datepicker table td{width:14%} .datepicker ol.months{position:relative;height:153px;width:189px;overflow-y:scroll;overflow-x:hidden;} .datepicker ol.months.big{height:172px} .datepicker ol.months li{position:relative} .datepicker ol.months span.day,.datepicker ol.months a.day{text-align:center;font-size:12px;display:block;padding:2px 0;cursor:pointer;font-weight:500;-webkit-border-radius:3px;border-radius:3px} .datepicker ol.months a{color:#737272;text-shadow:0 1px 0 #fff;} .datepicker ol.months a:hover{background:#eaeaea} .datepicker ol.months a.today{color:#2289da} .datepicker ol.months .head{margin-bottom:0;} .datepicker ol.months .head th{text-align:center;color:#a3a3a3;text-transform:uppercase;font-size:9px;height:auto;padding:4px 0} .datepicker ol.months a.highlighted{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #dff1ff), color-stop(1, #cde5fa));background-image:-webkit-linear-gradient(top, #dff1ff 0, #cde5fa 100%);background-image:-moz-linear-gradient(top, #dff1ff 0, #cde5fa 100%);background-image:-o-linear-gradient(top, #dff1ff 0, #cde5fa 100%);background-image:-ms-linear-gradient(top, #dff1ff 0, #cde5fa 100%);background-image:linear-gradient(top, #dff1ff 0, #cde5fa 100%)} .datepicker ol.months a.selected{opacity:1;-ms-filter:none;filter:none;position:relative;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #33a3ef), color-stop(1, #168ad4));background-image:-webkit-linear-gradient(top, #33a3ef 0, #168ad4 100%);background-image:-moz-linear-gradient(top, #33a3ef 0, #168ad4 100%);background-image:-o-linear-gradient(top, #33a3ef 0, #168ad4 100%);background-image:-ms-linear-gradient(top, #33a3ef 0, #168ad4 100%);background-image:linear-gradient(top, #33a3ef 0, #168ad4 100%);text-shadow:0 1px 1px rgba(0,0,0,0.4);color:#fff;-webkit-border-radius:3px;border-radius:3px} .datepicker .datepicker-actions{padding-top:12px;height:56px;} .datepicker .datepicker-actions select{margin-top:3px;margin-bottom:8px;width:100%;} .datepicker .datepicker-actions select#edit-reminder-time-ampm{width:60px;float:right;margin-top:-1px} .datepicker .datepicker-actions a{color:#737272;cursor:pointer;padding:4px 10px;} .datepicker .datepicker-actions a:hover{text-decoration:underline} .datepicker .datepicker-actions.no-actions{border-top:none;padding:0;height:auto} " }; });
define('wunderbits/WBDatePickerView',[

  './WBRuntime',
  'vendor/moment',

  './WBDatePickerModel',
  './WBView',
  './WBBlurHelper',

  'template!WBDatePicker',
  'template!WBDatePickerMonth',

  'style!_datepicker'

], function (WBRuntime, moment, DatePickerModel, WBView, WBBlurHelper, baseTemplate, monthTemplate, datePickerStyle, undefined) {

  

  var $ = WBRuntime.$;
  var _ = WBRuntime._;
  var window = WBRuntime.global;

  var _super = WBView.prototype;
  var _monthPad = 3;
  var _blur = WBBlurHelper;

  $.fn.selectOptions = function(value) {

    this.each( function () {

      if (this.nodeName.toLowerCase() !== "select") {

        return;
      }

      // get number of options
      var optionsLength = this.options.length;

      for (var i = 0; i < optionsLength; i++) {

        this.options[i].selected = (this.options[i].value == value);
      }
    });

    this.change();
    return this;
  };

  moment.fn.moveToFirstDayOfMonth = function () {

    return moment([
      this.year(),
      this.month(),
      1
    ]);
  };

  moment.fn.moveToLastDayOfMonth = function () {

    return moment([
      this.year(),
      this.month(),
      this.daysInMonth()
    ]);
  };

  return WBView.extend({

    className: 'datepicker',

    'styles': [datePickerStyle],

    events: {

      'mousedown .showNextMonth': '_cancel',
      'mousedown .showPrevMonth': '_cancel',

      'click .no-date': 'noDate',
      'click .cancel': '_cancelDate',
      'click .showNextMonth': 'showNextMonth',
      'click .showPrevMonth': 'showPrevMonth',
      'click a.day': 'selectDay',
    },

    initialize: function (options) {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.options = options || {};

      if (!self.model) {

        self.model = new DatePickerModel(options);
      }

      self.setStartDay(options.startDay);
      self.monthsRenderedDeferred = new $.Deferred();

      self.debouncedRenderPrev = _.debounce(self.renderPrev, 250);
      self.debouncedRenderNext = _.debounce(self.renderNext, 250);
    },

    setStartDay: function (day) {

      var self = this;

      if (_.isNumber(day)) {

        self.startDay = day;
      }
      else {

        var fromString = self.convertStartDayStringToNumber(day);
        self.startDay = _.isNumber(fromString) ? fromString : 1;
      }
    },

    convertStartDayStringToNumber: function (day) {

      var days = ['sun', 'mon', 'tue', 'wed', 'thu', 'fri', 'sat'];
      var index = _.indexOf(days, day);
      index = index >= 0 ? index : undefined;

      return index;
    },

    renderMonth: function (date, options) {

      var self = this;
      var data = {
        'date': date.format('MMMM YYYY'),
        'liRel': date.format('YYYY-MM')
      };
      var fragment = monthTemplate(data);
      var appendPrepend = options && options.prepend ? 'prepend' : 'append';
      var monthPrefix = date.format('YYYY-MM-');
      var i, e;

      fragment = $(fragment.replace(/\{\{([a-z]+)\}\}/ig, function (match, token) {

        return data[token] || '';
      }));

      // set up headings to correct start of week setting
      if (self.startDay !== 0) {

        var $header = fragment.find('thead');
        var $headerCells = $header.find('tr th');

        if (self.startDay === 6) {

          $header.find('tr').prepend($headerCells.last());
        }
        else if (self.startDay === 1) {

          $header.find('tr').append($headerCells.first());
        }
      }

      // render days
      var cellCount = 0;
      var advanceCellCount = function () {

        cellCount = (cellCount === 6 ? 0 : cellCount + 1);
      };
      var firstDayOfWeek = date.moveToFirstDayOfMonth().day();
      var startDayOfWeek = self.startDay;
      var $tbody = fragment.find('tbody');
      var $tr;

      // handle empty cells before first day

      if (firstDayOfWeek !== startDayOfWeek) {

        var placeholders;
        if (startDayOfWeek === 0) {

          placeholders = firstDayOfWeek + 0;
        }
        else if (startDayOfWeek === 1) {

          placeholders = firstDayOfWeek === 0 ? 6 : firstDayOfWeek - 1;
        }
        else if (startDayOfWeek === 6) {

          placeholders = firstDayOfWeek + 1;
        }

        for (i = 1, e = placeholders; i <= e; i++) {

          (cellCount === 0) && $tbody.append('<tr/>');

          $tr = $tbody.find('tr').last();
          $tr.append('<td><span class="day">&nbsp;</span></td>');
          advanceCellCount();
        }
      }

      // render dates
      for (i = 1, e = date.moveToLastDayOfMonth().date(); i <= e; i++) {

        (cellCount === 0) && $tbody.append('<tr/>');

        $tr = $tbody.find('tr').last();
        $tr.append('<td><a data-date="' + monthPrefix + i + '" class="day">' + i + '</a></td>');
        advanceCellCount();
      }

      self.$('.months')[appendPrepend](fragment);
    },

    render: function() {

      var self = this;
      var d;


      if (!self.isRendered) {
        _super.render.apply(self, arguments);
        self.$el.html(baseTemplate(self.model.toJSON()));
        for (d = moment().subtract('months', 3); d < moment().add('months', 3); d.add('months', 1)) {
          self.renderMonth(d);
        }
      }

      self.options.hideNoDate && self.$el.find('.no-date').addClass('hidden');
      self.options.hideCancel && self.$el.find('.cancel').addClass('hidden');

      if (self.options.hideCancel && self.options.hideNoDate) {

        self.$el.find('.datepicker-actions').addClass('no-actions');
      }

      self.getDayEl(moment().toDate()).addClass('today');

      self.onChangeDate();

      self.bindTo(self.model, 'change:date', self.onChangeDate);
      self.bindTo(self.model, 'change:interval', self._onChangeRepeats);
      self.bindTo(self.model, 'change:frequency', self._onChangeRepeats);

      // scroll does not work as a backbone event, manual bind here:
      self.scrollBind && self.unbindFrom(self.scrollBind);
      self.scrollBind = self.bindTo(self.$('ol.months'), 'scroll', function (e) {

        self.onScrolled(e);
      });

      self.renderLocalized();
      self.delegateEvents();

      return self;
    },

    setDate: function (date) {

      var self = this;
      if (date === 0) {

        date = null;
      }
      self.model.set({ date: date }, { silent: true });

      return self;
    },

    onChangeDate: function() {

      var self = this;
      var date = self.model.attributes.date;
      var dayEl = self.getDayEl(moment(date));

      self.$('.selected').removeClass('selected');

      if (date && dayEl.length !== 0) {

        date = moment(date).toDate();
        self.getDayEl(date).addClass('selected');
        self._onChangeRepeats();
        $.when(self.monthsRenderedDeferred).then(function() {
          self.scrollToMonth(date);
        });
      }
      else if (date) {

        self.renderDate(moment(date));
      }
      else if (!date) {

        self._onChangeRepeats();

        $.when(self.monthsRenderedDeferred).then(function() {
          self.scrollToMonth(moment().sod().toDate());
        });
      }
    },

    selectDay: function (ev) {

      var self = this;
      var text = $(ev.target).data('date');

      if (self.options.futureOnly) {

        if (moment(text, 'YYYY-MM-D') < moment().sod()) {

          return;
        }
      }
      self.model.parse(text, 'YYYY-MM-D');
    },

    _onChangeRepeats: function () {

      var self = this;
      var format = "YYYY-MM-D";
      var date = self.model.attributes.date;
      var interval = self.model.attributes.interval;
      var frequency = self.model.attributes.frequency;
      var lastDay = self.$el.find('ol.months li:last a:last').data('date');
      var day;

      self.$('a.highlighted').removeClass('highlighted');

      if (interval !== null && frequency !== null && date !== null) {

        for (day = moment(date); day < moment(lastDay, format); day.add(interval, frequency)) {

          self.$('a[data-date="' + day.format(format) + '"]').addClass('highlighted');
        }
      }
      else if (interval === null && frequency === null) {
        self.$('#edit-repeat option').attr('selected', false);
        self.$('#edit-repeat option').first().attr('selected', true);
      }
    },

    noDate: function () {

      var self = this;

      self.model.set({

        'date': null,
        'interval': null,
        'frequency': null,
      });

      _blur.run();
    },

    showNextMonth: function (ev) {

      var self = this;
      var monthEl = $(ev.target).closest('li');

      // safari returns invalid date if date is not appended
      var month = moment(monthEl.data('month') + '-01');
      var nextMonth = moment(month.add('months', 1));

      // if next month does not exist render it
      if (self.getMonthEl(nextMonth).length === 0) {

        self.renderMonth(nextMonth);

        // render some padding
        for (var i = 1; i <= _monthPad; i++) {

          self.renderMonth(month.add('months', 1));
        }
      }

      self._cleanupNodes(nextMonth, 'before');
      self._onChangeRepeats();
      self.scrollToMonth(nextMonth.valueOf(), 150);
    },

    showPrevMonth: function (ev) {

      var self = this;
      var monthEl = $(ev.target).closest('li');

      // safari returns invalid date if date is not appended
      var month = moment(monthEl.data('month') + '-01');
      var prevMonth = moment(month.subtract('months', 1));

      // if next month does not exist render it
      if (self.getMonthEl(prevMonth).length === 0) {

        self.renderMonth(prevMonth, {'prepend': true});

        // render some padding
        for (var i = 1; i <= _monthPad; i++) {

          self.renderMonth(month.subtract('months', 1), {'prepend': true});
        }
      }

      self._cleanupNodes(prevMonth, 'after');
      self._onChangeRepeats();
      self.scrollToMonth(prevMonth.toDate(), 150);
    },

    getDayEl: function (day) {

      var self = this;
      if (!day) {

        return $();
      }
      return self.$('a[data-date="' + moment(day).format('YYYY-MM-D') + '"]');
    },

    getMonthEl: function (month) {

      var self = this;

      if (!month) {
        return $();
      }

      return self.$('li[data-month="' + moment(month).format('YYYY-MM') + '"]');
    },

    renderDate: function (date) {

      var self = this;
      var lastMonth = moment(self.$el.find('ol.months').find('li:last').data('month')).sod();
      var firstMonth = moment(self.$el.find('ol.months').find('li:first').data('month')).sod();
      var thisDay, thisMonth;

      if (!date) {

        return;
      }

      thisDay = moment(date.valueOf());

      // render months including date + padding
      if (date < firstMonth) {

        date = date.subtract('months', _monthPad);

        for (thisMonth = firstMonth.subtract('months', 1); thisMonth >= date; thisMonth.subtract('months', 1)) {

          self.renderMonth(thisMonth, {'prepend': true});
        }

        self._cleanupNodes(thisDay, 'after');
      }
      else if (date > lastMonth) {

        date = date.add('months', _monthPad);

        for (thisMonth = lastMonth.add('months', 1); thisMonth <= date; thisMonth.add('months', 1)) {

          self.renderMonth(thisMonth);
        }

        self._cleanupNodes(thisDay, 'before');
      }

      self._onChangeRepeats();
      self.getDayEl(thisDay.toDate()).addClass('selected');
      $.when(self.monthsRenderedDeferred).then(function() {
        self.scrollToMonth(thisDay.sod().toDate());
      });
    },

    renderPrev: function () {

      var self = this;
      var scrollContainer = self.$('ol.months');
      var oldScrollTop = scrollContainer.scrollTop();
      var $oldFirstMonth = scrollContainer.find('li:first');
      var month = moment($oldFirstMonth.data('month'));
      var oldFirstMonth = moment(month); // need to break reference
      var totalHeightAdded = 0;

      if (!self._rendering) {

        self._rendering = true;

        for (var i = 1; i <= _monthPad; i++) {

          self.renderMonth(month.subtract('months', 1), {'prepend': true});
        }

        self._cleanupNodes(oldFirstMonth, 'after');
        self._onChangeRepeats();
        self.lastScrollToMonth = oldFirstMonth.toDate();

        self.renderLabels();

        $oldFirstMonth.prevAll().each(function () {

          totalHeightAdded += $(this).outerHeight();
        });

        scrollContainer.scrollTop(oldScrollTop + totalHeightAdded); //brings scroll back to where we were
        self._rendering = false;
      }
    },

    renderNext: function () {

      var self = this;
      var month = moment(self.$('ol.months').find('li:last').data('month'));
      var thisMonth = moment(month); // need to break reference

      if (!self._rendering) {

        self._rendering = true;

        for (var i = 1; i <= _monthPad; i++) {

          self.renderMonth(month.add('months', 1));
        }

        self._cleanupNodes(thisMonth, 'before');
        self._onChangeRepeats();
        self.renderLabels();

        self._rendering = false;
      }
    },

    scrollToMonth: function (month, speed) {

      var self = this;
      var scrollContainer = self.$('ol.months');
      var monthEl, distance;

      self.internalScrollTimer && window.clearTimeout(self.internalScrollTimer);
      self.internalScroll = true;

      if (typeof month === "number" && month > 0) {

        month = moment(month).toDate();
      }
      else{

        month = (month instanceof Date) ? month : moment().toDate(); // was month = month || moment().toDate();
      }

      monthEl = self.getMonthEl(month);

      if (!monthEl || monthEl.length === 0) {

        self.internalScroll = false;
        return;
      }

      distance =  monthEl[0].offsetTop;

      self.lastScrollToMonth = month;

      if (speed) {

        scrollContainer.stop().animate({ 'scrollTop': distance }, speed, function () {

          self._updateHeights(monthEl);
          self.internalScrollTimer = window.setTimeout(function () {

            self.internalScroll = false;
          }, 1000);
        });
      }
      else {

        scrollContainer.scrollTop(distance);
        self._updateHeights(monthEl);
        self.internalScrollTimer = window.setTimeout(function () {

          self.internalScroll = false;
        }, 1000);
      }
    },

    _updateHeights: function (monthEl) {

      var self = this;
      var $monthScrollContainer = self.$('ol.months');
      var monthHeight = $(monthEl).height();

      $monthScrollContainer.css('height', monthHeight);

      // IE font rendering/lineheight is smaller, subtract 5 pixels
      if (WBRuntime.env.isIE()) {

        $monthScrollContainer.css({
          'height': (monthHeight - 5) + 'px'
        });
      }
    },

    onScrolled: function () {

      var self = this;
      var scrollContainer = self.$el.find('ol.months');
      var currentScroll = scrollContainer.scrollTop();
      var scrollContainerHeight = scrollContainer[0].scrollHeight;
      var monthHeight = scrollContainer.find('li:first').height();

      if (currentScroll < self._lastScrollTop && currentScroll <= monthHeight) {

        self.debouncedRenderPrev();
      }
      else if (currentScroll > self._lastScrollTop && currentScroll >= scrollContainerHeight - (_monthPad * monthHeight)) {

        self.debouncedRenderNext();
      }

      self._lastScrollTop = scrollContainer.scrollTop();
    },

    _cancel: function (ev) {

      ev.preventDefault();
    },

    _cancelDate: function () {

      // does nothing right now in this view ...

    },

    onDestroy: function () {

      var self = this;

      $(document).off('.' + self.cid);
    },

    _cleanupNodes: function (thisMonth, direction) {

      var self = this;
      var scrollContainer = self.$('ol.months');
      var oldScrollTop = scrollContainer.scrollTop();
      var maxNodes = 24;
      var $months = self.$('ol.months li');
      var nodes = $months.size();
      var $thisMonth = self.$('ol.months li[data-month="' + moment(thisMonth).format('YYYY-MM') + '"]');
      var thisIndex = _.indexOf($months, $thisMonth[0]);
      var i;

      direction = (direction === 'before') ? direction : 'after' ;

      if (direction === 'after' && nodes > maxNodes) {

        i = nodes;

        while (i > thisIndex + maxNodes) {
          $($months[i]).remove();
          $months[i] = null;
          i--;
        }
      }
      else if (nodes > maxNodes) {

        i = 0;
        var totalHeightRemoved = 0;

        while (i < thisIndex - maxNodes) {
          totalHeightRemoved += $($months[i]).outerHeight();
          $($months[i]).remove();
          $months[i] = null;
          i++;
        }

        scrollContainer.scrollTop(oldScrollTop - totalHeightRemoved);
      }
    }
  });
});

define('templates/addTaskDatePickers',['vendor/handlebars'], function(H) {
var name = 'addTaskDatePickers';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"buttonbar full toggle-date-type\"> <a class=\"button selected due-date-tab\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_due_date", options) : helperMissing.call(depth0, "localized", "label_due_date", options)))
    + "</a> <a class=\"button reminder-tab\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_reminder", options) : helperMissing.call(depth0, "localized", "label_reminder", options)))
    + "</a> </div> <div class=\"scroll-wrapper\"> <div class=\"due-date-picker\"></div> <div class=\"reminder-date-picker\"></div> </div> ";
  return buffer;
  });
});
define('styles/popover/addTaskDatePopover',[],function() { return {'name': 'popover/addTaskDatePopover', 'styles': "#wunderlist-base .reminder-date-picker{-webkit-transform:translateX(100%);-moz-transform:translateX(100%);-o-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%);margin-left:-100%;float:left;} #wunderlist-base .reminder-date-picker .input-fake{margin-bottom:3px} #wunderlist-base .reminder-date-picker.selected{-webkit-transform:translateX(0);-moz-transform:translateX(0);-o-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)} #wunderlist-base .due-date-picker{-webkit-transform:translateX(-100%);-moz-transform:translateX(-100%);-o-transform:translateX(-100%);-ms-transform:translateX(-100%);transform:translateX(-100%);float:left;} #wunderlist-base .due-date-picker.selected{-webkit-transform:translateX(0);-moz-transform:translateX(0);-o-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)} " }; });
define('views/Tasks/AddTaskDatePickersView',[

  'application/runtime',

  'vendor/moment',

  'wunderbits/helpers/date',
  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/strings',

  'wunderbits/WBView',
  'wunderbits/WBDatePickerView',

  'template!addTaskDatePickers',

  'style!_popover',
  'style!popover/addTaskDatePopover'

], function (
  runtime,
  moment,
  DateHelper, Keycodes, Strings,
  WBView, WBDatePickerView,
  template,
  popoverStyle, addTaskDatePopoverStyle,
  undefined
) {

  

  var _super = WBView.prototype;

  return WBView.extend({

    'template': template,

    'styles': [
      popoverStyle,
      addTaskDatePopoverStyle
    ],

    'className': 'date-pickers',

    'events': {

      'click .due-date-tab': '_setDueDatePicker',
      'click .reminder-tab': '_setReminderPicker',
      'change #edit-repeat': '_handleRepeat',
      'change #edit-repeat-interval': '_handleRepeat',
      'change #edit-reminder-time-ampm': '_handleRepeat',
      'focus #edit-reminder-time-container input': '_handleRepeat',
      'blur #edit-reminder-time-container input': '_handleRepeat',
      'keyup #edit-repeat-frequency': '_handleRepeat',
      'keydown #edit-reminder-time-hour': '_onEditHourKeyDown',
      'keydown #edit-reminder-time-minute': '_onEditMinuteKeyDown',
    },

    'initialize': function() {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.datePicker = self.addSubview(new WBDatePickerView({
        'futureOnly': false,
        'hideCancel': true,
        'showRepeats': !runtime.user.isUnregistered(),
        'showTime': false,
        'startDay': runtime.settings.attributes.start_of_week,
        'showNoDateButton': true,
        'noDateButtonString': runtime.language.getLabel('button_remove_due_date').toString()
      }));
      self.reminderDatePicker = self.addSubview(new WBDatePickerView({
        'futureOnly': false,
        'showRepeats': false,
        'hideCancel': true,
        'showTime': true,
        'startDay': runtime.settings.attributes.start_of_week,
        'showNoDateButton': true,
        'noDateButtonString': runtime.language.getLabel('button_remove_reminder').toString()
      }));

      self.bindTo(self.datePicker.model, 'change:date', self._handleRepeat);
      self.bindTo(self.reminderDatePicker.model, 'change:date', self._handleRepeat);

      self.bindTo(runtime.settings, 'change:start_of_week', function () {

        self.datePicker.setStartDay(runtime.settings.attributes.start_of_week);
        self.datePicker.render();
        self.reminderDatePicker.setStartDay(runtime.settings.attributes.start_of_week);
        self.reminderDatePicker.render();
      });
    },

    'render': function () {

      var self = this;
      var is12HourTime = runtime.settings.attributes.time_format === '12 hour';

      _super.render.apply(self, arguments);

      var $dateEl = self.datePicker.render().$el;
      self.$('.due-date-picker').prepend($dateEl);

      var $reminderEl = self.reminderDatePicker.render().$el;
      self.$('.reminder-date-picker').prepend($reminderEl);

      self.$('#edit-repeat-wrapper').removeClass('hidden');

      var $ampm = self.$('#edit-reminder-time-ampm');

      if (is12HourTime) {

        $ampm.removeClass('hidden');
      }
      else {

        $ampm.addClass('hidden');
      }

      self.delegateEvents();

      setTimeout(function(){
        self.datePicker.scrollToMonth();
        self.reminderDatePicker.scrollToMonth();
      }, 100);

      self._setDueDatePicker();

      return self;
    },

    'clearDates': function () {

      var defaults = {

        'date': null,
        'interval': null,
        'frequency': null
      };

      this.datePicker.model.set(defaults);
      this.reminderDatePicker.model.set(defaults);
    },

    '_setDueDatePicker': function() {

      var self = this;

      self.$el.find('.reminder-tab, .reminder-date-picker').removeClass('selected');
      self.$el.find('.due-date-tab, .due-date-picker').addClass('selected');
    },

    '_setReminderPicker': function() {

      var self = this;

      self.$el.find('.reminder-tab, .reminder-date-picker').addClass('selected');
      self.$el.find('.due-date-tab, .due-date-picker').removeClass('selected');
    },

    '_handleRepeat': function() {

      var self = this;
      var interval = null;
      var frequency = null;

      var date = self.datePicker.model.attributes.date;
      var changes = self.datePicker.model.changedAttributes() || {};
      var isReset = changes.date === null && changes.interval === null && changes.frequency === null;

      interval = self.$el.find('#edit-repeat').val();
      frequency = 1;

      var reminderDate = self.reminderDatePicker.model.attributes.date;
      var hour = Number(self.$el.find('#edit-reminder-time-hour').val());
      var minute = Number(self.$el.find('#edit-reminder-time-minute').val());
      var ampm = self.$el.find('#edit-reminder-time-ampm').val();
      var is12HourTime = runtime.settings.attributes.time_format === '12 hour';
      var time = null;

      if (!isReset && !date && interval !== 'never') {

        date = moment().sod().valueOf();
        self.datePicker.model.set({'date': date});
      }

      if (frequency !== null) {

        frequency = Number(frequency);
      }

      if (date !== null && interval !== null && frequency !== null && frequency !== 0 && interval !== 'never') {

        var wordMap = {

          'daily': 'days',
          'weekly': 'weeks',
          'monthly': 'months',
          'yearly': 'years'
        };

        self.datePicker.model.set({
          'date': moment(date).format('YYYY-MM-D'),
          'interval': wordMap[interval],
          'frequency': frequency
        });
      }

      if (interval === 'never') {

        interval = null;
        frequency = null;

        if (date) {

          moment(date).format('YYYY-MM-D');
        }

        self.datePicker.model.set({'interval':interval,'frequency':frequency});
      }

      if (reminderDate) {

        if (hour !== null && minute !== null) {

          hour = is12HourTime ? DateHelper.convertHourTo24HourTime(hour, ampm) : hour;
          time = Strings.pad(hour, 2) + ':' + Strings.pad(minute, 2);
        }

        self.reminderDatePicker.model.set({'reminder_date': moment(reminderDate).format('YYYY-MM-D'), 'reminder_time': time});
      }
    },

    '_onEditHourKeyDown': function (e) {

      var self = this;
      var $hourInput = self.$el.find('#edit-reminder-time-hour');
      var hour = Number($hourInput.val());

      var is12Hour = runtime.settings.attributes.time_format === '12 hour';

      //37 - left
      //38 - up
      //39 - right
      //40 - down

      if (e.which === 38) {
        //up
        hour = (hour < (is12Hour ? 12 : 23)) ? hour + 1 : (is12Hour ? 1 : 0);
        $hourInput.val(Strings.pad(hour, 2));
      }
      else if (e.which === 40) {
        //down
        hour = (hour > (is12Hour ? 1 : 0)) ? hour - 1 : (is12Hour ? 12 : 23);
        $hourInput.val(Strings.pad(hour, 2));
      }
      else if (e.which === 13 || e.which === 27) {
        //enter / esc
      }
      else if (e.which === 37 || e.which === 39 || e.which === 8 || e.which === 46) {
        // do nothing
      }
      else if (e.which === 9) {

        self._onDatePickerInputMousedown();
      }
      else {

        if ( !(48 <= e.which && e.which <= 57) && !(96 <= e.which && e.which <= 105)) {

          return false;
        }
      }

      if (e.which === 38 || e.which === 40) {

        // runtime.trigger('analytics:keyboardNavigation:detailView:reminder:hour');
      }
    },

    '_onEditMinuteKeyDown': function (e) {

      var self = this;
      var $minuteInput = self.$el.find('#edit-reminder-time-minute');
      var minute = Number($minuteInput.val());

      //37 - left
      //38 - up
      //39 - right
      //40 - down

      if (e.which === 38) {
        //up
        minute = (minute < 59) ? minute + 1 : 0;
        $minuteInput.val(Strings.pad(minute, 2));
      }
      else if (e.which === 40) {
        //down
        minute = (minute > 0) ? minute - 1 : 59;
        $minuteInput.val(Strings.pad(minute, 2));
      }
      else if (e.which === 13 || e.which === 27) {
        //enter / esc
      }
      else if (e.which === 37 || e.which === 39 || e.which === 8 || e.which === 46) {
        // do nothing
      }
      else {

        if ( !(48 <= e.which && e.which <= 57) && !(96 <= e.which && e.which <= 105)) {

          return false;
        }
      }

      if (e.which === 38 || e.which === 40) {

        // runtime.trigger('analytics:keyboardNavigation:detailView:reminder:minute');
      }
    }
  });
});
define('templates/assignableUser',['vendor/handlebars'], function(H) {
var name = 'assignableUser';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function", self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " (";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_assign_me", options) : helperMissing.call(depth0, "localized", "label_assign_me", options)))
    + ")";
  return buffer;
  }

  buffer += "<span class=\"icon assigned\"></span> <div class=\"picture\"></div> <div class=\"name\" >";
  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1);
  stack1 = helpers['if'].call(depth0, depth0.isMe, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</div> ";
  return buffer;
  });
});
define('views/Assigning/AssignToUserView',[

  'application/runtime',

  'wunderbits/WBView',
  'views/AvatarView',

  'template!assignableUser'

], function (runtime, WBView, AvatarView, template, undefined) {

  

  var _super = WBView.prototype;

  return WBView.extend({

    'template': template,
    'tagName': 'li',
    'events': {
    },

    'initialize': function (options) {

      var self = this;

      if (options) {

        self.assignable = options.assignable;
      }

      _super.initialize.apply(self, arguments);

      self.bindTo(self.assignable, 'change', self.render);
    },

    'render': function (options) {

      var self = this;
      var json = {};

      self.$el.attr('rel', self.assignable.attributes.assignable_id);
      self.$el[options && options.assignedTo === self.assignable.attributes.assignable_id ? 'addClass':'removeClass']('assigned');

      json.name = self.assignable.attributes.name;

      if (runtime.user.id === self.assignable.attributes.assignable_id) {
        json.isMe = true;
        json.name = runtime.user.attributes.name;
      }

      _super.render.call(self, json);

      self.renderAvatar(self.assignable.attributes.assignable_id);

      return self;
    },

    'renderAvatar': function (id) {

      var self = this;

      self.avatarView = self.avatarView || self.addSubview(new AvatarView(), 'avatarView');

      self.$('.picture').html(self.avatarView.render({id: id}).$el);
    }
  });
});
define('views/Assigning/Controllers/AssignToUserPopoverViewController',[

  'application/runtime',
  'wunderbits/WBViewController',

], function (
  runtime,
  WBViewController,
  undefined
) {

  

  var $ = runtime.$;

  return WBViewController.extend({

    'implements': {
      'assign': 'assignToUser',
      'click:none': 'clearAssign',
      'navigate': 'onNavigate'
    },

    'onNavigate': function (direction) {

      this.view.navigate(direction);
    },

    'assignToUser': function (ev) {

      var self = this;
      var view = self.view;
      
      ev.stopPropagation();
      $(ev.target).closest('li').addClass('selected');
      
      var $selected = view.$('.selected');
      var id = $selected.attr('rel');
      var fromClick;

      // if its a click event (or any other similar input)
      if (ev.type !== 'keydown') {
        id = $(ev.target).closest('li').attr('rel');
        fromClick = true;
      }

      // key event or click on no assign
      if (!id && $selected.hasClass('no-assign')) {
        self.clearAssign();
      }
      else if (id) {
        runtime.trigger('autoComplete:assign', id, fromClick, view.config.startedFromKeys);
        runtime.trigger('assigneeAdded');
      }
    },

    'clearAssign': function () {

      this.view.trigger('clear:assigned');
    }
  });
});
define('templates/assignToUserPopover',['vendor/handlebars'], function(H) {
var name = 'assignToUserPopover';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"assign-to-user\"> <div class=\"header\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_assign_to", options) : helperMissing.call(depth0, "localized", "label_assign_to", options)))
    + "</div> <ul class=\"shared-users\"> <li class=\"no-assign\"> <div class=\"avatar unassigned\"></div> <div class=\"name no-assign\" >";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_none", options) : helperMissing.call(depth0, "localized", "label_none", options)))
    + "</div> </li> </ul> </div>";
  return buffer;
  });
});
define('styles/popover/assigningPopover',[],function() { return {'name': 'popover/assigningPopover', 'styles': "#wunderlist-base .assign-to-user{width:212px} #wunderlist-base .get-pro,#wunderlist-base .assign-to-user,#wunderlist-base .tags{padding:4px;} #wunderlist-base .get-pro .header,#wunderlist-base .assign-to-user .header,#wunderlist-base .tags .header{padding:4px 0 6px 0} #wunderlist-base .get-pro p,#wunderlist-base .assign-to-user p,#wunderlist-base .tags p{font-size:13px;padding:12px;font-size:13px} #wunderlist-base .get-pro .all-tags li.name,#wunderlist-base .assign-to-user .all-tags li.name,#wunderlist-base .tags .all-tags li.name{padding-top:8px;padding-left:10px;height:27px;} #wunderlist-base .get-pro .all-tags li.name.selected,#wunderlist-base .assign-to-user .all-tags li.name.selected,#wunderlist-base .tags .all-tags li.name.selected{color:#fff} #wunderlist-base .get-pro .shared-users,#wunderlist-base .assign-to-user .shared-users,#wunderlist-base .tags .shared-users,#wunderlist-base .get-pro .all-tags,#wunderlist-base .assign-to-user .all-tags,#wunderlist-base .tags .all-tags{max-height:293px;overflow:auto;-webkit-overflow-scrolling:touch;} #wunderlist-base .get-pro .shared-users li,#wunderlist-base .assign-to-user .shared-users li,#wunderlist-base .tags .shared-users li,#wunderlist-base .get-pro .all-tags li,#wunderlist-base .assign-to-user .all-tags li,#wunderlist-base .tags .all-tags li{-webkit-border-radius:3px;border-radius:3px;height:32px;position:relative;border:1px solid transparent;} #wunderlist-base .get-pro .shared-users li:hover,#wunderlist-base .assign-to-user .shared-users li:hover,#wunderlist-base .tags .shared-users li:hover,#wunderlist-base .get-pro .all-tags li:hover,#wunderlist-base .assign-to-user .all-tags li:hover,#wunderlist-base .tags .all-tags li:hover{cursor:pointer} #wunderlist-base .get-pro .shared-users li .name,#wunderlist-base .assign-to-user .shared-users li .name,#wunderlist-base .tags .shared-users li .name,#wunderlist-base .get-pro .all-tags li .name,#wunderlist-base .assign-to-user .all-tags li .name,#wunderlist-base .tags .all-tags li .name{position:absolute;left:38px;top:9px;right:18px;font-size:13px;font-weight:bold;color:#423e3e;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis} #wunderlist-base .get-pro .shared-users li .avatar,#wunderlist-base .assign-to-user .shared-users li .avatar,#wunderlist-base .tags .shared-users li .avatar,#wunderlist-base .get-pro .all-tags li .avatar,#wunderlist-base .assign-to-user .all-tags li .avatar,#wunderlist-base .tags .all-tags li .avatar,#wunderlist-base .get-pro .shared-users li .unassigned,#wunderlist-base .assign-to-user .shared-users li .unassigned,#wunderlist-base .tags .shared-users li .unassigned,#wunderlist-base .get-pro .all-tags li .unassigned,#wunderlist-base .assign-to-user .all-tags li .unassigned,#wunderlist-base .tags .all-tags li .unassigned{margin-top:3px;margin-left:3px} #wunderlist-base .get-pro .shared-users li span,#wunderlist-base .assign-to-user .shared-users li span,#wunderlist-base .tags .shared-users li span,#wunderlist-base .get-pro .all-tags li span,#wunderlist-base .assign-to-user .all-tags li span,#wunderlist-base .tags .all-tags li span{display:none} #wunderlist-base .get-pro .shared-users li.assigned span.assigned,#wunderlist-base .assign-to-user .shared-users li.assigned span.assigned,#wunderlist-base .tags .shared-users li.assigned span.assigned,#wunderlist-base .get-pro .all-tags li.assigned span.assigned,#wunderlist-base .assign-to-user .all-tags li.assigned span.assigned,#wunderlist-base .tags .all-tags li.assigned span.assigned{display:block;float:right;margin-top:7px;margin-right:3px} #wunderlist-base .get-pro .shared-users li.selected,#wunderlist-base .assign-to-user .shared-users li.selected,#wunderlist-base .tags .shared-users li.selected,#wunderlist-base .get-pro .all-tags li.selected,#wunderlist-base .assign-to-user .all-tags li.selected,#wunderlist-base .tags .all-tags li.selected{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #5cb6e7), color-stop(1, #317cd7));background-image:-webkit-linear-gradient(top, #5cb6e7 0, #317cd7 100%);background-image:-moz-linear-gradient(top, #5cb6e7 0, #317cd7 100%);background-image:-o-linear-gradient(top, #5cb6e7 0, #317cd7 100%);background-image:-ms-linear-gradient(top, #5cb6e7 0, #317cd7 100%);background-image:linear-gradient(top, #5cb6e7 0, #317cd7 100%);font-weight:bold;border-color:#0c67a5;text-shadow:0 -1px 0 rgba(0,0,0,0.5);} #wunderlist-base .get-pro .shared-users li.selected .name,#wunderlist-base .assign-to-user .shared-users li.selected .name,#wunderlist-base .tags .shared-users li.selected .name,#wunderlist-base .get-pro .all-tags li.selected .name,#wunderlist-base .assign-to-user .all-tags li.selected .name,#wunderlist-base .tags .all-tags li.selected .name{color:#fff} " }; });
define('views/Assigning/AssignToUserPopoverView',[

  'application/runtime',

  'collections/AssignableCollection',

  'views/Popovers/PopoverView',
  'views/Assigning/AssignToUserView',

  'views/Assigning/Controllers/AssignToUserPopoverViewController',

  'mixins/TaskBrowserView/ViewportMixin',

  'template!assignToUserPopover',

  'style!popover/assigningPopover'

], function (
  runtime,
  AssignableCollection,
  PopoverView, AssignToUserView,
  AssignToUserViewController,
  ViewportMixin,
  template,
  assigningPopoverStyle
) {

  

  var $ = runtime.$;
  var _ = runtime._;
  var _super = PopoverView.prototype;

  return PopoverView.extend({

    'template': template,

    'styles': [
      assigningPopoverStyle
    ],

    'config': {
      'bindToTarget': false,
      'margin':-4
    },

    'implements': [AssignToUserViewController],

    'observes': {
      'runtime': {
        'assignPopover:navigate': '>navigate',
        'assign:select': '>assign'
      }
    },

    'emits': {
      'mousedown li, img, div': 'assign',
      'click .no-assign': 'click:none'
    },

    'initialize': function (options) {

      var self = this;

      ViewportMixin.applyTo(self);

      if (options) {

        self.listId = options.listId;
        self.assignedTo = options.assignedTo;
        _.extend(self.config, options);
      }

      _super.initialize.apply(self, arguments);

      self.assignables = new AssignableCollection('/assignables/' + self.listId);
    },

    'renderListMembers': function () {

      var self = this;
      var $ul = self.$('.shared-users')[0];
      var ids = [];
      var docFrag = document.createDocumentFragment();

      var models = self.assignables.models;
      var assignableModel;

      for (var i=0, len=models.length; i < len; i++) {
        assignableModel = models[i];
        if (ids.indexOf(assignableModel.attributes.assignable_id) < 0) {

          var assigneeView = self.addSubview(new AssignToUserView({
            'listId': self.listId,
            'assignable': assignableModel
          }));

          docFrag.appendChild(assigneeView.render({'assignedTo':self.assignedTo}).el);
          ids.push(assignableModel.attributes.assignable_id);
        }
      }

      $ul.appendChild(docFrag);
    },

    'render': function () {

      var self = this;
      _super.render.apply(self, arguments);

      // this hides/shows the "None" option in a popover. Clicks have it, autocomplete does not
      self.$('.no-assign')[self.config.hideNoAssign === true ? 'addClass': 'removeClass']('hidden');
      self.renderListMembers();
      self.delegateEvents();

      return self;
    },

    'searchRecipients': function (string) {

      var self = this;
      var matches = [];
      var assignableName;
      self.assignableIndex = self.assignables.createSearchIndex();


      for (var key in self.assignableIndex) {
        assignableName = self.assignableIndex[key];
        if (assignableName && assignableName.toLowerCase().indexOf(_.escape(string.toLowerCase())) !== -1) {
          matches.push(key);
        }
      }

      return matches;
    },

    'renderSearchResults': function (matches) {

      var self = this;
      var $assignables = self.$('li').not('.no-assign');
      var isResult;

      $assignables.removeClass('selected');

      _.each($assignables, function (el) {

        isResult = !_.include(matches, $(el).attr('rel'));
        $(el).toggleClass('hidden', isResult);
      });

      var $results = self.$('.shared-users li').not('.hidden, .no-assign');
      if ($results.length > 0) {
        $results.first().addClass('selected');
      }
    },

    'selectNone': function () {

      var self = this;
      self.$('li').not('.no-assign').removeClass('selected').removeClass('hidden');
      self.$('.no-assign').addClass('selected');
    },

    'navigate': function (direction) {

      var self = this;
      var $els = self.$('.shared-users>li').not('.hidden');
      var $current = $els.filter('.selected');
      var menuSize = $els.size();
      var curIndex = $els.index($current);
      var nextIndex;

      var $next, name;

      if ($current.size()) {

        if (direction === 'up' || direction === 'down') {
          self._scrollTaskCheck(self.$('li.selected')[0], self.$('.shared-users'), $('.assign-to-user'));
          $els.removeClass('selected');
        }

        if (direction === 'up') {
          nextIndex = curIndex > 0 ? curIndex - 1 : menuSize - 1;
        }
        else if (direction === 'down') {
          nextIndex = curIndex < menuSize - 1 ? curIndex + 1 : 0;
        }

        if (nextIndex !== undefined) {
          $next = $($els.get(nextIndex));
        }
      }
      else {
        $next = $($els.get(0));
      }

      if ($next) {
        $next.addClass('selected');
        name = $next.find('.name').text();
        name && runtime.trigger('assigneeSelected', name);
      }
    }
  });
});
define('views/Tags/Controllers/TagPopoverViewController',[

  'application/runtime',
  'wunderbits/helpers/keycodes',
  'wunderbits/WBViewController',

], function (
  runtime,
  Keycodes,
  WBViewController,
  undefined
) {

  

  return WBViewController.extend({

    'implements': {
      'create:tag': 'createTag',
      'navigate': 'onNavigate',
      'close': 'onClose'
    },

    'createTag': function (ev) {

      var self = this;
      self.stopEventFully(ev);

      var $selected = self.view.$('.selected');
      var tag = $selected.html();

      if (!tag) {
        return;
      }

      runtime.trigger('tagAutoComplete:create', tag);
    },

    'onClose': function () {
      this.view.close();
    },

    'onNavigate': function (direction) {
      this.view.navigate(direction);
    }
  });
});
define('templates/tags/tagPopover',['vendor/handlebars'], function(H) {
var name = 'tags/tagPopover';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"tags\"> <div class=\"header\">Tags</div> <ul class=\"all-tags\"> </ul> </div>";
  });
});
define('styles/_autoComplete',[],function() { return {'name': '_autoComplete', 'styles': ".positionHelper{position:absolute;visibility:hidden;width:auto;white-space:nowrap;font-size:13px;font-weight:bold;text-shadow:0 1px 2px rgba(0,0,0,0.8);} .positionHelper.speech-enabled{margin-left:23px} .positionHelper .positionHelper-target{position:absolute;right:2px} " }; });
define('views/Tags/TagPopoverView',[

  'application/runtime',
  'views/Popovers/PopoverView',
  'mixins/TaskBrowserView/ViewportMixin',

  'views/Tags/Controllers/TagPopoverViewController',

  'template!tags/tagPopover',
  'style!popover/assigningPopover',
  'style!_autoComplete'

], function (
  runtime,
  PopoverView,
  ViewportMixin,
  TagPopoverViewController,
  tagPopoverTemplate,
  assigningPopover,
  autoCompleteStyle
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var _super = PopoverView.prototype;

  return PopoverView.extend({

    'template': tagPopoverTemplate,

    'styles': [assigningPopover, autoCompleteStyle],

    'config': {
      'bindToTarget': false,
      'margin':-4
    },

    'implements': [TagPopoverViewController],

    'observes': {
      'runtime': {
        'tag:select': '>create:tag',
        'tagPopover:navigate': '>navigate',
        'tagPopover:cancel': '>close'
      }
    },

    'emits': {
      'mousedown li': 'create:tag'
    },

    'initialize': function (options) {

      var self = this;

      if (options) {
        _.extend(self.config, options);
      }
      ViewportMixin.applyTo(self);

      _super.initialize.apply(self, arguments);
    },

    'render': function () {

      var self = this;
      _super.render.apply(self, arguments);

      return self;
    },

    'renderTagSearchResults': function (results) {

      var self = this;
      var $ul = self.$('.all-tags');
      $ul.empty();
      var select = false;

      if (results.length === 1) {

        select = true;
      }

      _.each(results, function (result) {

        $ul.append('<li class="name">' + result + '</li>');
        if (select) {

          self.$('.name').addClass('selected');
        }
      });
    },

    'navigate': function (direction) {

      var self = this;
      var $els = self.$('.all-tags>li').not('.hidden');
      var $current = $els.filter('.selected');
      var menuSize = $els.size();
      var curIndex = $els.index($current);
      var nextIndex;

      if ($current.size()) {

        if (direction === 'up' || direction === 'down') {
          self._scrollTaskCheck(self.$('li.selected')[0], self.$('.all-tags'), $('.tags'));
          $els.removeClass('selected');
        }

        if (direction === 'up') {
          nextIndex = curIndex > 0 ? curIndex - 1 : menuSize - 1;
        }
        else if (direction === 'down') {
          nextIndex = curIndex < menuSize - 1 ? curIndex + 1 : 0;
        }

        if (nextIndex !== undefined) {

          var $next = $($els.get(nextIndex));
          $next.addClass('selected');
        }
      }
      else {
        $($els.get(0)).addClass('selected');
      }
    }
  });
});
define('views/Popovers/Controllers/GetProPopoverViewController',[

  'application/runtime',
  'wunderbits/WBViewController',

], function (
  runtime,
  WBViewController,
  undefined
) {

  

  return WBViewController.extend({

    'implements': {
      'cancel': 'onCancel',
      'goto:proPage': 'goToProPage',
      'goto:iyfDialog': 'goToIYFDialog'
    },

    'onCancel': function () {

      runtime.trigger('focus', 'browser');
      runtime.trigger('route:' + runtime.lastAuthRoute);
    },

    'goToProPage': function (e) {

      var self = this;

      var analyticsString = 'ProAccounts:clickedGetProPopoverGoProButton';
      var url = 'preferences/account/pro';

      self.stopEventFully(e);

      if (runtime.user.isUnregistered()) {
        url = 'try/signup';
        analyticsString = '';
      }

      runtime.trigger('route:' + url);
      analyticsString && runtime.trigger('analytics:' + analyticsString);
      self.onClick();
    },

    'goToIYFDialog': function (e) {

      var self = this;
      var view = self.view;
      self.stopEventFully(e);
      
      runtime.trigger('route:inviteYourFriends/' + view.benefit);
      runtime.trigger('analytics:ProAccounts:clickedGetProPopoverTryProButton');
      self.onClick();
    },

    'onClick': function () {

      var view = this.view;
      view.options.onClick && view.options.onClick();
    }
  });
});
define('templates/getProPopover',['vendor/handlebars'], function(H) {
var name = 'getProPopover';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function", self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "non_pro_trial_free_limit_reached", options) : helperMissing.call(depth0, "localized", "non_pro_trial_free_limit_reached", options)))
    + " ";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_signup_or_login", options) : helperMissing.call(depth0, "localized", "button_signup_or_login", options)))
    + " ";
  return buffer;
  }

function program5(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "settings_upgrade_to_pro_label", "$settings_account_header_pro", options) : helperMissing.call(depth0, "localized", "settings_upgrade_to_pro_label", "$settings_account_header_pro", options)))
    + " ";
  return buffer;
  }

  buffer += "<div class=\"get-pro\"> <div class=\"header\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "tutorial_feature_pro_title", options) : helperMissing.call(depth0, "localized", "tutorial_feature_pro_title", options)))
    + "</div> <div class=\"feature-img ";
  if (stack2 = helpers.benefitType) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.benefitType; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\"></div> <p class=\"center\"> ";
  stack2 = helpers.unless.call(depth0, depth0.isUnregistered, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " ";
  if (stack2 = helpers.benefitString) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.benefitString; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </p> <div class=\"button-wrapper\"> <button class=\"green full go-to-pro\"> <b> ";
  stack2 = helpers['if'].call(depth0, depth0.isUnregistered, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " ";
  stack2 = helpers.unless.call(depth0, depth0.isUnregistered, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </b> </button> </div> </div>";
  return buffer;
  });
});
define('styles/popover/getProPopover',[],function() { return {'name': 'popover/getProPopover', 'styles': ".get-pro{width:220px;} .get-pro .header{margin:12px 0} .get-pro .feature-img{background:url(\"images/sprites/benefits.png\");width:134px;height:102px;margin:0 auto;} .get-pro .feature-img.assigning{background-position:0 0;width:138px;height:102px} .get-pro .feature-img.files{background-position:-138px -102px;width:138px;height:102px} .get-pro .feature-img.comments{background-position:0 -102px;width:138px;height:102px} .get-pro .button-wrapper{padding:7px;} .get-pro .button-wrapper .go-to-pro{padding:8px 3px;color:#fff} .get-pro .try-pro{margin-top:10px} .get-pro .token_0{font-weight:bold} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){#wunderlist-base .popover .get-pro .feature-img{background:url(\"images/sprites/benefits-retina.png\");-webkit-background-size:414px;-moz-background-size:414px;background-size:414px} }" }; });
define('views/Popovers/GetProPopoverView',[

  'application/runtime',

  'views/Popovers/Controllers/GetProPopoverViewController',

  'views/Popovers/PopoverView',

  'template!getProPopover',
  'style!popover/getProPopover',

], function (

  runtime,
  GetProPopoverViewController,
  PopoverView,
  template,
  getProStyle
) {

  

  var _super = PopoverView.prototype;

  return PopoverView.extend({

    'className': 'content',

    'template': template,

    'styles': [
      getProStyle
    ],

    'config': {
      'bindToTarget': false,
    },

    'implements': [GetProPopoverViewController],

    'observer': {
      'runtime': {
        'goProPopover:select': '>goto:proPage',
        'goProPopover:cancel': '>cancel'
      }
    },

    'emits': {
      'click .go-to-pro': 'goto:proPage',
      'click .try-pro': 'goto:iyfDialog'
    },

    'renderData': {
      'benefitType': undefined,
      'benefitString': undefined
    },

    'formatData': function (data) {

      var self = this;
      data = _super.formatData.call(self, data);

      data.isUnregistered = runtime.user.isUnregistered();

      var getLabel = runtime.language.getLabel;

      switch (self.benefit) {

      case 'assigning':
        data.benefitType = 'assigning';
        data.benefitString = getLabel('non_pro_trial_assign_next_to_do_$', runtime.language.getText('label_relative_date_tomorrow_mid_sentence')).toString();
        break;
      case 'files':
        data.benefitType = 'files';
        if (data.isUnregistered) {
          data.benefitString = getLabel('files_requires_account');
        }
        else {
          data.benefitString = getLabel('non_pro_trial_upload_next_file_$', runtime.language.getText('label_relative_date_tomorrow_mid_sentence')).toString();
        }
        break;
      case 'comments':
        data.benefitType = 'comments';
        if (data.isUnregistered) {
          data.benefitString = getLabel('comments_requires_account');
        }
        else {
          data.benefitString = getLabel('non_pro_trial_write_next_comment_$', runtime.language.getText('label_relative_date_tomorrow_mid_sentence')).toString();
        }
      }

      return data;
    },

    'initialize': function (settings) {

      settings = settings || {};

      var self = this;
      _super.initialize.apply(self, arguments);

      self.benefit = settings.benefit || 'assigning';
    },

    'render': function () {

      var self = this;

      runtime.trigger('popover:close');
      _super.render.call(self, self.formatData(self.renderData));

      return self;
    }
  });
});
define('templates/addTask',['vendor/handlebars'], function(H) {
var name = 'addTask';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"addTask-meta\"> <a class=\"addTask-meta-star right\"> <span class=\"icon input-star\"></span> </a> <a class=\"addTask-meta-assign ";
  if (stack1 = helpers.shareHiddenClass) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.shareHiddenClass; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + " right\"> <div class=\"icon input-assign\"></div> <span class=\"icon input-assign-frame\"></span> <span class=\"icon input-assign-delete\"></span> </a> <a class=\"addTask-meta-date right\"> <span class=\"icon input-date\"></span> </a> </div> <input type=\"text\" class=\"addTask-input chromeless\" maxlength=\"255\" x-webkit-speech/> <div class=\"positionHelper\"> <div class=\"positionHelper-text\"></div> <div class=\"positionHelper-target\"></div> </div>";
  return buffer;
  });
});
define('styles/addTask',[],function() { return {'name': 'addTask', 'styles': "#wunderlist-base .addTask{-webkit-box-shadow:inset 0 0 4px rgba(0,0,0,0.4),0 1px 0 rgba(255,255,255,0.4);box-shadow:inset 0 0 4px rgba(0,0,0,0.4),0 1px 0 rgba(255,255,255,0.4);background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(0,0,0,0.3)), color-stop(1, rgba(0,0,0,0.1)));background-image:-webkit-linear-gradient(top, rgba(0,0,0,0.3) 0, rgba(0,0,0,0.1) 100%);background-image:-moz-linear-gradient(top, rgba(0,0,0,0.3) 0, rgba(0,0,0,0.1) 100%);background-image:-o-linear-gradient(top, rgba(0,0,0,0.3) 0, rgba(0,0,0,0.1) 100%);background-image:-ms-linear-gradient(top, rgba(0,0,0,0.3) 0, rgba(0,0,0,0.1) 100%);background-image:linear-gradient(top, rgba(0,0,0,0.3) 0, rgba(0,0,0,0.1) 100%);-webkit-border-radius:4px;border-radius:4px;position:relative;margin:12px 1px 13px 0;border-top:1px solid rgba(0,0,0,0.4);padding:8px 12px;} #wunderlist-base .addTask.focus{-webkit-box-shadow:inset 0 0 4px rgba(0,0,0,0.4),0 1px 0 rgba(255,255,255,0.1),0 0 5px rgba(255,255,255,0.7);box-shadow:inset 0 0 4px rgba(0,0,0,0.4),0 1px 0 rgba(255,255,255,0.1),0 0 5px rgba(255,255,255,0.7)} #wunderlist-base .addTask .addTask-input{color:#fff;font-weight:bold;text-shadow:0 1px 2px rgba(0,0,0,0.8);padding-right:60px;} #wunderlist-base .addTask .addTask-input.is-assignable{padding-right:80px} #wunderlist-base .addTask .addTask-input::-webkit-input-placeholder{color:#dbdbdb;text-shadow:0 1px 2px rgba(0,0,0,0.45)} #wunderlist-base .addTask .addTask-input:-moz-placeholder{color:#dbdbdb;text-shadow:0 1px 2px rgba(0,0,0,0.45)} #wunderlist-base .addTask .addTask-input:-ms-input-placeholder{color:#dbdbdb;text-shadow:0 1px 0 rgba(0,0,0,0.45)} #wunderlist-base .addTask .addTask-input.speech-enabled{padding-left:23px;-webkit-transition:none;-moz-transition:none;-o-transition:none;-ms-transition:none;transition:none} #wunderlist-base .addTask .addTask-input::-webkit-input-speech-button{-webkit-appearance:none;cursor:pointer;opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60);position:absolute;left:8px;top:7px;} #wunderlist-base .addTask .addTask-input::-webkit-input-speech-button:hover{opacity:1;-ms-filter:none;filter:none} #wunderlist-base .addTask .addTask-meta{position:absolute;top:6px;right:0;opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);-webkit-transition:opacity 200ms linear;-moz-transition:opacity 200ms linear;-o-transition:opacity 200ms linear;-ms-transition:opacity 200ms linear;transition:opacity 200ms linear;} #wunderlist-base .addTask .addTask-meta a{cursor:default} #wunderlist-base .addTask .addTask-meta-star{margin-right:10px} #wunderlist-base .addTask .addTask-meta-date{margin-right:9px} #wunderlist-base .addTask .addTask-meta-assign{position:relative;margin-right:8px;} #wunderlist-base .addTask .addTask-meta-assign .avatar,#wunderlist-base .addTask .addTask-meta-assign .input-assign-frame,#wunderlist-base .addTask .addTask-meta-assign .input-assign-delete{position:absolute;display:none} #wunderlist-base .addTask .addTask-meta-assign .input-assign-frame{position:absolute;top:-2px;left:-2px;z-index:101} #wunderlist-base .addTask .addTask-meta-assign .input-assign-delete{position:absolute;top:-7px;right:-7px;z-index:102} #wunderlist-base .addTask .addTask-meta-assign .avatar{top:0;left:0} #wunderlist-base .addTask .addTask-meta-assign.assigned .avatar,#wunderlist-base .addTask .addTask-meta-assign.assigned span{display:block} #wunderlist-base .addTask .addTask-meta-assign.assigned .input-assign-delete{display:none} #wunderlist-base .addTask .addTask-meta-assign.assigned:hover .input-assign-delete{display:block} #wunderlist-base .focus .addTask-meta{opacity:1;-ms-filter:none;filter:none;} #wunderlist-base .focus .addTask-meta a{cursor:pointer} html[dir=rtl] #wunderlist-base #tasks .addTask input.speech-enabled{padding-right:23px;padding-left:60px} html[dir=rtl] #wunderlist-base #tasks .addTask input::-webkit-input-speech-button{right:8px;left:initial} html[dir=rtl] #wunderlist-base #tasks .addTask .addTask-meta{left:0;right:initial} html[dir=rtl] #wunderlist-base #tasks .addTask .addTask-meta-star,html[dir=rtl] #wunderlist-base #tasks .addTask .addTask-meta-date,html[dir=rtl] #wunderlist-base #tasks .addTask .addTask-meta-assign{margin-right:initial} html[dir=rtl] #wunderlist-base #tasks .addTask .addTask-meta-star{margin-left:10px} html[dir=rtl] #wunderlist-base #tasks .addTask .addTask-meta-date{margin-left:9px} html[dir=rtl] #wunderlist-base #tasks .addTask .addTask-meta-assign{margin-left:8px} " }; });
define('views/Tasks/AddTaskView',[

  'application/runtime',

  'vendor/moment',

  'wunderbits/WBView',
  'wunderbits/WBPopoverView',
  'wunderbits/WBBlurHelper',

  'views/Tasks/AddTaskDatePickersView',
  'views/Assigning/AssignToUserPopoverView',
  'views/Tags/TagPopoverView',
  'views/Popovers/GetProPopoverView',
  'views/AvatarView',

  'collections/TaskCollection',
  'collections/ReminderCollection',
  'collections/ShareCollection',

  'wunderbits/helpers/date',
  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/strings',

  'template!addTask',
  'style!addTask',
  'style!_autoComplete'

], function (

  runtime,
  moment,
  WBView, Popover, WBBlurHelper,
  AddTaskDatePickers, AssignToUserPopover, TagPopoverView, GetProPopover, AvatarView,
  TaskCollection, ReminderCollection, ShareCollection,
  date, Keycodes, Strings,
  addTaskTemplate,
  addTaskStyle, autoCompleteStyle,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var window = runtime.global;

  var _super = WBView.prototype;
  var DateHelper = date;
  var _blur = WBBlurHelper;

  var placeholderKeys = {

    'starred': 'add_starred_to_inbox',
    'today': 'add_due_today_to_inbox',
    'all': 'add_to_inbox'
  };

  return WBView.extend({

    'template': addTaskTemplate,

    'className': 'addTask',

    'styles': [addTaskStyle, autoCompleteStyle],

    'overrideBlurDelay': 200,

    'events': function () {

      var events = {

        'keydown input': 'handleKeys',
        'keyup input': 'checkInputVal',
        'blur input': 'onInputBlur',
        'focus input': 'onInputFocus',
        'click .icon': 'onInputFocus',

        'click .addTask-meta-star': '_debouncedToggleFavorite',
        'click .addTask-meta-date': '_debouncedToggleDatePicker',
        'click .addTask-meta-assign': '_debouncedToggleAssignPicker',

        'click .input-assign-delete': 'removeAssignee',

        'mousedown .addTask-meta-star': '_debouncedOnInteractionStart',
        'mousedown .addTask-meta-date': '_debouncedOnInteractionStart',
        'mousedown .addTask-meta-assign': '_debouncedOnInteractionStart',

        'mousedown .addTask-input': '_debouncedOnInteractionStart'
      };

      if (runtime.env.isTouchDevice()) {

        var touchEvents = {

          'touchstart .addTask-meta-date': '_debouncedOnInteractionStart',
          'touchstart .addTask-meta-star': '_debouncedOnInteractionStart',
          'touchstart .addTask-input': '_debouncedOnInteractionStart'
        };

        _.extend(events, touchEvents);
      }

      return events;
    },

    'initialize': function () {

      var self = this;

      self._shouldBlur = true;

      _super.initialize.apply(self, arguments);

      runtime.settings.attributes.labs_tag_autocomplete_enabled === 'true';

      self.interfaceReady = new $.Deferred();
      self.bindOnceTo(runtime, 'interface:ready', function(){

        self.interfaceReady.resolve();
        _.delay(function () {

          runtime.trigger('show:coach_mark_inbox');
        },1000);
      });

      self.bindTo(runtime, 'lists:ready', function (allLists) {

        self.lists = allLists;
      });

      self.bindTo(runtime, 'addTaskDatePicker:close', self._closeDatePicker);

      self.datePickers = self.addSubview(new AddTaskDatePickers(), 'datePickers');
      self.bindTo(self.datePickers.datePicker.model, 'change', self._onSetChanges);
      self.bindTo(self.datePickers.reminderDatePicker.model, 'change', self._onSetChanges);

      self.bindTo(runtime, 'goProPopover:cancel', self.closeGetProPopover);

      self.bindTo(runtime.language, 'change:data', function () {

        self.bindTo(runtime, 'lists:ready', function () {

          self.setPlaceholder();
        });
      });

      self.bindTo(runtime, 'tags:suggestions', self.handleTagSuggestions);

      self.bindTo(runtime, 'tagAutoComplete:create', function (tag) {

        var $input = self.$('.addTask-input');
        var currentVal = $input.val();
        var words = currentVal.split(' ');
        var valueWithoutTag = _.initial(words).join(' ');
        var newValue = '';

        if (!valueWithoutTag) {

          newValue = tag + ' ';
        }
        else {

          newValue = valueWithoutTag + ' ' + tag + ' ';
        }

        $input.val(newValue);
        self.closeTagPopover();
      });

      // create reminder for last added task!
      var tasksReady = self.deferred();
      self.bindTo(runtime, 'tasks:ready', function (allTasks) {

        self.allTasks = allTasks;
        tasksReady.resolve();
      });

      self.when(tasksReady).done(function () {

        self.bindTo(self.allTasks, 'add', function (model) {

          if (model.attributes.position === self.lastAddedPosition) {

            if (self.lastReminderDate && self.lastReminderTime) {

              self._createReminder(model);
            }
            self.lastAddedPosition = null;
          }
        });
      }, self);

      // debouncers
      self._debouncedToggleFavorite = _.debounce(self.toggleFavorite, 250, true);
      self._debouncedToggleDatePicker = _.debounce(self.toggleDatePicker, 250, true);
      self._debouncedOnInteractionStart = _.debounce(self._onInteractionStart, 250, true);
      self._debouncedToggleAssignPicker = _.debounce(self.toggleAssignPicker, 250, true);
      self._debouncedOpenAssignPicker =  _.debounce(self.openAssignPopover, 250, true);
    },

    'render': function (options) {

      var self = this;
      var shouldNotRender = false;
      var json;

      // to avoid re-render and content reset when opening/closing task vs filter/lists
      if (self.listID === options.listID && !options.filter && !self.filter || self.listID === options.listID && options.filter && options.filter === self.filter) {

        shouldNotRender = true;
      }

      self.filter = options.filter || (!options.listModel ? self.filter : null);

      if (shouldNotRender) {

        return self;
      }

      self.datePickers.clearDates();
      var isSavedSearch = options.listModel && options.listModel.isSavedSearch && options.listModel.isSavedSearch();

      if (!isSavedSearch && options && (self.filter !== 'completed' && self.filter !== 'week' && self.filter !== 'assigned' && self.filter !== 'conversations')) {

        if (options && options.listID) {

          self.listID = options.listID;
          self.listShares = new ShareCollection('/shares/' + self.listID + '/shares');

          self.options.listModel = options.listModel;
          json = options.listModel && options.listModel.toJSON() || {};

          json.shareHiddenClass = options.listModel && options.listModel.has('share_id') && 'hidden';
        }

        _super.render.call(self, json);

        if (!self.filter) {

          self.filter = null;
          self.dueDate = null;
          self.assigneeId = null;
        }

        if (runtime.env.isWebkitSpeechEnabled()) {
          self.$('.addTask-input').addClass('speech-enabled');
          self.$('.positionHelper').addClass('speech-enabled');
        }

        self.setupFilters();
        self.setPlaceholder();

        self.$el.addClass('hidden');
      }
      else {

        self.$el.addClass('hidden');
      }

      // make sure that placeholder is updated if list title is changed
      if (!self.filter) {

        self.list = self.lists.get(self.listID);
        self.placeholderBind && self.unbindFrom(self.placeholderBind);
        self.placeholderBind = self.bindTo(self.list, 'change:title', self.setPlaceholder);
      }

      self.renderPopover();
      self.updateIsAssignable();

      return self;
    },

    'updateIsAssignable': function () {

      var self = this;
      var json = self.options.listModel && self.options.listModel.toJSON();
      var isAssignable = runtime.user.trialModel.canAssign() && _.has(json, 'share_id');

      self.$('.addTask-input').toggleClass('is-assignable', isAssignable);
      self.$('.addTask-meta-assign').toggleClass('hidden', !isAssignable);

      if (self.options.listModel && !isAssignable) {

        self.assignableBind && self.unbindFrom(self.assignableBind);
        self.assignableBind = self.bindTo(self.options.listModel, 'change:share_id', self.updateIsAssignable);
      }
      else  {

        self.bindTo(runtime, 'addTaskDatePicker:close', self._closeDatePicker);
        self.bindTo(runtime, 'assignPopover:cancel', _.debounce(self.closeAssignPopover), 250, true);
        self.assignableBind && self.unbindFrom(self.assignableBind);
      }
    },

    'setupFilters' : function() {

      var self = this;

      if (self.filter) {
        self.dueDate = null;
      }

      if (self.filter === 'starred') {

        self.$('.icon.input-star').addClass('starred').addClass('hidden');
        self.$('.addTask-meta-date').addClass('in-starred');
        self.$el.undelegate('.addTask-meta-star', 'click');
      }

      if (self.filter === 'today') {

        self.$('.icon.input-date').addClass('dated hidden').html(moment().format('D'));
        self.dueDate = moment().format('YYYY-MM-DD');
        self.dateBind = self.bindTo(runtime, 'day:ended', function () {

          self.dueDate = moment().format('YYYY-MM-DD');
        });
      }
      else {

        self.dateBind && self.unbindFrom(self.dateBind);
      }
    },

    'setPlaceholder': function () {

      var self = this;
      var $input = self.$('.addTask-input');
      var placeholder;

      var placeholderKey = placeholderKeys[self.filter];

      if (placeholderKey) {

        $input.attr('data-key-placeholder', 'placeholder_' + placeholderKey);
        $input.attr('data-placeholder', '');
      }
      else {

        var list = self.lists.get(self.listID);
        placeholder = (list && list.id === 'inbox') ? runtime.language.getText('smart_list_inbox') : list && list.attributes.title;

        $input.attr('data-key-placeholder', 'placeholder_add_task_to_$');
        $input.attr('data-placeholder', placeholder);
      }

      self.renderPlaceHolders();
    },

    'setFocus': function () {

      var self = this;
      self.interfaceReady.done(function () {

        _.delay(function () {
          self.$('.addTask-input').focus();
        }, 1);
      });
    },

    'handleTagSuggestions': function (tags) {

      var self = this;

      if (!self.searchingTags) {
        return;
      }

      if (!self.tagPopover) {

        self.setupTagPopover();
      }

      if (tags.length) {

        if (!self.tagPopover.isOpen) {

          self.openTagPopover();
        }

        self.tagPopover.renderTagSearchResults(tags);
      }
      else {

        self.closeTagPopover();
      }
    },

    'onInputFocus': function() {

      var self = this;

      var route = 'lists/' + (self.filter || self.listID) + '/tasks/new';

      if (runtime.currentRoute() !== route) {
        runtime.trigger('route:' + route);
      }

      runtime.trigger('focus:set', 'addTask');

      self.$el.addClass('focus');
      var $meta = self.$('.addTask-meta');
      $meta.removeClass('invisible transparent');

      if (!self.autoCompleteBind || !self.autoCompleteBind.target) {
        self.autoCompleteBind = self.bindTo(runtime, 'autoComplete:assign', _.debounce(self.assignToUser.bind(self)), 250, true);
      }
    },

    '_redirectIfStillActive': function () {

      var self = this;

      self.defer(function () {

        var route = runtime.currentRoute();
        var isRouteActive = route.indexOf('/tasks/new') >= 0;

        if (isRouteActive) {

          var returnRoute = 'lists/' + (self.filter || self.listID);

          runtime.trigger('route:' + returnRoute);

          self.defer(function () {

            var focus = $('.task-list li').length ? 'browser' : 'sidebar';
            runtime.trigger('focus:set', focus).trigger('tasks:selectFirst');
          });
        }
      });
    },

    'onInputBlur': function() {

      var self = this;

      self.searchingTags = false;

      if (self.autoCompleteBind) {
        self.unbindFrom(self.autoCompleteBind);
      }

      if (!self._shouldBlur) {

        return;
      }

      self.$el.removeClass('focus');

      var $meta = self.$('.addTask-meta');
      $meta.addClass('invisible transparent');

      self._redirectIfStillActive();
    },

    'handleKeys': function(e) {

      var self = this;
      var $input = self.$('.addTask-input');

      var keyCode = e.which;

      if (keyCode === 17) {
        return;
      }

      // block new browser window in chrome app
      if (runtime.env.isChromeApp() && e.ctrlKey && e.which === 78) {
        return e.preventDefault();
      }
      if (keyCode === Keycodes.dash) {
        return e.stopPropagation();
      }

      if (runtime.focus === 'assignPopover' || runtime.focus === 'tagPopover') {
        return;
      }

      if (keyCode === Keycodes.enter) {

        var taskTitle = $.trim($input.val());

        if (taskTitle === '') {
          return false;
        }

        var cachedDueDate = self.dueDate;
        if (self.filter === 'today' && !self.dueDate || self.filter === 'starred') {
          self.setupFilters();
        }

        if (self.filter === 'starred') {
          self.dueDate = cachedDueDate;
        }

        var isStarred = self.$('.icon.input-star').hasClass('starred');

        self.defer(function () {
          $input.val('');
        });

        self.$('.icon.input-date').empty().removeClass('dated');
        self.$('.icon.input-star').removeClass('starred');
        taskTitle = Strings.emojiTokensToUnicode(taskTitle);

        var data = {
          'title': taskTitle,
          'list_id': self.listID,
          'starred': isStarred,
          'due_date': self.dueDate,
          'assignee_id': self.assigneeId,
          'recurrence_count': self.frequency,
          'recurrence_type': (self.interval || '').replace('s', '')
        };

        if (self.allTasks) {

          var lastPos, firstPos, thisPos;
          var thisCollection = new TaskCollection('/lists/' + self.listID + '/tasks');
          thisCollection.sort();

          // This is super important:
          thisCollection.updatePositions();
          var positions = thisCollection.positions;

          // get the first and last task collection model positions
          firstPos = positions ? positions.normal.first : 0;
          lastPos = positions ? positions.normal.last : 0;

          var overRidden = e.originalEvent && e.originalEvent.altKey;
          var settingsToTop = runtime.settings.attributes.new_task_location === 'top';
          var toTop = isStarred ? !overRidden : settingsToTop ? !overRidden : overRidden;

          if (toTop) {
            thisPos = thisCollection.models.length ? firstPos - 10 : 0;
          }
          else {
            thisPos = thisCollection.models.length ? lastPos + 10 : 0;
          }

          data.position = thisPos;

          self.lastAddedPosition = data.position;
          self.lastReminderDate = self.reminderDate;
          self.lastReminderTime = self.reminderTime;

          self.allTasks.add(data);

          self.reminderDate = null;
          self.reminderTime = null;
          self.assigneeId = null;

          runtime.trigger('popover:close');

          if (self.assignPopover && _.has(self.assignPopover, 'assignedTo')) {

            self.assignPopover.assignedTo = null;
          }

          data = {};

          self.removeAssignee();

          runtime.trigger('analytics:AddTask:addWithReturn');
        }

        runtime.trigger('show:coach_mark_detail_view');

        self.resetDates();
        self.setupFilters();
      }
      else if (keyCode === Keycodes.esc) {

        var currentVal = $input.val();

        if (currentVal) {

          $input.val('');
          runtime.trigger('analytics:AddTask:clearWithEscape');
        }
        else {

          _blur.run();
          runtime.trigger('analytics:AddTask:blurWithEscape');
        }
      }
      else if (keyCode === Keycodes.tab) {

        e.preventDefault();
        _blur.run();
      }
      // On Ctrl+D, open the date picker
      // It is hard coded because it's also the 'done' keyboard shortcut
      else if (e.ctrlKey) {
        var keyCodeChar = String.fromCharCode(keyCode);
        if (/d/i.test(keyCodeChar)) {
          self.toggleDatePicker(e);
        }
        // TODO: Enable this for starring shortcut
        // Right now the addTaskDatePicker:close event blurs a lot of things
        // This is bad UX
        // else if (/s/i) {
        //   self.toggleFavorite(e);
        // }
      }

      e.stopPropagation();
    },

    'checkInputVal': function (e) {

      var self = this;

      var blockKeys = [Keycodes.shift, Keycodes.left, Keycodes.right, Keycodes.up, Keycodes.down, Keycodes.esc, Keycodes.enter];
      // ignore these keys or if the list is not shared or not pro
      if (_.indexOf(blockKeys, e.which) !== -1) {

        return;
      }

      var $input = $(e.target).val();
      var lastCharacter = $input.charAt($input.length -1);
      var secondToLastCharacter = $input.charAt($input.length -2);
      var words = $input.split(' ');
      var firstWords = _.initial(words);
      var lastWord = words[words.length - 1];
      var lastAtIndex = $input.lastIndexOf('@');
      var characterBeforeAt = $input.slice(lastAtIndex-1, lastAtIndex);
      var name = $input.slice(lastAtIndex + 1, $input.length);
      var previousTags = [];

      if (lastWord[0] === '#') {

        if (!self.tagPopover) {
          self.setupTagPopover();
        }

        self.searchingTags = true;

        for (var i = 0, max = firstWords.length; i < max; i++) {
          if (firstWords[i][0] === '#') {
            previousTags.push(firstWords[i]);
          }
        }

        runtime.trigger('tags:getSuggestions', lastWord, previousTags);

        return;
      }
      else {

        self.searchingTags = false;
        self.closeTagPopover();
      }

      if (self.list && !self.list.isShared() || !runtime.user.trialModel.canAssign() || self.filter) {

        return;
      }

      if (!self.assignPopover && !self.assigneeId) {
        self.setupAssignPopover();
      }

      var searchResults = self.assignPopover && self.assignPopover.searchRecipients(name);
      self.assignPopover && self.assignPopover.renderSearchResults(searchResults);

      // we need to know the second to last as well, otherwise email addresses tick off popover
      if ((lastCharacter === '@' && secondToLastCharacter === ' ' || (lastCharacter === '@' && $input.length === 1))) {

        self.openAssignPopover();
      }
      // hitting a space should close the popover if its open
      else if (lastCharacter === ' ' && self.assignPopover) {

        self.closeAssignPopover();
      }
      // if there is a a space before the @ (email) or if its the first character
      else if ((lastCharacter === '@' && secondToLastCharacter === ' ' && self.assignPopover) || ($input[0] === '@' && $input.indexOf(' ') === -1 && self.assignPopover) || (lastWord && lastWord.indexOf('@') !== -1)) {

        if (searchResults.length > 0 && name !== '' && (characterBeforeAt === ' ' || characterBeforeAt === '')) {
          self.openAssignPopover();
        }
        else {
          self.closeAssignPopover();
        }
      }
      else if ($input === '') {

        self.closeAssignPopover();
      }
      else {

        if (!self.assignPopover) {
          self.setupAssignPopover();
        }

        var parts = $input.split(' ');
        var possibleName = parts[parts.length - 1];
        var results = self.assignPopover.searchRecipients(possibleName);

        if (results.length > 0 && lastWord.length >= 3) {

          self._debouncedOpenAssignPicker();
          self.assignPopover.searchRecipients(possibleName);
          self.assignPopover.renderSearchResults(results);
        }
        else {

          self.closeAssignPopover();
        }
      }
    },

    'setupTagPopover': function (options) {

      var self = this;
      var settings = {
        'context': self,
        'target': self.$('.positionHelper-target'),
        'position': 'bottom',
        'offset': 70,
        'margin': -4,
        'onClose': function () {
          self.$('.text').html('');
          self.destroySubview(self.tagPopover);
          self.tagPopover = null;
          runtime.trigger('focus:set', 'addTask');
        },
      };

      options && _.extend(settings, options);

      self.tagPopover = self.addSubview(new TagPopoverView(settings), 'tagPopover');
    },

    'openTagPopover': function () {

      var self = this;

      runtime.trigger('focus:set', 'tagPopover');

      var $helper = self.$('.positionHelper-text');
      $helper.html('');

      var $input = self.$('.addTask-input');
      var value = $input.val();
      var words = value.split(' ');
      var valueWithoutAssignee = words.slice(0,words.length - 1);
      // this is the distance to the beginning of the next word
      $helper.html(valueWithoutAssignee + '+');

      var openOptions = {};

      $helper.removeAttr('style');
      openOptions.offset = 60;
      openOptions.reconfig = true;

      self.tagPopover && self.tagPopover.toggle('open', openOptions);

      self._shouldBlur = false;
    },

    'closeTagPopover': function () {

      var self = this;

      if (self.tagPopover && self.tagPopover.isOpen) {
        self.tagPopover && self.tagPopover.toggle('close', {});
        runtime.trigger('focus:set', 'addTask');
        self.defer(function () {
          self.$('.addTask-input').focus();
          self._shouldBlur = true;
        });
      }
    },

    'setupAssignPopover': function (clickTarget, options) {

      var self = this;
      var target = clickTarget ? clickTarget: self.$('.positionHelper-target');

      var settings = {
        'context': self,
        'target': target,
        'position': 'bottom',
        'listId': self.listID,
        'assignedTo': self.assigneeId,
        'offset': 70,
        'margin': -4,
        'hideNoAssign': true,
        'onClose': function () {
          self.$('.text').html('');
          self.destroySubview(self.assignPopover);
          self.assignPopover = null;
          runtime.trigger('focus:set', 'addTask');
        },
      };

      options && _.extend(settings, options);

      if (self.assignPopover) {
        self.destroySubview(self.assignPopover);
        self.assignPopover = null;
      }

      self.assignPopover = self.addSubview(new AssignToUserPopover(settings), 'assignPopover');
      self.bindTo(self.assignPopover, 'clear:assigned', self.removeAssignee);
    },

    'openAssignPopover': function (clickTarget, options) {

      var self = this;

      runtime.trigger('focus:set', 'assignPopover');

      var $helper = self.$('.positionHelper-text');
      $helper.html('');

      var $input = self.$('.addTask-input');
      var value = $input.val();
      var words = value.split(' ');
      var valueWithoutAssignee = words.slice(0,words.length - 1);
      // this is the distance to the beginning of the next word
      $helper.html(valueWithoutAssignee + '+');

      // if the icon is clicked, it has a specific target
      if (!self.assignPopover || clickTarget) {
        self.setupAssignPopover(clickTarget, options);
      }

      var targetWidth = $helper.width();
      var inputWidth = self.$('.addTask-input').width();
      var openOptions = {};

      openOptions.startedFromKeys = clickTarget ? false : true;

      // dynamically set which side the popover shows up on
      // depending if there is room on the input field or if it is a click
      if (targetWidth > inputWidth) {

        $helper.css('margin-left','-' + ((targetWidth - inputWidth) + 5) + 'px');
        // -70 is the number that moves the popover the the opposite side that the "standard" behavior
        // used when the input is overflowing
        openOptions.offset = -70;
      }
      else if (clickTarget) {
        // -60 is the number that moves the popover to the position when clicking the assign icon
        openOptions.offset = -60;
        openOptions.arrowOffset = 3;
      }
      else {

        $helper.removeAttr('style');
        // 70 is the number that is the standard behavior, but it needs to be reset if you were overflowing
        openOptions.offset = 70;
      }

      // reconfig is a flag in the PopoverView that extends new options for a popover open, overwriting the initial settings
      openOptions.reconfig = true;
      if (!self.assignPopover.isOpen) {

        self.assignPopover && self.assignPopover.toggle('open', openOptions);
      }

      self._shouldBlur = false;
    },

    'closeAssignPopover': function () {

      var self = this;

      if (self.assignPopover && self.assignPopover.isOpen) {
        self.assignPopover && self.assignPopover.toggle('close', {});
        runtime.trigger('focus:set', 'addTask');
        self.defer(function () {
          self.$('.addTask-input').focus();
          self._shouldBlur = true;
        });
      }
    },

    'assignToUser': function (id, fromClick, startedFromTyping) {

      var self = this;
      var currentVal = self.$('.addTask-input').val();

      // if its not from a click event, then we dont need to chop off the last word
      if (!fromClick || startedFromTyping) {

        var words = currentVal.split(' ');

        var lastWord = _.last(words).toLowerCase();
        var valueWithoutAssignee = _.initial(words);

        if (lastWord.indexOf('@') === 0) {
          lastWord = lastWord.substr(1);
        }

        var user = self.assignPopover.assignables.where({
          'assignable_id': id
        })[0];
        var userName = user.attributes.name.toLowerCase();

        if (userName.indexOf(lastWord) < 0) {
          valueWithoutAssignee = words;
        }

        var result = $.map(valueWithoutAssignee, function (word) {
          return word.replace(/\s/g, '-');
        }).join(' ');

        self.$('.addTask-input').val(result + ' ');
      }

      self.setAssignImage(id);
    },

    'setAssignImage': function (id) {

      var self = this;
      var $assigneeIcon = self.$('.addTask-meta-assign');
      $assigneeIcon.addClass('assigned');

      if (!self.assignPopover) {

        self.setupAssignPopover();
      }

      self.avatarView = self.avatarView || self.addSubview(new AvatarView({size:'small'}), 'avatarView');

      $assigneeIcon.append(self.avatarView.render({id:id}).$el);

      self.assigneeId = id;

      self.closeAssignPopover();
    },

    'toggleAssignPicker': function (ev) {

      var self = this;

      ev && ev.stopPropagation();
      ev && ev.preventDefault();

      if (!runtime.user.trialModel.canAssign()) {

        self.openGetProPopover();
        return;
      }

      if ($(ev.target).hasClass('input-assign-delete')) {

        self.removeAssignee();
        return;
      }

      if (self.assignPopover && self.assignPopover.isOpen) {
        return;
      }

      var options =  {
        'margin':15,
        'offset':-40,
        'hideNoAssign': false
      };

      if (self.popover && self.popover.popoverOpened) {
        self._shouldBlur = false;
        self._closeDatePicker();
      }

      self.openAssignPopover($(ev.target).closest('.addTask-meta-assign'), options);
    },

    'removeAssignee': function () {

      var self = this;
      self.$('a.addTask-meta-assign').removeClass('assigned');
      self.assigneeId = null;
      self.assignPopover && self.closeAssignPopover();
    },

    'openGetProPopover': function () {

      var self = this;

      if (self.getProPopover) {

        return;
      }

      self.defer(function () {

        runtime.trigger('focus:set', 'goProPopover');
      });

      var settings = {
        'context': self,
        'target': self.$('.input-assign'),
        'position': 'bottom',
        'offset': -55,
        'returnRoute': 'lists/' + self.listID + '/tasks/new',
        'onClose': function () {

          self.destroySubview(self.getProPopover);
          self.getProPopover = null;
        }
      };

      self.getProPopover = self.addSubview(new GetProPopover(settings), 'getProPopover');
      self.getProPopover.toggle('open', settings);

      runtime.trigger('analytics:ProAccounts:startProFunnel', 'addTaskAssign');
      runtime.trigger('analytics:ProAccounts:openGetProPopover', 'addTaskAssign');
    },

    'closeGetProPopover': function () {

      var self = this;

      self.getProPopover && self.getProPopover.toggle('close', {});
      self.$('.addTask-input').focus();
    },

    'resetDates': function () {

      var self = this;

      self.frequency = null;
      self.interval = null;
      self.dueDate = null;
      self.reminderDate = null;
      self.reminderTime = null;

      self.datePickers.clearDates();
    },

    'toggleFavorite': function (ev) {

      var self = this;
      var $el = self.$('span.input-star');
      var isStarred = $el.hasClass('starred');

      ev && ev.stopPropagation();
      ev && ev.preventDefault();

      runtime.trigger('addTaskDatePicker:close');
      runtime.trigger('analytics:AddTask:toggleFavorite', !isStarred);

      $el.toggleClass('starred', !isStarred);
      self.$('.addTask-input').focus();
    },

    'renderPopover': function() {

      var self = this;

      self.popover = self.addSubview(new Popover({
        'context': self,
        'content': self.datePickers,
        'target': self.$('.icon.input-date'),
        'ignoredElements': [
          self.$('a.addTask-meta-date'),
          self.$('.icon.input-date'),
          self.$('#edit-repeat'),
          self.$('#edit-repeat-frequency'),
          self.$('#edit-repeat-interval')
        ],
        'bindToTarget': false,
        'animation': true,
        'position': (runtime.env.isMicro() ? 'left' : 'bottom'),
        'offset': 0,

        'onInputBlur': function () {

          self._onSetChanges();
          self.delegateEvents();
        },

        'onClose': function () {

          self._onSetChanges();
          self.delegateEvents();
          self.onInputBlur();

          self.defer(function () {
            if (runtime.focus === 'addTaskDatePicker') {
              runtime.trigger('focus:set', 'browser');
            }
          });
        }
      }), 'datePickersPopover');
    },

    'toggleDatePicker': function (ev) {

      var self = this;

      ev && ev.stopPropagation();
      ev && ev.preventDefault();

      if (self.filter === 'today') {
        self.$('.addTask-input').focus();
        return;
      }

      if (self.popover.popoverOpened) {

        runtime.env.isMicro() && self.popover.trigger('popover:close');
        runtime.trigger('analytics:AddTask:toggleDatepicker', 'close');
        return;
      }

      ev.preventDefault();
      ev.stopPropagation();

      runtime.trigger('analytics:AddTask:toggleDatepicker', 'open');
      runtime.trigger('focus:set', 'addTaskDatePicker');

      var offset = -54;

      self.popover.options.offset = offset;
      self.popover.options.margin = 18;

      self.datePickers.datePicker.model.set({'interval':null, 'date':null, 'frequency':null});
      self.datePickers.reminderDatePicker.model.set({'interval':null, 'date':null, 'frequency':null});
      self.closeAssignPopover();
      self.popover.trigger('popover:open');
    },

    '_closeDatePicker': function () {

      var self = this;

      self.popover.trigger('popover:close');
      self.defer(function () {
        runtime.trigger('route:lists/' + self.listID + '/tasks/new');
      });
    },

    '_onSetChanges': function() {

      var self = this;

      self.frequency = null;
      self.interval = null;
      self.dueDate = null;
      self.reminderDate = null;
      self.reminderTime = null;

      var date = self.datePickers.datePicker.model.attributes.date;
      var frequency = self.datePickers.datePicker.model.attributes.frequency;
      var interval = self.datePickers.datePicker.model.attributes.interval;

      var hasDate = date ? true : false;
      var reminder =  self.datePickers.reminderDatePicker.model.attributes.date;
      var reminderTime = self.datePickers.reminderDatePicker.model.attributes.reminder_time;

      date ? self.dueDate = DateHelper.convertLocalDateToServerDate(moment(date).format('YYYY-MM-DD')) : self.dueDate = null;
      reminder ? self.reminderDate = moment(reminder).format('YYYY-MM-DD') : self.reminderDate = null;
      reminderTime ? self.reminderTime = reminderTime : self.reminderTime = null;
      frequency ? self.frequency = frequency : self.frequency = null;
      interval ? self.interval = interval : self.interval = null;

      self.$('.icon.input-date').toggleClass('dated', hasDate);

      if(date) {
        self.$('.icon.input-date').html(moment(date).format('D'));
      } else {
        self.$('.icon.input-date').empty();
      }

      if (!date && !reminder) {

        self.$('.dated').removeClass('dated');
      }
    },

    '_createReminder': function (model) {

      var self = this;
      var allReminders = new ReminderCollection('/reminders/all');
      var date = self.lastReminderDate;
      var timeParts = self.lastReminderTime.split(':');
      var hour = Number(timeParts[0]);
      var minute = Number(timeParts[1]);
      var ISO, data;

      if (date !== null && hour !== null && minute !== null) {

        //time = Strings.pad(hour, 2) + ':' + Strings.pad(minute, 2);

        ISO = moment(date).sod().add({

          'h': hour,
          'm': minute
        }).format('YYYY-MM-DDTHH:mm:ss');

        ISO = DateHelper.convertLocalTimeToServerTime(ISO);

        data = {'task_id': model.attributes.id, 'date': ISO};

        allReminders.add(data);
      }
    },

    '_onInteractionStart': function () {

      var self = this;

      self._shouldBlur = false;

      window.clearTimeout(self._blurTimer);
      self._blurTimer = window.setTimeout(function () {

        self._shouldBlur = true;
      }, self.overrideBlurDelay);
    }
  });
});
define('templates/TBV404',['vendor/handlebars'], function(H) {
var name = 'TBV404';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function";


  buffer += "<span class=\"icon fourohfour\"> <span class=\"today-date\"></span> </span> <h2>";
  if (stack1 = helpers.message) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.message; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "</h2>";
  return buffer;
  });
});
define('styles/_dates',[],function() { return {'name': '_dates', 'styles': ".today-date{width:40px;height:25px;display:inline-block;background:url(\"images/numbers.png\");-webkit-background-size:auto 25px;-moz-background-size:auto 25px;background-size:auto 25px;margin:37px 20px 0;display:none;} .today-date.date-1{background-position:0 0} .today-date.date-2{background-position:-40px 0} .today-date.date-3{background-position:-80px 0} .today-date.date-4{background-position:-120px 0} .today-date.date-5{background-position:-160px 0} .today-date.date-6{background-position:-200px 0} .today-date.date-7{background-position:-240px 0} .today-date.date-8{background-position:-280px 0} .today-date.date-9{background-position:-320px 0} .today-date.date-10{background-position:-360px 0} .today-date.date-11{background-position:-400px 0} .today-date.date-12{background-position:-440px 0} .today-date.date-13{background-position:-480px 0} .today-date.date-14{background-position:-520px 0} .today-date.date-15{background-position:-560px 0} .today-date.date-16{background-position:-600px 0} .today-date.date-17{background-position:-640px 0} .today-date.date-18{background-position:-680px 0} .today-date.date-19{background-position:-720px 0} .today-date.date-20{background-position:-760px 0} .today-date.date-21{background-position:-800px 0} .today-date.date-22{background-position:-840px 0} .today-date.date-23{background-position:-880px 0} .today-date.date-24{background-position:-920px 0} .today-date.date-25{background-position:-960px 0} .today-date.date-26{background-position:-1000px 0} .today-date.date-27{background-position:-1040px 0} .today-date.date-28{background-position:-1080px 0} .today-date.date-29{background-position:-1120px 0} .today-date.date-30{background-position:-1160px 0} .today-date.date-31{background-position:-1200px 0} .fourohfour-today .today-date{display:block} " }; });
define('views/Tasks/404',[

  'application/runtime',

  'wunderbits/WBView',

  'template!TBV404',
  'style!_dates'

], function (runtime, WBView, template, datesStyle, undefined) {

  

  var _ = runtime._;

  var _super = WBView.prototype;

  return WBView.extend({

    'template': template,

    'className': 'tasks-404',

    'styles': [datesStyle],

    'render': function (type) {

      var self = this;
      var smartListTypes = _.clone(runtime.smartLists);
      smartListTypes.push('search');
      var fourOhFourStrings = {

        'search': 'coachmark_no_search_results',
        'week': 'coachmark_week_list_empty',
        'today': 'coachmark_today_list_empty',
        'all': 'coachmark_all_list_empty',
        'starred': 'coachmark_starred_list_empty',
        'completed': 'coachmark_completed_list_empty',
        'assigned': 'coachmark_assigned_to_me_list_empty',
        'conversations': 'coachmark_conversations_list_empty'
      };
      var json = {};

      type = type === 'done' ? 'completed' : type;

      if (_.indexOf(smartListTypes, type) >= 0) {

        json.message = runtime.language.getLabel(fourOhFourStrings[type]).toString();
      }
      else if (type === 'list' || type === 'task') {

        var label = 'error_' + type + '_not_found';
        json.message = runtime.language.getLabel(label).toString();
      }
      else {

        json.message = runtime.language.getLabel('error_page_not_found').toString();
      }

      _super.render.call(self, json);

      var $icon = self.$el.find('.icon');

      var allClasses = 'fourohfour fourohfour-week fourohfour-all fourohfour-today fourohfour-starred fourohfour-completed fourohfour-assigned fourohfour-conversations';

      if (_.indexOf(smartListTypes, type) > 0) {

        $icon.removeClass(allClasses);
        $icon.addClass('fourohfour-' + type);

        if(type === 'today') {

          var current = new Date();
          $icon.find('.today-date').addClass('date-' + current.getDate());
        }
      }
      else {

        $icon.removeClass(allClasses);
        $icon.addClass('fourohfour');
      }

      return self;
    }
  });
});
define('views/TaskDetail/Controllers/SectionViewController',[

  'application/runtime',

  'wunderbits/WBViewController'

], function (
  runtime,
  WBViewController,
  undefined
) {

  

  return WBViewController.extend({

    'implements': {
      'focused': 'handleFocus',
      'mousedown': 'handleMouseDown'
    },

    'handleFocus': function () {

      var self = this, view = self.view;

      if (this.lastMouseDown) {

        var now = (new Date()).valueOf();
        var delayFromMouseDown = now - this.lastMouseDown;

        if (delayFromMouseDown < 5) {
          self.defer(function () {

            var editRoute = view.editRoute();
            runtime.trigger('route:' + editRoute);
          });
        }
      }
    },

    'handleMouseDown': function () {

      this.lastMouseDown = (new Date()).valueOf();
    }
  });
});
define('views/TaskDetail/SectionView',[

  'application/runtime',
  'wunderbits/WBViewPresenter',
  './Controllers/SectionViewController'

], function (

  runtime,
  WBViewPresenter,
  SectionViewController,
  undefined
) {

  

  var _ = runtime._;

  return WBViewPresenter.extend({

    'sectionName': null,

    'attributes': {
      'tabindex': 0
    },

    'implements': [SectionViewController],

    'emits': {
      'focus': 'focused',
      'mousedown': 'mousedown'
    },

    'sectionRoute': function () {

      return 'tasks/' + this.model.id + '/' + this.sectionName;
    },

    'editRoute': function () {

      return this.sectionRoute() + '/edit';
    },

    'focusRoute': function () {

      return this.sectionRoute() + '/focus';
    },

    'trySetFocusRoute': function () {

      var self = this;

      _.delay(function () {

        if (runtime.currentRoute() === self.editRoute()) {
          runtime.trigger('route:' + self.focusRoute());
        }
      }, 100);
    }
  });
});
define('views/TaskDetail/Controllers/TaskDetailAssigningController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/date',
  'helpers/Animator',

  'wunderbits/WBViewController'

], function (
  runtime,
  Keycodes, DateHelper, Animator,
  WBViewController,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;

  var _super = WBViewController.prototype;

  return WBViewController.extend({

    'implements': {
      'toggle:edit': 'toggleEditMode',
      'delete:assignee': 'deleteAssignee',
      'hide:edit': 'onHideEditMode',
      'input:autocomplete': 'debouncedHandleAutocomplete',
      'keydown': 'handleKeys',
      'focus': 'focusSelf',
      'assignee:selected': 'onAssigneeSelected'
    },

    'initialize': function () {
      
      var self = this;
      
      self.debouncedHandleAutocomplete = _.debounce(self.handleAutocomplete, 500);
      
      _super.initialize.apply(self, arguments);
    },

    'handleKeys': function (e) {

      var self = this;
      var view = self.view;

      var isSelfEl = e.target === view.el;

      if (e.which === Keycodes.enter && isSelfEl) {
        self.toggleEditMode();
        self.stopEventFully(e);
      }
      else if (e.which === Keycodes.esc && !isSelfEl) {
        self.onHideEditMode();
        runtime.trigger('route:tasks/' + view.model.id  +'/assignee/focus');
        self.stopEventFully(e);
      }
      else if (e.which === Keycodes.tab && !isSelfEl) {
        self.handleTab(e);
        self.stopEventFully(e);
      }
    },

    'handleTab': function (e) {

      this.stopEventFully(e);
    },

    'focusSelf': function () {

      this.view.focusSelf();
    },

    'toggleEditMode': function (e) {

      var self = this;
      if (self.view.preventInputBlur) {
        return;
      }

      self.view.ready.done(function () {

        if (!runtime.user.trialModel.canAssign()) {
          self.view.openGetProPopover();
          return;
        }

        var isEditVisible = self.view.$el.hasClass('editing');

        if (!isEditVisible) {
          self.view.showEditMode();
          self.view.triggerFocusChange();
        }

        if (e) {
          e.stopPropagation();
          runtime.trigger('analytics:Detail:clickAssign');
        }
      });
    },

    'deleteAssignee': function (e) {

      var self = this;

      var view = self.view;

      if (view.model.isCompleted()) {
        return;
      }

      view.model.save({'assignee_id': null});
      view.cancelChanges();
      view.resetInput();

      if (e) {
        e.stopPropagation();
      }
    },

    'onHideEditMode': function () {

      this.view.hideEditMode();
    },

    'handleAutocomplete': function (ev) {

      var self = this;
      var view = self.view;
      var blockKeys = [
        Keycodes.shift, Keycodes.left, Keycodes.right, Keycodes.up,
        Keycodes.down, Keycodes.esc, Keycodes.enter
      ];

      var matches, name;

      if (!view.assignPopover || _.indexOf(blockKeys, ev.which) !== -1) {
        return;
      }

      name = $(ev.target).val();
      name = name.replace(/^\@/, '');

      if (name) {
        matches = view.assignPopover.searchRecipients(name);
        view.assignPopover.renderSearchResults(matches);

        if (matches.length) {
          self.onMatches(matches);
        }
        else {
          view.resetInput();
        }
      }
      else {
        self.selectNone();
      }
    },

    'onMatches': function (matches) {

      var self = this;
      var view = self.view;

      var assignee = view.assignables.getByAssignableId(matches[0]);
      var name = assignee.length && assignee[0].attributes.name;

      if (name) {
        view.updateInput(name);
      }
    },

    'onAssigneeSelected': function (name) {

      this.view.updateInput(name);
    },

    'selectNone': function () {

      var view = this.view;
      view.resetInput();
      view.assignPopover.selectNone();
    }
  });
});
define('templates/detailview/detailAssign',['vendor/handlebars'], function(H) {
var name = 'detailview/detailAssign';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<span class=\"icon detail-assign\"></span> <span class=\"detail-assigned hidden\"></span> <div class=\"section-title\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_assign_to", options) : helperMissing.call(depth0, "localized", "label_assign_to", options)))
    + " </div> <div class=\"section-description\"></div> <a class=\"detail-delete\"><span class=\"icon detail-delete\"></span></a> <span class=\"icon detail-save\"></span> <div class=\"section-edit hidden\"> <span class=\"target\"></span> <input type=\"text\" class=\"assign\" data-key-placeholder=\"label_assign_to\"/> </div>";
  return buffer;
  });
});
define('views/TaskDetail/TaskDetailAssignView',[

  'application/runtime',

  'vendor/moment',

  'collections/AssignableCollection',
  'collections/ListCollection',

  './SectionView',
  'views/AvatarView',
  'views/Assigning/AssignToUserPopoverView',
  'views/Popovers/GetProPopoverView',

  'views/TaskDetail/Controllers/TaskDetailAssigningController',

  'template!detailview/detailAssign'

], function (

  runtime,
  moment,
  AssignableCollection, ListCollection,
  SectionView, AvatarView, AssignToUserPopover, GetProPopover,
  TaskDetailAssigningController,
  detailAssignTemplate,
  undefined
) {

  

  var _ = runtime._;

  var _super = SectionView.prototype;

  return SectionView.extend({

    'sectionName': 'assignee',

    'template': detailAssignTemplate,

    'className': 'section detail-assign',

    'implements': [TaskDetailAssigningController],

    'emits': {
      'click': 'toggle:edit',
      'click .detail-delete': 'delete:assignee',
      'blur .section-edit input': 'hide:edit',
      'keyup .section-edit input': 'input:autocomplete',
      'keydown': 'keydown'
    },

    'observes': {
      'runtime': {
        'assigneeSelected': '>assignee:selected',
        'assignPopover:cancel': '>hide:edit'
      }
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);
      self.ready = self.deferred();
      self.assignablesReady = self.deferred();
      self.bindTo(runtime, 'assignables:ready', self.resolveAssignables);
    },

    'renderData': {

      'assignee_id': undefined,
      'name': undefined
    },

    'formatData': function (data) {

      var self = this;
      var attributes = self.model.attributes;

      data.assignee_id = attributes.assignee_id;
      data.name = attributes.name;

      return data;
    },

    'render': function (options) {

      var self = this;
      self.$el.addClass('hidden');

      self.when(self.assignablesReady).done(function() {

        self.options = options;
        self.model = options.model;
        self.setupListShareBind();

        self.assignables = new AssignableCollection('/assignables/' + self.model.attributes.list_id);
        self.bindTo(self.assignables, 'add remove', self.toggleAssigningVisibility);
        self.bindTo(self.model, 'change:assignee_id', self.updateAssignee);

        _super.render.call(self, self.formatData(self.renderData));

        self.$el[self.model.attributes.assignee_id ? 'addClass': 'removeClass']('assigned');


        if (self.model.attributes.assignee_id) {

          self.renderAssignee(self.model.attributes.assignee_id);
        }

        // if the user is not pro and the task isnt assigned to them,
        // remove their ability to remove the assignee
        if (!runtime.user.isPro() && self.model.attributes.assignee_id !== runtime.user.id) {
          self.$('.detail-delete').addClass('hidden');
        }

        self.ready.resolve();

        self.toggleAssigningVisibility();
      }, self);

      return self;
    },

    'resolveAssignables': function () {

      var self = this;
      self.assignablesReady.resolve();
    },

    'hideEditMode': function () {

      var self = this;
      var $editor =  self.$('.section-edit');

      if (self.$el.hasClass('editing')) {

        $editor.siblings().not('.detail-assigned').removeClass('hidden');
        $editor.addClass('hidden');

        self.$el.removeClass('editing');
        self.closePopovers();

        if (!self.getProPopover) {
          self.autoCompleteBind && self.unbindFrom(self.autoCompleteBind);
        }

        self.trySetFocusRoute();
      }
    },

    'setupListShareBind': function () {

      var self = this;
      var lists = new ListCollection('/lists/all');
      var list = lists.get(self.model.attributes.list_id);
      if (self.shareBind) {
        self.unbindFrom(self.shareBind);
      }

      self.shareBind = self.bindTo(list, 'change:share_id', function () {
        self.render(self.options);
      });
      self.isShared = list ? list.isShared() : self.options.isShared;
    },

    'toggleAssigningVisibility': function () {

      var self = this;
      //Assign To is hidden when list is no longer shared or there are no assignables
      self.$el.toggleClass('hidden', !self.assignables.models.length || !self.isShared);
    },

    'showEditMode': function () {

      var self = this;
      var $editor =  self.$('.section-edit');

      if (self.model.isCompleted()) {
        return;
      }

      runtime.trigger('route:tasks/' + self.model.id + '/assignee/edit', { 'trigger': false });
      runtime.trigger('popover:close');

      $editor.siblings().not('.icon, a, .detail-assigned').addClass('hidden');
      $editor.removeClass('hidden');
      self.$el.addClass('editing');

      if (!runtime.user.trialModel.canAssign()) {
        self.$('.detail-save').addClass('hidden');
      }

      var name, assignee;

      var attributes = self.model.attributes;
      if (attributes.assignee_id) {
        assignee = self.assignables.getByAssignableId(attributes.assignee_id);
        name = assignee.length && assignee[0].attributes.name;
      }

      self.updateInput(name || '');

      $editor.find('input').focus();
      self.openAssignPopover();

      if (!self.autoCompleteBind || !self.autoCompleteBind.target) {
        self.autoCompleteBind = self.bindTo(runtime, 'autoComplete:assign', self.assignToUser);
      }
    },

    'triggerFocusChange': function () {

      runtime.trigger('focus:set', 'detail');
    },

    'openAssignPopover': function (options) {

      var self = this;

      if (self.assignPopover) {
        return;
      }

      self.defer(function(){
        runtime.trigger('focus:set', 'assignPopover');
      });

      var settings = {
        'name': 'detail-assign',
        'target': self.$('.target'),
        'position': 'bottom',
        'listId': self.model.attributes.list_id,
        'assignedTo': self.model.attributes.assignee_id,
        'offset': 70,
        'margin': 0,
        'hideNoAssign': false,
        'onClose': function () {
          self.destroySubview(self.assignPopover);
          self.assignPopover = null;
        }
      };

      options && _.extend(settings, options);

      self.assignPopover = self.addSubview(new AssignToUserPopover(settings));
      self.bindTo(self.assignPopover, 'clear:assigned', function () {
        self.trigger('delete:assignee');
      });
      self.assignPopover.toggle('open', settings);
      self.preventInputBlur = true;
    },

    'openGetProPopover': function () {

      var self = this;

      if (self.getProPopover) {
        return;
      }
      self.defer(function () {
        runtime.trigger('focus:set', 'goProPopover');
      });

      var settings = {
        'target': self.$el,
        'position': 'bottom',
        'margin': 0,
        'returnRoute': 'tasks/' + self.model.id,
        'hideNoAssign': true,
        'onClose': function () {
          self.destroySubview(self.getProPopover);
          self.getProPopover = null;
          self.preventInputBlur = false;
        }
      };

      self.getProPopover = self.addSubview(new GetProPopover(settings));
      self.getProPopover.toggle('open', settings);
      self.preventInputBlur = true;

      runtime.trigger('analytics:ProAccounts:startProFunnel', 'detailAssign');
      runtime.trigger('analytics:ProAccounts:openGetProPopover', 'detailAssign');
    },

    'closePopovers': function () {

      var self = this;

      self.assignPopover && self.assignPopover.toggle('close', {});
      self.getProPopover && self.getProPopover.toggle('close', {});

      self.preventInputBlur = false;
    },

    'assignToUser': function (id) {

      var self = this;

      self.model.save({'assignee_id': id});
      self.$el.addClass('assigned');
      self.closePopovers();
      self.trigger('hide:edit');
    },

    'updateAssignee': function (model) {

      var self = this;

      if (!model.attributes.assignee_id) {
        self.cancelChanges();
        self.resetView();
        return;
      }

      self.renderAssignee(model.attributes.assignee_id);
    },

    'renderAssignee': function (id) {

      var self = this;
      var $assignee = self.$('.detail-assigned');
      var assigneeId = id;

      var assignee = _.find(self.assignables.models, function (model) {
        return model.attributes.assignable_id === assigneeId;
      });

      if (!assigneeId || !assignee) {

        $assignee.addClass('hidden');
        return;
      }

      self.avatarView = self.avatarView || self.addSubview(new AvatarView({size: 'small'}), 'avatarView');

      $assignee
        .removeClass('hidden')
        .html(self.avatarView.render({id: assigneeId}).$el);

      self.$('.section-title').text(assignee.attributes.name);
    },

    'resetView': function () {

      var self = this;

      self.$('.detail-assigned').addClass('hidden');
      self.$el.removeClass('assigned');
      self.$('.section-title').html(runtime.language.getText('label_assign_to'));
    },

    'cancelChanges': function (e) {

      var self = this;

      self.closePopovers();
      self.isEditing = false;

      self.trigger('hide:edit');

      if (e) {
        e.stopPropagation();
      }
    },

    'focusSelf': function () {

      this.$el.focus();
    },

    'updateInput': function (value) {

      this.$('input').val(value).attr('aria-label', runtime.language.getText('aria_assign_to_$', value));
    },

    'resetInput': function () {

      this.$('input').val('').attr('aria-label', '');
    }
  });
});
define('views/TaskDetail/Controllers/TaskDetailDateKeyController',[

  'application/runtime',

  'vendor/moment',

  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/date',
  'helpers/Animator',

  'wunderbits/WBViewController'

], function (
  runtime,
  moment,
  Keycodes, DateHelper, Animator,
  WBViewController,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;

  return WBViewController.extend({

    'implements': {
      'datePicker:blur': 'datePickerInputBlur',

      'forceFF:event': 'forceFFChangeEvent',

      'change:repeat': 'changeEditRepeat',
      'change:interval': 'changeEditRepeat',
      'change:frequency': 'changeCustomFrequency',

      'datepicker:keydown': 'editDateKeyDown',
      'repeat:keydown': 'editRepeatKeyDown',
      'frequency:keydown': 'editRepeatFrequencyKeyDown',

      'keydown': 'onKeydown',
      'keydown:saveButton': 'onSaveButtonKeydown',
      'keydown:deleteButton': 'onDeleteOrSaveKeydown',

      'focus': 'focusSelf'
    },

    'onKeydown': function (e) {

      var view = this.view;
      if (e.which === Keycodes.enter && !view.isEditVisible()) {
        view.trigger('toggle:edit');
      }
    },

    'onSaveButtonKeydown': function (e) {

      var self = this;
      var view = this.view;
      if (!e.shiftKey && e.which === Keycodes.tab) {
        view.focusDateInput();
        self.stopEventFully(e);
      }

      self.onDeleteOrSaveKeydown(e);
    },

    'onDeleteOrSaveKeydown': function (e) {

      var self = this;

      if (e.which === Keycodes.esc) {
        self.view.cancelChanges(e);
        self.stopEventFully(e);
      }
    },

    'focusSelf': function () {
      this.view.focusSelf();
    },

    'datePickerInputBlur': function () {

      var self = this;
      var view = self.view;

      if (view.shiftKeyDown) {

        view.saveChanges();
        view.hideEditMode();
        view.shiftKeyDown = false;
        return;
      }

      if (!view.popoverOpen && !view.preventInputBlur) {

        view.saveChanges();
        view.hideEditMode();
      }

      view.preventInputBlur = false;
    },

    'forceFFChangeEvent': function (e) {

      var self = this;
      var view = self.view;
      view.preventInputBlur = true;
      // this is a hack, because FF does not actually open the
      // select menu, instead it cycles through them
      $(e.currentTarget).blur().focus();
    },

    'changeEditRepeat': function (e) {

      var self = this;
      var view = self.view;
      var $select = $(e.currentTarget);
      var $selectVal = $select.val();
      var data;

      if ($selectVal === 'custom' || $selectVal === 'never repeats') {

        view.toggleEditCustomRepeat();
        self.defer(function () {

          if ($selectVal === 'never repeats') {
            data = {
              'interval': null,
              'frequency': null
            };
          }
          else {
            data = {
              'interval': 'days',
              'frequency': 1
            };
          }

          view.datePicker.model.set(data);
        });
      }
      else {

        self.editRepeatPresets($selectVal);
      }

      view.preventInputBlur = true;
      _.delay(function () {
        view.preventInputBlur = false;
      }, 100);
    },

    'editRepeatPresets': function (val) {

      var self = this;
      var view = self.view;

      if (typeof view.inputPresets[val] !== 'undefined') {

        self.defer(function () {

          if (!view.datePicker.model.attributes.date) {
            view.datePicker.model.set('date', moment().sod().valueOf());
          }

          view.datePicker.model.set({
            'interval': view.inputPresets[val].interval,
            'frequency': view.inputPresets[val].frequency
          });
        });
      }
      else {
        // assume the change is coming from custom edit mode
        view.changeCustomInterval();
      }

      var addRemove = view.inputPresets[val] && view.inputPresets[val].interval;
      view.toggleTitleRepeat(addRemove);
      view.toggleDescriptionRepeat(addRemove);
    },

    'changeCustomFrequency': function () {

      var self = this;
      var view = self.view;
      var frequency = view.getFrequency();

      frequency = (frequency > 0) ? frequency : 1;
      view.renderFrequency(frequency);
      view.focusFrequency();

      self.defer(function () {
        self.view.datePicker.model.set('frequency', frequency);
      });
    },

    'editDateKeyDown': function (e) {

      var self = this;
      var view = self.view;

      self.shiftKeyDown = false;

      if (e.shiftKey && e.which == Keycodes.tab) {

        self.shiftKeyDown = true;
      }
      // handle keys - ret/enter = save, esc cancel
      if (e.which === Keycodes.enter) {

        view.saveChanges();
        view.cancelChanges(e);
      }
      else if (e.which === Keycodes.esc) {

        view.cancelChanges(e);
      }
      else if (e.which === Keycodes.tab) {

        view.trigger('datePicker:input');
      }
    },

    'editRepeatKeyDown': function (e) {

      var self = this;
      var view = self.view;

      if (e.which === Keycodes.enter) {

        // ret/ent
        view.saveChanges();
        view.cancelChanges(e);
      }
    },

    'editRepeatFrequencyKeyDown': function (e) {

      var self = this;
      var view = self.view;
      var frequency = view.getFrequency();

      if (e.which === Keycodes.up) {
        //up
        frequency += 1;
      }
      else if (e.which === Keycodes.down) {
        //down
        frequency = (frequency > 1) ? frequency - 1 : 1;
      }
      else if (e.which === Keycodes.enter) {
        // ret/ent
        view.saveChanges(); // saves data to model
        view.cancelChanges(e);  // simply closes UI edit modes
      }
      else if (e.which === Keycodes.esc) {
        // esc
        view.cancelChanges(e);
      }
      // else if (e.which === Keycodes.tab) {

      //   view.trigger('datePicker:input');
      // }

      if (e.which === Keycodes.up || e.which === Keycodes.down) {
        // shared by up and down
        view.renderFrequency(frequency);
        view.datePicker.model.set('frequency', frequency);
        view.focusFrequency();

      }
      else if (e.which ===  Keycodes.backspace) {
        view.renderFrequency('');
        view.datePicker.model.set('frequency', 1);
      }
    }
  });
});
define('views/TaskDetail/Controllers/TaskDetailDateClickController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/date',
  'helpers/Animator',

  'wunderbits/WBViewController'

], function (
  runtime,
  Keycodes, DateHelper, Animator,
  WBViewController,
  undefined
) {

  

  var _ = runtime._;

  return WBViewController.extend({

    'implements': {
      'toggle:edit': 'toggleEditMode',
      'delete:dueDate': 'deleteDueDate',
      'save:dueDate': 'saveDueDate',
      'datePicker:input': 'datePickerInputMousedown'
    },

    'toggleEditMode': function (e) {

      var self = this;
      var view = self.view;
      var isEditVisible;

      if (self.view.preventInputBlur) {
        return;
      }

      view.ready.done(function () {

        // handle which dom elements are shown - editor or display
        isEditVisible = view.isEditVisible();

        if (view.popover.isEventOnIgnoredElement(e) || view.model.isCompleted()) {
          return;
        }

        if (!isEditVisible) {

          self.offset = self.view.getDetailOffset();
          view.showEditMode();

          if (self.offset !== '0px') {
            _.delay(function () {
              view.popover.trigger('popover:open');
            }, 250);
          }
          else {
            view.popover.trigger('popover:open');
          }

          runtime.trigger('route:tasks/' + view.model.id + '/duedate/edit', { 'trigger': false });
          view.triggerFocusChange();
        }

        e && e.stopPropagation();
      });
    },

    'deleteDueDate': function (e) {

      var self = this;
      var view = self.view;

      if (view.model.isCompleted()) {
        return;
      }

      view.saveDefaults();
      view.cancelChanges(e);

      e && self.stopEventFully(e);
    },

    'saveDueDate': function (e) {

      var self = this;
      var view = self.view;
      view.saveChanges();
      view.cancelChanges(e);

      e && self.stopEventFully(e);
    },

    'datePickerInputMousedown': function () {

      var self = this;
      var view = self.view;

      view.preventInputBlur = true;

      _.delay(function () {

        view.preventInputBlur = false;
      }, 250);
    }
  });
});
define('wunderbits/WBDatePickerInputView',[

  './lib/dependencies',
  'vendor/moment',

  './helpers/keycodes',

  './helpers/date',
  './helpers/selection',

  './WBView'

], function (dependencies, moment, keycodes, DateHelper, Selection, WBView, undefined) {

  

  var $ = dependencies.$;
  var _ = dependencies._;

  var _super = WBView.prototype;

  return WBView.extend({

    'tagName': 'input',

    'attributes': {

      'type': 'text'
    },

    'className': 'datepicker-input medium',

    'events': {

      'input': '_debouncedUpdateInput',
      'keydown': '_handleKeydown'
    },

    initialize: function (options) {

      // expects a ref to a settings model with a date_format attribute
      // and a DatePicker model with a date attribute

      var self = this;
      _super.initialize.apply(self, arguments);

      self._options = options || {};

      self.settingsModel = self._options.settingsModel;
      self.datePickerModel = self._options.datePickerModel;

      // model binds
      self.bindTo(self.datePickerModel, 'change:date', self.updateOnChangeModel);

      // debouncers
      self._debouncedUpdateInput = _.debounce(self._updateInput, 50);
    },

    render: function () {

      var self = this;
      var date = self.datePickerModel.attributes.date;
      var formattedDate;

      _super.render.call(self, {});

      if (!date || _.isNaN(date)) {

        self.$el.val(null).attr('data-key-value', null);
      }
      else {

        formattedDate = DateHelper.humanizeDueDate(new Date(date), self.settingsModel.attributes.date_format, true);

        if (formattedDate !== self.$el.val()) {

          self.$el.val(null).attr('data-key-value', formattedDate);
          self.renderPlaceHolders();
        }
      }

      return self;
    },

    'updateOnChangeModel': function (model, change, options) {

      var self = this;

      options = options || {};

      if (!options.fromInput) {
        self.render();
      }
    },

    _updateInput: function () {

      var self = this;
      var string = $.trim(self.$el.val());
      var currentRenderedDate = $.trim(DateHelper.humanizeDueDate(new Date(self.datePickerModel.attributes.date), self.settingsModel.attributes.date_format)).toLowerCase();

      if (string === currentRenderedDate) {
        return;
      }

      self.datePickerModel.parseSmartDate(string, self.options.futureOnly, self.options.noRepeats, true);
    },

    _handleKeydown: function (e) {

      var self = this;

      if (e.which === 37 || e.which === 38 || e.which === 39 || e.which === 40) {

        self._handleDateInputArrows(e);
      }
    },

    _handleDateInputArrows: function (e) {

      // holy vars batman!
      var self = this;
      var date = self.datePickerModel.attributes.date;
      var dateFormat = self.settingsModel.attributes.date_format;
      // var formattedDate = DateHelper.humanizeDueDate(new Date(date), dateFormat);
      var $dateInput = self.$el;
      var yearPos = dateFormat.indexOf('YYYY');
      var monthPos = dateFormat.indexOf('MM');
      var dayPos = dateFormat.indexOf('DD');
      var cursorPos = Selection.getCaretPos($dateInput[0]);
      var newDate;


      if (e.which === keycodes.up || e.which === keycodes.down) {

        e.preventDefault();
      }

      if (!date) {

        return;
      }

      var increment = e.shiftKey ? 5 : 1;

      // handle up and down
      var isHumanizeable = DateHelper.isHumanizeable(new Date(date));
      if (isHumanizeable || (cursorPos >= dayPos && cursorPos <= dayPos + 2)) {

        if (isHumanizeable && (e.which === keycodes.up || e.which === keycodes.down)) {

          cursorPos = 0;
        }

        if (e.which === keycodes.up) {

          newDate = moment(date).add('days', increment);
        }
        else if (e.which === keycodes.down) {

          newDate = moment(date).subtract('days', increment);
        }
      }
      else if (cursorPos >= yearPos && cursorPos <= yearPos + 4) {

        if (e.which === keycodes.up) {

          newDate = moment(date).add('years', increment);
        }
        else if (e.which === keycodes.down) {

          newDate = moment(date).subtract('years', increment);
        }
      }
      else if (cursorPos >= monthPos && cursorPos <= monthPos + 2) {

        if (e.which === keycodes.up) {

          newDate = moment(date).add('months', increment);
        }
        else if (e.which === keycodes.down) {

          newDate = moment(date).subtract('months', increment);
        }
      }

      // handle left and right
      if (cursorPos === $dateInput.val().length && e.which === keycodes.right) {

        newDate = moment(date).add('days', increment);
      }
      else if (cursorPos === 0 && e.which === keycodes.left) {

        newDate = moment(date).subtract('days', increment);
      }

      if (newDate) {

        if (self.options.futureOnly) {

          if (newDate < moment().sod()) {

            return;
          }
        }

        self.datePickerModel.set('date', newDate.valueOf());

        // reset cursor !
        Selection.setCaretToPos($dateInput[0], cursorPos);
      }
    }
  });
});
define('templates/detailview/detailDate',['vendor/handlebars'], function(H) {
var name = 'detailview/detailDate';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, functionType="function";


  buffer += "<span class=\"icon detail-date\"></span> <div class=\"section-title\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_due_date", options) : helperMissing.call(depth0, "localized", "label_due_date", options)))
    + "</div> <div class=\"section-description\"></div> <div class=\"section-edit hidden\"> <label for=\"edit-repeat\" value=\"";
  if (stack2 = helpers.label_repeat) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.label_repeat; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "\"/> <select id=\"edit-repeat\" class=\"small\"> <option value=\"never\" data-key-text=\"label_repeat_never\"selected></option> <option value=\"daily\" data-key-text=\"label_repeat_every_day\"></option> <option value=\"weekly\" data-key-text=\"label_repeat_every_week\"></option> <option value=\"monthly\" data-key-text=\"label_repeat_every_month\"></option> <option value=\"yearly\" data-key-text=\"label_repeat_every_year\"></option> <option value=\"custom\" data-key-text=\"label_repeat_custom\"></option> </select> <span id=\"edit-custom-repeat\" class=\"hidden\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_every", options) : helperMissing.call(depth0, "localized", "label_every", options)))
    + " <input id=\"edit-repeat-frequency\" type=\"text\" class=\"small\" value=\"0"
    + "\" size=\"2\"/> <select id=\"edit-repeat-interval\" class=\"smaller\"> <option value=\"never repeats\" data-key-text=\"label_repeat_never\"></option> <option value=\"days\" data-key-text=\"label_time_day_plural\" selected></option> <option value=\"weeks\" data-key-text=\"label_time_week_plural\"></option> <option value=\"months\" data-key-text=\"label_time_month_plural\"></option> <option value=\"years\" data-key-text=\"label_time_year_plural\"></option> </select> </span> </div> <a class=\"detail-delete\" data-key-aria-label=\"button_delete\" tabindex=\"0\"><span class=\"icon detail-delete\"></span></a> <a class=\"detail-save\" data-key-aria-label=\"button_save\" tabindex=\"0\"><span class=\"icon detail-save\"></span></a>";
  return buffer;
  });
});
define('views/TaskDetail/TaskDetailDateView',[

  'application/runtime',

  'vendor/moment',

  'wunderbits/helpers/date',
  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/selection',
  'wunderbits/WBBlurHelper',

  'models/TaskModel',

  'views/TaskDetail/Controllers/TaskDetailDateKeyController',
  'views/TaskDetail/Controllers/TaskDetailDateClickController',

  './SectionView',
  'wunderbits/WBDatePickerView',
  'wunderbits/WBDatePickerInputView',
  'wunderbits/WBPopoverView',

  'template!detailview/detailDate'

], function (
  runtime,
  moment,
  DateHelper, Keycodes, Selection, BlurHelper,
  TaskModel,
  TaskDetailDateKeyController,
  TaskDetailDateClickController,
  SectionView, WBDatePickerView, WBDatePickerInputView,
  Popover,
  detailDateTemplate,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;

  var isIE = runtime.env.isIE();

  var _super = SectionView.prototype;

  return SectionView.extend({

    'sectionName': 'duedate',

    'template': detailDateTemplate,

    'implements': [
      TaskDetailDateKeyController,
      TaskDetailDateClickController
    ],

    'className': 'section detail-date',

    'attributes': {

      'tabindex': 0
    },

    // this view handles initial display of due date as well as editing of due date
    'emits': {

      'click': 'toggle:edit',
      'click a.detail-delete': 'delete:dueDate',
      'click a.detail-save': 'save:dueDate',

      'mousedown #edit-repeat-frequency, #edit-repeat-interval, #edit-repeat, #edit-repeat option, a.detail-delete, a.detail-save': 'datePicker:input',

      'blur #edit-repeat-frequency, #edit-repeat': 'datePicker:blur',

      'keyup #edit-repeat, #edit-repeat-interval': 'forceFF:event',

      'change #edit-repeat': 'change:repeat',
      'change #edit-repeat-interval': 'change:interval',

      'input #edit-repeat-frequency': 'change:frequency',

      'keydown .datepicker-input': 'datepicker:keydown',
      'keydown #edit-repeat, #edit-repeat-interval': 'repeat:keydown',
      'keydown #edit-repeat-frequency': 'frequency:keydown',

      'keydown': 'keydown',

      'keydown a.detail-save': 'keydown:saveButton',
      'keydown a.detail-delete': 'keydown:deleteButton'
    },

    'inputPresets': {
      'never': {'interval': null, 'frequency': null},
      'daily': {'interval': 'days', 'frequency': 1},
      'weekly': {'interval': 'weeks', 'frequency': 1},
      'monthly': {'interval': 'months', 'frequency': 1},
      'yearly': {'interval': 'years', 'frequency': 1}
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.ready = new $.Deferred();

      //any sub views
      self.datePicker = self.addSubview(new WBDatePickerView({
        'futureOnly': false,
        'hideNoDate': true,
        'hideCancel': true,
        'startDay': runtime.settings.attributes.start_of_week,
        'settingsModel': runtime.settings
      }));

      self.datePickerInput = self.addSubview(new WBDatePickerInputView({
        'futureOnly': false,
        'settingsModel': runtime.settings,
        'datePickerModel': self.datePicker.model
      }));

      // date shit binds
      self.bindTo(self.datePicker.model, 'change:date', self.renderEditorDate);
      self.bindTo(self.datePicker.model, 'change:interval', self.renderEditorRepeat);
      self.bindTo(self.datePicker.model, 'change:frequency', self.renderEditorRepeat);

      self.bindTo(runtime.settings, 'change:start_of_week', function () {
        self.datePicker.setStartDay(runtime.settings.attributes.start_of_week);
        self.datePicker.render();
      });
    },

    'render': function (options) {

      var self = this;
      //options is checked by parent view
      self.model = options.model;
      if (!self.model.attributes.due_date) {

        self.datePicker.model.set('date', moment().sod().valueOf());
      }

      _super.render.call(self);

      // insert datepicker input
      self.$('.section-edit').prepend(self.datePickerInput.render().$el);

      // render date picker into a popover view
      if (self.popover) {
        self.popover.destroy();
        self.resetDatePickerModel();
      }

      self.popover = self.addSubview(new Popover({
        'context': self,
        'name': 'detail-date',
        'content': self.datePicker,
        'target': self.datePickerInput.$el, //self.$el
        'ignoredElements': [
          self.datePickerInput.$el, self.$('#edit-repeat'),
          self.$('#edit-repeat option'),
          self.$('#edit-repeat-frequency'),
          self.$('#edit-repeat-interval')
        ],
        'position': 'bottom',
        'closeOthers': true,
        'bindToTarget': false,
        'animation': true,
        'offset': 0,
        'onShow': self.onPopoverShow,
        'onClose': function () {
          $('body').off('scroll.datepicker');
          self.defer(function () {
            self.popoverOpen = false;
          });
        },
        'onBlur': function () {
          if(!self.preventInputBlur) {
            self.saveChanges();
            self.hideEditMode();
          }
        },
        'preventOpen': function () {
          return self.model.isCompleted();
        }
      }));

      // end date picker
      self.renderDisplayDate();

      // model binds
      self.bindTo(self.model, 'change:due_date', self.renderDisplayDate);
      self.bindTo(self.model, 'change:recurrence_type', self.renderDisplayDate);
      self.bindTo(self.model, 'change:recurrence_count', self.renderDisplayDate);

      // input binds
      self.bindTo(self.datePickerInput.$el, 'click', function () {

        !self.popoverOpen && self.popover.trigger('popover:open');
      });
      self.bindTo(self.datePickerInput.$el, 'mousedown', function () {
        self.trigger('datePicker:input');
      });

      self.bindTo(self.datePickerInput.$el, 'blur', function () {
        self.trigger('datePicker:blur');
      });

      // no recurrence for try mode
      if (runtime.user.isUnregistered()) {
        self.$('#edit-repeat').css({'display': 'none'});
      }

      self.ready.resolve();

      return self;
    },

    'renderDisplayDate': function () {

      var self = this;
      var date = DateHelper.convertServerDateToLocalDate(self.model.attributes.due_date);
      var interval = self.model.attributes.recurrence_type;
      var frequency = self.model.attributes.recurrence_count;
      var $dateDisplay = self.$('.section-title');
      var $dateIconDisplay = self.$('.icon.detail-date');
      var $repeatDisplay = self.$('.section-description');
      var humanizedDate = date && DateHelper.humanizeDueDate(date, null, true);
      var dueOn, dueOnText, repeatText, label;

      if (date) {

        // !important
        self.$el.addClass('date');

        // Render the date
        if (DateHelper.isHumanizeable(date) && humanizedDate.indexOf('label_relative_date_') !== -1) {
          // the indexOf above is to insure that a key was returned and not a formatted date
          // should never happen, but it has been a bug that was reported by a few users for some time
          dueOn = runtime.language.getLabel('label_due_$', '$' + humanizedDate);
          dueOnText = runtime.language.getText('label_due_$', '$' + humanizedDate);
        }
        else {
          var formattedDisplayDate = moment(date, 'YYYY-MM-DD').format('MMM D, YYYY');
          dueOn = runtime.language.getLabel('label_due_on', formattedDisplayDate);
          dueOnText = runtime.language.getText('label_due_on', formattedDisplayDate);
        }

        $dateDisplay.html(dueOn.toString());

        // Mark as overdue, if required
        var duedate = moment(date);
        var now = moment().sod();

        if (duedate.diff(now, 'days') < 0) {

          $dateDisplay.addClass('overdue');
          $dateIconDisplay.addClass('overdue');
        } else {

          $dateDisplay.removeClass('overdue');
          $dateIconDisplay.removeClass('overdue');
        }

        // Reoccurance info
        if (interval && frequency && interval.toLowerCase() !== 'none' && _.last(interval) !== 's') {

          if (frequency === 1) {
            label = runtime.language.getLabel('label_repeat_' + interval).toString();
            repeatText = runtime.language.getText('label_repeat_' + interval);
          }
          else if (frequency > 1) {
            label = runtime.language.getLabel('label_repeat_' + interval + '_$_plural', frequency).toString();
            repeatText = runtime.language.getText('label_repeat_' + interval + '_$_plural', frequency);
          }

          if (label) {
            $repeatDisplay.html(label);
            $dateDisplay.addClass('repeat');
            $repeatDisplay.addClass('repeat');
          }
        }
        else {

          $dateDisplay.removeClass('repeat');
          $repeatDisplay.empty().removeClass('repeat');
        }
      }
      else {

        self.$el.removeClass('date');
        label = runtime.language.getLabel('placeholder_set_due_date').toString();
        $dateDisplay.html(label).removeClass('repeat');
        $repeatDisplay.empty().removeClass('repeat');
      }

      self.$el.attr('aria-label', dueOnText ? dueOnText + repeatText : runtime.language.getText('placeholder_set_due_date'));

      self.renderLocalized();
      self.repeatEditorOpen = false;
    },

    'renderEditorDate': function (model, change, options) {

      var self = this;
      options = options || {};

      var date = self.datePicker.model.attributes.date;
      var $repeatSelect = self.$el.find('#edit-repeat');
      var $customSelect = self.$el.find('#edit-custom-repeat');

      if (!date) {

        self.$el.removeClass('date');
        $repeatSelect.find('option:eq(0)').prop('selected', true);

        $customSelect.addClass('hidden');
        $customSelect.find('option:eq(1)').prop('selected', true);
      }
      else {

        self.$el.addClass('date');
      }

      self.renderEditorRepeat();

      if (!options.fromInput) {
        self.datePickerInput.render();
      }

      if (self.isEditVisible()) {

        !self.preventInputBlur && self.datePickerInput.$el.focus();
      }
    },

    'renderEditorRepeat': function () {

      var self = this;

      if (self.repeatEditorOpen) {
        return;
      }

      var date = self.datePicker.model.attributes.date;
      var interval = self.datePicker.model.attributes.interval;
      var frequency = self.datePicker.model.attributes.frequency;
      var $repeatSelect = self.$('#edit-repeat');
      var $customSelect = self.$('#edit-custom-repeat');

      if (date && interval && frequency) {

        $repeatSelect.find('option:eq(5)').prop('selected', true);
        $customSelect.find('option[value="' + String(interval).toLowerCase().substr(0, String(interval).length) + '"]').prop('selected', true);
        $customSelect.find('#edit-repeat-frequency').val(Number(frequency));

        if (parseInt(frequency, 10) !== 1) {

          $repeatSelect.addClass('hdden');
          $customSelect.removeClass('hidden');
        }
        else {

          var map = {
            'days': 'daily',
            'weeks': 'weekly',
            'months': 'monthly',
            'years': 'yearly'
          };

          $repeatSelect.find('option').not('option[value="' + map[interval] + '"]').removeAttr('selected');
          $repeatSelect.find('option[value="' + map[interval] + '"]').attr('selected', 'selected');
        }
      }
      else {
        $repeatSelect.find('option:eq(0)').prop('selected', true);
        $customSelect.find('option:eq(1)').prop('selected', true);
      }

      $repeatSelect[!$customSelect.is(':visible') ? 'removeClass':'addClass']('hidden');
    },

    // popover bits
    'onPopoverShow': function () {

      var self = this;

      self.popoverOpen = true;

      if (!self.isEditing) {

        self.resetDatePickerModel();

        !self.model.attributes.due_date && self.datePicker.model.set('date', moment().sod());
        self.renderEditorDate();
        self.isEditing = true;
      }

      self.datePicker.onChangeDate();

      self.bindTo($(self.popover.$('.cancel')), 'click', self.cancelChanges);
      self.bindTo($(self.popover.$('.day.selected')), 'click', self.closePopover);
      self.bindTo(runtime, 'popover:close', self.closeAndHideEditMode);

      self.bindTo(self.datePicker.model, 'change:date', self.changeDueDate);

      self.repeatEditorOpen = true;
      self.datePicker && self.datePicker.monthsRenderedDeferred.resolve();
    },

    'changeDueDate': function () {

      var self = this;
      if (self.isEditing) {
        self.closePopover();
      }
    },

    'resetDatePickerModel': function () {

      var self = this;
      var date = DateHelper.convertServerDateToLocalDate(self.model.attributes.due_date);
      var interval = self.model.attributes.recurrence_type;
      var frequency = self.model.attributes.recurrence_count;

      if (date) {

        date = moment(date).valueOf();

        // 'none' shouldn't be prefixed by a `s`
        if (interval === 'none') {
          interval = null;
        }

        if (interval && _.last(interval) !== 's') {
          interval = String(interval).toLowerCase() + 's';
        }

        if (frequency) {
          frequency = Number(frequency);
        }
      }

      self.datePicker.setDate(date);

      if (date && interval && frequency) {

        self.datePicker.model.set({'interval': interval, 'frequency': frequency}, {'silent': true });
      }
      else {

        self.datePicker.model.set({'interval': null, 'frequency': null});
      }
    },

    'closePopover': function () {

      var self = this;
      self.popover.trigger('popover:close', {fadeOut: true});
    },

    'closeAndHideEditMode': function () {

      var self = this;
      self.closePopover();
      self.hideEditMode();
      self.isEditing = false;
      self.resetDatePickerModel();
      isIE && BlurHelper.run();
    },

    'showEditMode': function () {

      var self = this;

      if (self.model.isCompleted()) {
        return;
      }

      var $editor =  self.$('.section-edit');

      $editor.siblings().not('.icon, a').addClass('hidden');
      $editor.removeClass('hidden');
      self.$el.addClass('editing');

      $editor.find('.datepicker-input').focus();
    },

    'hideEditMode': function () {

      var self = this;
      var $editor =  self.$('.section-edit');

      if (self.isEditVisible()) {

        $editor.siblings().removeClass('hidden');
        $editor.addClass('hidden');

        if (!self.model.attributes.due_date) {
          self.$el.removeClass('date');
        }

        self.$el.removeClass('editing');

        self.trySetFocusRoute();
      }
    },

    'toggleEditCustomRepeat': function () {

      var self = this;
      var $defaultSelect = self.$('#edit-repeat');
      var $customSelectContainer = self.$('#edit-custom-repeat');
      var $sectionTitle = self.$('.section-title');
      var $sectionDescription = self.$('.section-description');
      var wasHidden = !$customSelectContainer.is(':visible');

      $defaultSelect.toggleClass('hidden');
      $customSelectContainer.toggleClass('hidden');

      if (wasHidden) {

        $customSelectContainer.find('#edit-repeat-interval option:eq(1)').prop('selected', true);
        // focus frequency
        self.defer(function () {

          self.preventInputBlur = true;
          $customSelectContainer.find('#edit-repeat-frequency').val(1).focus();
          self.datePicker.model.set();
        });

        $sectionTitle.addClass('repeat');
        $sectionDescription.addClass('repeat');

        self.defer(function () {
          // select days as default option for custom repeat
          if (!self.datePicker.model.attributes.date) {
            self.datePicker.model.set('date', moment().sod().valueOf());
          }

          self.datePicker.model.set({
            'interval': 'days',
            'frequency': 1
          });
        });
      }
      else {

        // select Never repeat in presets dropdown
        $defaultSelect.find('option:eq(0)').prop('selected', true);
        $sectionTitle.removeClass('repeat');
        $sectionDescription.removeClass('repeat');
        self.datePickerInput.$el.focus();
      }
    },

    'toggleTitleRepeat': function (state) {

      this.$('.section-title').toggleClass('repeat', state);
    },

    'toggleDescriptionRepeat': function (state) {

      this.$('.section-description').toggleClass('repeat', state);
    },

    'isEditVisible': function () {

      return this.$el.hasClass('editing');
    },

    'getFrequency': function () {

      var $frequencyBox = this.$('#edit-repeat-frequency');
      var frequency = parseInt($frequencyBox.val(), 10);

      return frequency;
    },

    'renderFrequency': function (frequency) {

      var $frequencyBox = this.$('#edit-repeat-frequency');
      $frequencyBox.val(frequency);
    },

    'focusFrequency': function () {

      this.$('#edit-repeat-frequency').focus();
    },

    'getDetailOffset': function () {

      return $('#detail').css('right');
    },

    'changeCustomInterval': function () {

      var self = this;
      var interval = self.$('#edit-repeat-interval').val();

      self.defer(function () {

        if (!self.datePicker.model.attributes.date) {
          self.datePicker.model.set('date', moment().sod().valueOf());
        }

        self.datePicker.model.set('interval', interval);
      });
    },

    'cancelChanges': function (e) {

      var self = this;

      self.datePicker.model.set({
        'date': DateHelper.convertServerDateToLocalDate(self.model.attributes.due_date)
      });

      // cancel changes
      self.defer(function () {
        self.trigger('datePicker:input');
        self.closeAndHideEditMode();
        runtime.trigger('route:tasks/' + self.model.id + '/duedate/focus');
      });

      if (e) {
        e.stopPropagation();
      }
    },

    'saveChanges': function () {

      // save changes
      // only save changed attributes!
      var self = this;

      var date = self.datePicker.model.attributes.date;
      var interval = self.datePicker.model.attributes.interval;
      var frequency = self.datePicker.model.attributes.frequency;

      self.isEditing = false;

      // server keys:
      // recurrence_count: 1
      // recurrence_type: "Month"
      // apply model changes

      if (date) {

        if (interval !== null) {
          interval = String(interval).substr(0, interval.length - 1).toLowerCase();
        }

        if (frequency !== null) {
          frequency = frequency !== null ? Number(frequency) : 0;
        }

        self.model.save({
          'due_date': DateHelper.convertLocalDateToServerDate(moment(date).format('YYYY-MM-DD')),
          'recurrence_count': frequency,
          'recurrence_type': interval,
          'local_change': true
        });
      }
      else {
        self.saveDefaults();
      }

      self.resetDatePickerModel();
    },

    'saveDefaults': function () {

      this.model.save({
        'due_date': null,
        'recurrence_type': null,
        'recurrence_count': 0
      });
    },

    'silentRouteToTask': function () {

      var self = this;
      var isRouteActive = runtime.currentRoute().indexOf('tasks/' + self.model.id + '/duedate/edit') >= 0;
      isRouteActive && runtime.trigger('route:tasks/' + self.model.id, { 'trigger': false });
    },

    'triggerFocusChange': function () {
      runtime.trigger('focus:set', 'detail');
    },

    'focusSelf': function () {

      this.$el.focus();
    },

    'focusDateInput': function () {

      this.$('input.datepicker-input').focus();
    }
  });
});
define('views/TaskDetail/Controllers/TaskDetailReminderViewController',[

  'application/runtime',

  'vendor/moment',

  'wunderbits/helpers/date',
  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/strings',

  'wunderbits/WBViewController'

], function (
  runtime,
  moment,
  DateHelper, Keycodes, Strings,
  WBViewController,
  undefined
) {

  

  var _ = runtime._;

  return WBViewController.extend({

    'implements': {

      'toggle:edit': 'onToggleEditMode',
      'click:delete': 'onDeleteReminder',
      'click:save': 'onSaveReminder',

      'keydown:datepickerInput': 'onEditDateKeyDown',
      'keydown:hours': 'onEditHourKeyDown',
      'keydown:minutes': 'onEditMinuteKeyDown',

      'mousedown:datepicker': 'onDatePickerInputMousedown',
      'blur:datepicker': 'onDatePickerInputBlur',

      'focus:time': 'onTimeFocus',
      'blur:time': 'onTimeBlur',

      'focus': 'onFocus',

      'save': 'onSaveChanges',

      'keydown:saveButton': 'onSaveButtonKeydown',
      'keydown:deleteButton': 'onDeleteOrSaveKeydown',

      'keydown': 'keydown'
    },

    'keydown': function (e) {

      var self = this;
      var view = self.view;
      if (e.which === Keycodes.enter && !view.isEditVisible()) {
        self.onToggleEditMode();
        self.stopEventFully(e);
      }
    },

    'onSaveButtonKeydown': function (e) {

      var self = this;
      var view = this.view;
      if (!e.shiftKey && e.which === Keycodes.tab) {
        view.focusDateInput();
        self.stopEventFully(e);
      }

      self.onDeleteOrSaveKeydown(e);
    },

    'onDeleteOrSaveKeydown': function (e) {

      var self = this;

      if (e.which === Keycodes.esc) {
        self.view.onCancelChanges(e);
        self.stopEventFully(e);
      }
    },

    'onFocus': function (what) {

      if (what === 'self') {
        this.view.focusSelf();
      }
    },

    'onToggleEditMode': function (e) {

      var self = this;
      var view = self.view;
      var isEditVisible;

      self.defer(function() {

        view.ready.done(function() {

          if (e) {
            e.stopPropagation();
          }

          if (view.model.isCompleted() || view.popover.isEventOnIgnoredElement(e)) {
            return;
          }

          isEditVisible = view.isEditVisible();
          if (!isEditVisible) {

            view.showEditMode();
            view.popover.trigger('popover:open');

            runtime.trigger('route:tasks/' + view.model.id + '/reminder/edit', {'trigger': false });
            view.triggerFocusChange();
          }
        });
      });
    },

    'onDeleteReminder': function (e) {

      var self = this;
      var view = self.view;
      if (view.model.isCompleted()) {
        return;
      }

      if (e) {
        e.stopPropagation();
      }

      // this is here because the default dates are set, and need to be unset before they are destroyed
      if (view.reminderModel) {
        view.reminderModel.set('date', null);
        view.reminderModel.destroy();
      }

      // TODO move to view as own reset/render cleanup method
      view.resetDatePicker();
      view.renderDisplayDate();
      view.closePopover();
      view.hideEditMode();

      view.toggleDateClass(false);

      runtime.trigger('route:tasks/' + view.model.id + '/reminder/focus');
    },

    'onSaveReminder': function(e){

      var self = this;
      var view = self.view;

      this.onSaveChanges();
      view.onCancelChanges();

      if (e) {
        e.stopPropagation();
      }
    },

    'onSaveChanges': function () {

      // save changes
      // only save changed attributes!
      var self = this;
      var view = self.view;

      var date = view.datePicker.model.attributes.date;
      var hour = view.getHour();
      var minute = view.getMinute();
      var ampm = view.getAMPM();
      var is12Hour = runtime.settings.attributes.time_format === '12 hour';
      var ISO;

      view.isEditing = false;

      // apply model changes
      if (typeof date === 'number' && !_.isNaN(date)) {

        if (hour !== null && minute !== null && ampm !== null) {

          hour = is12Hour ? DateHelper.convertHourTo24HourTime(hour, ampm) : hour;

          ISO = moment(date).sod().add({

            'h': Strings.pad(hour, 2),
            'm': Strings.pad(minute, 2)
          }).format('YYYY-MM-DDTHH:mm:ss');
        }

        ISO = DateHelper.convertLocalTimeToServerTime(ISO);

        var data = {'task_id': view.model.attributes.id, 'date': ISO};

        if (view.reminderModel) {
          view.reminderModel.save(data);
        }
        else {
          view.allReminders.add(data);
        }
      }
      else {
        view.reminderModel && view.reminderModel.destroy();
      }

      view.resetDatePicker();
    },

    'onEditDateKeyDown': function (e) {

      var self = this;
      var view = self.view;

      if (e.shiftKey && e.keyCode == Keycodes.tab) {
        view.shiftKeyDown = true;
      }

      // handle keys - ret/enter = save, esc cancel
      if (e.which === Keycodes.enter) {
        self.onSaveChanges(); // saves data to model
        view.onCancelChanges();  // simply closes UI edit modes
      }
      else if (e.which === Keycodes.esc) {
        view.onCancelChanges();
      }
      else if (e.which === Keycodes.tab) {
        self.onDatePickerInputMousedown();
      }
    },

    'onEditHourKeyDown': function (e) {

      var self = this;
      var view = self.view;
      var hour = view.getHour();

      var is12Hour = runtime.settings.attributes.time_format === '12 hour';

      if (e.which === Keycodes.up) {
        hour = (hour < (is12Hour ? 12 : 23)) ? hour + 1 : (is12Hour ? 1 : 0);
        view.renderHour(Strings.pad(hour, 2));
      }
      else if (e.which === Keycodes.down) {
        hour = (hour > (is12Hour ? 1 : 0)) ? hour - 1 : (is12Hour ? 12 : 23);
        view.renderHour(Strings.pad(hour, 2));
      }
      else if (e.which === Keycodes.enter || e.which === Keycodes.esc) {
        self.onEditDateKeyDown(e);
      }
      else if (e.which === Keycodes.left || e.which === Keycodes.right || e.which === Keycodes.backspace || e.which === Keycodes.del) {
        // do nothing
      }
      else if (e.which === Keycodes.tab) {
        self.onDatePickerInputMousedown();
      }
      else if ( !(Keycodes.zero <= e.which && e.which <= Keycodes.nine) && !(Keycodes.padZero <= e.which && e.which <= Keycodes.padNine)) {
        return false;
      }
    },

    'onEditMinuteKeyDown': function (e) {

      var self = this;
      var view = self.view;
      var minute = view.getMinute();

      if (e.which === Keycodes.up) {
        minute = (minute < 59) ? minute + 1 : 0;
        view.renderMinute(Strings.pad(minute, 2));
      }
      else if (e.which === Keycodes.down) {
        minute = (minute > 0) ? minute - 1 : 59;
        view.renderMinute(Strings.pad(minute, 2));
      }
      else if (e.which === Keycodes.enter || e.which === Keycodes.esc) {
        self.onEditDateKeyDown(e);
      }
      else if (e.which === Keycodes.left || e.which === Keycodes.right || e.which === Keycodes.backspace || e.which === Keycodes.del) {
        // do nothing
      }
      else if (e.which === Keycodes.tab) {
        self.onDatePickerInputMousedown();
      }
      else if ( !(Keycodes.zero <= e.which && e.which <= Keycodes.nine) && !(Keycodes.padZero <= e.which && e.which <= Keycodes.padNine)) {
        return false;
      }
    },

    'onDatePickerInputMousedown': function () {

      var view = this.view;

      view.preventInputBlur = true;
      _.delay(function () {

        view.preventInputBlur = false;
      }, 250);
    },

    'onDatePickerInputBlur': function () {

      var self = this;
      var view = self.view;

      if (view.shiftKeyDown) {
        self.onSaveChanges();
        view.hideEditMode();
        view.shiftKeyDown = false;
        return;
      }

      if (!view.popoverOpen && !view.preventInputBlur) {
        self.onSaveChanges();
        view.hideEditMode();
      }

      view.preventInputBlur = false;
    },

    'onTimeFocus': function () {

      this.view.toggleTimeFocusClass(true);
    },

    'onTimeBlur': function () {

      this.view.toggleTimeFocusClass(false);
    }
  });
});
define('templates/detailview/detailReminder',['vendor/handlebars'], function(H) {
var name = 'detailview/detailReminder';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<span class=\"icon detail-reminder\"></span> <div class=\"section-title\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "placeholder_remind_me", options) : helperMissing.call(depth0, "localized", "placeholder_remind_me", options)))
    + " </div> <div class=\"section-description\"></div> <div class=\"section-edit hidden\"> <span class=\"input-fake\" id=\"edit-reminder-time-container\"> <label for=\"edit-reminder-time\" value=\"Time\"/> <input id=\"edit-reminder-time-hour\" class=\"chromeless smaller\" type=\"text\" value=\"12\" maxlength=\"2\"/>: <input id=\"edit-reminder-time-minute\" class=\"chromeless smaller\" type=\"text\" value=\"00\" maxlength=\"2\"/> <select id=\"edit-reminder-time-ampm\" class=\"chromeless tiny\"> <option value=\"am\" data-key-text=\"label_time_am\" selected></option> <option value=\"pm\" data-key-text=\"label_time_pm\"></option> </select> </span> </div> <a class=\"detail-delete\" data-key-aria-label=\"button_delete\" tabindex=\"0\"><span class=\"icon detail-delete\"></span></a> <a class=\"detail-save\" data-key-aria-label=\"button_save\" tabindex=\"0\"><span class=\"icon detail-save\"></span></a>";
  return buffer;
  });
});
define('views/TaskDetail/TaskDetailReminderView',[

  'application/runtime',

  'vendor/moment',

  'wunderbits/helpers/date',
  'wunderbits/helpers/strings',

  'wunderbits/WBBlurHelper',

  'collections/ReminderCollection',

  'views/TaskDetail/Controllers/TaskDetailReminderViewController',

  './SectionView',
  'wunderbits/WBDatePickerView',
  'wunderbits/WBDatePickerInputView',
  'wunderbits/WBPopoverView',

  'template!detailview/detailReminder'

], function (
  runtime,
  moment, DateHelper, Strings, BlurHelper,
  ReminderCollection,
  TaskDetailReminderViewController,
  SectionView, WBDatePickerView, WBDatePickerInputView, Popover,
  detailReminderTemplate,
  undefined
) {

  

  var $ = runtime.$;

  var isIE = runtime.env.isIE();

  var _super = SectionView.prototype;

  return SectionView.extend({

    'sectionName': 'reminder',

    'template': detailReminderTemplate,

    'className': 'section detail-reminder',

    'attributes': {
      'tabindex': 0
    },

    'implements': [TaskDetailReminderViewController],

    // this view handles initial display of due date as well as editing of due date
    'emits': {
      'click': 'toggle:edit',
      'click a.detail-delete': 'click:delete',
      'click a.detail-save': 'click:save',

      'keydown .datepicker-input': 'keydown:datepickerInput',
      'keydown #edit-reminder-time-hour': 'keydown:hours',
      'keydown #edit-reminder-time-minute': 'keydown:minutes',

      'mousedown .datepicker-input, #edit-reminder-time-container, #edit-reminder-time-ampm, #edit-reminder-time-ampm options, a.detail-delete, a.detail-save': 'mousedown:datepicker',
      'blur .datepicker-input, #edit-reminder-time-hour, #edit-reminder-time-minute, #edit-reminder-time-ampm': 'blur:datepicker',

      'focus #edit-reminder-time-hour, #edit-reminder-time-minute': 'focus:time',
      'blur #edit-reminder-time-hour, #edit-reminder-time-minute': 'blur:time',

      'keydown': 'keydown',
      'keydown a.detail-save': 'keydown:saveButton',
      'keydown a.detail-delete': 'keydown:deleteButton'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.ready = new $.Deferred();

      // any sub views
      self.datePicker = self.addSubview(new WBDatePickerView({
        'futureOnly': false,
        'hideNoDate': true,
        'hideCancel': true,
        'startDay': runtime.settings.attributes.start_of_week,
        'settingsModel': runtime.settings
      }));
      self.datePickerInput = self.addSubview(new WBDatePickerInputView({
        'futureOnly': false,
        'noRepeats': true,
        'settingsModel': runtime.settings,
        'datePickerModel': self.datePicker.model
      }));

      // date shit binds
      self.bindTo(self.datePicker.model, 'change unset', function () {

        //self.datePicker.model.attributes.date !== null && self.renderEditorDate();
      });

      self.bindTo(self.datePicker.model, 'change:date', function () {
        if (self.isEditing) {
          self.closePopover();
        }

        if (self.datePicker.model.attributes.date) {

          self.$el.addClass('date');
        }
        else {

          self.$el.removeClass('date');
        }
      });

      self.bindTo(runtime.settings, 'change:start_of_week', function () {

        self.datePicker.setStartDay(runtime.settings.attributes.start_of_week);
        self.datePicker.render();
      });

      self.bindTo(runtime.settings, 'change:time_format', self.renderDisplayDate);
    },

    'render': function (options) {

      var self = this;

      self.model = options.model;

      // reminder collections, for this id (reading models), and for saving new (add toall collection)
      self.reminders = new ReminderCollection('/tasks/' + self.model.attributes.id + '/reminders');
      self.allReminders = new ReminderCollection('/reminders/all');

      // bind to reminder model when a reminder exists
      self.bindTo(self.reminders, 'add remove', function () {

        self.reminderModel && self.unbindFromTarget(self.reminderModel);

        self.reminderModel = (self.reminders && self.reminders.models.length) ? self.reminders.models[0] : null;
        self.reminderModel && self.bindTo(self.reminderModel, 'change:date', self.renderDisplayDate);
        self.renderDisplayDate();
      });

      // reminder model
      // TODO check this this is correct in the future ...
      self.reminderModel = self.reminders.models.length ? self.reminders.models[0] : null;

      _super.render.call(self, self.model.toJSON());

      self.isComplete = self.model.attributes.completed ? true : false;

      // insert date picker input view
      self.$el.find('.section-edit').prepend(self.datePickerInput.render().$el);

      // render date picker into a popover view
      if (self.popover && !self.popover.destroyed) {

        self.popover.destroy();
        self.resetDatePicker();
      }
      self.popover = self.addSubview(new Popover({
        'context': self,
        'content': self.datePicker,
        'target': self.datePickerInput.$el, //self.$el
        'ignoredElements': [
          self.$('.datepicker-input'),
          self.$('#edit-reminder-time'),
          self.$('#edit-reminder-method'),
          self.$('#edit-reminder-time-hour'),
          self.$('#edit-reminder-time-minute'),
          self.$('#edit-reminder-time-ampm')
        ],
        'position': 'bottom',
        'closeOthers': true,
        'bindToTarget': false,
        'offset': 0,
        'onShow': self.onPopoverShow,
        'onClose': function () {

          self.defer(function () {

            self.popoverOpen = false;
          });
        },
        'onBlur': function () {

          if (self.isEditVisible()) {

            self.trigger('save');
            self.hideEditMode();
          }
        },
        'preventOpen': function () {

          return self.isComplete;
        }
      }));

      // end date picker
      self.renderDisplayDate();

      // bind to model if reminder exists
      if (self.reminderModel) {

        self.bindTo(self.reminderModel, 'change:date', self.renderDisplayDate);
      }
      self.bindTo(self.model, 'change:completed', self.onChangeDoneState);

      self.ready.resolve();

      // input binds
      self.bindTo(self.datePickerInput.$el, 'click', function () {

        self.isEditVisible() && !self.popoverOpen && self.popover.trigger('popover:open');
      });

      return self;
    },

    'renderDisplayDate': function () {

      var self = this;
      //var date = self.model.attributes.reminder_date; // someimes returning nan
      //var time = self.model.attributes.reminder_time;
      var reminderDate = self.reminderModel ? self.reminderModel.attributes.date : null;

      var date = reminderDate ? moment(DateHelper.convertServerTimeToLocalTime(reminderDate)).valueOf() : null;

      var time = reminderDate ? moment(date).format('HH:mm') : null;

      var $dateDisplay = self.$el.find('.section-description');
      var $dateIconDisplay = self.$el.find('.icon.detail-reminder');
      var $timeDisplay = self.$el.find('.section-title');
      var humanizedDate = date && DateHelper.humanizeDueDate(date);
      var is12Hour = runtime.settings.attributes.time_format === '12 hour';
      var dueDateText, dueTimeText, hours, minutes, ampm, timeParts, label, text;


      if (reminderDate) {

        self.$el.addClass('date');

        // Render the date
        if (DateHelper.isHumanizeable(new Date(date))) {
          dueDateText = humanizedDate;
        }
        else {
          dueDateText = moment(date).format('MMM D, YYYY');
        }
        $dateDisplay.html(dueDateText.toString()).addClass('repeat');

        // Mark as overdue if required
        var reminderdate = moment(DateHelper.convertServerTimeToLocalTime(self.reminderModel.attributes.date));
        var now = moment();
        var diff = reminderdate.diff(now);

        if ( diff < 0) {
          $timeDisplay.addClass('overdue');
          $dateIconDisplay.addClass('overdue');
        } else {
          $timeDisplay.removeClass('overdue');
          $dateIconDisplay.removeClass('overdue');
        }

        // Render the time
        timeParts = time.split(':');
        // set up hours for 12 or 24 hour clock
        if (is12Hour) {
          hours = (Number(timeParts[0]) > 12) ? timeParts[0] - 12 : timeParts[0];
          hours = Number(timeParts[0]) === 0 ? 12 : hours;
          ampm = (Number(timeParts[0]) >= 12) ? 'PM' : 'AM';
        }
        else {
          hours = timeParts[0];
        }
        // minutes are the same for 12 and 24 :D
        minutes = timeParts[1];
        // build string
        dueTimeText = hours + ':' + minutes;
        dueTimeText = is12Hour ? dueTimeText + ' ' + ampm : dueTimeText;

        label = runtime.language.getLabel('label_remind_me_at_$', dueTimeText).toString();
        text = runtime.language.getText('label_remind_me_at_$', dueTimeText);
        $timeDisplay.html(label).addClass('repeat');
      }
      else {

        self.$el.removeClass('date');
        label = runtime.language.getLabel('placeholder_remind_me').toString();
        $timeDisplay.html(label).removeClass('repeat');
        $dateDisplay.html('').removeClass('repeat');
      }

      dueDateText = dueDateText ? dueDateText.toString() : '';

      if (/<text/.test(dueDateText)) {
        dueDateText = runtime.language.getText($(dueDateText).attr('rel'));
      }

      var ariaLabel =  reminderDate ? text + ', ' + dueDateText : runtime.language.getText('placeholder_remind_me');
      self.$el.attr('aria-label', ariaLabel);

      self.renderLocalized();
    },

    'renderEditorDate': function () {

      var self = this;

      var date = self.datePicker.model.attributes.date;
      var dueDate = self.model.attributes.due_date;

      var time = self.reminderModel ? moment(DateHelper.convertServerTimeToLocalTime(self.reminderModel.attributes.date)).format('HH:mm') : null;
      var timeParts, hours, minutes, ampm;
      var preFormattedDate;
      var today = moment().sod();
      var notToday = dueDate && moment(dueDate).diff(today, 'days') > 0;
      var is12Hour = runtime.settings.attributes.time_format === '12 hour';
      var $ampm = self.$el.find('#edit-reminder-time-ampm');

      if (!date) {

        self.$el.removeClass('date');
      }
      else {

        self.$el.addClass('date');
      }

      // This checks that there is not already a reminder but there was a due date.
      // This will select a reminder for the due date and set its time as 9am
      if (!self.reminderModel && dueDate && notToday) {

        preFormattedDate = moment(dueDate).subtract('d', runtime.settings.attributes.auto_reminder_noticeperiod).valueOf();

        if (!self.datePicker.model.attributes.date) {

          self.datePicker.model.set('date', preFormattedDate);
        }

        if (!time) {

          time = moment().sod().add('m', runtime.settings.attributes.auto_reminder_timeinterval).format('HH:mm');
        }
      }
      else if (!self.reminderModel) {

        preFormattedDate = moment().sod().valueOf();

        if (!self.datePicker.model.attributes.date) {

          self.datePicker.model.set('date', preFormattedDate);
        }

        if (!time) {
          time = moment().add('h', 1).subtract('minutes', moment().format('mm')).format('HH:mm');
        }
      }

      if (time) {

        timeParts = time.split(':');
        if (is12Hour) {

          hours = (Number(timeParts[0]) > 12) ? timeParts[0] - 12 : timeParts[0];
          hours = (Number(timeParts[0]) === 0) ? 12 : hours;
          ampm = (Number(timeParts[0]) >= 12) ? 'pm' : 'am';

          $ampm.removeClass('hidden');
          $ampm.find('option').each(function (index, el) {

            el = $(el);

            if (el.val() === ampm) {

              el.prop('selected', true);
            }
            else {

              el.prop('selected', false);
            }
          });
        }
        else {

          $ampm.addClass('hidden');
          hours = timeParts[0];
        }
        minutes = timeParts[1];

        self.$el.find('#edit-reminder-time-hour').val(Strings.pad(hours, 2));
        self.$el.find('#edit-reminder-time-minute').val(Strings.pad(minutes, 2));
      }

      if (self.isEditVisible()) {

        !self.preventInputBlur && self.datePickerInput.$el.focus();
      }
    },

    'resetDatePicker': function () {

      var self = this;

      var is12Hour = runtime.settings.attributes.time_format === '12 hour';
      var date = self.reminderModel ? self.reminderModel.attributes.date : null;
      date = date ? moment(DateHelper.convertServerTimeToLocalTime(date)).valueOf() : null;

      var time = self.reminderModel ? moment(DateHelper.convertServerTimeToLocalTime(self.reminderModel.attributes.date)).format('HH:mm') : null;
      var timeParts, hours, minutes, ampm;

      if (!date) {

        self.datePicker.model.set({'date': null, 'interval': null, 'frequency': null});

        self.$el.removeClass('date');

        self.$el.find('#edit-reminder-time-hour').val('');
        self.$el.find('#edit-reminder-time-minute').val('');
      }
      else {

        self.datePicker.model.set({'date': date, 'interval': null, 'frequency': null});

        timeParts = time.split(':');

        if (is12Hour) {

          hours = (Number(timeParts[0]) > 12) ? timeParts[0] - 12 : timeParts[0];
          if (Number(timeParts[0]) === 0) {
            hours = 12;
          }
        }
        else {

          hours = timeParts[0];
        }

        minutes = timeParts[1];

        ampm = (Number(timeParts[0]) >= 12) ? 'pm' : 'am';

        self.$el.find('#edit-reminder-time-hour').val(Strings.pad(hours, 2));
        self.$el.find('#edit-reminder-time-minute').val(Strings.pad(minutes, 2));

        self.$el.find('#edit-reminder-time-ampm option').each(function (index, el) {

          el = $(el);

          if (el.val() === ampm) {

            el.prop('selected', true);
          }
          else {

            el.prop('selected', false);
          }
        });
      }
    },

    'onPopoverShow': function () {

      var self = this;

      var date = self.reminderModel ? self.reminderModel.attributes.date : null;

      self.popoverOpen = true;

      if (!self.isEditing) {

        date = date ? moment(DateHelper.convertServerTimeToLocalTime(date)).valueOf() : null;
        self.datePicker.model.set({'date': date});
        self.renderEditorDate();
        self.isEditing = true;
      }

      self.datePicker.onChangeDate();

      self.bindTo($(self.popover.$('.cancel')), 'click', self.onCancelChanges);
      self.bindTo($(self.popover.$('.day.selected')), 'click', self.closePopover);
      self.bindTo(runtime, 'popover:close', self.closeAndHideEditMode);

      self.datePicker && self.datePicker.monthsRenderedDeferred.resolve();
    },

    'closeAndHideEditMode': function () {

      var self = this;
      self.closePopover();
      self.hideEditMode();
      self.isEditing = false;
      self.resetDatePicker();
      isIE && BlurHelper.run();
    },

    'closePopover': function () {

      var self = this;

      self.popover.trigger('popover:close', {fadeOut: true});
      self.isEditVisible() && self.$('.section-edit .datepicker-input').focus();
    },

    'showEditMode': function () {

      var self = this;
      var $editor =  self.$el.find('.section-edit');

      $editor.siblings().not('.icon, a').addClass('hidden');
      $editor.removeClass('hidden');
      self.$el.addClass('editing');
      $editor.find('.datepicker-input').focus();
    },

    'hideEditMode': function () {

      var self = this;
      var $editor =  self.$el.find('.section-edit');

      if (self.isEditVisible()) {

        $editor.siblings().removeClass('hidden');
        $editor.addClass('hidden');

        self.$el.removeClass('editing');

        if (!self.reminderModel) {
          self.$el.removeClass('date');
        }

        self.trySetFocusRoute();
      }
    },

    'toggleTimeFocusClass': function (state) {

      var self = this;

      self.$('#edit-reminder-time-container').toggleClass('focus', state);
    },

    'onChangeDoneState': function () {

      var self = this;

      self.isComplete = self.model.attributes.completed ? true : false;
    },

    'onCancelChanges': function (e) {

      var self = this;
      var date = self.reminderModel && self.reminderModel.attributes.date;

      self.datePicker.model.set({

        'date': date || null
      });

      // cancel changes
      self.defer(function () {

        self.trigger('mousedown:datepicker');
        self.hideEditMode();
        self.closePopover();
        self.isEditing = false;

        if (!self.reminderModel || (self.reminderModel && !self.reminderModel.attributes.date)) {
          self.$el.removeClass('date repeat');
        }

        self.resetDatePicker();
        isIE && BlurHelper.run();
        runtime.trigger('route:tasks/' + self.model.id + '/reminder/focus');
      });

      if (e) {
        e.stopPropagation();
      }
    },

    'toggleDateClass': function (state) {

      this.$el.toggleClass('date', state);
    },

    'isEditVisible': function () {

      return this.$el.hasClass('editing');
    },

    'getHour': function () {

      return parseInt(this.$('#edit-reminder-time-hour').val(), 10);
    },

    'renderHour': function (string) {

      this.$('#edit-reminder-time-hour').val(string);
    },

    'getMinute': function () {

      return parseInt(this.$('#edit-reminder-time-minute').val(), 10);
    },

    'renderMinute': function (string) {

      this.$('#edit-reminder-time-minute').val(string);
    },

    'getAMPM': function () {

      return this.$('#edit-reminder-time-ampm').val();
    },

    'silentRouteToTask': function () {

      var self = this;
      var isRouteActive = runtime.currentRoute().indexOf('tasks/' + self.model.id + '/reminder/edit') >= 0;

      isRouteActive && runtime.trigger('route:tasks/' + self.model.id, { 'trigger': false });
    },

    'triggerFocusChange': function () {

      runtime.trigger('focus:set', 'detail');
    },

    'focusSelf': function () {

      this.$el.focus();
    },

    'focusDateInput': function () {

      this.$('input.datepicker-input').focus();
    }
  });
});
define('templates/WBExpandableTextarea',['vendor/handlebars'], function(H) {
var name = 'WBExpandableTextarea';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<pre><span></span><br/></pre> <textarea class=\"";
  if (stack1 = helpers.className) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.className; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\">";
  if (stack1 = helpers.content) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.content; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</textarea> "
    + " ";
  return buffer;
  });
});
define('styles/WBExpandableTextarea',[],function() { return {'name': 'WBExpandableTextarea', 'styles': ".expandingArea{position:relative;} .expandingArea pre{margin:0;padding:0 !important;outline:0;border:0 !important;display:block;visibility:hidden} .expandingArea textarea{overflow:hidden;position:absolute;top:0;left:0;width:100%;height:100%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;resize:none;margin:0;border:0;padding:0} .firefox .expandingArea textarea{left:-1px;font-weight:normal} .explorer .body .expandingArea textarea{top:-1px} .expandingArea textarea,.expandingArea pre{padding:0;background:transparent;border:none;font-family:\"Helvetica Neue\",\"Helvetica\",Arial,sans-serif;white-space:pre-wrap;word-wrap:break-word;text-shadow:none !important} " }; });
define('wunderbits/WBExpandableTextareaView',[

  './lib/dependencies',

  './WBView',
  './WBModel',

  './helpers/selection',

  'template!WBExpandableTextarea',
  'style!WBExpandableTextarea'

], function (dependencies, WBView, WBModel, Selection, template, expandableTextareaStyle, undefined) {

  

  var _ = dependencies._;
  var w_ = dependencies.w_;
  var _super = WBView.prototype;

  return WBView.extend({

    'template': template,

    'styles': [expandableTextareaStyle],

    'className': 'expandingArea active',

    'events': {

      'click': '_onClick',
      'input textarea': '_onInput',
      'keydown textarea': '_onKeyDown'
    },

    'initialize': function (options) {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.model = new WBModel();

      self._options = options || {};
    },

    'render': function (options) {

      var self = this;

      var json = self.model.toJSON();

      self._options = w_.merge(self._options, options || {});
      self._options.lineHeight = parseInt(self._options.lineHeight, 10) || 26;
      self._options.fontSize = parseInt(self._options.fontSize, 10) || 13;

      // defined options: className, content
      _.each(options, function (value, key) {

        json[key] = value;
      });

      _super.render.call(self, json);

      self.$('textarea, pre').css({
        'line-height': self._options.lineHeight + 'px',
        'font-size': self._options.fontSize + 'px'
      });

      var $textarea = self.$('textarea');

      if (self._options.placeholderKey) {
        $textarea.attr('data-key-placeholder', self._options.placeholderKey);
        $textarea.attr('data-key-aria-label', self._options.placeholderKey);
      }

      // copy text into span
      self.$('span').text(self.$('textarea').val());

      self.renderLocalized();

      return self;
    },

    'setEnabled': function (state) {

      var self = this;
      self.setContent('');
      self.$el.attr('disabled', !!!state).toggleClass('disabled', !!!state);
    },

    'setContent': function (content) {

      var self = this;
      self.$('span').text(content);
      self.$('textarea').val(content);

      self._onInput();
    },

    onDestroy: function () {

    },

    _onClick: function (e) {

      e.stopPropagation();
      //return false;
    },

    '_onKeyDown': function (e) {

      var self = this;
      var options = self._options || {};
      var $textarea = self.$('textarea');
      var text = $textarea.val();
      var notAllowed = [13, 27, 8, 38, 40, 37, 39];
      var allwaysAllowed = [46];

      if (!options.maxLength) {

        return;
      }
      else if (_.include(allwaysAllowed, e.which)) {
        // allways allowed do nothing or something later on ...
      }
      else if (!e.metaKey && !_.include(notAllowed, e.which) && text.length >= options.maxLength) {

        e.preventDefault();
      }
    },

    _onInput: function () {

      var self = this;
      var $pre = self.$('pre');
      var $textarea = self.$('textarea');
      var text = $textarea.val();
      var html;

      if (self._options && self._options.maxLength && text.length >= self._options.maxLength) {

        text = text.substr(0, self._options.maxLength);
      }

      if ($textarea.val() !== text) {

        var pos = $textarea[0].selectionStart;
        $textarea.val(text);
        Selection.setCaretToPos($textarea[0], pos);
      }

      if (self._options && typeof self._options.spanProcessor === 'function') {

        html = self._options.spanProcessor(_.escape(text));
      }
      else {

        html = _.escape(text);
      }

      $pre.html(html + "\n");
    }
  });
});
define('styles/WBContentFakable',[],function() { return {'name': 'WBContentFakable', 'styles': ".content-fakable .display-view{overflow:hidden;white-space:pre-wrap;} .content-fakable .display-view span{white-space:pre-wrap} .content-fakable textarea,.content-fakable pre{-moz-tab-size:1;-o-tab-size:1;-webkit-tab-size:1;-moz-tab-size:1;-o-tab-size:1;tab-size:1} .firefox .content-fakable .display-view{font-weight:normal} " }; });
define('wunderbits/WBContentFakable',[

  './WBRuntime',

  './helpers/selection',

  './WBView',
  './WBModel',
  './WBExpandableTextareaView',

  './mixins/LinkingViewMixin',
  './mixins/EmailLinkingViewMixin',
  './mixins/UnicodeEmojiViewMixin',

  './helpers/strings',
  'style!WBContentFakable'

], function (
  WBRuntime,
  Selection,
  WBView, WBModel, WBTextarea,
  LinkingViewMixin, EmailLinkingViewMixin, UnicodeEmojiViewMixin,
  Strings,
  contentFakableStyle,
  undefined
) {

  

  var $ = WBRuntime.$;
  var _ = WBRuntime._;

  var _super = WBView.prototype;

  return WBView.extend({

    'className': 'content-fakable',

    'styles': [contentFakableStyle],

    'events': function () {

      var events = {
        'click .display-view span': '_onClickWord',
        'keydown .edit-view textarea': '_onEditKeydown',
        'keyup .edit-view textarea': '_debouncedOnEditKeyup',
        'blur .edit-view textarea': '_onEditBlur'
      };

      if (WBRuntime.env.isTouchDevice()) {

        var touchEvents = {
          'ontouchstart .display-view span': '_onClickWord',
          'mousedown .display-view span': '_override',
          'mouseup .display-view span': '_override'
        };

        _.extend({}, events, touchEvents);
      }

      return events;
    },

    '_override': function () {},

    'initialize': function () {

      var self = this;

      self.rendered = new $.Deferred();

      _super.initialize.apply(self, arguments);

      self.model = new WBModel();
      self.bindTo(self.model, 'change:content', self._onUpdateContent);

      LinkingViewMixin.applyTo(self);
      EmailLinkingViewMixin.applyTo(self);
      UnicodeEmojiViewMixin.applyTo(self);

      self.textareaView = self.addSubview(new WBTextarea(self.options));

      // debounced handler for auto saving and rendering
      self._debouncedOnEditKeyup = _.debounce(self._editKeyUpHandler, 1000);
      self._debouncedRenderDisplay = _.debounce(self.renderDisplayView, 10000);
    },

    'render': function (options) {

      // options: {
      //   content: 'My awesome content.',
      //   convertLinks: true,
      //   maxLength: 255,
      //   autoSave: true,
      //   saveOnEnter: false,
      //   showLoading: false,
      //   scrollContainer: el
      // }

      var self = this;
      var content, loadText;

      // kill all zombies!
      self.$el && self.$el.children().remove();

      _super.render.apply(self, arguments);

      self._options =  options || {};
      self._options.context = options.context || self;

      self._options.markupDelay = self._options.markupDelay || 0;

      // sets initial visible state if a scroll container is passed
      self._isVisible = self._options.scrollContainer ? false : true;

      self.model.set({
        'content': self._options.content,
        'maxLength': self._options.maxLength
      }, { 'silent': true });

      content = self.model.attributes.content;
      loadText = !content || !options.showLoading ? _.escape(self.model.attributes.content) : 'Loading ...';

      // I don't think this markup warrants its own template:
      // Styling should be handled by the parent view, WBExpandableTextarea has its own tmpl and style
      self.$el.empty().append('<div class="display-view"/><div class="edit-view hidden"/>');

      self.$('.display-view').empty().append(loadText);
      self.$('.edit-view').empty()[0].appendChild(self.textareaView.render({
        'content': content,
        'maxLength': self.model.attributes.maxLength,
        'spanProccessor': self._markupForDisplay
      }).el);

      // handle marking up links, removing markup, etc.
      // push out of current call stack
      _.defer(function () {

        if (self.destroyed) {
          return;
        }

        if (self._options.scrollContainer) {
          self.scrollCheck();
        }
        else {
          self.renderDisplayView();
        }
      });

      self._isEditing = false;
      self.rendered.resolve();

      return self;
    },

    'renderDisplayView': function () {

      var self = this;

      if (self.destroyed) {
        return;
      }

      var $display = self.$('.display-view');
      var $payload = $('<span/>');

      // render original text
      var text = self.model.attributes.content || '';
      $payload.text(text);

      self.wrapTextNodesInSpan($payload);
      $display.html($payload.html());

      self._isVisible = true;

      $payload.remove();
      $payload = null;

      var $content = self.$('.display-view span');
      if (self._options.convertLinks) {
        self.renderEmails($content);
        self.renderLinks($content);
      }

      self.renderEmoji($content);
    },

    'onDestroy': function () {

      var self = this;

      self.destroySubviews();
    },

    'wrapTextNodesInSpan': function (text) {

      var contents = text.contents().filter(function () {

        return this.nodeType === 3;
      });

      var wrappedText = $.each(contents, function () {

        $(this).wrap('<span>');
      });

      return wrappedText;
    },

    'onRemove': function () {

      var self = this;

      self.model.off('change:content', self._onUpdateContent);

      if (self._options.scrollContainer) {

        $(self._options.scrollContainer).off('scroll');
      }
    },

    // UI event handlers
    'onShowEditMode': function () {

      var self = this;
      var options = self._options || {};

      if (options.disableEdit) {

        return;
      }

      var $edit = self.$('.edit-view');
      var $display = self.$('.display-view');

      if (typeof options.breaker === 'function') {
        if (options.breaker.call(options.context)) {
          return;
        }
      }

      self._isEditing = true;

      $display.addClass('hidden');
      $edit.removeClass('hidden').find('textarea').focus();

      if (typeof options.onShowEdit === 'function') {
        options.onShowEdit.call(options.context);
      }
    },

    '_onHideEditMode': function () {

      var self = this;
      var options = self._options || {};
      var $edit = self.$('.edit-view');
      var $display = self.$('.display-view');

      self._isEditing = false;

      $display.removeClass('hidden');
      $edit.addClass('hidden');

      if (typeof options.onShowDisplay === 'function') {
        options.onShowDisplay.call(options.context);
      }
    },

    '_onEditKeydown': function (e) {

      var self = this;
      var options = self._options;
      // handle keys ent/ret = save, esc = cancel
      if (options.saveOnEnter && e.which === 13) {

        // if shift was pressed, don't do anything
        if (options.multiLine && e.shiftKey) {
          return;
        }

        e.preventDefault();
        self._onHideEditMode();
        self._onSaveChanges();
      }
      else if (e.which === 27) {

        self._onCancelChanges();
      }
    },

    '_onClickWord': function (ev) {

      // calculate the number of chars a clicked view char span corresponds to
      var self = this;
      var options = self._options;

      var targetSpan = $(ev.target).closest('span');

      if ((typeof options.breaker === 'function' && options.breaker.call(options.context)) || options.disableEdit) {
        return;
      }

      var previousLength = targetSpan.prevAll().text().length;
      self.editCursorPosition = (self._getSelectionOffset(targetSpan[0]) || 0) + previousLength;

      self.delay(self._moveCursorToNewPosition, 50);
    },

    '_getSelectionOffset': function (element) {

      var caretOffset = 0;
      var range;

      if (window.getSelection) {

        var selection = window.getSelection();

        if (selection.rangeCount === 0) {

          return;
        }

        range = selection.getRangeAt(0);

        var preCaretRange = range.cloneRange();
        preCaretRange.selectNodeContents(element);
        preCaretRange.setEnd(range.endContainer, range.endOffset);

        caretOffset = preCaretRange.toString().length;
      }
      else if (document.selection && document.selection.type) {

        var textRange = document.selection.createRange();
        var preCaretTextRange = document.body.createTextRange();
        preCaretTextRange.moveToElementText(element);
        preCaretTextRange.setEndPoint('EndToEnd', textRange);
        caretOffset = preCaretTextRange.text.length;
      }

      return caretOffset;
    },

    '_moveCursorToNewPosition': function () {

      var oldTop;
      var self = this;
      var options = self._options || {};

      var $display = self.$('.display-view');
      var $edit = self.$('.edit-view');

      if ((typeof options.breaker === 'function' && options.breaker.call(options.context)) || options.disableEdit) {
        return;
      }

      self._isEditing = true;

      if (options.scrollContainer) {
        oldTop = options.scrollContainer.scrollTop();
      }

      $display.addClass('hidden');
      $edit.removeClass('hidden');

      var textarea = $edit.find('textarea').focus();

      Selection.setCaretToPos(textarea[0], self.editCursorPosition);
      oldTop && options.scrollContainer.scrollTop(oldTop);

      if (typeof options.onShowEdit === 'function') {
        options.onShowEdit.call(options.context);
      }
    },

    '_onEditBlur': function () {

      var self = this;

      self._onHideEditMode();
      self._onSaveChanges();

      self.defer(self.renderDisplayView);
    },

    'scrollCheck': function () {

      var self = this;
      var buffer = 100;
      var $container, $el, containerOffset, containerHeight, elOffset, elHeight, elTop, visible;
      var bottomBound, topBound;

      // no reason to run the calculations if the content is already rendered!
      if (self._isVisible) {

        return;
      }

      $container = $(self._options.scrollContainer);

      if (!$container.length) {
        return;
      }
      
      $el = self.$el;
      containerOffset = $container.position();
      containerHeight = $container.height();
      elOffset = $el.offset();
      elHeight = 0;
      elTop = elOffset.top;
      visible = false;
      bottomBound = containerOffset.top + containerHeight;
      topBound = containerOffset.top;

      if (bottomBound >= elTop - buffer) {

        visible = true;

        if (visible !== self._isVisible && visible === true) {

          self.renderDisplayView();
        }
      }
    },

    // model reactions
    '_onUpdateContent': function () {

      var self = this;
      var $textarea = self.$('textarea');
      var modelContent = self.model.attributes.content;

      if (!self._isEditing && $.trim($textarea.val()) !== modelContent) {

        $textarea.val(modelContent);
        $textarea.text(modelContent);
        self.$('pre').text(modelContent + "\n");
      }

      self.renderDisplayView();
    },

    '_onEditKeyup': function () {

      // skeleton
    },

    // save handlers
    '_editKeyUpHandler': function () {

      var self = this;

      if (self._options.autoSave) {

        self._onSaveChanges();
        // if user leaves the content fakable on edit mode but doesn't type for a while, go a head and render the display mode
        self._debouncedRenderDisplay();
      }
    },

    '_onCancelChanges': function () {

      var self = this;

      self.$('textarea').val(self.model.attributes.content);
      self._onHideEditMode();
    },

    '_onSaveChanges': function () {

      var self = this;
      var content = $.trim(self.$('textarea').val());
      //content = content.replace(/<(?:.|\n)*?>/gm,'');
      content = Strings.emojiTokensToUnicode(content);

      if (content !== self.model.attributes.content) {

        self.model.set('content', content);
      }
    }
  });
});
define('views/TaskDetail/Controllers/TaskDetailNoteFullscreenViewController',[

  'application/runtime',

  'wunderbits/helpers/selection',

  'wunderbits/WBModalViewController'

], function (
  runtime,
  Selection,
  WBModalViewController,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;

  var _super = WBModalViewController.prototype;

  return WBModalViewController.extend({

    'onDebouncedKeydown': undefined,

    'implements': {
      'close:self': 'closeSelf',
      'focus:changed': 'onChangeFocus',
      
      'click:close': 'onClose',
      'click:content': 'onToggleEditMode',
      'click:body': 'onToggleEditMode',
      
      'blur': 'onBlur',
      
      'keydown:textarea': 'onDebouncedKeydown',
      
      'mousedown':  'onMouseDown',
      'mouseup': 'fixScroll'
    },

    'initialize': function () {

      var self = this;

      self.onDebouncedKeydown = _.debounce(self.onTextareaKeydown, 250);
      _super.initialize.apply(self, arguments);
    },

    'onChangeFocus': function (focus) {

      var self = this;
      self.view.currentFocus = focus;
    },

    'closeSelf': function () {

      var self = this;
      var view = self.view;
      if (!view.isEditing) {
        runtime.trigger('route:tasks/' + view.taskModel.id);
      }
    },

    'onClose': function () {

      var self = this;
      var edit = self.view.isEditing ? '/note/edit' : '';
      runtime.trigger('route:tasks/' + self.view.taskModel.id + edit);
    },

    'onToggleEditMode': function (e) {

      var self = this;
      var view = self.view;
      var targetIsSpan = false;

      if (view.taskModel.isCompleted()) {
        return;
      }

      if (e) {
        targetIsSpan = $(e.target).is('span');
      }

      if (!targetIsSpan) {

        view.contentFakable.onShowEditMode();
        if (self.cursor !== undefined) {
          Selection.setCaretToPos(view.$el.find('textarea')[0], self.cursor);
        }

        view.changeUrl(true);
      }
    },

    'onTextareaKeydown': function () {

      var self = this;
      self.view.checkScrolling();
    },

    // UI actions
    'onMouseDown': function (e) {

      var self = this;
      self.cursor = self.getCaretFromMouse(e);
    },

    'getCaretFromMouse': function (e) {

      var self = this;
      var view = self.view;
      var targetIsSpan = $(e.target).is('span');

      if (!targetIsSpan) {
        return Selection.getCaretFromMousePos(view.$el.find('textarea')[0], view.$el.find('.note'), e);
      }
      else {
        return undefined;
      }
    },

    // scroll
    'fixScroll': function (e) {

      var self = this;
      var view = self.view;
      var $scrollableContent = view.$el.find('.note');
      var currentTop = $scrollableContent.position().top;
      var $scrollContainer = view.$el.find('.content-inner');

      if (self.cursor !== undefined) {
        return;
      }

      if (e.type === 'mousedown') {
        self.scrollTop = currentTop;
      }
      else if (self.scrollTop && self.scrollTop !== 0) {
        $scrollContainer.scrollTop(-self.scrollTop);
      }
    }
  });
});
define('templates/detailview/detailNoteFullscreen',['vendor/handlebars'], function(H) {
var name = 'detailview/detailNoteFullscreen';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"content-inner\"> <div class=\"note selectable\"> <div class=\"note-body\"> </div> </div> </div>";
  });
});
define('styles/modals/noteModal',[],function() { return {'name': 'modals/noteModal', 'styles': "#fullscreen-note{background:#f7f5df;width:480px;margin-left:-240px;top:30px;bottom:30px;} #fullscreen-note .head{background:none;-webkit-box-shadow:none;box-shadow:none;border:none;} #fullscreen-note .head h2{color:#b29559;margin:6px 40px;padding:0;font-size:13px;font-weight:500;text-shadow:0 1px 0 rgba(255,255,255,0.65)} #fullscreen-note .head a.close{padding:6px 6px 14px 10px} #fullscreen-note .head span.close{-webkit-box-shadow:none;box-shadow:none;text-indent:-9999px;border:none;padding:0;margin:0;-webkit-border-radius:0;border-radius:0;opacity:.4;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=40)\";filter:alpha(opacity=40);} #fullscreen-note .head span.close:hover{opacity:1;-ms-filter:none;filter:none} #fullscreen-note .content-inner{position:relative;background:#f7f5df;padding:0;position:absolute;overflow-x:hidden;overflow-y:auto;top:40px;bottom:10px;left:0;right:0;} #fullscreen-note .content-inner a{color:$bluelink} #fullscreen-note .note{background:#f7f5df;background-image:-webkit-linear-gradient(#dee2d0 1px,transparent 1px);background-image:-moz-linear-gradient(top,#dee2d0 1px,transparent 1px);background-image:-ms-linear-gradient(top,#dee2d0 1px,transparent 2px);-webkit-background-size:100% 26px;-moz-background-size:100% 26px;background-size:100% 26px;border:none;font-size:13px;line-height:26px;padding:8px 15px;min-height:94%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;} #fullscreen-note .note.selectable div,#fullscreen-note .note.selectable span{-webkit-user-select:text !important;-moz-user-select:text !important;-ms-user-select:text !important;user-select:text !important} #fullscreen-note .note .note-body,#fullscreen-note .note .note-edit{min-height:218px;word-wrap:break-word} #fullscreen-note .note textarea{-webkit-box-shadow:none;box-shadow:none} " }; });
define('views/TaskDetail/TaskDetailNoteFullscreenView',[

  'application/runtime',

  'wunderbits/WBContentFakable',
  'wunderbits/WBModalView',

  'views/TaskDetail/Controllers/TaskDetailNoteFullscreenViewController',

  'wunderbits/WBBlurHelper',

  'template!detailview/detailNoteFullscreen',

  'style!modals/noteModal'

], function (
  runtime,
  WBContentFakable, WBModalView,
  TaskDetailNoteFullscreenViewController,
  WBBlurHelper,
  noteTemplate,
  noteModalStyle,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;

  var _super = WBModalView.prototype;
  var _blur = WBBlurHelper;

  return WBModalView.extend({

    'template': noteTemplate,

    'styles': [
      noteModalStyle
    ],

    'implements': [TaskDetailNoteFullscreenViewController],

    'observs': {

      'runtime': {
        'fullscreenNote:close': '>close:self',
        'focus:changed': '>focus:changed'
      }
    },

    'emits': {

      'click .close': 'click:close',//'_onClose',
      'click .content': 'click:content',  //'_onToggleEditMode',
      'click .note-body': 'click:body', //_onToggleEditMode',
      'blur': 'click:close',//'_onBlur',
      'keydown textarea': 'keydown:textarea',//'_onDebouncedKeydown',
      'mousedown': 'mousedown', //_onMouseDown',
      'mouseup': 'mouseup'//_fixScroll'
    },

    'initialize': function (options) {

      var self = this;

      options || (options = {});

      _super.initialize.apply(self, arguments);

      self.ready = new $.Deferred();

      // subviews
      self.contentFakable = self.addSubview(new WBContentFakable());

      // lists - need this info for the title header
      self.bindTo(runtime, 'lists:ready', function (lists) {

        self.lists = lists;
        self.ready.resolve();
      });
    },

    'renderData': {
      'id': 'fullscreen-note',
      'title': undefined,
      'close': 'Close'
    },

    'formatData': function (data) {

      var self = this;
      var attributes = self.taskModel && self.taskModel.attributes;

      if (attributes) {
        data.title = _.escape(self.getListTitleFromID(attributes.list_id) + ' - ' + attributes.title);
      }

      return data;
    },

    'render': function (options) {

      var self = this;

      //unbind for re-rendering
      self.unbindAll();
      self.$el && self.$el.children().remove();

      // models
      self.taskModel = options.taskModel || {};

      // wait for lists!
      self.ready.done(function () {

        // render modal
        _super.render.call(self, self.formatData(self.renderData));

        self.$el.find('.content').append(self.template());

        // render contentFakable
        self.$el.find('.note-body').append(self.contentFakable.render({
          'context': self,
          'content': self.taskModel.attributes.note,
          'maxLength': 10000,
          'autoSave': true,
          'convertLinks': true,
          'saveOnEnter': false,
          'onShowDisplay': self.onDisplay,
          'onShowEdit': self.onEdit,
          'breaker': self.breaker,
          'scrollContainer': self.$('.content-inner')
        }).$el);

        self.$('.close').removeClass('blue');
      });

      // First render as hidden
      self.$el.addClass('hidden');

      // binds
      self.bindTo(self.contentFakable.model, 'change:content', self.onSaveChanges);
      self.bindTo(self.taskModel, 'change:note', self.onChangeContent);
      self.bindTo(self.taskModel, 'change:title', self.onChangeTitle);

      _.delay(function () {

        self.checkScrolling();
      }, 500);

      return self;
    },

    'onDestroy': function () {

      var self = this;
      var contentFakable = self.contentFakable;
      !contentFakable.destroyed && contentFakable.destroy();
    },

    'breaker': function () {

      var self = this;
      return self.taskModel.attributes.completed ? true : false;
    },

    'getDisplayUrl': function () {

      return 'tasks/' + this.taskModel.id + '/note/fullscreen';
    },

    'getEditUrl': function () {

      return 'tasks/' + this.taskModel.id + '/note/edit/fullscreen';
    },

    // ContentFakable callbacks
    'onDisplay': function () {

      var self = this;
      self.isEditing = false;
      self.changeUrl(false);
      _blur.run();
    },

    'changeUrl': function (edit) {

      var self = this;
      var options = { 'trigger': false };

      if (runtime.currentRoute() === self.getEditUrl() || runtime.currentRoute() === self.getDisplayUrl()) {
        options.replace = true;
      }

      var route = edit ? self.getEditUrl() : self.getDisplayUrl();
      runtime.trigger('route:' + route, options);
    },

    'onEdit': function () {

      var self = this;
      self.isEditing = true;
      self.changeUrl(true);
    },

    // model save, etc.
    'onSaveChanges': function () {

      var self = this;
      // only save changes if open - loop case prevention
      if (runtime.currentRoute().indexOf('/fullscreen') !== -1) {
        // already cleaned by contentFakable
        self.taskModel.save('note', self.contentFakable.model.attributes.content);
      }
    },

    'onChangeContent': function () {

      var self = this;

      if ($.trim(self.contentFakable.model.attributes.content) === $.trim(self.taskModel.attributes.note)) {
        return;
      }

      self.contentFakable.model.set('content', self.taskModel.attributes.note);
      self.checkScrolling();
    },

    'onChangeTitle': function () {

      var self = this;
      var $title = self.$el.find('.head .title');
      $title.text(self.getListTitleFromID(self.taskModel.attributes.list_id) + ' : ' + self.taskModel.attributes.title);
    },

    'getListTitleFromID': function (listId) {

      var self = this;
      return listId === 'inbox' ? runtime.language.getText('smart_list_inbox') : self.lists.get(listId).attributes.title;
    }
  });
});

define('views/TaskDetail/Controllers/TaskDetailNoteViewController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',

  'wunderbits/WBViewController'

], function (
  runtime,
  Keycodes,
  WBViewController,
  undefined
) {

  

  var _ = runtime._;

  var _super = WBViewController.prototype;

  return WBViewController.extend({

    'implements': {

      // these events reset the scroll position for the parent body el on note mouse events
      'mousedown': 'onMouseDown',

      'toggle:edit': 'debouncedOnToggleEditMode',
      'show:fullscreen': 'debouncedOnShowFullscreen',

      'force:fullscreen': 'onShowFullscreen',

      'focus': 'onFocusSelf',

      'keydown': 'handleKeys'
    },

    'handleKeys': function (e) {

      var self = this;
      var view = self.view;

      var isMainEl = e.target === view.el;

      if (!view.isEditing && e.which === Keycodes.enter) {
        self.debouncedOnToggleEditMode();
        self.stopEventFully(e);
      }
      else if (e.which === Keycodes.esc && !isMainEl) {
        runtime.trigger('route:tasks/' + view.model.id + '/note/focus');
        self.stopEventFully(e);
      }
      else if (e.which === Keycodes.tab && !isMainEl) {
        self.stopEventFully(e);
      }
    },

    'onFocusSelf': function () {

      this.view.focusSelf();
    },

    'initialize': function () {

      var self = this;

      self.debouncedOnShowFullscreen = _.debounce(self.onShowFullscreen, 250, true);

      _super.initialize.apply(self, arguments);
    },

    'onMouseDown': function (e) {

      var self = this;
      var view = self.view;

      view.cursor = view.getCaretFromMouse(e);
      view.fixScroll();
      view.triggerFocusChange();
    },

    'fixScroll': function () {

      this.view.fixScroll.apply(this.view, arguments);
    },

    'debouncedOnToggleEditMode': function () {

      this.view.debouncedOnToggleEditMode.apply(this.view, arguments);
    },

    'onShowFullscreen': function () {

      var view = this.view;
      var fullscreen = view.isEditing ? '/note/edit/fullscreen' : '/note/fullscreen';

      runtime.trigger('route:tasks/' + view.model.id + fullscreen);
    }
  });
});
define('templates/detailview/detailNote',['vendor/handlebars'], function(H) {
var name = 'detailview/detailNote';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"note-body selectable\"> <a class=\"open-fullscreen-note\"><span class=\"icon note-fullscreen\"></span></a> </div>";
  });
});
define('views/TaskDetail/TaskDetailNoteView',[

  'application/runtime',

  'wunderbits/helpers/selection',
  'models/TaskModel',
  'views/TaskDetail/TaskDetailNoteFullscreenView',

  'wunderbits/WBContentFakable',
  'wunderbits/WBViewPresenter',

  'views/TaskDetail/Controllers/TaskDetailNoteViewController',

  'template!detailview/detailNote'

], function (
  runtime,
  Selection,
  TaskModel,
  FullscreenNote, WBContentFakable, WBViewPresenter,
  TaskDetailNoteViewController,
  detailNoteTemplate,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'template': detailNoteTemplate,

    'className': 'note',

    'attributes': {

      'tabindex': 0
    },

    'implements': [TaskDetailNoteViewController],

    // reminder view handles display and editing of reminders
    'emits': {

      // these events reset the scroll position for the parent body el on note mouse events
      'mousedown': 'mousedown',

      'click': 'toggle:edit',
      'click .note-body': 'toggle:edit',
      'click .open-fullscreen-note': 'show:fullscreen',

      'ontouchstart': 'toggle:edit',
      'ontouchstart .note-body': 'toggle:edit',
      'ontouchstart .open-fullscreen-note': 'show:fullscreen',

      'keydown': 'keydown'
    },

    '_override': function () {},

    initialize: function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      // subviews
      self.contentFakable = self.addSubview(new WBContentFakable());

      //disable note on mobile
      self.isNoteDisabled = !runtime.isBrowserExtension() && runtime.env.isMicro();

      // debouncers
      self.debouncedScrollCheck = _.debounce(self.scrollCheck, 250);
      self.debouncedOnToggleEditMode = _.debounce(self.onToggleEditMode, 250, true);
      self.debouncedOnShowFullscreen = _.debounce(self.onShowFullscreen, 250, true);
    },

    render: function (options) {

      var self = this;

      self.rendered = self.deferred();

      // remove binds for rerender
      self.unbindAll();

      self.options = options || {};
      self.model = self.options.model || self.model;

      _super.render.call(self, {});

      // subviews
      self.delay(function () {

        self.$('.note-body')[0].appendChild(self.contentFakable.render({
          'context': self,
          'disableEdit': self.isNoteDisabled,
          'content': self.model.attributes.note,
          'maxLength': 10000,
          'autoSave': true,
          'convertLinks': true,
          'saveOnEnter': false,
          'onShowDisplay': self.onDisplay,
          'onShowEdit': self.onEdit,
          'breaker': self.breaker,
          'scrollContainer': $('#detail .body')
        }).el);

        self.rendered.resolve();

      }, self.options.delay);

      if (!runtime.isBrowserExtension()) {

        // binds
        self.bindTo(self.model, 'change:note', self.onChangeTitle);
        self.bindTo(self.contentFakable.model, 'change:content', self.onSaveChanges);
        self.bindTo($('#detail .body'), 'scroll', self.debouncedScrollCheck);

        // global events
        self.bindTo(runtime, 'focus:changed', self.onChangeFocus);
      }

      return self;
    },

    breaker: function () {

      var self = this;
      return self.model.attributes.completed ? true : false;
    },

    onDestroy: function () {

      var self = this;
      var contentFakable = self.contentFakable;

      !contentFakable.destroyed && contentFakable.destroy();
    },

    scrollCheck: function () {

      var self = this;

      self.contentFakable.scrollCheck();
    },

    // ContentFakable callbacks
    onDisplay: function () {

      var self = this;

      self.isEditing = false;

      runtime.trigger('route:tasks/' + self.model.id, { 'trigger': false });
      runtime.trigger('focus:set', 'browser');
    },

    onEdit: function () {

      var self = this;

      self.isEditing = true;

      runtime.trigger('route:tasks/' + self.model.id + '/note/edit', { 'trigger': false });
      self.triggerFocusChange();
    },

    onToggleEditMode: function (e) {

      var self = this;
      var targetIsSpan = false;

      if (self.model.isCompleted()) {
        self.$('.display-view').addClass('selectable');
        return;
      }

      if (e) {

        targetIsSpan = $(e.target).is('span');

        if (self.isNoteDisabled) {

          e.stopPropagation();
          e.preventDefault();

          self.isEditing = true;
          self.trigger('force:fullscreen');
          return;
        }
      }

      if (!targetIsSpan) {

        self.rendered.done(function () {

          self.contentFakable.onShowEditMode();

          if (self.cursor !== undefined) {

            Selection.setCaretToPos(self.$el.find('textarea')[0], self.cursor);
          }

          runtime.trigger('route:tasks/' + self.model.id + '/note/edit', { 'trigger': false });
          self.triggerFocusChange();
        }, self);
      }
    },

    onOpenFullscreen: function (showEditMode) {

      var self = this;

      showEditMode = showEditMode || self.isEditing;

      var view = self.addSubview(new FullscreenNote(), 'fullscreen');
      $('#modals').append(view.render({
        'taskModel': self.model
      }).el);

      if (view) {

        self.defer(function () {

          view.$el.removeClass('hidden');

          if (showEditMode) {

            view.contentFakable.onShowEditMode();

            _.delay(function () {
              view.$el.find('textarea').focus();
            }, 100);
          }

          view.checkScrolling();
        });
      }
    },

    fixScroll: function () {

      var self = this;

      var selector = 'div.detail-date';
      var position = self.$el.parent().find(selector).position();

      if (position) {
        self.scrollTop = position.top;
      }
    },

    getCaretFromMouse: function (e) {

      var self = this;
      var targetIsSpan = $(e.target).is('span');

      if (!targetIsSpan) {

        return Selection.getCaretFromMousePos(self.$el.find('textarea')[0], self.$el, e);
      }
      else {

        return undefined;
      }
    },

    // model binds
    onChangeTitle: function () {

      var self = this;

      self.contentFakable.model.set('content', self.model.attributes.note);
    },

    // save, etc.
    onSaveChanges: function () {

      var self = this;

      // only save if detail in focus - loop case prevention
      if (self._currentFocus !== 'fullscreenNote') {
        // already cleaned by contentFakable
        self.model.save('note', self.contentFakable.model.attributes.content);
        runtime.trigger('detail:checkBounds');
      }
    },

    onChangeFocus: function (focus) {

      var self = this;

      self._currentFocus = focus;
    },

    triggerFocusChange: function () {

      runtime.trigger('focus:set', 'detail');
    },

    'focusSelf': function () {

      this.$el.focus();
    }
  });
});
define('views/TaskDetail/Controllers/TaskDetailSubTaskItemViewController',[

  'application/runtime',

  'wunderbits/WBViewController'

], function (
  runtime,
  WBViewController,
  undefined
) {

  

  return WBViewController.extend({

    'implements': {
      'click:done': 'onToggleDone',
      'click:title': 'onClickToEdit',
      'click:delete': 'onDelete'
    },

    'onToggleDone': function () {

      var view = this.view;
      if (view.parent.attributes.completed) {
        return;
      }

      view.model.save('completed', !view.model.isCompleted());
    },

    'onClickToEdit': function () {
      this.view.showEditMode();
    },

    'onDelete': function () {

      var view = this.view;

      var shouldPromptBefore = runtime.settings.attributes.confirm_delete_entity === 'true';

      var action = function () {

        if (!view.destroyed) {
          view.model.destroy();
          view.destroy();
        }
      };

      if (shouldPromptBefore) {
        runtime.trigger('modal:confirm', {

          'customTitle': runtime.language.getLabel('label_are_you_sure_permanently_delete_$_subtask', view.model.escape('title')).toString(),
          'customText': runtime.language.getLabel('label_cant_undo').toString(),
          'confirmText': runtime.language.getLabel('label_delete_subtask').toString(),
          'confirm': action
        });
      }
      else {
        action();
      }
    },
  });
});
define('templates/detailview/detailSubTask',['vendor/handlebars'], function(H) {
var name = 'detailview/detailSubTask';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, self=this;

function program1(depth0,data) {
  
  
  return "subtask-checked";
  }

  buffer += "<div class=\"line-wrap\"> <span class=\"icon subtask-checkbox ";
  stack1 = helpers['if'].call(depth0, depth0.completed, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " left\"/> <a class=\"detail-delete\"><span class=\"icon detail-delete\"></span></a> <div class=\"subtask-title selectable\"></div> </div> ";
  return buffer;
  });
});
define('views/TaskDetail/TaskDetailSubTaskItemView',[

  'application/runtime',

  'wunderbits/helpers/selection',
  'wunderbits/WBValidationHelper',

  'views/TaskDetail/Controllers/TaskDetailSubTaskItemViewController',

  'wunderbits/WBContentFakable',

  'wunderbits/WBViewPresenter',

  'template!detailview/detailSubTask'

], function (
  runtime,
  Selection, WBValidationHelper,
  TaskDetailSubTaskItemViewController,
  WBContentFakable, WBViewPresenter,
  detailSubTaskTemplate,
  undefined
) {

  

  var $ = runtime.$;
  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'template': detailSubTaskTemplate,

    'tagName': 'li',

    'className': 'subtask',

    'implements': [TaskDetailSubTaskItemViewController],

    'emits': {
      'click .subtask-checkbox': 'click:done',
      'click .subtask-title': 'click:title',
      'click a.detail-delete': 'click:delete'
    },

    'initialize': function (options) {

      var self = this;
      _super.initialize.apply(self, arguments);

      options = options || {};

      // parent is the task model that contains the subtask
      self.parent = options.parent || self.parent;

      self.contentFakable = self.addSubview(new WBContentFakable({
        'lineHeight': 20,
        'fontSize': 13
      }));
    },

    'renderData': {

      'completed': undefined
    },

    'formatdata': function (data) {

      var self = this;

      data.completed = self.model.isCompleted();

      return data;
    },

    'setModelAndRender': function (options) {

      var self = this;
      options = options || {};

      self.options = options;
      self.parent = options.parent || self.parent;
      self.model = self.options.model;

      _super.render.call(self, self.formatdata(self.renderData));

      if (self.model.isCompleted()) {

        self.$el.addClass('done');
      }

      self.$el.attr('rel', self.model.id);

      // span up the title
      self.$('.subtask-title')[0].appendChild(self.contentFakable.render({
        'context': self,
        'content': self.model.attributes.title,
        'maxLength': 255,
        'autoSave': false,
        'convertLinks': true,
        'saveOnEnter': true,
        'multiLine': true,
        'showLoading': false,
        'breaker': self.breaker,
        'scrollContainer': $('#detail .body'),
        'markupDelay': self.options.delay || 0
      }).el);

      self.bindTo(self.contentFakable.model, 'change:content', self.onSaveChanges);

      self.bindTo(self.model, 'change:completed', self.onUpdateDone);
      self.bindTo(self.model, 'change:title', self.updateTitleFromSync);

      // don't allow deletion if parent is marked as done, read only
      self.bindTo(self.parent, 'change:completed', self.checkAllowDelete);
      self.checkAllowDelete();

      return self;
    },

    'breaker': function () {

      var self = this;
      var isParentCompleted = self.parent.attributes.completed;
      var isCompleted = self.model.attributes.completed ? true : false;

      return isParentCompleted || isCompleted;
    },

    'scrollCheck': function () {

      var self = this;
      self.contentFakable.scrollCheck();
    },

    'checkAllowDelete': function () {

      var self = this;
      self.$('.detail-delete').toggleClass('hidden', self.parent.attributes.completed);
    },

    'updateTitleFromSync': function () {

      var self = this;
      if (self.$('.edit-view').hasClass('hidden') && self.contentFakable.model.attributes.content !== self.model.attributes.title) {
        self.contentFakable.model.set({'content': self.model.attributes.title});
      }
    },

    'showEditMode': function (e) {

      var self = this;
      var targetIsSpan = false;
      if (self.breaker()) {
        return;
      }

      if (e) {
        targetIsSpan = $(e.target).is('span');
      }

      if (!targetIsSpan) {

        self.contentFakable.onShowEditMode();

        if (e) {
          var $textarea = self.$('textarea');
          Selection.setCaretToPos($textarea[0], $textarea.val().length);
        }
      }

      self.triggerFocusChange();
    },

    'onUpdateDone': function () {

      var self = this;
      var $checkBox = self.$('.subtask-checkbox');
      var done = self.model.isCompleted();

      if (done) {
        $checkBox.addClass('subtask-checked');
        self.$el.addClass('done');
      }
      else {
        $checkBox.removeClass('subtask-checked');
        self.$el.removeClass('done');
      }
    },

    'onSaveChanges': function () {

      var self = this;
      var newTitle = self.contentFakable.model.attributes.content;

      if (newTitle) {
        self.model.save('title', newTitle);
      }
      else {
        self.contentFakable.model.set('content', self.model.attributes.title);
      }
    },

    'triggerFocusChange': function () {

      runtime.trigger('focus:set', 'detail');
    }
  });
});
define('views/TaskDetail/Controllers/TaskDetailSubTaskAddViewController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/strings',

  'collections/TaskCollection',

  'wunderbits/WBViewController'

], function (
  runtime,
  Keycodes,
  Strings,
  TaskCollection,
  WBViewController,
  undefined
) {

  

  var _super = WBViewController.prototype;

  return WBViewController.extend({

    'implements': {

      'click:title': 'onShowEditMode',
      'click:add': 'onSaveChanges',
      'keydown:textedit': 'onTaskEditKeydown',
      'blur:textedit': 'onTaskEditBlur',
      'focus:textedit': 'onTaskEditFocus'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.subTasks = new TaskCollection('/subtasks/all');
    },

    'onShowEditMode': function () {

      var view = this.view;
      if (!view.model || view.model.isCompleted()) {
        return;
      }

      view.showEditMode();
    },

    'onSaveChanges': function () {

      var self = this;
      var view = self.view;

      var title = view.getTextInput();
      var subtasksCount = view.getRenderedSubtasksCount();
      var data;

      if (title.length > 0 && (subtasksCount < 25 || runtime.user.isPro)) {

        title = Strings.emojiTokensToUnicode(title);

        data = {
          'title': title,
          'list_id': view.model.attributes.list_id,
          'parent_id': view.model.id
        };

        if (self.subTasks) {

          var thisCollection = new TaskCollection('/tasks/' + view.model.id + '/subtasks');
          thisCollection.updatePositions();
          var positions = thisCollection.positions;
          var lastPos;

          // put the new subtask at the bottom. Since subtasks are not grouped by completed state, just add the last positions together
          lastPos = positions ? positions.normal.last + positions.completed.last : 0;
          data.position = thisCollection.models.length ? lastPos + 10 : 0;

          self.subTasks.add(data);
        }

        view.resetTextInputs();
      }
    },

    'onTaskEditKeydown': function (e) {

      var self = this;
      var view = self.view;

      // handle keys ent/ret = save, esc = cancel
      if (e.which === Keycodes.esc) {
        view.cancelChanges();
      }
      else if (e.which === Keycodes.enter) {

        // if shift was pressed, don't do anything
        if (e.shiftKey) {
          return;
        }

        e.preventDefault();
        self.onSaveChanges();
        view.showEditMode();
      }
      else if (e.which === Keycodes.tab) {
        view.fromTab = true;
        self.stopEventFully(e);
      }
    },

    'onTaskEditBlur': function () {

      var self = this;

      self.onSaveChanges();
      self.view.onHideEditMode();
    },

    'onTaskEditFocus': function () {

      var self = this;
      self.defer(function () {

        runtime.trigger('route:tasks/' + self.view.model.id + '/subtasks/edit', { 'trigger': false });
      });
    }
  });
});
define('templates/detailview/detailSubTaskAdd',['vendor/handlebars'], function(H) {
var name = 'detailview/detailSubTaskAdd';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"line-wrap\"> <span class=\"icon detail-add left\"/> <div class=\"subtask-title\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "placeholder_add_subtask", options) : helperMissing.call(depth0, "localized", "placeholder_add_subtask", options)))
    + "</div> <div class=\"subtask-edit hidden\"> </div>";
  return buffer;
  });
});
define('views/TaskDetail/TaskDetailSubTaskAddView',[

  'application/runtime',

  'views/TaskDetail/Controllers/TaskDetailSubTaskAddViewController',

  'wunderbits/WBExpandableTextareaView',
  'wunderbits/WBViewPresenter',

  'template!detailview/detailSubTaskAdd'

], function (
  runtime,
  TaskDetailSubTaskAddViewController,
  WBTextarea, WBViewPresenter,
  addSubTaskTemplate,
  undefined
) {

  

  var $ = runtime.$;

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'template': addSubTaskTemplate,

    'tagName': 'li',

    'className': 'addtask',

    'implements': [TaskDetailSubTaskAddViewController],

    'emits': {

      'click .subtask-title': 'click:title',
      'click .icon.detail-add': 'click:add',
      'keydown .subtask-edit textarea': 'keydown:textedit',
      'blur .subtask-edit textarea': 'blur:textedit',
      'focus .subtask-edit textarea': 'focus:textedit'
    },

    'initialize': function (options) {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.options = options || {};
      self.textareaView = self.addSubview(new WBTextarea(options));
    },

    'setModelAndRender': function (model) {

      var self = this;
      var json;

      self.model = model || self.model;
      json = self.model.toJSON();

      _super.render.call(self, json);

      self.$('.subtask-edit')[0].appendChild(self.textareaView.render({
        'content': '',
        'maxLength': 255,
        'placeholderKey': 'placeholder_add_subtask'
      }).el);

      return self;
    },

    'setModel': function (model) {

      var self = this;
      self.model = model;
    },

    'showEditMode': function () {

      var self = this;

      var $editor = self.$('.subtask-edit');
      var $title = self.$('.subtask-title');
      self.$el.css({'position':'relative','width':''});
      self.$el.parent().css('padding-bottom','0');

      $title.addClass('hidden');

      runtime.trigger('route:tasks/' + self.model.id + '/subtasks/edit', { 'trigger': false });
      $editor.removeClass('hidden').find('textarea').val('').focus();

      self.triggerFocusChange();
    },

    'onHideEditMode': function (fromEsc) {

      var self = this;
      var $editor = self.$('.subtask-edit');
      var $title = self.$('.subtask-title');
      var fromClick;

      $title.removeClass('hidden');
      $editor.addClass('hidden');

      if (!self.fromTab && !fromEsc) {
        fromClick = true;
      }

      if (fromEsc) {
        runtime.trigger('route:tasks/' + self.model.id + '/subtasks/focus');
      }
      else {

        self.silentRouteToTask(fromEsc, fromClick);
      }
    },

    'cancelChanges': function () {

      var self = this;

      self.$('textarea').val('');
      self.onHideEditMode(true);
    },

    'getTextInput': function () {

      var self = this;
      return $.trim(self.$('textarea').val());
    },

    'resetTextInputs': function () {

      var self = this;

      self.$('textarea').val('');
      self.$('pre').text('""');
    },

    'getRenderedSubtasksCount': function () {

      var self = this;
      return self.$el.parent('ul').find('li').not('.addtask').size();
    },

    'silentRouteToTask': function (fromEsc, fromClick) {

      var self = this;
      var ownRoute = 'tasks/' + self.model.id;
      var isOwnRouteActive = runtime.currentRoute().indexOf(ownRoute) >= 0;

      if (isOwnRouteActive) {

        runtime.trigger('route:' + ownRoute, { 'trigger': false });
      }
      else if (fromEsc || fromClick) {
        runtime.trigger('route:' + ownRoute);
      }

      self.fromTab = false;
    },

    'triggerFocusChange': function () {

      runtime.trigger('focus:set', 'detail');
    }
  });
});
define('templates/subtaskUpgradeHint',['vendor/handlebars'], function(H) {
var name = 'subtaskUpgradeHint';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<div class=\"line-wrap\"> <span class=\"icon detail-add left\"/> <div class=\"subtask-title\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_label_need_more_subtasks", options) : helperMissing.call(depth0, "localized", "benefit_label_need_more_subtasks", options)))
    + " <a data-path=\"preferences/account/pro\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_learn_more", options) : helperMissing.call(depth0, "localized", "label_learn_more", options)))
    + "</a> </div> </div>";
  return buffer;
  });
});
define('views/TaskDetail/UpgradeHintView',[

  'application/runtime',
  'wunderbits/WBView',

  'template!subtaskUpgradeHint'

], function (

  runtime,
  WBView,
  subtaskUpgradeHint,
  undefined

) {

  

  return WBView.extend({

    'template': subtaskUpgradeHint,

    'tagName': 'li',

    'className': 'upgrade-hint',

    'events': {
      'click': 'onClick'
    },

    'onClick': function () {

      runtime.trigger('analytics:ProAccounts:clickedSubtaskUpgradeHint');
    }
  });
});
define('views/TaskDetail/Controllers/TaskDetailSubTaskCollectionViewController',[

  'application/runtime',

  'helpers/SortBehaviorMixin',
  'wunderbits/helpers/keycodes',

  'wunderbits/WBViewController'

], function (
  runtime,
  Sort, Keycodes,
  WBViewController,
  undefined
) {

  

  return WBViewController.extend({

    'implements': {

      'draginit': 'onStartDrag',
      'dragover': 'onDragOver',
      'dropon': 'onMoveTask',
      'dragdown': 'onDragDownTask',
      'dropmove': 'onDropMove',
      'dragend': 'onEndDrag',

      'focus': 'focusSelf',
      'keydown': 'keydown'
    },

    'keydown': function (e) {

      var self = this;

      if (e.which === Keycodes.enter) {
        self.view.addSubTaskView.showEditMode();
        self.stopEventFully(e);
      }
    },

    'focusSelf': function () {

      this.view.focusSelf();
    },

    'onStartDrag': function (ev, drag) {

      this.view.startDrag(ev, drag);
    },

    'onDragOver': function (ev, drag, drop) {

      var self = this;
      var view = self.view;

      view.dragObj = drag;
      view.dropObj = drop;

      // if we are in the content fakable, cancel the drag
      if (ev.target.tagName === 'TEXTAREA') {
        drag.cancel();
        return;
      }

      if (drop.element[0] === drag.element[0]) {
        return;
      }

      if (drop.element.hasClass('subtask')) {
        Sort.lastTarget && Sort.lastTarget.removeClass('dragOver');
        drop.element.addClass('dragOver');
        Sort.lastTarget = drop.element;
        Sort.dragOver(ev, drag, drop);
      }
    },

    'onMoveTask': function (ev, drop, drag) {

      var self = this;
      var view = self.view;

      if (!drag || !drop || drop.element[0] === drag.element[0]) {
        drag.cancel();
        return;
      }

      // this is the postion of the dropzone
      var index = view.getIndex();
      Sort.moveTask(ev, drop, drag, index);

      // update model positions
      view.calculateDraggedModelPositions();
    },

    'onDragDownTask': function () {

      // noop method to prevent jqpp from running this insane anti-selection method that breaks contentfakable
    },

    'onDropMove': function (ev, drop, drag) {

      Sort.dragMove(ev, drop, drag);
    },


    'onEndDrag': function (ev, drag) {

      var self = this;
      var view = self.view;

      self.simulateDrop(ev);
      Sort.endDrag(ev, drag);

      view.makeElementDeleteVisible(drag.element);
      view.makeTitlesSelectable();
      
      view.drag = null;
    },

    'simulateDrop': function (ev) {

      var self = this;
      var view = self.view;
      if (!view.dropObj || !view.dragObj) {
        return;
      }

      self.onMoveTask(ev, view.dropObj, view.dragObj);
      
      view.dragObj = null;
      view.dropObj = null;
    }

  });
});
define('views/TaskDetail/TaskDetailSubTaskCollectionView',[

  'application/runtime',

  'models/TaskModel',
  'collections/TaskCollection',

  'views/TaskDetail/TaskDetailSubTaskItemView',
  'views/TaskDetail/TaskDetailSubTaskAddView',
  'views/TaskDetail/UpgradeHintView',

  'helpers/SortBehaviorMixin',

  'views/TaskDetail/Controllers/TaskDetailSubTaskCollectionViewController',

  'wunderbits/WBViewPresenter'

], function (

  runtime,
  TaskModel, TaskCollection,
  SubTaskView, SubTaskAddView, UpgradeHintView,
  Sort,
  TaskDetailSubtaskCollectionViewController,
  WBViewPresenter,
  undefined

) {

  

  var $ = runtime.$;
  var _ = runtime._;

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'className': 'subtasks',

    'tagName': 'ul',

    'attributes': {
      'tabindex': 0
    },

    'implements': [TaskDetailSubtaskCollectionViewController],

    'emits': {
      'draginit .subtask': 'draginit',
      'dragover .subtask': 'dragover',
      'dropon .subtask': 'dropon',
      'dragdown .subtask': 'dragdown',
      'dropmove .subtask': 'dropmove',
      'dragend .subtask': 'dragend',

      'keydown': 'keydown'
    },

    'initialize': function (options) {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.options = options || {};
      self.options.lineHeight = 20;

      // init add subviews
      self.addSubTaskView = self.addSubview(new SubTaskAddView(self.options));
      self.upgradeHintView = self.addSubview(new UpgradeHintView());

      // debouncers
      self.debouncedScrollCheck = _.debounce(self.scrollCheck, 250, true);
      self.bindTo(runtime, 'window:resize', self.delegateEvents);
    },

    'render': function (options) {

      var self = this;

      self.options = options || {};

      self.model && self.unbindFromTarget(self.model);
      self.model = self.options.model;


      self.collection && self.cleanCollectionBinds();
      self.collection = new TaskCollection('/tasks/' + self.model.id + '/subtasks');

      _super.render.call(self);

      self.el.appendChild(self.addSubTaskView.setModelAndRender(self.model).el);
      self.el.appendChild(self.upgradeHintView.render().hide().el);

      self.upgradeHintView.$el.attr('aria-hidden', true);

      // init and render subtasks
      if (self.options.delay) {
        _.delay(function () {

          self.deferredRender(true);
          delete self.options.delay;
        }, self.options.delay);
      }
      else {

        self.deferredRender();
      }

      // set up collection binds
      self.addCollectionBinds();

      self.bindTo(self.model, 'change:completed', self.checkEnableAdding);

      self.bindTo($('#detail .body'), 'scroll', self.debouncedScrollCheck);

      self.checkEnableAdding();

      return self;
    },

    'deferredRender': function (animate) {

      var self = this;
      var frag = document.createDocumentFragment();
      var subEl;

      self.cleanSubTaskViews(); // remove old subviews
      self.collection.sort();

      _.each(self.collection.models, function (taskModel) {

        // initialize and rendor each subview
        subEl = self.addSubview(new SubTaskView(self.options), taskModel.id).setModelAndRender({

          'model': taskModel,
          'parent': self.model
        }).el;

        // push to frag
        frag.appendChild(subEl);
      });

      if (!animate && frag.childNodes.length) {

        self.$el.prepend(frag);
      }
      else if (frag.childNodes.length){

        self.$el.hide().prepend(frag).fadeIn();
      }

      self.defer(self.checkEnableAdding);
    },

    'markAllSubTasksAsDone': function () {

      var self = this;

      var clone = _.clone(self.collection.models);
      _.each(clone, function (taskModel) {
        taskModel.save('completed', true);
      });
    },

    'startDrag': function (ev, drag) {

      var self = this;
      var moveFree = false;
      var subtaskWidth = self.$('.subtask').outerWidth();
      var isSingleSubtask = self.$('li').length <= 2;

      self.drag = drag;

      if (self.$el.parents('#detail').find('.detail-checkbox').is('.detail-checked')) {

        drag.cancel();
        return;
      }

      // if we are in the content fakable, cancel the drag
      if (ev.target.tagName === 'TEXTAREA' || isSingleSubtask) {

        drag.cancel();
        return;
      }

      // subtask specific checks & settings
      self.$el.height(drag.element.parent().height()).addClass('buffer');
      drag.element.find('.detail-delete').addClass('hidden');
      self.$('.subtask-title').removeClass('selectable');

      self.checkEnableAdding();

      drag.element.css({
        'width': subtaskWidth + 'px',
        'background':'#fff'
      });

      // event, drag object, free move boolean, and the width
      Sort.dragStart(ev, drag, moveFree, subtaskWidth);

      // had to set this below because the border was throwing the positioning
      drag.element.css({
        'border-top':'1px solid #D0DCE5'
      });
    },

    'getIndex': function () {

      var self = this;
      return self.$el.find('.dragOver').index();
    },

    'makeElementDeleteVisible': function (element) {

      element && element.find('.detail-delete').removeClass('hidden');
    },

    'makeTitlesSelectable': function () {

      var self = this;
      self.$('.subtask-title').addClass('selectable');
    },

    // update model position attributes to reflect their position in the DOM
    'calculateDraggedModelPositions': function () {

      var self = this;
      var $droppedElements = self.$el.find('.just-dropped');
      var numElements = $droppedElements.size();
      var beforeId, afterId, beforePosition, afterPosition, increment, lastPosition;

      beforeId = self.$el.find('li[rel="' + $($droppedElements[0]).attr('rel') + '"]').prev().attr('rel');
      afterId = self.$el.find('li[rel="' + $($droppedElements[numElements - 1]).attr('rel') + '"]').next().attr('rel');

      beforePosition = beforeId && self.collection.get(beforeId).attributes.position;
      afterPosition = afterId && self.collection.get(afterId).attributes.position;

      // calculate start position and increment
      if (!beforeId && afterId) {

        beforePosition = afterPosition - 1;
        increment = (afterPosition - beforePosition) / (numElements + 1);
      }
      else if (!afterId && beforeId) {

        increment = 1;
      }
      else if (afterId && beforeId) {

        increment = (afterPosition - beforePosition) / (numElements + 1);
      }

      lastPosition = beforePosition;

      // save new positions on the models
      _.each($droppedElements, function (el) {

        lastPosition += increment;
        var model = self.collection.get($(el).attr('rel'));
        model.save({'position': lastPosition});
      });

      // remove helper classes
      $droppedElements.removeClass('just-dropped');
    },

    // bindings
    'addCollectionBinds': function () {

      var self = this;
      var collection = self.collection;

      self.bindTo(collection, 'change:position', self.onUpdatePosition);
      self.bindTo(collection, 'add', self.onAddSubTask);
      self.bindTo(collection, 'add remove', self.checkEnableAdding);
      self.bindTo(collection, 'add remove', self.triggerCheckBounds);
    },

    'cleanCollectionBinds': function () {

      var self = this;
      var collection = self.collection;

      self.unbindFromTarget(collection);
    },

    'triggerCheckBounds': function () {

      runtime.trigger('detail:checkBounds');
    },

    'cleanSubTaskViews': function () {

      var self = this;

      _.each(self.subviews, function (subview) {

        if (subview.cid != self.addSubTaskView.cid && subview.cid !== self.upgradeHintView.cid) {

          self.destroySubview(subview);
        }
      });
    },

    'scrollCheck': function () {

      var self = this;

      _.each(self.subviews, function (subview) {

        if (typeof subview.scrollCheck === 'function') {

          subview.scrollCheck();
        }
      });
    },

    'onAddSubTask': function (taskModel) {

      var self = this;

      self.destroySubview(taskModel.id);

      self.$el.find('.addtask').before(self.addSubview(new SubTaskView(self.options), taskModel.id).setModelAndRender({
        'model': taskModel,
        'parent': self.model
      }).el);

      self.onUpdatePosition.apply(self, arguments);
    },

    'onUpdatePosition': function () {

      var self = this;

      var options = arguments[2] || {};
      if (!options.fromSync) {

        return;
      }

      self.collection.sort({'force': true});

      var $subtasks = self.$('.subtask');
      var wrongModels = [];

      _.each(self.collection.models, function (model, idx) {

        var $subtask = $($subtasks[idx]);

        if ($subtask.attr('rel') !== model.id) {

          wrongModels.push(model);
          self.destroySubview(model.id);
        }
      });

      var correctModels = _.difference(self.collection.models, wrongModels);

      wrongModels.length && self.drag && self.drag.cancel();

      _.each(wrongModels, function (wrongModel) {

        correctModels.sort(function (a, b) {

          var aPos = a.attributes.position;
          var bPos = b.attributes.position;

          return aPos > bPos ? 1 : aPos < bPos ? -1 : 0;
        });

        var beforeModel = _.find(correctModels.reverse(), function (model) {

          return model.attributes.position < wrongModel.attributes.position;
        });

        var afterModel = _.find(correctModels.reverse(), function (model) {

          return model.attributes.position > wrongModel.attributes.position;
        });

        // place it
        if ((beforeModel && !afterModel) || (beforeModel && afterModel)) {

          var afterView = self.addSubview(new SubTaskView(self.options), wrongModel.id);
          afterView.setModelAndRender({

            'model': wrongModel,
            'parent': self.model
          });

          self.$('.subtask[rel="' + beforeModel.id + '"]').after(afterView.el);
        }
        else if (!beforeModel && afterModel) {

          var beforeView = self.addSubview(new SubTaskView(self.options), wrongModel.id);
          beforeView.setModelAndRender({

            'model': wrongModel,
            'parent': self.model
          });

          self.$('.subtask[rel="' + afterModel.id + '"]').before(beforeView.el);
        }
        else{

          self.onAddSubTask(wrongModel);
        }

        correctModels.push(wrongModel);
        $subtasks = self.$('.subtask');
      });
    },

    'checkCurrentRoute': function () {

      var route = runtime.currentRoute();

      if (route.indexOf('/subtasks/edit') > 0) {
        runtime.trigger('route:' + route.replace('/subtasks/edit', ''));
      }
    },

    'checkEnableAdding': function () {

      var self = this;

      var limit = 25;
      var subtasksCount = self.collection.length;
      var showSubtasks = false;
      var showUpgradeHint = false;
      var isParentTaskCompleted = self.model.isCompleted();

      if (isParentTaskCompleted) {

        // if parent task is completed, but there are no subtasks
        // we still need to show something, so show the add input
        if (!subtasksCount) {
          showSubtasks = true;
        }
      }
      else if (runtime.user.isPro() || subtasksCount < limit) {

        showSubtasks = true;
      }
      else {

        showUpgradeHint = true;
      }

      if (showUpgradeHint) {
        runtime.trigger('analytics:ProAccounts:startProFunnel', 'subtaskUpgradeHint');
      }

      self.$el.toggleClass('buffer', showSubtasks);
      self.addSubTaskView[showSubtasks ? 'show' : 'hide']();

      self.upgradeHintView[showUpgradeHint ? 'show' : 'hide']();

      !showSubtasks && self.defer(self.checkCurrentRoute);
    },

    'focusSelf': function () {

      this.$el.focus();
    }
  });
});
define('views/TaskDetail/Controllers/TaskDetailTitleController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/strings',

  'wunderbits/WBViewController'

], function (
  runtime,
  Keycodes, Strings,
  WBViewController,
  undefined
) {

  

  var $ = runtime.$;
  var global = runtime.global;

  return WBViewController.extend({

    'implements': {

      'click:title': 'titleClicked',

      'keydown:title': 'titleKeyDown',

      'keydown:textarea': 'editTitleKeyDown',
      'keyup:textarea': 'editTitleTextChange',

      'blur:textarea': 'editTitleBlur',

      'focus:detail': 'focusDetail',

      'silentRoute:edit': 'silentRouteToTitleEdit',

      'focus': 'focusTitle'
    },

    'focusTitle': function () {

      this.view.trigger('title:focus');
    },

    'titleKeyDown': function (e) {

      var self = this;
      if (e.which === Keycodes.enter) {
        self.view.trigger('title:toggle:edit');
        self.stopEventFully(e);
      }
    },

    'titleClicked': function (e) {

      var self = this;
      if (self.view.model.isCompleted()) {
        return;
      }

      if (!e || $(e.target)[0] === self.view.$el[0]) {
        if (!self.editWasBlurred) {
          self.view.trigger('title:toggle:edit');
        }
        else {
          self.editWasBlurred = false;
        }
      }
      else {
        self.view.trigger('title:show:edit');
        self.silentRouteToTitleEdit();
        runtime.trigger('analytics:detailView:click:title');
      }
    },

    'editTitleKeyDown': function (e) {

      // on key down in title edit input
      var self = this;
      // handle keys ent/ret = save, esc = cancel
      if (e.which === Keycodes.enter) {
        self.editTitleBlur();
        self.stopEventFully(e);
      }
      else if (e.which === Keycodes.esc) {
        self.view.trigger('title:toggle:edit', false);
        self.view.trySetFocusRoute();
        self.stopEventFully(e);
      }
      else if (e.which === Keycodes.backspace || e.which === Keycodes.del) {
        self.editTitleTextChange();
      }
      else if (e.metaKey && e.which === 86) {
        self.view.trigger('title:render', true);
        self.defer(self.editTitleTextChange);
      }
      else if (e.which === Keycodes.tab) {
        // save or cancel, there is no tab
        self.stopEventFully(e);
      }
    },

    'editTitleTextChange': function () {

      var self = this;
      self.view.trigger('update:size');
    },

    'editTitleBlur': function () {

      var self = this;
      var timeItOut;

      // Blur and click events conflicting because they occur at the same time
      self.editWasBlurred = true;
      timeItOut = global.setTimeout(function () {

        // A click is instananeaus with the blur, so if there was no click to reset track blurred state, time it out back to false
        self.editWasBlurred = false;
      }, 100);

      self.saveTitleChanges();
      self.editTitleTextChange();
      self.view.trySetFocusRoute();
    },

    'saveTitleChanges': function () {

      var self = this;
      var title = Strings.trim(self.view.$('textarea').val());

      var model = self.view.model;
      if (title && title !== model.attributes.title) {
        model.save('title', title);
      }
      else if (title.length === 0) {
        self.view.trigger('title:contentFakable:revert');
      }
    },

    'silentRouteToTitleEdit': function () {

      var self = this;
      self.focusDetail();
      runtime.trigger('route:tasks/' + self.view.model.id + '/title/edit', {'trigger': false });
    },

    'focusDetail': function () {

      runtime.trigger('focus:set', 'detail');
    }
  });
});
define('templates/detailview/detailTitle',['vendor/handlebars'], function(H) {
var name = 'detailview/detailTitle';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<span class=\"title-text\">";
  if (stack1 = helpers.title) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.title; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</span>";
  return buffer;
  });
});
define('views/TaskDetail/TaskDetailTitleView',[

  'application/runtime',

  'helpers/Animator',
  'wunderbits/helpers/selection',

  'views/TaskDetail/Controllers/TaskDetailTitleController',

  'wunderbits/WBContentFakable',
  './SectionView',

  'template!detailview/detailTitle'

], function (
  runtime,
  Animator, Selection,
  TaskDetailTitleController,
  WBContentFakable, SectionView,
  template,
  undefined
) {

  

  var $ = runtime.$;

  var _super = SectionView.prototype;

  return SectionView.extend({

    'sectionName': 'title',

    'className': 'title',

    'attributes': {
      'tabindex': 0
    },

    'template': template,

    'implements': [
      TaskDetailTitleController
    ],

    'observes': {

      'events': {

        'update:size': 'checkSize',
        'title:contentFakable:revert': 'revertContentFakable',
        'title:toggle:edit': 'toggleEditTitle',
        'title:render': 'renderTitle',
        'title:show:edit': 'forceEditMode',
        'title:focus': 'focusTitle'
      }
    },

    'emits': {

      'click': 'click:title',
      'keydown': 'keydown:title',
      'keydown textarea': 'keydown:textarea',
      'keyup textarea': 'keyup:textarea',
      'blur textarea': 'blur:textarea'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.contentFakable = self.addSubview(new WBContentFakable({
        'lineHeight': 24,
        'fontSize': 16
      }));
    },

    'render': function (options) {

      var self = this;

      options = options || {};
      options.model && (self.model = options.model);

      _super.render.call(self);

      self.setAnimationDefaults();
      self.renderContentFakable();
      self.hasRendered = true;

      return self;
    },

    'renderWithModel': function (model) {

      var self = this;
      var def = self.deferred();

      if (model === self.model) {
        return def.resolve().promise();
      }

      if (self.model) {
        self.unbindFromTarget(self.model);
      }
      self.model = model || self.model;

      // model bindings
      self.bindTo(self.model, 'change:title', self.changeTitle);

      // only call render() on initial load !
      if (!self.hasRendered) {
        self.render();
        self.adjustTitleContainerHeight();
        self.renderContentFakableWithModel();
        def.resolve();
      }
      else {
        self.defer(function () {

          self.renderTitle().done(function () {

            self.renderContentFakableWithModel();
            def.resolve();
          });
        });
      }

      return def.promise();
    },

    'renderTitle': function (wasPreviouslyInEditMode) {

      var self = this;
      self.titleDeferred = self.deferred();
      self.adjustTitleContainerHeight(wasPreviouslyInEditMode);

      // todo get a localized key for this, what should it say to the user?
      self.$el.attr('aria-label', 'Title: ' + self.model.attributes.title);

      // this bad boy is chainable
      return self.titleDeferred.promise();
    },

    'renderContentFakable': function () {

      var self = this;

      var $title = self.$('.title-text');
      $title.html(self.contentFakable.render({
        'context': self,
        'content': self.model.attributes.title,
        'maxLength': 255,
        'autoSave': false,
        'convertLinks': false,
        'saveOnEnter': true,
        'breaker': self.model.isCompleted.bind(self.model)
      }).el);
    },

    'renderContentFakableWithModel': function () {

      var self = this;
      self.contentFakable._options.breaker = self.model.isCompleted.bind(self.model);
      self.contentFakable.model.set('content', self.model.attributes.title);
    },

    'setAnimationDefaults': function () {

      var self = this;

      var $detailView = $('#detail');
      var $titleContainer = self.$el;
      var $titleClone = $titleContainer.clone(false).addClass('clone');
      var $bodyContainer = $detailView.find('.body');
      var $bodyClone = $bodyContainer.clone(false).addClass('clone');

      $titleClone.css('visibility', 'hidden');
      $titleClone.find('.title-text').removeClass('hidden').text('');
      $detailView.find('.inner').append($titleClone, $bodyClone);

      // need to grab the elements again from the DOM, since when we come
      // from a link to a task to show the detail view form the first time,
      // these elements will not be in the dom already.
      // TODO: figure out why detail view is not in DOM already
      $bodyClone = $detailView.find('.body.clone');
      $titleClone = $detailView.find('.title.clone');

      self.defaultTitleContainerHeight = Number($titleClone.css('height').replace('px',''));
      self.defaultBodyContainerTop = Number($bodyClone.css('top').replace('px',''));

      $titleClone.remove();
      $bodyClone.remove();
    },

    'adjustTitleContainerHeight': function (wasPreviouslyInEditMode) {

      // checks own height against last title's height and animates
      // the title area accordingly
      var self = this;
      var title = self.model.attributes.title;
      var $titleContainer = self.$el;
      var $oldClone = $titleContainer.clone();
      var $newClone = $titleContainer.clone();
      var $title = $titleContainer.find('.title-text .display-view');
      var oldTitle = $title.text();
      var newCloneHeight, oldCloneHeight, opacityDuration, resizeDuration;

      $newClone.css('visibility', 'hidden');
      $newClone.find('.title-text').removeClass('hidden');
      $newClone.find('.display-view span').text(title);

      if (wasPreviouslyInEditMode) {
        $oldClone.find('.title-text').addClass('hidden');
      }
      else {
        $oldClone.find('.title-text').removeClass('hidden');
        $oldClone.find('.display-view span').text(oldTitle);
      }
      $oldClone.css('visibility', 'hidden');

      self.$el.after($oldClone, $newClone);

      oldCloneHeight = $oldClone.height();
      newCloneHeight = $newClone.height();

      $newClone.remove();
      $oldClone.remove();

      if (self.state.attributes.wasOpenBeforeRender && runtime.env.isAnimationEnabled()) {
        opacityDuration  = 100;
        resizeDuration = 100;
      }
      else {
        opacityDuration  = 0;
        resizeDuration = 0;
      }

      if (newCloneHeight !== oldCloneHeight) {

        self.contentFakable.$el.find('.display-view span').animate({
          'opacity':'0'
        }, {
          'duration': opacityDuration,
          'queue': false,
          'complete': function () {

            // animate the body top to match the title
            self.trigger('title:animating', newCloneHeight, resizeDuration);

            newCloneHeight = newCloneHeight + 'px';
            // animate the title container to match the new height
            $titleContainer.animate({
              'height': newCloneHeight
            }, {
              'duration': resizeDuration,
              'queue': false,
              'complete': function () {

                $titleContainer.css('height','auto');
                self.titleDeferred.resolve();
                self.contentFakable.$el.find('.display-view').animate({'opacity':'1'});
              }
            });
          }
        });
      }
      else {

        self.titleDeferred.resolve();
      }
    },

    'checkSize': function () {

      var self = this;
      var newHeight = self.$el.height();

      if (newHeight !== self.currentTitleEditHeight) {

        self.trigger('title:resized', newHeight);
        self.currentTitleEditHeight = newHeight;
      }
    },

    'revertContentFakable': function () {

      var self = this;
      self.contentFakable.render({
        'context': self,
        'content': self.model.attributes.title,
        'maxLength': 255
      });
    },

    'toggleEditTitle': function (makeVisible) {

      // toggle edit mode for task name/title
      var self = this;

      var $titleContainer = self.$el;
      var $editor = $titleContainer.find('.expandingArea');
      var $title = $titleContainer.find('.title-text');
      var isEditing = self.isEditingTitle();
      var transitionBinding;

      if (self.model.isCompleted()) {
        return;
      }

      if ((!isEditing || makeVisible === true) && makeVisible !== false) {

        var openEditMode = function () {

          self.contentFakable.onShowEditMode();
          $editor.removeClass('hidden').find('textarea').select();
          Selection.setSelectionRange($editor.find('textarea')[0], 0, 255);
          self.trigger('silentRoute:edit');
        };

        // if it is animating, bind for the animation to complete to show
        // edit mode, otherwise show it immediately
        if (Animator.isAnimatingOrClone(self.$el[0])) {
          transitionBinding = self.bindOnceTo(self.$el, runtime.env.getTransitionEndEvent(), function () {
            openEditMode();
          });
        }
        else {
          openEditMode();
        }
      }
      else {
        transitionBinding && self.unbindFrom(transitionBinding);
        $editor.find('textarea').val('');
        $title.removeClass('hidden');
      }

      self.checkSize();
    },

    'forceEditMode': function () {

      var self = this;

      self.contentFakable.onShowEditMode();
      self.$('.expandingArea').removeClass('hidden');
    },

    'changeTitle': function () {

      var self = this;

      if (!self.isEditingTitle() && self.contentFakable.model.attributes.content !== self.model.attributes.title) {
        self.contentFakable.model.set({'content': self.model.attributes.title});
        self.checkSize();
      }
    },

    'focusTitle': function () {

      this.$el.focus();
    },

    'isEditingTitle': function () {

      return !this.$('.edit-view').hasClass('hidden');
    }
  });
});
define('templates/detailview/file',['vendor/handlebars'], function(H) {
var name = 'detailview/file';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;


  buffer += "<div class=\"file\"> <div class=\"icon-file left\"> <img class=\"preview\" /> <span class=\"extension-name\">";
  if (stack1 = helpers.extension) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.extension; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</span> </div> <div class=\"info\"> <a class=\"filename\" title=\"";
  if (stack1 = helpers.fileName) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.fileName; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\">";
  if (stack1 = helpers.fileName) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.fileName; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</a> <div class=\"icon-file alert\"/> <div class=\"progress\"> <div class=\"bar\"/> </div> <div class=\"icon-file cancel-action\"></div> <div class=\"meta\" title=\"";
  if (stack1 = helpers.title) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.title; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\"> <span class=\"creator left\"></span> <span class=\"ago\">";
  if (stack1 = helpers.ago) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.ago; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</span> <span class=\"waiting\"> &middot; ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "upload_file_not_synced_yet", options) : helperMissing.call(depth0, "localized", "upload_file_not_synced_yet", options)))
    + "</span> </div> </div> <div class=\"delete\"> <div class=\"icon-file delete-action\"></div> </div> </div>";
  return buffer;
  });
});
define('styles/detailview/_file',[],function() { return {'name': 'detailview/_file', 'styles': ".failed .file .info .progress{width:184px;margin-left:22px} .failed .file .info .icon-file.alert{display:block} .hasPreview .file .preview{display:block} .file .preview{display:none} .files-list li{height:60px;overflow:hidden} .files-list li.image.hasPreview{height:152px;overflow:hidden} .file{position:relative;z-index:0;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;border:1px solid #bdbdbd;background:#fafafa;-webkit-box-shadow:0 2px 3px rgba(0,0,0,0.1);box-shadow:0 2px 3px rgba(0,0,0,0.1);-webkit-transition:all 300ms ease;-moz-transition:all 300ms ease;-o-transition:all 300ms ease;-ms-transition:all 300ms ease;transition:all 300ms ease;height:56px;} .file:hover .delete{visibility:visible} .file:first-child{z-index:3} .file:nth-child(2){z-index:2} .file:nth-child(3){z-index:1} .file .icon-file{float:left;cursor:pointer;} .file .icon-file.alert{display:none} .file .icon-file.document-thumb .extension-name{display:block} .file .icon-file .extension-name{display:block;text-align:center;display:none;text-transform:uppercase;font-size:11px;font-family:Helvetica;font-weight:bold;margin:32px 7px 0 7px;color:#bdbcbb;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis} .file .delete{visibility:hidden;-webkit-box-shadow:inset -70px 0 30px -20px #fff;box-shadow:inset -70px 0 30px -20px #fff;position:absolute;top:0;bottom:0;right:0;width:64px} .file .delete-action{position:absolute;right:9px;top:20px;z-index:1} .file .info{padding:7px 10px 0 60px;} .file .info .progress{display:none;height:6px;width:206px;-webkit-border-radius:8px;border-radius:8px;border:1px solid #9bb8d1;margin-top:9px;} .file .info .progress .bar{-webkit-transition:1ms width ease-in;-moz-transition:1ms width ease-in;-o-transition:1ms width ease-in;-ms-transition:1ms width ease-in;transition:1ms width ease-in;background:#ccdae6;height:100%;width:0%;-webkit-border-radius:1px;border-radius:1px} .file .info .cancel-action{display:none;position:absolute;top:28px;right:12px} .file .info .filename{font-size:13px;font-weight:bold;display:block;color:#423e3e;margin-bottom:5px;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis} .file .info .meta{color:#a3a3a2;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis;} .file .info .meta .avatar{margin-right:8px} .file .info .meta .ago,.file .info .meta .waiting{display:inline;font-size:11px;max-width:255px} .file .info .meta .waiting{font-weight:bold;display:none} .file .info .meta .file-size{font-size:10px} li.image .file{height:56px;} li.image .file img{height:0} li.image.hasPreview.small-preview:not(.uploading){height:60px;} li.image.hasPreview.small-preview:not(.uploading) .preview{position:absolute;left:9px;top:9px;width:36px !important;height:36px !important} li.image.hasPreview.normal-preview:not(.uploading) .file{overflow:hidden;height:148px;padding:0;} li.image.hasPreview.normal-preview:not(.uploading) .file:hover:after{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(0,0,0,0)), color-stop(1, rgba(0,0,0,0.5)));background-image:-webkit-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.5) 100%);background-image:-moz-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.5) 100%);background-image:-o-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.5) 100%);background-image:-ms-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.5) 100%);background-image:linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.5) 100%)} li.image.hasPreview.normal-preview:not(.uploading) .file:hover .meta,li.image.hasPreview.normal-preview:not(.uploading) .file:hover .filename{opacity:1;-ms-filter:none;filter:none} li.image.hasPreview.normal-preview:not(.uploading) .file:after{content:'';position:absolute;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(0,0,0,0)), color-stop(1, rgba(0,0,0,0)));background-image:-webkit-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0) 100%);background-image:-moz-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0) 100%);background-image:-o-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0) 100%);background-image:-ms-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0) 100%);background-image:linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0) 100%);-webkit-box-shadow:inset 0 0 0 4px #fff;box-shadow:inset 0 0 0 4px #fff;bottom:0;left:0;right:0;height:100%;z-index:0} li.image.hasPreview.normal-preview:not(.uploading) .file .delete{-webkit-box-shadow:none;box-shadow:none} li.image.hasPreview.normal-preview:not(.uploading) .file .delete-action{top:11px;right:11px} li.image.hasPreview.normal-preview:not(.uploading) .file .meta{margin:0;} li.image.hasPreview.normal-preview:not(.uploading) .file .meta .avatar:before{border-color:rgba(255,255,255,0.4);-webkit-box-shadow:none;box-shadow:none} li.image.hasPreview.normal-preview:not(.uploading) .file .filename,li.image.hasPreview.normal-preview:not(.uploading) .file .meta{visibility:visible;opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);position:absolute;color:#fff;z-index:1;-webkit-transition:opacity 150ms ease;-moz-transition:opacity 150ms ease;-o-transition:opacity 150ms ease;-ms-transition:opacity 150ms ease;transition:opacity 150ms ease;} li.image.hasPreview.normal-preview:not(.uploading) .file .filename .ago,li.image.hasPreview.normal-preview:not(.uploading) .file .meta .ago{color:rgba(255,255,255,0.7)} li.image.hasPreview.normal-preview:not(.uploading) .file .filename{bottom:30px;left:13px;right:12px} li.image.hasPreview.normal-preview:not(.uploading) .file .meta{bottom:12px;left:12px} li.image.hasPreview.normal-preview:not(.uploading) .file .icon-file.image-thumb{background-image:none !important} li.image.hasPreview.normal-preview:not(.uploading) .file .icon-file img{position:absolute;bottom:0;-webkit-transition:all 300ms ease;-moz-transition:all 300ms ease;-o-transition:all 300ms ease;-ms-transition:all 300ms ease;transition:all 300ms ease;top:0;height:auto;width:100%;min-height:140px} li.waiting .info .meta .waiting{display:inline} li.enqueued{display:none} .files-list li.uploading{height:60px;} .files-list li.uploading .file{height:56px;} .files-list li.uploading .file .icon-file img{height:0;min-height:auto} .files-list li.uploading .file .info .progress,.files-list li.uploading .file .info .cancel-action{display:block} .files-list li.uploading .file .meta,.files-list li.uploading .file .delete{display:none} html[dir=rtl] .file .info{padding-left:10px;padding-right:60px;} html[dir=rtl] .file .info .meta .avatar{margin-left:8px} html[dir=rtl] .file .delete{left:0;right:initial;-webkit-box-shadow:inset 70px 0 30px -20px #fff;box-shadow:inset 70px 0 30px -20px #fff} html[dir=rtl] .file .delete-action{left:9px;right:initial} " }; });
define('views/TaskDetail/TaskDetailFileView',[

  'application/runtime',

  'collections/AssignableCollection',

  'vendor/moment',

  'helpers/BlobHelper',
  'wunderbits/helpers/date',

  'wunderbits/WBView',
  'views/AvatarView',

  'template!detailview/file',
  'style!detailview/_file'

], function(
  runtime,
  AssignableCollection,
  moment,
  BlobHelper,
  DateHelper,
  WBView,
  AvatarView,
  fileTemplate,
  fileStyle,
  undefined
) {

  

  var _ = runtime._;
  var window = runtime.global;

  var _super = WBView.prototype;

  var fileTypes = {

    'text': {
      'checks': [
        /^text/,
        /ms-word|iwork-pages|opendocument.text/
      ],
      'className': 'text'
    },

    'packages': {
      'checks': [
        /^application\/(zip|rar|gzip|x-tar|x-apple-diskimage)/
      ],
      'className': 'package'
    },

    'pdf': {
      'checks': [
        /^application\/pdf/
      ],
      'className': 'pdf'
    },

    'audio': {
      'checks': [
        /^audio/
      ],
      'className': 'audio'
    },

    'movies': {
      'checks': [
        /^video/
      ],
      'className': 'movie'
    },

    'images': {
      'checks': [
        /^image/
      ],
      'className': 'image'
    },

    'presentation': {
      'checks': [
        /presentation|powerpoint|iwork-keynote/
      ],
      'className': 'presentation'
    },

    'table': {
      'checks': [
        /spreadsheet|ms-excel|iwork-numbers/
      ],
      'className': 'table'
    }
  };

  return WBView.extend({

    'styles': [fileStyle],

    'template': fileTemplate,

    'tagName': 'li',

    'events': {

      'click': 'onClick',
      'click .delete': 'onClickDeleteContainer',
      'click .delete-action': 'onDelete',
      'click .cancel-action': 'onCancelUpload'
    },

    'renderData': {

      'ago': undefined,
      'created_by_id': undefined,
      'extension': undefined,
      'isEnqueued': undefined,
      'isPro': undefined,
      'isUploading': undefined,
      'isUploadingDone': undefined,
      'isWaiting': undefined,
      'fileName': undefined,
      'previewUrl': undefined
    },

    'getPreviewUrl': function () {

      var self = this;
      var previews = self.model.attributes.previews;
      if (previews && previews.length) {
        return previews[runtime.env.isRetina() && (previews.length > 1) ? 1 : 0].read.url;
      }
    },

    'getAvailablePreviewSizes': function () {

      var self = this;
      var attributes = self.model.attributes;

      var containsBig = false;

      if (attributes.previews && attributes.previews.length) {

        for (var i=0, len=attributes.previews.length; i < len; i++ ) {

          if (/^300x/.test(attributes.previews[i].size)) {

            containsBig = true;
            i = len;
          }
        }
      }

      return containsBig ? 'normal' : 'small';
    },

    'formatData': function (data) {

      var self = this;
      data = _super.formatData.call(self, data);
      var attributes = self.model.attributes;

      data.ago = moment(DateHelper.convertServerTimeToLocalTime(attributes.created_at)).fromNow();
      data.created_by_id = self.model.attributes.created_by_id;
      data.extension = self.getExtensionFromName(attributes.file.name);
      data.isWaiting = attributes.state === undefined;
      data.isEnqueued = attributes.state === 0;
      data.isUploading = attributes.state === 1;
      data.isUploadingDone = attributes.state === 2;
      data.isPro = runtime.user.isPro();
      data.fileName = attributes.file.name;
      data.previewUrl = self.getPreviewUrl();

      data.title = data.ago;
      if (data.isWaiting) {
        data.title += ' &middot; ' + runtime.language.getText('upload_file_not_synced_yet');
      }

      return data;
    },

    'initialize': function (options) {

      var self = this;
      _super.initialize.apply(self, arguments);

      if (options.model) {

        var model = self.model = options.model;
        self.bindTo(model, 'change:previews', self.renderPreview);
        self.bindTo(model, 'change:state', self.onModelStateChange);
        self.bindTo(model, 'destroy', self.onDestroySelf);
        self.bindTo(model, 'upload:retrying', self.onRetryUpload);

        self.bindTo(runtime, 'time:nextMinute', self.updateCreatedAt);

        if (model.uploader) {
          self.setUploader(model.uploader);
        }
        else {
          self.bindTo(model, 'hasUploader', self.setUploader);
        }
      }
    },

    'render': function () {

      var self = this;

      if (!self.model || self.destroyed) {

        return self;
      }

      var data = self.formatData(self.renderData);
      _super.render.call(self, data);

      if (data.previewUrl) {

        self.$el.addClass('hasPreview');
      }

      if (data.isUploading) {
        if (data.created_by_id === runtime.user.id) {
          self.$el.addClass('uploading');
          // if this attachment is detached from an uploader,
          // but has an uploading state, it is likely a failed upload
          // most likely from refreshing the page while upload was in progress
          self.$el.toggleClass('failed', !self.uploader);
        }
        else {
          // don't show progress states to non-file owners
          self.$el.addClass('enqueued');
        }
      }
      else if (data.isUploadingDone) {

        self.$el.removeClass('uploading');
      }
      else if (data.isEnqueued) {

        self.$el.addClass('enqueued').removeClass('uploading');
      }
      else if (data.isWaiting) {

        self.$el.addClass('waiting').removeClass('uploading');
      }

      self.updatePreviewIcon();
      self.renderPreview();

      self.renderAvatar(data.created_by_id);

      self.uploader && self.onUploadProgress(self.uploader.progress);

      self.$el.attr('rel', self.model.id);

      return self;
    },

    'setUploader': function (uploader) {

      var self = this;

      if (self.uploader) {
        return;
      }

      var progressBind = self.bindTo(uploader, 'change:progress', self.onUploadProgress);
      var stateBind = self.bindTo(uploader, 'change:state', self.onUploadStateChange);
      var errorBind = self.bindTo(uploader, 'upload:error', self.onUploadError);

      var cancelBind = self.on('cancel:upload', function () {
        uploader.trigger('upload:abort');
        self.deleteSelf();
      });

      self.bindTo(uploader, 'upload:complete', function () {

        // unbind all upload events
        self.unbindFrom(progressBind);
        self.unbindFrom(stateBind);
        self.unbindFrom(errorBind);
        self.unbindFrom(cancelBind);

        uploader.destroy();
        self.uploader = self.model.uploader = null;
      });

      self.uploader = self.model.uploader = uploader;
    },

    'renderPreview': function () {

      var self = this;
      var previewUrl = self.getPreviewUrl();
      var $preview = self.$('img.preview');
      var isSmall = self.getAvailablePreviewSizes() === 'small';

      if (previewUrl) {
        self.$el.addClass('hasPreview');
        self.$el.toggleClass('small-preview', isSmall);
        self.$el.toggleClass('normal-preview', !isSmall);
        BlobHelper.loadImage(previewUrl, $preview);
      }
    },

    'renderAvatar': function (id) {

      var self = this;
      var $creator = self.$('.creator');

      self.avatarView = self.avatarView || self.addSubview(new AvatarView({size: 'tiny'}), 'avatarView');

      $creator.html(self.avatarView.render({id: id}).$el);
    },

    'updatePreviewIcon': function () {

      var self = this;
      var className;
      var classFound = false;
      var fileType = self.model.get('file').type;

      _.each(fileTypes, function (type) {

        if (!classFound) {

          _.each(type.checks, function (check) {

            if (!classFound) {

              if (check.test(fileType)) {

                className = type.className;
                classFound = true;
              }
            }
          });
        }
      });

      var $icon = self.$('.file > .icon-file');
      if (classFound && className) {

        $icon.addClass(className + '-thumb');
        self.$el.addClass(className);
      }
      else {

        $icon.addClass('document-thumb');
      }
    },

    'onClick': function () {

      var self = this;
      var fileLocation = self.model.attributes.read && self.model.attributes.read.url;
      fileLocation && window.open(fileLocation, '_blank');
    },

    'onCancelUpload': function (e) {

      var self = this;

      self.trigger('cancel:upload');
      self.$el.addClass('uploading');
      self.onDelete(e);
    },

    'onDelete': function (e) {

      var self = this;

      e.preventDefault();
      e.stopPropagation();

      if (!self.isDeleting && (runtime.user.isPro() || self.model.attributes.created_by_id === runtime.user.id)) {

        var shouldPromptBefore = runtime.settings.get('confirm_delete_entity') === 'true';
        var action = self.deleteSelf.bind(self);

        if (shouldPromptBefore) {

          runtime.trigger('modal:confirm', {

            // TODO USER FILES SPECIFIC STRINGS
            'customTitle': runtime.language.getLabel('label_are_you_sure_permanently_delete_$_file', _.escape(self.model.attributes.file.name)).toString(),
            'customText': runtime.language.getLabel('label_cant_undo').toString(),
            'confirmText': runtime.language.getLabel('label_delete_file').toString(),
            'confirm': action
          });
        }
        else {
          runtime.trigger('fileAdded');
          action();
        }
      }
    },

    'deleteSelf': function () {

      var self = this;

      self.isDeleting = true;

      self.$el.addClass('deleting');

      var tryDelete = _.debounce(function () {
        self.model && self.model.destroy({
          'forRemote': true
        });
      }, 1000, true);

      tryDelete();
    },

    'onDestroySelf': function () {

      var self = this;
      self.$el.addClass('deleting');
      _.delay(function () {

        !self.destroyed && self.destroy();
      }, 400);
    },

    'onClickDeleteContainer': function (e) {

      e.preventDefault();
      e.stopPropagation();
    },

    'onUploadStateChange': function (state) {

      var self = this;

      self.$el.removeClass('waiting');
      self.$('.meta').attr('title', self.formatData().title);

      if (state === 0) {

        self.$el.addClass('enqueued');
      }
      else if (state === 1) {

        self.$el.removeClass('enqueued').addClass('uploading');
      }
      else {

        self.$el.removeClass('enqueued uploading');
      }
    },

    'onModelStateChange': function () {

      var self = this;

      if (self.model.attributes.state === 2) {

        self.$el.removeClass('enqueued uploading failed');
      }
    },

    'onUploadProgress': function (progress) {

      var self = this;

      if (progress > self.progress || !self.progress) {

        self.progress = progress;
        self.$('.progress .bar').css({

          'width': progress + '%'
        });
      }
    },

    'onUploadError': function () {

      var self = this;
      self.$el.addClass('uploading failed');
    },

    'onRetryUpload': function () {

      var self = this;
      self.$el.addClass('uploading');
      self.$el.removeClass('failed');
    },

    'updateCreatedAt': function () {

      var self = this;
      var ago = moment(DateHelper.convertServerTimeToLocalTime(self.model.get('created_at'))).fromNow();

      self.$('.meta .ago').text(ago);
    },

    'getExtensionFromName': function (name) {

      var parts = name.split('.');
      return parts.length > 1 ? parts[parts.length - 1] : '';
    }
  });
});

// License (MIT)
// Copyright © 2013 Matt Diamond
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

define('vendor/recorderWorker',[], function () {

  

  return function () {

    var recLength = 0,
      recBuffersL = [],
      recBuffersR = [],
      sampleRate;

    this.onmessage = function(e){
      switch(e.data.command){
      case 'init':
        init(e.data.config);
        break;
      case 'record':
        record(e.data.buffer);
        break;
      case 'exportWAV':
        exportWAV(e.data.type, e.data.id);
        break;
      case 'getBuffer':
        getBuffer(e.data.id);
        break;
      case 'clear':
        clear();
        break;
      }
    };

    function init(config){
      sampleRate = config.sampleRate;
    }

    function record (inputBuffer) {
      recBuffersL.push(inputBuffer[0]);
      recBuffersR.push(inputBuffer[1]);
      recLength += inputBuffer[0].length;
    }

    function exportWAV (type, callbackId) {
      var bufferL = mergeBuffers(recBuffersL, recLength);
      var bufferR = mergeBuffers(recBuffersR, recLength);
      var interleaved = interleave(bufferL, bufferR);
      var dataview = encodeWAV(interleaved);
      var audioBlob = new Blob([dataview], { type: type });

      this.postMessage({

        'id': callbackId,
        'data': audioBlob
      });
    }

    function getBuffer (callbackId) {
      var buffers = [];
      buffers.push( mergeBuffers(recBuffersL, recLength) );
      buffers.push( mergeBuffers(recBuffersR, recLength) );

      this.postMessage({

        'id': callbackId,
        'data': buffers
      });
    }

    function clear(){
      recLength = 0;
      recBuffersL = [];
      recBuffersR = [];
    }

    function mergeBuffers(recBuffers, recLength){
      var result = new Float32Array(recLength);
      var offset = 0;
      for (var i = 0; i < recBuffers.length; i++){
        result.set(recBuffers[i], offset);
        offset += recBuffers[i].length;
      }
      return result;
    }

    function interleave(inputL, inputR){
      var length = inputL.length + inputR.length;
      var result = new Float32Array(length);

      var index = 0,
        inputIndex = 0;

      while (index < length){
        result[index++] = inputL[inputIndex];
        result[index++] = inputR[inputIndex];
        inputIndex++;
      }
      return result;
    }

    function floatTo16BitPCM(output, offset, input){
      for (var i = 0; i < input.length; i++, offset+=2){
        var s = Math.max(-1, Math.min(1, input[i]));
        output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);
      }
    }

    function writeString(view, offset, string){
      for (var i = 0; i < string.length; i++){
        view.setUint8(offset + i, string.charCodeAt(i));
      }
    }

    function encodeWAV(samples){
      var buffer = new ArrayBuffer(44 + samples.length * 2);
      var view = new DataView(buffer);

      /* RIFF identifier */
      writeString(view, 0, 'RIFF');
      /* file length */
      view.setUint32(4, 32 + samples.length * 2, true);
      /* RIFF type */
      writeString(view, 8, 'WAVE');
      /* format chunk identifier */
      writeString(view, 12, 'fmt ');
      /* format chunk length */
      view.setUint32(16, 16, true);
      /* sample format (raw) */
      view.setUint16(20, 1, true);
      /* channel count */
      view.setUint16(22, 2, true);
      /* sample rate */
      view.setUint32(24, sampleRate, true);
      /* byte rate (sample rate * block align) */
      view.setUint32(28, sampleRate * 4, true);
      /* block align (channel count * bytes per sample) */
      view.setUint16(32, 4, true);
      /* bits per sample */
      view.setUint16(34, 16, true);
      /* data chunk identifier */
      writeString(view, 36, 'data');
      /* data chunk length */
      view.setUint32(40, samples.length * 2, true);

      floatTo16BitPCM(view, 44, samples);

      return view;
    }
  };
});
// License (MIT)
// Copyright © 2013 Matt Diamond
// Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
// The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.

(function (init) {

  

  if (typeof define === "function" && define.amd) {

    define('vendor/recorder', ['wunderbits/global', 'vendor/recorderWorker'], function (global, worker) {

      return init(global, worker);
    });
  }
  else {

    init(window);
  }
}).call(this, function (window, worker, undefined) {

  

  // no recording without blob support
  if(!window.URL || !window.Blob) {
    return;
  }

  var workerSource = '(' + worker.toString() + ')()'; // firefox toSource - wrapped so it executes in the context of the web worker
  var blob = new Blob([workerSource], { "type" : "application\/javascript" });
  var workerUrl = window.URL.createObjectURL(blob);

  var WORKER_PATH = workerUrl;

  var Recorder = function (source, cfg) {

    var config = cfg || {};
    var bufferLen = config.bufferLen || 4096;
    this.context = source.context;
    this.node = this.context.createJavaScriptNode(bufferLen, 2, 2);

    var worker = new Worker(config.workerPath || WORKER_PATH);
    worker.postMessage({
      command: 'init',
      config: {
        sampleRate: this.context.sampleRate
      }
    });

    var recording = false;
    var messageId = 0;
    var callbacks = {};

    // Messaging
    this.sendMessage = function (data, callback) {

      ++messageId;

      data.id = messageId;
      callbacks[messageId] = callback;

      worker.postMessage(data);
    };

    worker.onmessage = function (e) {

      typeof callbacks[e.data.id] === 'function' && callbacks[e.data.id](e.data.data);
      callbacks[e.data.id] = null;
    };

    // Audio Shizzle Below
    this.node.onaudioprocess = function (e) {

      if (!recording) {return;}

      worker.postMessage({

        'command': 'record',
        'buffer': [
          e.inputBuffer.getChannelData(0),
          e.inputBuffer.getChannelData(1)
        ]
      });
    };

    this.configure = function (cfg){

      for (var prop in cfg){
        if (cfg.hasOwnProperty(prop)){
          config[prop] = cfg[prop];
        }
      }
    };

    this.record = function (cb) {

      var callback = cb || config.callback;
      recording = true;
      typeof callback === 'function' && callbacks();
    };

    this.stop = function (cb) {

      var callback = cb || config.callback;
      recording = false;
      typeof callback === 'function' && callbacks();
    };

    this.clear = function (cb) {

      var callback = cb || config.callback;
      this.sendMessage({

        'command': 'clear'
      }, callback);
    };

    this.getBuffer = function (cb) {

      var callback = cb || config.callback;
      this.sendMessage({

        'command': 'getBuffer'
      }, callback);
    };

    this.exportWAV = function (cb, type){

      var callback = cb || config.callback;
      type = type || config.type || 'audio/wav';
      this.sendMessage({

        'command': 'exportWAV',
        'type': type
      }, callback);
    };

    source.connect(this.node);
    this.node.connect(this.context.destination);    //this should not be necessary
  };

  Recorder.forceDownload = function(blob, filename){

    var url = (window.URL || window.webkitURL).createObjectURL(blob);
    var link = window.document.createElement('a');
    link.href = url;
    link.download = filename || 'output.wav';
    var click = document.createEvent("Event");
    click.initEvent("click", true, true);
    link.dispatchEvent(click);
  };

  window.Recorder = Recorder;

  return Recorder;

});
define('templates/detailview/audioRecorder',['vendor/handlebars'], function(H) {
var name = 'detailview/audioRecorder';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<audio></audio> <a class=\"start-recording-audio\" title=\"start/pause recording audio\"> <span class=\"icon-file record-audio\"/> </a> <span class=\"icon action-divider\"/> <a class=\"play-recorded-audio disabled\" title=\"play recorded audio\"> <span class=\"icon-file play-audio\"/> </a> <span class=\"icon action-divider\"/> <span class=\"duration\">00:00</span> <span class=\"icon action-divider\"/> <a class=\"clear-recorded-audio\" title=\"clear recorded audio\"> <span class=\"icon-file clear-audio\"/> </a> <span class=\"icon action-divider\"/> <a class=\"upload-recorded-audio disabled\" title=\"upload recorded audio\"> <span class=\"icon-file upload-audio\"/> </a>";
  });
});
define('styles/_recorder',[],function() { return {'name': '_recorder', 'styles': ".audio-recorder-container{-webkit-border-radius:5px;border-radius:5px;border:1px solid #c9c9c9;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #fff), color-stop(1, #f7f7f7));background-image:-webkit-linear-gradient(top, #fff 0, #f7f7f7 100%);background-image:-moz-linear-gradient(top, #fff 0, #f7f7f7 100%);background-image:-o-linear-gradient(top, #fff 0, #f7f7f7 100%);background-image:-ms-linear-gradient(top, #fff 0, #f7f7f7 100%);background-image:linear-gradient(top, #fff 0, #f7f7f7 100%);-webkit-box-shadow:0 1px 2px rgba(0,0,0,0.1);box-shadow:0 1px 2px rgba(0,0,0,0.1);margin:19px 0 12px 0;text-align:center;font-size:0;} .audio-recorder-container a{display:inline-block;width:48px;float:none;padding:10px 0 7px 0;margin:0 2px;font-weight:bold;text-align:center;} .audio-recorder-container a span{display:inline-block} .audio-recorder-container .duration{display:inline-block;width:84px;font-size:16px;font-weight:bold;color:#bdbcbb;} .audio-recorder-container .duration.recording,.audio-recorder-container .duration.playing{color:#423e3e} .audio-recorder-container .action-divider{opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50)} .audio-recorder-container a,.audio-recorder-container .duration{vertical-align:middle} .audio-recorder-container .start-recording-audio{color:#f00} .audio-recorder-container .play-recorded-audio{color:#008000} " }; });
define('views/TaskDetail/TaskDetailRecordAudioFileView',[

  'application/runtime',

  'wunderbits/helpers/strings',

  'wunderbits/WBView',

  'vendor/recorder',

  'template!detailview/audioRecorder',

  'style!_recorder'

], function (runtime, StringsHelper, WBView, Recorder, recorderTemplate, recorderStyles, undefined) {

  

  var $ = runtime.$;
  var _ = runtime._;
  var window = runtime.global;
  var navigator = window.navigator;

  var _super = WBView.prototype;

  var getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia ||
                     navigator.mozGetUserMedia || navigator.msGetUserMedia;

  return WBView.extend({

    'className': 'audio-recorder-container',

    'template': recorderTemplate,

    'tagName': 'div',

    'events': {
      'click .start-recording-audio': 'oncClickRecord',
      'click .stop-recording-audio': 'stopRecording',
      'click .clear-recorded-audio': 'clearRecording',
      'click .upload-recorded-audio:not(.disabled)': 'uploadRecording',
      'click .play-recorded-audio': 'playRecordedAudio'
    },

    styles: [recorderStyles],

    'initialize': function (options) {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.model = options && options.taskModel;
      self.AudioContext = window.AudioContext || window.webkitAudioContext;

      // yuck
      self.updateDuration = self.updateDuration.bind(self);
    },

    'render': function () {

      var self = this;

      if (getUserMedia && self.AudioContext) {
        _super.render.call(self, {});

        // Uploader should be shown only for synced tasks, since we need the online_id
        if (self.model.get('online_id')) {

          self.setup();
        }
        else {

          self.bindOnceTo(self.model, 'change:online_id', self.setup);
        }

        self.delegateEvents();
      }

      return self;
    },

    'setModel': function (taskModel) {

      var self = this;
      self.model = taskModel;
      self.duration = 0;
      self.render();
    },

    'setup': function () {

      var self = this;
      self.url = window.URL || window.webkitURL;
      self.audio = self.$('audio')[0];

      var $audio = self.$('audio');
      var $playButton = self.$('.play-recorded-audio');

      self.audioEndBind && self.unbindFrom(self.audioEndBind);
      self.audioEndBind = self.bindTo($audio, 'ended', function () {

        $playButton.removeClass('playing');
        self.$('.duration').removeClass('playing recording');
        self.displayDuration();
      });

      self.timeupdateBind && self.unbindFrom(self.timeupdateBind);
      self.timeupdateBind = self.bindTo($audio, 'timeupdate', function () {

        if ($playButton.hasClass('playing')) {

          self.displayDuration(Math.floor(self.audio.currentTime));
        }
      });
    },

    'onFail': function (e) {

      console.log('Rejected!', e);
    },

    'onSuccess': function (streamResource) {

      var self = this;
      self.streamResource = self.streamResource || streamResource;

      var $recordButton = self.$('.start-recording-audio');

      if (!self.context) {
        var Klass = window.AudioContext || window.webkitAudioContext;
        self.context = new Klass();
        self.context.createGain();
      }

      !self.mediaStreamSource && (self.mediaStreamSource = self.context.createMediaStreamSource(self.streamResource));

      !self.recorder && (self.recorder = new Recorder(self.mediaStreamSource));
      self.recorder.record();

      if ($recordButton.hasClass('paused')) {
        self.continueUpdatingDuration();
      }
      else {
        self.startUpdatingDuration();
      }

      $recordButton.addClass('recording').removeClass('paused');
      self.$('.duration').addClass('recording');
      self.$('.stop-recording-audio').removeClass('disabled');
      self.$('.play-recorded-audio').removeClass('disabled');
      self.$('.upload-recorded-audio').removeClass('disabled');

      self.recording = true;

      // audio loopback
      // mediaStreamSource.connect(context.destination);
    },

    'oncClickRecord': function () {

      var self = this;

      if (getUserMedia && !self.streamResource) {

        self.recorder && self.recorder.stop();
        // get permission for audio recoring
        // chrome packaged app:
        if (runtime.env.isPackagedApp() && runtime.env.isChrome()) {

          var chrome = window.chrome;
          chrome.permissions.request({
            'permissions': [
              'audioCapture'
            ]
          }, function (granted) {
            // The callback argument will be true if the user granted the permissions.
            if (granted) {
              self.requestAudioPermission();
            }
            else {
              self.onFail(arguments);
            }
          });
        }
        // all others:
        else {
          self.requestAudioPermission();
        }
      }
      else if (self.streamResource && self.recording) {

        self.recorder.stop();
        self.recording = false;
        self.$('.start-recording-audio').addClass('paused').removeClass('recording');
        self.$('.duration').removeClass('recording');

        self.putAnAudioOnTheAudio();

        self.stopUpdatingDuration();
      }
      else if (self.streamResource) {

        self.onSuccess();
      }
      else {

        console.log('navigator.getUserMedia not present');
      }
    },

    'requestAudioPermission': function () {

      var self = this;
      getUserMedia.call(navigator, {
        'audio': true,
        'video': false
      },
        self.onSuccess.bind(self),
        self.onFail.bind(self)
      );
    },

    'stopRecording': function () {

      var self = this;

      if (self.recorder && !self.$('.stop-recording-audio').hasClass('disabled')) {

        self.$('.start-recording-audio, .duration').removeClass('recording');
        self.$('.play-recorded-audio').removeClass('disabled');

        self.recorder.stop();
        self.stopUpdatingDuration();
        self.putAnAudioOnTheAudio();
      }
    },

    'clearRecording': function () {

      var self = this;
      self.recorder && self.recorder.clear();

      self.recording = false;
      self.duration = 0;
      self.blob = null;
      self.audio.setAttribute('src', '');
      self.audio.load();

      self.$('.start-recording-audio').removeClass('recording paused');
      self.$('.duration').removeClass('recording playing');
      self.$('.play-recorded-audio').addClass('disabled');
      self.$('.upload-recorded-audio').addClass('disabled');

      self.displayDuration();

      self.trigger('recording:clear');
    },

    'putAnAudioOnTheAudio': function () {

      var self = this;

      var deferred = new $.Deferred();

      self.recorder && self.recorder.exportWAV(function (exportBlob) {

        var dateString = StringsHelper.dateString();

        self.audio.src = self.url.createObjectURL(exportBlob);
        exportBlob.name = 'recording-' + dateString + '.wav';

        self.blob = exportBlob;

        self.$('.upload-recorded-audio').removeClass('disabled');

        var listener = function () {

          deferred.resolve();
          self.audio.removeEventListener('canplaythrough', listener, false);
        };

        self.audio.addEventListener('canplaythrough', listener, false);
      });

      return deferred.promise();
    },

    'playRecordedAudio': function () {

      var self = this;
      var $playButton = self.$('.play-recorded-audio');
      var $duration = self.$('.duration');
      var isPlaying = $playButton.hasClass('playing');

      var deferred = new $.Deferred();

      if (self.streamResource && self.recording) {

        self.recorder.stop();
        self.recording = false;
        self.$('.start-recording-audio').addClass('paused').removeClass('recording');
        self.$('.duration').removeClass('recording');

        self.putAnAudioOnTheAudio().done(deferred.resolve);
        self.stopUpdatingDuration();
      }
      else {

        deferred.resolve();
      }

      deferred.then(function () {

        if (self.audio && !$playButton.hasClass('disabled') && !isPlaying) {

          $playButton.addClass('playing');
          $duration.addClass('playing');
          self.audio.pause();
          self.audio.currentTime = 0;
          self.audio.play();
        }
        else if (isPlaying) {

          self.audio.pause();
          self.audio.currentTime = 0;
          $playButton.removeClass('playing');
          $duration.removeClass('playing');
          self.displayDuration();
        }
      });
    },

    'uploadRecording': function () {

      var self = this;

      var deferred = new $.Deferred();

      self.$('.start-recording-audio').removeClass('recording');
      self.$('.play-recorded-audio').removeClass('playing').addClass('disabled');
      self.$('.upload-recorded-audio').addClass('disabled');
      self.$('.stop-recording-audio').addClass('disabled');
      self.$('.duration').removeClass('playing, recording');


      if (self.streamResource && self.recording) {

        self.recorder.stop();
        self.recording = false;
        self.$('.start-recording-audio').addClass('paused').removeClass('recording');
        self.$('.duration').removeClass('recording');

        self.putAnAudioOnTheAudio().done(deferred.resolve);
        self.stopUpdatingDuration();
      }
      else {

        deferred.resolve();
      }

      deferred.done(function () {

        self.blob && self.trigger('upload:audioFile', self.blob);

        self.duration = 0;
        self.blob = null;
        self.audio.setAttribute('src', '');
        self.audio.load();
        self.displayDuration();

        self.clearRecording();
      });
    },

    // helpers to track duration of recording while recording

    'getDurationString': function (time) {

      var self = this;

      time = _.isNumber(time) ? time : self.duration;
      return StringsHelper.pad(Math.floor(time / 60), 2) + ':' + StringsHelper.pad((time % 60), 2);
    },

    'displayDuration': function (time) {

      var self = this;
      var $duration = self.$('.duration');

      time = _.isNumber(time) ? time : self.duration;

      $duration.text(self.getDurationString(time));
      if ($duration.hasClass('hidden')) {

        $duration.removeClass('hidden');
      }
    },

    'updateDuration': function () {

      // just increments duration by 1
      var self = this;
      self.duration += 1;
      self.displayDuration();
    },

    'startUpdatingDuration': function () {

      var self = this;
      self.duration = 0;
      self.displayDuration();
      self.updateDurationInterval = window.setInterval(self.updateDuration, 1000);
    },

    'continueUpdatingDuration': function () {

      var self = this;
      self.displayDuration();
      self.updateDurationInterval = window.setInterval(self.updateDuration, 1000);
    },

    'stopUpdatingDuration': function () {

      var self = this;
      window.clearTimeout(self.updateDurationInterval);
    },
  });
});
define('views/TaskDetail/Controllers/TaskDetailFilesController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/date',
  'helpers/Animator',

  'wunderbits/WBViewController'

], function (
  runtime,
  Keycodes, DateHelper, Animator,
  WBViewController,
  undefined
) {

  

  return WBViewController.extend({

    'implements': {

      'click:filesToggle': 'onStackfiles',
      'click:recordFile': 'onClickShowAudioRecorder',

      'keydown:addFiles': 'onAddFilesKeydown',

      'focus': 'onFocusSelf'
    },

    'onAddFilesKeydown': function (e) {

      var self = this;
      var view = self.view;

      if (e.which === Keycodes.enter) {
        view.fileSelectorView.select();
        self.stopEventFully(e);
      }
    },

    'onFocusSelf': function () {

      this.view.focusSelf();
    },

    'onStackfiles': function () {
      this.view.stackFiles();
    },

    'onClickShowAudioRecorder': function (e) {

      var view = this.view;
      if (runtime.user.trialModel.canAddFile()) {
        view.showAudioRecorder();
      }
      // else show the "Go pro" popover
      else {
        view.openGetProPopover(e);
      }
    },
  });
});
define('templates/detailview/files',['vendor/handlebars'], function(H) {
var name = 'detailview/files';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression;


  buffer += "<a class=\"files-add\" tabindex=\"0\"> "
    + " <div class=\"files-add-label\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_add_new_file", options) : helperMissing.call(depth0, "localized", "label_add_new_file", options)))
    + " </div> "
    + " <span class=\"icon-file files-add-record hidden\"/> </a> "
    + " <div class=\"audio-recorder hidden\"/> "
    + " <ul class=\"files-list\"></ul>";
  return buffer;
  });
});
define('styles/detailview/_files',[],function() { return {'name': 'detailview/_files', 'styles': ".dropTarget{display:none} .drop .dropTarget{display:block} #detail .inner.drop > .dropTarget{position:absolute;top:0;left:0;right:0;bottom:0;z-index:9999} #detail .inner.drop .files .files-add{color:#3f72a0} .files{position:relative;margin:20px 21px;width:302px;} .files .files-add{overflow:hidden;text-align:center;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;font-size:13px;color:#a3a3a2;display:block;text-shadow:0 1px 0 rgba(255,255,255,0.64);padding:0 30px;margin:0 10px 9px 10px;background:url(\"images/textures/WLDropAreaMiddle.png\");} .files .files-add.offline:active,.files .files-add.notSynced:active{background-position:0 0;color:#a3a3a2} .files .files-add.offline .files-add-record,.files .files-add.notSynced .files-add-record{display:none} .files .files-add:hover,.files .files-add:focus{outline:none;background-position:0 -41px;color:#737272} .files .files-add:active{background-position:0 -82px;color:#3f72a0} .files .files-add:before,.files .files-add:after{content:\"\";position:absolute;top:0} .files .files-add:before{left:0} .files .files-add:after{right:0} .files .files-add .files-add-label{cursor:pointer;padding:12px 0;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis} .files .files-add .files-add-record{display:block;position:absolute;right:8px;top:8px} .drop .files-add{background-position:0 -82px} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){.files .files-add{background-image:url(\"images/textures/WLDropAreaMiddle@2x.png\");-webkit-background-size:10px;-moz-background-size:10px;background-size:10px} }html[dir=rtl] .files .files-add .files-add-record{right:initial;left:8px} " }; });
define('views/TaskDetail/TaskDetailFilesView',[

  'application/runtime',

  'vendor/moment',

  'wunderbits/helpers/date',
  'wunderbits/helpers/strings',

  'collections/FilesCollection',

  'wunderbits/WBViewPresenter',

  'views/Popovers/GetProPopoverView',
  'views/TaskDetail/TaskDetailFileView',
  'views/TaskDetail/TaskDetailRecordAudioFileView',

  'wunderbits/views/WBFileSelectorView',

  'views/TaskDetail/Controllers/TaskDetailFilesController',

  'template!detailview/files',
  'style!detailview/_files',
  'style!_fileupload'

], function (
  runtime,
  moment,
  DateHelper, StringsHelper,
  FilesCollection,
  WBViewPresenter,
  GetProPopoverView, FileItemView, RecordAudioFileView,
  WBFileSelectorView,
  TaskDetailFilesController,
  filesTemplate,
  filesStyle, fileuploadStyle,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;
  var window = runtime.global;
  var Blob = window.Blob;
  var _super = WBViewPresenter.prototype;
  var hasBlobSupport = !!runtime.global.Blob;

  // All files collection
  var allFilesCollection = new FilesCollection('/files/all');

  return WBViewPresenter.extend({

    'className': 'files',

    'styles': [filesStyle, fileuploadStyle],

    'template': filesTemplate,

    'attributes': {
      'tabindex': 0
    },

    'implements': [
      TaskDetailFilesController
    ],

    'emits': {
      'click .files-toggle': 'click:filesToggle',
      'click .files-add-record': 'click:recordFile',

      'keydown .files-add': 'keydown:addFiles'
    },

    'render': function (options) {

      var self = this;

      // cleanup if rerendering
      self.model && self.unbindFromTarget(self.model);
      self.collectionBind && self.unbindFrom(self.collectionBind);
      self.productBind && self.unbindFrom(self.productBind);
      self.audioBind && self.unbindFrom(self.audioBind);

      self.model = options.model || self.model;

      if (!self.model) {
        return self;
      }

      _super.render.apply(self, arguments);

      self.initModelBindings();
      self.setupCollectionbinds();
      self.renderFileSelector();
      self.renderFilesCollectionViews();
      self.renderAudioRecorder();
      self.renderFileSelectorPlaceholder();

      return self;
    },

    'initModelBindings': function () {

      var self = this;

      self.bindTo(self.model, 'change:completed', self.updateFileSelector);
    },

    'updateFileSelector': function () {

      var self = this;
      self.model && self.$('.files-add').toggleClass('hidden', self.model.isCompleted());
    },

    'setupCollectionbinds': function () {

      var self = this;
      self.url = '/tasks/' + self.model.id + '/files';

      self.collection = new FilesCollection(self.url);
      self.collectionBind = self.bindTo(self.collection, 'add', self.onAddFile);

      // handle pro changes
      self.productBind = self.bindTo(runtime.user, 'change:product', function () {

        if (runtime.user.trialModel.canAddFile()) {

          self.proPopoverBind && self.unbindFrom(self.proPopoverBind);
          !self.fileSelectorView && self.renderFileSelector();
          !self.audioRecorderView && self.renderAudioRecorder();

          self.audioRecorderView && self.audioRecorderView.$el.removeClass('hidden');
          self.$('.files-add-record').removeClass('hidden');
        }
        else {

          self.audioRecorderView && self.audioRecorderView.$el.addClass('hidden');
          self.$('.files-add-record').addClass('hidden');
          self.defer(self.renderFileSelector);
        }
      });
    },

    'renderFilesCollectionViews': function () {

      var self = this;

      // properly cleanup file subviews
      _.each(self._namedSubviews, function (view, name) {

        if (name !== 'audioRecorderView' && name !== 'selectorView') {

          self.destroySubview(view);
        }
      });

      var frag = document.createDocumentFragment();
      self.collection.models.length && _.each(self.collection.models, function (model) {

        var el = self.getRenderedFileView(model).el;
        frag.appendChild(el);
      });

      self.$('.files-list').append(frag);
    },

    'renderAudioRecorder': function () {

      var self = this;

      if (!runtime.env.isChrome()) {
        return;
      }

      self.$('.files-add-record').removeClass('hidden');

      if (!self.audioRecorderView) {

        self.audioRecorderView = self.addSubview(new RecordAudioFileView({

          'taskModel': self.model
        }), 'audioRecorderView');

        self.audioRecorderView.render();
      }
      else {

        self.audioRecorderView.setModel(self.model);
      }

      self.audioBind && self.unbindFrom(self.audioBind);
      self.audioBind = self.bindTo(self.audioRecorderView, 'upload:audioFile', function (blob) {

        self._upload(blob);
        self.$('.files-add').removeClass('hidden');
        self.$('.audio-recorder').addClass('hidden');
        runtime.trigger('analytics:Files:UploadType', 'browserRecordedAudio');
      });

      self.audioClearBind && self.unbindFrom(self.audioClearBind);
      self.audioClearBind = self.bindTo(self.audioRecorderView, 'recording:clear', function () {

        self.$('.files-add').removeClass('hidden');
        self.$('.audio-recorder').addClass('hidden');
      });

      self.$('.audio-recorder').append(self.audioRecorderView.el);
    },

    'getRenderedFileView': function (model) {

      var self = this;
      var view = self.getSubview(model.id);
      if (!view) {
        view = new FileItemView({
          'model': model
        });
        view = self.addSubview(view, model.id).render();
      }
      return view;
    },

    'renderFileSelector': function () {

      var self = this;
      var addLabel = self.$('.files-add-label');

      if (!self.fileSelectorView) {
        var dropTarget = $('#detail > .inner');
        var view = new WBFileSelectorView({
          'dropTarget': dropTarget,
          'urlBlocker': 'preferences/account'
        });
        self.fileSelectorView = self.addSubview(view, 'selectorView');
        self.bindTo(self.fileSelectorView, 'selected:files', self._uploadMultiple.bind(self));
        self.bindTo(self.fileSelectorView, 'dropped:text', self._uploadText.bind(self));
      }

      // If the User is pro, set the file selector to handle events on the add-label
      if (runtime.user.trialModel.canAddFile()) {
        self.fileSelectorView.setElement(addLabel);
      }
      // else show the "Go pro" popover
      else {
        self.proPopoverBind && self.unbindFrom(self.proPopoverBind);
        self.proPopoverBind = self.bindTo(addLabel, 'click', self.openGetProPopover);
      }

      var label = runtime.language.getLabel('label_add_new_file').toString();
      self.$('.files-add-label').html(label);
      self.renderLabels();
      self.updateFileSelector();
    },

    'renderFileSelectorPlaceholder': function () {

      var self = this;

      var currentClass;

      var label = runtime.language.getLabel('label_add_new_file').toString();

      var div = self.$('.files-add-label');
      var text = div.find('text');

      // don't replace div's contents, it can contain a file selector
      if (text) {
        text.replaceWith(label);
      }
      else {
        div.append(label);
      }
      self.renderLabels();

      self.$('.files-add').removeClass('offline notSynced').addClass(currentClass);
    },

    '_uploadMultiple': function (files) {

      var self = this;

      if (runtime.user.trialModel.canAddFile()) {
        _.each(files, self._upload.bind(self));
        self.renderFileSelector();
      }
      else {
        self.openGetProPopover();
      }
    },

    '_upload': function (file) {

      var self =  this;

      var canAdd = runtime.user.trialModel.canAddFile();
      var detailOpen = self.isDetailViewOpen();

      if (!canAdd || !detailOpen) {
        detailOpen && !canAdd && self.openGetProPopover();
        return;
      }

      var name = file.name;
      // create model first, with local identifier
      allFilesCollection.add({
        'created_at': DateHelper.getServerNow(),
        'created_by_id': runtime.user.id,
        'file': {
          'name': name,
          'type': file.type
        },
        'resource_id': self.model.id,
        'file_name': name
      }, {
        'task': self.model,
        'file': file
      });

      runtime.trigger('fileAdded');
      runtime.trigger('trackers:debounceSync');
    },

    '_uploadText': function (text) {

      var self = this;

      if (runtime.user.trialModel.canAddFile()) {
        if (text.length && hasBlobSupport) {

          var file = new Blob([text], {
            'type': 'text/plain'
          });
          file.name = StringsHelper.dateString() + '.txt';
          self._upload(file);
        }
      }
      else {

        self.openGetProPopover();
      }
    },

    'onAddFile': function (model, collection, options) {

      var self = this;
      var view = self.getRenderedFileView(model);
      options.uploader && view.setUploader(options.uploader);

      var $filesList = self.$('.files-list');

      // get dem models
      self.collection.sort();
      var models = self.collection.models;

      var thisCreatedAt = moment(model.attributes.created_at).valueOf();
      var thisTitle = model.attributes.file.name.toLowerCase();

      // BY CREATED_ATS only
      // find last before model view
      var beforeModel = _.find(models.reverse(), function (model) {

        return thisCreatedAt < moment(model.attributes.created_at).valueOf();
      });

      // find first after model view
      var afterModel = _.find(models.reverse(), function (model) {

        return thisCreatedAt > moment(model.attributes.created_at).valueOf();
      });

      // by same time and alphatizical
      var beforeModelByAlpha = _.find(models.reverse(), function (model) {

        var sameTime = thisCreatedAt === moment(model.attributes.created_at).valueOf();
        return sameTime && thisTitle > model.attributes.file.name.toLowerCase();
      });

      var afterModelByAlpha = _.find(models.reverse(), function (model) {

        var sameTime = thisCreatedAt === moment(model.attributes.created_at).valueOf();
        return sameTime && thisTitle < model.attributes.file.name.toLowerCase();
      });

      beforeModel = beforeModelByAlpha ? beforeModelByAlpha : beforeModel;
      afterModel = afterModelByAlpha ? afterModelByAlpha : afterModel;

      var $afterView = afterModel && $filesList.find('li[rel=' + afterModel.id + ']');
      var $beforeView = beforeModel && $filesList.find('li[rel=' + beforeModel.id + ']');

      if ($beforeView && $beforeView.length) {
        // if a before and no after or both
        // append after before
        $beforeView.after(view.el);
      }
      else if ($afterView && $afterView.length && (!$beforeView || ($beforeView && !$beforeView.length))) {
        // else if an after and no before
        // prepend before after
        $afterView.before(view.el);
      }
      else {
        // else just append the damn thing
        $filesList.append(view.el);
      }

      runtime.trigger('detail:checkBounds');
    },

    'stackFiles': function() {

      var self = this;
      self.$('.file').removeClass('selected');
      self.$el.toggleClass('collapsed');
    },

    'showAudioRecorder': function () {
      var self = this;
      self.$('.audio-recorder').removeClass('hidden');
      self.$('.files-add').addClass('hidden');
    },

    'openGetProPopover': function (e) {

      var self = this;

      if (e) {
        e.preventDefault();
        e.stopPropagation();
      }

      if (self.getProPopover) {
        return;
      }

      self.defer(function(){
        runtime.trigger('focus:set', 'goProPopover');
      });

      var settings = {
        'benefit': 'files',
        'target': self.$('.files-add'),
        'margin': 0,
        'returnRoute': 'tasks/' + self.model.id,
        'hideNoAssign': true,
        'onClose': function () {
          self.destroySubview(self.getProPopover);
          self.getProPopover = null;
        }
      };

      self.getProPopover = self.addSubview(new GetProPopoverView(settings));
      self.getProPopover.toggle('open', settings);
      self.preventInputBlur = true;

      runtime.trigger('analytics:ProAccounts:startProFunnel', 'detailFiles');
      runtime.trigger('analytics:ProAccounts:openGetProPopover', 'detailFiles');
    },

    'isDetailViewOpen': function () {
      return window.location.href.indexOf("/tasks/") >= 0;
    },

    'focusSelf': function () {

      this.$('.files-add').focus();
    }
  });
});
define('templates/detailview/detailInfo',['vendor/handlebars'], function(H) {
var name = 'detailview/detailInfo';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.isShared, {hash:{},inverse:self.program(7, program7, data),fn:self.program(2, program2, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  return buffer;
  }
function program2(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.completedRelative, {hash:{},inverse:self.program(5, program5, data),fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  return buffer;
  }
function program3(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_completed_$_by_$", depth0.completed_on, depth0.completed_by, options) : helperMissing.call(depth0, "localized", "label_completed_$_by_$", depth0.completed_on, depth0.completed_by, options)))
    + " ";
  return buffer;
  }

function program5(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_completed_by_$_on_$", depth0.completed_by, depth0.completed_on, options) : helperMissing.call(depth0, "localized", "label_completed_by_$_on_$", depth0.completed_by, depth0.completed_on, options)))
    + " ";
  return buffer;
  }

function program7(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.completedRelative, {hash:{},inverse:self.program(10, program10, data),fn:self.program(8, program8, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  return buffer;
  }
function program8(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_completed_$", depth0.completed_on, options) : helperMissing.call(depth0, "localized", "label_completed_$", depth0.completed_on, options)))
    + " ";
  return buffer;
  }

function program10(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_completed_on_$", depth0.completed_on, options) : helperMissing.call(depth0, "localized", "label_completed_on_$", depth0.completed_on, options)))
    + " ";
  return buffer;
  }

function program12(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.isShared, {hash:{},inverse:self.program(18, program18, data),fn:self.program(13, program13, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  return buffer;
  }
function program13(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.createdRelative, {hash:{},inverse:self.program(16, program16, data),fn:self.program(14, program14, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  return buffer;
  }
function program14(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_created_$_by_$", depth0.created_on, depth0.created_by, options) : helperMissing.call(depth0, "localized", "label_created_$_by_$", depth0.created_on, depth0.created_by, options)))
    + " ";
  return buffer;
  }

function program16(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_created_by_$_on_$", depth0.created_by, depth0.created_on, options) : helperMissing.call(depth0, "localized", "label_created_by_$_on_$", depth0.created_by, depth0.created_on, options)))
    + " ";
  return buffer;
  }

function program18(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.createdRelative, {hash:{},inverse:self.program(21, program21, data),fn:self.program(19, program19, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  return buffer;
  }
function program19(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_created_$", depth0.created_on, options) : helperMissing.call(depth0, "localized", "label_created_$", depth0.created_on, options)))
    + " ";
  return buffer;
  }

function program21(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_created_on_$", depth0.created_on, options) : helperMissing.call(depth0, "localized", "label_created_on_$", depth0.created_on, options)))
    + " ";
  return buffer;
  }

  buffer += "<div class=\"comment-text\"> <span> ";
  stack1 = helpers['if'].call(depth0, depth0.isCompleted, {hash:{},inverse:self.program(12, program12, data),fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </span> </div>";
  return buffer;
  });
});
define('views/TaskDetail/Comments/TaskDetailInfoView',[

  'application/runtime',

  'vendor/moment',

  'wunderbits/helpers/date',

  'models/TaskModel',

  'collections/TaskCollection',
  'collections/ListCollection',
  'collections/ContactCollection',

  'wunderbits/WBView',

  'template!detailview/detailInfo'

], function (
  runtime,
  moment,
  DateHelper,
  TaskModel,
  TaskCollection, ListCollection, ContactCollection,
  WBView,
  detailInfoTemplate,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;

  var _super = WBView.prototype;

  return WBView.extend({

    'template': detailInfoTemplate,

    'className': 'detail-info',

    'initialize': function () {

      var self = this;

      self.friends = new ContactCollection('/contacts/friends');
      self.lists = new ListCollection('/lists/all');

      _super.initialize.apply(self, arguments);
    },

    'renderData': {

      'isShared': undefined,
      'isCompleted': undefined,

      'createdRelative': undefined,
      'created_by': undefined,
      'created_on': undefined,

      'completedRelative': undefined,
      'completed_by': undefined,
      'completed_on': undefined
    },

    'formatData': function (data) {

      var self = this;
      data = _super.formatData.call(self, data);

      var list = self.lists.get(self.model.attributes.list_id);
      data.isShared = list && list.isShared();
      data.isCompleted = self.model.isCompleted();

      var key = data.isCompleted ? 'completed' : 'created';
      var relativeBoolKey = key + 'Relative';
      var idKey = key + '_by_id';
      var titleKey = key + '_by';
      var dateKey = key + '_on';

      var personId = self.model.attributes[idKey] || runtime.user.id;
      var person = personId === runtime.user.id ? runtime.user : self.friends.get(personId);

      // if we can't get a person from our friends collection, treat the item as not shared, in order to not display an empty name
      if (person) {
        data[titleKey] = person.escape('name');
      }
      else {
        data.isShared = false;
      }

      // grab only what we need, created_on or completed_on and createdRelative or completedRelative
      var humanDates = self.model.getHumanFormattedDates();
      data[dateKey] = humanDates[dateKey];
      data[relativeBoolKey] = humanDates[relativeBoolKey];

      return data;
    },

    'render': function (options) {

      var self = this;

      self.nameWidthIsSet = new $.Deferred();

      options && _.extend(self.options, options);
      self.model = options && options.model || self.model;
      // make sure to bind this after we have started our first render, to make sure that it doesn't execute before the this view has received a model to work with
      if (!self.onNextMinuteBind) {
        self.onNextMinuteBind = self.bindTo(runtime, 'time:nextMinute', self.render);
      }

      self.initModelBindings();

      self.$el.css('visibility', 'hidden');

      _super.render.call(self, self.formatData(self.renderData));

      self.defer(self.setNameMaxWidth, self);

      $.when(self.nameWidthIsSet).then(function () {

        self.$el.removeAttr('style');
      });

      return self;
    },

    'initModelBindings': function () {

      var self = this;

      if (!self.model) {
        throw new Error('Cannot init model bindings without model');
      }

      self.modelChangeCompletedBind && self.unbindFrom(self.modelChangeCompletedBind);
      self.listShareBind && self.unbindFrom(self.listShareBind);

      self.modelChangeCompletedBind = self.bindTo(self.model, 'change:completed', self.render);

      var list = self.lists.get(self.model.attributes.list_id);
      self.bindTo(list, 'change:share_id', self.render);
    },

    'setNameMaxWidth': function () {

      var self = this;

      var localisationKey = self.$('text').attr('rel');
      var isNameBeforeTime = localisationKey.indexOf('by_$_on_$') > 0;
      var $nameToken = isNameBeforeTime ? self.$('.token_0'): self.$('.token_1');

      $nameToken.addClass('hidden');

      var $detailInfo = self.$('text').children(0);
      var copyWidth = $detailInfo.width();
      var elWidth = self.$el.width();
      var offset = isNameBeforeTime ? 165 : 65;

      // the 25 here is really just the margin for error
      $nameToken.css('max-width', (elWidth - copyWidth - offset - 25) + 'px').removeClass('hidden');

      self.nameWidthIsSet.resolve();
    }
  });
});
define('templates/detailview/commentItem',['vendor/handlebars'], function(H) {
var name = 'detailview/commentItem';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<div class=\"picture\"></div> <span class=\"comment-author\"> ";
  if (stack1 = helpers.author) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.author; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + " </span> <span class=\"comment-time\"> ";
  if (stack1 = helpers.time_stamp) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.time_stamp; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + " </span> <div class=\"comment-text\">";
  if (stack1 = helpers.comment) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.comment; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</div> ";
  return buffer;
  });
});
define('views/TaskDetail/Comments/TaskDetailCommentView',[

  'application/runtime',

  'views/AvatarView',

  'wunderbits/WBViewPresenter',
  'wunderbits/helpers/date',

  'vendor/moment',

  'wunderbits/mixins/LinkingViewMixin',
  'wunderbits/mixins/EmailLinkingViewMixin',
  'wunderbits/mixins/TaggingViewMixin',
  'wunderbits/mixins/UnicodeEmojiViewMixin',

  'template!detailview/commentItem'

], function (
  runtime,
  AvatarView,
  WBViewPresenter,
  DateHelper,
  moment,
  LinkingViewMixin, EmailLinkingViewMixin, TaggingViewMixin, UnicodeEmojiViewMixin,
  commentItemTemplate,
  undefined
) {

  

  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'className': 'comment',

    'tagName': 'li',

    'template': commentItemTemplate,

    'renderData': {
      'author': undefined,
      'time_stamp': undefined,
      'comment': undefined
    },

    'formatData': function (data) {

      var self = this;
      var attributes = self.model && self.model.attributes;

      if (attributes) {
        data.author = attributes.author.name;
        data.time_stamp = self.getTimestamp();

        var text = attributes.text || '';

        if (self.options.wrap === false) {
          data.comment = text.split(/[\r\n\t]+/).join(' ');
        }
        else {
          data.comment = text;
        }
      }

      return data;
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      LinkingViewMixin.applyTo(self);
      EmailLinkingViewMixin.applyTo(self);
      TaggingViewMixin.applyTo(self);
      UnicodeEmojiViewMixin.applyTo(self);

      self.model && self.bindTo(self.model, 'change', self.renderTimestamp);
    },

    'render': function () {

      var self = this;

      if (!self.model) {
        return self;
      }

      _super.render.call(self, self.renderData);

      var authorId;

      if (self.model) {
        var author = self.model.attributes.author;
        authorId = author.id;
        var authorAvatar = author.avatar;
        self.renderAvatar(authorId, authorAvatar);
      }

      if (authorId && authorId === runtime.user.id) {
        self.$el.addClass('active-user');
      }

      var $commentText = self.$('.comment-text');
      self.renderTags($commentText);
      self.renderEmails($commentText);
      self.renderLinks($commentText);
      self.renderEmoji($commentText);

      // muy importante!
      self.$el.attr('rel', self.model.id);

      self.$el.attr('data-server-data', self.model.attributes.created_at);
      self.$el.attr('data-local-date', self.model.attributes.local_created_at);

      return self;
    },

    'getTimestamp': function () {

      var self = this;
      var attributes = self.model.attributes;
      var date = attributes.created_at ? DateHelper.convertServerTimeToLocalTime(attributes.created_at) : attributes.local_created_at;
      var timestamp;

      if (!attributes.online_id) {
        timestamp =  runtime.language.getText('upload_file_not_synced_yet');
      }
      else {
        timestamp = moment(date).from(moment().utc());
      }

      return timestamp;
    },

    'renderTimestamp': function () {

      var self = this;
      self.$('.comment-time').html(self.getTimestamp());
    },

    'renderAvatar': function (id, avatarUrl) {

      var self = this;

      self.avatarView = self.avatarView || self.addSubview(new AvatarView({
        'listId':runtime.listId,
        'url':avatarUrl
      }), 'avatarView');

      self.$('.picture').html(self.avatarView.render({
        'id': id,
        'size': 'medium'
      }).$el);
    }
  });
});
define('views/TaskDetail/Comments/Controllers/InputController',[

  'application/runtime',

  'wunderbits/WBViewController',

  'collections/CommentsCollection',

  'wunderbits/helpers/date',
  'wunderbits/helpers/selection',
  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/strings'

], function (
  runtime,
  WBViewController,
  CommentsCollection,
  dateHelper,
  selectionHelper, keys, Strings,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var lastLocalCreatedAt;

  return WBViewController.extend({

    'state': undefined,

    'implements': {

      'focus:textarea': 'setFocus',
      'blur:textarea': 'removeFocus',
      'keyup:textarea': 'checkTextareaHeight',
      'keydown:textarea': 'handleKeys',
      'click:comment-last': 'setInputFocus'
    },

    'handleKeys': function (ev) {

      var self = this;
      var $input = self.view.$('textarea');
      var value = $.trim($input.val());

      // nothing when showing the popover or if the field is empty
      if (runtime.focus === 'goProPopover') {
        return ev.preventDefault();
      }

      // skip non-enter keys
      if (ev.which !== keys.enter) {
        return;
      }
      // and shift-enter
      else if (ev.shiftKey) {
        return;
      }

      // cancel effects of the enter key
      ev.preventDefault();

      // need to check the case for empty val with spaces
      if (value.length > 0 && !self.view.model.isCompleted()) {

        var now = dateHelper.getServerNowWithMilliseconds();

        var inputText = Strings.emojiTokensToUnicode(value);

        var collection = new CommentsCollection('/comments/all');
        collection.add({
          'text': inputText,
          'channel_id': self.view.model.id,
          'local_created_at': now,
          'author': {
            'id': runtime.user.id,
            'name': runtime.user.attributes.name
          }
        },
        {
          'task': self.view.model,
          'comment': $input.val(),
          'userAdded': true
        });

        lastLocalCreatedAt = now;
        _.delay(self.resetInput, 1);

        runtime.trigger('commentAdded');
        runtime.trigger('detail:scrollToEnd', null, true);

        if (!self.isAllowedToComment()) {

          self.view.openGetProPopover();
        }

        self.defer(self.checkTextareaHeight);
      }
    },

    'checkTextareaHeight': function () {

      var self = this;
      var height = self.view.$('.input-fake').height();
      if (height !== self.lastReportedHeight) {
        self.view.trigger('change:height', height);
        self.lastReportedHeight = height;
      }
    },

    'resetInput': function () {

      var self = this;
      self.view.$('.comments-body').css('margin-bottom', 0);
      self.view.getSubview('textarea').setContent('');
    },

    'adjustBottom': function (offset) {

      var self = this;
      self.view.$('.comments-body').css({
        'margin-bottom': (offset - 30) + 'px'
      });
    },

    'isAllowedToComment': function () {

      return runtime.user.trialModel.canAddComment();
    },

    'setInputFocus': function () {

      runtime.trigger('detail:scrollToEnd', true);
    },

    'setFocus' : function (e) {

      var self = this, view = self.view;
      var currentRoute = runtime.currentRoute();

      runtime.trigger('popover:close');

      self.defer(function () {

        if (!self.isAllowedToComment()) {

          self.stopEventFully(e);
          view.openGetProPopover();
          return;
        }
        else {

          view.$('.input-fake').addClass('focus');
          runtime.trigger('focus:set', 'comments');
        }
      });


      if (currentRoute.indexOf('comments/edit') === -1) {

        runtime.trigger('route:tasks/' + view.model.id + '/comments/edit', {
          'trigger': false
        });
      }
    },

    'removeFocus' : function () {

      var self = this;

      // after the focus is set, to detail, the focus can change to the browser
      self.defer(function () {

        self.view.$('.input-fake').removeClass('focus');

        if (runtime.currentRoute() === 'tasks/' + self.view.model.id + '/comments/edit') {
          runtime.trigger('route:tasks/' + self.view.model.id, { trigger: false });
        }
      });
    }
  });
});
define('templates/detailview/comments',['vendor/handlebars'], function(H) {
var name = 'detailview/comments';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, options, self=this, functionType="function", escapeExpression=this.escapeExpression, helperMissing=helpers.helperMissing;

function program1(depth0,data) {
  
  
  return " has-comments ";
  }

  buffer += "<div class=\"comments-bottom ";
  stack1 = helpers['if'].call(depth0, depth0.hasComments, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"> <div class=\"last-comment hidden\"> <span class=\"unread-count hidden\">";
  if (stack1 = helpers.unreadCount) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.unreadCount; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</span> </div> <div class=\"comments-add\"> <div class=\"input-fake\" /> <a data-path=\"preferences/account/pro\" class=\"button big green buy hidden\"> <strong>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_label_go_pro_to_comment", options) : helperMissing.call(depth0, "localized", "button_label_go_pro_to_comment", options)))
    + "</strong> </a> </div> </div>";
  return buffer;
  });
});
define('styles/detailview/_comments',[],function() { return {'name': 'detailview/_comments', 'styles': "#wunderlist-base .comments-bottom{position:absolute;z-index:9003;bottom:35px;right:0;left:0;background:#e9e9e9 url(\"images/textures/detail.png\");} #wunderlist-base .comments-bottom.hasShadow{-webkit-box-shadow:0 -2px 3px rgba(0,0,0,0.1),inset 0 1px 0 rgba(0,0,0,0.2),inset 0 2px 0 rgba(255,255,255,0.5);box-shadow:0 -2px 3px rgba(0,0,0,0.1),inset 0 1px 0 rgba(0,0,0,0.2),inset 0 2px 0 rgba(255,255,255,0.5)} #wunderlist-base .comments-bottom .unread-count{position:absolute;right:10px;top:10px;font-weight:bold;color:#fff;display:none;-webkit-border-radius:5px;border-radius:5px;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #ca1c18), color-stop(1, #e83a31));background-image:-webkit-linear-gradient(top, #ca1c18 0, #e83a31 100%);background-image:-moz-linear-gradient(top, #ca1c18 0, #e83a31 100%);background-image:-o-linear-gradient(top, #ca1c18 0, #e83a31 100%);background-image:-ms-linear-gradient(top, #ca1c18 0, #e83a31 100%);background-image:linear-gradient(top, #ca1c18 0, #e83a31 100%);padding:0 4px;-webkit-box-shadow:inset 0 1px 1px rgba(115,4,0,0.45);box-shadow:inset 0 1px 1px rgba(115,4,0,0.45)} #wunderlist-base .comments-bottom .button{padding:9px 20px !important} #wunderlist-base .comments-add{padding:10px 10px 0 10px;} #wunderlist-base .comments-add .input-fake{-webkit-border-radius:3px;border-radius:3px;padding:4px 6px} #wunderlist-base .spinner{opacity:1;-ms-filter:none;filter:none;height:50px;position:relative;} #wunderlist-base .spinner.mid{top:40%} #wunderlist-base .spinner span{top:10%} #wunderlist-base .spinner .loading-message{position:absolute;text-align:center;width:100%;height:50px;opacity:1;-ms-filter:none;filter:none;display:block;margin-top:45px;} #wunderlist-base .spinner .loading-message text{color:#bdbcbb !important} #wunderlist-base .cover{width:100%;z-index:10;height:28px;display:block;-webkit-box-shadow:0 2px 3px rgba(0,0,0,0.1);box-shadow:0 2px 3px rgba(0,0,0,0.1);position:absolute;z-index:9995;background-image:url(\"images/textures/detail.png\");-webkit-box-shadow:0 2px 3px rgba(0,0,0,0.1);box-shadow:0 2px 3px rgba(0,0,0,0.1);border-top:1px solid #f1f1f1;border-bottom:1px solid rgba(0,0,0,0.2);} #wunderlist-base .cover::after{content:'';width:100%;margin-top:28px;position:absolute;background:#c0bfbe;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(255,255,255,0.35)), color-stop(1, rgba(255,255,255,0.35)));background-image:-webkit-linear-gradient(top, rgba(255,255,255,0.35) 0, rgba(255,255,255,0.35) 100%);background-image:-moz-linear-gradient(top, rgba(255,255,255,0.35) 0, rgba(255,255,255,0.35) 100%);background-image:-o-linear-gradient(top, rgba(255,255,255,0.35) 0, rgba(255,255,255,0.35) 100%);background-image:-ms-linear-gradient(top, rgba(255,255,255,0.35) 0, rgba(255,255,255,0.35) 100%);background-image:linear-gradient(top, rgba(255,255,255,0.35) 0, rgba(255,255,255,0.35) 100%);background-repeat:no-repeat;padding:0 50px;margin-left:-55px} #wunderlist-base .cover:before{content:'';z-index:9998;position:absolute;left:0;bottom:0;width:100%;height:28px;top:0;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(191,191,191,0.24)), color-stop(1, rgba(140,140,140,0.24)));background-image:-webkit-linear-gradient(top, rgba(191,191,191,0.24) 0, rgba(140,140,140,0.24) 100%);background-image:-moz-linear-gradient(top, rgba(191,191,191,0.24) 0, rgba(140,140,140,0.24) 100%);background-image:-o-linear-gradient(top, rgba(191,191,191,0.24) 0, rgba(140,140,140,0.24) 100%);background-image:-ms-linear-gradient(top, rgba(191,191,191,0.24) 0, rgba(140,140,140,0.24) 100%);background-image:linear-gradient(top, rgba(191,191,191,0.24) 0, rgba(140,140,140,0.24) 100%)} #wunderlist-base .cover .icon{position:absolute;left:50%;margin-left:-8px;top:9px;opacity:1;-ms-filter:none;filter:none;display:block;z-index:99999} #wunderlist-base .comments-list .state-info,#wunderlist-base .last-comment .state-info,#wunderlist-base .comments-main .state-info{display:none} #wunderlist-base .comments-list.has-comments,#wunderlist-base .last-comment.has-comments,#wunderlist-base .comments-main.has-comments{background:url(\"images/textures/divider.png\") center top repeat-x;padding-top:10px;} #wunderlist-base .comments-list.has-comments .state-info,#wunderlist-base .last-comment.has-comments .state-info,#wunderlist-base .comments-main.has-comments .state-info{display:block;height:18px;width:100%;text-align:center;margin-top:-18px;} #wunderlist-base .comments-list.has-comments .state-info .offline-bolt,#wunderlist-base .last-comment.has-comments .state-info .offline-bolt,#wunderlist-base .comments-main.has-comments .state-info .offline-bolt{display:inline-block;padding:0 1px;background-color:#e9e9e9} #wunderlist-base .comments-list.has-comments .state-info .request-page,#wunderlist-base .last-comment.has-comments .state-info .request-page,#wunderlist-base .comments-main.has-comments .state-info .request-page{background:#e9e9e9 url(\"images/textures/detail.png\");display:inline-block;text-align:left;color:#bdbcbb;text-shadow:0 1px 0 #fff;padding:0 5px;cursor:pointer} #wunderlist-base .comments-list li,#wunderlist-base .last-comment li,#wunderlist-base .comments-main li{position:relative;overflow:hidden;padding:10px 20px 10px 50px;text-shadow:0 1px 0 #fff;min-height:34px;list-style:none;} #wunderlist-base .comments-list li:last-child,#wunderlist-base .last-comment li:last-child,#wunderlist-base .comments-main li:last-child{padding-bottom:0} #wunderlist-base .comments-list li .picture,#wunderlist-base .last-comment li .picture,#wunderlist-base .comments-main li .picture{position:absolute;left:10px;top:11px} #wunderlist-base .comments-list li .comment-author,#wunderlist-base .last-comment li .comment-author,#wunderlist-base .comments-main li .comment-author{font-weight:bold;max-width:100px;display:inline-block;vertical-align:top;height:16px;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis} #wunderlist-base .comments-list li .comment-time,#wunderlist-base .last-comment li .comment-time,#wunderlist-base .comments-main li .comment-time{color:#bdbcbb;font-weight:normal;} #wunderlist-base .comments-list li .comment-time:before,#wunderlist-base .last-comment li .comment-time:before,#wunderlist-base .comments-main li .comment-time:before{content:' • '} #wunderlist-base .comments-list li .comment-text,#wunderlist-base .last-comment li .comment-text,#wunderlist-base .comments-main li .comment-text{font-weight:400;line-height:18px;word-break:break-word;margin-top:3px} #wunderlist-base .comments-list li .comment-text,#wunderlist-base .last-comment li .comment-text,#wunderlist-base .comments-main li .comment-text,#wunderlist-base .comments-list li span.emoji,#wunderlist-base .last-comment li span.emoji,#wunderlist-base .comments-main li span.emoji{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text;} #wunderlist-base .comments-list li .comment-text a,#wunderlist-base .last-comment li .comment-text a,#wunderlist-base .comments-main li .comment-text a,#wunderlist-base .comments-list li span.emoji a,#wunderlist-base .last-comment li span.emoji a,#wunderlist-base .comments-main li span.emoji a{color:#4597df !important} #wunderlist-base .comments-list li.task-info,#wunderlist-base .last-comment li.task-info,#wunderlist-base .comments-main li.task-info{height:37px !important;margin-top:0 !important;width:100%;z-index:9998;background:#e9e9e9 url(\"images/textures/detail.png\");position:absolute;top:0;} #wunderlist-base .comments-list li.task-info .comment-text,#wunderlist-base .last-comment li.task-info .comment-text,#wunderlist-base .comments-main li.task-info .comment-text{font-weight:400;line-height:90px} #wunderlist-base .comments-list li.task-info + li,#wunderlist-base .last-comment li.task-info + li,#wunderlist-base .comments-main li.task-info + li{margin-top:40px} #wunderlist-base .last-comment li{list-style:none;cursor:pointer;padding-bottom:0;} #wunderlist-base .last-comment li .comment-text{max-width:300px;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis;display:block} #wunderlist-base .has-comments .unread-count{display:block} #wunderlist-base .has-comments li.update{padding:0;text-align:center;height:4px;margin-top:4px;} #wunderlist-base .has-comments li.update .comment-text{text-align:center;position:absolute;right:0;left:0;top:-8px;color:#777;font-size:12px;} #wunderlist-base .has-comments li.update .comment-text:before{background:url(\"images/textures/divider.png\") center top repeat-x;content:'';z-index:9995;height:12px;width:100%;position:absolute;top:44px;left:0} #wunderlist-base .has-comments li.update .comment-text span{padding:0 5px;z-index:9999;position:relative} " }; });
define('views/TaskDetail/Comments/TaskDetailCommentsView',[

  'application/runtime',

  'wunderbits/helpers/keycodes',

  'views/AvatarView',
  'views/TaskDetail/Comments/TaskDetailCommentView',
  'views/Popovers/GetProPopoverView',
  'views/TaskDetail/Comments/Controllers/InputController',
  'wunderbits/WBExpandableTextareaView',

  'collections/CommentsCollection',

  'vendor/moment',

  'wunderbits/WBViewPresenter',

  'template!detailview/comments',
  'style!detailview/_comments',

], function (
  runtime,
  keys,
  AvatarView,
  TaskDetailCommentView, GetProPopoverView,
  InputController,
  WBExpandableTextareaView,
  CommentsCollection,
  moment,
  WBViewPresenter,
  commentsTemplate,
  commentsStyle,
  undefined
) {

  

  var _ = runtime._;
  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'className': 'comments',

    'styles': [commentsStyle],

    'implements': [InputController],

    'template': commentsTemplate,

    'emits': {
      'focus textarea': 'focus:textarea',
      'blur textarea': 'blur:textarea',
      'keydown textarea': 'keydown:textarea',
      'keyup textarea': 'keyup:textarea',
      'click .last-comment': 'click:comment-last',
      // 'click textarea': 'click:textarea'
    },

    'observes': {
      'runtime': {
        'lastComment': 'renderLastComment',
        'time:nextMinute': 'renderLastComment'
      }
    },

    'renderData': {
      'hasComments': undefined,
      'isCompleted': undefined,
      'unreadCount': undefined,
      'hasUnreadComments': undefined,
      'commentsUnreachable': undefined
    },

    'formatData': function (data) {

      var self = this;
      data.hasComments = self.model.attributes.hasComments;
      data.isCompleted = self.model.attributes.completed;
      data.unreadCount = self.model.attributes.unreadCount;
      data.hasUnreadComments = data.unreadCount > 0;
      data.commentsUnreachable = !self.commentsReachable;

      return data;
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);
      self.debounceScroll = _.debounce(self.scrollToEnd, 250, true);
      self.debounceScrollAfter = _.debounce(self.scrollToEnd, 250);
    },

    'render': function (options) {

      var self = this;
      self.model = options && options.model || self.model;

      if (!self.model || runtime.feature_comments_disabled) {

        return self;
      }

      self.bindTo(self.model, 'change:unreadCount', self.updateUnreadCount);
      self.bindTo(self.model, 'change:completed', self.updateAddEnabled);

      _super.render.call(self, self.formatData(self.renderData));

      var textarea = self.addSubview(new WBExpandableTextareaView({
        'maxLength': 1000,
        'lineHeight': 19,
        'placeholderKey': 'placeholder_add_comments'
      }), 'textarea');
      self.$('.input-fake').prepend(textarea.render().el);
      self.$('.last-comment').addClass('hidden');

      self.updateUnreadCount();
      self.updateAddEnabled();

      return self;
    },

    'updateAddEnabled': function () {

      var self = this;
      var isCompleted = self.model.isCompleted();
      self.getSubview('textarea').setEnabled(!!!isCompleted);
    },

    'handlePageRequestFail': function () {

      var self = this;
      var $error = self.$('.error');
      $error.removeClass('hidden');

      _.delay(function () {

        if (!self.destroyed) {

          $error.addClass('hidden');
        }
      }, 10000);
    },

    'renderLastComment': function (model) {

      var self = this;

      if (model) {
        self.lastCommentModel = model;
      }

      if (self.lastCommentModel) {

        self.lastComment && self.lastComment.destroy();
        self.lastComment = self.addSubview(new TaskDetailCommentView({
          'model': self.lastCommentModel,
          'wrap': false
        }));
        self.$('.last-comment').append(self.lastComment.render().el);
      }
    },

    'openGetProPopover': function (e) {

      var self = this;

      if (e) {
        e.preventDefault();
        e.stopPropagation();
      }

      if (self.getProPopover) {
        return;
      }

      self.defer(function(){
        runtime.trigger('focus:set', 'goProPopover');
      });

      var settings = {
        'benefit': 'comments',
        'target': self.$('.comments-bottom'),
        'margin': 0,
        'returnRoute': 'tasks/' + self.model.id,
        'hideNoAssign': true,
        'ignoredElements':[self.$('textarea')],
        'onClose': function () {
          self.destroySubview(self.getProPopover);
          self.getProPopover = null;
        }
      };

      self.getProPopover = self.addSubview(new GetProPopoverView(settings));
      self.getProPopover.toggle('open', settings);
      self.preventInputBlur = true;

      runtime.trigger('analytics:ProAccounts:startProFunnel', 'detailComments');
      runtime.trigger('analytics:ProAccounts:openGetProPopover', 'detailComments');
    },

    'updateUnreadCount': function () {

      var self = this;
      var unreadCount = self.model.attributes.unreadCount;
      var $unreadContainer = self.$('.unread-count');

      if (unreadCount > 0) {
        $unreadContainer.toggleClass('hidden', false).html(unreadCount);
      }
      else {
        $unreadContainer.toggleClass('hidden').html('');
      }
    }
  });
});
define('views/TaskDetail/Comments/Controllers/CommentListController',[

  'application/runtime',

  'wunderbits/WBViewController',

  'collections/CommentsCollection',

  'wunderbits/helpers/date'

], function (
  runtime,
  WBViewController,
  CommentsCollection,
  dateHelper,
  undefined
) {

  

  var _ = runtime._;

  return WBViewController.extend({

    'state': undefined,

    'implements': {

      'click:requestPage':'requestNextPage'
    },

    'getBeforeId': function () {

      var self = this;
      var models = _.clone(self.view.collection.models);
      models.sort(function (a, b) {

        var aId = a.attributes.online_id;
        var bId = b.attributes.online_id;
        return aId < bId ? -1 : aId > bId ? 1 : 0;
      });

      return models[0].attributes.online_id;
    },

    'requestNextPage': function () {

      var self = this;
      self.view.collection.sort();
      var oldestModel = _.first(self.view.collection.models);
      var beforeId = oldestModel && self.getBeforeId();
      self.view.$('.spinner').removeClass('hidden');

      if (!beforeId) {
        self.view.$('.spinner').addClass('hidden');
        return false;
      }

      var data = {
        'taskId': self.view.model.id,
        'channel_id': self.view.model.attributes.online_id,
        'channel_type': 'tasks',
        'beforeId': beforeId,
        'fetchingOnDemand': true
      };

      runtime.trigger('requestNextCommentsPage', data);
    }
  });
});
define('templates/detailview/commentList',['vendor/handlebars'], function(H) {
var name = 'detailview/commentList';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "comment_load_earlier", options) : helperMissing.call(depth0, "localized", "comment_load_earlier", options)))
    + " ";
  return buffer;
  }

function program3(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "benefit_comments_title", options) : helperMissing.call(depth0, "localized", "benefit_comments_title", options)))
    + " ";
  return buffer;
  }

  buffer += "<div class=\"state loading spinner mid\"><span class=\"dark\"/> <div class=\"loading-message\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_loading", options) : helperMissing.call(depth0, "localized", "label_loading", options)))
    + "</div> <div class=\"error hidden\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "comment_request_failed", options) : helperMissing.call(depth0, "localized", "comment_request_failed", options)))
    + "</div> </div> <div class=\"state-info\"> <span class=\"fetch-error hidden\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "comment_request_failed", options) : helperMissing.call(depth0, "localized", "comment_request_failed", options)))
    + "</span> <span class=\"request-page\"> ";
  stack2 = helpers['if'].call(depth0, depth0.hasMoreComments, {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </span> <span class=\"icon offline-bolt hidden\"></span> </div> <ul class=\"comments-list\"></ul>";
  return buffer;
  });
});
define('views/TaskDetail/Comments/TaskDetailCommentListView',[

  'application/runtime',

  'views/TaskDetail/Comments/TaskDetailCommentView',
  'views/TaskDetail/Comments/Controllers/CommentListController',

  'collections/CommentsCollection',
  'collections/AssignableCollection',

  'wunderbits/WBViewPresenter',
  'wunderbits/helpers/date',

  'vendor/moment',

  'template!detailview/commentList',
  'style!detailview/_comments'

], function (
  runtime,
  TaskDetailCommentView, CommentsListController,
  CommentsCollection,
  AssignableCollection,
  WBViewPresenter,
  dateHelper,
  moment,
  listTemplate,
  commentsStyle,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var _super = WBViewPresenter.prototype;

  return WBViewPresenter.extend({

    'template': listTemplate,

    'styles': [commentsStyle],

    'implements': [CommentsListController],

    'className': 'comments-main',

    'emits': {
      'click .request-page': 'click:requestPage'
    },

    'observes': {
      'runtime': {
        'nextPageLoaded': 'handleLoadedPage',
        'commentsPage:fail': 'handlePageRequestFail',
        'time:nextMinute': 'updateTimestamps'
      }
    },

    'renderData': {
      'hasMoreComments': undefined
    },

    'formatData': function (data) {

      var self = this;
      data = _super.formatData.call(self, data);

      data.hasMoreComments = self.model.attributes.allCommentsLoaded !== true;

      return data;
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.debounceRemoveLoader = _.debounce(self.removeLoader, 100);
      self.debounceShowLoader = _.debounce(self.showLoader, 100, true);
      self.isOnline = true;

      // when we come back online update when they were added
      self._onlineHandler = self.bindTo(runtime.env, 'online', function () {

        self.isOnline = true;
        self.renderOnlineState();
      });

      self._offlineHandler = self.bindTo(runtime.env, 'offline', function () {

        self.isOnline = false;
        self.delay(self.renderOfflineState, 500);
      });
    },

    'render': function (options) {

      var self = this;

      if (runtime.feature_comments_disabled) {
        return self;
      }

      self.model && self.unbindFromTarget(self.model);
      self.collectionBind && self.unbindFrom(self.collectionBind);
      self.model = options && options.model;

      self.$el.removeClass('has-comments');

      _super.render.call(self, self.formatData(self.renderData));

      self.setupCollection();

      self.adding = false;

      return self;
    },

    'setupCollection': function () {

      var self = this;
      var collectionDeferred = self.deferred();

      self.collection = new CommentsCollection('/tasks/' + self.model.id + '/comments');
      self.bindTo(runtime, 'comments:ready', function () {

        collectionDeferred.resolve();
      });

      self.when(collectionDeferred).done(function () {

        !self.adding && self.removeLoader();

        if (self.collection.models.length) {

          self.$el.addClass('has-comments');
          self.renderComments();
        }

        // listen for new comments
        self.collectionBind = self.bindTo(self.collection, 'add', function (comment, collection, options) {

          self.adding = true;
          self.debounceRemoveLoader();
          self.addedComment(comment, collection, options);
          // check bounds ensures that the detail view renders the correct
          // layout based upon the scrolll container
          runtime.trigger('detail:checkBounds');
          runtime.trigger('lastComment', _.last(self.collection.models));
        });

        // show or hide last comment depending on scroll position
        runtime.trigger('detail:checkBounds');
      }, self);
    },

    'showLoader': function () {

      this.$('.spinner').removeClass('hidden');
    },

    'removeLoader': function () {

      var self = this;
      self.$('.spinner').addClass('hidden');
      self.$('.fetch-error').addClass('hidden');
    },

    'addedComment': function (comment, collection, options) {

      var self = this;
      // don't rerender comments
      if (self.getSubview(comment.id)) {
        return;
      }

      self.$el.addClass('has-comments');

      if (options && options.addBefore) {

        var $scrollContainer = self.$el.closest('.body');
        var currentScroll = $scrollContainer.scrollTop();

        var $commentEl = self.renderSingleComment(comment).$el;
        $commentEl.hide().fadeIn(750);

        var commentHeight = $commentEl.outerHeight();
        // this maintains the scrollbar when pagination fires and prepends 25 comments
        $scrollContainer.scrollTop(currentScroll + commentHeight);
      }
      else if (options && options.onDemand) {

        self.renderSingleComment(comment);
        runtime.trigger('commentList:debounceScroll');
      }
      else {

        self.renderSingleComment(comment, options);
      }
    },

    'renderSingleComment': function (model, options) {

      var self = this;
      var $ol = self.$('.comments-list');
      var renderedIds = _.map($ol.children('li'), function (el) {
        return $(el).attr('rel');
      });

      self.collection.sort();

      // the taskview
      var commentFrag = document.createDocumentFragment();
      var commentView = self.addSubview(new TaskDetailCommentView({'model': model}), model.id);
      commentView.render();
      commentFrag.appendChild(commentView.el);

      if (options && options.userAdded) {
        $ol.append(commentFrag);
        return;
      }

      // when task has a position!!
      var beforeId = null;
      var afterId = null;
      var models = _.clone(self.collection.models);

      var thisModelIdx, searchModel;
      for (var i = 0, len = models.length; i < len; i++) {
        searchModel = models[i];
        if (searchModel.id === model.id) {
          thisModelIdx = i;
          i = len;
        }
      }

      // find ids of rendered! before and after comments
      var prevIdx = thisModelIdx - 1;
      var afterIdx = thisModelIdx + 1;
      var candidateId;

      while (thisModelIdx && prevIdx >= 0 && !beforeId) {
        candidateId = models[prevIdx] && models[prevIdx].id;
        if (renderedIds.indexOf(candidateId) !== -1) {
          beforeId = candidateId;
        }
        else {
          --prevIdx;
        }
      }

      while (thisModelIdx < models.length - 1 && afterIdx < models.length && !afterId) {
        candidateId = models[afterIdx] && models[afterIdx].id;
        if (renderedIds.indexOf(candidateId) !== -1) {
          afterId = candidateId;
        }
        else {
          ++afterIdx;
        }
      }

      // check for models in the DOM
      var $beforeEl = beforeId && $ol.find('li[rel="' + beforeId + '"]');
      var $afterEl = afterId && $ol.find('li[rel="' + afterId + '"]');
      var before = $beforeEl && $beforeEl.size();
      var after = $afterEl && $afterEl.size();

      if ((before && !after) || (before && after)) {
        $beforeEl.after(commentFrag);
      }
      else if (!before && after) {
        $afterEl.before(commentFrag);
      }
      else {
        var isNewest = moment(model.attributes.created_at).valueOf() >= moment(models[models.length -1].attributes.created_at).valueOf();
        $ol[isNewest ? 'append' : 'prepend'](commentFrag);
      }

      return commentView;
    },

    'renderComments': function () {

      var self = this;

      if (!self.destroyed && self.collection) {

        self.collection.sort();

        var docFrag = document.createDocumentFragment();

        for (var i=0, len = self.collection.models.length; i < len; i++) {

          var comment = self.collection.models[i];
          var commentView = self.addSubview(new TaskDetailCommentView({'model': comment}), comment.id);
          docFrag.appendChild(commentView.render().el);
        }

        runtime.trigger('lastComment', _.last(self.collection.models));
        self.$('.comments-list').html(docFrag);
      }
    },

    'handleLoadedPage': function (data) {

      var self = this;
      self.removeLoader();

      if (!data.length) {
        self.$('.request-page').html(runtime.language.getLabel('benefit_comments_title').toString());
        self.renderLabels();
      }
    },

    'renderPageRequestFail': function () {

      var self = this;
      self.removeLoader();
      self.$('.fetch-error').removeClass('hidden');
      self.$('.offline-bolt').removeClass('hidden');
      self.$('.request-page').html('Retry');
    },

    'renderOfflineState': function () {

      var self = this;
      self.removeLoader();
      self.$('.offline-bolt').removeClass('hidden');
      self.$('.request-page').addClass('hidden');
    },

    'renderOnlineState': function () {

      var self = this;
      self.removeLoader();
      self.$('.offline-bolt').addClass('hidden');
      self.$('.request-page').removeClass('hidden');
    },

    'updateTimestamps': function () {

      var self = this;

      var models = self.collection && self.collection.models;
      var length = models && models.length;

      if (length) {

        for (var i = 0; i < length; i++) {
          self.getSubview(models[i].id).renderTimestamp();
        }
      }
    },

    'scrollToEnd': function (shouldAnimate) {

      runtime.trigger('detail:scrollToEnd', shouldAnimate);
    }
  });
});
define('views/TaskDetail/Controllers/TaskDetailClickController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/date',
  'helpers/Animator',

  'wunderbits/WBViewController'

], function (
  runtime,
  Keycodes, DateHelper, Animator,
  WBViewController,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;

  var _super = WBViewController.prototype;

  return WBViewController.extend({

    'implements': {

      'click:return:top': 'scrollToTop',

      'toggle:view': 'toggleDetailView',

      'toggle:done': 'debouncedToggleDone',
      'toggle:starred': 'debouncedToggleStar',

      'click:delete': 'debouncedDeleteTask',
      'click:close': 'debouncedClose',
      'close': 'debouncedClose'
    },

    'initialize': function () {

      var self = this;

      self.debouncedToggleDone = _.debounce(self.toggleDone, 250, true);
      self.debouncedToggleStar = _.debounce(self.toggleStarred, 250, true);
      self.debouncedDeleteTask = _.debounce(self.deleteTask, 250, true);
      self.debouncedClose = _.debounce(self.close, 250, true);

      _super.initialize.apply(self, arguments);
    },

    'scrollToTop': function () {

      var self = this;
      self.view.trigger('scroll:top', true);
    },

    'toggleDetailView': function (ev) {

      var self = this;

      var isDetailView = $(ev.target).hasClass('stack');
      if (runtime.env.isMicro() && isDetailView) {
        self.view.trigger('close');
      }
    },

    'toggleDone': function () {

      var self = this;
      var view = self.view;
      var model = view.model;

      if (Animator.isAnimatingOrClone($('li[rel="' + model.id + '"]'))) {
        return;
      }

      var analyticsKey = 'analytics:Tasks:' + (model.isCompleted() ? 'unmarkDone' : 'markDone');
      runtime.trigger(analyticsKey, 'detail');

      model.save({

        'completed': !model.isCompleted(),
        'completed_at': (!model.isCompleted() ? DateHelper.getServerNow() : null)
      });
      view.subtasksSubView.markAllSubTasksAsDone();

      runtime.trigger('analytics:detailView:toggle:done');
    },

    'toggleStarred': function () {

      var self = this;
      var model = self.view.model;

      if (!model.isCompleted()) {
        model.save('starred', !model.isStarred());
      }

      runtime.trigger('analytics:detailView:toggle:starred');
    },

    'deleteTask': function (ev) {

      var self = this;
      var shouldPromptBefore = runtime.settings.attributes.confirm_delete_entity === 'true';

      ev && self.stopEventFully(ev);

      var action = function () {

        self.close();
        setTimeout(function () {

          self.view.model.destroy();
          runtime.trigger('task:deleted', self.view.model);
        }, 250);
      };

      if (shouldPromptBefore) {

        var confirmationOptions = {
          'confirm': action,
          'customTitle': runtime.language.getLabel('label_are_you_sure_permanently_delete_$_task', self.view.model.escape('title')).toString(),
          'customText': runtime.language.getLabel('label_cant_undo').toString(),
          'confirmText': runtime.language.getLabel('label_delete_task').toString()
        };

        runtime.trigger('modal:confirm', confirmationOptions);
      }
      else {
        action();
      }
    },

    'close': function (ev) {

      var self = this;
      var callback;

      var view = self.view;

      if (_.isFunction(ev)) {
        callback = ev;
        ev = null;
      }

      ev && self.stopEventFully(ev);

      if (!view.model) {
        callback && _.delay(callback, 100);
        return;
      }

      runtime.trigger('tasks:toggleSelected');

      self.defer(function () {

        view.onClose && view.onClose(ev);
        view.onClose = null;

        _.delay(function () {

          callback && callback();
        }, 100);
      });
    },
  });
});
define('views/TaskDetail/Controllers/TaskDetailFocusController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/date',
  'helpers/Animator',

  'collections/ListCollection',

  'wunderbits/WBBlurHelper',

  'wunderbits/WBViewController',

], function (
  runtime,
  Keycodes, DateHelper, Animator,
  ListCollection,
  BlurHelper,
  WBViewController,
  undefined
) {

  

  var _ = runtime._;

  var _super = WBViewController.prototype;

  var _self = 'self';

  // fast lookup of subview classes
  var _subviewNames = {
    'assignee': 'assignSubView',
    'duedate': 'dateSubView',
    'reminder': 'reminderSubView',
    'subtasks': 'subtasksSubView',
    'note': 'noteSubView',
    'files': 'filesSubView',
  };

  // this is an ordered list of the focus modes available
  // in the detail view
  var _focusAttributes = [
    'title',
    'completed',
    'starred',
    'assignee',
    'duedate',
    'reminder',
    'subtasks',
    'note',
    'files',
    'comments',
    'delete'
  ];

  return WBViewController.extend({

    'implements': {

      'focus:attribute': 'focusAttribute',
      'focus:next': 'focusNextAttribute',
      'focus:prev': 'focusPrevAttribute',
      'focus:fromTab': 'focusFromTab'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.lists = new ListCollection('/lists/all');

      self.currentEditMode = null;

      self.bindTo(runtime, 'route', self.updateLastFocus);
    },

    'focusAttribute': function (attribute) {

      var self = this;
      var view = self.view;

      if ((view.model.isCompleted() && attribute !== 'completed')) {
        // to do ... hm, should we return, refocus completed?
      }

      switch (attribute) {

      case 'title':
        // todo move check to view presenter
        var notEditing = !view.titleSubView.isEditingTitle();
        if (notEditing) {
          view.titleSubView.titleDeferred.done(function () {

            view.titleSubView.trigger('focus', _self);
          });
        }
        break;

      case 'completed':
        view.focusCompleted();
        break;

      case 'starred':
        view.focusStarred();
        break;

      case 'delete':
        view.focusDelete();
        break;

      case 'comments':
        self.defer(function () {
          view.trigger('focus:comments');
        });
        break;

      // handles all other attributes without specific logic
      default:
        var subviewName = _subviewNames[attribute];
        if (view[subviewName]) {
          view[subviewName].trigger('focus', _self);
        }
        break;
      }
    },

    'cycleFocus': function (direction) {

      var self = this;
      var view = self.view;

      var lastIndex = _.indexOf(_focusAttributes, self.currentFocus);
      var newIndex;

      if (view.model.isCompleted()) {
        return;
      }

      // defocus and close anything that might be open (date pickers, etc.)
      BlurHelper.run();

      if (direction === 'next') {
        newIndex = (lastIndex === _focusAttributes.length - 1) ? 0 : lastIndex + 1;
      }
      else if (direction === 'prev') {
        if (lastIndex > 0) {
          newIndex = lastIndex - 1;
        }
        else {
          newIndex = _focusAttributes.length - 1;
        }
      }

      if (_focusAttributes[newIndex] === 'assignee') {
        var list = self.lists.get(view.model.attributes.list_id);
        if (!list.isShared()) {
          newIndex = direction === 'next' ? newIndex + 1 : newIndex - 1;
        }
      }

      runtime.trigger('route:tasks/' + view.model.id + '/' + _focusAttributes[newIndex] + '/focus');
    },

    'focusFromTab': function (e) {

      var self = this;
      var isTab = e.which === Keycodes.tab;
      if (isTab && !e.shiftKey) {
        self.focusElement(e, 'next');
      }
      else if (isTab && e.shiftKey) {
        self.focusElement(e, 'prev');
      }
      else {
        self.checkForEsc(e);
      }
    },

    'checkForEsc': function (e) {

      var self = this;

      if (e.which === Keycodes.esc) {
        runtime.trigger('route:tasks/' + self.view.model.id);
        self.stopEventFully(e);
      }
    },

    'focusElement': function (e, direction) {

      var self = this;
      self.cycleFocus(direction);
      self.stopEventFully(e);
    },

    'focusNextAttribute': function (e) {

      var self = this;
      if (e.which === Keycodes.tab && !e.shiftKey) {
        self.focusElement(e, 'next');
      }
      else {
        self.checkForEsc(e);
      }
    },

    'focusPrevAttribute': function (e) {

      var self = this;
      if (e.which === Keycodes.tab && e.shiftKey) {
        self.focusElement(e, 'prev');
      }
    },

    'updateLastFocus': function (fragments) {

      var self = this;
      var url = fragments && fragments[0];
      if (!url) {
        return;
      }

      var parts = url.split('/');
      if (parts[0] === 'tasks' && parts[3] === 'focus') {
        self.currentFocus = parts[2];
      }
    }
  });
});
define('views/TaskDetail/Controllers/TaskDetailEditController',[

  'application/runtime',

  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/date',
  'helpers/Animator',

  'wunderbits/WBBlurHelper',

  'wunderbits/WBViewController',

], function (
  runtime,
  Keycodes, DateHelper, Animator, BlurHelper,
  WBViewController,
  undefined
) {

  

  var _ = runtime._;

  var _super = WBViewController.prototype;

  return WBViewController.extend({

    'implements': {

      'start:edit': 'openEditMode'
    },

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.currentEditMode = null;

      self.bindTo(runtime, 'route', self.updateLastOpenEditMode);
    },

    // triggered by route changes via mainView #showTask
    'openEditMode': function (mode, options) {

      var self = this;
      var view = self.view;

      if ((view.model.isCompleted() && mode !== 'note') || !mode) {
        return;
      }

      options = options || {};

      switch (mode) {

      case 'title':
        var notEditing = view.titleSubView.$('.edit-view').hasClass('hidden');
        if (notEditing) {
          view.titleSubView.titleDeferred.done(function () {

            view.titleSubView.trigger('click:title');
          });
        }
        break;

      case 'assignee':
        self.currentEditMode = 'assignee';
        view.assignSubView.trigger('toggle:edit');
        break;

      case 'duedate':
        view.dateSubView.trigger('toggle:edit');
        break;

      case 'reminder':
        view.reminderSubView.trigger('click:self');
        break;

      case 'subtasks':
        if (view.subtasksSubView.addSubTaskView.$el.hasClass('hidden')) {
          self.currentEditMode = 'subtasks';
          self.cycleEditMode(options.direction);
        }
        else {
          self.defer(view.subtasksSubView.addSubTaskView.onShowEditMode);
        }
        break;

      case 'note':
        var titleSubView = view.titleSubView;
        var noteSubView = view.noteSubView;
        var titleDeferred = titleSubView.titleDeferred;

        if (options.fullscreen) {
          titleDeferred.done(noteSubView.onOpenFullscreen, noteSubView, options.edit);
        }
        else {
          titleDeferred.done(noteSubView.onToggleEditMode, noteSubView);
        }
        break;

      case 'comments':
        self.defer(function () {
          view.trigger('focus:comments');
        });
        break;
      }
    },

    'cycleEditMode': function (direction) {

      var self = this;
      var view = self.view;

      var modes = ['title', 'duedate', 'reminder', 'subtasks', 'note', 'comments'];
      // if the list is shared, we want the assignee section
      if (view.isShared) {
        modes.splice(1, 0, 'assignee');
      }

      var lastIndex = _.indexOf(modes, self.currentEditMode);
      var newIndex;

      if (view.model.isCompleted()) {
        return;
      }

      // defocus and close anything that might be open (date pickers, etc.)
      BlurHelper.run();

      if (direction === 'next') {
        newIndex = (lastIndex === modes.length - 1) ? 0 : lastIndex + 1;
      }
      else if (direction === 'prev') {
        if (lastIndex > 0) {
          newIndex = lastIndex - 1;
        }
        else {
          // TODO exit detail view and go back to task view?
          //return;
        }
      }

      self.openEditMode(modes[newIndex], {'direction': direction});
    },

    'updateLastOpenEditMode': function (fragments) {

      var self = this;
      var url = fragments && fragments[0];
      if (!url) {
        return;
      }

      var parts = url.split('/');
      if (parts[0] === 'tasks' && parts[3] === 'edit') {
        self.currentEditMode = parts[2];
      }
    }
  });
});
define('templates/detailview/detail',['vendor/handlebars'], function(H) {
var name = 'detailview/detail';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, self=this;

function program1(depth0,data) {
  
  
  return "true";
  }

function program3(depth0,data) {
  
  
  return "false";
  }

function program5(depth0,data) {
  
  
  return "detail-checked";
  }

function program7(depth0,data) {
  
  
  return "detail-starred";
  }

  buffer += "<div class=\"inner\"> <a class=\"detail-checkbox\" role=\"checkbox\" aria-checked=\"";
  stack1 = helpers['if'].call(depth0, depth0.completed, {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\" data-key-aria-label=\"smart_list_completed\" tabindex=\"0\"> <span class=\"icon detail-checkbox ";
  stack1 = helpers['if'].call(depth0, depth0.completed, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"></span> </a> <a class=\"detail-star\" role=\"checkbox\" aria-checked=\"";
  stack1 = helpers['if'].call(depth0, depth0.starred, {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\" data-key-aria-label=\"smart_list_starred\" tabindex=\"0\"> <span class=\"icon detail-star ";
  stack1 = helpers['if'].call(depth0, depth0.starred, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"></span> </a> <div class=\"title-container\"></div> <a class=\"cover hidden return-to-top\"> <span class=\"icon comments-arrow-open\"></span> </a> <div class=\"body\"></div> <div class=\"dropTarget\"></div> <div class=\"bottom\"> <a class=\"detail-close\"><span class=\"icon detail-close\"></span></a> <a class=\"detail-trash\" role=\"button\" data-key-aria-label=\"button_delete\" tabindex=\"0\"> <span class=\"icon detail-trash\"></span> </a> </div> </div>";
  return buffer;
  });
});
define('styles/_detail',[],function() { return {'name': '_detail', 'styles': "#detail{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;position:absolute;padding:18px 18px 18px 0;right:-370px;top:0;bottom:0;width:360px;z-index:1;} #detail .inner{position:relative;background:#e9e9e9 url(\"images/textures/detail.png\");-webkit-box-shadow:0 1px 5px rgba(0,0,0,0.4);box-shadow:0 1px 5px rgba(0,0,0,0.4);-webkit-border-radius:4px;border-radius:4px;overflow:hidden;height:100%} #detail .title{min-height:24px;overflow:hidden;padding:16px 55px 13px;-webkit-border-radius:5px 5px 0 0;border-radius:5px 5px 0 0;font-size:16px;line-height:24px;font-weight:bold;border-bottom:1px solid rgba(0,0,0,0.24);-webkit-box-shadow:0 1px 3px rgba(0,0,0,0.12);box-shadow:0 1px 3px rgba(0,0,0,0.12);text-shadow:0 1px 0 #fff;word-wrap:break-word;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(255,255,255,0.24)), color-stop(1, rgba(178,178,178,0.24)));background-image:-webkit-linear-gradient(top, rgba(255,255,255,0.24) 0, rgba(178,178,178,0.24) 100%);background-image:-moz-linear-gradient(top, rgba(255,255,255,0.24) 0, rgba(178,178,178,0.24) 100%);background-image:-o-linear-gradient(top, rgba(255,255,255,0.24) 0, rgba(178,178,178,0.24) 100%);background-image:-ms-linear-gradient(top, rgba(255,255,255,0.24) 0, rgba(178,178,178,0.24) 100%);background-image:linear-gradient(top, rgba(255,255,255,0.24) 0, rgba(178,178,178,0.24) 100%);} #detail .title .display-view span{-webkit-user-select:text !important;-moz-user-select:text !important;-ms-user-select:text !important;user-select:text !important} #detail .title .title-text.strike-through{text-decoration:line-through;text-shadow:none} #detail .title textarea,#detail .title pre{font-size:16px;line-height:24px;font-weight:bold;-webkit-box-shadow:none;box-shadow:none;text-shadow:0 1px 0 #fff;word-wrap:break-word} #detail .title .expandable-container{margin:-1px -4px -1px -7px;background:#fff;padding:0 6px;border:1px #aaa solid} #detail .title-container .title:focus{outline:none;} #detail .title-container .title:focus .content-fakable{color:#3f72a0} #detail .icon.detail-checkbox,#detail .icon.detail-checked{position:absolute;left:18px;top:20px} #detail .icon.detail-star,#detail .icon.detail-starred{position:absolute;right:15px;top:-2px;} #detail .icon.detail-star.detail-starred,#detail .icon.detail-starred.detail-starred{top:-1px !important} #detail .body{overflow:auto;position:absolute;top:55px;bottom:74px;right:0;left:0;} #detail .body .section{position:relative;padding:9px 20px 9px 55px;text-shadow:0 1px 0 #fff;height:28px;background:url(\"images/textures/divider.png\") center bottom repeat-x;} #detail .body .section:focus{outline:none;} #detail .body .section:focus .section-title:after{content:'';background:rgba(0,140,254,0.14);width:100%;height:100%;display:block;position:absolute;margin-top:-2px;top:0;left:0} #detail .body .section .target{display:block;width:1px a;height:1px;position:absolute;top:25px;margin-left:5px} #detail .body .section input{margin-top:2px} #detail .body .section .icon{position:absolute;left:16px;top:13px;} #detail .body .section .icon.detail-delete{right:12px;left:auto;display:none} #detail .body .section .icon.detail-save{right:30px;left:auto;display:none} #detail .body .section .section-title{white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis;margin-top:5px;font-weight:bold;color:#9fa2a6} #detail .body .section .section-description{display:none;font-size:11px} #detail .body .section.date .section-title{color:#4271a6;} #detail .body .section.date .section-title.overdue{color:#b3312d} #detail .body .section.date .section-title.repeat{margin-top:-2px} #detail .body .section.date .section-description.repeat{display:block;} #detail .body .section.date .section-description.repeat.hidden{display:none} #detail .body .section.editing .icon.detail-delete,#detail .body .section.editing .icon.detail-save{display:inline-block} #detail .body .section.date:hover .icon.detail-delete,#detail .body .section.assigned:hover .icon.detail-delete{display:inline-block} #detail .body .section.date.editing .icon.detail-save,#detail .body .section.assigned.editing .icon.detail-save{display:inline-block} #detail .body .section.date .section-title,#detail .body .section.assigned .section-title{color:#4271a6} #detail .body .section.date .avatar,#detail .body .section.assigned .avatar{position:absolute;left:14px;top:10px} #detail .body .subtasks:focus,#detail .body .note:focus{outline:none;-webkit-box-shadow:0 0 4px rgba(43,136,217,0.32),0 1px 1px rgba(255,255,255,0.43),inset 0 2px 4px rgba(43,136,217,0.12),inset 0 0 4px rgba(43,136,217,0.2);box-shadow:0 0 4px rgba(43,136,217,0.32),0 1px 1px rgba(255,255,255,0.43),inset 0 2px 4px rgba(43,136,217,0.12),inset 0 0 4px rgba(43,136,217,0.2);border:solid 1px rgba(43,136,217,0.65)} #detail .body .subtasks{margin:20px;background:#fff;border:1px solid #c9c8bd;-webkit-box-shadow:0 2px 3px rgba(0,0,0,0.1);box-shadow:0 2px 3px rgba(0,0,0,0.1);position:relative;} #detail .body .subtasks.buffer{padding-bottom:32px} #detail .body .subtasks li{position:relative;} #detail .body .subtasks li .line-wrap{border-bottom:1px solid #d1e1ea;} #detail .body .subtasks li .line-wrap a{color:#4597df} #detail .body .subtasks li textarea{-webkit-box-shadow:none;box-shadow:none} #detail .body .subtasks li:before,#detail .body .subtasks li:after{position:absolute;left:33px;top:0;bottom:0;content:\"\";border-left:1px solid #eddddd} #detail .body .subtasks li:after{left:36px} #detail .body .subtasks li:last-child{border:none} #detail .body .subtasks li .subtask-title,#detail .body .subtasks li .subtask-edit{min-height:20px;font-size:13px;line-height:20px;word-wrap:break-word;padding:5px 25px 7px 45px;} #detail .body .subtasks li .subtask-title.selectable .content-fakable div,#detail .body .subtasks li .subtask-edit.selectable .content-fakable div,#detail .body .subtasks li .subtask-title.selectable .content-fakable span,#detail .body .subtasks li .subtask-edit.selectable .content-fakable span{-webkit-user-select:text !important;-moz-user-select:text !important;-ms-user-select:text !important;user-select:text !important} #detail .body .subtasks li .expandingArea textarea,#detail .body .subtasks li .expandingArea pre{line-height:20px} #detail .body .subtasks li.done{color:#aaa;} #detail .body .subtasks li.done .display-view > div{text-decoration:line-through} #detail .body .subtasks li.addtask{border-top:none;-webkit-transition:none !important;-moz-transition:none !important;-o-transition:none !important;-ms-transition:none !important;transition:none !important;color:#aaa;position:absolute;bottom:0 !important;left:0;right:0;} #detail .body .subtasks li.addtask:hover{color:#737272;} #detail .body .subtasks li.addtask:hover .icon{opacity:.8;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\";filter:alpha(opacity=80)} #detail .body .subtasks li.addtask .line-wrap{border-bottom:none} #detail .body .subtasks li.addtask.done .display-view > div{text-decoration:line-through} #detail .body .subtasks li.upgrade-hint{color:#aaa;} #detail .body .subtasks li.upgrade-hint a{color:#619a38} #detail .body .subtasks li .icon.detail-add,#detail .body .subtasks li .icon.subtask-checkbox{margin:6px} #detail .body .subtasks li .icon.detail-delete{background-color:#fff;display:none;position:absolute;top:6px;right:5px;left:auto} #detail .body .subtasks li .icon.subtask-checkbox{margin-left:8px;margin-top:7px} #detail .body .subtasks li:hover .icon.detail-delete{display:block} #detail .body .note{background:#f8f5db;background-image:-webkit-linear-gradient(#dee2d0 1px,transparent 1px);background-image:-moz-linear-gradient(top,#dee2d0 1px,transparent 1px);background-image:-ms-linear-gradient(top,#dee2d0 1px,transparent 2px);-webkit-background-size:100% 26px;-moz-background-size:100% 26px;background-size:100% 26px;border:1px solid #cfcfcf;font-size:13px;line-height:26px;margin:20px;padding:8px 15px;-webkit-box-shadow:0 2px 3px rgba(0,0,0,0.1),inset 0 1px 0 #f8f5db;box-shadow:0 2px 3px rgba(0,0,0,0.1),inset 0 1px 0 #f8f5db;} #detail .body .note .note-body,#detail .body .note .note-edit{min-height:88px;word-wrap:break-word;} #detail .body .note .note-body.selectable div,#detail .body .note .note-edit.selectable div,#detail .body .note .note-body.selectable span,#detail .body .note .note-edit.selectable span{-webkit-user-select:text !important;-moz-user-select:text !important;-ms-user-select:text !important;user-select:text !important} #detail .body .note .open-fullscreen-note{position:absolute;right:23px;margin-top:-6px;padding-left:10px;padding-bottom:10px;z-index:1} #detail .body .note textarea{-webkit-box-shadow:none;box-shadow:none} #detail .body .note a{color:#4597df} #detail .bottom{position:absolute;bottom:0;right:0;left:0;-webkit-border-radius:0 0 5px 5px;border-radius:0 0 5px 5px;z-index:9000;background:#e9e9e9 url(\"images/textures/detail.png\");height:35px;} #detail .bottom .detail-info{font-size:11px;text-align:center;padding:0 35px 0 35px;margin-top:11px;color:#a3a3a2;text-shadow:0 1px 0 rgba(255,255,255,0.75);} #detail .bottom .detail-info .token_1,#detail .bottom .detail-info .token_0{vertical-align:bottom;display:inline-block;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis} #detail .bottom .icon{opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50);position:absolute;top:8px;} #detail .bottom .icon:hover,#detail .bottom .icon:focus{opacity:1;-ms-filter:none;filter:none} #detail .bottom .icon.detail-close{right:8px} #detail .bottom .icon.detail-trash{left:8px} #detail .bottom a.detail-trash:focus .icon{opacity:1;-ms-filter:none;filter:none} #detail.complete .body .section.date .section-title,#detail.complete .body .section.assigned .section-title,#detail.complete .body .section.date .section-description,#detail.complete .body .section.assigned .section-description{color:#999} #detail.complete .body .section.date:hover .detail-delete,#detail.complete .body .section.assigned:hover .detail-delete{display:none} #detail.complete .body .icon.detail-star,#detail.complete .body .icon.detail-date,#detail.complete .body .icon.detail-reminder{cursor:default} #detail.comments-active .body{margin-bottom:190px} #detail.comments-active .bottom{background:none} #detail.comments-active .comments-bottom{background:none} #detail.has-comments .body{bottom:120px} #detail.bottom-border .bottom{background:#e9e9e9;border-top:1px solid #d3d3d3;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.5);box-shadow:inset 0 1px 0 rgba(255,255,255,0.5)} #detail.bottom-border .body{bottom:35px} html[dir=rtl] #detail .body .section{padding-left:20px;padding-right:55px;} html[dir=rtl] #detail .body .section .icon{left:initial;right:16px;} html[dir=rtl] #detail .body .section .icon.detail-delete{right:initial;left:12px} html[dir=rtl] #detail .body .section.editing .icon.detail-delete{left:12px;right:initial} html[dir=rtl] #detail .body .section.editing .icon.detail-save{left:30px;right:initial} html[dir=rtl] #detail .body .subtasks li:before,html[dir=rtl] #detail .body .subtasks li:after{left:initial} html[dir=rtl] #detail .body .subtasks li:before{right:33px} html[dir=rtl] #detail .body .subtasks li:after{right:36px} html[dir=rtl] #detail .body .subtasks li .icon.detail-add{margin-right:11px} html[dir=rtl] #detail .body .subtasks li .icon.subtask-checkbox{margin-right:6px} html[dir=rtl] #detail .body .subtasks li .icon.detail-delete{right:auto;left:5px} html[dir=rtl] #detail .body .subtasks li .subtask-title,html[dir=rtl] #detail .body .subtasks li .subtask-edit{padding-left:25px;padding-right:45px} html[dir=rtl] #detail .body .note .open-fullscreen-note{left:30px;right:initial;padding-left:4px;padding-right:10px} html[dir=rtl] #detail .bottom .icon.detail-close{right:initial;left:8px} html[dir=rtl] #detail .bottom .icon.detail-trash{right:8px;left:initial} " }; });
define('views/TaskDetail/TaskDetailView',[

  'application/runtime',

  'wunderbits/helpers/date',
  'wunderbits/helpers/keycodes',
  'wunderbits/helpers/selection',

  'models/TaskModel',

  'views/TaskDetail/TaskDetailAssignView',
  'views/TaskDetail/TaskDetailDateView',
  'views/TaskDetail/TaskDetailReminderView',
  'views/TaskDetail/TaskDetailNoteView',
  'views/TaskDetail/TaskDetailSubTaskCollectionView',
  'views/TaskDetail/TaskDetailTitleView',
  'views/TaskDetail/TaskDetailFilesView',
  'views/TaskDetail/Comments/TaskDetailInfoView',
  'views/TaskDetail/Comments/TaskDetailCommentsView',
  'views/TaskDetail/Comments/TaskDetailCommentListView',

  'views/TaskDetail/Controllers/TaskDetailClickController',
  'views/TaskDetail/Controllers/TaskDetailFocusController',
  'views/TaskDetail/Controllers/TaskDetailEditController',

  'wunderbits/WBViewPresenter',
  'wunderbits/WBContentFakable',
  'wunderbits/WBValidationHelper',
  'wunderbits/WBBlurHelper',

  'template!detailview/detail',
  'style!_detail'

], function (
  runtime,
  DateHelper, Keycodes, Selection,
  TaskModel,

  TaskDetailAssignView, TaskDetailDateView, TaskDetailReminderView,
  TaskDetailNoteView, TaskDetailSubTaskCollectionView, TaskDetailTitleView,
  TaskDetailFilesView, TaskDetailInfoView, TaskDetailCommentsView, TaskDetailCommentListView,

  TaskDetailClickController, TaskDetailFocusController, TaskDetailEditController,

  WBViewPresenter, WBContentFakable, WBValidationHelper, WBBlurHelper,
  detailTemplate,
  detailStyle,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var global = runtime.global;

  var _super = WBViewPresenter.prototype;
  var _blur = WBBlurHelper;
  var _validator = WBValidationHelper;

  return WBViewPresenter.extend({

    'template': detailTemplate,

    'id': 'detail',

    'className': 'stack',

    'styles': [detailStyle],

    'implements': [
      TaskDetailClickController,
      TaskDetailFocusController,
      TaskDetailEditController
    ],

    'emits': {

      'click': 'toggle:view',

      'click .return-to-top': 'click:return:top',

      'click a.detail-checkbox': 'toggle:done',
      'click a.detail-star': 'toggle:starred',

      'click .detail-trash': 'click:delete',
      'click .detail-close': 'click:close',

      'touchstart a.detail-checkbox': 'toggle:done',
      'touchstart a.detail-star': 'toggle:starred',

      // focus from tab
      'keydown .title': 'focus:fromTab',
      'keydown a.detail-checkbox': 'focus:fromTab',
      'keydown a.detail-star': 'focus:fromTab',
      'keydown div.detail-date:not(.editing)': 'focus:fromTab',
      'keydown div.detail-reminder:not(.editing)': 'focus:fromTab',
      'keydown div.detail-assign:not(.editing)': 'focus:fromTab',
      'keydown ul.subtasks': 'focus:fromTab',
      'keydown .note': 'focus:fromTab',
      'keydown .files-add': 'focus:fromTab',
      'keydown .comments-add textarea': 'focus:fromTab',
      'keydown a.detail-trash': 'focus:fromTab'
    },

    'observes': {
      'events': {
        'scroll:top': 'scrollToTop',
        'cancel:changes': 'cancelSubviewChanges',
        'focus:comments': 'focusComments'
      },
      'runtime': {
        'detail:scrollToEnd': 'scrollToEnd',
        'detail:close': 'closeSelf',
        'detail:navigate': 'navigate',
        'comments:stateChange': 'updateCommentsState',
        'detail:checkBounds': 'debouncedUpdateCommentsInterface',
        'window:resize': 'debouncedUpdateCommentsInterface'
      }
    },

    //
    // INIT
    //

    'initialize': function () {

      var self = this;

      self.debouncedUpdateCommentsInterface = _.debounce(self.updateCommentsInterface, 250);

      _super.initialize.apply(self, arguments);

      self.state = new runtime.Backbone.Model();

      self.titleSubView = self.addSubview(new TaskDetailTitleView());
      self.assignSubView = self.addSubview(new TaskDetailAssignView());
      self.dateSubView = self.addSubview(new TaskDetailDateView());
      self.reminderSubView = self.addSubview(new TaskDetailReminderView());
      self.noteSubView = self.addSubview(new TaskDetailNoteView());
      self.subtasksSubView = self.addSubview(new TaskDetailSubTaskCollectionView());
      self.filesSubView = self.addSubview(new TaskDetailFilesView());
      self.commentsSubView = self.addSubview(new TaskDetailCommentsView());
      self.commentsListSubView = self.addSubview(new TaskDetailCommentListView());
      self.infoSubView = self.addSubview(new TaskDetailInfoView());

      self.bindTo(self.commentsSubView, 'change:height', self.adjustBottom);
    },

    'renderData': {
      'completed': undefined,
      'starred': undefined
    },

    'formatData': function (data) {

      var model = this.model;

      data.completed = model.isCompleted();
      data.starred = model.isStarred();

      return data;
    },

    'render': function () {

      var self = this;
      _super.render.call(self, self.formatData(self.renderData));

      var titleEl = self.titleSubView.render({
        'model': self.model,
        'isShared': self.isShared
      }).el;

      self.titleSubView.renderWithModel(self.model);
      self.$('.title-container').append(titleEl);

      // title should fully animated and rendered first!
      self.titleSubView.renderTitle().done(self.renderDeferred, self);

      self.$('.body').scroll(function () {
        runtime.trigger('interface:scroll');
        self.updateCommentsInterface();
      });

      return self;
    },

    'renderDeferred': function () {

      var self = this;
      var $el = self.$el;
      var attributes = self.model.attributes;

      if (attributes.completed) {
        $el.addClass('complete');
      }

      // For newly created tasks, add extra class for custom UI thingies.
      if (!attributes.online_id) {
        $el.addClass('local');
        self.bindOnceTo(self.model, 'change:online_id', function () {

          $el.removeClass('local');
        });
      }

      var $detailBody = self.$('.body');
      var animationMs = 250;
      var delay = self.$el.position().left + self.$el.width() >= $(global).width() ? animationMs : 0;

      self.detailRendered = new $.Deferred();

      var assignEl = self.assignSubView.render({
        'model': self.model,
        'isShared': self.isShared
      }).el;

      var dateEl = self.dateSubView.render({
        'model': self.model
      }).el;

      var reminderEl = self.reminderSubView.render({
        'model': self.model
      }).el;

      var subtaskEl = self.subtasksSubView.render({
        'model': self.model,
        'delay': delay
      }).el;

      var infoEl = self.infoSubView.render({
        'model': self.model,
        'isShared': self.isShared
      }).el;

      var noteEl = self.noteSubView.render({
        'model': self.model,
        'delay': delay
      }).el;

      var filesEl = self.filesSubView.render({
        'model': self.model,
        'delay': delay
      }).el;

      var commentsEl = self.commentsSubView.render({
        'model': self.model,
        'delay': delay
      }).el;

      var commentsListEl = self.commentsListSubView.render({
        'model': self.model,
        'delay': delay
      }).el;

      var detailSubviewFrag = document.createDocumentFragment();

      // order is important!
      if (!$detailBody.children().length) {

        detailSubviewFrag.appendChild(assignEl);
        detailSubviewFrag.appendChild(dateEl);
        detailSubviewFrag.appendChild(reminderEl);
        detailSubviewFrag.appendChild(subtaskEl);
        detailSubviewFrag.appendChild(noteEl);
        detailSubviewFrag.appendChild(filesEl);
        detailSubviewFrag.appendChild(commentsListEl);

        $detailBody.append(detailSubviewFrag);

        self.$('.bottom')[0].appendChild(infoEl);
        self.$('.inner')[0].insertBefore(commentsEl, self.$('.bottom')[0]);
      }

      self.detailRendered.resolve();
      self.updateCommentsInterface();
      runtime.trigger('detail:rendered', self.model.id);

      self.defer(self.updateCommentsInterface, self);
    },

    'renderWithModel': function (model, options) {

      var self = this;
      var $titleContainer, bodyTop;

      self.onClose = options && options.onClose;
      self.isShared = options && options.isShared;

      if (model === self.model) {
        return self.trigger('scroll:top');
      }

      if (self.model) {
        self.unbindFromTarget(self.model);
      }

      self.model = model || self.model;
      _validator.classCheckAttribute(self, 'model', TaskModel, 'TaskModel');

      // model bindings
      self.bindTo(self.model, 'change:starred', self.onUpdateStarred);
      self.bindTo(self.model, 'change:completed', self.onUpdateDone);
      self.bindTo(self.model, 'change:list_id', self.closeSelf);
      self.bindTo(runtime.settings, 'change:show_completed_items', self.onUpdateDone);

      // title view bindings

      if (self.titleSubView) {
        self.unbindFromTarget(self.titleSubView);
        self.bindTo(self.titleSubView, 'title:resized', self.resizeBodyToTitle);
        self.bindTo(self.titleSubView, 'title:animating', self.animateBodyTopToSize);
      }

      // only call render() on initial load !
      if (!self.$el.html()) {

        self.render();

        self.defer(function () {
          // set initial postion of .body based on the title's height
          self.titleSubView.titleDeferred.done(function () {

            $titleContainer = self.$('div.title');
            bodyTop = (self.titleSubView.defaultBodyContainerTop + ($titleContainer.height() - self.titleSubView.defaultTitleContainerHeight)) + 'px';
            self.$('.body').not('.clone').css({'top': bodyTop});
          }, self);
        });
      }
      else {

        self.onUpdateStarred();
        self.onUpdateDone();

        self.defer(function () {

          self.titleSubView.renderWithModel(self.model).done(self.renderDeferred, self);
        });
      }
    },

    //
    // GLOBAL KEYBOARD NAVIGATION
    //

    'navigate': function (direction) {

      var self = this;

      if (direction === 'left') {

        // to task view
        _blur.run();
        runtime.trigger('route:tasks/' + self.model.id);
      }
    },

    //
    // UI EVENTS
    //


    'updateCommentsState': function (state) {

      var self = this;
      self.$el.toggleClass('comments-active', state);
    },

    //
    // MODEL EVENTS
    //

    'onUpdateStarred': function () {

      // handle updating view to match model
      var self = this;
      var modelStarred = self.model.isStarred();
      var $starred = self.$('.icon.detail-star');

      // only change things when view and model match
      if (modelStarred) {

        $starred.addClass('detail-starred');
      }
      else {

        $starred.removeClass('detail-starred');
      }
    },

    'onUpdateDone': function () {

      // handle updating view to match model
      var self = this;
      var modelDone = self.model.isCompleted();
      var $done = self.$('.icon.detail-checkbox');
      var $title = self.$('.title-text');
      var shouldDisplayCompleted = runtime.settings.attributes.show_completed_items === 'true';

      if (modelDone && !shouldDisplayCompleted) {
        self.closeSelf();
      }

      // only change things when view and model match
      if (modelDone) {

        self.$el.addClass('complete');
        $done.addClass('detail-checked');
        $title.addClass('strike-through');
      }
      else {

        self.$el.removeClass('complete');
        $title.removeClass('strike-through');
        $done.removeClass('detail-checked');
      }
    },

    'closeSelf': function (callback) {

      var self = this;
      self.trigger('close');
      (typeof callback === 'function') && _.defer(callback);
    },

    //
    // HELPER FUNCTIONS
    //

    'scrollToTop': function (shouldAnimate) {

      var self = this;
      var $body = self.$('.body');

      if (shouldAnimate) {
        $body.animate({
          'scrollTop': 0
        }, 100);

        return;
      }

      $body.scrollTop(0);
    },

    'scrollToEnd': function (shouldAnimate, autoScrollBehavior) {

      var self = this;
      var $body = self.$('.body');
      var scrollHeight = $body[0].scrollHeight;

      if (autoScrollBehavior) {
        shouldAnimate = !self.wasScrolledToBottom;
      }

      if (shouldAnimate) {
        $body.animate({
          'scrollTop': scrollHeight
        }, 500);

        return;
      }

      $body.scrollTop(scrollHeight);
    },

    'updateCommentsInterface': function () {

      var self = this;
      var $body = self.$('.body');

      var scrollVariables = self.isScrolledToBottom();
      var scrolledToBottom = self.wasScrolledToBottom = scrollVariables.isScrolledToBottom;
      var isScrolledToOffsetBottom = scrollVariables.isScrolledToOffsetBottom;

      self.$('.comments-bottom').toggleClass('hasShadow', !scrolledToBottom);
      self.$('.last-comment').toggleClass('hidden', isScrolledToOffsetBottom);

      // mark all comments as read, if scrolled to bottom
      if (scrolledToBottom && self.model) {
        runtime.trigger('enterChat:' + self.model.attributes.online_id);
      }

      // update scrollToTop button visibility
      self.$('.return-to-top').toggleClass('hidden', $body.scrollTop() <= 25);
    },

    'isScrolledToBottom': function () {

      var self = this;
      var $body = self.$('.body');
      var $lastComment = self.$('.comments-list li').last();
      var scrollBottom = $body.scrollTop() + $body.height();
      var scrollHeight = $body.length && $body[0].scrollHeight;
      var isScrolledToOffsetBottom = false;

      var isScrolledToBottom = scrollBottom >= scrollHeight;

      if ($lastComment.length) {
        var lastCommentHeight = $lastComment.height() - 37;
        scrollHeight = scrollHeight - lastCommentHeight;
      }

      isScrolledToOffsetBottom = scrollBottom >= scrollHeight;

      return {
        'isScrolledToBottom': isScrolledToBottom,
        'isScrolledToOffsetBottom': isScrolledToOffsetBottom
      };
    },

    'adjustBottom': function () {

      var self = this;
      var $body = self.$('.body');
      var $comments = self.$('.comments-add');
      var bottomOffset = $comments.offset().top;
      // where does this number come from?
      var minimumOffset = (runtime.env.isPackagedApp() ? 75 : 65);

      var value = self.$el.outerHeight() - bottomOffset - parseInt(self.$el.css('padding-bottom'), 10);
      if (value < minimumOffset) {
        value = minimumOffset;
      }

      $body.css('bottom', value);

      if (self.wasScrolledToBottom) {
        self.scrollToEnd();
      }

      self.wasScrolledToBottom = self.isScrolledToBottom();
    },

    'animateBodyTopToSize': function (offset, duration) {

      var self = this;
      var top = (self.titleSubView.defaultBodyContainerTop + (offset - self.titleSubView.defaultTitleContainerHeight)) + 'px';

      self.$('.body').animate({
        'top': top
      }, {
        'duration': duration
      });
    },

    'focusComments': function () {

      var self = this;
      self.commentsSubView.$('textarea').focus();
    },

    'resizeBodyToTitle': function (newTitleHeight) {

      var self = this;
      var titleView = self.titleSubView;
      var lastStoredTitleHeight = titleView.currentTitleEditHeight;
      var $body = self.$('.body');
      var bodyTop;

      if (lastStoredTitleHeight === null || newTitleHeight !== lastStoredTitleHeight) {
        bodyTop = (titleView.defaultBodyContainerTop + (newTitleHeight - titleView.defaultTitleContainerHeight)) + 'px';
        $body.css('top', bodyTop);
        runtime.trigger('comments-view:resize');
      }
    },

    'cancelSubviewChanges': function () {

      var self = this;
      self.dateSubView.cancelChanges();
      self.reminderSubView.onCancelChanges();
      self.assignSubView.cancelChanges();
    },

    'focusCompleted': function () {

      this.$('.detail-checkbox').focus();
    },

    'focusStarred': function () {

      this.$('.detail-star').focus();
    },

    'focusDelete': function () {

      this.$('.detail-trash').focus();
    }

  });
});
define('templates/notifications/systemAlert',['vendor/handlebars'], function(H) {
var name = 'notifications/systemAlert';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += " <p><span class=\"icon alert\"></span>";
  if (stack1 = helpers.message) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.message; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</p> <div class=\"buttons hidden\"> <button class=\"option-one\">";
  if (stack1 = helpers.buttonOne) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.buttonOne; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</button> <button class=\"option-two\">";
  if (stack1 = helpers.buttonTwo) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.buttonTwo; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</button> </div> <span class=\"icon close\"></span> ";
  return buffer;
  });
});
define('styles/notifications/_systemAlert',[],function() { return {'name': 'notifications/_systemAlert', 'styles': "#system-alert{min-height:30px;border-bottom:1px solid rgba(0,0,0,0.4);width:100%;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #fcf8d3), color-stop(1, #e4deab));background-image:-webkit-linear-gradient(top, #fcf8d3 0, #e4deab 100%);background-image:-moz-linear-gradient(top, #fcf8d3 0, #e4deab 100%);background-image:-o-linear-gradient(top, #fcf8d3 0, #e4deab 100%);background-image:-ms-linear-gradient(top, #fcf8d3 0, #e4deab 100%);background-image:linear-gradient(top, #fcf8d3 0, #e4deab 100%);z-index:99999;display:block;position:absolute;-ms-filter:\"progid:DXImageTransform.Microsoft.gradient(GradientType=0, startColorstr='#fcf8d3', endColorstr='#e4deab')\";} #system-alert.touch-style-notice{min-height:50px;} #system-alert.touch-style-notice p.close,#system-alert.touch-style-notice .icon.close{display:none} #system-alert.touch-style-notice .buttons button{height:44px;padding:0 20px} #system-alert p{display:block;padding-top:8px;padding-bottom:10px;margin-left:15px;vertical-align:bottom;float:left;width:70%;} #system-alert p a{color:#4597df;} #system-alert p a:visited{color:#4597df} #system-alert .icon.alert{vertical-align:top;display:block;margin-left:7px;margin-right:7px;float:left} #system-alert .icon.close{position:absolute;right:5px;top:5px} #system-alert .buttons{display:block;float:right;margin:5px 2px;padding-right:20px;width:200px;} #system-alert .buttons button{padding:4px 10px;display:inline-block} " }; });
define('views/Notifications/SystemAlertView',[

  'application/runtime',
  'wunderbits/WBView',

  'template!notifications/systemAlert',
  
  'style!notifications/_systemAlert'

], function (runtime, WBView, systemAlertTemplate, systemAlertStyle, undefined) {

  

  var _super = WBView.prototype;

  return WBView.extend({

    'template': systemAlertTemplate,

    'styles': [
      systemAlertStyle
    ],

    'id': 'system-alert',

    'events': {

      'click .close': 'hideAlert',

      'click .option-one': '_executeButtonOneAction',
      'click .option-two': '_executeButtonTwoAction'
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.bindTo(runtime, 'systemAlert:slideDown', self.showAlert);
    },

    'render': function (options) {

      var self = this;

      options = options || {};
      self.options = options;

      _super.render.call(self, options);

      if (self.options && (self.options.buttonOneAction && self.options.buttonTwoAction)) {

        self.$('.buttons').removeClass('hidden');
      }

      self.$el.hide();

      return self;
    },

    'showAlert': function () {

      var self = this;

      self.$el.slideDown(200);
      runtime.trigger('systemAlert:show');
    },

    'hideAlert': function () {

      this.$el.slideUp(200);
      runtime.trigger('systemAlert:hide');
    },

    '_executeButtonOneAction': function  () {

      var self = this;

      if (typeof self.options.buttonOneAction === 'function') {

        self.options.buttonOneAction();
      }
    },

    '_executeButtonTwoAction': function  () {

      var self = this;

      if (typeof self.options.buttonTwoAction === 'function') {

        self.options.buttonTwoAction();
      }
    }
  });
});
define('templates/sounds/audioElement',['vendor/handlebars'], function(H) {
var name = 'sounds/audioElement';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression;


  buffer += "<audio id=\"";
  if (stack1 = helpers.name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "\" class=\"hidden\"> <source class=\"ogg\" src=\"\" type=\"audio/ogg\"/> <source class=\"m4a\" src=\"\" type=\"audio/mp4\"/> </audio>";
  return buffer;
  });
});
define('views/Sounds/SoundPlayer',[

  'application/runtime',

  'helpers/URLResolver',

  'wunderbits/WBView',

  'template!sounds/audioElement'
  
], function (runtime, URLResolver, WBView, audioElementTemplate) {

  

  var $ = runtime.$;
  var _super = WBView.prototype;

  var sounds = {

    'bell': 'wlbell',
    'complete': 'wlcomplete'
  };

  return WBView.extend({

    'id': 'audio-player',

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.bindTo(runtime, 'sounds:play', self.play);
    },

    'render': function () {

      var self = this;
      _super.render.apply(self, arguments);

      var container;

      for (var key in sounds) {
        if (sounds.hasOwnProperty(key)) {

          self.el.appendChild($(audioElementTemplate({
            'name': sounds[key]
          }))[0]);

          container = self.$('#' + sounds[key]);
          container.find('.ogg').attr('src', URLResolver.resolve('sounds/' + sounds[key] + '.ogg'));
          container.find('.m4a').attr('src', URLResolver.resolve('sounds/' + sounds[key] + '.m4a'));
        }
      }

      return self;
    },

    'play': function (sound) {

      var self = this;

      var el = self.$el.find('#' + sounds[sound])[0];

      if (el && el.load) {

        var canPlayThrough = function canPlayThroughHandler () {

          // remove the handler, firefox emits hundreds of these per second
          el.removeEventListener('canplaythrough', canPlayThrough);

          // pause any existing audio
          el.pause();
          // reset the seeker
          el.currentTime = 0;
          // play the audio from start
          el.play();
        };

        el.load();
        el.addEventListener('canplaythrough', canPlayThrough);
      }
    }
  });
});
define('views/Popovers/Controllers/CoachMarksPopoverViewController',[

  'application/runtime',
  'wunderbits/WBViewController',

], function (
  runtime,
  WBViewController,
  undefined
) {

  

  return WBViewController.extend({

    'implements': {
      'close': 'closeCoachMarkAsSeen'
    },

    'closeCoachMarkAsSeen': function () {

      var view = this.view;
      runtime.settings.save(view.options.key.toString(), 'completed');
      view.close();
    }
  });
});
define('templates/coachMarks',['vendor/handlebars'], function(H) {
var name = 'coachMarks';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"coach-mark\"> <span class=\"icon coach-close detail-delete\"></span> <h2></h2> <p></p> </div>";
  });
});
define('styles/popover/coachMarkPopover',[],function() { return {'name': 'popover/coachMarkPopover', 'styles': "#wunderlist-base .coach-mark{min-height:16px;margin:12px;width:272px;} #wunderlist-base .coach-mark .coach-close{position:absolute;right:3px;top:3px} #wunderlist-base .coach-mark h2{font-size:16px;font-weight:bold;line-height:24px} #wunderlist-base .coach-mark p{font-size:13px;line-height:19.5px} " }; });
define('views/Popovers/CoachMarksPopoverView',[
  'application/runtime',

  'views/Popovers/Controllers/CoachMarksPopoverViewController',

  'views/Popovers/PopoverView',

  'template!coachMarks',

  'style!popover/coachMarkPopover'

], function (
  runtime,
  CoachMarksPopoverViewController,
  PopoverView,
  template,
  coachMarkPopoverStyle,
  undefined
) {

  

  var _ = runtime._;
  var _super = PopoverView.prototype;

  return PopoverView.extend({

    'template': template,

    'styles': [
      coachMarkPopoverStyle
    ],

    'config': {
      'bindToTarget': false,
      'margin': 30
    },

    'implements': [CoachMarksPopoverViewController],

    'emits': {
      'click .coach-close': 'close',
    },

    'initialize': function (options) {

      var self = this;

      if (options) {
        _.extend(self.config, options);
      }

      _super.initialize.apply(self, arguments);
    },

    'render': function () {

      var self = this;
      _super.render.apply(self, arguments);

      self.$el.find('h2').html(runtime.language.getLabel(self.options.titleKey).toString());
      self.$el.find('p').html(runtime.language.getLabel(self.options.text).toString());
      self.renderLocalized();

      return self;
    }
  });
});
define('templates/print/printItem',['vendor/handlebars'], function(H) {
var name = 'print/printItem';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  var buffer = "", stack1, functionType="function", escapeExpression=this.escapeExpression, self=this;

function program1(depth0,data) {
  
  
  return " <span class=\"task-starred\"></span> ";
  }

function program3(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <span class=\"duedate\"> ";
  if (stack1 = helpers.due_date) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.due_date; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</span> ";
  return buffer;
  }

function program5(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <span class=\"assignee\">";
  if (stack1 = helpers.assignee_name) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.assignee_name; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</span> ";
  return buffer;
  }

function program7(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <ul class=\"subtasks\"> ";
  stack1 = helpers.each.call(depth0, depth0.subtasks, {hash:{},inverse:self.noop,fn:self.program(8, program8, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </ul> ";
  return buffer;
  }
function program8(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <li class=\"";
  stack1 = helpers['if'].call(depth0, depth0.completed, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += "\"> ";
  if (stack1 = helpers.title) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.title; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + " </li> ";
  return buffer;
  }
function program9(depth0,data) {
  
  
  return "done";
  }

function program11(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <div class=\"note\">";
  if (stack1 = helpers.note) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.note; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</div> ";
  return buffer;
  }

  stack1 = helpers['if'].call(depth0, depth0.starred, {hash:{},inverse:self.noop,fn:self.program(1, program1, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.due_date, {hash:{},inverse:self.noop,fn:self.program(3, program3, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.assignee_name, {hash:{},inverse:self.noop,fn:self.program(5, program5, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " <span class=\"title\">";
  if (stack1 = helpers.title) { stack1 = stack1.call(depth0, {hash:{},data:data}); }
  else { stack1 = depth0.title; stack1 = typeof stack1 === functionType ? stack1.apply(depth0) : stack1; }
  buffer += escapeExpression(stack1)
    + "</span> ";
  stack1 = helpers['if'].call(depth0, depth0.subtasks, {hash:{},inverse:self.noop,fn:self.program(7, program7, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " ";
  stack1 = helpers['if'].call(depth0, depth0.note, {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});
  if(stack1 || stack1 === 0) { buffer += stack1; }
  return buffer;
  });
});
define('views/Print/PrintTaskItem',[

  'application/runtime',
  'wunderbits/WBView',

  'collections/TaskCollection',
  'collections/AssignableCollection',

  'wunderbits/helpers/date',

  'vendor/moment',

  'template!print/printItem'

], function (runtime, WBView, TaskCollection, AssignableCollection, DateHelper, moment, printItemTemplate, undefined) {

  

  var _super = WBView.prototype;

  return WBView.extend({

    'template': printItemTemplate,

    'tagName': 'li',

    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);
    },

    'render': function () {

      var self = this;

      var data = self.model.toJSON();
      var subtasksCollection = new TaskCollection('/tasks/' + data.id + '/subtasks');

      if (data.due_date) {

        data.due_date = moment(data.due_date, 'YYYY-MM-DD').format(runtime.settings.attributes.date_format);
      }

      if (data.assignee_id) {

        data.assignee_name = self.getAssigneeNameFromId(data.assignee_id, data.list_id);
      }

      if (subtasksCollection.length) {

        data.subtasks = subtasksCollection.toJSON();
      }

      if (data.completed) {

        self.$el.addClass('done');
      }

      _super.render.call(self, data);

      return self;
    },

    'getAssigneeNameFromId': function (assigneeID, listID) {
      // returns name from assigneeID by looking up in assignables collection
      var assigneesCollection = new AssignableCollection('/assignables/' + listID);
      var assigneeModel = assigneesCollection.where({'assignable_id': assigneeID})[0];

      // TODO another bug in implementation of user meta data, if I no longer have a user in my contacts
      // I cannot look up their name - FAIL FAIL FAIL
      return assigneeModel ? assigneeModel.attributes.name : '';
    }
  });
});
define('templates/print/print',['vendor/handlebars'], function(H) {
var name = 'print/print';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<h1></h1> <ul class=\"uncompleted\"></ul> <ul class=\"completed\"></ul> <div class=\"note\"></div>";
  });
});
define('templates/print/printSmartList',['vendor/handlebars'], function(H) {
var name = 'print/printSmartList';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<h2 class=\"title\"><span></span></h2> <ul class=\"uncompleted\"></ul> <ul class=\"completed\"></ul>";
  });
});
/*jshint expr:true*/
define('views/Print/PrintListItem',[

  'application/runtime',
  'wunderbits/WBView',

  'collections/TaskCollection',
  'collections/ListCollection',

  'views/Print/PrintTaskItem',

  'template!print/print',
  'template!print/printSmartList',

], function (runtime, WBView, TaskCollection, ListCollection, PrintTaskItemView, printTemplate, printSmartListTemplate, undefined) {

  

  var _ = runtime._;

  var _super = WBView.prototype;

  return WBView.extend({

    'template': printTemplate,

    'initialize': function (options) {

      options  = options || {};

      var self = this;
      _super.initialize.apply(self, arguments);

      // view configuration
      self.listId = options.listId;
      self.taskIds = options.taskIds;

      if (options.isSmartList) {

        self.isSmartList = true;
        self.smartListModels = options.smartListModels;
        self.smartListTitle = options.smartListTitle;

        self.template = printSmartListTemplate;
      }
      else {

        self.lists = new ListCollection('/lists/all');
        self.tasks = new TaskCollection('/lists/' + self.listId + '/tasks');
      }
    },

    'render': function () {

      var self = this;
      _super.render.apply(self, arguments);

      if (self.taskIds && self.taskIds.length) {

        self._printselectedItems();
      }
      else {

        self._printList();
      }

      return self;
    },

    '_setIcon': function (icon) {

      var self = this;
      self.$('h1').addClass(icon);
    },

    '_setTitle': function (title) {

      var self = this;

      if (self.isSmartList) {
        self.$('h2.title span').text(title);
      }
      else {
        self.$('h1').text(title);
      }
    },

    '_printselectedItems': function () {

      var self = this;
      var fragment = document.createDocumentFragment();
      var $list = self.$('ul.uncompleted');

      var list = self.isSmartList ? null : self.lists.get(self.listId);
      var listName = self.isSmartList ? self.smartListTitle : list.attributes.title;

      var models = self.isSmartList ? self.smartListModels : self.tasks.models;
      models = self._filterModelsByIds(models, self.taskIds);

      _.each(models, function (model) {

        fragment.appendChild(self.addSubview(new PrintTaskItemView({

          'model': model
        })).render().el);
      });

      $list.append(fragment);

      self._setTitle(listName);
      self._setIcon(self.listId);
    },

    '_printList': function () {

      var self = this;

      var tasksFragment = document.createDocumentFragment();
      var completedTasksFragment = document.createDocumentFragment();
      var $list = self.$('ul.uncompleted');
      var $completedList = self.$('ul.completed');
      var list = self.isSmartList ? null : self.lists.get(self.listId);
      var listName = self.isSmartList ? self.smartListTitle : list.attributes.title;
      var printCompleted = runtime.settings.attributes.print_completed_items === 'true' || self.listId === 'completed';

      var models = self.isSmartList ? self.smartListModels : self.tasks.models;
      _.each(models, function (model) {

        if(!model.attributes.completed) {

          tasksFragment.appendChild(self.addSubview(new PrintTaskItemView({

            'model': model
          })).render().el);
        }
        else if (printCompleted) {

          completedTasksFragment.appendChild(self.addSubview(new PrintTaskItemView({

            'model': model
          })).render().el);
        }
      });

      $list.append(tasksFragment);

      var completedTasksExist = completedTasksFragment.childNodes.length > 0;
      if (printCompleted && completedTasksExist) {

        if (self.listId !== 'completed') {
          $completedList
            .before('<h2 class="completed-heading"><span>' + runtime.language.getText('smart_list_completed') + '</span></h2>');
        }

        $completedList
          .append(completedTasksFragment);
      }

      self._setTitle(listName);
      self._setIcon(self.listId);
    },

    '_filterModelsByIds': function (models, ids) {

      return _.filter(models, function (model) {

        return _.indexOf(ids, model.attributes.id) > -1;
      });
    }
  });
});
define('styles/_print',[],function() { return {'name': '_print', 'styles': "@media print{@page{margin:2.5cm} *{margin:0;padding:0;background:none} body,.main-interface{color:#1a1919;overflow:visible !important;} body:before,.main-interface:before{display:none} body.chrome.packaged #titlebar{display:none} body.chrome.packaged .main-interface{top:0} #stacks,#modals,.popover{display:none !important} #print{display:block !important;} #print.fullscreen-note ul.subtasks{display:none !important} #print h1{font-size:17px !important;border-bottom:1px solid #000;padding-bottom:12px;margin-bottom:8px;font-weight:500 !important;position:relative;} #print h1.smartlist{border:none;} #print h1.smartlist + div h2{margin-top:-8px} #print h1 span{position:absolute;font-size:8px;left:3px;width:10px;text-align:center;top:9px} #print h1:before{font-family:'Wundercon','Arial';content:'\\2630';margin-right:8px} #print h1.inbox:before{content:'\\E000'} #print h1.starred:before{content:'\\2605'} #print h1.today:before{content:'\\E002'} #print h1.week:before{content:'\\E003'} #print h1.all:before{content:'\\221E'} #print h1.completed:before{content:'\\E001'} #print h1.task:before{content:'\\E005'} #print h1.assigned:before{content:'\\E008'} #print h1.conversations:before{content:'\\E009'} #print h2{position:relative;font-size:10px;text-align:center;border-bottom:1px solid #777;height:0;margin:8px 0;} #print h2 span{font-weight:normal;position:relative;background:#fff;padding:0 5px;top:-7px} #print .note{font-size:11px !important;width:66%;padding:5px 0 10px 0;white-space:pre-wrap;font-family:Georgia;line-height:150%;position:relative} #print ul li{padding:5px 0 5px 24px !important;border-bottom:1px dotted #777;position:relative;} #print ul li:before{font-size:16px;font-family:'Wundercon','Arial';content:'\\2610';position:absolute;left:1px;top:3px} #print ul li.done:before{content:'\\2611'} #print ul li:last-child{border-bottom:none !important} #print ul li .title{font-size:13px !important;line-height:1.5em} #print ul li .task-checkbox,#print ul li .task-separator,#print ul li .task-recurrence,#print ul li .task-attachment,#print ul li span.task-star,#print ul li .task-assign{display:none} #print ul li .duedate,#print ul li .assignee{float:right;font-size:9px !important;margin-top:4px} #print ul li .duedate{margin-left:10px} #print ul li span.task-starred{display:block !important;background:none;float:right;margin-left:10px;height:auto;width:auto;} #print ul li span.task-starred:before{font-size:16px;font-family:'Wundercon','Arial';content:'\\E004'} #print ul ul li{border-bottom:none;padding:2px 0 2px 18px !important;font-size:11px !important;line-height:1.5em;font-weight:400 !important;} #print ul ul li:before{top:1px;content:'\\E006'} #print ul ul li:last-child{margin-bottom:11px} #print ul ul li.done:before{content:'\\E007'} }" }; });
define('views/Print/PrintView',[

  'application/runtime',
  'wunderbits/WBView',

  'collections/TaskCollection',
  'collections/ListCollection',

  'wunderbits/helpers/date',

  'vendor/moment',

  'views/Print/PrintListItem',
  'views/Print/PrintTaskItem',

  'style!_print'

], function (runtime, WBView, TaskCollection, ListCollection, DateHelper, moment, PrintListItemView, PrintTaskItem, printStyle, undefined) {

  

  var $ = runtime.$;
  var _ = runtime._;

  var _super = WBView.prototype;

  // var allTasks = new TaskCollection('/tasks/all');
  var allLists = new ListCollection('/lists/all');

  var smartLists = runtime.smartLists;

  return WBView.extend({

    'styles': [printStyle],

    'id': 'print',

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);
    },

    'render': function () {

      var self = this;
      _super.render.apply(self, arguments);

      self.destroySubviews();
      self.$el.empty();

      var currentRoute = runtime.currentRoute();
      self.isFullscreenNote = /\/note\/fullscreen/.test(currentRoute);
      self.isDetailRoute = /tasks\//.test(currentRoute);

      var onlySelected = runtime.printType === 'selectedTasks' || (!runtime.printType && (self.isDetailRoute || self.isFullscreenNote));
      var taskIds = [];

      if (onlySelected) {
        if (self.isFullscreenNote || self.isDetailRoute) {
          taskIds[0] = currentRoute.split('/')[1];
        }
        else {
          taskIds = self._getSelectedTaskIds();
        }
      }

      if (currentRoute.indexOf('search') === 0) {
        self.printSearch(taskIds);
      }
      else if (_.indexOf(smartLists, runtime.listId) > -1) {
        self.printSmartList(runtime.listId, taskIds);
      }
      else {
        self.printNormalList(runtime.listId, taskIds);
      }

      self.$el.toggleClass('fullscreen-note', self.isFullscreenNote);
      self.$el.toggleClass('task-details', !self.isFullscreenNote && self.isDetailRoute && taskIds.length === 1);

      return self;
    },

    'printNormalList': function (listId, taskIds) {

      var self = this;
      var listSubview = self.addSubview(new PrintListItemView({

        'listId': listId,
        'taskIds': taskIds
      }), listId);

      self.el.appendChild(listSubview.render().el);
    },

    'printSearch': function (taskIds) {

      var self = this;
      var globalOptions = {};

      globalOptions.isSmartList = true;
      globalOptions.listId = 'search';
      globalOptions.taskIds = taskIds;

      var tasks = new TaskCollection('/search');
      if (tasks) {

        // if passed in selected tasks
        var models = tasks.models;
        if (taskIds && taskIds.length) {
          models = self.filterModelsByIds(models, taskIds);
        }

        // group smart list tasks by their list ids, or due date if week view
        var grouped = _.groupBy(models, function (model) {

          return model.attributes.list_id;
        });

        // create sorted index by list position
        var index = _.keys(grouped);
        index.sort(function (a, b) {

          var aList = allLists.get(a);
          var bList = allLists.get(b);

          var aVal = aList.attributes.position;
          var bVal = bList.attributes.position;

          return aVal > bVal ? 1 : aVal < bVal ? -1 : 0;
        });

        var fragment = document.createDocumentFragment();

        self._setSmartListTitle('search');

        // iterate over lists using sorted index
        _.each(index, function (sortedListId) {

          var taskModels = grouped[sortedListId];
          var list = allLists.get(sortedListId);
          var listOptions = {};
          var listTitle;

          listTitle = list.attributes.title;

          // setup smart list options
          listOptions.smartListTitle = listTitle;
          listOptions.smartListModels = taskModels;

          _.extend(listOptions, globalOptions);

          var listSubview = self.addSubview(new PrintListItemView(listOptions), sortedListId);

          fragment.appendChild(listSubview.render().el);
        });

        self.el.appendChild(fragment);
      }
    },

    'printSmartList': function (listId, taskIds) {

      var self = this;
      var globalOptions = {};
      var isWeekView = listId === 'week';

      globalOptions.isSmartList = true;
      globalOptions.listId = listId;
      globalOptions.taskIds = taskIds;

      var tasks = new TaskCollection('/tasks/filter/' + listId);

      if (tasks) {

        tasks.sort();
        var models = tasks.models;
        if (taskIds && taskIds.length) {

          models = self.filterModelsByIds(models, taskIds);
        }

        // group smart list tasks by their list ids, or due date if week view
        var grouped = _.groupBy(models, function (model) {

          var group;

          if (isWeekView) {

            var groupDate = model.attributes.due_date;
            var today = moment().sod().format('YYYY-MM-DD');

            if (moment(groupDate, 'YYYY-MM-DD').valueOf() < moment().sod().valueOf()) {

              group = today;
            }
            else {

              group = groupDate;
            }
          }
          else {

            group = model.attributes.list_id;
          }

          return group;
        });

        // create sorted index by list position
        var index = _.keys(grouped);
        index.sort(function (a, b) {

          var aVal, bVal;

          if (isWeekView) {

            aVal = moment(a, 'YYYY-MM-DD').valueOf();
            bVal = moment(b, 'YYYY-MM-DD').valueOf();
          }
          else {

            var aList = allLists.get(a);
            var bList = allLists.get(b);

            aVal = aList.attributes.position;
            bVal = bList.attributes.position;
          }

          return aVal > bVal ? 1 : aVal < bVal ? -1 : 0;
        });

        var fragment = document.createDocumentFragment();

        self._setSmartListTitle(listId);

        // iterate over lists using sorted index
        _.each(index, function (sortedListId) {

          var taskModels = grouped[sortedListId];
          var list = allLists.get(sortedListId);
          var listOptions = {};
          var listTitle;

          if (isWeekView) {

            var titleDate = taskModels[taskModels.length - 1].attributes.due_date;

            if (DateHelper.isHumanizeable(titleDate)) {

              listTitle = runtime.language.getText(DateHelper.humanizeDueDate(titleDate, 'YYYY-MM-DD', true));
            }
            else {

              listTitle = moment(titleDate, 'YYYY-MM-DD').format('dddd');
            }

            listTitle += ', ' + moment(titleDate, 'YYYY-MM-DD').format('MMM. DD');
          }
          else {

            listTitle = list.attributes.title;
          }

          // setup smart list options
          listOptions.smartListTitle = listTitle;
          listOptions.smartListModels = taskModels;

          _.extend(listOptions, globalOptions);

          var listSubview = self.addSubview(new PrintListItemView(listOptions), sortedListId);

          fragment.appendChild(listSubview.render().el);
        });

        self.el.appendChild(fragment);
      }
    },

    '_setSmartListTitle': function (listId) {

      var self = this;
      var isToday = listId === 'today';

      var smartListLocalization = {
        'conversations': 'smart_list_conversations',
        'assigned': 'smart_list_assigned_to_me',
        'starred': 'smart_list_starred',
        'today': 'smart_list_today',
        'week': 'smart_list_week',
        'all': 'smart_list_all',
        'completed': 'smart_list_completed',
        'search': 'placeholder_search'
      };

      var searchString = listId === 'search' ? ' ' + runtime.currentSearchTerm : '';

      var localizedSmartListTitle = runtime.language.getText(smartListLocalization[listId]);

      self.$el.prepend('<h1 class="smartlist ' + listId + '">' + localizedSmartListTitle + searchString + '</h1>');

      if (isToday) {

        var currentDate = new Date().getDate();
        self.$('h1').prepend('<span>' + currentDate + '</span>');
      }
    },

    '_getSelectedTaskIds': function () {

      var taskIds = [];

      var $taskList = $('.task-list');
      var $selectedTasks = $taskList.find('.selected, .active');

      _.each($selectedTasks, function (task) {

        taskIds.push($(task).attr('rel'));
      });

      return taskIds;
    },

    'filterModelsByIds': function (models, ids) {

      return _.filter(models, function (model) {

        return _.indexOf(ids, model.attributes.id) > -1;
      });
    }
  });
});
define('wunderbits/helpers/url',[
  '../WBSingleton'
], function (WBSingleton, undefined) {

  

  return WBSingleton.extend({

    'parseQueryString': function (qs, params) {

      var tokens = qs.split('&');
      var token;
      var i = tokens.length + 1;
      while (--i) {
        token = tokens[i - 1].split('=');
        params[token[0]] = decodeURIComponent(token[1]);
      }
    },

    'parseUrl': function (url) {

      var self = this;
      var link = document.createElement('a');
      link.href = url;

      var params = {};
      self.parseQueryString(link.search && link.search.substr(1), params);
      self.parseQueryString(link.hash && link.hash.substr(1), params);

      return {
        'protocol': link.protocol || 'http',
        'host': link.host || link.hostname,
        'path': link.pathname,
        'params': params
      };
    }

  });
});
define('templates/packaged/webview',['vendor/handlebars'], function(H) {
var name = 'packaged/webview';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div class=\"container\"> <a class=\"icon close-webview\"></a> </div>";
  });
});
define('styles/packaged/_webview',[],function() { return {'name': 'packaged/_webview', 'styles': ".webview{position:fixed;top:0;bottom:0;right:0;left:0;padding:100px;background:rgba(0,0,0,0.5);z-index:9999;} .webview .container{border:8px solid rgba(255,255,255,0.6);-webkit-border-radius:10px;border-radius:10px;position:relative;} .webview .container a.icon.close-webview{position:absolute;top:8px;right:8px} .webview webview{border:1px solid rgba(0,0,0,0.2);background-color:#fff;height:100%;width:100%;display:block} " }; });
define('views/Packaged/WebView',[

  'application/runtime',

  'wunderbits/helpers/url',
  'wunderbits/WBView',

  'template!packaged/webview',
  'style!packaged/_webview'

], function (
  runtime,
  UrlHelper,
  WBView,
  webViewTemplate,
  webViewStyle,
  undefined
) {

  

  var $ = runtime.$;
  var _super = WBView.prototype;

  return WBView.extend({

    'className': 'webview hidden',

    'styles': [webViewStyle],

    'template': webViewTemplate,

    'events': {
      'click .close-webview': '_cleanUp'
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.bindTo(runtime, 'webview:open', self.openUrl);
    },

    'openUrl': function (url) {

      var self = this;

      // clean up the old webview, if it exists
      self._cleanUp();

      // generate a new webview & attach events to it
      self.webView = $('<webview src="' + url + '" partition="persist:wunderlist"></webview>');
      self.webView[0].addEventListener('loadstop', self._loadStop);

      // Insert the new webview into DOM
      var container = self.$('.container');
      container.append(self.webView);
      self.$el.removeClass('hidden');
    },

    '_loadStop': function () {

      var self = this;
      var url = self.webView.attr('src');

      // Check if the page we landed on is wunderlist
      var parsed = UrlHelper.parseUrl(url);
      if (parsed.host.match(/^[a-z]+.wunderlist.com$/) && parsed.params && parsed.params.u) {

        // destroy the webview
        self._cleanUp();

        var returnRoute = decodeURIComponent(parsed.params.u);
        runtime.trigger('webview:close', returnRoute, parsed.params);
      }
    },

    '_cleanUp': function () {

      var self = this;

      // hide the UI
      self.$el.addClass('hidden');

      // no frame, no cleanup
      var webView = self.webView;
      if (!webView || !webView.length) {
        return;
      }

      // detach handlers
      webView[0].stop();
      webView[0].removeEventListener('loadstop', self._loadStop);
      webView.remove();

      // GC
      self.webView = null;
    }
  });
});

define('helpers/sendViaEmail',[

  'application/runtime',

  'collections/ListCollection',
  'collections/TaskCollection',

  'wunderbits/helpers/date',

  'vendor/moment',

  'wunderbits/WBSingleton'

], function (runtime, ListCollection, TaskCollection, DateHelper, moment, WBSingleton, undefined) {

  

  var _ = runtime._;
  var window = runtime.global;

  var allTasks = new TaskCollection('/tasks/all');
  var allLists = new ListCollection('/lists/all');
  var smartLists = _.clone(runtime.smartLists);
  var smartListLocalization = {

    'assigned': 'smart_list_assigned_to_me',
    'starred': 'smart_list_starred',
    'today': 'smart_list_today',
    'week': 'smart_list_week',
    'all': 'smart_list_all',
    'completed': 'smart_list_completed',
    'search': 'placeholder_search',
    'conversations': 'smart_list_conversations'
  };

  var self = WBSingleton.extend({

    'emailList': function (listId, taskIds) {

      if (runtime.currentRoute().indexOf('search') === 0) {

        self.emailSearch(taskIds);
      }
      else if (_.indexOf(smartLists, listId) > -1) {

        self.emailSmartList(listId, taskIds);
      }
      else {

        self.emailNormalList(listId, taskIds);
      }
    },

    'emailNormalList': function (listId, taskIds) {

      // email a normal list
      var emailBody = '';

      var list = allLists.get(listId);

      if (list) {

        var listTitle = list.attributes.title;
        var emailTitle = 'Wunderlist - ' + listTitle;

        emailBody = listTitle + "%0d%0a%0d%0a";
        emailBody += self.buildList(listId, taskIds);

        self.sendMailContent(emailTitle, emailBody);
      }
    },

    'emailSearch': function (taskIds) {

      var emailBody = '';
      var localizedSmartListTitle = runtime.language.getText(smartListLocalization.search);
      var emailTitle = 'Wunderlist - ' + localizedSmartListTitle + ' ' + runtime.currentSearchTerm;
      emailBody += localizedSmartListTitle + ' ' + runtime.currentSearchTerm + "%0d%0a%0d%0a";

      var tasks = new TaskCollection('/search');

      if (tasks) {

        var models = tasks.models;
        if (taskIds) {

          models = self.filterModelsByIds(models, taskIds);
        }
        // group smart list tasks by their list ids, or due date if week view
        var grouped = _.groupBy(models, function (model) {

          return model.attributes.list_id;
        });

        // create sorted index by list position
        var index = _.keys(grouped);
        index.sort(function (a, b) {

          var aList = allLists.get(a);
          var bList = allLists.get(b);
          var aVal = aList.attributes.position;
          var bVal = bList.attributes.position;

          return aVal > bVal ? 1 : aVal < bVal ? -1 : 0;
        });

        // iterate over lists using sorted index
        _.each(index, function (sortedListId) {

          var taskModels = grouped[sortedListId];
          var list = allLists.get(sortedListId);
          var listTitle = list.attributes.title;

          emailBody += listTitle + "%0d%0a%0d%0a";

          _.each(taskModels, function (taskModel) {

            emailBody += self.buildTask(taskModel.attributes.id);
          });

          emailBody += "%0d%0a%0d%0a";
        });

        self.sendMailContent(emailTitle, emailBody);
      }
    },

    'emailSmartList': function (listId, taskIds) {

      // email a smart list
      var isWeekView = listId === 'week';
      var emailBody = '';

      var smartListTitle = listId;
      var localizedSmartListTitle = runtime.language.getText(smartListLocalization[smartListTitle]);
      var emailTitle = 'Wunderlist - ' + localizedSmartListTitle;
      emailBody += localizedSmartListTitle + "%0d%0a%0d%0a";

      var tasks = new TaskCollection('/tasks/filter/' + listId);

      if (tasks) {

        var models = tasks.models;
        if (taskIds) {

          models = self.filterModelsByIds(models, taskIds);
        }
        // group smart list tasks by their list ids, or due date if week view
        var grouped = _.groupBy(models, function (model) {

          var group;

          if (isWeekView) {

            var groupDate = model.attributes.due_date;
            var today = moment().sod().format('YYYY-MM-DD');

            if (moment(groupDate, 'YYYY-MM-DD').valueOf() < moment().sod().valueOf()) {

              group = today;
            }
            else {

              group = groupDate;
            }
          }
          else {

            group = model.attributes.list_id;
          }

          return group;
        });

        // create sorted index by list position
        var index = _.keys(grouped);
        index.sort(function (a, b) {

          var aVal, bVal;

          if (isWeekView) {

            aVal = moment(a, 'YYYY-MM-DD').valueOf();
            bVal = moment(b, 'YYYY-MM-DD').valueOf();
          }
          else {

            var aList = allLists.get(a);
            var bList = allLists.get(b);

            aVal = aList.attributes.position;
            bVal = bList.attributes.position;
          }

          return aVal > bVal ? 1 : aVal < bVal ? -1 : 0;
        });

        // iterate over lists using sorted index
        _.each(index, function (sortedListId) {

          var taskModels = grouped[sortedListId];
          var list = allLists.get(sortedListId);
          var listTitle;

          if (isWeekView) {

            var titleDate = taskModels[taskModels.length - 1].attributes.due_date;

            if (DateHelper.isHumanizeable(titleDate)) {

              listTitle = runtime.language.getText(DateHelper.humanizeDueDate(titleDate, 'YYYY-MM-DD', true));
            }
            else {

              listTitle = moment(titleDate, 'YYYY-MM-DD').format('dddd');
            }

            listTitle += ', ' + moment(titleDate, 'YYYY-MM-DD').format('MMM. DD');
          }
          else {

            listTitle = list.attributes.title;
          }

          emailBody += encodeURIComponent(listTitle) + "%0d%0a%0d%0a";

          _.each(taskModels, function (taskModel) {

            emailBody += self.buildTask(taskModel.attributes.id);
          });

          emailBody += "%0d%0a%0d%0a";
        });

        self.sendMailContent(emailTitle, emailBody);
      }
    },

    // string builders
    'buildTask': function (taskId) {

      var taskString = '';

      var task = allTasks.get(taskId);

      if (task) {

        var title = task.attributes.title;

        var dueDate = task.attributes.due_date;
        dueDate = dueDate ? ' ' + self.getDueDateString(dueDate) : '';

        var starred = task.attributes.starred ? ' *' : '';

        taskString += encodeURIComponent('\u2610 ' + title + dueDate + starred) + '%0d%0a';

        if (task.hasSubtasks()) {

          _.each(task.subtasksCollection.models, function(subtask) {

            var checkbox = subtask.attributes.completed ? '\u2612' : '\u2610';

            taskString += encodeURIComponent('\u2001\u2001\u2001' + checkbox + ' ' + subtask.attributes.title) + '%0d%0a';
          });
        }

        if (task.hasNote()) {

          var lines = task.attributes.note.split(/\r\n|\r|\n/g);

          _.each(lines, function (line) {

            taskString += encodeURIComponent('\u2001\u2001\u2001' + line) + '%0d%0a';
          });
        }
      }

      return taskString;
    },

    'buildList': function (listId, taskIds, completed) {

      var listString = '';

      // iterate each task in list
      var list = new TaskCollection('/lists/' + listId + '/tasks');

      // filter out or only use completed tasks
      var models = list.where({'completed': !!completed});
      if (taskIds) {

        models = self.filterModelsByIds(models, taskIds);
      }

      _.each(models, function (taskModel) {

        listString += self.buildTask(taskModel.attributes.id);
      });

      return listString;
    },

    // emailer
    'sendMailContent': function (subject, body) {

      runtime.publish('email:emailing');

      var footer = "%0d%0a" + encodeURIComponent(runtime.language.getText('share_list_email_signature').replace(/\\n/g, 'NNEEWWLLIINNEE')).replace(/NNEEWWLLIINNEE/g, '%0d%0a');
      var mailToUrl = "mailto:?subject=" + encodeURIComponent(subject) + "&body=";

      // Potential fix for certain browsers, but is really bad man.  Chrome + mail.app has no problems emailing long, long lists
      // var usedLength = footer.length + mailToUrl.length;
      // body = Strings.trim(body, 2000 - usedLength);

      mailToUrl += body + footer;

      runtime.openUrl(mailToUrl);

      window.setTimeout(function () {

        runtime.unpublish('email:emailing');
      }, 500);
    },

    // helpers
    'getDueDateString': function (serverDueDate) {

      return moment(serverDueDate, 'YYYY-MM-DD').format(runtime.settings.attributes.date_format);
    },

    'filterModelsByIds': function (models, ids) {

      return _.filter(models, function (model) {

        return _.indexOf(ids, model.attributes.id) > -1;
      });
    }
  });

  return self;
});
define('helpers/ShareDialogHelper',[

  'application/runtime',

  'collections/ListCollection',
  'collections/ShareCollection',

  'views/Sharing/SharingListPopoverView',

  'wunderbits/WBEventEmitter'

], function (

  runtime,
  ListCollection, ShareCollection,
  SharingListPopoverView,
  WBEventEmitter,
  undefined

) {

  

  var _ = runtime._;

  var _super = WBEventEmitter.prototype;

  return WBEventEmitter.extend({

    'initialize': function (options) {

      var self = this;
      _super.initialize.apply(self, arguments);

      if (!options.container) {
        throw new Error('Cannot initialize without container element');
      }

      if (!options.namespace) {
        throw new Error('Cannot initialize without an unique namespace');
      }

      self.lists = new ListCollection('/lists/all');
      self.shares = new ShareCollection('/shares/all');

      self.bindTo(runtime, self.options.namespace, self.togglePopover);
    },

    'getPopoverConfig': function (options) {

      var self = this;
      var returnFocus = runtime.focus;
      var config = {};

      config.list = self.lists && self.lists.get(options.listId);
      config.share = self.shares.get(config.list.attributes.share_id);
      config.token = options.token;
      config.fbId = options.fbId;
      config.position = 'right';
      config.trigger = 'sidebar';

      config.onClose = function () {

        self.popover.destroy();
        self.popover = null;

        if (runtime.focus === 'shareList') {
          runtime.trigger('focus:set', returnFocus);
        }
      };

      if (options.cameFromActionBar) {

        config.target = self.options.container.find('.actionBar .action-share');
        config.position = 'top';
        config.trigger = 'actionBar';
      }
      else if (!runtime.env.isLarge()) {

        config.target = self.options.container.find('.listToolbar-toggle-sharepopover');
        config.position = runtime.env.isMicro() ? 'left' : 'bottom';
        config.offset = runtime.env.isMicro() ? 0 : -123;
        config.trigger = 'listNavBar';
      }
      else {

        config.target = self.options.container.find('#lists li[rel="' + options.listId + '"]');
      }

      return config;
    },

    'togglePopover': function (state, options) {

      var self = this;

      // destroy any old popover that might be here
      if (self.popover) {
        self.popover.destroy();
      }

      var action = function () {

        var config = self.getPopoverConfig(options);

        self.popover = new SharingListPopoverView(config);
        self.popover.toggle(state, options);

        self.bindTo(self.popover, 'closed', function () {
          self.popover.destroy();
          delete self.popover;
        });

        runtime.trigger('focus:set', 'shareList');
      };

      _.delay(action, options.shouldWait ? 750 : 0);
    }
  });
});
define('templates/application/layout',['vendor/handlebars'], function(H) {
var name = 'application/layout';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); data = data || {};
  


  return "<div id=\"stacks\"> <div id=\"lists\" class=\"stack\"></div> <div id=\"tasks\" class=\"stack\"></div> </div>";
  });
});
define('views/Main/MainInterfaceView',[

  'application/runtime',
  'application/FocusManager',

  'views/Main/ModalManagerView',
  'views/Sidebar/SidebarView',
  'views/Tasks/TasksBrowserView',
  'views/Toolbar/ListToolbarView',
  'views/Toolbar/ActionBarView',
  'views/Tasks/AddTaskView',
  'views/Tasks/404',
  'views/TaskDetail/TaskDetailView',
  'views/Notifications/SystemAlertView',
  'views/Sounds/SoundPlayer',
  'views/Popovers/CoachMarksPopoverView',
  'views/Print/PrintView',
  'views/Packaged/WebView',
  'views/Packaged/MacTitleBarView',

  'collections/TaskCollection',

  'wunderbits/WBView',
  'wunderbits/WBBlurHelper',
  'wunderbits/models/StateModel',
  'wunderbits/helpers/selection',

  'helpers/sendViaEmail',
  'wunderbits/helpers/strings',
  'helpers/notifications',
  'helpers/ShareDialogHelper',

  'template!application/layout'

], function (
  runtime, FocusManager,
  ModalManagerView, SidebarView, TasksBrowserView, ListToolbarView, ActionBarView, AddTaskView, TBV404View, TaskDetailView, SystemAlertView, SoundPlayerView, CoachMarksPopoverView, PrintView, PackagedWebView, MacTitleBarView,
  TaskCollection,
  WBView, WBBlurHelper, StateModel, Selection,
  sendViaEmail, Strings, Notifications, ShareDialogHelper,
  layoutTemplate,
  undefined
) {

  

  var window = runtime.global;
  var _ = runtime._;
  var $ = runtime.$;

  var _super = WBView.prototype;
  var _blur = WBBlurHelper;
  var _notifications = Notifications;

  return WBView.extend({

    'template': layoutTemplate,

    'className': 'main-interface',

    'events': function () {

      var events = {

        'focus input': '_onFocusInputs',
        'blur input': '_onBlurInputs',
        'click .tasks-scroll': '_onClickEmptyArea',
        'scroll':'_preventOffscreenScroll'
      };

      if (!runtime.env.isTouchDevice()) {

        var mouseOnlyEvents = {

          'mousemove': '_throttledCheckMousePositionForActionBar'
        };

        _.extend(events, mouseOnlyEvents);
      }

      if (runtime.settings.isTouchEnabled()) {

        var touchEvents = {
          'swipeleft #tasks':'_onSwipeLeftTasks',
          'swiperight #tasks':'_onSwipeRightTasks',
          'swiperight #detail .body':'_onSwipeDetail'
        };

        _.extend(events, touchEvents);
      }

      return events;
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.focusManager = new FocusManager();

      self.bindTo(runtime, 'lists:ready', function (allLists) {
        self.lists = allLists;
      });

      self._debouncedDelegateEvents = _.debounce(self.delegateEvents, 100);
      self._throttledCheckMousePositionForActionBar = _.throttle(self._checkMousePositionForActionBar, 100);

      self.bindTo(runtime.env, 'change:context', self.onChangeEnvContext);

      self.bindTo(runtime, 'search:start', self.onSearchStart);
      self.bindTo(runtime, 'search:cancel', self.onSearchCancel);
      self.bindTo(runtime, 'collection:search:ready', self.onSearchResults);
      self.bindTo(runtime, 'route:search', self.onSearchResults);

      self.bindTo(runtime, 'interface:setListOrFilter', self.setCurrentListOrFilter);
      self.bindTo(runtime, 'sidebar:toggle', self.toggleSidebar);
      self.bindTo(runtime, 'detail:toggle', self.toggleDetailView);
      self.bindTo(runtime, 'browser:force:render', self.setBrowserToForceRender);
      self.bindTo(runtime, 'browser:toolbar:clicked', self.scrollBrowser);
      self.bindTo(runtime, 'browser:show404', self.showTBV404);
      self.bindTo(runtime, 'browser:hide404', self.hideTBV404);
      self.bindTo(runtime, 'sidebar:editmode:active', self.touchEditActive);
      self.bindTo(runtime, 'window:resize', self._debouncedDelegateEvents);
      self.bindTo(runtime, 'drag:enter:dropzone', _.debounce(self.onEnterDropZone, 50));
      self.bindTo(runtime, 'drag:leave:dropzone', _.debounce(self.onLeaveDropZone, 50));
      self.bindTo(runtime, 'print:start', self._print);
      self.bindTo(runtime, 'tasks:email', self._buildMailContent);
      self.bindTo(runtime, 'ie9:upgradeAlert', self._ie9UpgradeAlert);
      self.bindTo(runtime, 'touch:styleAlert', self._touchStyleAlert);
      self.bindTo(runtime, 'systemAlert:hide', self.hideSystemAlert);
      self.bindTo(runtime, 'drag:start', self._bindMouseOutEvent);
      self.bindTo(runtime, 'drag:end', self._unBindMouseOutEvent);
      self.bindTo(runtime, 'reminder:clicked', self._onClickReminder);
      self.bindTo(runtime, 'activityCenter:linkClicked', self._onClickLinkInActivityCenter);
      self.bindTo(runtime, 'blur:run', _blur.run);

      // new email handlers
      self.bindTo(runtime, 'email:list', sendViaEmail.emailList);

      // Handle API share creation failures - rarity from expired FB oauth tokens
      self.bindTo(runtime, 'share:save:failed', function (id) {

        self._showCatastrophicFailure('share', id);
      });

      self.shareDialogHelper = new ShareDialogHelper({
        'container': self.$el,
        'namespace': 'shareDialog'
      });

      self.sidebarView = self.addSubview(new SidebarView());
      self.listToolbarView = self.addSubview(new ListToolbarView());
      self.actionBarView = self.addSubview(new ActionBarView());
      self.addTaskView = self.addSubview(new AddTaskView());
      self.browserView = self.addSubview(new TasksBrowserView());
      self.taskDetailView = self.addSubview(new TaskDetailView());
      self.TBV404View = self.addSubview(new TBV404View());
      self.printView = self.addSubview(new PrintView());
      self.systemAlertView = self.addSubview(new SystemAlertView());
      self.soundPlayerView = self.addSubview(new SoundPlayerView());
      self.modalManagerView = self.addSubview(new ModalManagerView());

      // webview for facebook sharing
      if (runtime.env.isPackagedApp()) {
        self.webView = self.addSubview(new PackagedWebView());

        if(runtime.env.isMac()) {
          self.macTitlebarView = self.addSubview(new MacTitleBarView());
        }
      }
    },

    'setFocusToAddTask': function () {

      var self = this;
      return self.addTaskView.setFocus.apply(self.addTaskView, arguments);
    },

    'render': function () {

      var self = this;
      var $el = self.$el;
      var $body = $('body');

      _super.render.apply(self, arguments);

      runtime.trigger('set:isSidebarVisible', false);

      var taskBrowserFrag = document.createDocumentFragment();
      var toolbarFrag = document.createDocumentFragment();

      var taskScroll = document.createElement('div');
      taskScroll.className = 'tasks-scroll';

      $el.find('#lists')
        .append(self.sidebarView.render().el);

      runtime.trigger('timeline:end', 'refresh_start');

      toolbarFrag.appendChild(self.listToolbarView.render().el);
      toolbarFrag.appendChild(taskScroll);
      toolbarFrag.appendChild(self.actionBarView.render().el);

      $el.find('#tasks').append(toolbarFrag);

      taskBrowserFrag.appendChild(self.addTaskView.el);
      taskBrowserFrag.appendChild(self.browserView.el);
      taskBrowserFrag.appendChild(self.TBV404View.el);

      taskScroll.appendChild(taskBrowserFrag);

      $el.find('#stacks').append(self.taskDetailView.el);

      $el.append(self.modalManagerView.render().el);
      $el.append(self.soundPlayerView.render().el);

      runtime.trigger('interface:ready');

      runtime.trigger('timeline:start', 'main_interface_rendered');

      // TODO: what the hell is this doing in here? move to an initializer or
      // an event callback - but should not be in a render method!!
      // start notification helper - currently only handles desktop notifications
      _notifications.start();

      $body.removeClass('login');

      self.defer(function () {

        runtime.trigger('analytics:Application:initialContext', String(runtime.env.getContext()).replace(/\"/g, ''));

        if (runtime.env.isMedium() || runtime.env.isLarge() || runtime.currentRoute().indexOf('search') > -1) {
          self.toggleSidebar(true);
        }
        else {
          self.toggleSidebar(false);
        }
      });

      self._bindScrollEvents();

      // On packaged app, append the webview that would be used for facebook/google stuff
      if (runtime.env.isPackagedApp()) {
        $el.append(self.webView.render().el);
        $body.addClass('packaged');

        if (runtime.user.isUnregistered()) {
          $body.addClass('unregistered');
        }

        if(runtime.env.isMac()) {
          $el.append(self.macTitlebarView.render().el);
        }
      }

      return self;
    },

    'onDestroy': function () {

      var self = this;

      self.focusManager.destroy();
    },

    '_onClickReminder': function () {

      var self = this;
      self.hasReminderBeenClicked = true;
    },

    '_bindMouseOutEvent': function () {

      var self = this;

      if (!runtime.isSidebarVisible) {

        self.dragToOpenSidebarBind = self.bindTo($(document), 'mouseout touchmove', function(e) {

          var eType = e.originalEvent.touches && e.type === 'touchmove' ? e.originalEvent.touches[0]: e.originalEvent;

          if (eType.pageX <= 35) {

            runtime.trigger('sidebar:toggle', true);
          }
          else if (eType.pageX >= ($(document).width() - 35)) {

            runtime.trigger('sidebar:toggle', false);
          }
        });
      }
    },

    '_unBindMouseOutEvent' : function () {

      var self = this;
      self.dragToOpenSidebarBind && self.unbindFrom(self.dragToOpenSidebarBind);
    },

    '_bindScrollEvents': function () {

      var self = this;

      var scrollModel = new StateModel();
      var scrollables = {
        'tasks': self.$('.tasks-scroll'),
        'lists': self.$('.lists-scroll')
      };

      // loop over the scrollables
      Object.keys(scrollables).forEach(function (type) {

        var scrollable = scrollables[type];
        scrollModel.set(type, scrollable.scrollTop());
        // listen for the scroll event
        scrollable.scroll(function () {
          scrollModel.set(type, scrollable.scrollTop());
        });
      });

      // if scroll changes, broadcast it
      self.bindTo(scrollModel, 'change', function (type) {

        type = type[0];
        runtime.trigger('interface:scroll', type);
      });
    },

    '_ie9UpgradeAlert': function () {

      var self = this;

      _.delay(function () {

        self.$el.prepend(self.systemAlertView.render({
          'message':runtime.language.getLabel('web_upgrade_ie9_not_supported', '$web_upgrade_to_chrome', '$web_upgrade_to_ie10')
        }).el);

        self.$('#stacks').addClass('sytem-alert-active');
        runtime.trigger('systemAlert:slideDown');

        self._wrapIE9UpgradeLinks();
      }, 5000);
    },

    '_wrapIE9UpgradeLinks': function () {

      var self = this;

      self.systemAlertView.$('.token_0').wrap('<a href="https://www.google.com/intl/en/chrome/browser/" target="_blank" />');
      self.systemAlertView.$('.token_1').wrap('<a href="http://windows.microsoft.com/en-us/internet-explorer/download-ie" target="_blank" />');
    },

    '_touchStyleAlert': function () {

      var self = this;

      if (!runtime.env.isChromeOS()) {

        _.delay(function () {

          self.$el.prepend(self.systemAlertView.render({
            'message': runtime.language.getLabel('web_enable_touch_styles_alert'),
            'buttonOne': runtime.language.getLabel('button_yes'),
            'buttonTwo': runtime.language.getLabel('rate_app_button_no'),
            'buttonOneAction': self.setTouchStyles,
            'buttonTwoAction': self.disableTouchStyles
          }).el);

          self.systemAlertView.$el.addClass('touch-style-notice');
          self.$('#stacks').addClass('sytem-alert-active touch-style-notice');
          runtime.trigger('systemAlert:slideDown');
        }, 5000);
      }
    },

    'setTouchStyles': function  () {

      var self = this;
      var touchSetting = {};
      touchSetting[runtime.env.getEnvIdentifier()] = '1';
      runtime.settings.save(touchSetting, {
        'success': function () {
          self.systemAlertView.hideAlert();
          runtime.trigger('analytics:touchEnableAlert:true');

          window.location = '';
        }
      });
    },

    'disableTouchStyles': function  () {

      var self = this;
      var touchSetting = {};
      touchSetting[runtime.env.getEnvIdentifier()] = '0';
      runtime.settings.save(touchSetting, {
        'success': function () {
          runtime.trigger('analytics:touchEnableAlert:false');
          self.systemAlertView.hideAlert();
        }
      });
    },

    'hideSystemAlert': function () {

      var self = this;
      var $stacks = self.$('#stacks');
      $stacks.addClass('closing');

      _.delay(function () {

        $stacks.removeClass('closing sytem-alert-active touch-style-notice');
      }, 600);
    },

    'setBrowserToForceRender': function () {

      var self = this;

      self.forceTaskBrowserToRender = true;

      _.delay(function () {
        self.forceTaskBrowserToRender = false;
      }, 100);
    },

    'setCurrentList': function (id, model) {

      var self = this;

      if (!model) {
        model = self.lists.get(id);
      }

      self.sidebarView.trigger('select', id);
      self.browserView.renderListWithID(id);
      self.addTaskView.render({
        'listID': id,
        'listModel':model
      });
      self.lastListID = id;
      self.lastBrowserContext = self.lastContext = 'list';
    },

    'setCurrentListOrFilter': function (id, inboxID) {

      var self = this;
      if (id && runtime.smartLists.indexOf(id) !== -1) {
        self.sidebarView.trigger('select', id);
        self.addTaskView.render({ listID: inboxID, filter: id });
        self.browserView.renderFilterOfType(id);
      }
      else {
        self.setCurrentList(id);
      }
      self.toggleDetailView(false);
    },

    'editListWithID': function (id) {

      var self = this;
      self.sidebarView.editListWithID(id);
    },

    'touchEditActive': function () {

      var self = this;
      self.disableSidebarToggle = true;
    },

    'waitToShowList': function () {

      var self = this;
      self.sidebarView.trigger('deselect');
    },

    'scrollBrowser': function (value) {

      var self = this;
      self.$('.tasks-scroll').animate({
        'scrollTop': value || 0
      });
    },

    'onChangeEnvContext': function (options) {

      var self = this;
      self.toggleDetailView(self.$el.hasClass('detail-visible'), false);

      if ((runtime.env.isMicro() || runtime.env.isMini()) && (options.oldContext !== 'micro' && options.oldContext !== 'mini')) {

        self.toggleSidebar(false);
      }
      else if (runtime.env.isMedium()) {

        runtime.trigger('set:isSidebarVisible', false);
        self.toggleSidebar(true, null, options.oldContext !== 'large');
      }
      else if (runtime.env.isLarge()) {

        // clean up if is back to large!
        // work around weird chrome window resize bug on print
        self.$('#tasks')
          .removeClass('animated slided')
          .removeAttr('style');
      }
    },

    '_onSwipeLeftTasks': function (ev) {

      var self = this;

      if (ev.type === 'mousedown' && $(ev.target).closest('li').hasClass('taskItem')) {

        ev.stopPropagation();
        return;
      }

      self.toggleSidebar(false);
      runtime.trigger('sidebar:editmode:end');
      runtime.trigger('analytics:ItemBrowser:swipeToLeft', 'hideSidebar');
    },

    '_onSwipeRightTasks': function (ev) {

      var self = this;

      if (ev.type === 'mousedown' && $(ev.target).closest('li').hasClass('taskItem')) {

        ev.stopPropagation();
        return;
      }

      if (self._swipeRightTimeout) {
        window.clearTimeout(self._swipeRightTimeout);
      }

      self.isHandlingSwipeAction = true;

      if (self.isDetailViewVisible) {
        runtime.trigger('detail:close');
        runtime.trigger('analytics:ItemBrowser:swipeToRight', 'closeDetail');
      }
      else {
        self.toggleSidebar(true);
        runtime.trigger('analytics:ItemBrowser:swipeToRight', 'showSidebar');
      }

      self._swipeRightTimeout = window.setTimeout(function () {
        self.isHandlingSwipeAction = false;
      }, 100);
    },

    '_onSwipeDetail': function () {

      if (Selection.getSelectedText()) {

        return false;
      }

      var self = this;
      self.$('.tasks-scroll').trigger('click');
      runtime.trigger('analytics:Detail:swipeToRight', 'closeSelf');
    },

    'toggleDetailView': function (state) {

      var self = this;

      if (state === self.isDetailViewVisible) {
        return;
      }

      var $detail = self.$el.find('#detail');
      var $tasks = self.$el.find('#tasks');

      if (self.hasToggledDetailViewOnce) {

        $detail.addClass('animated');
        $tasks.addClass('animated');

        if (self._toggleDetailTimeout) {
          window.clearTimeout(self._toggleDetailTimeout);
        }

        self._toggleDetailTimeout = window.setTimeout(function () {
          $detail.removeClass('animated');
          $tasks.removeClass('animated');
        }, 300);
      }

      self.$el.toggleClass('detail-visible', state);
      runtime.trigger('detail:toggled', state);

      self.isDetailViewVisible = state;
      self.hasToggledDetailViewOnce = true;

      if (self.lastContext === 'task') {
        delete self.lastContext;
      }
    },

    '_onClickEmptyArea': function (ev) {

      var self = this;
      var $target = $(ev.target);

      if ($target.hasClass('tasks-scroll') || $target.hasClass('heading') || $target.hasClass('grouped-tasks')) {

        _blur.run();

        if (runtime.currentRoute().indexOf('tasks') >= 0) {

          runtime.trigger('detail:close', {
            'fromAction': 'clickEmptyArea'
          }).trigger('analytics:ItemBrowser:clickEmptyArea', 'closeDetail');
        }
        else if (runtime.focus === 'sidebar') {

          runtime.trigger('sidebar:navigate', 'right');
        }

        if (!self.isHandlingSwipeAction && runtime.isSidebarVisible && (runtime.env.isMicro() || runtime.env.isMini())) {
          runtime.trigger('sidebar:toggle', false).trigger('focus:set', 'browser').trigger('analytics:ItemBrowser:clickEmptyArea', 'hideSidebar');
        }
      }
    },

    // TODO: find a real fix for the shifting user Interface

    '_onFocusInputs': function() {

      this.$('#stacks').css({'position': 'absolute'});
    },

    '_onBlurInputs': function() {

      this.$('#stacks').removeAttr('style');
    },

    'onSearchStart': function (term) {

      var self = this;

      var callback = function () {

        self.lastContext = self.lastBrowserContext = 'search';
        self.lastSearchTerm = term;
        self.browserView.lastRenderedFilterType = null;
        self.browserView.lastRenderedListID = null;
      };

      self._searchCallback = window.setTimeout(callback, 1000);
      callback();
    },

    'onSearchCancel': function () {

      var self = this;
      if (self.lastContext === 'search') {
        self.lastBrowserContext = 'searchCancel';
        runtime.trigger('focus:set', 'sidebar');
        self.lastSearchTerm = null;

        if (self._searchCallback) {
          window.clearTimeout(self._searchCallback);
        }
      }
    },

    'onSearchResults': function (url, options) {

      var self = this;
      options = options || {};

      var term = options.term || runtime.lastSearchTerm;
      var hideUI = self.lists.hasSavedSearch(self.lastSearchTerm) || self.lists.hasSavedSearch(term) || !!term;
      self.addTaskView.$el.toggleClass('hidden', hideUI);
    },

    'showList': function (list, options) {

      var self = this;
      var showSidebar = true;
      var fromSearchRoute;
      if (self.sidebarView.listsView.blockListChangeFromDragEnd && runtime.env.isTouchDevice()) {
        return;
      }

      options || (options = {});

      // 404 schtuff for rendering default
      if (!(options && options['404'])) {

        self.browserView.$el.removeClass('hidden');
        self.hideTBV404();
      }
      else if (options && options['404']) {

        self.browserView.$el.addClass('hidden');
      }

      if (self.lastContext !== 'list' || list.id !== self.lastListID) {

        fromSearchRoute = self.lastContext === 'search' && self.lastBrowserContext === 'search';
        self.setCurrentList(list.id, list);

        var isShareRouteActive = runtime.currentRoute().indexOf('/share') >= 0;
        !isShareRouteActive && self.toggleDetailView(false);

        self.taskDetailView.state.set('wasOpenBeforeRender', false);
      }

      // make sure this is always escaped, since it's user input
      var displayLabel = list.escape('title');
      var displayName = displayLabel;

      if (list.id === 'inbox') {

        displayLabel = runtime.language.getLabel('smart_list_inbox').toString();
        displayName = runtime.language.getText('smart_list_inbox');
      }

      self.listToolbarView.setTitle(displayName, list);

      var isShareButtonShown = list && list.id === 'inbox';
      self.listToolbarView.toggleShareButton(isShareButtonShown, list);

      if (!options.wasPreviousEditMode && !options.edit && (runtime.env.isMicro() || runtime.env.isMini()) && !self.sidebarView.isTouchEditing && runtime.lastAuthRoute.indexOf('search') === -1 || fromSearchRoute) {

        showSidebar = false;
      }

      if (!self.sidebarView.isTouchEditing) {

        self.sidebarView.cancelEditModes();
      }

      if (runtime.env.isMicro() || runtime.env.isMini()) {

        runtime.trigger('sidebar:toggle', showSidebar);
      }

      runtime.trigger('search:cancel');

      self.addTaskView.$el.toggleClass('hidden', list.isSavedSearch());

      runtime.trigger('title:set', list.attributes.title || displayName, {
        'isNameOrId': true
      });
    },

    'showFilter': function (name, options) {

      var self = this;
      var showSidebar = true;

      if (self.lastContext !== 'filter' || self.lastFilter !== name) {

        self.browserView.$el.removeClass('hidden');

        self.sidebarView.trigger('select', name);
        self.addTaskView.render({
          'listID': options.inboxID,
          'filter': name
        });

        var title = (name === 'assigned') ? 'assigned_to_me': name;
        var displayName = runtime.language.getLabel('smart_list_' + title).toString();

        self.listToolbarView.setTitle(displayName);
        self.listToolbarView.toggleShareButton(false);
        self.browserView.renderFilterOfType(name);
        self.toggleDetailView(false);
      }

      self.sidebarView.cancelEditModes();

      if (runtime.env.isMicro() || runtime.env.isMini()) {
        showSidebar = false;
      }

      runtime.trigger('sidebar:toggle', showSidebar);
      runtime.trigger('search:cancel');

      var hideAddTask = Strings.contains(['completed', 'week', 'assigned', 'conversations'], name);
      self.addTaskView.$el.toggleClass('hidden', hideAddTask);

      self.lastBrowserContext = self.lastContext = 'filter';
      self.lastFilter = name;

      runtime.trigger('title:set', name, {
        'isNameOrId': true
      });
    },

    '_onClickLinkInActivityCenter': function () {

      var self = this;

      self.linkInActivityCenterClicked = true;

      _.delay(function () {
        self.linkInActivityCenterClicked = false;
      }, 100);
    },

    'showTask': function (task, options) {

      var self = this;
      options = options || {};

      var isTasksDetailedViewAlreadyOpen = self.lastContext === 'task' && task.id === self.lastTaskID;

      self.hideTBV404();
      self.browserView.$el.removeClass('hidden');

      if (!isTasksDetailedViewAlreadyOpen) {

        var isCompleted = task.isCompleted();
        var showCompleted = runtime.settings.attributes.show_completed_items === 'true';

        if (isCompleted && !showCompleted) {
          runtime.settings.save('show_completed_items', 'true');
        }

        options.onClose = function (ev) {

          self.disableSidebarToggle = true;

          _.delay(function () {
            self.disableSidebarToggle = false;
          }, 100);

          self.defer(function () {

            if (task && runtime.currentRoute().indexOf('tasks/' + task.id) >= 0) {

              var returnRoute = options.returnRoute;

              // in the case that the user went straight to a task url
              // without loading the list first, we need to make sure
              // that we don't return - instead load the list url
              // example use case is clicking a task link in the
              // activity center, then clicking the empty area
              if (!returnRoute || ev && ev.fromAction === 'clickEmptyArea' && self.lastBrowserContext !== 'filter' && self.lastBrowserContext !== 'search') {
                returnRoute = 'lists/' + task.attributes.list_id;
              }

              runtime.trigger('route:' + returnRoute);
            }
          });
        };

        // forced task browser render contexts
        if (self.lastBrowserContext === 'filter') {

          // if a smart list was rendered and we now try to open a task,
          // make sure that task is really part of that smart list
          // otherwise, we force render of the tasks parent list
          if (!task.isInSmartList(self.lastFilter)) {
            self.forceTaskBrowserToRender = true;
          }
        }
        else if (self.lastBrowserContext === 'searchCancel' || (self.hasReminderBeenClicked && runtime.listId !== task.attributes.list_id)) {

          self.forceTaskBrowserToRender = true;
          self.hasReminderBeenClicked = false;
        }
        else if (self.lastBrowserContext !== 'search' && runtime.listId !== task.attributes.list_id) {

          self.forceTaskBrowserToRender = true;
        }

        // if we haven't had a context the browser view hasn't been rendered, so render it
        if (!self.lastContext || self.forceTaskBrowserToRender) {
          self.forceTaskBrowserToRender = false;
          self.setCurrentList(task.attributes.list_id);
        }

        var isShared = self.lists.get(task.attributes.list_id).isShared();
        options.isShared = isShared;
        self.taskDetailView.renderWithModel(task, options);
        self.taskDetailView.state.set('wasOpenBeforeRender', true);
        self.toggleDetailView(true);
        self.lastContext = 'task';
        self.lastTaskID = task.id;
      }

      if (options.editAttribute) {

        _.delay(function () {
          runtime.trigger('browser:select', task.id);
          self.taskDetailView.trigger('start:edit', options.editAttribute, options.options);
        }, 500);

      }
      if (options.focusAttribute) {

        runtime.trigger('browser:select', task.id);
        self.taskDetailView.trigger('focus:attribute', options.focusAttribute, options.options);
      }
      else {

        // use helper to force a blur of inputs, including hidden selected inputs
        _blur.run();
      }

      runtime.trigger('title:set', task.attributes.title);
      self.sidebarView.cancelEditModes();

      // TODO: when we refactor the add task view to subclasses, this logic should be contained in one place - now it's duplicated in every showFilter/showList/showTask method with variations...
      var showAddTask = true;

      if (self.lastBrowserContext === 'filter' && (!self.linkInActivityCenterClicked || isTasksDetailedViewAlreadyOpen)) {

        showAddTask = !Strings.contains(['completed', 'week', 'assigned', 'conversations'], self.lastFilter);
      }
      else if (self.lastBrowserContext === 'search' && !!self.lastSearchTerm) {

        showAddTask = false;
      }

      self.addTaskView.$el.toggleClass('hidden', !showAddTask);
    },

    'showTBV404': function (type) {

      var self = this;
      var filters = _.clone(runtime.smartLists);
      filters.push('search');
      var addTaskFilters = ['starred', 'today', 'all'];

      (_.indexOf(addTaskFilters, type) < 0) && self.addTaskView.$el.addClass('hidden');
      self.browserView.$el.addClass('hidden');

      if (_.indexOf(filters, type) < 0) {

        self.sidebarView.trigger('deselect');
      }

      self.TBV404View.render(type).$el.removeClass('hidden');

      self.toggleDetailView(false);

      if (!type || type === 'task' || type === 'list') {
        runtime.trigger('title:set', runtime.language.getText('error_title_not_found'));
      }
    },

    'hideTBV404': function () {

      var self = this;

      self.TBV404View.$el.addClass('hidden');
    },

    '_preventOffscreenScroll': function (ev) {

      var self = this;
      ev.preventDefault();
      self.$el.scrollLeft(0);
      return false;
    },

    'onEnterDropZone': function() {

      var self = this;
      var $dragClone = self.$('.drag-clone');
      self.$('li, a').removeClass('list-hover');
      self.$('.drag-clone .taskItem-body, .drag-clone .taskItem-duedate, .star-line, .badge').hide();
      self.$('.fake-new-list').remove();
      $dragClone.css('opacity','1');
      $dragClone.prepend('<li class="active"><div class="fake-new-list"><div class="icon list-list"></div><div class="fake-title">' + runtime.language.getLabel('placeholder_new_list').toString() + '</div></div></li>').addClass('drag-clone-reset');

      self.$('.drag-clone .taskItem-body, .drag-clone .taskItem-duedate, .star-line, .badge').hide();

      self.renderLocalized();
    },

    'onLeaveDropZone': function (drag) {

      var self = this;

      self.$('.fake-new-list').remove();
      self.$('.drag-clone').removeAttr('style');
      self.$('.drag-clone').css('position','absolute').removeClass('drag-clone-reset');

      if (drag.dragElements.length > 1) {
        self.$('.drag-clone .task-body, .drag-clone .badge').fadeIn(300);
        if (drag.element.hasClass('done')) {
          self.$('.drag-clone').css('opacity','.6');
        }
      }
      else {
        self.$('.drag-clone .taskItem-titleWrapper-title').css('margin-top','-16px');
        self.$('.drag-clone .taskItem-body, .drag-clone .icon, .drag-clone .taskItem-duedate, .badge').fadeIn(300);
      }

      drag.limit(self.$el);
    },

    'handleSidebarState': function (callback) {

      // the focus is set here because toggling of the sidebar needs to select the
      // first task, or the current list. If the focus is addTask however, keep it on addTask
      runtime.trigger('focus:set', runtime.isSidebarVisible ? 'sidebar' : runtime.focus === 'addTask' ? 'addTask': 'browser');
      runtime.isSidebarAnimating = false;
      if (runtime.isSidebarVisible) {
        callback && typeof callback === 'function' && callback();
      }
    },

    'toggleSidebar': function (state, callback, shouldAnimate) {

      var self = this;

      var $tasks = self.$('#tasks');
      var $lists = self.$('#lists');
      var isIE9 = runtime.env.isIE9();

      if (shouldAnimate === undefined) {

        shouldAnimate = runtime.env.isMini() || self.hasToggledSidebarOnce;
      }

      if (shouldAnimate && !runtime.env.isLarge()) {

        if (runtime.env.isMedium() && (runtime.isSidebarVisible && !runtime.isSidebarAnimating)) {

          self.handleSidebarState(callback);
        }
        else if (runtime.env.isMedium() && runtime.isSidebarVisible === state) {

          self.handleSidebarState(callback);
        }
        else {
          self.bindOnceTo($tasks, runtime.env.getTransitionEndEvent(), function () {

            self.handleSidebarState(callback);
          });
        }
      }
      else {

        self.handleSidebarState(callback);
      }

      if (self.disableSidebarToggle || state !== undefined && runtime.isSidebarVisible !== undefined && state === runtime.isSidebarVisible) {
        return;
      }

      if (runtime.isSidebarVisible === undefined) {
        runtime.trigger('set:isSidebarVisible', false);
        return;
      }

      runtime.trigger('popover:close', {'doNotRoute': true});

      if (state !== undefined) {

        runtime.trigger('set:isSidebarVisible', !state);
      }

      if (runtime.env.isMicro()) {

        var docWidth = (self.$('#stacks').width());
        var inset = 68;
        var ratio = 1 - (inset / docWidth);
        var percentage = ratio * 100;

        shouldAnimate && $lists.addClass('animated');

        if (runtime.isSidebarVisible) {

          $lists.removeClass('slided');

          if (shouldAnimate) {
            runtime.isSidebarAnimating = true;
            $tasks.addClass('animated');
          }
          $tasks.css({
            '-webkit-transform': 'translateX(' + (100 - percentage) + '%)',
            '-moz-transform': 'translateX(' + (100 - percentage) + '%)',
            '-ms-transform': 'translateX(' + (100 - percentage) + '%)',
            '-o-transform': 'translateX(' + (100 - percentage) + '%)',
            'transform': 'translateX(' + (100 - percentage) + '%)'
          });

          var microAnimateVisibleCallback = function () {

            runtime.isSidebarAnimating = false;
            $lists.removeClass('animated');
            $tasks
              .removeClass('animated slided')
              .removeAttr('style');
          };

          if (!isIE9) {

            self.bindOnceTo($tasks, runtime.env.getTransitionEndEvent(), microAnimateVisibleCallback);
          }
          else {

            window.setTimeout(microAnimateVisibleCallback, 500);
          }
        }
        else {

          $lists.addClass('slided');

          runtime.isSidebarAnimating = true;

          $tasks
            .addClass('animated')
            .css({

              '-webkit-transform': 'translateX(' + percentage + '%)',
              '-moz-transform': 'translateX(' + percentage + '%)',
              '-ms-transform': 'translateX(' + percentage + '%)',
              '-o-transform': 'translateX(' + percentage + '%)',
              'transform': 'translateX(' + percentage + '%)'
            });

          var microAnimateCallback = function () {

            runtime.isSidebarAnimating = false;

            $lists.removeClass('animated');
            $tasks
              .removeClass('animated')
              .removeAttr('style')
              .addClass('slided');
          };

          if (!isIE9) {

            self.bindOnceTo($tasks, runtime.env.getTransitionEndEvent(), microAnimateCallback);
          }
          else {

            window.setTimeout(microAnimateCallback, 500);
          }
        }
      }
      else if (runtime.env.isMini() || runtime.env.isMedium()) {

        if (shouldAnimate) {

          runtime.isSidebarAnimating = true;
          $tasks.addClass('animated');
          $lists.addClass('animated');
        }

        if (runtime.isSidebarVisible) {

          $tasks.removeClass('slided');
          $lists.removeClass('slided');
        }
        else {

          $tasks.addClass('slided');
          $lists.addClass('slided');
        }

        var miniMicroAnimateCallback = function(){

          runtime.isSidebarAnimating = false;
          $tasks.removeClass('animated');
          $lists.removeClass('animated');
        };

        if (!isIE9) {

          self.bindOnceTo($tasks, runtime.env.getTransitionEndEvent(), miniMicroAnimateCallback);
        }
        else {

          window.setTimeout(miniMicroAnimateCallback, 500);
        }
      }

      _blur.run();
      runtime.trigger('set:isSidebarVisible', !runtime.isSidebarVisible);
      self.hasToggledSidebarOnce = true;
    },

    '_showCatastrophicFailure': function (type) {

      var options = {};

      if (type === 'share') {

        options = {

          'customText': runtime.language.getLabel('error_share_not_created').toString(),
          'confirmText': runtime.language.getLabel('button_dismiss').toString(),
          'hideCancel': true
        };

        runtime.trigger('modal:confirm', options);
      }
    },

    '_buildMailContent': function() {

      var self = this;
      var currentURL = window.location.href;
      var isNote = /note/.test(currentURL);
      var isTask = /tasks/.test(currentURL);
      var tasks = new TaskCollection('/tasks/all');

      if (isNote || isTask) {

        var $detailView = $('#detail');
        var $subtasks = $detailView.find('li.subtask');
        var title = 'Wunderlist - ' + $detailView.find('.title-text').text();
        var note = $detailView.find('.note textarea').val();
        var content = '';

        if (!isNote) {

          $subtasks.each(function () {

            var $subtask = $(this);
            var title = $subtask.find('textarea').val();

            content += encodeURIComponent("\u25fb " + title) + "%0d%0a";
          });

          content += "%0d%0a";
        }

        content += note;

        self._sendMailContent(title, content);

      }
      else {

        runtime.trigger('force:loadAll');

        var body = '';
        var $lists = $('ol.tasks');
        var $listname = self.$('#lists li.active .title').text();
        var name = encodeURIComponent('Wunderlist - ' + $listname);

        $lists.each(function () {

          var $list = $(this);
          var $tasks = $list.find('li');
          var hasTasks = $list.find('li').length > 0;
          var hasHeadline = $list.prev('h2').length > 0;

          if (hasTasks) {

            if (hasHeadline) {

              var headline = $list.prev('h2:not(.hidden)').text();
              body += headline + "%0d%0a%0d%0a";
            }

            $tasks.each(function () {

              var $task = $(this);
              var id = $task.attr('rel');
              var task = tasks.get(id);
              var $date = $task.find('a.duedate');
              var date = (!$date.hasClass('hidden')) ? ' (' + $date.text() + ')' : '';
              var starred = ($task.find('span.task-star').hasClass('task-starred')) ? ' \u2605' : '';
              var title = $task.find('.taskItem-titleWrapper-title').text();

              body += encodeURIComponent("\u274f " + title + date + starred) + "%0d%0a";

              if (task.hasSubtasks()) {

                _.each(task.subtasksCollection.models, function(subtask) {

                  body += encodeURIComponent("\u1102\u274f " + subtask.attributes.title) + "%0d%0a";
                });
              }

            });

            body += "%0d%0a";
          }
        });

        self._sendMailContent(name, body);
      }
    },

    '_sendMailContent': function (subject, body) {

      var footer = runtime.language.getText('share_list_email_signature').replace(/\\n/g, '%0d%0a');
      var mailToUrl = "mailto:?subject=" + subject + "&body=" + body + footer;
      runtime.openUrl(mailToUrl);
    },

    '_print': function() {

      var self = this;

      self.el.appendChild(self.printView.render().el);
    },

    '_checkMousePositionForActionBar': function (ev) {

      var self = this;

      var disallowed = ['preferences', 'social', 'whatsnew', 'debug'];
      var isDisallowedRouteActive = false;
      var currentRoute = runtime.currentRoute();

      _.each(disallowed, function (route) {

        if (currentRoute.indexOf(route) >= 0) {

          isDisallowedRouteActive = true;
        }
      });

      if (isDisallowedRouteActive) {

        return;
      }

      var docHeight = $(document).height();
      var docWidth = $(document).width();
      var verticalPosition = ev.pageY;
      var horizontalPosition = ev.pageX;

      var sidebarWidth = runtime.env.isLarge() ? 270 : 300;
      var isNotSidebar = (horizontalPosition > (runtime.isSidebarVisible ? sidebarWidth : 0));
      var isNotDetailView = (horizontalPosition < docWidth - 360);
      var isAtTheBottom = (verticalPosition > docHeight - 160);  // 160 for full height of expanded sort menu, 100 is spec

      if (self.isDetailViewVisible) {

        isNotSidebar = isNotSidebar && isNotDetailView;
      }

      if (isAtTheBottom && isNotSidebar) {

        runtime.trigger('taskActions:show', 'mouse');
      }
      else {

        runtime.trigger('taskActions:hide', 'mouse');
      }
    },

    'onRemove': function () {

      var self = this;

      self.sidebarView = null;
      self.browserView = null;
    }
  });
});
define('templates/miniSite',['vendor/handlebars'], function(H) {
var name = 'miniSite';
return H.template(function (Handlebars,depth0,helpers,partials,data) {
  this.compilerInfo = [4,'>= 1.0.0'];
helpers = this.merge(helpers, Handlebars.helpers); partials = this.merge(partials, Handlebars.partials); data = data || {};
  var buffer = "", stack1, stack2, options, helperMissing=helpers.helperMissing, escapeExpression=this.escapeExpression, self=this, functionType="function";

function program1(depth0,data) {
  
  
  return "login";
  }

function program3(depth0,data) {
  
  
  return "signup";
  }

function program5(depth0,data) {
  
  var stack1, options;
  options = {hash:{},data:data};
  return escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_log_in", options) : helperMissing.call(depth0, "localized", "button_log_in", options)));
  }

function program7(depth0,data) {
  
  var stack1, options;
  options = {hash:{},data:data};
  return escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "button_sign_up_for_free", options) : helperMissing.call(depth0, "localized", "button_sign_up_for_free", options)));
  }

function program9(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <li class=\"taskItem\"> ";
  stack1 = self.invokePartial(partials.taskItem, 'taskItem', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </li> ";
  return buffer;
  }

function program11(depth0,data) {
  
  var buffer = "", stack1;
  buffer += " <li class=\"taskItem done\"> ";
  stack1 = self.invokePartial(partials.taskItem, 'taskItem', depth0, helpers, partials, data);
  if(stack1 || stack1 === 0) { buffer += stack1; }
  buffer += " </li> ";
  return buffer;
  }

function program13(depth0,data) {
  
  var buffer = "", stack1, options;
  buffer += " <span class=\"icon login-exclamation\"></span> <h2>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_minisite_$_invited_you_to_the_list_$", depth0.senderName, depth0.listTitle, options) : helperMissing.call(depth0, "localized", "label_minisite_$_invited_you_to_the_list_$", depth0.senderName, depth0.listTitle, options)))
    + "!</h2> <p> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_minisite_empty_list_$", depth0.listTitle, options) : helperMissing.call(depth0, "localized", "label_minisite_empty_list_$", depth0.listTitle, options)))
    + " </p> ";
  return buffer;
  }

  buffer += "<div class=\"ribbon\"></div> <div class=\"description\"> <div>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_minisite_description_line_1", options) : helperMissing.call(depth0, "localized", "label_minisite_description_line_1", options)))
    + "</div> <div>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_minisite_description_line_2", options) : helperMissing.call(depth0, "localized", "label_minisite_description_line_2", options)))
    + "</div> </div> <div class=\"cols-center\"> <div class=\"col-100 center\"> <a class=\"button big blue ";
  stack2 = helpers['if'].call(depth0, depth0.isRegistered, {hash:{},inverse:self.program(3, program3, data),fn:self.program(1, program1, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "\">";
  stack2 = helpers['if'].call(depth0, depth0.isRegistered, {hash:{},inverse:self.program(7, program7, data),fn:self.program(5, program5, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += "</a> </div> </div> <div class=\"login-separator\"></div> <div class=\"minisite-content\"> <h2> <span class=\"list-name\">";
  if (stack2 = helpers.listTitle) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.listTitle; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + "</span> <span class=\"shared-by\"> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "sharing_shared_with_you_by", options) : helperMissing.call(depth0, "localized", "sharing_shared_with_you_by", options)))
    + " ";
  if (stack2 = helpers.senderName) { stack2 = stack2.call(depth0, {hash:{},data:data}); }
  else { stack2 = depth0.senderName; stack2 = typeof stack2 === functionType ? stack2.apply(depth0) : stack2; }
  buffer += escapeExpression(stack2)
    + " <a class=\"user avatar\"> <img src=\""
    + escapeExpression(((stack1 = ((stack1 = depth0.sender),stack1 == null || stack1 === false ? stack1 : stack1.avatar)),typeof stack1 === functionType ? stack1.apply(depth0) : stack1))
    + "\" /> </a> </span> </h2> <ol class=\"tasks\"> ";
  stack2 = helpers.each.call(depth0, depth0.tasks, {hash:{},inverse:self.noop,fn:self.program(9, program9, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </ol> <h2 class=\"completed\">";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_completed_tasks_heading", options) : helperMissing.call(depth0, "localized", "label_completed_tasks_heading", options)))
    + "</h2> <ol class=\"completed-tasks\"> ";
  stack2 = helpers.each.call(depth0, depth0.completed, {hash:{},inverse:self.noop,fn:self.program(11, program11, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </ol> </div> <div class=\"minisite-empty hidden\"> ";
  stack2 = helpers['if'].call(depth0, depth0.sender, {hash:{},inverse:self.noop,fn:self.program(13, program13, data),data:data});
  if(stack2 || stack2 === 0) { buffer += stack2; }
  buffer += " </div> <div class=\"minisite-404 hidden\"> <span class=\"icon login-exclamation\"></span> <h2>";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "error_list_not_found", options) : helperMissing.call(depth0, "localized", "error_list_not_found", options)))
    + "!</h2> <p> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_minisite_share_deleted_or_no_access", options) : helperMissing.call(depth0, "localized", "label_minisite_share_deleted_or_no_access", options)))
    + "<br/> ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_minisite_contact_sender_for_info", options) : helperMissing.call(depth0, "localized", "label_minisite_contact_sender_for_info", options)))
    + " </p> </div> <div class=\"login-separator\"></div> <div class=\"footer\"><a href=\"http://www.6wunderkinder.com\"> 6 Wunderkinder</a> GmbH &copy; 2013 ";
  options = {hash:{},data:data};
  buffer += escapeExpression(((stack1 = helpers.localized || depth0.localized),stack1 ? stack1.call(depth0, "label_rights_reserved", options) : helperMissing.call(depth0, "localized", "label_rights_reserved", options)))
    + " </div> <div class=\"footer-logo\"></div>";
  return buffer;
  });
});
(function(undefined) {

  

  define('partial', {
    load: function(templateName, require, load) {
      require([

        'vendor/handlebars',
        'templates/' + templateName

      ], function(Handlebars, templateFunction) {

        if(require.isBrowser) {

          var partialName = templateName.replace(/\//g, '.');

          // Register the function as named partial
          Handlebars.registerPartial(partialName, templateFunction);
        }

        load(undefined);
      });
    }
  });

}).call(undefined);
define('styles/_minisite',[],function() { return {'name': '_minisite', 'styles': "body.minisite:before{background-image:url(\"images/packaged/blurbg.jpg\")} body.minisite:after{color:transparent;content:\"\";position:fixed;top:0;bottom:0;height:100%;width:100%;background-color:#000;opacity:.5 !important;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\" !important;filter:alpha(opacity=50) !important;z-index:-1} div.minisite-container{max-width:560px;margin:0 auto -20px auto;padding:0 10px 40px 10px;} div.minisite-container .icon{cursor:default} div.minisite-container .button.signup,div.minisite-container .button.resend,div.minisite-container .button.login{display:inline-block;min-width:300px;height:auto;padding:19px;font-size:25px;width:auto} div.minisite-container .ribbon{margin:-10px auto 20px auto;background:url(\"images/login/wunderlist-login.png\") -290px 0;width:158px;height:110px} div.minisite-container .description{max-width:460px;margin:0 auto 20px auto;text-align:center;color:#fff;text-shadow:0 1px 0 rgba(0,0,0,0.5);font-size:17px;line-height:25px;font-weight:bold} div.minisite-container .login-separator{background:url(\"images/login/wunderlist-login.png\") -290px -242px;max-width:438px;height:2px;margin:20px auto} div.minisite-container h2{position:relative;color:#fff;text-shadow:0 1px 0 rgba(0,0,0,0.5);font-size:18px;margin:18px 0;zoom:1;} div.minisite-container h2:before,div.minisite-container h2:after{content:\"\";display:table} div.minisite-container h2:after{clear:both} div.minisite-container h2 .list-title{float:left} div.minisite-container h2 .shared-by{float:right;margin-top:4px;color:rgba(255,255,255,0.7);text-shadow:0 1px 0 rgba(0,0,0,0.2);font-size:11px;vertical-align:middle;} div.minisite-container h2 .shared-by .user{display:inline-block;vertical-align:middle;margin-left:5px;border:1px solid rgba(0,0,0,0.3);-webkit-box-shadow:inset 0 0 1px #000;box-shadow:inset 0 0 1px #000} div.minisite-container h2 .shared-by .user,div.minisite-container h2 .shared-by img{height:25px;width:25px} div.minisite-container h2.completed{font-size:12px} div.minisite-container .minisite-404,div.minisite-container .minisite-empty{position:relative;padding:20px;background:#e8e4e3;-webkit-border-radius:6px;border-radius:6px;-webkit-box-shadow:inset 0 1px 0 #fff,0 0 6px rgba(0,0,0,0.6);box-shadow:inset 0 1px 0 #fff,0 0 6px rgba(0,0,0,0.6);background-image:url(\"images/textures/login.png\");} div.minisite-container .minisite-404 .icon.login-exclamation,div.minisite-container .minisite-empty .icon.login-exclamation{background:url(\"images/login/wunderlist-login.png\") -290px -110px;height:45px;width:44px;position:absolute;top:20px;left:20px} div.minisite-container .minisite-404 h2,div.minisite-container .minisite-empty h2{color:#423e3e;text-shadow:none} div.minisite-container .minisite-404 p,div.minisite-container .minisite-empty p{color:#737272} div.minisite-container .minisite-404 p,div.minisite-container .minisite-empty p,div.minisite-container .minisite-404 h2,div.minisite-container .minisite-empty h2{padding-left:64px;margin-top:0 !important} div.minisite-container .footer{margin:20px 0;font-size:11px;color:#fff;text-align:center;line-height:16px;text-shadow:0 1px 0 rgba(0,0,0,0.1);} div.minisite-container .footer a{color:#fff;font-weight:bold;} div.minisite-container .footer a:hover{text-decoration:underline} div.minisite-container .footer-logo{width:37px;height:21px;background:url(\"images/login/wunderlist-login.png\") -455px -110px;margin:0 auto 20px auto} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){.minisite .ribbon{background-image:url(\"images/login/wunderlist-login@2x.png\");-webkit-background-size:800px 480px;-moz-background-size:800px 480px;background-size:800px 480px} }" }; });
define('views/Main/MiniSiteView',[

  'application/runtime',

  'wunderbits/helpers/date',

  'vendor/moment',

  'wunderbits/WBView',

  'template!miniSite',

  'partial!taskItem',

  'style!_minisite',
  'style!taskItem'

], function (runtime, DateHelper, moment, WBView, miniSiteTemplate, taskItemPartial, miniSiteStyle, taskitemStyle, undefined) {

  

  var _super = WBView.prototype;

  var $ = runtime.$;
  var _ = runtime._;

  return WBView.extend({

    'styles': [

      miniSiteStyle,
      taskitemStyle
    ],

    'className': 'minisite-container',

    'template': miniSiteTemplate,

    'events': {

      'click .signup': '_signup',
      'click .login': '_login'
    },

    'initialize': function (share) {

      var self = this;
      _super.initialize.apply(self, arguments);

      self.share = share;

      $('body').addClass('scroll minisite');
    },

    'render': function () {

      var self = this;
      var json = self.share || {};

      // make sure user generated content is properly escaped!
      json.listTitle = _.escape(json.resource.title);
      json.senderName = _.escape(json.sender.name);

      var tasks = [], completed = [], subtasks = [];

      json.tasks = _.sortBy(json.tasks, function (task) {

        return !!task.parent_id;
      });

      _.each(json.tasks, function (task) {

        if (task.title) {

          if (task.due_date) {

            task.due_date = DateHelper.humanizeDueDate(task.due_date);
            task.overdue = DateHelper.isOverdue(task.due_date);
          }

          if (!task.parent_id) {

            var taskSubtasks = _.filter(subtasks, function (subtask) {

              return subtask.parent_id === task.id;
            });

            if (taskSubtasks.length || task.note !== null) {

              task.hasAttachment = true;
            }

            task.title = _.escape(task.title);

            (task.completed_at ? completed : tasks).push(task);
          }
          else {

            subtasks.push(task);
          }
        }
      });

      json.tasks = _.sortBy(tasks, function (task) {

        return task.position;
      });

      json.completed = completed;

      _super.render.call(self, json);

      if (!completed.length) {

        self.$el.find('.completed').addClass('hidden');
      }

      if (completed.length > 1) {

        self.$('.completed').html(runtime.language.getLabel('label_$_completed_tasks_heading_plural', completed.length).toString());
      }

      var $content = self.$('.minisite-content');
      var $error = self.$('.minisite-404');
      var $empty = self.$('.minisite-empty');

      if (!_.size(self.share)) {

        $error.removeClass('hidden');
        $content.addClass('hidden');
        $empty.addClass('hidden');
      }
      else if (!completed.length && !tasks.length) {

        $empty.removeClass('hidden');
        $content.addClass('hidden');
        $error.addClass('hidden');
      }
      else {

        $content.removeClass('hidden');
        $empty.addClass('hidden');
        $error.addClass('hidden');
      }

      self.renderLabels();
      return self;
    },

    '_signup': function () {

      $('body').removeClass('scroll minisite');
      runtime.reload('/signup');
    },

    '_login': function () {

      $('body').removeClass('scroll minisite');
      runtime.reload('/login');
    }
  });
});
/*jshint expr:true */

define('helpers/WindowTitleHelper',[

  'application/runtime',
  'wunderbits/WBSingleton',
  'collections/NotificationCollection',
  'collections/ListCollection',
  'collections/TaskCollection',
  'wunderbits/mixins/WBBindableMixin'

], function (runtime, WBSingleton, NotificationsCollection, ListCollection, TaskCollection, WBBindableMixin, undefined) {

  

  var _ = runtime._;
  var smartLists = _.clone(runtime.smartLists);
  smartLists.push('inbox');

  return WBSingleton.extend({

    'init': function () {

      var self = this;

      WBBindableMixin.applyTo(self);

      self._lists = new ListCollection('/lists/all');
      self._tasks = new TaskCollection('/tasks/all');
      self._unreadNotifications = new NotificationsCollection('/notifications/unread');

      self.bindTo(runtime, 'title:set', self.setTitle);

      self.bindTo(self._unreadNotifications, 'add remove reset', self._updateTitle);
      self.bindTo(self._tasks, 'change:title', self._updateTitle);

      self.bindTo(runtime.language, 'change:data', self._updateTitle);
    },

    '_setTitleFromPrefsSection': function (section) {

      var self = this;
      self.setTitle(section, {
        'isPrefsTabKey': true
      });
    },

    '_setTitleFromNameOrId': function (nameOrId) {

      var self = this;
      self.setTitle(nameOrId, {
        'isNameOrId': true
      });
    },

    '_updateTitle': function () {

      var self = this;
      var fullTitle = 'Wunderlist';
      var notificationsLength = self._unreadNotifications && self._unreadNotifications.length;

      var titleFragment = self._lastTitleFragment;
      var options = self._lastOptions || {};
      var key;

      if (options.isNameOrId) {

        if (_.indexOf(smartLists, titleFragment.toLowerCase()) >= 0) {

          // the titleFragment is either and ID or a name
          // to be used as part of a key to get the localized
          // smart list name - compare it lowercase!
          titleFragment = titleFragment.toLowerCase();

          if (titleFragment === 'assigned') {
            titleFragment = 'assigned_to_me';
          }

          key = 'smart_list_' + titleFragment;
          titleFragment = runtime.language.getText(key);
        }
        else {
          var list = self._lists.get(titleFragment);
          if (list) {
            titleFragment = list.attributes.title;
          }
        }
      }
      else if (options.isPrefsTabKey) {

        key = 'settings_heading_' + titleFragment;
        titleFragment = runtime.language.getText(key);
      }

      if (titleFragment) {
        fullTitle = titleFragment + ' - ' + fullTitle;
      }

      if (notificationsLength) {
        fullTitle = '(' + notificationsLength + ') ' + fullTitle;
      }

      document.title = fullTitle;

      if(runtime.env.isPackagedApp() && runtime.env.isMac()) {

        runtime.trigger('update:title', fullTitle);
      }
    },

    'setTitle': function (titleFragment, options) {

      var self = this;
      self._lastTitleFragment = titleFragment;
      self._lastOptions = options || {};

      self._updateTitle();
    }
  });

});
define('styles/application/_layout',[],function() { return {'name': 'application/_layout', 'styles': "#wunderlist-base li.background-01{background-image:url(\"images/backgrounds/thumbs/01.jpg\")} #wunderlist-base li.background-02{background-image:url(\"images/backgrounds/thumbs/02.jpg\")} #wunderlist-base li.background-04{background-image:url(\"images/backgrounds/thumbs/04.jpg\")} #wunderlist-base li.background-05{background-image:url(\"images/backgrounds/thumbs/05.jpg\")} #wunderlist-base li.background-06{background-image:url(\"images/backgrounds/thumbs/06.jpg\")} #wunderlist-base li.background-07{background-image:url(\"images/backgrounds/thumbs/07.jpg\")} #wunderlist-base li.background-08{background-image:url(\"images/backgrounds/thumbs/08.jpg\")} #wunderlist-base li.background-09{background-image:url(\"images/backgrounds/thumbs/09.jpg\")} #wunderlist-base li.background-10{background-image:url(\"images/backgrounds/thumbs/10.jpg\")} #wunderlist-base li.background-11{background-image:url(\"images/backgrounds/thumbs/11.jpg\")} #wunderlist-base li.background-12{background-image:url(\"images/backgrounds/thumbs/12.jpg\")} #wunderlist-base li.background-17{background-image:url(\"images/backgrounds/thumbs/17.jpg\")} #wunderlist-base li.background-18{background-image:url(\"images/backgrounds/thumbs/18.jpg\")} #wunderlist-base li.background-19{background-image:url(\"images/backgrounds/thumbs/19.jpg\")} #wunderlist-base li.background-20{background-image:url(\"images/backgrounds/thumbs/20.jpg\")} #wunderlist-base li.background-21{background-image:url(\"images/backgrounds/thumbs/21.jpg\")} #wunderlist-base li.background-22{background-image:url(\"images/backgrounds/thumbs/22.jpg\")} #wunderlist-base li.background-23{background-image:url(\"images/backgrounds/thumbs/23.jpg\")} #wunderlist-base li.background-24{background-image:url(\"images/backgrounds/thumbs/24.jpg\")} #wunderlist-base li.background-03{background-image:url(\"images/backgrounds/thumbs/03.jpg\")} @media all and (min-width:1025px){#wunderlist-base.background-01:before{background-image:url(\"images/backgrounds/2048/01.jpg\") !important} #wunderlist-base.background-02:before{background-image:url(\"images/backgrounds/2048/02.jpg\") !important} #wunderlist-base.background-04:before{background-image:url(\"images/backgrounds/2048/04.jpg\") !important} #wunderlist-base.background-05:before{background-image:url(\"images/backgrounds/2048/05.jpg\") !important} #wunderlist-base.background-06:before{background-image:url(\"images/backgrounds/2048/06.jpg\") !important} #wunderlist-base.background-07:before{background-image:url(\"images/backgrounds/2048/07.jpg\") !important} #wunderlist-base.background-08:before{background-image:url(\"images/backgrounds/2048/08.jpg\") !important} #wunderlist-base.background-09:before{background-image:url(\"images/backgrounds/2048/09.jpg\") !important} #wunderlist-base.background-10:before{background-image:url(\"images/backgrounds/2048/10.jpg\") !important} #wunderlist-base.background-11:before{background-image:url(\"images/backgrounds/2048/11.jpg\") !important} #wunderlist-base.background-12:before{background-image:url(\"images/backgrounds/2048/12.jpg\") !important} #wunderlist-base.background-17:before{background-image:url(\"images/backgrounds/2048/17.jpg\") !important} #wunderlist-base.background-18:before{background-image:url(\"images/backgrounds/2048/18.jpg\") !important} #wunderlist-base.background-19:before{background-image:url(\"images/backgrounds/2048/19.jpg\") !important} #wunderlist-base.background-20:before{background-image:url(\"images/backgrounds/2048/20.jpg\") !important} #wunderlist-base.background-21:before{background-image:url(\"images/backgrounds/2048/21.jpg\") !important} #wunderlist-base.background-22:before{background-image:url(\"images/backgrounds/2048/22.jpg\") !important} #wunderlist-base.background-23:before{background-image:url(\"images/backgrounds/2048/23.jpg\") !important} #wunderlist-base.background-24:before{background-image:url(\"images/backgrounds/2048/24.jpg\") !important} }@media all and (max-width:640px){#wunderlist-base.background-01:before{background-image:url(\"images/backgrounds/640/01.jpg\") !important} #wunderlist-base.background-02:before{background-image:url(\"images/backgrounds/640/02.jpg\") !important} #wunderlist-base.background-04:before{background-image:url(\"images/backgrounds/640/04.jpg\") !important} #wunderlist-base.background-05:before{background-image:url(\"images/backgrounds/640/05.jpg\") !important} #wunderlist-base.background-06:before{background-image:url(\"images/backgrounds/640/06.jpg\") !important} #wunderlist-base.background-07:before{background-image:url(\"images/backgrounds/640/07.jpg\") !important} #wunderlist-base.background-08:before{background-image:url(\"images/backgrounds/640/08.jpg\") !important} #wunderlist-base.background-09:before{background-image:url(\"images/backgrounds/640/09.jpg\") !important} #wunderlist-base.background-10:before{background-image:url(\"images/backgrounds/640/10.jpg\") !important} #wunderlist-base.background-11:before{background-image:url(\"images/backgrounds/640/11.jpg\") !important} #wunderlist-base.background-12:before{background-image:url(\"images/backgrounds/640/12.jpg\") !important} #wunderlist-base.background-17:before{background-image:url(\"images/backgrounds/640/17.jpg\") !important} #wunderlist-base.background-18:before{background-image:url(\"images/backgrounds/640/18.jpg\") !important} #wunderlist-base.background-19:before{background-image:url(\"images/backgrounds/640/19.jpg\") !important} #wunderlist-base.background-20:before{background-image:url(\"images/backgrounds/640/20.jpg\") !important} #wunderlist-base.background-21:before{background-image:url(\"images/backgrounds/640/21.jpg\") !important} #wunderlist-base.background-22:before{background-image:url(\"images/backgrounds/640/22.jpg\") !important} #wunderlist-base.background-23:before{background-image:url(\"images/backgrounds/640/23.jpg\") !important} #wunderlist-base.background-24:before{background-image:url(\"images/backgrounds/640/24.jpg\") !important} }@media all and (min-width:641px) and (max-width:768px){#wunderlist-base.background-01:before{background-image:url(\"images/backgrounds/768/01.jpg\") !important} #wunderlist-base.background-02:before{background-image:url(\"images/backgrounds/768/02.jpg\") !important} #wunderlist-base.background-04:before{background-image:url(\"images/backgrounds/768/04.jpg\") !important} #wunderlist-base.background-05:before{background-image:url(\"images/backgrounds/768/05.jpg\") !important} #wunderlist-base.background-06:before{background-image:url(\"images/backgrounds/768/06.jpg\") !important} #wunderlist-base.background-07:before{background-image:url(\"images/backgrounds/768/07.jpg\") !important} #wunderlist-base.background-08:before{background-image:url(\"images/backgrounds/768/08.jpg\") !important} #wunderlist-base.background-09:before{background-image:url(\"images/backgrounds/768/09.jpg\") !important} #wunderlist-base.background-10:before{background-image:url(\"images/backgrounds/768/10.jpg\") !important} #wunderlist-base.background-11:before{background-image:url(\"images/backgrounds/768/11.jpg\") !important} #wunderlist-base.background-12:before{background-image:url(\"images/backgrounds/768/12.jpg\") !important} #wunderlist-base.background-17:before{background-image:url(\"images/backgrounds/768/17.jpg\") !important} #wunderlist-base.background-18:before{background-image:url(\"images/backgrounds/768/18.jpg\") !important} #wunderlist-base.background-19:before{background-image:url(\"images/backgrounds/768/19.jpg\") !important} #wunderlist-base.background-20:before{background-image:url(\"images/backgrounds/768/20.jpg\") !important} #wunderlist-base.background-21:before{background-image:url(\"images/backgrounds/768/21.jpg\") !important} #wunderlist-base.background-22:before{background-image:url(\"images/backgrounds/768/22.jpg\") !important} #wunderlist-base.background-23:before{background-image:url(\"images/backgrounds/768/23.jpg\") !important} #wunderlist-base.background-24:before{background-image:url(\"images/backgrounds/768/24.jpg\") !important} }@media all and (min-width:769px) and (max-width:1024px){#wunderlist-base.background-01:before{background-image:url(\"images/backgrounds/1024/01.jpg\") !important} #wunderlist-base.background-02:before{background-image:url(\"images/backgrounds/1024/02.jpg\") !important} #wunderlist-base.background-04:before{background-image:url(\"images/backgrounds/1024/04.jpg\") !important} #wunderlist-base.background-05:before{background-image:url(\"images/backgrounds/1024/05.jpg\") !important} #wunderlist-base.background-06:before{background-image:url(\"images/backgrounds/1024/06.jpg\") !important} #wunderlist-base.background-07:before{background-image:url(\"images/backgrounds/1024/07.jpg\") !important} #wunderlist-base.background-08:before{background-image:url(\"images/backgrounds/1024/08.jpg\") !important} #wunderlist-base.background-09:before{background-image:url(\"images/backgrounds/1024/09.jpg\") !important} #wunderlist-base.background-10:before{background-image:url(\"images/backgrounds/1024/10.jpg\") !important} #wunderlist-base.background-11:before{background-image:url(\"images/backgrounds/1024/11.jpg\") !important} #wunderlist-base.background-12:before{background-image:url(\"images/backgrounds/1024/12.jpg\") !important} #wunderlist-base.background-17:before{background-image:url(\"images/backgrounds/1024/17.jpg\") !important} #wunderlist-base.background-18:before{background-image:url(\"images/backgrounds/1024/18.jpg\") !important} #wunderlist-base.background-19:before{background-image:url(\"images/backgrounds/1024/19.jpg\") !important} #wunderlist-base.background-20:before{background-image:url(\"images/backgrounds/1024/20.jpg\") !important} #wunderlist-base.background-21:before{background-image:url(\"images/backgrounds/1024/21.jpg\") !important} #wunderlist-base.background-22:before{background-image:url(\"images/backgrounds/1024/22.jpg\") !important} #wunderlist-base.background-23:before{background-image:url(\"images/backgrounds/1024/23.jpg\") !important} #wunderlist-base.background-24:before{background-image:url(\"images/backgrounds/1024/24.jpg\") !important} }#wunderlist-base.background-13:before,#wunderlist-base li.background-13{background:#a69985} #wunderlist-base.background-14:before,#wunderlist-base li.background-14{background:#6989a4} #wunderlist-base.background-15:before,#wunderlist-base li.background-15{background:#7ba282} #wunderlist-base.background-16:before,#wunderlist-base li.background-16{background:#d18097} #wunderlist-base.background-03:before,#wunderlist-base li.background-03{background-image:url(\"images/backgrounds/sources/03.jpg\");-webkit-background-size:128px 128px;-moz-background-size:128px 128px;background-size:128px 128px;background-repeat:repeat} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){#wunderlist-base.background-03:before,#wunderlist-base li.background-03{background-image:url(\"images/backgrounds/2x/03.jpg\")} }html,input,textarea,button{-webkit-font-smoothing:antialiased} *{padding:0;margin:0;text-decoration:none;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-moz-user-select:-moz-none;-ms-touch-action:none} #wunderlist-base{font-family:\"Helvetica Neue\",\"Helvetica\",\"Arial\",Sans-Serif;color:#423e3e;font-size:13px;font-weight:500;-webkit-touch-callout:none !important;} #wunderlist-base.wlapp-parent{overflow:hidden} #wunderlist-base.scroll,#wunderlist-base.sandbox{overflow:auto;-ms-scroll-snap-points-x:snapInterval(0,187px);-ms-scroll-snap-type:mandatory;-ms-scroll-chaining:none} #wunderlist-base.sandbox{padding:0 20px} #wunderlist-base:before{content:'';-webkit-background-size:cover;-moz-background-size:cover;background-size:cover;background-repeat:no-repeat;background-position:center top;position:fixed;z-index:-100;top:0;bottom:0;left:0;right:0;z-index:-100;font-family:\"Wundercon\"} #wunderlist-base:after{opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0)} #wunderlist-base input,#wunderlist-base textarea{-webkit-user-select:text;-moz-user-select:text;-ms-user-select:text;user-select:text} #wunderlist-base ul{list-style:none} #wunderlist-base a{cursor:pointer} #wunderlist-base div:focus,#wunderlist-base p:focus,#wunderlist-base span:focus,#wunderlist-base ul:focus,#wunderlist-base li:focus,#wunderlist-base a:focus{outline:none} #wunderlist-base .right{float:right} #wunderlist-base .left{float:left} #wunderlist-base .text-right{text-align:right} #wunderlist-base .text-left{text-align:left} #wunderlist-base .center{text-align:center} #wunderlist-base .hidden{display:none !important} #wunderlist-base .disabled{pointer-events:none} #wunderlist-base .invisible{visibility:hidden} #wunderlist-base .transparent{opacity:0 !important;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\" !important;filter:alpha(opacity=0) !important;pointer-events:none} #wunderlist-base .hide-overflow{overflow:hidden} #wunderlist-base .mtop{margin-top:5px} #wunderlist-base h1.blue{color:#4597df} #wunderlist-base #stacks{left:0;right:0;bottom:0;top:0;} #wunderlist-base #stacks.sytem-alert-active{position:absolute;top:31px;} #wunderlist-base #stacks.sytem-alert-active.touch-style-notice{top:0} #wunderlist-base #stacks.sytem-alert-active.closing{top:0} #wunderlist-base #stacks > div{-webkit-overflow-scrolling:touch;position:absolute} #wunderlist-base .cols{font-size:0;} #wunderlist-base .cols > div{vertical-align:middle;font-size:13px;display:inline-block;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding-right:10px;} #wunderlist-base .cols > div:last-child{padding-right:0} #wunderlist-base .cols > div.col-50:first-child{padding-right:7px} #wunderlist-base .cols > div.col-50:last-child{padding-left:7px;padding-right:0} #wunderlist-base .cols.top > div{vertical-align:top} #wunderlist-base .cols-center > div{margin:0 auto 10px auto;} #wunderlist-base .cols-center > div:last-child{margin-bottom:0} #wunderlist-base .col-03{width:3%} #wunderlist-base .col-05{width:5%} #wunderlist-base .col-06{width:6%} #wunderlist-base .col-07{width:7%} #wunderlist-base .col-10{width:10%} #wunderlist-base .col-15{width:15%} #wunderlist-base .col-16{width:16%} #wunderlist-base .col-17{width:17%} #wunderlist-base .col-20{width:20%} #wunderlist-base .col-21{width:21%} #wunderlist-base .col-23{width:23%} #wunderlist-base .col-25{width:25%} #wunderlist-base .col-27{width:27%} #wunderlist-base .col-28{width:28%} #wunderlist-base .col-29{width:29%} #wunderlist-base .col-30{width:30%} #wunderlist-base .col-31{width:31%} #wunderlist-base .col-32{width:32%} #wunderlist-base .col-33{width:33%} #wunderlist-base .col-34{width:34%} #wunderlist-base .col-35{width:35%} #wunderlist-base .col-40{width:40%} #wunderlist-base .col-41{width:41%} #wunderlist-base .col-49{width:49%} #wunderlist-base .col-50{width:50%} #wunderlist-base .col-51{width:51%} #wunderlist-base .col-57{width:57%} #wunderlist-base .col-60{width:60%} #wunderlist-base .col-61{width:61%} #wunderlist-base .col-65{width:65%} #wunderlist-base .col-67{width:67%} #wunderlist-base .col-68{width:68%} #wunderlist-base .col-70{width:70%} #wunderlist-base .col-75{width:75%} #wunderlist-base .col-80{width:80%} #wunderlist-base .col-82{width:82%} #wunderlist-base .col-85{width:85%} #wunderlist-base .col-90{width:90%} #wunderlist-base .col-94{width:94%} #wunderlist-base .col-95{width:95%} #wunderlist-base .col-96{width:96%} #wunderlist-base .col-100{width:100%;padding-left:0 !important} #wunderlist-base .col-160{width:160px} #wunderlist-base .main-interface{top:0;bottom:0;left:0;right:0;position:absolute;overflow:hidden;} #wunderlist-base .main-interface #print{display:none} #wunderlist-base .main-interface.detail-visible #detail{right:0} #wunderlist-base .main-interface.detail-visible #tasks{right:370px} #wunderlist-base #desktop-notifications{color:#423e3e;} #wunderlist-base #desktop-notifications div.desktop-notification-text{background:#fff;margin:10px;padding:10px;-webkit-border-radius:10px;border-radius:10px} #wunderlist-base #loading{font-size:18px;color:rgba(255,255,255,0.85);text-shadow:0 1px 0 rgba(0,0,0,0.4);position:absolute;top:33%;bottom:0;left:0;right:0;text-align:center} #wunderlist-base #initial-loader{position:absolute;top:0;bottom:0;left:0;right:0;z-index:999999} #wunderlist-base *::-webkit-scrollbar { width:8px !important } #wunderlist-base *::-webkit-scrollbar-button:start:decrement,#wunderlist-base *::-webkit-scrollbar-button:end:increment { height:10px; display:block; background-color:transparent; } #wunderlist-base *::-webkit-scrollbar-corner { background-color:transparent; } #wunderlist-base *::-webkit-scrollbar-thumb:vertical { border-radius:6px; background-color:rgba(0,0,0,0.2) } .emoji{height:16px;display:inline-block;vertical-align:middle;margin-top:-3px;width:16px;background-position:center;-webkit-background-size:cover;-moz-background-size:cover;background-size:cover;text-indent:-9999px} .emoticon._0023{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/0023.png\")} .emoticon._0030{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/0030.png\")} .emoticon._0031{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/0031.png\")} .emoticon._0032{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/0032.png\")} .emoticon._0033{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/0033.png\")} .emoticon._0034{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/0034.png\")} .emoticon._0035{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/0035.png\")} .emoticon._0036{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/0036.png\")} .emoticon._0037{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/0037.png\")} .emoticon._0038{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/0038.png\")} .emoticon._0039{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/0039.png\")} .emoticon._00a9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/00a9.png\")} .emoticon._00ae{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/00ae.png\")} .emoticon._1f004{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f004.png\")} .emoticon._1f0cf{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f0cf.png\")} .emoticon._1f170{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f170.png\")} .emoticon._1f171{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f171.png\")} .emoticon._1f17e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f17e.png\")} .emoticon._1f17f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f17f.png\")} .emoticon._1f18e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f18e.png\")} .emoticon._1f191{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f191.png\")} .emoticon._1f192{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f192.png\")} .emoticon._1f193{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f193.png\")} .emoticon._1f194{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f194.png\")} .emoticon._1f195{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f195.png\")} .emoticon._1f196{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f196.png\")} .emoticon._1f197{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f197.png\")} .emoticon._1f198{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f198.png\")} .emoticon._1f199{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f199.png\")} .emoticon._1f19a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f19a.png\")} .emoticon._1f1e8-1f1f3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f1e8-1f1f3.png\")} .emoticon._1f1e9-1f1ea{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f1e9-1f1ea.png\")} .emoticon._1f1ea-1f1f8{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f1ea-1f1f8.png\")} .emoticon._1f1eb-1f1f7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f1eb-1f1f7.png\")} .emoticon._1f1ec-1f1e7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f1ec-1f1e7.png\")} .emoticon._1f1ee-1f1f9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f1ee-1f1f9.png\")} .emoticon._1f1ef-1f1f5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f1ef-1f1f5.png\")} .emoticon._1f1f0-1f1f7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f1f0-1f1f7.png\")} .emoticon._1f1f7-1f1fa{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f1f7-1f1fa.png\")} .emoticon._1f1fa-1f1f8{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f1fa-1f1f8.png\")} .emoticon._1f201{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f201.png\")} .emoticon._1f202{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f202.png\")} .emoticon._1f21a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f21a.png\")} .emoticon._1f22f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f22f.png\")} .emoticon._1f232{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f232.png\")} .emoticon._1f233{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f233.png\")} .emoticon._1f234{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f234.png\")} .emoticon._1f235{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f235.png\")} .emoticon._1f236{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f236.png\")} .emoticon._1f237{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f237.png\")} .emoticon._1f238{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f238.png\")} .emoticon._1f239{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f239.png\")} .emoticon._1f23a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f23a.png\")} .emoticon._1f250{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f250.png\")} .emoticon._1f251{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f251.png\")} .emoticon._1f300{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f300.png\")} .emoticon._1f301{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f301.png\")} .emoticon._1f302{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f302.png\")} .emoticon._1f303{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f303.png\")} .emoticon._1f304{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f304.png\")} .emoticon._1f305{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f305.png\")} .emoticon._1f306{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f306.png\")} .emoticon._1f307{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f307.png\")} .emoticon._1f308{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f308.png\")} .emoticon._1f309{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f309.png\")} .emoticon._1f30a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f30a.png\")} .emoticon._1f30b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f30b.png\")} .emoticon._1f30c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f30c.png\")} .emoticon._1f30d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f30d.png\")} .emoticon._1f30e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f30e.png\")} .emoticon._1f30f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f30f.png\")} .emoticon._1f310{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f310.png\")} .emoticon._1f311{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f311.png\")} .emoticon._1f312{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f312.png\")} .emoticon._1f313{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f313.png\")} .emoticon._1f314{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f314.png\")} .emoticon._1f315{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f315.png\")} .emoticon._1f316{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f316.png\")} .emoticon._1f317{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f317.png\")} .emoticon._1f318{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f318.png\")} .emoticon._1f319{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f319.png\")} .emoticon._1f31a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f31a.png\")} .emoticon._1f31b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f31b.png\")} .emoticon._1f31c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f31c.png\")} .emoticon._1f31d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f31d.png\")} .emoticon._1f31e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f31e.png\")} .emoticon._1f31f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f31f.png\")} .emoticon._1f330{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f330.png\")} .emoticon._1f331{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f331.png\")} .emoticon._1f332{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f332.png\")} .emoticon._1f333{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f333.png\")} .emoticon._1f334{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f334.png\")} .emoticon._1f335{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f335.png\")} .emoticon._1f337{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f337.png\")} .emoticon._1f338{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f338.png\")} .emoticon._1f339{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f339.png\")} .emoticon._1f33a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f33a.png\")} .emoticon._1f33b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f33b.png\")} .emoticon._1f33c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f33c.png\")} .emoticon._1f33d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f33d.png\")} .emoticon._1f33e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f33e.png\")} .emoticon._1f33f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f33f.png\")} .emoticon._1f340{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f340.png\")} .emoticon._1f341{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f341.png\")} .emoticon._1f342{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f342.png\")} .emoticon._1f343{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f343.png\")} .emoticon._1f344{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f344.png\")} .emoticon._1f345{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f345.png\")} .emoticon._1f346{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f346.png\")} .emoticon._1f347{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f347.png\")} .emoticon._1f348{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f348.png\")} .emoticon._1f349{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f349.png\")} .emoticon._1f34a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f34a.png\")} .emoticon._1f34b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f34b.png\")} .emoticon._1f34c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f34c.png\")} .emoticon._1f34d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f34d.png\")} .emoticon._1f34e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f34e.png\")} .emoticon._1f34f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f34f.png\")} .emoticon._1f350{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f350.png\")} .emoticon._1f351{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f351.png\")} .emoticon._1f352{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f352.png\")} .emoticon._1f353{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f353.png\")} .emoticon._1f354{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f354.png\")} .emoticon._1f355{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f355.png\")} .emoticon._1f356{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f356.png\")} .emoticon._1f357{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f357.png\")} .emoticon._1f358{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f358.png\")} .emoticon._1f359{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f359.png\")} .emoticon._1f35a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f35a.png\")} .emoticon._1f35b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f35b.png\")} .emoticon._1f35c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f35c.png\")} .emoticon._1f35d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f35d.png\")} .emoticon._1f35e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f35e.png\")} .emoticon._1f35f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f35f.png\")} .emoticon._1f360{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f360.png\")} .emoticon._1f361{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f361.png\")} .emoticon._1f362{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f362.png\")} .emoticon._1f363{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f363.png\")} .emoticon._1f364{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f364.png\")} .emoticon._1f365{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f365.png\")} .emoticon._1f366{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f366.png\")} .emoticon._1f367{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f367.png\")} .emoticon._1f368{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f368.png\")} .emoticon._1f369{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f369.png\")} .emoticon._1f36a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f36a.png\")} .emoticon._1f36b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f36b.png\")} .emoticon._1f36c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f36c.png\")} .emoticon._1f36d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f36d.png\")} .emoticon._1f36e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f36e.png\")} .emoticon._1f36f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f36f.png\")} .emoticon._1f370{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f370.png\")} .emoticon._1f371{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f371.png\")} .emoticon._1f372{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f372.png\")} .emoticon._1f373{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f373.png\")} .emoticon._1f374{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f374.png\")} .emoticon._1f375{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f375.png\")} .emoticon._1f376{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f376.png\")} .emoticon._1f377{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f377.png\")} .emoticon._1f378{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f378.png\")} .emoticon._1f379{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f379.png\")} .emoticon._1f37a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f37a.png\")} .emoticon._1f37b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f37b.png\")} .emoticon._1f37c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f37c.png\")} .emoticon._1f380{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f380.png\")} .emoticon._1f381{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f381.png\")} .emoticon._1f382{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f382.png\")} .emoticon._1f383{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f383.png\")} .emoticon._1f384{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f384.png\")} .emoticon._1f385{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f385.png\")} .emoticon._1f386{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f386.png\")} .emoticon._1f387{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f387.png\")} .emoticon._1f388{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f388.png\")} .emoticon._1f389{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f389.png\")} .emoticon._1f38a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f38a.png\")} .emoticon._1f38b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f38b.png\")} .emoticon._1f38c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f38c.png\")} .emoticon._1f38d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f38d.png\")} .emoticon._1f38e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f38e.png\")} .emoticon._1f38f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f38f.png\")} .emoticon._1f390{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f390.png\")} .emoticon._1f391{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f391.png\")} .emoticon._1f392{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f392.png\")} .emoticon._1f393{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f393.png\")} .emoticon._1f3a0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3a0.png\")} .emoticon._1f3a1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3a1.png\")} .emoticon._1f3a2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3a2.png\")} .emoticon._1f3a3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3a3.png\")} .emoticon._1f3a4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3a4.png\")} .emoticon._1f3a5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3a5.png\")} .emoticon._1f3a6{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3a6.png\")} .emoticon._1f3a7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3a7.png\")} .emoticon._1f3a8{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3a8.png\")} .emoticon._1f3a9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3a9.png\")} .emoticon._1f3aa{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3aa.png\")} .emoticon._1f3ab{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3ab.png\")} .emoticon._1f3ac{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3ac.png\")} .emoticon._1f3ad{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3ad.png\")} .emoticon._1f3ae{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3ae.png\")} .emoticon._1f3af{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3af.png\")} .emoticon._1f3b0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3b0.png\")} .emoticon._1f3b1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3b1.png\")} .emoticon._1f3b2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3b2.png\")} .emoticon._1f3b3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3b3.png\")} .emoticon._1f3b4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3b4.png\")} .emoticon._1f3b5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3b5.png\")} .emoticon._1f3b6{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3b6.png\")} .emoticon._1f3b7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3b7.png\")} .emoticon._1f3b8{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3b8.png\")} .emoticon._1f3b9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3b9.png\")} .emoticon._1f3ba{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3ba.png\")} .emoticon._1f3bb{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3bb.png\")} .emoticon._1f3bc{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3bc.png\")} .emoticon._1f3bd{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3bd.png\")} .emoticon._1f3be{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3be.png\")} .emoticon._1f3bf{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3bf.png\")} .emoticon._1f3c0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3c0.png\")} .emoticon._1f3c1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3c1.png\")} .emoticon._1f3c2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3c2.png\")} .emoticon._1f3c3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3c3.png\")} .emoticon._1f3c4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3c4.png\")} .emoticon._1f3c6{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3c6.png\")} .emoticon._1f3c7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3c7.png\")} .emoticon._1f3c8{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3c8.png\")} .emoticon._1f3c9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3c9.png\")} .emoticon._1f3ca{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3ca.png\")} .emoticon._1f3e0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3e0.png\")} .emoticon._1f3e1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3e1.png\")} .emoticon._1f3e2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3e2.png\")} .emoticon._1f3e3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3e3.png\")} .emoticon._1f3e4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3e4.png\")} .emoticon._1f3e5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3e5.png\")} .emoticon._1f3e6{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3e6.png\")} .emoticon._1f3e7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3e7.png\")} .emoticon._1f3e8{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3e8.png\")} .emoticon._1f3e9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3e9.png\")} .emoticon._1f3ea{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3ea.png\")} .emoticon._1f3eb{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3eb.png\")} .emoticon._1f3ec{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3ec.png\")} .emoticon._1f3ed{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3ed.png\")} .emoticon._1f3ee{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3ee.png\")} .emoticon._1f3ef{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3ef.png\")} .emoticon._1f3f0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f3f0.png\")} .emoticon._1f400{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f400.png\")} .emoticon._1f401{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f401.png\")} .emoticon._1f402{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f402.png\")} .emoticon._1f403{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f403.png\")} .emoticon._1f404{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f404.png\")} .emoticon._1f405{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f405.png\")} .emoticon._1f406{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f406.png\")} .emoticon._1f407{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f407.png\")} .emoticon._1f408{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f408.png\")} .emoticon._1f409{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f409.png\")} .emoticon._1f40a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f40a.png\")} .emoticon._1f40b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f40b.png\")} .emoticon._1f40c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f40c.png\")} .emoticon._1f40d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f40d.png\")} .emoticon._1f40e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f40e.png\")} .emoticon._1f40f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f40f.png\")} .emoticon._1f410{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f410.png\")} .emoticon._1f411{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f411.png\")} .emoticon._1f412{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f412.png\")} .emoticon._1f413{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f413.png\")} .emoticon._1f414{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f414.png\")} .emoticon._1f415{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f415.png\")} .emoticon._1f416{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f416.png\")} .emoticon._1f417{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f417.png\")} .emoticon._1f418{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f418.png\")} .emoticon._1f419{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f419.png\")} .emoticon._1f41a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f41a.png\")} .emoticon._1f41b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f41b.png\")} .emoticon._1f41c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f41c.png\")} .emoticon._1f41d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f41d.png\")} .emoticon._1f41e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f41e.png\")} .emoticon._1f41f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f41f.png\")} .emoticon._1f420{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f420.png\")} .emoticon._1f421{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f421.png\")} .emoticon._1f422{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f422.png\")} .emoticon._1f423{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f423.png\")} .emoticon._1f424{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f424.png\")} .emoticon._1f425{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f425.png\")} .emoticon._1f426{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f426.png\")} .emoticon._1f427{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f427.png\")} .emoticon._1f428{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f428.png\")} .emoticon._1f429{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f429.png\")} .emoticon._1f42a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f42a.png\")} .emoticon._1f42b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f42b.png\")} .emoticon._1f42c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f42c.png\")} .emoticon._1f42d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f42d.png\")} .emoticon._1f42e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f42e.png\")} .emoticon._1f42f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f42f.png\")} .emoticon._1f430{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f430.png\")} .emoticon._1f431{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f431.png\")} .emoticon._1f432{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f432.png\")} .emoticon._1f433{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f433.png\")} .emoticon._1f434{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f434.png\")} .emoticon._1f435{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f435.png\")} .emoticon._1f436{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f436.png\")} .emoticon._1f437{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f437.png\")} .emoticon._1f438{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f438.png\")} .emoticon._1f439{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f439.png\")} .emoticon._1f43a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f43a.png\")} .emoticon._1f43b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f43b.png\")} .emoticon._1f43c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f43c.png\")} .emoticon._1f43d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f43d.png\")} .emoticon._1f43e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f43e.png\")} .emoticon._1f440{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f440.png\")} .emoticon._1f442{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f442.png\")} .emoticon._1f443{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f443.png\")} .emoticon._1f444{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f444.png\")} .emoticon._1f445{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f445.png\")} .emoticon._1f446{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f446.png\")} .emoticon._1f447{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f447.png\")} .emoticon._1f448{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f448.png\")} .emoticon._1f449{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f449.png\")} .emoticon._1f44a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f44a.png\")} .emoticon._1f44b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f44b.png\")} .emoticon._1f44c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f44c.png\")} .emoticon._1f44d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f44d.png\")} .emoticon._1f44e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f44e.png\")} .emoticon._1f44f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f44f.png\")} .emoticon._1f450{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f450.png\")} .emoticon._1f451{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f451.png\")} .emoticon._1f452{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f452.png\")} .emoticon._1f453{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f453.png\")} .emoticon._1f454{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f454.png\")} .emoticon._1f455{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f455.png\")} .emoticon._1f456{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f456.png\")} .emoticon._1f457{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f457.png\")} .emoticon._1f458{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f458.png\")} .emoticon._1f459{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f459.png\")} .emoticon._1f45a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f45a.png\")} .emoticon._1f45b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f45b.png\")} .emoticon._1f45c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f45c.png\")} .emoticon._1f45d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f45d.png\")} .emoticon._1f45e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f45e.png\")} .emoticon._1f45f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f45f.png\")} .emoticon._1f460{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f460.png\")} .emoticon._1f461{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f461.png\")} .emoticon._1f462{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f462.png\")} .emoticon._1f463{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f463.png\")} .emoticon._1f464{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f464.png\")} .emoticon._1f465{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f465.png\")} .emoticon._1f466{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f466.png\")} .emoticon._1f467{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f467.png\")} .emoticon._1f468{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f468.png\")} .emoticon._1f469{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f469.png\")} .emoticon._1f46a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f46a.png\")} .emoticon._1f46b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f46b.png\")} .emoticon._1f46c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f46c.png\")} .emoticon._1f46d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f46d.png\")} .emoticon._1f46e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f46e.png\")} .emoticon._1f46f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f46f.png\")} .emoticon._1f470{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f470.png\")} .emoticon._1f471{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f471.png\")} .emoticon._1f472{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f472.png\")} .emoticon._1f473{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f473.png\")} .emoticon._1f474{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f474.png\")} .emoticon._1f475{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f475.png\")} .emoticon._1f476{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f476.png\")} .emoticon._1f477{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f477.png\")} .emoticon._1f478{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f478.png\")} .emoticon._1f479{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f479.png\")} .emoticon._1f47a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f47a.png\")} .emoticon._1f47b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f47b.png\")} .emoticon._1f47c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f47c.png\")} .emoticon._1f47d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f47d.png\")} .emoticon._1f47e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f47e.png\")} .emoticon._1f47f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f47f.png\")} .emoticon._1f480{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f480.png\")} .emoticon._1f481{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f481.png\")} .emoticon._1f482{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f482.png\")} .emoticon._1f483{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f483.png\")} .emoticon._1f484{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f484.png\")} .emoticon._1f485{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f485.png\")} .emoticon._1f486{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f486.png\")} .emoticon._1f487{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f487.png\")} .emoticon._1f488{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f488.png\")} .emoticon._1f489{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f489.png\")} .emoticon._1f48a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f48a.png\")} .emoticon._1f48b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f48b.png\")} .emoticon._1f48c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f48c.png\")} .emoticon._1f48d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f48d.png\")} .emoticon._1f48e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f48e.png\")} .emoticon._1f48f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f48f.png\")} .emoticon._1f490{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f490.png\")} .emoticon._1f491{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f491.png\")} .emoticon._1f492{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f492.png\")} .emoticon._1f493{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f493.png\")} .emoticon._1f494{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f494.png\")} .emoticon._1f495{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f495.png\")} .emoticon._1f496{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f496.png\")} .emoticon._1f497{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f497.png\")} .emoticon._1f498{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f498.png\")} .emoticon._1f499{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f499.png\")} .emoticon._1f49a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f49a.png\")} .emoticon._1f49b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f49b.png\")} .emoticon._1f49c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f49c.png\")} .emoticon._1f49d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f49d.png\")} .emoticon._1f49e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f49e.png\")} .emoticon._1f49f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f49f.png\")} .emoticon._1f4a0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4a0.png\")} .emoticon._1f4a1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4a1.png\")} .emoticon._1f4a2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4a2.png\")} .emoticon._1f4a3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4a3.png\")} .emoticon._1f4a4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4a4.png\")} .emoticon._1f4a5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4a5.png\")} .emoticon._1f4a6{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4a6.png\")} .emoticon._1f4a7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4a7.png\")} .emoticon._1f4a8{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4a8.png\")} .emoticon._1f4a9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4a9.png\")} .emoticon._1f4aa{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4aa.png\")} .emoticon._1f4ab{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4ab.png\")} .emoticon._1f4ac{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4ac.png\")} .emoticon._1f4ad{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4ad.png\")} .emoticon._1f4ae{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4ae.png\")} .emoticon._1f4af{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4af.png\")} .emoticon._1f4b0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4b0.png\")} .emoticon._1f4b1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4b1.png\")} .emoticon._1f4b2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4b2.png\")} .emoticon._1f4b3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4b3.png\")} .emoticon._1f4b4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4b4.png\")} .emoticon._1f4b5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4b5.png\")} .emoticon._1f4b6{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4b6.png\")} .emoticon._1f4b7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4b7.png\")} .emoticon._1f4b8{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4b8.png\")} .emoticon._1f4b9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4b9.png\")} .emoticon._1f4ba{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4ba.png\")} .emoticon._1f4bb{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4bb.png\")} .emoticon._1f4bc{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4bc.png\")} .emoticon._1f4bd{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4bd.png\")} .emoticon._1f4be{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4be.png\")} .emoticon._1f4bf{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4bf.png\")} .emoticon._1f4c0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4c0.png\")} .emoticon._1f4c1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4c1.png\")} .emoticon._1f4c2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4c2.png\")} .emoticon._1f4c3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4c3.png\")} .emoticon._1f4c4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4c4.png\")} .emoticon._1f4c5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4c5.png\")} .emoticon._1f4c6{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4c6.png\")} .emoticon._1f4c7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4c7.png\")} .emoticon._1f4c8{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4c8.png\")} .emoticon._1f4c9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4c9.png\")} .emoticon._1f4ca{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4ca.png\")} .emoticon._1f4cb{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4cb.png\")} .emoticon._1f4cc{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4cc.png\")} .emoticon._1f4cd{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4cd.png\")} .emoticon._1f4ce{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4ce.png\")} .emoticon._1f4cf{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4cf.png\")} .emoticon._1f4d0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4d0.png\")} .emoticon._1f4d1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4d1.png\")} .emoticon._1f4d2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4d2.png\")} .emoticon._1f4d3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4d3.png\")} .emoticon._1f4d4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4d4.png\")} .emoticon._1f4d5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4d5.png\")} .emoticon._1f4d6{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4d6.png\")} .emoticon._1f4d7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4d7.png\")} .emoticon._1f4d8{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4d8.png\")} .emoticon._1f4d9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4d9.png\")} .emoticon._1f4da{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4da.png\")} .emoticon._1f4db{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4db.png\")} .emoticon._1f4dc{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4dc.png\")} .emoticon._1f4dd{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4dd.png\")} .emoticon._1f4de{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4de.png\")} .emoticon._1f4df{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4df.png\")} .emoticon._1f4e0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4e0.png\")} .emoticon._1f4e1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4e1.png\")} .emoticon._1f4e2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4e2.png\")} .emoticon._1f4e3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4e3.png\")} .emoticon._1f4e4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4e4.png\")} .emoticon._1f4e5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4e5.png\")} .emoticon._1f4e6{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4e6.png\")} .emoticon._1f4e7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4e7.png\")} .emoticon._1f4e8{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4e8.png\")} .emoticon._1f4e9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4e9.png\")} .emoticon._1f4ea{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4ea.png\")} .emoticon._1f4eb{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4eb.png\")} .emoticon._1f4ec{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4ec.png\")} .emoticon._1f4ed{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4ed.png\")} .emoticon._1f4ee{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4ee.png\")} .emoticon._1f4ef{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4ef.png\")} .emoticon._1f4f0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4f0.png\")} .emoticon._1f4f1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4f1.png\")} .emoticon._1f4f2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4f2.png\")} .emoticon._1f4f3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4f3.png\")} .emoticon._1f4f4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4f4.png\")} .emoticon._1f4f5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4f5.png\")} .emoticon._1f4f6{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4f6.png\")} .emoticon._1f4f7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4f7.png\")} .emoticon._1f4f9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4f9.png\")} .emoticon._1f4fa{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4fa.png\")} .emoticon._1f4fb{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4fb.png\")} .emoticon._1f4fc{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f4fc.png\")} .emoticon._1f500{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f500.png\")} .emoticon._1f501{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f501.png\")} .emoticon._1f502{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f502.png\")} .emoticon._1f503{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f503.png\")} .emoticon._1f504{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f504.png\")} .emoticon._1f505{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f505.png\")} .emoticon._1f506{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f506.png\")} .emoticon._1f507{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f507.png\")} .emoticon._1f509{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f509.png\")} .emoticon._1f50a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f50a.png\")} .emoticon._1f50b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f50b.png\")} .emoticon._1f50c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f50c.png\")} .emoticon._1f50d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f50d.png\")} .emoticon._1f50e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f50e.png\")} .emoticon._1f50f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f50f.png\")} .emoticon._1f510{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f510.png\")} .emoticon._1f511{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f511.png\")} .emoticon._1f512{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f512.png\")} .emoticon._1f513{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f513.png\")} .emoticon._1f514{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f514.png\")} .emoticon._1f515{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f515.png\")} .emoticon._1f516{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f516.png\")} .emoticon._1f517{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f517.png\")} .emoticon._1f518{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f518.png\")} .emoticon._1f519{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f519.png\")} .emoticon._1f51a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f51a.png\")} .emoticon._1f51b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f51b.png\")} .emoticon._1f51c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f51c.png\")} .emoticon._1f51d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f51d.png\")} .emoticon._1f51e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f51e.png\")} .emoticon._1f51f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f51f.png\")} .emoticon._1f520{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f520.png\")} .emoticon._1f521{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f521.png\")} .emoticon._1f522{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f522.png\")} .emoticon._1f523{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f523.png\")} .emoticon._1f524{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f524.png\")} .emoticon._1f525{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f525.png\")} .emoticon._1f526{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f526.png\")} .emoticon._1f527{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f527.png\")} .emoticon._1f528{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f528.png\")} .emoticon._1f529{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f529.png\")} .emoticon._1f52a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f52a.png\")} .emoticon._1f52b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f52b.png\")} .emoticon._1f52c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f52c.png\")} .emoticon._1f52d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f52d.png\")} .emoticon._1f52e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f52e.png\")} .emoticon._1f52f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f52f.png\")} .emoticon._1f530{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f530.png\")} .emoticon._1f531{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f531.png\")} .emoticon._1f532{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f532.png\")} .emoticon._1f533{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f533.png\")} .emoticon._1f534{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f534.png\")} .emoticon._1f535{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f535.png\")} .emoticon._1f536{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f536.png\")} .emoticon._1f537{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f537.png\")} .emoticon._1f538{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f538.png\")} .emoticon._1f539{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f539.png\")} .emoticon._1f53a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f53a.png\")} .emoticon._1f53b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f53b.png\")} .emoticon._1f53c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f53c.png\")} .emoticon._1f53d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f53d.png\")} .emoticon._1f550{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f550.png\")} .emoticon._1f551{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f551.png\")} .emoticon._1f552{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f552.png\")} .emoticon._1f553{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f553.png\")} .emoticon._1f554{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f554.png\")} .emoticon._1f555{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f555.png\")} .emoticon._1f556{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f556.png\")} .emoticon._1f557{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f557.png\")} .emoticon._1f558{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f558.png\")} .emoticon._1f559{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f559.png\")} .emoticon._1f55a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f55a.png\")} .emoticon._1f55b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f55b.png\")} .emoticon._1f55c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f55c.png\")} .emoticon._1f55d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f55d.png\")} .emoticon._1f55e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f55e.png\")} .emoticon._1f55f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f55f.png\")} .emoticon._1f560{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f560.png\")} .emoticon._1f561{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f561.png\")} .emoticon._1f562{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f562.png\")} .emoticon._1f563{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f563.png\")} .emoticon._1f564{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f564.png\")} .emoticon._1f565{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f565.png\")} .emoticon._1f566{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f566.png\")} .emoticon._1f567{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f567.png\")} .emoticon._1f5fb{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f5fb.png\")} .emoticon._1f5fc{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f5fc.png\")} .emoticon._1f5fd{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f5fd.png\")} .emoticon._1f5fe{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f5fe.png\")} .emoticon._1f5ff{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f5ff.png\")} .emoticon._1f600{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f600.png\")} .emoticon._1f601{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f601.png\")} .emoticon._1f602{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f602.png\")} .emoticon._1f603{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f603.png\")} .emoticon._1f604{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f604.png\")} .emoticon._1f605{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f605.png\")} .emoticon._1f606{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f606.png\")} .emoticon._1f607{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f607.png\")} .emoticon._1f608{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f608.png\")} .emoticon._1f609{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f609.png\")} .emoticon._1f60a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f60a.png\")} .emoticon._1f60b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f60b.png\")} .emoticon._1f60c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f60c.png\")} .emoticon._1f60d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f60d.png\")} .emoticon._1f60e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f60e.png\")} .emoticon._1f60f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f60f.png\")} .emoticon._1f610{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f610.png\")} .emoticon._1f611{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f611.png\")} .emoticon._1f612{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f612.png\")} .emoticon._1f613{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f613.png\")} .emoticon._1f614{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f614.png\")} .emoticon._1f615{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f615.png\")} .emoticon._1f616{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f616.png\")} .emoticon._1f617{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f617.png\")} .emoticon._1f618{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f618.png\")} .emoticon._1f619{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f619.png\")} .emoticon._1f61a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f61a.png\")} .emoticon._1f61b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f61b.png\")} .emoticon._1f61c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f61c.png\")} .emoticon._1f61d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f61d.png\")} .emoticon._1f61e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f61e.png\")} .emoticon._1f61f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f61f.png\")} .emoticon._1f620{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f620.png\")} .emoticon._1f621{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f621.png\")} .emoticon._1f622{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f622.png\")} .emoticon._1f623{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f623.png\")} .emoticon._1f624{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f624.png\")} .emoticon._1f625{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f625.png\")} .emoticon._1f626{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f626.png\")} .emoticon._1f627{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f627.png\")} .emoticon._1f628{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f628.png\")} .emoticon._1f629{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f629.png\")} .emoticon._1f62a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f62a.png\")} .emoticon._1f62b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f62b.png\")} .emoticon._1f62c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f62c.png\")} .emoticon._1f62d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f62d.png\")} .emoticon._1f62e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f62e.png\")} .emoticon._1f62f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f62f.png\")} .emoticon._1f630{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f630.png\")} .emoticon._1f631{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f631.png\")} .emoticon._1f632{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f632.png\")} .emoticon._1f633{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f633.png\")} .emoticon._1f634{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f634.png\")} .emoticon._1f635{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f635.png\")} .emoticon._1f636{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f636.png\")} .emoticon._1f637{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f637.png\")} .emoticon._1f638{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f638.png\")} .emoticon._1f639{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f639.png\")} .emoticon._1f63a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f63a.png\")} .emoticon._1f63b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f63b.png\")} .emoticon._1f63c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f63c.png\")} .emoticon._1f63d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f63d.png\")} .emoticon._1f63e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f63e.png\")} .emoticon._1f63f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f63f.png\")} .emoticon._1f640{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f640.png\")} .emoticon._1f645{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f645.png\")} .emoticon._1f646{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f646.png\")} .emoticon._1f647{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f647.png\")} .emoticon._1f648{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f648.png\")} .emoticon._1f649{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f649.png\")} .emoticon._1f64a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f64a.png\")} .emoticon._1f64b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f64b.png\")} .emoticon._1f64c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f64c.png\")} .emoticon._1f64d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f64d.png\")} .emoticon._1f64e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f64e.png\")} .emoticon._1f64f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f64f.png\")} .emoticon._1f680{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f680.png\")} .emoticon._1f681{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f681.png\")} .emoticon._1f682{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f682.png\")} .emoticon._1f683{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f683.png\")} .emoticon._1f684{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f684.png\")} .emoticon._1f685{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f685.png\")} .emoticon._1f686{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f686.png\")} .emoticon._1f687{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f687.png\")} .emoticon._1f688{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f688.png\")} .emoticon._1f689{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f689.png\")} .emoticon._1f68a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f68a.png\")} .emoticon._1f68c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f68c.png\")} .emoticon._1f68d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f68d.png\")} .emoticon._1f68e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f68e.png\")} .emoticon._1f68f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f68f.png\")} .emoticon._1f690{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f690.png\")} .emoticon._1f691{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f691.png\")} .emoticon._1f692{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f692.png\")} .emoticon._1f693{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f693.png\")} .emoticon._1f694{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f694.png\")} .emoticon._1f695{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f695.png\")} .emoticon._1f696{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f696.png\")} .emoticon._1f697{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f697.png\")} .emoticon._1f698{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f698.png\")} .emoticon._1f699{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f699.png\")} .emoticon._1f69a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f69a.png\")} .emoticon._1f69b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f69b.png\")} .emoticon._1f69c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f69c.png\")} .emoticon._1f69d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f69d.png\")} .emoticon._1f69e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f69e.png\")} .emoticon._1f69f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f69f.png\")} .emoticon._1f6a0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6a0.png\")} .emoticon._1f6a1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6a1.png\")} .emoticon._1f6a2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6a2.png\")} .emoticon._1f6a3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6a3.png\")} .emoticon._1f6a4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6a4.png\")} .emoticon._1f6a5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6a5.png\")} .emoticon._1f6a6{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6a6.png\")} .emoticon._1f6a7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6a7.png\")} .emoticon._1f6a8{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6a8.png\")} .emoticon._1f6a9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6a9.png\")} .emoticon._1f6aa{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6aa.png\")} .emoticon._1f6ab{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6ab.png\")} .emoticon._1f6ac{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6ac.png\")} .emoticon._1f6ad{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6ad.png\")} .emoticon._1f6ae{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6ae.png\")} .emoticon._1f6af{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6af.png\")} .emoticon._1f6b0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6b0.png\")} .emoticon._1f6b1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6b1.png\")} .emoticon._1f6b2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6b2.png\")} .emoticon._1f6b3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6b3.png\")} .emoticon._1f6b4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6b4.png\")} .emoticon._1f6b5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6b5.png\")} .emoticon._1f6b6{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6b6.png\")} .emoticon._1f6b7{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6b7.png\")} .emoticon._1f6b8{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6b8.png\")} .emoticon._1f6b9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6b9.png\")} .emoticon._1f6ba{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6ba.png\")} .emoticon._1f6bb{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6bb.png\")} .emoticon._1f6bc{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6bc.png\")} .emoticon._1f6bd{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6bd.png\")} .emoticon._1f6be{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6be.png\")} .emoticon._1f6bf{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6bf.png\")} .emoticon._1f6c0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6c0.png\")} .emoticon._1f6c1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6c1.png\")} .emoticon._1f6c2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6c2.png\")} .emoticon._1f6c3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6c3.png\")} .emoticon._1f6c4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6c4.png\")} .emoticon._1f6c5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/1f6c5.png\")} .emoticon._203c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/203c.png\")} .emoticon._2049{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2049.png\")} .emoticon._2122{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2122.png\")} .emoticon._2139{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2139.png\")} .emoticon._2194{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2194.png\")} .emoticon._2195{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2195.png\")} .emoticon._2196{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2196.png\")} .emoticon._2197{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2197.png\")} .emoticon._2198{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2198.png\")} .emoticon._2199{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2199.png\")} .emoticon._21a9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/21a9.png\")} .emoticon._21aa{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/21aa.png\")} .emoticon._231a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/231a.png\")} .emoticon._231b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/231b.png\")} .emoticon._23e9{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/23e9.png\")} .emoticon._23ea{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/23ea.png\")} .emoticon._23eb{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/23eb.png\")} .emoticon._23ec{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/23ec.png\")} .emoticon._23f0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/23f0.png\")} .emoticon._23f3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/23f3.png\")} .emoticon._24c2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/24c2.png\")} .emoticon._25aa{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/25aa.png\")} .emoticon._25ab{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/25ab.png\")} .emoticon._25b6{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/25b6.png\")} .emoticon._25c0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/25c0.png\")} .emoticon._25fb{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/25fb.png\")} .emoticon._25fc{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/25fc.png\")} .emoticon._25fd{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/25fd.png\")} .emoticon._25fe{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/25fe.png\")} .emoticon._2600{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2600.png\")} .emoticon._2601{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2601.png\")} .emoticon._260e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/260e.png\")} .emoticon._2611{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2611.png\")} .emoticon._2614{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2614.png\")} .emoticon._2615{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2615.png\")} .emoticon._261d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/261d.png\")} .emoticon._263a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/263a.png\")} .emoticon._2648{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2648.png\")} .emoticon._2649{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2649.png\")} .emoticon._264a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/264a.png\")} .emoticon._264b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/264b.png\")} .emoticon._264c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/264c.png\")} .emoticon._264d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/264d.png\")} .emoticon._264e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/264e.png\")} .emoticon._264f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/264f.png\")} .emoticon._2650{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2650.png\")} .emoticon._2651{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2651.png\")} .emoticon._2652{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2652.png\")} .emoticon._2653{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2653.png\")} .emoticon._2660{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2660.png\")} .emoticon._2663{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2663.png\")} .emoticon._2665{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2665.png\")} .emoticon._2666{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2666.png\")} .emoticon._2668{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2668.png\")} .emoticon._267b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/267b.png\")} .emoticon._267f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/267f.png\")} .emoticon._2693{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2693.png\")} .emoticon._26a0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26a0.png\")} .emoticon._26a1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26a1.png\")} .emoticon._26aa{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26aa.png\")} .emoticon._26ab{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26ab.png\")} .emoticon._26bd{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26bd.png\")} .emoticon._26be{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26be.png\")} .emoticon._26c4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26c4.png\")} .emoticon._26c5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26c5.png\")} .emoticon._26ce{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26ce.png\")} .emoticon._26d4{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26d4.png\")} .emoticon._26ea{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26ea.png\")} .emoticon._26f2{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26f2.png\")} .emoticon._26f3{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26f3.png\")} .emoticon._26f5{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26f5.png\")} .emoticon._26fa{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26fa.png\")} .emoticon._26fd{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/26fd.png\")} .emoticon._2702{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2702.png\")} .emoticon._2705{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2705.png\")} .emoticon._2708{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2708.png\")} .emoticon._2709{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2709.png\")} .emoticon._270a{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/270a.png\")} .emoticon._270b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/270b.png\")} .emoticon._270c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/270c.png\")} .emoticon._270f{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/270f.png\")} .emoticon._2712{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2712.png\")} .emoticon._2714{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2714.png\")} .emoticon._2716{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2716.png\")} .emoticon._2728{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2728.png\")} .emoticon._2733{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2733.png\")} .emoticon._2734{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2734.png\")} .emoticon._2744{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2744.png\")} .emoticon._2747{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2747.png\")} .emoticon._274c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/274c.png\")} .emoticon._274e{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/274e.png\")} .emoticon._2753{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2753.png\")} .emoticon._2754{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2754.png\")} .emoticon._2755{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2755.png\")} .emoticon._2757{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2757.png\")} .emoticon._2764{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2764.png\")} .emoticon._2795{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2795.png\")} .emoticon._2796{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2796.png\")} .emoticon._2797{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2797.png\")} .emoticon._27a1{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/27a1.png\")} .emoticon._27b0{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/27b0.png\")} .emoticon._27bf{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/27bf.png\")} .emoticon._2934{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2934.png\")} .emoticon._2935{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2935.png\")} .emoticon._2b05{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2b05.png\")} .emoticon._2b06{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2b06.png\")} .emoticon._2b07{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2b07.png\")} .emoticon._2b1b{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2b1b.png\")} .emoticon._2b1c{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2b1c.png\")} .emoticon._2b50{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2b50.png\")} .emoticon._2b55{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/2b55.png\")} .emoticon._3030{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/3030.png\")} .emoticon._303d{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/303d.png\")} .emoticon._3297{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/3297.png\")} .emoticon._3299{background-image:url(\"images/emoji/gemoji/images/emoji/unicode/3299.png\")} html[dir=rtl] #wunderlist-base #lists{left:initial;right:0} html[dir=rtl] #wunderlist-base #tasks{right:280px;left:0} html[dir=rtl] #wunderlist-base .main-interface.detail-visible #detail{right:initial;left:20px} html[dir=rtl] #wunderlist-base .main-interface.detail-visible #tasks{left:360px;right:280px} html[dir=rtl] #wunderlist-base .cols > div{padding-right:initial;padding-left:10px} html[dir=rtl] #wunderlist-base .right{float:left} html[dir=rtl] #wunderlist-base .left{float:right} html[dir=rtl] #wunderlist-base .text-right{text-align:left} html[dir=rtl] #wunderlist-base .text-left{text-align:right} @-webkit-keyframes rotate{0%{-webkit-transform:rotate(0)} 100%{-webkit-transform:rotate(360deg)} }@-moz-keyframes rotate{0%{-moz-transform:rotate(0)} 100%{-moz-transform:rotate(360deg)} }@keyframes rotate{0%{-webkit-transform:rotate(0);-moz-transform:rotate(0);-o-transform:rotate(0);-ms-transform:rotate(0);transform:rotate(0)} 100%{-webkit-transform:rotate(360deg);-moz-transform:rotate(360deg);-o-transform:rotate(360deg);-ms-transform:rotate(360deg);transform:rotate(360deg)} }" }; });
define('styles/application/_avatars',[],function() { return {'name': 'application/_avatars', 'styles': ".avatar{display:block;position:relative;background-image:url(\"images/sprites/app.png\");background-position:-577px -164px;width:25px;height:25px;-webkit-border-radius:3px;border-radius:3px;} .avatar:hover{cursor:default} .avatar:before{position:absolute;width:23px;height:23px;background:transparent;-webkit-box-shadow:0 1px 0 rgba(255,255,255,0.5);box-shadow:0 1px 0 rgba(255,255,255,0.5);border:1px solid rgba(0,0,0,0.2);-webkit-border-radius:3px;border-radius:3px;content:\"\";z-index:100} .avatar.pro-user:after{background-image:url(\"images/sprites/app.png\");background-position:-535px -394px;width:16px;height:16px;position:absolute;z-index:100;content:\"\";top:-5px;right:-7px} .avatar img{height:25px;width:25px;-webkit-border-radius:4px;border-radius:4px;} .avatar img[src=\"\"]{visibility:hidden} .avatar.tiny{background-position:-441px -394px;width:18px;height:18px;} .avatar.tiny:before{width:16px !important;height:16px !important} .avatar.tiny img{width:18px !important;height:18px !important} .avatar.small{background-position:-441px -192px;width:22px;height:22px;} .avatar.small:before{width:20px !important;height:20px !important} .avatar.small img{width:22px !important;height:22px !important} .avatar.medium{background-position:-601px -68px;width:32px;height:32px;-webkit-border-radius:4px;border-radius:4px;} .avatar.medium:before{width:30px !important;height:30px !important;-webkit-border-radius:4px;border-radius:4px} .avatar.medium img{height:32px !important;width:32px !important;-webkit-border-radius:4px;border-radius:4px} .avatar.medium.wunderlist-avatar{background:url(\"images/icon.png\") top left !important;-webkit-background-size:32px !important;-moz-background-size:32px !important;background-size:32px !important} .avatar.medium.blank{background-position:-505px -132px;width:32px;height:32px} .avatar.almostlarge{background-position:-226px -308px;-webkit-border-radius:0;border-radius:0;width:60px;height:60px;} .avatar.almostlarge:before{display:none} .avatar.almostlarge img{-webkit-border-radius:0;border-radius:0;width:60px;height:60px;margin:0 auto} .avatar.large{background-position:0 0;-webkit-border-radius:0;border-radius:0;width:120px;height:120px;} .avatar.large:before{display:none} .avatar.large img{-webkit-border-radius:0;border-radius:0;width:120px;height:120px;margin:0 auto} .avatar.unassigned{background-position:-602px -164px;width:25px;height:25px} .avatar.large:before{border:none;-webkit-box-shadow:none;box-shadow:none} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){.avatar{background-image:url(\"images/sprites/app-retina.png\") !important;-webkit-background-size:641px;-moz-background-size:641px;background-size:641px;} .avatar.pro-user:after{background-image:url(\"images/sprites/app-retina.png\") !important;-webkit-background-size:641px;-moz-background-size:641px;background-size:641px} }@media all and (max-width:1024px){#toolbar .avatar{background-position:-601px -68px} }" }; });
define('styles/_forms',[],function() { return {'name': '_forms', 'styles': "#wunderlist-base textarea{outline:none;color:#423e3e;font-weight:500} #wunderlist-base [type=text],#wunderlist-base [type=email],#wunderlist-base [type=password],#wunderlist-base .scale-input,#wunderlist-base .input-fake{width:100%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;padding:4px;font-family:\"Helvetica Neue\",\"Helvetica\",\"Arial\",Sans-Serif;font-weight:500;font-size:13px;color:#423e3e;outline:none;border:1px solid #bdbcbb;background:#fff;-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,0.1);box-shadow:inset 0 1px 2px rgba(0,0,0,0.1);-webkit-transition:all .2s ease-in-out;-moz-transition:all .2s ease-in-out;-o-transition:all .2s ease-in-out;-ms-transition:all .2s ease-in-out;transition:all .2s ease-in-out;} #wunderlist-base [type=text]:focus,#wunderlist-base [type=email]:focus,#wunderlist-base [type=password]:focus,#wunderlist-base .scale-input:focus,#wunderlist-base .input-fake:focus,#wunderlist-base [type=text].focus,#wunderlist-base [type=email].focus,#wunderlist-base [type=password].focus,#wunderlist-base .scale-input.focus,#wunderlist-base .input-fake.focus{background-color:#f8f8f8;-webkit-box-shadow:0 0 4px rgba(43,136,217,0.32),0 1px 1px rgba(255,255,255,0.43),inset 0 2px 4px rgba(43,136,217,0.12),inset 0 0 4px rgba(43,136,217,0.2);box-shadow:0 0 4px rgba(43,136,217,0.32),0 1px 1px rgba(255,255,255,0.43),inset 0 2px 4px rgba(43,136,217,0.12),inset 0 0 4px rgba(43,136,217,0.2);border:solid 1px rgba(43,136,217,0.65)} #wunderlist-base [type=text].chromeless,#wunderlist-base [type=email].chromeless,#wunderlist-base [type=password].chromeless,#wunderlist-base .scale-input.chromeless,#wunderlist-base .input-fake.chromeless{border:none !important;background:none !important;-webkit-box-shadow:none !important;box-shadow:none !important;-webkit-border-radius:0 !important;border-radius:0 !important;padding:0} #wunderlist-base [type=text].shortcut,#wunderlist-base [type=email].shortcut,#wunderlist-base [type=password].shortcut,#wunderlist-base .scale-input.shortcut,#wunderlist-base .input-fake.shortcut{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(0,0,0,0.03)), color-stop(1, rgba(0,0,0,0.08)));background-image:-webkit-linear-gradient(top, rgba(0,0,0,0.03) 0, rgba(0,0,0,0.08) 100%);background-image:-moz-linear-gradient(top, rgba(0,0,0,0.03) 0, rgba(0,0,0,0.08) 100%);background-image:-o-linear-gradient(top, rgba(0,0,0,0.03) 0, rgba(0,0,0,0.08) 100%);background-image:-ms-linear-gradient(top, rgba(0,0,0,0.03) 0, rgba(0,0,0,0.08) 100%);background-image:linear-gradient(top, rgba(0,0,0,0.03) 0, rgba(0,0,0,0.08) 100%);border:1px solid rgba(0,0,0,0.15);-webkit-box-shadow:0 1px 0 rgba(255,255,255,0.2);box-shadow:0 1px 0 rgba(255,255,255,0.2);text-shadow:0 1px 0 rgba(255,255,255,0.4);-webkit-border-radius:15px;border-radius:15px;padding:4px 10px;text-align:center;} #wunderlist-base [type=text].shortcut:focus,#wunderlist-base [type=email].shortcut:focus,#wunderlist-base [type=password].shortcut:focus,#wunderlist-base .scale-input.shortcut:focus,#wunderlist-base .input-fake.shortcut:focus{background:#f9f9f9;border-color:#2aadec} #wunderlist-base [type=text].big,#wunderlist-base [type=email].big,#wunderlist-base [type=password].big,#wunderlist-base .scale-input.big,#wunderlist-base .input-fake.big{width:100%;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box} #wunderlist-base [type=text].assign,#wunderlist-base [type=email].assign,#wunderlist-base [type=password].assign,#wunderlist-base .scale-input.assign,#wunderlist-base .input-fake.assign{width:200px} #wunderlist-base [type=text].medium,#wunderlist-base [type=email].medium,#wunderlist-base [type=password].medium,#wunderlist-base .scale-input.medium,#wunderlist-base .input-fake.medium{width:76px} #wunderlist-base [type=text].small,#wunderlist-base [type=email].small,#wunderlist-base [type=password].small,#wunderlist-base .scale-input.small,#wunderlist-base .input-fake.small{width:30px} #wunderlist-base [type=text].smaller,#wunderlist-base [type=email].smaller,#wunderlist-base [type=password].smaller,#wunderlist-base .scale-input.smaller,#wunderlist-base .input-fake.smaller{width:20px} #wunderlist-base [type=text][disabled],#wunderlist-base [type=email][disabled],#wunderlist-base [type=password][disabled],#wunderlist-base .scale-input[disabled],#wunderlist-base .input-fake[disabled]{border-color:#ccc;color:#bdbcbb} #wunderlist-base [type=text]:-moz-placeholder,#wunderlist-base [type=email]:-moz-placeholder,#wunderlist-base [type=password]:-moz-placeholder,#wunderlist-base .scale-input:-moz-placeholder,#wunderlist-base .input-fake:-moz-placeholder{color:#bdbcbb} #wunderlist-base textarea{resize:none} #wunderlist-base select{width:100%;} #wunderlist-base select.small{width:100px} #wunderlist-base select.smaller{width:70px} #wunderlist-base select.tiny{width:50px} #wunderlist-base #edit-reminder-time-container{padding:4px 2px 4px 8px} " }; });
define('styles/_sprite',[],function() { return {'name': '_sprite', 'styles': ".icon{background-image:url(\"images/sprites/app.png\");cursor:pointer;vertical-align:middle;display:inline-block;} .icon.logo{background-position:-481px -294px;width:100px;height:20px} .icon.gmail{background-position:-463px -192px;width:30px;height:21px} .icon.email{background-position:-615px -394px;width:16px;height:13px} .icon.bell{background-position:-441px -354px;width:28px;height:20px;} .icon.bell:hover,.icon.bell:focus{background-position:-599px -334px} .icon.bell-left{background-position:-631px -192px;width:7px;height:20px} .icon.bell-right{background-position:-633px -68px;width:7px;height:20px} .icon.offline{background-position:-627px -334px;width:11px;height:13px} .icon.menu-down{background-position:-501px -412px;width:10px;height:10px} .icon.menu-up{background-position:-631px -394px;width:10px;height:10px} .icon.menu-notifications{background-position:-461px -314px;width:18px;height:20px} .icon.menu-search{background-position:-479px -314px;width:20px;height:20px} .icon.list-inbox{background-position:-561px -254px;width:20px;height:20px} .icon.list-all{background-position:-517px -234px;width:20px;height:20px} .icon.list-today{background-position:-621px -274px;width:20px;height:20px;font-size:7px;padding-top:7px;font-weight:bold;color:#aaa;text-shadow:0 1px 0 #fff;text-align:center;line-height:9px;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box} .icon.list-week{background-position:-461px -294px;width:20px;height:20px} .icon.list-completed{background-position:-597px -234px;width:20px;height:20px} .icon.list-starred{background-position:-581px -274px;width:20px;height:20px} .icon.list-conversations{background-position:-461px -254px;width:20px;height:20px} .icon.list-list{background-position:-621px -254px;width:20px;height:20px} .icon.list-sharing{background-position:-541px -274px;width:20px;height:20px} .icon.list-assigned{background-position:-557px -234px;width:20px;height:20px} .icon.list-saved-search{background-position:-461px -274px;width:20px;height:20px} .unreadComments .icon.list-inbox{background-position:-541px -254px;width:20px;height:20px} .unreadComments .icon.list-conversations{background-position:-441px -254px;width:20px;height:20px} .unreadComments .icon.list-list{background-position:-601px -254px;width:20px;height:20px} .popover-sharing .icon.list-completed{background-position:-577px -234px;width:20px;height:20px} .icon.input-star{background-position:-479px -234px;width:18px;height:20px;opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50);} .icon.input-star:hover{opacity:1;-ms-filter:none;filter:none} .icon.input-star.starred{background-position:-461px -234px;width:18px;height:20px;opacity:1;-ms-filter:none;filter:none} .icon.input-assign{background-position:-601px -214px;width:24px;height:20px;opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50);} .icon.input-assign:hover{opacity:.8;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\";filter:alpha(opacity=80)} .icon.input-assign.active{opacity:1;-ms-filter:none;filter:none} .icon.input-assign-delete{background-position:-567px -394px;width:16px;height:16px} .icon.input-assign-frame{background-position:-525px -164px;width:26px;height:26px;} .icon.input-assign-frame.selected{background-position:-551px -164px;width:26px;height:26px} .icon.input-date{background-position:-513px -192px;width:20px;height:20px;opacity:.4;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=40)\";filter:alpha(opacity=40);} .icon.input-date:hover{opacity:.8;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\";filter:alpha(opacity=80)} .icon.input-date.dated{background-position:-601px -274px;width:20px;height:20px;height:13px;font-size:7px;padding-top:7px;font-weight:bold;color:#fff;text-shadow:0 1px 1px rgba(0,0,0,0.45);text-align:center;opacity:1;-ms-filter:none;filter:none} .icon.trash-delete{background-position:-583px -34px;width:32px;height:32px} .icon.task-checkbox,.icon.detail-checkbox{background-position:-495px -394px;width:20px;height:18px;} .icon.task-checkbox:active,.icon.detail-checkbox:active{background-position:-607px -374px} .icon.task-checked,.icon.detail-checked{background-position:-515px -394px;width:20px;height:18px} .icon.task-star{background-position:-475px -34px;width:18px;height:34px;} .icon.task-star:hover{background-position:-401px -320px} .icon.task-starred,.icon.task-starred:hover{background-position:-493px -34px;width:24px;height:34px} .icon.task-separator{background-position:-517px -34px;width:2px;height:33px} .icon.task-recurring{background-position:-527px -374px;width:20px;height:20px} .icon.task-attachment{background-position:-481px -374px;width:20px;height:20px} .icon.has-comments{background-position:-441px -214px;width:20px;height:20px;} .icon.has-comments.has-unread-comments{background-position:-461px -214px;width:20px;height:20px} .icon.toggle-completed-tasks{background-position:-441px -314px;width:20px;height:20px;opacity:.8;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\";filter:alpha(opacity=80);} .icon.toggle-completed-tasks:hover{opacity:1;-ms-filter:none;filter:none} .icon.detail-star{background-position:-326px -308px;width:30px;height:40px} .icon.detail-starred{background-position:-228px -173px;width:30px;height:54px} .icon.subtask-checkbox{background-position:-597px -354px;width:20px;height:20px;} .icon.subtask-checkbox:active{background-position:-577px -354px;width:20px;height:20px} .icon.subtask-checked{background-position:-617px -354px;width:20px;height:20px} .icon.detail-add{background-position:-551px -394px;width:16px;height:16px;opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50);cursor:default} .icon.detail-delete{background-position:-561px -214px;width:20px;height:20px;opacity:.4;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=40)\";filter:alpha(opacity=40);} .icon.detail-delete:hover{opacity:.8;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\";filter:alpha(opacity=80)} .icon.detail-save{background-position:-493px -192px;width:20px;height:20px} .icon.detail-assign{background-position:-557px -234px;width:20px;height:20px} .icon.detail-date{background-position:-579px -314px;width:20px;height:20px} .icon.detail-reminder{background-position:-621px -294px;width:20px;height:20px} .icon.detail-trash{background-position:-581px -214px;width:20px;height:20px} .icon.detail-close{background-position:-553px -192px;width:20px;height:20px} .icon.comments-arrow-open{background-position:-465px -412px;width:12px;height:12px;} .icon.comments-arrow-open:hover{background-position:-489px -412px} .icon.comments-arrow-open:active{background-position:-627px -374px} .icon.comments-arrow-close{background-position:-453px -412px;width:12px;height:12px;} .icon.comments-arrow-close:hover{background-position:-441px -412px} .icon.comments-arrow-close:active{background-position:-477px -412px} .icon.comments-expand{background-position:-453px -412px;width:12px;height:12px} .icon.no-comments{background-position:-401px -200px;width:40px;height:40px} .icon.offline-bolt{background-position:-583px -394px;width:16px;height:16px} .icon.logout{background-position:-581px -294px;width:20px;height:20px} .icon.delete-list{background-position:-591px -192px;width:20px;height:20px} .icon.settings{background-position:-517px -354px;width:20px;height:20px} .icon.note-fullscreen{background-position:-539px -314px;width:20px;height:20px;opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60);} .icon.note-fullscreen:hover{opacity:1;-ms-filter:none;filter:none} .icon.attention{background-position:-146px -308px;width:80px;height:60px} .icon.reminder{background-position:-401px -160px;width:40px;height:40px} .icon.big-star{background-position:-228px 0;width:93px;height:93px} .icon.stripe{background-position:-66px -380px;width:322px;height:4px} .icon.love-wunderlist{background-position:-441px 0;width:200px;height:34px} .icon.danke{background-position:-272px -387px;width:160px;height:34px} .icon.dismiss{background-position:-441px -234px;width:20px;height:20px} .icon.circle{background-position:-441px -34px;width:34px;height:34px} .icon.facebook-small{background-position:-541px -334px;width:18px;height:20px} .icon.twitter-small{background-position:-573px -192px;width:18px;height:20px} .icon.close{background-position:-561px -214px;width:20px;height:20px;opacity:.4;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=40)\";filter:alpha(opacity=40);} .icon.close:hover{opacity:.8;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\";filter:alpha(opacity=80)} .icon.alert{background-position:-501px -374px;width:26px;height:20px} .icon.popover-share{background-position:-501px -334px;width:20px;height:20px} .icon.popover-accepted{background-position:-461px -334px;width:20px;height:20px} .icon.popover-notshared{background-position:-100px -128px;width:120px;height:100px} .icon.no-share-empty-coach{background-position:0 -128px;width:100px;height:100px} .icon.assigned{background-position:-461px -334px;width:20px;height:20px} .icon.bell-large{background-position:0 -308px;width:66px;height:79px} .icon.settings-general{background-position:-401px -40px;width:40px;height:40px} .icon.settings-account{background-position:-401px -80px;width:40px;height:40px} .icon.settings-shortcuts{background-position:-286px -308px;width:40px;height:40px} .icon.settings-sidebar{background-position:-401px -240px;width:40px;height:40px} .icon.settings-notifications{background-position:-356px -308px;width:40px;height:40px} .icon.settings-about{background-position:-401px -120px;width:40px;height:40px} .icon.settings-group{background-position:-401px 0;width:40px;height:40px} .icon.highlight{background-position:-569px -132px;width:41px;height:29px} .icon.wunderlist-icon{background-position:-128px 0;width:100px;height:100px} .icon.facebook-btn{background-position:-599px -314px;width:22px;height:20px} .icon.facebook-icon{background-position:-621px -314px;width:20px;height:20px} .icon.facebook{background-position:-627px -164px;width:14px;height:22px} .icon.twitter-btn{background-position:-541px -214px;width:20px;height:20px} .icon.google-btn{background-position:-501px -214px;width:20px;height:20px} .icon.sixw-btn{background-position:-537px -354px;width:20px;height:20px} .icon.support-btn{background-position:-441px -374px;width:20px;height:20px} .icon.edit-pen{background-position:-537px -234px;width:20px;height:20px} .icon.pro{background-position:-401px -280px;width:40px;height:40px} .icon.pro-small{background-position:-535px -394px;width:16px;height:16px} .icon.pro-big{background-position:-321px -240px;width:60px;height:60px} .icon.add-pro-teammate{background-position:-469px -164px;width:28px;height:28px} .icon.pro-teammate{background-position:-441px -164px;width:28px;height:28px} .icon.added-pro-teammate{background-position:-497px -164px;width:28px;height:28px} .icon.remove-pro-teammate{background-position:-610px -132px;width:28px;height:28px} .icon.fourohfour{background-position:-228px -93px;width:80px;height:80px} .icon.fourohfour-search{background-position:-80px -228px;width:80px;height:80px} .icon.fourohfour-today{background-position:-321px 0;width:80px;height:80px} .icon.fourohfour-starred{background-position:-160px -228px;width:80px;height:80px} .icon.fourohfour-week{background-position:-321px -80px;width:80px;height:80px} .icon.fourohfour-all{background-position:-240px -228px;width:80px;height:80px} .icon.fourohfour-completed{background-position:0 -228px;width:80px;height:80px} .icon.fourohfour-assigned{background-position:-321px -160px;width:80px;height:80px} .icon.fourohfour-conversations{background-position:-66px -308px;width:80px;height:72px} .icon.action-divider{background-position:-615px -34px;width:2px;height:32px} .icon.action-share{background-position:-601px -100px;width:32px;height:32px;} .icon.action-share:not(.disabled):hover{background-position:-569px -100px;width:32px;height:32px} .icon.action-share:active,.icon.action-share:focus,.icon.action-share.active{background-position:-537px -100px;width:32px;height:32px} .icon.action-email{background-position:-537px -68px;width:32px;height:32px;} .icon.action-email:not(.disabled):hover{background-position:-505px -68px;width:32px;height:32px} .icon.action-email:active,.icon.action-email:focus,.icon.action-email.active{background-position:-473px -68px;width:32px;height:32px} .icon.action-print{background-position:-505px -100px;width:32px;height:32px;} .icon.action-print:not(.disabled):hover{background-position:-473px -100px;width:32px;height:32px} .icon.action-print:active,.icon.action-print:focus,.icon.action-print.active{background-position:-441px -100px;width:32px;height:32px} .icon.action-sort{background-position:-551px -34px;width:32px;height:32px;} .icon.action-sort:not(.disabled):hover{background-position:-519px -34px;width:32px;height:32px} .icon.action-sort:active,.icon.action-sort:focus,.icon.action-sort.active{background-position:-441px -132px;width:32px;height:32px} .icon.action-flash-cards{background-position:-569px -68px;width:32px;height:32px;} .icon.action-flash-cards:not(.disabled):hover{background-position:-441px -68px;width:32px;height:32px} .icon.action-delete{background-position:-583px -34px;width:32px;height:32px;} .icon.action-delete:not(.disabled):hover{background-position:-537px -132px;width:32px;height:32px} .icon.action-delete:active,.icon.action-delete:focus,.icon.action-delete.active{background-position:-473px -132px;width:32px;height:32px} .icon.action-list{background-position:-441px -334px;width:20px;height:20px} .icon.action-list-selected{background-position:-601px -294px;width:20px;height:20px} .icon.action-sort-az{background-position:-521px -334px;width:20px;height:20px} .icon.action-sort-assign{background-position:-481px -334px;width:20px;height:20px} .icon.action-sort-date{background-position:-579px -334px;width:20px;height:20px} li.active .icon.list-inbox{background-position:-521px -254px;width:20px;height:20px} li.active .icon.list-all{background-position:-497px -234px;width:20px;height:20px} li.active .icon.list-today{background-position:-601px -274px;width:20px;height:20px;color:#fff;text-shadow:0 1px 0 #336692} li.active .icon.list-week{background-position:-441px -294px;width:20px;height:20px} li.active .icon.list-completed{background-position:-577px -234px;width:20px;height:20px} li.active .icon.list-starred{background-position:-561px -274px;width:20px;height:20px} li.active .icon.list-assigned{background-position:-559px -334px;width:20px;height:20px} li.active .icon.list-saved-search{background-position:-441px -274px;width:20px;height:20px} li.active .icon.delete-list{background-position:-611px -192px;width:20px;height:20px} li.active .icon.list-conversations{background-position:-617px -234px;width:20px;height:20px} li.active .icon.list-list,.addlist.active .icon.list-list{background-position:-581px -254px;width:20px;height:20px} .shared .icon.list-list{background-position:-521px -274px;width:20px;height:20px} .shared.unreadComments .icon.list-list{background-position:-501px -274px;width:20px;height:20px} .active.shared .icon.list-list{background-position:-481px -274px;width:20px;height:20px} .section.assigned .icon.detail-assign{background-position:-557px -234px;width:20px;height:20px} .section.date .icon.detail-date{background-position:-533px -192px;width:20px;height:20px;} .section.date .icon.detail-date.overdue{background-position:-557px -354px;width:20px;height:20px} .section.date .icon.detail-reminder{background-position:-521px -214px;width:20px;height:20px;} .section.date .icon.detail-reminder.overdue{background-position:-481px -214px;width:20px;height:20px} #detail.complete .section .icon.detail-date{background-position:-579px -314px;width:20px;height:20px} #detail.complete .section .icon.detail-reminder{background-position:-621px -294px;width:20px;height:20px} .focus-notifications .icon.bell,.focus-notifications .icon.bell:hover{background-position:-469px -354px;width:28px;height:20px} #notifications-count:active .icon.bell-left{background-position:-625px -214px;width:7px;height:20px} #notifications-count:active .icon.bell-right{background-position:-633px -100px;width:7px;height:20px} #notifications-count:active .bell-mid{background-position:0 -19px !important} #notifications-count:focus .bell{background-position:-599px -334px} .task-list.completed-hidden .icon.toggle-completed-tasks{background-position:-559px -314px;width:20px;height:20px;opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50);} .task-list.completed-hidden .icon.toggle-completed-tasks:hover{opacity:.7;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=70)\";filter:alpha(opacity=70)} .selected .icon.assigned{background-position:-497px -354px;width:20px;height:20px} .files-add:before,.files-add:after{background-image:url(\"images/sprites/files.png\")} .files-add:before{background-position:-198px -54px;width:9px;height:41px} .files-add:after{background-position:-171px -54px;width:9px;height:41px} .files-add.offline:hover:before,.files-add.notSynced:hover:before,.files-add.offline:active:before,.files-add.notSynced:active:before{background-position:-198px -54px;width:9px;height:41px} .files-add.offline:hover:after,.files-add.notSynced:hover:after,.files-add.offline:active:after,.files-add.notSynced:active:after{background-position:-171px -54px;width:9px;height:41px} .files-add:hover:before,.files-add:focus:before{background-position:-180px -54px} .files-add:hover:after,.files-add:focus:after{background-position:-189px -54px} .files-add:active:before{background-position:-162px -54px} .files-add:active:after{background-position:-207px -54px} .drop .files-add:before{background-position:-162px -54px} .drop .files-add:after{background-position:-207px -54px} .small-preview .icon-file.image-thumb{background-position:-108px -108px;width:54px;height:54px} .icon-file{background-image:url(\"images/sprites/files.png\");} .icon-file.cancel-action,.icon-file.delete-action{background-position:-110px -181px;width:14px;height:14px;} .icon-file.cancel-action:hover,.icon-file.delete-action:hover{background-position:-166px -181px;width:14px;height:14px} .icon-file.cancel-action:active,.icon-file.delete-action:active{background-position:-54px -181px;width:14px;height:14px} .icon-file.alert{background-position:-180px -181px;width:17px;height:14px} .icon-file.document-thumb{background-position:-162px 0;width:54px;height:54px} .icon-file.image-thumb{background-position:-108px -108px;width:54px;height:54px} .icon-file.package-thumb{background-position:-108px -54px;width:54px;height:54px} .icon-file.movie-thumb{background-position:0 0;width:54px;height:54px} .icon-file.pdf-thumb{background-position:0 -108px;width:54px;height:54px} .icon-file.audio-thumb{background-position:-54px 0;width:54px;height:54px} .icon-file.text-thumb{background-position:0 -54px;width:54px;height:54px} .icon-file.table-thumb{background-position:-54px -54px;width:54px;height:54px} .icon-file.presentaion-thumb{background-position:-108px 0;width:54px;height:54px} .icon-file.files-add-record{background-position:-162px -131px;width:25px;height:25px;} .icon-file.files-add-record:hover{background-position:-187px -131px} .icon-file.record-audio{background-position:-185px -162px;width:18px;height:18px} .icon-file.play-audio{background-position:-131px -162px;width:18px;height:18px} .icon-file.clear-audio{background-position:-38px -162px;width:19px;height:19px} .icon-file.upload-audio{background-position:-57px -162px;width:19px;height:19px} a:hover .record-audio{background-position:0 -181px} a:hover .play-audio{background-position:-149px -162px} a:hover .upload-audio{background-position:-76px -162px} a:hover .clear-audio{background-position:0 -162px} a:focus .detail-star{background-position:-288px -173px} a:focus .detail-starred{background-position:-258px -173px} a:focus .detail-checkbox{background-position:-587px -374px} a:focus .detail-checked{background-position:-567px -374px} a.recording .record-audio{background-position:-95px -162px;width:18px;height:18px} a.recording:hover .record-audio{background-position:-113px -162px} a.playing .play-audio{background-position:-18px -181px;width:18px;height:18px} a.playing:hover .play-audio{background-position:-36px -181px} a.disabled .upload-audio{background-position:-19px -162px;width:19px;height:19px} a.disabled .play-audio{background-position:-167px -162px;width:18px;height:18px} .audio-recorder-container a:active{background-image:url(\"images/sprites/files.png\");background-position:-162px -95px} .audio-recorder-container a.disabled:active{background:none} .hasPreview .icon-file.delete-action{z-index:9999;background-position:-96px -181px;width:14px;height:14px;} .hasPreview .icon-file.delete-action:hover{background-position:-68px -181px;width:14px;height:14px} .hasPreview .icon-file.delete-action:active{background-position:-82px -181px;width:14px;height:14px} body.background-06 .icon.toggle-completed-tasks,body.background-19 .icon.toggle-completed-tasks,body.background-24 .icon.toggle-completed-tasks{background-position:-499px -314px;width:20px;height:20px;opacity:.8;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=80)\";filter:alpha(opacity=80);} body.background-06 .icon.toggle-completed-tasks:hover,body.background-19 .icon.toggle-completed-tasks:hover,body.background-24 .icon.toggle-completed-tasks:hover{opacity:1;-ms-filter:none;filter:none} body.background-06 .task-list.completed-hidden .icon.toggle-completed-tasks,body.background-19 .task-list.completed-hidden .icon.toggle-completed-tasks,body.background-24 .task-list.completed-hidden .icon.toggle-completed-tasks{background-position:-519px -314px;width:20px;height:20px} input.speech-enabled::-webkit-input-speech-button{background-image:url(\"images/sprites/app.png\");background-position:-617px -34px;width:20px;height:26px} #fullscreen-note a.close span.close{background-image:url(\"images/sprites/app.png\");background-position:-561px -214px;width:20px;height:20px} .webview .container a.icon.close-webview{background-position:-459px -394px;width:18px;height:18px;opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60);} .webview .container a.icon.close-webview:hover{opacity:1;-ms-filter:none;filter:none} .webview .container a.icon.close-webview:active{background-position:-477px -394px;width:18px;height:18px} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){.icon{background-image:url(\"images/sprites/app-retina.png\") !important;-webkit-background-size:641px;-moz-background-size:641px;background-size:641px} .icon-file{background-image:url(\"images/sprites/files-retina.png\") !important;-webkit-background-size:216px;-moz-background-size:216px;background-size:216px} input.speech-enabled::-webkit-input-speech-button{background-image:url(\"images/sprites/app-retina.png\") !important;-webkit-background-size:641px;-moz-background-size:641px;background-size:641px} #fullscreen-note a.close span.close{background-image:url(\"images/sprites/app-retina.png\") !important;-webkit-background-size:641px;-moz-background-size:641px;background-size:641px} .files-add:before,.files-add:after{background-image:url(\"images/sprites/files-retina.png\") !important;-webkit-background-size:216px;-moz-background-size:216px;background-size:216px} }" }; });
define('styles/_buttons',[],function() { return {'name': '_buttons', 'styles': "#wunderlist-base .button,#wunderlist-base button{font-family:\"Helvetica Neue\",\"Helvetica\",\"Arial\",Sans-Serif;position:relative;cursor:pointer;float:left;color:#423e3e;font-weight:500;font-size:12px;padding:6px 10px 5px 10px;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #fcfcfc), color-stop(1, #f1f1f1));background-image:-webkit-linear-gradient(top, #fcfcfc 0, #f1f1f1 100%);background-image:-moz-linear-gradient(top, #fcfcfc 0, #f1f1f1 100%);background-image:-o-linear-gradient(top, #fcfcfc 0, #f1f1f1 100%);background-image:-ms-linear-gradient(top, #fcfcfc 0, #f1f1f1 100%);background-image:linear-gradient(top, #fcfcfc 0, #f1f1f1 100%);-webkit-border-radius:4px;border-radius:4px;border:1px solid #b1b1b1;-webkit-box-shadow:0 1px 0 rgba(255,255,255,0.4);box-shadow:0 1px 0 rgba(255,255,255,0.4);margin-right:8px;text-shadow:0 1px 0 rgba(255,255,255,0.5);line-height:14px;} #wunderlist-base .button.disabled,#wunderlist-base button.disabled{opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50);} #wunderlist-base .button.disabled:hover,#wunderlist-base button.disabled:hover{cursor:default} #wunderlist-base .button.disabled:active,#wunderlist-base button.disabled:active{opacity:.5;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=50)\";filter:alpha(opacity=50)} #wunderlist-base .button:hover,#wunderlist-base button:hover,#wunderlist-base .button:focus,#wunderlist-base button:focus{text-decoration:none !important;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #f1f1f1), color-stop(1, #e6e6e6));background-image:-webkit-linear-gradient(top, #f1f1f1 0, #e6e6e6 100%);background-image:-moz-linear-gradient(top, #f1f1f1 0, #e6e6e6 100%);background-image:-o-linear-gradient(top, #f1f1f1 0, #e6e6e6 100%);background-image:-ms-linear-gradient(top, #f1f1f1 0, #e6e6e6 100%);background-image:linear-gradient(top, #f1f1f1 0, #e6e6e6 100%)} #wunderlist-base .button:focus,#wunderlist-base button:focus{outline:none} #wunderlist-base .button:active,#wunderlist-base button:active{color:#737272;-webkit-box-shadow:inset 0 1px 2px rgba(0,0,0,0.1),0 1px 0 #fff;box-shadow:inset 0 1px 2px rgba(0,0,0,0.1),0 1px 0 #fff;background:#d5d5d6} #wunderlist-base .button.small,#wunderlist-base button.small{padding:3px 9px;font-weight:500} #wunderlist-base .button.rounded,#wunderlist-base button.rounded{padding:2px 12px;-webkit-border-radius:10px;border-radius:10px} #wunderlist-base .button.wide,#wunderlist-base button.wide{padding:6px 15px} #wunderlist-base .button.wider,#wunderlist-base button.wider{padding-left:20px;padding-right:20px} #wunderlist-base .button.clear,#wunderlist-base button.clear{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(141,85,62,0.7)), color-stop(1, rgba(104,56,36,0.7)));background-image:-webkit-linear-gradient(top, rgba(141,85,62,0.7) 0, rgba(104,56,36,0.7) 100%);background-image:-moz-linear-gradient(top, rgba(141,85,62,0.7) 0, rgba(104,56,36,0.7) 100%);background-image:-o-linear-gradient(top, rgba(141,85,62,0.7) 0, rgba(104,56,36,0.7) 100%);background-image:-ms-linear-gradient(top, rgba(141,85,62,0.7) 0, rgba(104,56,36,0.7) 100%);background-image:linear-gradient(top, rgba(141,85,62,0.7) 0, rgba(104,56,36,0.7) 100%);-webkit-border-radius:4px;border-radius:4px;border:1px solid rgba(73,33,19,0.76);padding:7px 17px;cursor:pointer;font-weight:bold;font-size:14px;line-height:14px;color:rgba(47,21,8,0.8);text-shadow:0 1px 0 #9a5d3c;-webkit-box-shadow:inset 0 1px 0 rgba(211,168,124,0.17),0 1px rgba(166,98,68,0.3);box-shadow:inset 0 1px 0 rgba(211,168,124,0.17),0 1px rgba(166,98,68,0.3);display:inline-block;float:none;margin-right:0;} #wunderlist-base .button.clear:hover,#wunderlist-base button.clear:hover,#wunderlist-base .button.clear:focus,#wunderlist-base button.clear:focus{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(123,74,54,0.7)), color-stop(1, rgba(85,46,29,0.7)));background-image:-webkit-linear-gradient(top, rgba(123,74,54,0.7) 0, rgba(85,46,29,0.7) 100%);background-image:-moz-linear-gradient(top, rgba(123,74,54,0.7) 0, rgba(85,46,29,0.7) 100%);background-image:-o-linear-gradient(top, rgba(123,74,54,0.7) 0, rgba(85,46,29,0.7) 100%);background-image:-ms-linear-gradient(top, rgba(123,74,54,0.7) 0, rgba(85,46,29,0.7) 100%);background-image:linear-gradient(top, rgba(123,74,54,0.7) 0, rgba(85,46,29,0.7) 100%)} #wunderlist-base .button.clear:active,#wunderlist-base button.clear:active{-webkit-box-shadow:inset 0 1px 3px rgba(0,0,0,0.35);box-shadow:inset 0 1px 3px rgba(0,0,0,0.35)} #wunderlist-base .button.bluetext,#wunderlist-base button.bluetext{font-size:11px;color:#1268b2 !important} #wunderlist-base .button.blue,#wunderlist-base button.blue{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #5cb6e7), color-stop(1, #317cd7));background-image:-webkit-linear-gradient(top, #5cb6e7 0, #317cd7 100%);background-image:-moz-linear-gradient(top, #5cb6e7 0, #317cd7 100%);background-image:-o-linear-gradient(top, #5cb6e7 0, #317cd7 100%);background-image:-ms-linear-gradient(top, #5cb6e7 0, #317cd7 100%);background-image:linear-gradient(top, #5cb6e7 0, #317cd7 100%);color:#fff;font-weight:bold;border-color:#0c67a5;text-shadow:0 -1px 0 rgba(0,0,0,0.5);-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.3);box-shadow:inset 0 1px 0 rgba(255,255,255,0.3);} #wunderlist-base .button.blue:hover,#wunderlist-base button.blue:hover,#wunderlist-base .button.blue:focus,#wunderlist-base button.blue:focus{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #2bb3ed), color-stop(1, #247cdf));background-image:-webkit-linear-gradient(top, #2bb3ed 0, #247cdf 100%);background-image:-moz-linear-gradient(top, #2bb3ed 0, #247cdf 100%);background-image:-o-linear-gradient(top, #2bb3ed 0, #247cdf 100%);background-image:-ms-linear-gradient(top, #2bb3ed 0, #247cdf 100%);background-image:linear-gradient(top, #2bb3ed 0, #247cdf 100%)} #wunderlist-base .button.blue:active,#wunderlist-base button.blue:active{-webkit-box-shadow:inset 0 1px 5px rgba(0,0,0,0.3),0 1px 0 rgba(255,255,255,0.4);box-shadow:inset 0 1px 5px rgba(0,0,0,0.3),0 1px 0 rgba(255,255,255,0.4)} #wunderlist-base .button.blue-login,#wunderlist-base button.blue-login{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #41a3e0), color-stop(1, #2562c7));background-image:-webkit-linear-gradient(top, #41a3e0 0, #2562c7 100%);background-image:-moz-linear-gradient(top, #41a3e0 0, #2562c7 100%);background-image:-o-linear-gradient(top, #41a3e0 0, #2562c7 100%);background-image:-ms-linear-gradient(top, #41a3e0 0, #2562c7 100%);background-image:linear-gradient(top, #41a3e0 0, #2562c7 100%);color:#fff;font-weight:bold;border:none;text-shadow:0 -1px 0 rgba(0,0,0,0.5);-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.3),0 1px 3px rgba(0,0,0,0.6);box-shadow:inset 0 1px 0 rgba(255,255,255,0.3),0 1px 3px rgba(0,0,0,0.6);} #wunderlist-base .button.blue-login:hover,#wunderlist-base button.blue-login:hover,#wunderlist-base .button.blue-login:focus,#wunderlist-base button.blue-login:focus{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #41a3e0), color-stop(1, #2562c7));background-image:-webkit-linear-gradient(top, #41a3e0 0, #2562c7 100%);background-image:-moz-linear-gradient(top, #41a3e0 0, #2562c7 100%);background-image:-o-linear-gradient(top, #41a3e0 0, #2562c7 100%);background-image:-ms-linear-gradient(top, #41a3e0 0, #2562c7 100%);background-image:linear-gradient(top, #41a3e0 0, #2562c7 100%)} #wunderlist-base .button.blue-login:active,#wunderlist-base button.blue-login:active{-webkit-box-shadow:inset 0 1px 5px rgba(0,0,0,0.3),0 1px 0 rgba(255,255,255,0.4);box-shadow:inset 0 1px 5px rgba(0,0,0,0.3),0 1px 0 rgba(255,255,255,0.4)} #wunderlist-base .button.green,#wunderlist-base button.green{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #7aae45), color-stop(1, #619a38));background-image:-webkit-linear-gradient(top, #7aae45 0, #619a38 100%);background-image:-moz-linear-gradient(top, #7aae45 0, #619a38 100%);background-image:-o-linear-gradient(top, #7aae45 0, #619a38 100%);background-image:-ms-linear-gradient(top, #7aae45 0, #619a38 100%);background-image:linear-gradient(top, #7aae45 0, #619a38 100%);color:rgba(255,255,255,0.8);font-weight:normal;border-color:#50750f;border-bottom-color:#42610a;text-shadow:0 -1px 0 rgba(0,0,0,0.3);-webkit-box-shadow:inset 0 0 0 1px rgba(255,255,255,0.1),inset 0 1px 0 rgba(255,255,255,0.1);box-shadow:inset 0 0 0 1px rgba(255,255,255,0.1),inset 0 1px 0 rgba(255,255,255,0.1);} #wunderlist-base .button.green strong,#wunderlist-base button.green strong,#wunderlist-base .button.green b,#wunderlist-base button.green b{font-weight:bold;color:#fff} #wunderlist-base .button.green:hover,#wunderlist-base button.green:hover,#wunderlist-base .button.green:focus,#wunderlist-base button.green:focus{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #81b749), color-stop(1, #68a53c));background-image:-webkit-linear-gradient(top, #81b749 0, #68a53c 100%);background-image:-moz-linear-gradient(top, #81b749 0, #68a53c 100%);background-image:-o-linear-gradient(top, #81b749 0, #68a53c 100%);background-image:-ms-linear-gradient(top, #81b749 0, #68a53c 100%);background-image:linear-gradient(top, #81b749 0, #68a53c 100%)} #wunderlist-base .button.green:active,#wunderlist-base button.green:active{-webkit-box-shadow:inset 0 1px 5px rgba(0,0,0,0.3),0 1px 0 rgba(255,255,255,0.4);box-shadow:inset 0 1px 5px rgba(0,0,0,0.3),0 1px 0 rgba(255,255,255,0.4);} #wunderlist-base .button.green:active span.light,#wunderlist-base button.green:active span.light{display:inline;color:#c0daa7} #wunderlist-base .button.selected,#wunderlist-base button.selected{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #428ece), color-stop(1, #3692dc));background-image:-webkit-linear-gradient(top, #428ece 0, #3692dc 100%);background-image:-moz-linear-gradient(top, #428ece 0, #3692dc 100%);background-image:-o-linear-gradient(top, #428ece 0, #3692dc 100%);background-image:-ms-linear-gradient(top, #428ece 0, #3692dc 100%);background-image:linear-gradient(top, #428ece 0, #3692dc 100%);color:#fff;border-color:#2f7ebc;text-shadow:0 1px 0 rgba(0,0,0,0.5);-webkit-box-shadow:inset 0 1px 3px rgba(0,0,0,0.1);box-shadow:inset 0 1px 3px rgba(0,0,0,0.1)} #wunderlist-base .button.red,#wunderlist-base button.red{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #e14731), color-stop(1, #b11711));background-image:-webkit-linear-gradient(top, #e14731 0, #b11711 100%);background-image:-moz-linear-gradient(top, #e14731 0, #b11711 100%);background-image:-o-linear-gradient(top, #e14731 0, #b11711 100%);background-image:-ms-linear-gradient(top, #e14731 0, #b11711 100%);background-image:linear-gradient(top, #e14731 0, #b11711 100%);color:#fff;border-color:#8b2924;text-shadow:0 1px 0 rgba(0,0,0,0.5);-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.3);box-shadow:inset 0 1px 0 rgba(255,255,255,0.3);} #wunderlist-base .button.red:hover,#wunderlist-base button.red:hover,#wunderlist-base .button.red:focus,#wunderlist-base button.red:focus{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #e14731), color-stop(1, #c4311f));background-image:-webkit-linear-gradient(top, #e14731 0, #c4311f 100%);background-image:-moz-linear-gradient(top, #e14731 0, #c4311f 100%);background-image:-o-linear-gradient(top, #e14731 0, #c4311f 100%);background-image:-ms-linear-gradient(top, #e14731 0, #c4311f 100%);background-image:linear-gradient(top, #e14731 0, #c4311f 100%)} #wunderlist-base .button.red:active,#wunderlist-base button.red:active{-webkit-box-shadow:inset 0 1px 5px rgba(0,0,0,0.3),0 1px 0 #fff;box-shadow:inset 0 1px 5px rgba(0,0,0,0.3),0 1px 0 #fff} #wunderlist-base .button.grey,#wunderlist-base button.grey{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #f9f9f9), color-stop(1, #c1c1c1));background-image:-webkit-linear-gradient(top, #f9f9f9 0, #c1c1c1 100%);background-image:-moz-linear-gradient(top, #f9f9f9 0, #c1c1c1 100%);background-image:-o-linear-gradient(top, #f9f9f9 0, #c1c1c1 100%);background-image:-ms-linear-gradient(top, #f9f9f9 0, #c1c1c1 100%);background-image:linear-gradient(top, #f9f9f9 0, #c1c1c1 100%);color:545454;font-weight:bold;border:none;text-shadow:0 1px 0 rgba(255,255,255,0.5);-webkit-box-shadow:0 1px 3px rgba(0,0,0,0.6);box-shadow:0 1px 3px rgba(0,0,0,0.6);} #wunderlist-base .button.grey:hover,#wunderlist-base button.grey:hover,#wunderlist-base .button.grey:focus,#wunderlist-base button.grey:focus{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #ececec), color-stop(1, #b4b4b4));background-image:-webkit-linear-gradient(top, #ececec 0, #b4b4b4 100%);background-image:-moz-linear-gradient(top, #ececec 0, #b4b4b4 100%);background-image:-o-linear-gradient(top, #ececec 0, #b4b4b4 100%);background-image:-ms-linear-gradient(top, #ececec 0, #b4b4b4 100%);background-image:linear-gradient(top, #ececec 0, #b4b4b4 100%)} #wunderlist-base .button.grey:active,#wunderlist-base button.grey:active{-webkit-box-shadow:inset 0 1px 5px rgba(0,0,0,0.3),0 1px 0 rgba(255,255,255,0.4);box-shadow:inset 0 1px 5px rgba(0,0,0,0.3),0 1px 0 rgba(255,255,255,0.4)} #wunderlist-base .button.transparent-bg,#wunderlist-base button.transparent-bg{background:none;border:none;-webkit-box-shadow:none;box-shadow:none;} #wunderlist-base .button.transparent-bg .icon,#wunderlist-base button.transparent-bg .icon{opacity:.75;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=75)\";filter:alpha(opacity=75)} #wunderlist-base .button.transparent-bg:hover .icon,#wunderlist-base button.transparent-bg:hover .icon,#wunderlist-base .button.transparent-bg:focus .icon,#wunderlist-base button.transparent-bg:focus .icon{opacity:1;-ms-filter:none;filter:none} #wunderlist-base .button.big,#wunderlist-base button.big{display:block;float:none;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;text-align:center;font-size:15px;width:100%;padding:11px 20px;-webkit-border-radius:5px;border-radius:5px;} #wunderlist-base .button.big.login,#wunderlist-base button.big.login{margin-top:-3px;padding:11px} #wunderlist-base .button.full,#wunderlist-base button.full{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;float:none;text-align:center;width:100%;display:inline-block;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis} #wunderlist-base .button.mini,#wunderlist-base button.mini{padding:3px 10px} #wunderlist-base .button.bigger,#wunderlist-base button.bigger{padding:9px 14px;font-size:14px} #wunderlist-base .button.bigger-mobile,#wunderlist-base button.bigger-mobile{display:block;float:none;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;text-align:center;font-size:16px;padding:13px 10px;width:100%} #wunderlist-base .button.withArrow,#wunderlist-base button.withArrow{font-weight:bold;text-shadow:0 1px 0 #fff;float:none;border:1px solid #cdcdcd;color:#7a7a7a;text-align:center;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;margin-left:5px;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #f6f6f6), color-stop(1, #eaeaea));background-image:-webkit-linear-gradient(top, #f6f6f6 0, #eaeaea 100%);background-image:-moz-linear-gradient(top, #f6f6f6 0, #eaeaea 100%);background-image:-o-linear-gradient(top, #f6f6f6 0, #eaeaea 100%);background-image:-ms-linear-gradient(top, #f6f6f6 0, #eaeaea 100%);background-image:linear-gradient(top, #f6f6f6 0, #eaeaea 100%);} #wunderlist-base .button.withArrow:active,#wunderlist-base button.withArrow:active{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #eaeaea), color-stop(1, #f6f6f6));background-image:-webkit-linear-gradient(top, #eaeaea 0, #f6f6f6 100%);background-image:-moz-linear-gradient(top, #eaeaea 0, #f6f6f6 100%);background-image:-o-linear-gradient(top, #eaeaea 0, #f6f6f6 100%);background-image:-ms-linear-gradient(top, #eaeaea 0, #f6f6f6 100%);background-image:linear-gradient(top, #eaeaea 0, #f6f6f6 100%);-webkit-box-shadow:inset -1px 1px 1px #ccc;box-shadow:inset -1px 1px 1px #ccc} #wunderlist-base .button.withArrow::after,#wunderlist-base button.withArrow::after{position:absolute;border-width:4px;border-style:solid;border-color:transparent #f6f6f6 transparent transparent;left:-8px;width:0;height:0;z-index:100;content:\"\";top:8px} #wunderlist-base .button.withArrow::before,#wunderlist-base button.withArrow::before{position:absolute;border-width:4px;border-style:solid;border-color:transparent #333 transparent transparent;left:-8px;width:0;height:0;z-index:100;content:\"\";top:8px} #wunderlist-base .button.left,#wunderlist-base button.left{float:left;width:auto} #wunderlist-base .button.right,#wunderlist-base button.right{float:right;margin-right:0;margin-left:10px} #wunderlist-base .button.nofloat,#wunderlist-base button.nofloat{display:inline-block;float:none;vertical-align:top} #wunderlist-base .button.dark,#wunderlist-base button.dark{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(30,30,30,0.5)), color-stop(1, rgba(18,18,18,0.65)));background-image:-webkit-linear-gradient(top, rgba(30,30,30,0.5) 0, rgba(18,18,18,0.65) 100%);background-image:-moz-linear-gradient(top, rgba(30,30,30,0.5) 0, rgba(18,18,18,0.65) 100%);background-image:-o-linear-gradient(top, rgba(30,30,30,0.5) 0, rgba(18,18,18,0.65) 100%);background-image:-ms-linear-gradient(top, rgba(30,30,30,0.5) 0, rgba(18,18,18,0.65) 100%);background-image:linear-gradient(top, rgba(30,30,30,0.5) 0, rgba(18,18,18,0.65) 100%);-webkit-box-shadow:inset 0 1px 2px #353535;box-shadow:inset 0 1px 2px #353535;border:1px solid rgba(0,0,0,0.5);text-shadow:1px 1px 0 #000;} #wunderlist-base .button.dark:hover,#wunderlist-base button.dark:hover,#wunderlist-base .button.dark:focus,#wunderlist-base button.dark:focus{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(30,30,30,0.35)), color-stop(1, rgba(18,18,18,0.5)));background-image:-webkit-linear-gradient(top, rgba(30,30,30,0.35) 0, rgba(18,18,18,0.5) 100%);background-image:-moz-linear-gradient(top, rgba(30,30,30,0.35) 0, rgba(18,18,18,0.5) 100%);background-image:-o-linear-gradient(top, rgba(30,30,30,0.35) 0, rgba(18,18,18,0.5) 100%);background-image:-ms-linear-gradient(top, rgba(30,30,30,0.35) 0, rgba(18,18,18,0.5) 100%);background-image:linear-gradient(top, rgba(30,30,30,0.35) 0, rgba(18,18,18,0.5) 100%)} #wunderlist-base .button.dark:active,#wunderlist-base button.dark:active{background:rgba(0,0,0,0.5);-webkit-box-shadow:inset 0 1px 2px #000;box-shadow:inset 0 1px 2px #000} #wunderlist-base .button.choose,#wunderlist-base button.choose{width:136px} #wunderlist-base .button.accepted,#wunderlist-base button.accepted{height:16px;padding:2px 0 !important;font-weight:500;margin-left:-5px;color:#0d7fe7;} #wunderlist-base .button.accepted span.icon,#wunderlist-base button.accepted span.icon{display:inline-block;margin-top:-2px} #wunderlist-base .button.external,#wunderlist-base button.external{float:none;-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;display:inline-block;line-height:15px;padding:9px 0 11px 38px;text-align:center;color:#eef4ff;font-size:14px;font-weight:bold;text-shadow:0 1px 0 rgba(0,0,0,0.7);background-color:none;border:none;-webkit-border-radius:3px;border-radius:3px;outline:none;width:100%;-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.1),0 1px 3px rgba(0,0,0,0.4);box-shadow:inset 0 1px 0 rgba(255,255,255,0.1),0 1px 3px rgba(0,0,0,0.4);} #wunderlist-base .button.external:active,#wunderlist-base button.external:active{-webkit-box-shadow:0 1px 0 rgba(255,255,255,0.1),inset 0 1px 5px rgba(0,0,0,0.5);box-shadow:0 1px 0 rgba(255,255,255,0.1),inset 0 1px 5px rgba(0,0,0,0.5)} #wunderlist-base .button.external .button-left,#wunderlist-base button.external .button-left{position:absolute;left:0;bottom:0;top:0;background:rgba(0,0,0,0.1);-webkit-box-shadow:1px 0 0 rgba(255,255,255,0.1);box-shadow:1px 0 0 rgba(255,255,255,0.1);width:37px;-webkit-border-radius:2px 0 0 2px;border-radius:2px 0 0 2px;} #wunderlist-base .button.external .button-left .icon-login,#wunderlist-base button.external .button-left .icon-login,#wunderlist-base .button.external .button-left .icon,#wunderlist-base button.external .button-left .icon{position:absolute} #wunderlist-base .button.facebook,#wunderlist-base button.facebook{border:1px solid #283f6f;border-bottom:1px solid #22355c;border-top:1px solid #2f4a81;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #496daf), color-stop(1, #304885));background-image:-webkit-linear-gradient(top, #496daf 0, #304885 100%);background-image:-moz-linear-gradient(top, #496daf 0, #304885 100%);background-image:-o-linear-gradient(top, #496daf 0, #304885 100%);background-image:-ms-linear-gradient(top, #496daf 0, #304885 100%);background-image:linear-gradient(top, #496daf 0, #304885 100%);} #wunderlist-base .button.facebook:hover,#wunderlist-base button.facebook:hover,#wunderlist-base .button.facebook:focus,#wunderlist-base button.facebook:focus{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #5175b6), color-stop(1, #344e90));background-image:-webkit-linear-gradient(top, #5175b6 0, #344e90 100%);background-image:-moz-linear-gradient(top, #5175b6 0, #344e90 100%);background-image:-o-linear-gradient(top, #5175b6 0, #344e90 100%);background-image:-ms-linear-gradient(top, #5175b6 0, #344e90 100%);background-image:linear-gradient(top, #5175b6 0, #344e90 100%)} #wunderlist-base .button.facebook .button-left,#wunderlist-base button.facebook .button-left{border-right:1px solid #283f6f} #wunderlist-base .button.facebook .icon-login,#wunderlist-base button.facebook .icon-login,#wunderlist-base .button.facebook .icon,#wunderlist-base button.facebook .icon{top:10px;left:13px} #wunderlist-base .button.facebook .icon,#wunderlist-base button.facebook .icon{top:8px} #wunderlist-base .button.google,#wunderlist-base button.google{border:1px solid #a41508;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #ea6e54), color-stop(1, #d33528));background-image:-webkit-linear-gradient(top, #ea6e54 0, #d33528 100%);background-image:-moz-linear-gradient(top, #ea6e54 0, #d33528 100%);background-image:-o-linear-gradient(top, #ea6e54 0, #d33528 100%);background-image:-ms-linear-gradient(top, #ea6e54 0, #d33528 100%);background-image:linear-gradient(top, #ea6e54 0, #d33528 100%);} #wunderlist-base .button.google:hover,#wunderlist-base button.google:hover,#wunderlist-base .button.google:focus,#wunderlist-base button.google:focus{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #ec7a62), color-stop(1, #d83f32));background-image:-webkit-linear-gradient(top, #ec7a62 0, #d83f32 100%);background-image:-moz-linear-gradient(top, #ec7a62 0, #d83f32 100%);background-image:-o-linear-gradient(top, #ec7a62 0, #d83f32 100%);background-image:-ms-linear-gradient(top, #ec7a62 0, #d83f32 100%);background-image:linear-gradient(top, #ec7a62 0, #d83f32 100%)} #wunderlist-base .button.google .icon-login,#wunderlist-base button.google .icon-login{top:11px;left:13px} #wunderlist-base .button.google .button-left,#wunderlist-base button.google .button-left{border-right:1px solid #a41508} #wunderlist-base .button.share-facebook,#wunderlist-base button.share-facebook,#wunderlist-base .button.share-twitter,#wunderlist-base button.share-twitter{color:#fff;text-shadow:0 -1px 0 rgba(0,0,0,0.5);-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.2);box-shadow:inset 0 1px 0 rgba(255,255,255,0.2);font-weight:bold;} #wunderlist-base .button.share-facebook:active,#wunderlist-base button.share-facebook:active,#wunderlist-base .button.share-twitter:active,#wunderlist-base button.share-twitter:active{-webkit-box-shadow:inset 0 1px 5px rgba(0,0,0,0.3);box-shadow:inset 0 1px 5px rgba(0,0,0,0.3)} #wunderlist-base .button.share-facebook span,#wunderlist-base button.share-facebook span,#wunderlist-base .button.share-twitter span,#wunderlist-base button.share-twitter span{position:absolute;left:5px;top:3px} #wunderlist-base .button.share-facebook,#wunderlist-base button.share-facebook{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #4567a5), color-stop(1, #334d86));background-image:-webkit-linear-gradient(top, #4567a5 0, #334d86 100%);background-image:-moz-linear-gradient(top, #4567a5 0, #334d86 100%);background-image:-o-linear-gradient(top, #4567a5 0, #334d86 100%);background-image:-ms-linear-gradient(top, #4567a5 0, #334d86 100%);background-image:linear-gradient(top, #4567a5 0, #334d86 100%);border-color:#324f89;padding-left:25px;} #wunderlist-base .button.share-facebook:hover,#wunderlist-base button.share-facebook:hover,#wunderlist-base .button.share-facebook:focus,#wunderlist-base button.share-facebook:focus{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #4e73b5), color-stop(1, #3b5a9c));background-image:-webkit-linear-gradient(top, #4e73b5 0, #3b5a9c 100%);background-image:-moz-linear-gradient(top, #4e73b5 0, #3b5a9c 100%);background-image:-o-linear-gradient(top, #4e73b5 0, #3b5a9c 100%);background-image:-ms-linear-gradient(top, #4e73b5 0, #3b5a9c 100%);background-image:linear-gradient(top, #4e73b5 0, #3b5a9c 100%)} #wunderlist-base .button.share-twitter,#wunderlist-base button.share-twitter{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #1fb9ed), color-stop(1, #1aa0e7));background-image:-webkit-linear-gradient(top, #1fb9ed 0, #1aa0e7 100%);background-image:-moz-linear-gradient(top, #1fb9ed 0, #1aa0e7 100%);background-image:-o-linear-gradient(top, #1fb9ed 0, #1aa0e7 100%);background-image:-ms-linear-gradient(top, #1fb9ed 0, #1aa0e7 100%);background-image:linear-gradient(top, #1fb9ed 0, #1aa0e7 100%);border-color:#1690ca;padding-left:30px;} #wunderlist-base .button.share-twitter:hover,#wunderlist-base button.share-twitter:hover,#wunderlist-base .button.share-twitter:focus,#wunderlist-base button.share-twitter:focus{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #37c0ef), color-stop(1, #36abea));background-image:-webkit-linear-gradient(top, #37c0ef 0, #36abea 100%);background-image:-moz-linear-gradient(top, #37c0ef 0, #36abea 100%);background-image:-o-linear-gradient(top, #37c0ef 0, #36abea 100%);background-image:-ms-linear-gradient(top, #37c0ef 0, #36abea 100%);background-image:linear-gradient(top, #37c0ef 0, #36abea 100%)} #wunderlist-base .button.share-twitter:active,#wunderlist-base button.share-twitter:active{-webkit-box-shadow:inset 0 1px rgba(33,33,33,0.22);box-shadow:inset 0 1px rgba(33,33,33,0.22)} #wunderlist-base .button span,#wunderlist-base button span,#wunderlist-base .state span{display:none;} #wunderlist-base .button span.icon,#wunderlist-base button span.icon,#wunderlist-base .state span.icon{display:block} #wunderlist-base .button.loading,#wunderlist-base button.loading,#wunderlist-base .state.loading{color:transparent !important;text-shadow:none !important;} #wunderlist-base .button.loading text,#wunderlist-base button.loading text,#wunderlist-base .state.loading text,#wunderlist-base .button.loading b,#wunderlist-base button.loading b,#wunderlist-base .state.loading b{color:transparent !important} #wunderlist-base .button.loading text,#wunderlist-base button.loading text,#wunderlist-base .state.loading text{white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis} #wunderlist-base .button.loading span,#wunderlist-base button.loading span,#wunderlist-base .state.loading span{-webkit-animation:rotate .8s linear infinite;-moz-animation:rotate .8s linear infinite;-webkit-animation:rotate .8s linear infinite;-moz-animation:rotate .8s linear infinite;-o-animation:rotate .8s linear infinite;-ms-animation:rotate .8s linear infinite;animation:rotate .8s linear infinite;display:block;position:absolute;left:50%;top:50%;margin-left:-10px;margin-top:-10px;width:19px;height:19px;background:url(\"images/loading.png\");} #wunderlist-base .button.loading span.dark,#wunderlist-base button.loading span.dark,#wunderlist-base .state.loading span.dark{opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60);background:url(\"images/loading_black.png\")} #wunderlist-base .buttonbar{-webkit-box-sizing:border-box;-moz-box-sizing:border-box;box-sizing:border-box;} #wunderlist-base .buttonbar .button,#wunderlist-base .buttonbar button{margin:0 -1px 0 0;} #wunderlist-base .buttonbar .button:first-child,#wunderlist-base .buttonbar button:first-child{-webkit-border-radius:4px 0 0 4px;border-radius:4px 0 0 4px} #wunderlist-base .buttonbar .button:last-child,#wunderlist-base .buttonbar button:last-child{-webkit-border-radius:0 4px 4px 0;border-radius:0 4px 4px 0} #wunderlist-base .buttonbar .button.selected + *,#wunderlist-base .buttonbar button.selected + *{border-left:1px solid #2f7ebc} #wunderlist-base .transparent-button{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(255,255,255,0.02)), color-stop(1, rgba(0,0,0,0.05)));background-image:-webkit-linear-gradient(top, rgba(255,255,255,0.02) 0, rgba(0,0,0,0.05) 100%);background-image:-moz-linear-gradient(top, rgba(255,255,255,0.02) 0, rgba(0,0,0,0.05) 100%);background-image:-o-linear-gradient(top, rgba(255,255,255,0.02) 0, rgba(0,0,0,0.05) 100%);background-image:-ms-linear-gradient(top, rgba(255,255,255,0.02) 0, rgba(0,0,0,0.05) 100%);background-image:linear-gradient(top, rgba(255,255,255,0.02) 0, rgba(0,0,0,0.05) 100%);display:block;-webkit-border-radius:4px;border-radius:4px;text-decoration:none;min-width:100px;font-size:13px;font-weight:bold;text-align:center;padding:10px 18px;background-color:transparent;border:solid 1px rgba(0,0,0,0.22);} #wunderlist-base .transparent-button:hover,#wunderlist-base .transparent-button:focus{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(0,0,0,0.05)), color-stop(1, rgba(255,255,255,0.02)));background-image:-webkit-linear-gradient(top, rgba(0,0,0,0.05) 0, rgba(255,255,255,0.02) 100%);background-image:-moz-linear-gradient(top, rgba(0,0,0,0.05) 0, rgba(255,255,255,0.02) 100%);background-image:-o-linear-gradient(top, rgba(0,0,0,0.05) 0, rgba(255,255,255,0.02) 100%);background-image:-ms-linear-gradient(top, rgba(0,0,0,0.05) 0, rgba(255,255,255,0.02) 100%);background-image:linear-gradient(top, rgba(0,0,0,0.05) 0, rgba(255,255,255,0.02) 100%)} #wunderlist-base .transparent-button span.icon{display:inline-block;margin-top:-2px} #wunderlist-base .blue-button{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #5cb6e7), color-stop(1, #317cd7));background-image:-webkit-linear-gradient(top, #5cb6e7 0, #317cd7 100%);background-image:-moz-linear-gradient(top, #5cb6e7 0, #317cd7 100%);background-image:-o-linear-gradient(top, #5cb6e7 0, #317cd7 100%);background-image:-ms-linear-gradient(top, #5cb6e7 0, #317cd7 100%);background-image:linear-gradient(top, #5cb6e7 0, #317cd7 100%);color:#fff;font-weight:bold;border-color:#0c67a5;text-shadow:0 1px 0 rgba(0,0,0,0.5);-webkit-box-shadow:inset 0 1px 0 rgba(255,255,255,0.3);box-shadow:inset 0 1px 0 rgba(255,255,255,0.3);display:block;-webkit-border-radius:4px;border-radius:4px;text-decoration:none;min-width:100px;font-size:13px;font-weight:bold;text-align:center;padding:10px 18px;} #wunderlist-base .blue-button:hover,#wunderlist-base .blue-button:focus{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #2bb3ed), color-stop(1, #247cdf));background-image:-webkit-linear-gradient(top, #2bb3ed 0, #247cdf 100%);background-image:-moz-linear-gradient(top, #2bb3ed 0, #247cdf 100%);background-image:-o-linear-gradient(top, #2bb3ed 0, #247cdf 100%);background-image:-ms-linear-gradient(top, #2bb3ed 0, #247cdf 100%);background-image:linear-gradient(top, #2bb3ed 0, #247cdf 100%)} #wunderlist-base .blue-button:active{color:#fff;-webkit-box-shadow:inset 0 1px 5px rgba(0,0,0,0.3),0 1px 0 rgba(255,255,255,0.4);box-shadow:inset 0 1px 5px rgba(0,0,0,0.3),0 1px 0 rgba(255,255,255,0.4)} @media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){#wunderlist-base .facebook-button{background-image:url(\"images/login/wunderlist-login@2x.png\");-webkit-background-size:964px 480px;-moz-background-size:964px 480px;background-size:964px 480px} #wunderlist-base button.loading span,#wunderlist-base .button.loading span{background-image:url(\"images/loading@2x.png\");-webkit-background-size:19px;-moz-background-size:19px;background-size:19px;} #wunderlist-base button.loading span.dark,#wunderlist-base .button.loading span.dark{background:url(\"images/loading_black@2x.png\")} }html[dir=rtl] #wunderlist-base .button,html[dir=rtl] #wunderlist-base button{margin-right:0;margin-left:8px} " }; });
define('styles/_tags',[],function() { return {'name': '_tags', 'styles': ".badge{vertical-align:top;display:inline-block;-webkit-border-radius:10px;border-radius:10px;padding:8px 7px;font-size:11px;line-height:0;border:1px solid transparent;margin-left:4px;} .badge.owner{background-color:#e1f0fd;border-color:#96bad9;color:#1f7bcc} .badge.pending{background-color:#f7f1d9;border-color:#f9dca3;color:#d7aa3e} .badge.joined{text-shadow:0 1px 0 rgba(255,255,255,0.7);background-color:#ebf2e5;border-color:#6ea346;color:#2c7a00} .tag{display:inline-block} " }; });
define('styles/_dialogs',[],function() { return {'name': '_dialogs', 'styles': ".dialog-wrapper{position:absolute;width:100%;height:100%;z-index:1099;background:rgba(0,0,0,0.25);} .dialog-wrapper.opaque{background:#000} .dialog{background:#f3f3f3;-webkit-box-shadow:0 1px 18px rgba(0,0,0,0.6);box-shadow:0 1px 18px rgba(0,0,0,0.6);position:absolute;top:50px;width:500px;left:50%;margin-left:-250px;-webkit-border-radius:5px;border-radius:5px;} .dialog .head{-webkit-border-radius:4px 4px 0 0;border-radius:4px 4px 0 0;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #f6f6f6), color-stop(1, #e2e2e2));background-image:-webkit-linear-gradient(top, #f6f6f6 0, #e2e2e2 100%);background-image:-moz-linear-gradient(top, #f6f6f6 0, #e2e2e2 100%);background-image:-o-linear-gradient(top, #f6f6f6 0, #e2e2e2 100%);background-image:-ms-linear-gradient(top, #f6f6f6 0, #e2e2e2 100%);background-image:linear-gradient(top, #f6f6f6 0, #e2e2e2 100%);border-bottom:1px solid #a6a6a6;} .dialog .head h2{padding:10px 70px;text-shadow:0 1px 0 #fff;font-size:16px;text-align:center;font-weight:bold;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis} .dialog .head a.close{padding:6px 0 14px 10px;position:absolute;font-size:13px;right:0;top:0;} .dialog .head a.close .button{margin-right:6px} .dialog .tabs{text-align:center;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #dfdfdf), color-stop(1, #f3f3f3));background-image:-webkit-linear-gradient(top, #dfdfdf 0, #f3f3f3 100%);background-image:-moz-linear-gradient(top, #dfdfdf 0, #f3f3f3 100%);background-image:-o-linear-gradient(top, #dfdfdf 0, #f3f3f3 100%);background-image:-ms-linear-gradient(top, #dfdfdf 0, #f3f3f3 100%);background-image:linear-gradient(top, #dfdfdf 0, #f3f3f3 100%);-webkit-box-shadow:inset 0 0 7px rgba(0,0,0,0.2);box-shadow:inset 0 0 7px rgba(0,0,0,0.2);border-bottom:1px solid #c0c0c0;} .dialog .tabs ul{height:68px} .dialog .tabs li{display:inline;} .dialog .tabs li span{display:block;margin:0 auto 1px auto} .dialog .tabs li a{max-width:56px;display:inline-block;padding:6px 10px;font-weight:bold;font-size:12px;text-shadow:0 1px 0 #fff;white-space:nowrap;overflow:hidden;-o-text-overflow:ellipsis;text-overflow:ellipsis;border:0 solid transparent;border-width:0 1px;} .dialog .tabs li a:hover{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(0,0,0,0)), color-stop(1, rgba(0,0,0,0.05)));background-image:-webkit-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.05) 100%);background-image:-moz-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.05) 100%);background-image:-o-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.05) 100%);background-image:-ms-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.05) 100%);background-image:linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.05) 100%)} .dialog .tabs li.active a{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(0,0,0,0)), color-stop(1, rgba(0,0,0,0.1)));background-image:-webkit-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.1) 100%);background-image:-moz-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.1) 100%);background-image:-o-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.1) 100%);background-image:-ms-linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.1) 100%);background-image:linear-gradient(top, rgba(0,0,0,0) 0, rgba(0,0,0,0.1) 100%)} .dialog .content .content-inner{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #f1f1f1), color-stop(1, #e3e3e4));background-image:-webkit-linear-gradient(top, #f1f1f1 0, #e3e3e4 100%);background-image:-moz-linear-gradient(top, #f1f1f1 0, #e3e3e4 100%);background-image:-o-linear-gradient(top, #f1f1f1 0, #e3e3e4 100%);background-image:-ms-linear-gradient(top, #f1f1f1 0, #e3e3e4 100%);background-image:linear-gradient(top, #f1f1f1 0, #e3e3e4 100%);-webkit-box-shadow:inset 0 1px 0 #fff;box-shadow:inset 0 1px 0 #fff;padding:10px 20px;-webkit-border-radius:0 0 4px 4px;border-radius:0 0 4px 4px} .dialog .content .separator{zoom:1;background:-webkit-gradient(linear, left top, right top, color-stop(0, rgba(255,255,255,0)), color-stop(0.5, #fff), color-stop(1, rgba(255,255,255,0)));background:-webkit-linear-gradient(left, rgba(255,255,255,0) 0%, #fff 50%, rgba(255,255,255,0) 100%);background:-moz-linear-gradient(left, rgba(255,255,255,0) 0%, #fff 50%, rgba(255,255,255,0) 100%);background:-o-linear-gradient(left, rgba(255,255,255,0) 0%, #fff 50%, rgba(255,255,255,0) 100%);background:-ms-linear-gradient(left, rgba(255,255,255,0) 0%, #fff 50%, rgba(255,255,255,0) 100%);background:linear-gradient(left, rgba(255,255,255,0) 0%, #fff 50%, rgba(255,255,255,0) 100%);-webkit-background-size:100% 1px;-moz-background-size:100% 1px;background-size:100% 1px;background-position:center bottom;background-repeat:no-repeat;margin:12px 0;position:relative;} .dialog .content .separator:before,.dialog .content .separator:after{content:\"\";display:table} .dialog .content .separator:after{clear:both} .dialog .content .separator:before{content:\"\";height:10px;background-color:#000;position:absolute;width:100%;bottom:0;background-image:-webkit-gradient(linear, left top, right top, color-stop(0, rgba(0,0,0,0)), color-stop(0.5, rgba(0,0,0,0.18)), color-stop(1, rgba(0,0,0,0)));background-image:-webkit-linear-gradient(left, rgba(0,0,0,0) 0%, rgba(0,0,0,0.18) 50%, rgba(0,0,0,0) 100%);background-image:-moz-linear-gradient(left, rgba(0,0,0,0) 0%, rgba(0,0,0,0.18) 50%, rgba(0,0,0,0) 100%);background-image:-o-linear-gradient(left, rgba(0,0,0,0) 0%, rgba(0,0,0,0.18) 50%, rgba(0,0,0,0) 100%);background-image:-ms-linear-gradient(left, rgba(0,0,0,0) 0%, rgba(0,0,0,0.18) 50%, rgba(0,0,0,0) 100%);background-image:linear-gradient(left, rgba(0,0,0,0) 0%, rgba(0,0,0,0.18) 50%, rgba(0,0,0,0) 100%);-webkit-background-size:100% 1px;-moz-background-size:100% 1px;background-size:100% 1px;background-position:center bottom 1px;background-repeat:no-repeat;height:2px;background-color:transparent} .dialog .content .separator.big{padding-bottom:20px;margin-bottom:20px} .dialog .content .separator.bigger{padding-bottom:25px;margin-bottom:25px} .dialog .content .separator .separator-label{position:absolute;top:-34px;width:100%;text-align:center;color:#bdbcbb;text-shadow:0 1px 0 rgba(255,255,255,0.8);} .dialog .content .separator .separator-label span{background-image:url(\"images/textures/popover.png\");padding:0 10px} .dialog .content .separator:last-child,.dialog .content .separator.noline{background:none;} .dialog .content .separator:last-child:before,.dialog .content .separator.noline:before{opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0)} .dialog .content .separator:last-child .cols:last-child{margin-bottom:0} .dialog .content .separator .cols{margin-bottom:14px} .dialog .content .separator h3{font-size:13px;line-height:20px;font-weight:600;margin-bottom:5px;} .dialog .content .separator h3 small{font-weight:normal} .dialog .content .separator p{font-size:13px;line-height:18px;font-weight:400;} .dialog .content .separator p a{color:#4597df;font-weight:bold} .dialog .content .separator p.small{font-size:11px} .dialog .content .separator p.small-touch{font-size:10px;display:inline-block} .dialog .content .separator p.strong{font-weight:bold} .dialog .content .separator .wunderlist-icon{display:block;margin:0 auto} .dialog .content .separator .social-links{text-align:center;margin-top:20px;} .dialog .content .separator .social-links li{display:inline;margin-left:2px;} .dialog .content .separator .social-links li .button.withArrow{margin-left:1px !important;margin-right:3px !important} .dialog .content .separator .social-links li .icon{margin-top:-3px;margin-right:2px} .dialog .content .error-message{display:none;color:#c72d20;text-shadow:0 1px 0 #fff;font-size:12px !important} .dialog.scroll{bottom:50px;overflow:hidden;} .dialog.scroll .content-inner{position:absolute;right:0;left:0;bottom:0;top:34px;overflow-x:hidden;overflow-y:auto;-webkit-overflow-scrolling:touch;} .dialog.scroll .content-inner.whatsnew{top:0} .dialog.scroll .tabs ~ .content-inner{top:109px} .firefox .choose input{left:auto !important} body.unregistered .dialog .tabs li a{max-width:115px} html[dir=rtl] .dialog .head a.close{right:initial;left:0;padding-left:0;padding-right:10px;} html[dir=rtl] .dialog .head a.close .button{margin-left:0} html[dir=rtl] .dialog .content .filter-setting .icon{margin-right:-4px;margin-left:10px} " }; });
define('styles/_responsive',[],function() { return {'name': '_responsive', 'styles': "@media all and (max-width:1024px) and (-webkit-min-device-pixel-ratio: 2){.background-01 #tasks{background-image:url(\"images/backgrounds/2048/01.jpg\") !important} .background-02 #tasks{background-image:url(\"images/backgrounds/2048/02.jpg\") !important} .background-04 #tasks{background-image:url(\"images/backgrounds/2048/04.jpg\") !important} .background-05 #tasks{background-image:url(\"images/backgrounds/2048/05.jpg\") !important} .background-06 #tasks{background-image:url(\"images/backgrounds/2048/06.jpg\") !important} .background-07 #tasks{background-image:url(\"images/backgrounds/2048/07.jpg\") !important} .background-08 #tasks{background-image:url(\"images/backgrounds/2048/08.jpg\") !important} .background-09 #tasks{background-image:url(\"images/backgrounds/2048/09.jpg\") !important} .background-10 #tasks{background-image:url(\"images/backgrounds/2048/10.jpg\") !important} .background-11 #tasks{background-image:url(\"images/backgrounds/2048/11.jpg\") !important} .background-12 #tasks{background-image:url(\"images/backgrounds/2048/12.jpg\") !important} .background-17 #tasks{background-image:url(\"images/backgrounds/2048/17.jpg\") !important} .background-18 #tasks{background-image:url(\"images/backgrounds/2048/18.jpg\") !important} .background-19 #tasks{background-image:url(\"images/backgrounds/2048/19.jpg\") !important} .background-20 #tasks{background-image:url(\"images/backgrounds/2048/20.jpg\") !important} .background-21 #tasks{background-image:url(\"images/backgrounds/2048/21.jpg\") !important} .background-22 #tasks{background-image:url(\"images/backgrounds/2048/22.jpg\") !important} .background-23 #tasks{background-image:url(\"images/backgrounds/2048/23.jpg\") !important} .background-24 #tasks{background-image:url(\"images/backgrounds/2048/24.jpg\") !important} }@media all and (max-width:1024px){*{-webkit-tap-highlight-color:transparent} .background-01 #tasks{background-image:url(\"images/backgrounds/1024/01.jpg\")} .background-02 #tasks{background-image:url(\"images/backgrounds/1024/02.jpg\")} .background-04 #tasks{background-image:url(\"images/backgrounds/1024/04.jpg\")} .background-05 #tasks{background-image:url(\"images/backgrounds/1024/05.jpg\")} .background-06 #tasks{background-image:url(\"images/backgrounds/1024/06.jpg\")} .background-07 #tasks{background-image:url(\"images/backgrounds/1024/07.jpg\")} .background-08 #tasks{background-image:url(\"images/backgrounds/1024/08.jpg\")} .background-09 #tasks{background-image:url(\"images/backgrounds/1024/09.jpg\")} .background-10 #tasks{background-image:url(\"images/backgrounds/1024/10.jpg\")} .background-11 #tasks{background-image:url(\"images/backgrounds/1024/11.jpg\")} .background-12 #tasks{background-image:url(\"images/backgrounds/1024/12.jpg\")} .background-17 #tasks{background-image:url(\"images/backgrounds/1024/17.jpg\")} .background-18 #tasks{background-image:url(\"images/backgrounds/1024/18.jpg\")} .background-19 #tasks{background-image:url(\"images/backgrounds/1024/19.jpg\")} .background-20 #tasks{background-image:url(\"images/backgrounds/1024/20.jpg\")} .background-21 #tasks{background-image:url(\"images/backgrounds/1024/21.jpg\")} .background-22 #tasks{background-image:url(\"images/backgrounds/1024/22.jpg\")} .background-23 #tasks{background-image:url(\"images/backgrounds/1024/23.jpg\")} .background-24 #tasks{background-image:url(\"images/backgrounds/1024/24.jpg\")} .background-03 #tasks{background-image:url(\"images/backgrounds/thumbs/03.jpg\");-webkit-background-size:96px 96px !important;-moz-background-size:96px 96px !important;background-size:96px 96px !important;background-repeat:repeat !important;} .background-03 #tasks .tasks-scroll{overflow:auto;-webkit-overflow-scrolling:touch} .background-13 #tasks{background:#a69985} .background-14 #tasks{background:#6989a4} .background-15 #tasks{background:#7ba282} .background-16 #tasks{background:#d18097} .popover-notifications .list-people{-webkit-overflow-scrolling:touch} body.focus-browser #lists li.active a{background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(41,111,176,0.7)), color-stop(1, rgba(72,139,192,0.7)));background-image:-webkit-linear-gradient(top, rgba(41,111,176,0.7) 0, rgba(72,139,192,0.7) 100%);background-image:-moz-linear-gradient(top, rgba(41,111,176,0.7) 0, rgba(72,139,192,0.7) 100%);background-image:-o-linear-gradient(top, rgba(41,111,176,0.7) 0, rgba(72,139,192,0.7) 100%);background-image:-ms-linear-gradient(top, rgba(41,111,176,0.7) 0, rgba(72,139,192,0.7) 100%);background-image:linear-gradient(top, rgba(41,111,176,0.7) 0, rgba(72,139,192,0.7) 100%)} .main-interface #system-alert.touch-style-notice{padding-bottom:15px;} .main-interface #system-alert.touch-style-notice p{margin:2px auto 10px auto !important;padding-left:20px} .main-interface #system-alert.touch-style-notice .buttons{float:none;margin:20px auto;width:180px} .main-interface #toolbar{height:48px !important;top:0;left:0;right:0;width:100% !important;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, #f0f0f0), color-stop(1, #dfdfdf));background-image:-webkit-linear-gradient(top, #f0f0f0 0, #dfdfdf 100%);background-image:-moz-linear-gradient(top, #f0f0f0 0, #dfdfdf 100%);background-image:-o-linear-gradient(top, #f0f0f0 0, #dfdfdf 100%);background-image:-ms-linear-gradient(top, #f0f0f0 0, #dfdfdf 100%);background-image:linear-gradient(top, #f0f0f0 0, #dfdfdf 100%);} .main-interface #toolbar #search{right:11px !important;top:4px !important} .main-interface #toolbar #search-toolbar .menu-search{top:16px !important;left:52px !important} .main-interface #toolbar #search-toolbar input{padding-left:28px !important;left:48px !important;right:40px !important;top:12px !important;width:auto} .main-interface #toolbar #search-toolbar #save-search{right:35px;top:6px} .main-interface #toolbar #search-toolbar #reset-search{right:3px !important;top:6px !important;padding:9px !important} .main-interface #toolbar #search-toolbar.allow-save input{right:63px !important} .main-interface #toolbar .logo-wrapper{width:130px;margin:0 auto;position:relative;} .main-interface #toolbar .logo-wrapper #logo{left:0 !important;top:5px !important} .main-interface #toolbar .logo-wrapper #notifications-count{top:15px !important;left:100px} .main-interface #toolbar #user{margin:8px !important;} .main-interface #toolbar #user .avatar{width:32px !important;height:32px !important;} .main-interface #toolbar #user .avatar:before{width:30px;height:30px} .main-interface #toolbar #user img,.main-interface #toolbar #user span{height:32px !important;width:32px !important} .main-interface #tasks{-webkit-background-size:cover;-moz-background-size:cover;background-size:cover;background-repeat:no-repeat;background-position:center top;width:100% !important;z-index:100;-webkit-box-shadow:0 -5px 15px rgba(0,0,0,0.5);box-shadow:0 -5px 15px rgba(0,0,0,0.5);} .main-interface #tasks > div{padding:0 12px !important;} .main-interface #tasks > div#task-actions{padding:0 !important} .main-interface #tasks .tasks-scroll{top:0 !important;padding-top:52px !important;padding-bottom:12px !important;z-index:150;} .main-interface #tasks .tasks-scroll li{-webkit-touch-callout:none} .main-interface #tasks .tasks-scroll .addtask .addtask-meta a{opacity:1 !important;-ms-filter:none;filter:none;visibility:visible !important} .main-interface #tasks .listToolbar{height:48px;position:relative;display:block !important;margin:0 !important;padding:8px 14px !important;z-index:200} .main-interface #tasks ul li{padding:14px} .main-interface #lists .lists-scroll{top:49px !important;bottom:44px !important;} .main-interface #lists .lists-scroll li.animate-up{overflow:hidden !important;opacity:0 !important;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\" !important;filter:alpha(opacity=0) !important;height:0 !important} .main-interface #lists .lists-scroll .active .list-sharing{display:none !important} .main-interface #lists .lists-scroll .active .count{display:block !important} .main-interface #lists .settings{display:block !important} .main-interface #detail{z-index:300 !important;padding:0 !important;} .main-interface #detail .body .subtasks,.main-interface #detail .body .note,.main-interface #detail .body .files{width:auto} .main-interface #detail .inner{-webkit-border-radius:5px 0 0 5px !important;border-radius:5px 0 0 5px !important;background-image:none !important;} .main-interface #detail .inner .title{background-image:none !important} }@media all and (max-width:640px){body:after{content:'micro' !important} body.login:before{min-height:auto !important} body.login .ui-wrapper,body.login .learn-about,body.login .second,body.login .footer-divider{display:none !important} body.login .logo{height:267px !important;} body.login .logo.normal-size{height:109px !important} body.login .mobile-selector,body.login .back-to-selector{display:block !important} body.login .inner.front{display:none !important} #user-popover .popover.backgrounds{right:-70px;top:-30px} .popover .popover-sharing{width:254px !important;height:345px !important;} .popover .popover-sharing .facebook-button{-webkit-border-radius:0 5px 6px 0;border-radius:0 5px 6px 0;width:226px !important} .popover .popover-notifications{width:250px;} .popover .popover-notifications .list-people{max-height:200px !important} #login{overflow:auto;-webkit-overflow-scrolling:touch;} #login .close-login{display:none !important} #login .login-content{opacity:1 !important;-ms-filter:none;filter:none;margin-top:560px;} #login .login-content .signup{display:none !important} #login .login-content p.intro{width:auto !important;margin:none !important;padding:0 10% !important} #login .header-title{display:none !important} #login .pageflip{position:absolute !important;top:57px !important;opacity:1 !important;-ms-filter:none;filter:none;display:block !important;visibility:visible !important} #login .top-buttons,#login .download-icons,#login .ui-wrapper,#login .newsletter-box,#login .promo-image{display:none !important} #login .divider{display:none !important} #login .download-wrapper{display:none !important} .main-interface .drag-clone-reset{right:68px !important;width:auto !important} .main-interface #modals .dialog-wrapper{height:100%;width:100%;position:absolute;z-index:1000;} .main-interface #modals .dialog-wrapper.reminders{height:auto !important;width:64% !important;margin-left:-32% !important} .main-interface #modals .dialog-wrapper .dialog{width:90%;left:0;margin-left:5%} .main-interface #modals .dialog-wrapper #confirmation .col-20{width:25%} .main-interface #modals .dialog-wrapper #confirmation .col-80{width:75%} .main-interface #modals .dialog-wrapper #confirmation .icon{margin-left:-16px} .main-interface #modals .dialog-wrapper #fullscreen-note{left:0;right:0;top:0;bottom:0;margin-left:0 !important;width:auto;-webkit-border-radius:0;border-radius:0} .main-interface #modals .dialog-wrapper #whatsNew,.main-interface #modals .dialog-wrapper #settings{left:0;right:0;top:0;bottom:0;margin-left:0 !important;width:auto;-webkit-border-radius:0;border-radius:0;} .main-interface #modals .dialog-wrapper #whatsNew a[rel=shortcuts],.main-interface #modals .dialog-wrapper #settings a[rel=shortcuts]{display:none} .main-interface #modals .dialog-wrapper #whatsNew .content-inner,.main-interface #modals .dialog-wrapper #settings .content-inner{padding:10px !important;} .main-interface #modals .dialog-wrapper #whatsNew .content-inner p,.main-interface #modals .dialog-wrapper #settings .content-inner p{width:auto} .main-interface #modals .dialog-wrapper #whatsNew .content-inner .hero-img,.main-interface #modals .dialog-wrapper #settings .content-inner .hero-img{position:fixed;left:0;right:0;width:auto} .main-interface #modals .dialog-wrapper #whatsNew .content-inner .teams-heading,.main-interface #modals .dialog-wrapper #settings .content-inner .teams-heading{padding-top:150px} .main-interface #modals .dialog-wrapper #whatsNew .separator.delete .delete-account-heading .col-20,.main-interface #modals .dialog-wrapper #settings .separator.delete .delete-account-heading .col-20{width:30%} .main-interface #modals .dialog-wrapper #whatsNew .separator.delete .delete-account-heading .col-80,.main-interface #modals .dialog-wrapper #settings .separator.delete .delete-account-heading .col-80{width:70%} .main-interface #modals .dialog-wrapper #whatsNew ul.social-links,.main-interface #modals .dialog-wrapper #settings ul.social-links{text-align:center;width:320px;margin:16px auto 16px auto;height:40px;} .main-interface #modals .dialog-wrapper #whatsNew ul.social-links li,.main-interface #modals .dialog-wrapper #settings ul.social-links li{margin:0 3px 6px 3px} .main-interface #modals .dialog-wrapper #whatsNew .tabs li text,.main-interface #modals .dialog-wrapper #settings .tabs li text{display:none} .main-interface #modals .dialog-wrapper #whatsNew .tabs li span,.main-interface #modals .dialog-wrapper #settings .tabs li span{display:inline-block} .main-interface #modals .dialog-wrapper #whatsNew .tabs ~ .content-inner,.main-interface #modals .dialog-wrapper #settings .tabs ~ .content-inner{top:94px} .main-interface #modals .dialog-wrapper.hidden{z-index:1} .main-interface #modals .dialog-wrapper #whatsNew .slides{height:270px} .main-interface #stacks > .stack{-webkit-backface-visibility:hidden;bottom:0 !important;left:0 !important} .main-interface #lists{right:68px !important;width:auto !important;z-index:100;-webkit-transform:translateX(-30%) !important;-moz-transform:translateX(-30%) !important;-o-transform:translateX(-30%) !important;-ms-transform:translateX(-30%) !important;transform:translateX(-30%) !important;} .main-interface #lists.slided{-webkit-transform:translateX(0) !important;-moz-transform:translateX(0) !important;-o-transform:translateX(0) !important;-ms-transform:translateX(0) !important;transform:translateX(0) !important} .main-interface #tasks.slided{margin-left:-68px !important;-webkit-transform:translateX(100%);-moz-transform:translateX(100%);-o-transform:translateX(100%);-ms-transform:translateX(100%);transform:translateX(100%)} .main-interface #tasks .tasks-404{margin:0 10% !important;margin-top:-60px !important} .main-interface.detail-visible #detail{z-index:300;-webkit-transform:translateX(0%) !important;-moz-transform:translateX(0%) !important;-o-transform:translateX(0%) !important;-ms-transform:translateX(0%) !important;transform:translateX(0%) !important} .main-interface #detail{z-index:-999;right:0 !important;width:100% !important;-webkit-transform:translateX(100%) !important;-moz-transform:translateX(100%) !important;-o-transform:translateX(100%) !important;-ms-transform:translateX(100%) !important;transform:translateX(100%) !important;} .main-interface #detail .note{border-top:1px solid #cfcfcf !important;margin-top:20px !important;} .main-interface #detail .note:before{content:none !important} .main-interface #detail .note .open-fullscreen-note{margin-top:-6px !important} .main-interface #detail .inner{margin-left:56px} }@media all and (max-width:480px){#settings .go-pro{line-height:20px !important} #settings .col-68{padding-left:50px !important} #settings .cols-no-indent .col-68{padding-left:0 !important} #settings .cols-no-indent.noindent{padding-left:0 !important} #settings .button.big,#settings button.big{padding:10px !important} }@media all and (max-width:320px){#detail .section.detail-date.editing{height:55px !important;} #detail .section.detail-date.editing #edit-repeat{width:77px} #detail .section.detail-date.editing #edit-repeat-interval{position:absolute;left:132px;top:42px} #detail .section.detail-reminder.editing{height:55px !important;} #detail .section.detail-reminder.editing #edit-reminder-time-ampm{position:absolute;top:45px;left:148px} #login .micro-mode-nav{display:block !important} }@media all and (min-width:641px) and (max-width:768px){body:after{content:'mini' !important} body .ui-wrapper,body .learn-about,body .second,body .footer-divider{display:none !important} body .header-title{margin-top:100px !important} body .promo-image{width:100% !important;-webkit-background-size:100% !important;-moz-background-size:100% !important;background-size:100% !important;background-repeat:no-repeat !important;margin:0 !important;left:auto !important} body #login p.intro{width:auto !important;margin:20px 10% !important} body #login .footer-divider{display:none} body #login .micro-mode-nav{display:none !important} body .main-interface .drag-clone-reset{width:272px !important} body .main-interface #stacks #lists{-webkit-transform:translateX(-30%);-moz-transform:translateX(-30%);-o-transform:translateX(-30%);-ms-transform:translateX(-30%);transform:translateX(-30%);width:300px !important;} body .main-interface #stacks #lists.slided{-webkit-transform:translateX(0);-moz-transform:translateX(0);-o-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0)} body .main-interface #stacks #tasks{right:0 !important;left:0 !important;width:auto !important;-webkit-transform:translateX(0);-moz-transform:translateX(0);-o-transform:translateX(0);-ms-transform:translateX(0);transform:translateX(0);} body .main-interface #stacks #tasks.slided{-webkit-transform:translateX(300px);-moz-transform:translateX(300px);-o-transform:translateX(300px);-ms-transform:translateX(300px);transform:translateX(300px)} body .main-interface #stacks #detail{width:360px;padding-right:0 !important} }@media all and (max-width: 1230px){.login .header-title{margin-top:100px !important} }@media all and (min-width:769px) and (max-width:1024px){body:after{content:'medium' !important} #login .micro-mode-nav{display:none !important} .login .ui-wrapper,.login .learn-about,.login .second,.login .footer-divider{display:none !important} .login .header-title{margin-top:100px !important} .login .promo-image{width:100% !important;-webkit-background-size:90% !important;-moz-background-size:90% !important;background-size:90% !important;background-repeat:no-repeat !important;background-position:center top !important;margin:0 !important;left:auto !important} .login p.intro{width:auto !important;margin:20px 10% !important} .main-interface .drag-clone-reset{width:272px !important} .main-interface #stacks #lists{width:300px !important;z-index:1 !important} .main-interface #stacks #tasks{right:0 !important;left:0 !important;width:auto !important;} .main-interface #stacks #tasks.slided{left:300px !important} }@media all and (max-width:1024px){#toolbar #sync{left:42px !important;top:12px !important} }@media all and (min-width:1025px){body::after{content:'large' !important} #login .micro-mode-nav{display:none !important} }@media all and (min-width:769px) and (max-width:1024px){html[dir=rtl] .main-interface #stacks #tasks.slided{left:0 !important;right:300px !important} }@media all and (min-width:641px) and (max-width:768px){html[dir=rtl] .main-interface #stacks #lists{-webkit-transform:translateX(0) !important;-moz-transform:translateX(0) !important;-o-transform:translateX(0) !important;-ms-transform:translateX(0) !important;transform:translateX(0) !important;} html[dir=rtl] .main-interface #stacks #lists.slided{-webkit-transform:translateX(0) !important;-moz-transform:translateX(0) !important;-o-transform:translateX(0) !important;-ms-transform:translateX(0) !important;transform:translateX(0) !important} html[dir=rtl] .main-interface #stacks #tasks.slided{-webkit-transform:translateX(-300px);-moz-transform:translateX(-300px);-o-transform:translateX(-300px);-ms-transform:translateX(-300px);transform:translateX(-300px)} }@media all and (max-width:640px){html[dir=rtl] .main-interface #lists{right:0 !important;-webkit-transform:translateX(0) !important;-moz-transform:translateX(0) !important;-o-transform:translateX(0) !important;-ms-transform:translateX(0) !important;transform:translateX(0) !important;} html[dir=rtl] .main-interface #lists.slided{-webkit-transform:translateX(0) !important;-moz-transform:translateX(0) !important;-o-transform:translateX(0) !important;-ms-transform:translateX(0) !important;transform:translateX(0) !important;} html[dir=rtl] .main-interface #lists.slided + #tasks{right:inherit !important} html[dir=rtl] .main-interface #tasks{right:auto !important;-webkit-transform:translateX(0) !important;-moz-transform:translateX(0) !important;-o-transform:translateX(0) !important;-ms-transform:translateX(0) !important;transform:translateX(0) !important;} html[dir=rtl] .main-interface #tasks.slided{right:auto !important;-webkit-transform:translateX(-70%) !important;-moz-transform:translateX(-70%) !important;-o-transform:translateX(-70%) !important;-ms-transform:translateX(-70%) !important;transform:translateX(-70%) !important} }" }; });
define('styles/_animation',[],function() { return {'name': '_animation', 'styles': "body.animate #stacks.sytem-alert-active{-webkit-transition:200ms top linear !important;-moz-transition:200ms top linear !important;-o-transition:200ms top linear !important;-ms-transition:200ms top linear !important;transition:200ms top linear !important} body.animate #lists li.animate{-webkit-transition:none !important;-moz-transition:none !important;-o-transition:none !important;-ms-transition:none !important;transition:none !important} body.animate #lists li.animate-up,body.animate #lists li.animate-down{-webkit-transition:300ms height !important;-moz-transition:300ms height !important;-o-transition:300ms height !important;-ms-transition:300ms height !important;transition:300ms height !important} body.animate #lists .filters-collection li.touch-edit-disabled{-webkit-transition:200ms opacity linear !important;-moz-transition:200ms opacity linear !important;-o-transition:200ms opacity linear !important;-ms-transition:200ms opacity linear !important;transition:200ms opacity linear !important} body.animate #tasks.animated{-webkit-transition:right 250ms ease-in-out;-moz-transition:right 250ms ease-in-out;-o-transition:right 250ms ease-in-out;-ms-transition:right 250ms ease-in-out;transition:right 250ms ease-in-out} body.animate #tasks .addtask .icon{-webkit-transition:opacity 250ms linear;-moz-transition:opacity 250ms linear;-o-transition:opacity 250ms linear;-ms-transition:opacity 250ms linear;transition:opacity 250ms linear} body.animate #tasks .taskItem.blur{-webkit-transition:295ms all linear;-moz-transition:295ms all linear;-o-transition:295ms all linear;-ms-transition:295ms all linear;transition:295ms all linear} body.animate #tasks .taskItem.animate-down,body.animate #tasks .taskItem.animate-up{-webkit-transition:400ms all !important;-moz-transition:400ms all !important;-o-transition:400ms all !important;-ms-transition:400ms all !important;transition:400ms all !important} body.animate #tasks .taskItem.animate-empty-task{-webkit-transition:all 300ms;-moz-transition:all 300ms;-o-transition:all 300ms;-ms-transition:all 300ms;transition:all 300ms} body.animate #tasks .taskItem.animate-empty-task-close{-webkit-transition:all 300ms;-moz-transition:all 300ms;-o-transition:all 300ms;-ms-transition:all 300ms;transition:all 300ms} body.animate #tasks .taskItem.fall-out{-webkit-transition:all 400ms cubic-bezier(.57,-.22,.375,1.055);-moz-transition:all 400ms cubic-bezier(.57,-.22,.375,1.055);-o-transition:all 400ms cubic-bezier(.57,-.22,.375,1.055);-ms-transition:all 400ms cubic-bezier(.57,-.22,.375,1.055);transition:all 400ms cubic-bezier(.57,-.22,.375,1.055)} body.animate #tasks .taskItem.return-up{-webkit-transition:all 300ms cubic-bezier(.35,-.6,.535,1.045);-moz-transition:all 300ms cubic-bezier(.35,-.6,.535,1.045);-o-transition:all 300ms cubic-bezier(.35,-.6,.535,1.045);-ms-transition:all 300ms cubic-bezier(.35,-.6,.535,1.045);transition:all 300ms cubic-bezier(.35,-.6,.535,1.045)} body.animate #tasks .taskItem.fall-in{-webkit-transition:opacity 200ms ease-out;-moz-transition:opacity 200ms ease-out;-o-transition:opacity 200ms ease-out;-ms-transition:opacity 200ms ease-out;transition:opacity 200ms ease-out} body.animate #tasks .taskItem.pop-in{opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);-webkit-transition:opacity 150ms ease-in-out;-moz-transition:opacity 150ms ease-in-out;-o-transition:opacity 150ms ease-in-out;-ms-transition:opacity 150ms ease-in-out;transition:opacity 150ms ease-in-out} body.animate #tasks .taskItem.pop-out{-webkit-transform:scale(1.01);-moz-transform:scale(1.01);-o-transform:scale(1.01);-ms-transform:scale(1.01);transform:scale(1.01);-webkit-transition:-webkit-transform 150ms ease-in-out;-moz-transition:-moz-transform 150ms ease-in-out;-o-transition:-o-transform 150ms ease-in-out;-ms-transition:-ms-transform 150ms ease-in-out;transition:transform 150ms ease-in-out} body.animate #tasks .taskItem.pop-back{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1);-webkit-transition:-webkit-transform 200ms ease-in-out;-moz-transition:-moz-transform 200ms ease-in-out;-o-transition:-o-transform 200ms ease-in-out;-ms-transition:-ms-transform 200ms ease-in-out;transition:transform 200ms ease-in-out} body.animate #tasks .taskItem.lists-in-filter-hover{-webkit-transition:230ms opacity;-moz-transition:230ms opacity;-o-transition:230ms opacity;-ms-transition:230ms opacity;transition:230ms opacity} body.animate.explorer #tasks .taskItem.pop-in{opacity:1 !important;-ms-filter:none;filter:none} body.animate .taskItem.dragging .badge{-webkit-transition:right 200ms ease-out;-moz-transition:right 200ms ease-out;-o-transition:right 200ms ease-out;-ms-transition:right 200ms ease-out;transition:right 200ms ease-out} body.animate .taskItem.dragging .taskItem-body{-webkit-transition:left 200ms ease-out;-moz-transition:left 200ms ease-out;-o-transition:left 200ms ease-out;-ms-transition:left 200ms ease-out;transition:left 200ms ease-out} body.animate #detail.animated{-webkit-transition:250ms right ease-in-out !important;-moz-transition:250ms right ease-in-out !important;-o-transition:250ms right ease-in-out !important;-ms-transition:250ms right ease-in-out !important;transition:250ms right ease-in-out !important} body.animate #detail .body{-webkit-transition:margin 150ms !important;-moz-transition:margin 150ms !important;-o-transition:margin 150ms !important;-ms-transition:margin 150ms !important;transition:margin 150ms !important} body.animate #detail .files li.uploading{-webkit-animation:fileBounceIn 400ms ease;-moz-animation:fileBounceIn 400ms ease;-o-animation:fileBounceIn 400ms ease;-ms-animation:fileBounceIn 400ms ease;animation:fileBounceIn 400ms ease} body.animate #detail .files li.deleting,body.animate #detail .files li.image.deleting{-webkit-transition:none !important;-moz-transition:none !important;-o-transition:none !important;-ms-transition:none !important;transition:none !important;-webkit-animation:fileBounceOut 400ms ease;-moz-animation:fileBounceOut 400ms ease;-o-animation:fileBounceOut 400ms ease;-ms-animation:fileBounceOut 400ms ease;animation:fileBounceOut 400ms ease;height:0;-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} body.animate #detail .files li.normal-preview.deleting{-webkit-animation:fileImageBounceOut 400ms ease;-moz-animation:fileImageBounceOut 400ms ease;-o-animation:fileImageBounceOut 400ms ease;-ms-animation:fileImageBounceOut 400ms ease;animation:fileImageBounceOut 400ms ease} body.animate #detail .file li .bar{-webkit-transition:width 200ms ease;-moz-transition:width 200ms ease;-o-transition:width 200ms ease;-ms-transition:width 200ms ease;transition:width 200ms ease} body.animate .dialog-wrapper{-webkit-animation:dialogWrapperfadeIn 250ms ease;-moz-animation:dialogWrapperfadeIn 250ms ease;-o-animation:dialogWrapperfadeIn 250ms ease;-ms-animation:dialogWrapperfadeIn 250ms ease;animation:dialogWrapperfadeIn 250ms ease;} body.animate .dialog-wrapper.opaque{-webkit-animation:dialogWrapperfadeInOpaue 350ms ease;-moz-animation:dialogWrapperfadeInOpaue 350ms ease;-o-animation:dialogWrapperfadeInOpaue 350ms ease;-ms-animation:dialogWrapperfadeInOpaue 350ms ease;animation:dialogWrapperfadeInOpaue 350ms ease} body.animate .dialog-wrapper .dialog{-webkit-animation:dialogSlideIn 250ms cubic-bezier(.175,.885,.32,1.275);-moz-animation:dialogSlideIn 250ms cubic-bezier(.175,.885,.32,1.275);-o-animation:dialogSlideIn 250ms cubic-bezier(.175,.885,.32,1.275);-ms-animation:dialogSlideIn 250ms cubic-bezier(.175,.885,.32,1.275);animation:dialogSlideIn 250ms cubic-bezier(.175,.885,.32,1.275);} body.animate .dialog-wrapper .dialog .show-delete-wrapper{-webkit-transition:all 200ms ease !important;-moz-transition:all 200ms ease !important;-o-transition:all 200ms ease !important;-ms-transition:all 200ms ease !important;transition:all 200ms ease !important;} body.animate .dialog-wrapper .dialog .show-delete-wrapper.invisible{-webkit-transition:all 400ms ease !important;-moz-transition:all 400ms ease !important;-o-transition:all 400ms ease !important;-ms-transition:all 400ms ease !important;transition:all 400ms ease !important} body.animate .dialog-wrapper .dialog .slide{-webkit-transition:all 200ms linear;-moz-transition:all 200ms linear;-o-transition:all 200ms linear;-ms-transition:all 200ms linear;transition:all 200ms linear} body.animate .dialog-wrapper .dialog .add-pro-teammate{-webkit-transition:opacity 200ms linear;-moz-transition:opacity 200ms linear;-o-transition:opacity 200ms linear;-ms-transition:opacity 200ms linear;transition:opacity 200ms linear} body.animate .dialog-wrapper .dialog .height-adjust{-webkit-transition:height 350ms cubic-bezier(.175,.885,.32,1.275);-moz-transition:height 350ms cubic-bezier(.175,.885,.32,1.275);-o-transition:height 350ms cubic-bezier(.175,.885,.32,1.275);-ms-transition:height 350ms cubic-bezier(.175,.885,.32,1.275);transition:height 350ms cubic-bezier(.175,.885,.32,1.275)} body.animate .dialog-wrapper .dialog .amount{-webkit-transition:margin 100ms linear;-moz-transition:margin 100ms linear;-o-transition:margin 100ms linear;-ms-transition:margin 100ms linear;transition:margin 100ms linear} body.animate .dialog-wrapper .dialog .remove-member{-webkit-animation:fileBounceOut 400ms ease;-moz-animation:fileBounceOut 400ms ease;-o-animation:fileBounceOut 400ms ease;-ms-animation:fileBounceOut 400ms ease;animation:fileBounceOut 400ms ease} body.animate .datepicker ol.months{-webkit-transition:all 150ms linear;-moz-transition:all 150ms linear;-o-transition:all 150ms linear;-ms-transition:all 150ms linear;transition:all 150ms linear} body.animate .popover{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1);-webkit-animation:popoverBounceIn 300ms cubic-bezier(.175,.885,.32,1.275);-moz-animation:popoverBounceIn 300ms cubic-bezier(.175,.885,.32,1.275);-o-animation:popoverBounceIn 300ms cubic-bezier(.175,.885,.32,1.275);-ms-animation:popoverBounceIn 300ms cubic-bezier(.175,.885,.32,1.275);animation:popoverBounceIn 300ms cubic-bezier(.175,.885,.32,1.275);-webkit-transform-origin:center top;-moz-transform-origin:center top;-o-transform-origin:center top;-ms-transform-origin:center top;transform-origin:center top;} body.animate .popover#user-popover{-webkit-transform-origin:left top;-moz-transform-origin:left top;-o-transform-origin:left top;-ms-transform-origin:left top;transform-origin:left top} body.animate .popover#notifications-popover{-webkit-transform-origin:105px top;-moz-transform-origin:105px top;-o-transform-origin:105px top;-ms-transform-origin:105px top;transform-origin:105px top} body.animate .popover.backgrounds{-webkit-transform-origin:left center;-moz-transform-origin:left center;-o-transform-origin:left center;-ms-transform-origin:left center;transform-origin:left center} body.animate .popover#sharing-popover{-webkit-transform-origin:left center;-moz-transform-origin:left center;-o-transform-origin:left center;-ms-transform-origin:left center;transform-origin:left center;} body.animate .popover#sharing-popover.from-actionbar{-webkit-transform-origin:center bottom;-moz-transform-origin:center bottom;-o-transform-origin:center bottom;-ms-transform-origin:center bottom;transform-origin:center bottom} body.animate .popover#sharing-popover.from-navbar{-webkit-transform-origin:right top;-moz-transform-origin:right top;-o-transform-origin:right top;-ms-transform-origin:right top;transform-origin:right top} body.animate .popover.error{-webkit-transform-origin:left bottom;-moz-transform-origin:left bottom;-o-transform-origin:left bottom;-ms-transform-origin:left bottom;transform-origin:left bottom} body.animate .popover .reminder-date-picker,body.animate .popover .due-date-picker{-webkit-transition:200ms -webkit-transform;-moz-transition:200ms -moz-transform;-ms-transition:200ms -ms-transform} body.animate .popover .popover-sharing .page{-webkit-transition:all 250ms ease-in-out;-moz-transition:all 250ms ease-in-out;-o-transition:all 250ms ease-in-out;-ms-transition:all 250ms ease-in-out;transition:all 250ms ease-in-out} body.animate .drag-clone.drag-clone-reset{-webkit-transition:height 200ms, width 200ms, color 200ms, background 200ms, padding 200ms, box-shadow 200ms, text-shadow 200ms, border-top 200ms;-moz-transition:height 200ms, width 200ms, color 200ms, background 200ms, padding 200ms, box-shadow 200ms, text-shadow 200ms, border-top 200ms;-o-transition:height 200ms, width 200ms, color 200ms, background 200ms, padding 200ms, box-shadow 200ms, text-shadow 200ms, border-top 200ms;-ms-transition:height 200ms, width 200ms, color 200ms, background 200ms, padding 200ms, box-shadow 200ms, text-shadow 200ms, border-top 200ms;transition:height 200ms,width 200ms,color 200ms,background 200ms,padding 200ms,box-shadow 200ms,text-shadow 200ms,border-top 200ms} body.animate.extension #login .login-wrapper.dialogSlideIn{-webkit-animation:dialogSlideIn 400ms cubic-bezier(.175,.885,.32,1.275);-moz-animation:dialogSlideIn 400ms cubic-bezier(.175,.885,.32,1.275);-o-animation:dialogSlideIn 400ms cubic-bezier(.175,.885,.32,1.275);-ms-animation:dialogSlideIn 400ms cubic-bezier(.175,.885,.32,1.275);animation:dialogSlideIn 400ms cubic-bezier(.175,.885,.32,1.275)} body.animate.extension #login .login-wrapper.dialogSlideOut{-webkit-transform:translateY(-200%);-moz-transform:translateY(-200%);-o-transform:translateY(-200%);-ms-transform:translateY(-200%);transform:translateY(-200%);-webkit-animation:dialogSlideOut 500ms cubic-bezier(.175,.885,.32,1.275);-moz-animation:dialogSlideOut 500ms cubic-bezier(.175,.885,.32,1.275);-o-animation:dialogSlideOut 500ms cubic-bezier(.175,.885,.32,1.275);-ms-animation:dialogSlideOut 500ms cubic-bezier(.175,.885,.32,1.275);animation:dialogSlideOut 500ms cubic-bezier(.175,.885,.32,1.275)} body.animate #login .page-login,body.animate #login .page-loginmore,body.animate #login .page-error,body.animate #login .page-registration,body.animate #login .download-icons a,body.animate #login .play-btn,body.animate #login .video-wrapper{-webkit-transition:all 200ms ease-in-out;-moz-transition:all 200ms ease-in-out;-o-transition:all 200ms ease-in-out;-ms-transition:all 200ms ease-in-out;transition:all 200ms ease-in-out} body.animate #login .flip > .back,body.animate #login .flip > .front{-webkit-transition:all .8s ease-in-out;-moz-transition:all .8s ease-in-out;-ms-transition:all .8s ease-in-out} body.animate #login .flip.wobble{-webkit-animation:wobble .8s cubic-bezier(.385,.5,.49,1.34);-moz-animation:wobble .8s cubic-bezier(.385,.5,.49,1.34);-ms-animation:wobble .8s cubic-bezier(.385,.5,.49,1.34)} body.animate .blur{-webkit-transition:all 750ms ease-in-out;-moz-transition:all 750ms ease-in-out;-o-transition:all 750ms ease-in-out;-ms-transition:all 750ms ease-in-out;transition:all 750ms ease-in-out;opacity:.2;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=20)\";filter:alpha(opacity=20);z-index:0;-webkit-filter:grayscale(10%) blur(2.5px);-webkit-transform:translateY(40px);-moz-transform:translateY(40px);-o-transform:translateY(40px);-ms-transform:translateY(40px);transform:translateY(40px)} body.animate .showLogin{-webkit-transform:translateY(0);-moz-transform:translateY(0);-o-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);-webkit-transition:all 750ms ease-in-out;-moz-transition:all 750ms ease-in-out;-o-transition:all 750ms ease-in-out;-ms-transition:all 750ms ease-in-out;transition:all 750ms ease-in-out;opacity:1 !important;-ms-filter:none;filter:none} body.animate .hideLogin{-webkit-transform:translateY(-40px);-moz-transform:translateY(-40px);-o-transform:translateY(-40px);-ms-transform:translateY(-40px);transform:translateY(-40px);-webkit-transition:all 750ms ease-in-out;-moz-transition:all 750ms ease-in-out;-o-transition:all 750ms ease-in-out;-ms-transition:all 750ms ease-in-out;transition:all 750ms ease-in-out;opacity:0 !important;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\" !important;filter:alpha(opacity=0) !important;visibility:hidden !important} body.animate .login-content,body.animate .promo-image{-webkit-transition:opacity 750ms ease-in-out;-moz-transition:opacity 750ms ease-in-out;-o-transition:opacity 750ms ease-in-out;-ms-transition:opacity 750ms ease-in-out;transition:opacity 750ms ease-in-out} html[dir=rtl] #wunderlist-base #detail{-webkit-transition:none !important;-moz-transition:none !important;-o-transition:none !important;-ms-transition:none !important;transition:none !important} html[dir=rtl] #wunderlist-base .animated{-webkit-transition:none !important;-moz-transition:none !important;-o-transition:none !important;-ms-transition:none !important;transition:none !important} @media all and (max-width:1024px){body.animate #tasks.animated,body.animate #lists.animated{-webkit-transition:400ms all ease-in-out !important;-moz-transition:400ms all ease-in-out !important;-o-transition:400ms all ease-in-out !important;-ms-transition:400ms all ease-in-out !important;transition:400ms all ease-in-out !important} }@media all and (max-width:640px){body.animate #detail.animated{-webkit-transition:250ms all !important;-moz-transition:250ms all !important;-ms-transition:250ms all !important} }@media only screen and (-webkit-min-device-pixel-ratio: 1.5), only screen and (min--moz-device-pixel-ratio: 1.5){.blur{-webkit-filter:grayscale(10%) blur(5px) !important} }@-moz-keyframes popoverBounceIn{0%{-webkit-transform:scale(.6);-moz-transform:scale(.6);-o-transform:scale(.6);-ms-transform:scale(.6);transform:scale(.6)} 100%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} }@-webkit-keyframes popoverBounceIn{0%{-webkit-transform:scale(.6);-moz-transform:scale(.6);-o-transform:scale(.6);-ms-transform:scale(.6);transform:scale(.6)} 100%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} }@-o-keyframes popoverBounceIn{0%{-webkit-transform:scale(.6);-moz-transform:scale(.6);-o-transform:scale(.6);-ms-transform:scale(.6);transform:scale(.6)} 100%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} }@-ms-keyframes popoverBounceIn{0%{-webkit-transform:scale(.6);-moz-transform:scale(.6);-o-transform:scale(.6);-ms-transform:scale(.6);transform:scale(.6)} 100%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} }@keyframes popoverBounceIn{0%{-webkit-transform:scale(.6);-moz-transform:scale(.6);-o-transform:scale(.6);-ms-transform:scale(.6);transform:scale(.6)} 100%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} }@-moz-keyframes fileBounceIn{0%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} 60%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 80%{-webkit-transform:scale(.95);-moz-transform:scale(.95);-o-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95)} 100%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} }@-webkit-keyframes fileBounceIn{0%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} 60%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 80%{-webkit-transform:scale(.95);-moz-transform:scale(.95);-o-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95)} 100%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} }@-o-keyframes fileBounceIn{0%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} 60%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 80%{-webkit-transform:scale(.95);-moz-transform:scale(.95);-o-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95)} 100%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} }@-ms-keyframes fileBounceIn{0%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} 60%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 80%{-webkit-transform:scale(.95);-moz-transform:scale(.95);-o-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95)} 100%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} }@keyframes fileBounceIn{0%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} 60%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 80%{-webkit-transform:scale(.95);-moz-transform:scale(.95);-o-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95)} 100%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} }@-moz-keyframes fileBounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1);height:60px} 20%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 70%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0);height:60px} 100%{height:0;-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} }@-webkit-keyframes fileBounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1);height:60px} 20%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 70%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0);height:60px} 100%{height:0;-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} }@-o-keyframes fileBounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1);height:60px} 20%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 70%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0);height:60px} 100%{height:0;-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} }@-ms-keyframes fileBounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1);height:60px} 20%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 70%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0);height:60px} 100%{height:0;-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} }@keyframes fileBounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1);height:60px} 20%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 70%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0);height:60px} 100%{height:0;-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} }@-moz-keyframes fileImageBounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1);height:152px} 20%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 70%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0);height:152px} 100%{height:0;-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} }@-webkit-keyframes fileImageBounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1);height:152px} 20%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 70%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0);height:152px} 100%{height:0;-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} }@-o-keyframes fileImageBounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1);height:152px} 20%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 70%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0);height:152px} 100%{height:0;-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} }@-ms-keyframes fileImageBounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1);height:152px} 20%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 70%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0);height:152px} 100%{height:0;-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} }@keyframes fileImageBounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1);height:152px} 20%{-webkit-transform:scale(1.05);-moz-transform:scale(1.05);-o-transform:scale(1.05);-ms-transform:scale(1.05);transform:scale(1.05)} 70%{-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0);height:152px} 100%{height:0;-webkit-transform:scale(0);-moz-transform:scale(0);-o-transform:scale(0);-ms-transform:scale(0);transform:scale(0)} }@-moz-keyframes dialogWrapperfadeIn{0%{background:rgba(0,0,0,0)} 100%{background:rgba(0,0,0,0.25)} }@-webkit-keyframes dialogWrapperfadeIn{0%{background:rgba(0,0,0,0)} 100%{background:rgba(0,0,0,0.25)} }@-o-keyframes dialogWrapperfadeIn{0%{background:rgba(0,0,0,0)} 100%{background:rgba(0,0,0,0.25)} }@-ms-keyframes dialogWrapperfadeIn{0%{background:rgba(0,0,0,0)} 100%{background:rgba(0,0,0,0.25)} }@keyframes dialogWrapperfadeIn{0%{background:rgba(0,0,0,0)} 100%{background:rgba(0,0,0,0.25)} }@-moz-keyframes dialogWrapperfadeInOpaue{0%{background:black(0)} 100%{background:black(1)} }@-webkit-keyframes dialogWrapperfadeInOpaue{0%{background:black(0)} 100%{background:black(1)} }@-o-keyframes dialogWrapperfadeInOpaue{0%{background:black(0)} 100%{background:black(1)} }@-ms-keyframes dialogWrapperfadeInOpaue{0%{background:black(0)} 100%{background:black(1)} }@keyframes dialogWrapperfadeInOpaue{0%{background:black(0)} 100%{background:black(1)} }@-moz-keyframes dialogSlideIn{0%{-webkit-transform:translateY(-100%);-moz-transform:translateY(-100%);-o-transform:translateY(-100%);-ms-transform:translateY(-100%);transform:translateY(-100%);opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60)} 100%{-webkit-transform:translateY(0);-moz-transform:translateY(0);-o-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1;-ms-filter:none;filter:none} }@-webkit-keyframes dialogSlideIn{0%{-webkit-transform:translateY(-100%);-moz-transform:translateY(-100%);-o-transform:translateY(-100%);-ms-transform:translateY(-100%);transform:translateY(-100%);opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60)} 100%{-webkit-transform:translateY(0);-moz-transform:translateY(0);-o-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1;-ms-filter:none;filter:none} }@-o-keyframes dialogSlideIn{0%{-webkit-transform:translateY(-100%);-moz-transform:translateY(-100%);-o-transform:translateY(-100%);-ms-transform:translateY(-100%);transform:translateY(-100%);opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60)} 100%{-webkit-transform:translateY(0);-moz-transform:translateY(0);-o-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1;-ms-filter:none;filter:none} }@-ms-keyframes dialogSlideIn{0%{-webkit-transform:translateY(-100%);-moz-transform:translateY(-100%);-o-transform:translateY(-100%);-ms-transform:translateY(-100%);transform:translateY(-100%);opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60)} 100%{-webkit-transform:translateY(0);-moz-transform:translateY(0);-o-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1;-ms-filter:none;filter:none} }@keyframes dialogSlideIn{0%{-webkit-transform:translateY(-100%);-moz-transform:translateY(-100%);-o-transform:translateY(-100%);-ms-transform:translateY(-100%);transform:translateY(-100%);opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60)} 100%{-webkit-transform:translateY(0);-moz-transform:translateY(0);-o-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1;-ms-filter:none;filter:none} }@-moz-keyframes dialogSlideOut{0%{-webkit-transform:translateY(0);-moz-transform:translateY(0);-o-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1;-ms-filter:none;filter:none} 100%{-webkit-transform:translateY(-200%);-moz-transform:translateY(-200%);-o-transform:translateY(-200%);-ms-transform:translateY(-200%);transform:translateY(-200%);opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60)} }@-webkit-keyframes dialogSlideOut{0%{-webkit-transform:translateY(0);-moz-transform:translateY(0);-o-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1;-ms-filter:none;filter:none} 100%{-webkit-transform:translateY(-200%);-moz-transform:translateY(-200%);-o-transform:translateY(-200%);-ms-transform:translateY(-200%);transform:translateY(-200%);opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60)} }@-o-keyframes dialogSlideOut{0%{-webkit-transform:translateY(0);-moz-transform:translateY(0);-o-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1;-ms-filter:none;filter:none} 100%{-webkit-transform:translateY(-200%);-moz-transform:translateY(-200%);-o-transform:translateY(-200%);-ms-transform:translateY(-200%);transform:translateY(-200%);opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60)} }@-ms-keyframes dialogSlideOut{0%{-webkit-transform:translateY(0);-moz-transform:translateY(0);-o-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1;-ms-filter:none;filter:none} 100%{-webkit-transform:translateY(-200%);-moz-transform:translateY(-200%);-o-transform:translateY(-200%);-ms-transform:translateY(-200%);transform:translateY(-200%);opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60)} }@keyframes dialogSlideOut{0%{-webkit-transform:translateY(0);-moz-transform:translateY(0);-o-transform:translateY(0);-ms-transform:translateY(0);transform:translateY(0);opacity:1;-ms-filter:none;filter:none} 100%{-webkit-transform:translateY(-200%);-moz-transform:translateY(-200%);-o-transform:translateY(-200%);-ms-transform:translateY(-200%);transform:translateY(-200%);opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60)} }@-moz-keyframes bounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} 25%{-webkit-transform:scale(.95);-moz-transform:scale(.95);-o-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95)} 50%{opacity:1;-ms-filter:none;filter:none;-webkit-transform:scale(1.1);-moz-transform:scale(1.1);-o-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)} 100%{opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);-webkit-transform:scale(.3);-moz-transform:scale(.3);-o-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)} }@-webkit-keyframes bounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} 25%{-webkit-transform:scale(.95);-moz-transform:scale(.95);-o-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95)} 50%{opacity:1;-ms-filter:none;filter:none;-webkit-transform:scale(1.1);-moz-transform:scale(1.1);-o-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)} 100%{opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);-webkit-transform:scale(.3);-moz-transform:scale(.3);-o-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)} }@-o-keyframes bounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} 25%{-webkit-transform:scale(.95);-moz-transform:scale(.95);-o-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95)} 50%{opacity:1;-ms-filter:none;filter:none;-webkit-transform:scale(1.1);-moz-transform:scale(1.1);-o-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)} 100%{opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);-webkit-transform:scale(.3);-moz-transform:scale(.3);-o-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)} }@-ms-keyframes bounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} 25%{-webkit-transform:scale(.95);-moz-transform:scale(.95);-o-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95)} 50%{opacity:1;-ms-filter:none;filter:none;-webkit-transform:scale(1.1);-moz-transform:scale(1.1);-o-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)} 100%{opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);-webkit-transform:scale(.3);-moz-transform:scale(.3);-o-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)} }@keyframes bounceOut{0%{-webkit-transform:scale(1);-moz-transform:scale(1);-o-transform:scale(1);-ms-transform:scale(1);transform:scale(1)} 25%{-webkit-transform:scale(.95);-moz-transform:scale(.95);-o-transform:scale(.95);-ms-transform:scale(.95);transform:scale(.95)} 50%{opacity:1;-ms-filter:none;filter:none;-webkit-transform:scale(1.1);-moz-transform:scale(1.1);-o-transform:scale(1.1);-ms-transform:scale(1.1);transform:scale(1.1)} 100%{opacity:0;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\";filter:alpha(opacity=0);-webkit-transform:scale(.3);-moz-transform:scale(.3);-o-transform:scale(.3);-ms-transform:scale(.3);transform:scale(.3)} }@-moz-keyframes wobble{0%{left:50%} 10%{left:49%} 20%{left:51%} 30%{left:49.2%} 40%{left:50.8%} 50%{left:49.4%} 60%{left:50.6%} 60%{left:49.6%} 60%{left:50.2%} 60%{left:49.8%} 100%{left:50%} }@-webkit-keyframes wobble{0%{left:50%} 10%{left:49%} 20%{left:51%} 30%{left:49.2%} 40%{left:50.8%} 50%{left:49.4%} 60%{left:50.6%} 60%{left:49.6%} 60%{left:50.2%} 60%{left:49.8%} 100%{left:50%} }@-o-keyframes wobble{0%{left:50%} 10%{left:49%} 20%{left:51%} 30%{left:49.2%} 40%{left:50.8%} 50%{left:49.4%} 60%{left:50.6%} 60%{left:49.6%} 60%{left:50.2%} 60%{left:49.8%} 100%{left:50%} }@-ms-keyframes wobble{0%{left:50%} 10%{left:49%} 20%{left:51%} 30%{left:49.2%} 40%{left:50.8%} 50%{left:49.4%} 60%{left:50.6%} 60%{left:49.6%} 60%{left:50.2%} 60%{left:49.8%} 100%{left:50%} }@keyframes wobble{0%{left:50%} 10%{left:49%} 20%{left:51%} 30%{left:49.2%} 40%{left:50.8%} 50%{left:49.4%} 60%{left:50.6%} 60%{left:49.6%} 60%{left:50.2%} 60%{left:49.8%} 100%{left:50%} }" }; });
define('styles/_touch',[],function() { return {'name': '_touch', 'styles': "body.touch:not(.login) .icon.task-checkbox.detail-checkbox{background-position:3;width:;height:;} body.touch:not(.login) .icon.task-checkbox.detail-checkbox:active{background-position:4;width:;height:} body.touch:not(.login) #tasks .addtask{margin:12px 0;padding:12px 12px;} body.touch:not(.login) #tasks .addtask input{font-size:15px;font-weight:bold;padding-right:80px;} body.touch:not(.login) #tasks .addtask input::-webkit-input-speech-button{top:10px;left:10px} body.touch:not(.login) #tasks .addtask .addtask-meta{opacity:1;-ms-filter:none;filter:none;visibility:visible;top:3px;} body.touch:not(.login) #tasks .addtask .addtask-meta a{padding:8px 5px 10px 5px} body.touch:not(.login) #tasks .addtask .addtask-meta .avatar{position:absolute;top:8px;left:5px;} body.touch:not(.login) #tasks .addtask .addtask-meta .avatar img{left:1px} body.touch:not(.login) #tasks .addtask .addtask-meta .avatar .assign-delete{display:block} body.touch:not(.login) #tasks .addtask .icon.input-date{position:relative;right:0;top:0;} body.touch:not(.login) #tasks .addtask .icon.input-date.in-starred{right:0} body.touch:not(.login) #tasks h2{font-size:15px;margin-top:22px !important;margin-bottom:12px;} body.touch:not(.login) #tasks h2.no-results{font-size:22px} body.touch:not(.login) .taskItem{height:48px;} body.touch:not(.login) .taskItem.dragging{z-index:9999 !important;width:300px;overflow:visible} body.touch:not(.login) .taskItem.first-task-position{padding-top:48px !important} body.touch:not(.login) .taskItem.first-task-position-next{padding-bottom:48px !important} body.touch:not(.login) .taskItem.animate-up{height:0;opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60);overflow:hidden !important} body.touch:not(.login) .taskItem.animate-down{height:48px !important;opacity:1 !important;-ms-filter:none;filter:none} body.touch:not(.login) .taskItem.lists-in-filter-hover{opacity:.6;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=60)\";filter:alpha(opacity=60)} body.touch:not(.login) .taskItem.animate-empty-task{margin-top:40px} body.touch:not(.login) .taskItem.animate-empty-task-close{margin-top:0} body.touch:not(.login) .taskItem.fall-out{z-index:5 !important;margin-top:55px;opacity:0 !important;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\" !important;filter:alpha(opacity=0) !important} body.touch:not(.login) .taskItem.return-up{margin-top:-55px;opacity:0 !important;-ms-filter:\"progid:DXImageTransform.Microsoft.Alpha(Opacity=0)\" !important;filter:alpha(opacity=0) !important} body.touch:not(.login) .taskItem-body{background:#eaeaea;height:44px;} body.touch:not(.login) .taskItem-body .icon.task-separator{position:absolute;left:44px;top:7px;height:100%;cursor:default} body.touch:not(.login) .taskItem-body .icon.task-checkbox{position:relative;left:0;top:0} body.touch:not(.login) .taskItem-body .icon.task-star{float:none;margin:0;} body.touch:not(.login) .taskItem-body .icon.task-star.task-starred{margin:-5px -3px 0 0} body.touch:not(.login) .taskItem-body .icon.task-attachment{height:18px;margin-top:-3px} body.touch:not(.login) .taskItem-body a.task-star{padding:4px 13px 3px 12px;float:right} body.touch:not(.login) .taskItem-body .taskItem-checkbox{margin:0;position:absolute;padding:12px 12px 12px 14px} body.touch:not(.login) .taskItem-body .taskItem-assign{margin-top:10px} body.touch:not(.login) .taskItem-body .taskItem-titleWrapper{font-size:15px;margin:0 0 0 58px;padding:13px 0 0 0;line-height:18px;} body.touch:not(.login) .taskItem-body .taskItem-titleWrapper.attachment{padding-right:20px;} body.touch:not(.login) .taskItem-body .taskItem-titleWrapper.attachment .task-attachment.overflow{margin-top:-2px;right:0} body.touch:not(.login) .taskItem-body .taskitem-duedate{float:right;font-size:13px;line-height:16px;margin:13px 3px 0 7px} body.touch:not(.login) .taskItem-body .task-recurrence.task-recurring{margin-top:13px} body.touch:not(.login) .taskItem-body.active .taskItem-body,body.touch:not(.login) .taskItem-body.selected .taskItem-body{background:#c0d6e7;background-position:0 -34px} body.touch:not(.login) #lists{background-image:none !important;} body.touch:not(.login) #lists .new-list-dropzone{display:none} body.touch:not(.login) #lists .delete{display:none} body.touch:not(.login) #lists .edit-lists{display:block !important} body.touch:not(.login) #lists .lists-scroll{bottom:44px !important;} body.touch:not(.login) #lists .lists-scroll li{height:44px;-webkit-touch-callout:none;} body.touch:not(.login) #lists .lists-scroll li.active .task-body,body.touch:not(.login) #lists .lists-scroll li.selected .task-body{background:#c0d6e7;background-position:0 -34px} body.touch:not(.login) #lists .lists-scroll li.active a,body.touch:not(.login) #lists .lists-scroll li.selected a{background-image:none;background-image:-webkit-gradient(linear, left top, left bottom, color-stop(0, rgba(41,111,176,0.9)), color-stop(1, rgba(72,139,192,0.9)));background-image:-webkit-linear-gradient(top, rgba(41,111,176,0.9) 0, rgba(72,139,192,0.9) 100%);background-image:-moz-linear-gradient(top, rgba(41,111,176,0.9) 0, rgba(72,139,192,0.9) 100%);background-image:-o-linear-gradient(top, rgba(41,111,176,0.9) 0, rgba(72,139,192,0.9) 100%);background-image:-ms-linear-gradient(top, rgba(41,111,176,0.9) 0, rgba(72,139,192,0.9) 100%);background-image:linear-gradient(top, rgba(41,111,176,0.9) 0, rgba(72,139,192,0.9) 100%)} body.touch:not(.login) #lists .lists-scroll li .icon{margin-top:4px !important} body.touch:not(.login) #lists .lists-scroll li a{height:44px !important} body.touch:not(.login) #lists .lists-scroll li .title{font-size:18px !important;font-weight:500 !important} body.touch:not(.login) #lists .lists-scroll li .count{font-size:14px !important;margin-top:4px} body.touch:not(.login) #lists .lists-scroll .addlist .title,body.touch:not(.login) #lists .lists-scroll input.edit{font-size:18px !important} body.touch:not(.login) #lists .lists-scroll li a .title.touch-edit-mode,body.touch:not(.login) #lists .lists-scroll .addlist .title.touch-edit-mode{border-bottom:1px solid #b0b0b0;right:auto;padding:0 5px 0 5px;} body.touch:not(.login) #lists .lists-scroll li a .title.touch-edit-mode:before,body.touch:not(.login) #lists .lists-scroll .addlist .title.touch-edit-mode:before{content:\"\";position:absolute;bottom:0;left:0;border:1px solid #b0b0b0} body.touch:not(.login) #lists .lists-scroll li a .title.touch-edit-mode:after,body.touch:not(.login) #lists .lists-scroll .addlist .title.touch-edit-mode:after{content:\"\";position:absolute;bottom:0;right:0;border:1px solid #b0b0b0} body.touch:not(.login) #lists .sidebarActions{height:44px} body.touch:not(.login) #lists .sidebarActions-action.settings{padding:12px;right:0;top:1px} body.touch:not(.login) #lists .sidebarActions-action.edit-lists{margin-top:9px} body.touch:not(.login) #detail a.detail-checkbox{padding:12px;position:absolute;left:5px;top:5px} body.touch:not(.login) #detail a.detail-star{padding:0 7px;position:absolute;right:8px;top:-1px} body.touch:not(.login) #detail a.detail-save{position:absolute;padding:10px;right:40px;top:3px} body.touch:not(.login) #detail a.detail-delete{position:absolute;padding:10px 14px 10px 6px;right:0;top:3px} body.touch:not(.login) #detail .icon.detail-delete,body.touch:not(.login) #detail .icon.detail-save{position:relative !important;left:0 !important;top:0 !important} body.touch:not(.login) #detail .icon.detail-checkbox,body.touch:not(.login) #detail .icon.detail-checked{position:relative !important;left:0 !important;top:0 !important} body.touch:not(.login) #detail .icon.detail-star,body.touch:not(.login) #detail .icon.detail-starred{position:relative !important;right:0 !important;top:0 !important} body.touch:not(.login) #detail .subtasks a.detail-delete{position:absolute;padding:6px 5px;right:0;top:0} body.touch:not(.login) #detail .subtasks .icon.detail-delete{display:block !important} body.touch:not(.login) #detail .bottom a.detail-trash{padding:10px;position:absolute;left:0;top:0} body.touch:not(.login) #detail .bottom a.detail-close{padding:10px;position:absolute;right:0;top:0} body.touch:not(.login) #detail .bottom .icon.detail-trash{position:relative !important;left:0 !important;top:0 !important} body.touch:not(.login) #detail .bottom .icon.detail-close{position:relative !important;right:0 !important;top:0 !important} body.touch:not(.login) .drag-clone-reset{width:243px !important;left:0 !important;height:48px !important;padding:10px 14px 11px 14px;display:block;font-weight:bold;background:url(\"images/textures/list-active.jpg\");color:#fff;text-shadow:0 1px 2px rgba(0,0,0,0.3);-webkit-box-shadow:inset 0 1px 0 rgba(0,0,0,0.3);box-shadow:inset 0 1px 0 rgba(0,0,0,0.3);} body.touch:not(.login) .drag-clone-reset .icon.list-list{background-position:-20px -82px;width:18px;height:14px} body.touch:not(.login) .drag-clone-reset .fake-title{position:absolute;top:11px;left:40px;right:40px;} body.touch:not(.login) .drag-clone-reset .fake-title .fake-new-list{width:250px;} body.touch:not(.login) .drag-clone-reset .fake-title .fake-new-list div{position:absolute !important} " }; });
define('styles/_rtl',[],function() { return {'name': '_rtl', 'styles': "html[dir=rtl] #wunderlist-base token{display:inline-block} " }; });
define('views/ApplicationView',[

  'application/runtime',

  'views/Login/InterfaceView',
  'views/Main/MainInterfaceView',
  'views/Main/MiniSiteView',
  'wunderbits/WBView',

  'wunderbits/helpers/keycodes',
  'helpers/WindowTitleHelper',
  'helpers/URLResolver',

  'style!application/_layout',
  'style!application/_avatars',
  'style!_forms',
  'style!_sprite',
  'style!_buttons',
  'style!_tags',
  'style!_dialogs',
  'style!_responsive',
  'style!_animation',
  'style!_touch',
  'style!_rtl'

], function (
  runtime,
  InterfaceView, MainInterfaceView, MiniSiteView, WBView,
  Keycodes, WindowTitleHelper, URLResolver,
  layoutStyle, avatarStyle, formsStyle, spriteStyle, buttonsStyle, tagsStyle,
  dialogsStyle, responsiveStyle, animationStyle, touchStyle, rtlStyle,
  undefined
) {

  

  var _ = runtime._;
  var $ = runtime.$;
  var global = runtime.global;
  var Image = global.Image;

  var _super = WBView.prototype;

  var _views = {
    'LoginView': InterfaceView,
    'MainInterfaceView': MainInterfaceView,
    'MiniSiteView': MiniSiteView
  };

  return WBView.extend({

    'styles': [
      avatarStyle,
      layoutStyle,
      formsStyle,
      spriteStyle,
      buttonsStyle,
      tagsStyle,
      dialogsStyle,
      responsiveStyle,
      animationStyle,
      touchStyle,
      rtlStyle
    ],

    'el': 'body',

    'events': {
      // this is for giving  blind users a way to trigger click handlers on all interactive elements
      'keydown a, button': 'translateKeydown'
    },

    'initialize': function () {

      var self = this;

      _super.initialize.apply(self, arguments);

      self.bindTo(runtime.settings, 'change:background', function () {

        var attributes = runtime.settings.attributes;
        attributes.background && self.setBackground(attributes.background);
      });

      WindowTitleHelper.init();

      self.bindTo(runtime, 'preload:sprites', self.preloadSprites);
    },

    'setFocusToAddTask': function () {

      var self = this;

      if (self.activeViewName === 'MainInterfaceView') {
        self.activeView.setFocusToAddTask();
      }
    },

    'preloadSprites': function () {

      // prevents new signups from having a slow loading interface
      var width = runtime.env.getCurrentWidth();

      var sprites = [

        'numbers.png',
        'textures/detail.png',
        'textures/divider.png',
        'textures/unread.png'
      ];

      if (runtime.env.isRetina()) {

        var retina = [

          'sprites/app-retina.png',
          'textures/sidebar@2x.png',
          'textures/list-active@2x.jpg',
          'textures/task@2x.png'
        ];

        sprites = sprites.concat(retina);
      }
      else {

        var normal = [

          'sprites/app.png',
          'textures/sidebar.png',
          'textures/list-active.jpg',
          'textures/task.png'
        ];

        sprites = sprites.concat(normal);
      }

      if (width > 1024) {

        width = '2048';
      }
      else if (width > 768) {

        width = '1024';
      }
      else if (width > 640) {

        width = '768';
      }
      else {

        width = '640';
      }
      sprites.push('backgrounds/' + width + '/01.jpg');

      var images = [];
      _.each(sprites, function (sprite, idx) {

        images[idx] = new Image();
        images[idx].src = URLResolver.resolve('images/' + sprite);
      });
    },

    'switchToView': function (name, options, renderOptions, callback) {

      var self = this;
      var viewName = name + 'View';

      if (viewName !== self.activeViewName) {

        var previousView = self.getSubview('main');
        previousView && previousView.destroy();

        var ViewClass = _views[viewName];
        self.activeView = self.addSubview(new ViewClass(options), 'main');
        self.activeViewName = viewName;

        self.$el.empty().append(self.activeView.render(renderOptions).$el);
        self.activeView.delegateEvents();

        if (viewName === 'MainInterfaceView') {

          self.setBackground(runtime.settings.attributes.background);
        }

        //runtime.enableAnimations();
      }

      _.isFunction(callback) && callback(self.activeView);

      return self.activeView;
    },

    'setBackground': function (background) {

      var self = this;

      if (!runtime.user.attributes.token && !runtime.user.isUnregistered()) {

        return;
      }

      var classList = self.$el[0].className.split(/\s/g);
      background = background.substr(-2);

      classList = _.filter(classList, function(cls) {
        return !/^background\-\w+$/.test(cls);
      });
      classList.push('background-' + background);

      self.$el[0].className = classList.join(' ');
    },

    'hideModals': function () {

      var self = this;
      self.$('.dialog-wrapper').not('.reminders').removeClass('active').addClass('hidden');
      runtime.trigger('settings:close');
    },

    'openMiniSite': function (options) {

      var self = this;

      self.switchToView('MiniSite', options);
    },

    'openSignup': function () {

      var self = this;

      self.switchToView('Login', null, null, function (view) {

        view.toggleLoginForm(null, 'signup');
      });
    },

    'openFacebookSignup': function (token) {

      var self = this;
      var options = {
        'forceOption':'A'
      };

      self.switchToView('Login', options, null, function (view) {

        view._checkFacebookStatus && view._checkFacebookStatus(token);
      });
    },

    'openLogin': function () {

      var self = this;

      self.switchToView('Login');
    },

    'openLists': function () {

      var self = this;

      self.switchToView('MainInterface', null, null, function (view) {
        self.goToPage('lists');
        view.waitToShowList();
      });
    },

    'openFilter': function (name, options) {

      var self = this;

      self.switchToView('MainInterface', null, null, function (view) {
        self.goToPage('tasks');
        view.showFilter(name, options);
      });
    },

    'openList': function (list, options) {

      var self = this;

      self.switchToView('MainInterface', null, null, function (view) {
        self.goToPage('tasks');
        view.showList(list, options);
      });
    },

    'openTask': function (task, options) {

      var self = this;

      self.switchToView('MainInterface', null, null, function (view) {

        self.goToPage('detail');
        view.showTask(task, options);
      });
    },

    'openTBV404': function (type) {

      var self = this;

      self.switchToView('MainInterface', null, null, function (view) {

        self.goToPage('lists');
        view.showTBV404(type);
      });
    },

    'showLoading': function () {

      var self = this;

      self.switchToView('MainInterface', null, null, function (view) {

        var $loading = $('<div id="loading" class="loading"><span/></div>').append(runtime.language.getLabel('label_loading').toString());
        self.el.appendChild($loading[0]);
        self.renderLabels();

        view.$el.addClass('hidden');
      });
    },

    'hideLoading': function () {

      var self = this;
      self.switchToView('MainInterface', null, null, function (view) {

        self.$('#loading').remove();

        view.$el.removeClass('hidden');
      });
    },

    'goToPage': function (page) {

      var self = this;

      self.hideModals();
      runtime.trigger('popover:close');

      var pageSelector = '#' + page;
      var el = $(pageSelector);

      self.isInitialPageView = !self.hasOpenedInitialPage;
      self.hasOpenedInitialPage = true;

      self.trigger('page', page, el);
    },

    'translateKeydown': function (ev) {

      if (ev.which === Keycodes.enter) {
        $(ev.target).click();
        if (ev.target.nodeName.toLowerCase() === 'button') {
          // do not prevent normal link following
          ev.preventDefault();
        }
        ev.stopPropagation();
      }
    }
  });
});

// Events

// login_screen: must be sent whenever the wooden login screen is displayed.

// app_foreground: must be sent whenever the app enters the "foreground" and the user is unregistered
//   a.k.a. is in "Try Wunderlist" mode. For iOS this would mean applicationWillEnterForeground:
//   for Windows it means whenever the app is maximized from the tray menu.

// signup: must be sent when the user presses the signup button in the login screen.

// login: must be sent when the user presses the login button in the login screen.

define('helpers/TrackingService',[

  'application/runtime',

  'wunderbits/helpers/date',

  'wunderbits/lib/createUID',

  'wunderbits/WBSingleton'

], function (runtime, DateHelper, createUID, WBSingleton, undefined) {

  

  var $ = runtime.$;

  var config = runtime.config;

  var uuid;

  var _ready = new $.Deferred();

  return WBSingleton.extend({

    'init': function () {

      var self = this;

      // no tracking on dev environments
      if (!config.name || !config.tracking) {
        return;
      }

      runtime.ready.done(function () {

        // track custom events
        runtime.on('trackingService', self.trackEvent);

        // wait until settings are fetched from storage
        runtime.settings.hasFetched.done(function () {

          // track initial load
          runtime.trigger('trackingService', 'app_foreground');
          // track page foreground changes
          runtime.on('page:visible', function () {
            runtime.trigger('trackingService', 'app_foreground');
          });

          // get uuid, if no uuid create it
          uuid = runtime.settings.attributes.uuid;
          if (!uuid) {
            uuid = createUID();
            runtime.settings.save({'uuid': uuid});
          }

          _ready.resolve();
          console.log('TS Ready', uuid);
        });
      });
    },

    'trackEvent': function (eventString, elementPath) {

      if (eventString && runtime.env.isOnline()) {
        _ready.done(function () {

          // {
          //    "uuid": [UUID],
          //    "event": [EVENT],
          //    "time": "2013-10-09T23:34:11Z"
          // }

          var data = {
            'event': eventString
          };

          if (runtime.user.isUnregistered()) {
            data.uuid = uuid;
          }
          else {
            data.user_id = runtime.user.id;
          }

          if (elementPath) {
            data.params = {
              'element': elementPath
            };
          }

          runtime.io.post('/track', data);
        });
      }
    }
  });
});
define('wunderbits/WBApplication',[

  './WBRuntime',
  './WBEventEmitter',
  './mixins/WBDestroyableMixin',
  './mixins/WBBindableMixin'

], function (
  WBRuntime,
  WBEventEmitter,
  WBDestroyableMixin, WBBindableMixin,
  undefined
) {

  

  var _super = WBEventEmitter.prototype;

  return WBEventEmitter.extend({

    'initialize': function () {

      var self = this;

      WBBindableMixin.applyTo(self);
      WBDestroyableMixin.applyTo(self);

      _super.initialize.apply(self, arguments);
    }
  });
});
define('backend/io/ajax',[

  'application/runtime',

  'wunderbits/helpers/SafeParse',

  'wunderbits/lib/createUID'

], function(runtime, SafeParse, createUID, undefined) {

  

  var $ = runtime.$;

  function beforeSend (xhr, options) {

    var url = options.url;


    if (!url || typeof url !== 'string') {

      return;
    }

    options.multipart && (options.contentType = false);
    xhr.setRequestHeader('Content-Type', options.contentType);

    return xhr;
  }

  // Setup jQuery.ajax for Cross-Origin requests
  // All ajax is json in the app
  $.ajaxSetup({

    'beforeSend': beforeSend,
    'contentType': 'application/json; charset=utf-8',
    'crossDomain': true,
    'dataType': 'json',
    'xhrFields': {

      'withCredentials': true
    }
  });

  // export a new copy of ajax, shared by io and ioGeneric
  // TODO: improve this
  function init () {

    return (function () {

      return function ajax (url, options) {

        var xhr, provider;
        var loadStarted = false;
        var requestTime, loadStart;

        // get access to original xhr object in order to add xhr '2' type progress event handlers
        // no way to attach xhr progress handlers through jqXHR
        xhr = $.ajaxSettings.xhr();
        provider = function () {

          return xhr;
        };

        // request start (request sent)
        xhr.onloadstart = function () {

          requestTime = Date.now(); //e.timeStamp;
        };

        // download start (request responded to)
        xhr.onprogress = function () {

          if (!loadStarted) {

            loadStart = Date.now(); //e.timeStamp;
            loadStarted = true;
          }
        };

        // download complete
        xhr.onload = function (e) {

          var now = Date.now();

          if (e.target.status === 200) {

            var loadDuration = now - loadStart; //e.timeStamp;
            var latency = loadStart - requestTime;

            // url is within this request closure
            // console.log(url, '[context:', options.context, ', latency: ', latency, ', download: ', loadDuration, ']');

            // only send benchmarks for requests against our api
            if (/api\.wunderlist\./.test(url)) {

              // for timeline
              runtime.trigger('timeline:api', {

                'start': requestTime,
                'end': now,
                'duration': now - requestTime,
                'latency': latency,
                'download': loadDuration,
                'url': url,
                'context': options.context
              });

              runtime.trigger('analytics:APIBenchmark-Latency:' + encodeURIComponent(url), options.context, latency);
              runtime.trigger('analytics:APIBenchmark-DownloadTime:' + encodeURIComponent(url), options.context, loadDuration);
            }
          }
        };

        var request = $.ajax(url, {

          'xhr': provider,
          'type': options.type,
          'data': options.data,
          'headers': options.headers,
          'timeout': options.timeout
        });

        return request.done(function (data, textStatus, jqXHR) {

          if (typeof data === 'string') {

            data = SafeParse.json(data);
          }

          options.success && options.success(data, textStatus, jqXHR);

        }).error(function (jqXHR, textStatus, errorThrown) {

          jqXHR.response = jqXHR.response || {};

          // this does not work with cross-domain firefox, it will always return an empty string
          // yay mozilla!!
          var contentType = (jqXHR.getResponseHeader('content-type') || '').split(';')[0];
          if (typeof jqXHR.responseText === 'string' && (/application\/json/.test(contentType) || runtime.env.isFirefox())) {

            jqXHR.response.data = SafeParse.json(jqXHR.responseText);
          }

          if (typeof options.error === 'function') {
            options.error(jqXHR, textStatus, errorThrown);
          }
        });
      };
    })();
  }

  return init;
});
define('backend/io/postMessageFrame',[

  'wunderbits/lib/createUID',
  'wunderbits/helpers/SafeParse'

], function(createUID, SafeParse, undefined) {

  

  var global = window;

  var requests = {};
  function uid () {

    // generate a random id
    var id = createUID();

    // ensure uniqueness of the id
    if (id in requests) {

      return createUID();
    }

    return id;
  }

  function FakeXHR (request, response) {

    this.request = request;
    this.response = response;
    this.status = response.status;
  }

  FakeXHR.prototype = {

    getResponseHeader: function (key) {

      if (key && this.response && this.response.headers) {

        return this.response.headers[key.toLowerCase()];
      }
    }
  };

  function onResponseMessage (e) {

    var response = SafeParse.json(e.data);
    // var origin = e.origin;
    // var sourceWindow = e.source;

    var contentType = (response.headers['content-type'] || '').split(';')[0];
    if (typeof response.data === 'string' && contentType === 'application/json') {
      response.data = SafeParse.json(response.data);
    }

    var request = requests[response.id];
    if (request) {

      var xhr = new FakeXHR(request, response);
      var status = response.status;

      if (status >= 200 && status < 300 || status === 304) {

        request.success && request.success(response.data, response.statusText, xhr);
      }
      else {

        request.error && request.error(xhr, response.statusText, response.status);
      }
    }
  }

  // export a new copy of ajax, shared by io and ioGeneric
  // TODO: improve this
  function init () {
    return function () {

      var proxyFrame;

      function ajax (url, options) {

        options.url = url;
        options.id = uid();
        requests[options.id] = options;

        proxyFrame.contentWindow.postMessage(JSON.stringify(options), proxyFrame.origin);
      }

      ajax.initProxyFrame = function (proxyHost) {

        // IE < 10
        if (global.attachEvent && global.ActiveXObject && !global.msIndexedDB) {

          var proxyUrl = proxyHost + '/cors.html';
          proxyFrame = document.createElement('iframe');
          proxyFrame.style.width   = '1px';
          proxyFrame.style.height  = '1px';
          proxyFrame.style.display = 'none';
          proxyFrame.origin = proxyHost;
          proxyFrame.src = proxyUrl;
          document.getElementsByTagName('head')[0].appendChild(proxyFrame);

          global.attachEvent('onmessage', onResponseMessage);
        }
      };

      return ajax;
    }();
  }

  return init;

});
define('backend/io/XHRUploader',[

  'wunderbits/lib/dependencies',
  'wunderbits/WBSingleton',
  'wunderbits/mixins/WBEventsMixin'

], function (
  dependencies,
  WBSingleton, WBEventsMixin,
  undefined
) {

  

  var $ = dependencies.$;
  var _ = dependencies._;

  return WBSingleton.extend({

    'upload': function (url, file, headers) {

      // Evented promise
      var deferred = new $.Deferred();
      var promise = deferred.promise();
      WBEventsMixin.applyTo(promise);

      // use XHR2 for upload
      var xhr = new XMLHttpRequest();
      xhr.open('PUT', url, true);

      // publish state changes
      xhr.onreadystatechange = function () {
        var state = xhr.readyState;
        if (state === 4) {
          xhr.file = null;
          xhr.status === 200 && promise.trigger('change:state', 2);
          deferred[(xhr.status !== 200) ? 'reject': 'resolve'](xhr);
        }
      };

      // pubish progress on the evented promise
      xhr.upload.addEventListener('progress', function (e) {
        // handle file deletion by the OS
        if (xhr.file.size === 0 && e.total !== 0) {
          deferred.reject(xhr, 'error:fileDeleted');
        }
        // everything okay, go on
        else if (e.lengthComputable) {
          promise.trigger('change:progress', e.loaded, e.total);
        }
      });

      xhr.addEventListener('error', function () {
        deferred.reject(xhr);
      }, false);

      // append headers
      headers = headers || {};
      for (var key in headers) {
        xhr.setRequestHeader(key, headers[key]);
      }

      // expose xhr functions
      promise.send = _.bind(function () {
        promise.trigger('change:state', 1);
        // try uploading file
        try {
          xhr.send(file);
          xhr.file = file;
        }
        // catch file deletion
        catch (e) {
          deferred.reject(xhr, 'error:fileDeleted');
        }
        return promise;
      }, promise);

      // TODO: why do we nee these binds here
      promise.abort = _.bind(function () {
        promise.trigger('upload:abort');
        xhr.abort();
        return promise;
      }, promise);

      // expose $.ajax compatible functions
      promise.success = function success (fn) {
        typeof fn === 'function' && promise.done(fn);
        return promise;
      };

      promise.error = function error (fn) {
        typeof fn === 'function' && promise.fail(fn);
        return promise;
      };

      // clean up after error
      promise.on('error', function () {
        xhr.file = null;
      });

      return promise;
    }
  });
});
// GENERIC BASE IO CLASS
// extend and use to create io modules on runtime
// returns class

define('backend/IOBase',[

  'application/runtime',

  'urls',

  'backend/io/ajax',
  'backend/io/postMessageFrame',
  'backend/io/XHRUploader',

  'helpers/PlatformHeaders',

  'wunderbits/WBClass'

], function(

  runtime,
  urls,
  ajaxTransport, postMessageTransport, XHRUploader,
  PlatformHeaders,
  WBClass,
  undefined

) {

  

  var _super = WBClass.prototype;
  var global = runtime.global;
  var location = global.location;
  var config = runtime.config;

  var urlMap = urls.urlMap || {};
  var baseUrl = urls.baseUrl || '';

  var absoluteUrlRegexp = /^(https?:)?\/\//;
  var wlURLRegexp = /^(https?:)?\/\/\w+\.wunderlist.com\//;

  var $ = runtime.$;
  var _ = runtime._;

  return WBClass.extend({

    'initialize': function (options) {

      options = options || {};

      var self = this;
      _super.initialize.apply(self, arguments);

      // Select an available transport backend
      // self.io is equal to the transport and augmented by #defineVerb
      // If IE < 10, use postMessage backend
      if (!options.jsonp && ('XDomainRequest' in global) && !('msIndexedDB' in global)) {
        self.io = postMessageTransport();
        self.io.initProxyFrame(options.proxyHost);
      }
      else {
        self.io = ajaxTransport();
      }

      // create io verbs on class
      $.each(['get', 'post', 'put', 'delete'], self.defineVerb);

      // uploader
      self.io.upload = self.upload;

      // compile routes for faster lookup
      self.routes = self.compileRoutes(self.routes, self.tokens);
      self.authFreeRoutes = self.compileRoutes(self.authFreeRoutes, self.tokens);
    },

    'compileRoutes': function (routes, tokens) {

      // no routes defined
      if (!routes) {
        return undefined;
      }

      function markTokens (rule) {
        return rule.replace(/\{\{(\w+)\}\}/g, function (match, token) {
          return tokens[token];
        });
      }

      var compiled = {};
      for (var service in routes) {
        var rules = routes[service];
        rules = rules.map(markTokens);
        var regexp = new RegExp('^/(' + rules.join('|') + ')(\\?|$)');
        var host = config[service].host;
        compiled[host] = regexp;
      }

      return compiled;
    },

    // Change relative URLs to point to the correct host
    // extend is subclass
    'resolveUrl': function (url) {

      var self = this, resolved;

      // Don't touch absolute urls
      if (absoluteUrlRegexp.test(url)) {
        return url;
      }

      // if a known route
      if (self.routes) {
        resolved = self.resolveRoute(url);
      }

      // if a known asset
      if (!resolved && urlMap[url]) {
        resolved = baseUrl + urlMap[url];
      }

      // just make the url relative to the current domain
      if (!resolved) {
        resolved = self.normalizeUrl(url);
      }

      return resolved;
    },

    // resolve known routes to absolute urls
    'resolveRoute': function (route) {

      var self = this;
      for (var host in self.routes) {
        var regexp = self.routes[host];
        if (regexp.test(route)) {
          return host + route;
        }
      }
    },

    // make relative URLs absolute
    'normalizeUrl': function (url) {
      return location.protocol + '//' + location.host + url;
    },

    // add/remove/augment headers
    // extend in subclass
    'extendHeaders': function (headers, url) {

      var self = this;

      var isAbsoluteURL = absoluteUrlRegexp.test(url);
      var isWLUrl = !isAbsoluteURL || wlURLRegexp.test(url);

      // url is used by api extendHeaders
      headers = headers || {};

      // Also add custom headers needed for client-identification
      if(isWLUrl) {
        _.extend(headers, PlatformHeaders.headers);
      }

      // We only speak JSON
      _.extend(headers, {
        'Content-Type': 'application/json',
        'Accept': 'application/json'
      });

      // skip auth headers for certain urls
      if (self.authFreeRoutes) {
        for (var host in self.authFreeRoutes) {
          var regexp = self.authFreeRoutes[host];
          if (regexp.test(url)) {
            return headers;
          }
        }
      }

      // Add Auth token for relative urls that need auth
      // Don't modify any existing auth headers
      if (isWLUrl && !headers.Authorization) {
        self.setAuthorization(headers);
      }

      return headers;
    },

    'setAuthorization': function () {
      // base class, does nothing
    },

    // Create functions for http verbs
    'defineVerb': function (i, type) {

      var self = this;

      self.io[type] = function (url, data, headers, timeout, context) {

        if (!url) {
          throw new Error('need a url for ajax calls');
        }

        headers = headers || {};
        headers = self.extendHeaders(headers, url);

        var deferred = new $.Deferred();
        var promise = deferred.promise();

        // resolve the url to an absolute url
        url = self.resolveUrl(url);

        // format the data
        if (typeof data === 'object') {
          // convert to query params for get requests
          if (type === 'get') {
            var params = [], key;
            for (key in data) {
              params.push(key + '=' + encodeURIComponent(data[key]));
            }
            params.length && (url = url + '?' + params.join('&'));
            data = undefined;
          }
          // for other methods, Serialize the data as json
          else {
            data = JSON.stringify(data);
          }
        }

        // send the request
        self.io(url, {
          'type': type.toUpperCase(),
          'data': data,
          'headers': headers,
          'success': deferred.resolve,
          'error': deferred.reject,
          'timeout': timeout,
          'context': context
        });

        promise.success = function success (fn) {

          typeof fn === 'function' && promise.done(fn);
          return promise;
        };

        promise.error = function error (fn) {

          typeof fn === 'function' && promise.fail(fn);
          return promise;
        };

        return promise;
      };
    },

    'upload': function (url, file, headers) {

      var self = this;

      // resolve the url to an absolute url
      url = self.resolveUrl(url);

      // upload the file
      return XHRUploader.upload(url, file, headers);
    }
  });
});

define('backend/IOWunderapi',[

  'application/runtime',

  'backend/IOBase'

], function (
  runtime,
  IoBaseClass,
  undefined
) {

  // Main IO module for the API
  // extends base io class with api specific header and endpoint logic
  // is self initializing, creates runtime.io

  

  var _super = IoBaseClass.prototype;
  var config = runtime.config;

  var appType = 'web';

  var IoClass = IoBaseClass.extend({

    'tokens': {
      'RemoteId': '([a-zA-Z0-9-_]{11}|localId(:[\\w-]+){4})',
      'NumericId': '[0-9]+'
    },

    'routes': {
      'api': [
        'signup',
        'login',
        'resetpassword',
        'forgotpassword',
        'blacklist',
        'quota',
        'confirm',
        'resendconfirmation',
        'batch',
        'inbox/tasks',
        'shares/fb',
        'me',
        'me/settings',
        'me/lists',
        'me/tasks',
        'me/reminders',
        'me/services',
        '{{RemoteId}}/tasks',
        'AH[a-zA-Z0-9-_]{9}'
      ],
      'comments': [
        'messages/overview',
        'lists/{{RemoteId}}/messages(/{{NumericId}})?',
        'tasks/{{RemoteId}}/messages(/{{NumericId}})?',
        'lists/{{RemoteId}}/read(/{{NumericId}})?',
        'tasks/{{RemoteId}}/read(/{{NumericId}})?'
      ],
      'files': [
        'change_sets',
        'files',
        'files/{{NumericId}}(/parts(/[0-9]+)?)?',
        'lists/{{RemoteId}}/files(/{NumericId}})?',
        'tasks/{{RemoteId}}/files(/{NumericId}})?'
      ],
      'invitations': [
        'invites'
      ],
      'payment': [
        'adyen/cancel',
        'adyen/generate_url',
        'products/adyen',
        'products/6wunderkinder',
        'subscriptions/group',
        'subscription/memberships',
        'invoices'
      ],
      'tracking': [
        'track'
      ]
    },

    'authFreeRoutes': {
      'api': [
        'signup',
        'login',
        'resetpassword',
        'forgotpassword',
        'blacklist',
        'confirm',
        'AH[a-zA-Z0-9-_]{9}'
      ],
      'payment': [
        'products/adyen',
        'products/6wunderkinder'
      ]
    },

    'initialize': function () {

      var self = this;
      _super.initialize.call(self, {
        'proxyHost': config.api.host
      });

      var env = runtime.env;
      if (env.isChromeApp()) {
        appType = 'chrome';
      } else if (runtime.isBrowserExtension()) {
        appType = 'extension';
      } else if (env.isFirefoxApp()) {
        appType = 'firefox';
      }

      runtime.io = self.io;
    },

    'setAuthorization': function (headers) {
      var token = runtime.user.get('token');
      headers.Authorization = 'Bearer ' + token;
    }
  });

  var io = new IoClass();
  return io;
});
define('backend/IOWunderRest',[

  'urls',

  'application/runtime',

  'backend/IOBase',

  'backend/sync/trackers',

  'wunderbits/lib/createUID'

], function (urls, runtime, IoBaseClass, Trackers, createUID, undefined) {

  // Main IO module for the API
  // extends base io class with api specific header and endpoint logic
  // is self initializing, creates runtime.io

  

  var _super = IoBaseClass.prototype;
  var config = runtime.config;
  var $ = runtime.$;
  var _ = runtime._;
  var Backbone = runtime.Backbone;

  var IoClass = IoBaseClass.extend({

    'tokens': {
      'RemoteId': '([a-zA-Z0-9-_]{11}|localId(:[\\w-]+){4})'
    },

    'routes': {
      'files': [
        'change_sets',
        'files',
        'lists/{{RemoteId}}/files(/[0-9]+)?',
        'tasks/{{RemoteId}}/files(/[0-9]+)?'
      ]
    },

    'initialize': function () {

      var self = this;
      _super.initialize.call(self, {
        'proxyHost': config.api.host
      });

      // rest
      self.io.restfulIO = self.restfulIO;

      // sync
      self.io.sync = self.sync;

      // expose on runtime
      runtime.ioRest = self.io;

      // get failsafe model for restful sync
      runtime.once('db:ready', function () {

        var changeMaps = Trackers.getChangeMaps();
        self.syncQueue = changeMaps.restFailSafe;
      });

      self.setupSyncBinds();
    },

    'setAuthorization': function (headers) {
      var token = runtime.user.get('token');
      headers.Authorization = 'Bearer ' + token;
    },

    'normalizeUrl': function () {
      console.warn('Not a valid URL for IOWunderRest');
    },

    'setupSyncBinds': function () {

      var self = this;

      // check syncQueue
      runtime.on('sync:start', function () {

        self.getSyncQueueLength() && self.tryToSyncFromSyncQueue();
      });
    },

    // Ajax Sync
    'sync': function (method, instance, options) {

      var self = this;
      options = options || {};

      if (method === 'create' && instance.collection) {

        // Create only remote model
        if (instance.collection.url && options.forRemote) {
          self.io.post(instance.collection.url, instance.attributes)
            .done(function () {
              self.handleSyncDone(method, instance, options);
            })
            .fail(function (xhr) {
              self.handleSyncFail(method, instance, options, xhr);
            });
        }

        // unless we already have an ID
        // PS: we can't handle ID change... we won't
        if (instance.id) {
          Backbone.sync.call(Backbone, method, instance, options);
        }
      }

      // for update, feel free to sync to DB
      else if (method === 'update') {
        Backbone.sync.call(Backbone, method, instance, options);
        if (options.forRemote) {
          self.io.put(instance.url, instance.changed)
            .done(function () {
              self.handleSyncDone(method, instance, options);
            })
            .fail(function () {
              self.handleSyncFail(method, instance, options);
            });
        }
      }

      else if (method === 'delete') {

        Backbone.sync.call(Backbone, method, instance, options);

        if (options.forRemote) {
          self.io['delete'](instance.url)
            .done(function () {
              self.handleSyncDone(method, instance, options);
            })
            .fail(function () {
              self.handleSyncFail(method, instance, options);
            });
        }
      }
    },

    'handleSyncDone': function (method, instance, options) {

      options.success && options.success();
    },

    'handleSyncFail': function (method, instance, options, xhr) {

      var self = this;

      if (xhr && xhr.status === 401) {

        self.stopAndLogout();
      }
      else {
        self.queueForRemoteSyncing(method, instance);
        options.error && options.error();
      }
    },

    // normal rest operations!
    // DO NOT USE FOR SYNCING MODEL INSTANCE UPDATES
    'restfulIO': function (method, url, data) {

      var self = this;

      var deferred = new $.Deferred();

      var args = arguments;

      if (method && url) {

        self.io[method](url, data)
            .done(deferred.resolve)
            .fail(deferred.reject);
      }
      else {
        deferred.reject();
      }

      deferred.fail(function (xhr) {

        if (xhr && xhr.status === 401) {

          self.stopAndLogout();
        }
        else {

          self.queueRestForSyncing.apply(self, args);
        }
      });

      return deferred.promise();
    },

    // backbone crud operations
    // USE FOR SYNCING MODULES WITH RESTFUL URLS
    'restSync': function (method, url, data) {

      var self = this;

      var deferred = new $.Deferred();

      var restMap = {

        'create': 'post',
        'update': 'put',
        'delete': 'delete'
      };

      var restMethod = restMap[method];

      if (restMethod && url) {

        self.io[restMethod](url, data)
            .done(deferred.resolve)
            .fail(deferred.reject);
      }
      else {
        deferred.reject();
      }

      return deferred.promise();
    },

    'queueForRemoteSyncing': function (method, instance) {

      var self = this;
      var syncQueue = self.syncQueue;

      // very basic, and particulary dumb failsafe for restful syncs
      // one method is stored per instance.id, delete will overwrite updates
      // updates will extend/update current failed update data

      var currentOpData = syncQueue.get(instance.id) || {};

      var thisOpData = {
        'method': method,
        'url': instance.url
      };

      if (method === 'update') {

        // fetch current queued changes
        var queuedChanges = currentOpData.data || {};
        var theseChanges = instance.changed;
        var changes = _.extend({}, queuedChanges, theseChanges);

        thisOpData.data = changes;
      }

      syncQueue.save(instance.id, thisOpData);
    },

    'queueRestForSyncing': function (method, url, data) {

      var self = this;
      var syncQueue = self.syncQueue;

      var opData = {

        'method': method,
        'url': url,
        'data': data
      };

      syncQueue.save(createUID(), opData);
    },

    'popSyncQueueId': function () {

      var self = this;

      for (var key in self.syncQueue.attributes) {
        if (self.syncQueue.attributes.hasOwnProperty(key) && key !== 'id') {
          return key;
        }
      }
    },

    // verbose for the lulz
    'tryToSyncFromSyncQueue': function () {

      var self = this;

      var syncQueue = self.syncQueue;

      var queuedId = self.popSyncQueueId();

      var restOps = ['put', 'delete'];

      if (queuedId) {

        var tryDone = new $.Deferred();
        var data = syncQueue.get(queuedId);

        var success = function () {

          syncQueue.unset(queuedId).save();
          tryDone.resolve();
        };

        var fail = function (xhr) {

          if (xhr && xhr.status === 401) {
            self.stopAndLogout();
          }
          else if (data.method.toLowerCase() === 'delete' && xhr.status === 404 ) {
            // clean up 404s on deletes
            syncQueue.unset(queuedId).save();
          }
          tryDone.resolve();
        };

        var isRestOp = _.contains(restOps, data.method);
        if (data && !isRestOp) {
          self.restSync(data.method, data.url, data.data)
            .done(success)
            .fail(fail);
        }
        else if (data && isRestOp) {
          self.restfulIO(data.method, data.url, data.data)
            .done(success)
            .fail(fail);
        }

        tryDone.done(function () {

          if (self.getSyncQueueLength()) {
            _.delay(self.tryToSyncFromSyncQueue, 500);
          }
        });
      }
    },

    'getSyncQueueLength': function () {

      var self = this;
      var attr = self.syncQueue && self.syncQueue.attributes;
      var length = Object.keys(attr || {}).length;
      if (length > 0) {
        length = length - 1;
      }
      return length;
    },

    'stopAndLogout': function () {
      runtime.isSyncing = false;
      runtime.trigger('sync:end');
      runtime.user.forceLogout();
    }
  });

  var io = new IoClass();
  return io;
});
define('backend/IOBetaService',[

  'application/runtime',

  'backend/IOBase'

], function(runtime, IoBaseClass, undefined) {

  // IO module for beta service checks
  // is self initializing, creates runtime.ioBetaService

  

  var _super = IoBaseClass.prototype;

  var host = 'http://beta.6wunderkinder.com';

  var IoClass = IoBaseClass.extend({

    'initialize': function () {

      var self = this;
      _super.initialize.call(self, {
        'proxyHost': host
      });

      runtime.ioBetaService = self.io;
    },

    'setupSyncBinds': function () {}
  });

  var io = new IoClass();
  return io;
});
define('application/Application',[

  'application/runtime',

  'helpers/TrackingService',

  'wunderbits/WBApplication',

  'backend/IOWunderapi',
  'backend/IOWunderRest',
  'backend/IOBetaService'

], function (
  runtime,
  TrackingService,
  WBApplication,
  IOWunderapi, IOWunderRest, IOBetaService,
  undefined
) {

  

  var _super = WBApplication.prototype;

  return WBApplication.extend({

    'initialize': function (name) {

      var self = this;
      _super.initialize.apply(self, arguments);

      if (runtime.env.isPackagedApp() || (!runtime.isFrame() && !runtime.isEmbedded())) {
        runtime.$('body').attr('id', 'wunderlist-base');
      }

      if (runtime.env.isChromeOS && runtime.env.isArmProcessor()) {
        runtime.$('body').addClass('chrome-os');
      }

      // generic loader for api slowness
      // e.g. waiting for shared list to load for minisite, etc.
      var $loading = runtime.$('<div id="initial-loader" class="state loading"><span class="dark"></span></div>');
      runtime.$('body').append($loading);
      runtime.once('interface:ready', function () {

        $loading.remove();
      });

      runtime.application = name;

      TrackingService.init();
    }
  });
});
/*
* jQuery++ - 1.0.0 (2012-11-23)
* http://jquerypp.com
* Copyright (c) 2012 Bitovi
* Licensed MIT
*/
define('vendor/jquerypp/event/swipe',['vendor/jquery', 'vendor/jquerypp/event/livehack'], function ($) {
	var isPhantom = /Phantom/.test(navigator.userAgent),
		supportTouch = !isPhantom && typeof Touch == 'object',
		scrollEvent = "touchmove scroll",
		supportPointer =  window.navigator.msPointerEnabled !== undefined,

		// Use touch events or map it to mouse events
		touchStartEvent = supportTouch ? "touchstart" : supportPointer ? "MSPointerDown" : "mousedown",
		touchStopEvent = supportTouch ? "touchend" : supportPointer ? "MSPointerUp" : "mouseup",
		touchMoveEvent = supportTouch ? "touchmove" : "mousemove",
		data = function (event) {
			var d = event.originalEvent && event.originalEvent.touches ? event.originalEvent.touches[0] : event;
			return {
				time: (new Date).getTime(),
				coords: [d.pageX, d.pageY],
				origin: $(event.target)
			};
		};

	var swipe = $.event.swipe = {

		delay: 500,

		max: 320,

		min: 30
	};

	$.event.setupHelper([

	"swipe",

	'swipeleft',

	'swiperight',

	'swipeup',

	'swipedown'], touchStartEvent, function (ev) {
		var
		// update with data when the event was started
		start = data(ev),
			stop, delegate = ev.delegateTarget || ev.currentTarget,
			selector = ev.handleObj.selector,
			entered = this;

		function moveHandler(event) {
			if (!start) {
				return;
			}
			// update stop with the data from the current event
			stop = data(event);

			// prevent scrolling
			// if (Math.abs(start.coords[0] - stop.coords[0]) > 10) {
				// Comment from Raymond Jan. 14, 2014 :
				// Do not let this happen automatically it breaks any currently dragging elements.
				// IF you really, really, need to do this, do it in your own handler and CANCEL all drags.
				// event.preventDefault();
			// }
		};

		// Attach to the touch move events
		$(document.documentElement).bind(touchMoveEvent, moveHandler).one(touchStopEvent, function (event) {
			$(this).unbind(touchMoveEvent, moveHandler);
			// if start and stop contain data figure out if we have a swipe event
			if (start && stop) {
				// calculate the distance between start and stop data
				var deltaX = Math.abs(start.coords[0] - stop.coords[0]),
					deltaY = Math.abs(start.coords[1] - stop.coords[1]),
					distance = Math.sqrt(deltaX * deltaX + deltaY * deltaY);

				// check if the delay and distance are matched
				if (stop.time - start.time < swipe.delay && distance >= swipe.min && distance <= swipe.max) {
					var events = ['swipe'];
					// check if we moved horizontally
					if (deltaX >= swipe.min && deltaY < swipe.min) {
						// based on the x coordinate check if we moved left or right
						events.push(start.coords[0] > stop.coords[0] ? "swipeleft" : "swiperight");
					} else
					// check if we moved vertically
					if (deltaY >= swipe.min && deltaX < swipe.min) {
						// based on the y coordinate check if we moved up or down
						events.push(start.coords[1] < stop.coords[1] ? "swipedown" : "swipeup");
					}

					// trigger swipe events on this guy
					$.each($.event.find(delegate, events, selector), function () {
						this.call(entered, ev, {
							start: start,
							end: stop
						})
					})

				}
			}
			// reset start and stop
			start = stop = undefined;
		})
	});

	return $;
});
define('applications/main/Application',[

  'application/runtime',
  'applications/main/Router',

  'backend/database',
  'backend/languageManager',

  'collections/CollectionManager',

  'models/UserModel',
  'models/UserSettingsModel',
  'models/LanguageModel',

  'backend/sync',
  'backend/timer',
  'backend/RealtimeManager',

  'helpers/GoogleAnalytics',
  'helpers/iyfRules',
  'helpers/Positions',
  'helpers/PrintHelper',
  'helpers/socialPrompts',
  'helpers/unload',

  'views/ApplicationView',

  'application/Application',
  'vendor/jquerypp/event/fastfix',
  'vendor/jquerypp/event/drag',
  'vendor/jquerypp/event/drag/limit',
  'vendor/jquerypp/event/drag/scroll',
  'vendor/jquerypp/event/swipe',
  'vendor/jquerypp/event/drop',
  'vendor/jquerypp/dom/animate'

], function (
  runtime, Router,
  database, LanguageManager,
  CollectionManager,
  UserModel, UserSettingsModel, LanguageModel,
  Sync, Timer, RealtimeManager,
  GoogleAnalytics, IyfRules, PositionsHelper, PrintHelper, SocialPromptsHelper, Unload,
  ApplicationView, Application, jqppFastfix, jqppDrag, jqppDragLimit,
  jqppScroll, swipe, jqppDrop, jqppAnimate,
  undefined
) {

  

  var $ = runtime.$;
  var _ = runtime._;
  var config = runtime.config;

  var _super = Application.prototype;
  var global = window;

  return Application.extend({

    // initialize also runs the app
    'initialize': function () {

      var self = this;
      _super.initialize.apply(self, arguments);

      GoogleAnalytics.init();

      // defer initialization until after DB is setup
      database.init().then(function () {

        runtime.trigger('timeline:start', 'main_app_started');
        runtime.trigger('timeline:start', 'refresh_start');
        runtime.trigger('timeline:start', 'lists_loaded');

        // Initilialize Env module initialize before initialize views that depend on it!
        self.sync = new Sync();

        self.runtime = runtime;
        runtime.trigger('set:user', new UserModel());
        runtime.trigger('set:settings', new UserSettingsModel());
        runtime.trigger('set:language', new LanguageModel());

        Timer.init();

        self.realtime = new RealtimeManager();
        LanguageManager.init();
        self.collectionManager = new CollectionManager();

        PrintHelper.init();

        Unload.init();

        self.appView = new ApplicationView();
        self.router = new Router({
          'outlet': self.appView
        });

        self.bindTo(runtime, 'timer:start', Timer.start, Timer);
        self.bindTo(runtime, 'timer:stop', Timer.stop, Timer);

        // When everything required for app execution is ready
        runtime.ready.done(function () {

          self.socialPrompts = new SocialPromptsHelper();

          self.iyf = new IyfRules();
          self.router.start();

          var appPlatform = 'www';
          if (runtime.isInstalledOnChrome()) {
            appPlatform = 'chrome';
          }
          runtime.trigger('analytics:Application:start', appPlatform);

          // Check for updates immediately, skip on packaged-app & extension
          if (!runtime.isBrowserExtension() && !runtime.env.isPackagedApp()) {
            config.name && self.checkForUpdates();
          }
        });

      });
    },

    'getVersionURL': function () {
      var location = runtime.global.location;
      var url = location.protocol + '//' + location.host;
      return url + '/version?rand=' + Math.random();
    },

    'checkForUpdates': function() {

      var self = this;
      var appHash = global.gitHash && global.gitHash.split(/[\[\]]/)[1];
      var json;

      appHash && $.ajax(self.getVersionURL(), {

        'dataType': 'text',
        'type': 'GET'
      }).done(function (data) {

        try {

          json = JSON.parse(data);

        }
        catch (e) {

          runtime.trigger('analytics:Application:failedToFetchVersionFile', e);
        }

        if (json) {

          var lastHash = json.deploy && json.deploy.hash;

          // App reload function. retains the hash & uses a cache buster
          var reload = function reload (label) {

            runtime.trigger('analytics:Application:reloadForUpdate', label);

            // wait half a second so that analytics make it out
            setTimeout(function () {

              runtime.publish('application:reloading');
              var location = global.location;
              location.href = location.pathname + '?_rand=' + Math.random() + location.hash;
            }, 500);
          };

          // If the hashes match, check again after every 30 minutes
          if (appHash.indexOf(lastHash) === 0) {

            setTimeout(self.checkForUpdates, 1800 * 1000);
          }
          // But if they don't, reload the app when the user goes idle
          else {

            runtime.trigger('analytics:Application:updateAvailable');

            // Tab not visible, reload
            if (!runtime.isVisible()) {

              reload('pageNotVisible');
            }
            // Tab is visible, wait for the user to switch to another tab/app, or go idle
            else {

              runtime.once('page:hidden', _.bind(reload, null, 'pageHidden'));

              // track idle time
              var idleTime = 0;
              var timerIncrement = function () {

                idleTime = idleTime + 1;
                if (idleTime > 10) {
                  // idle for 10 minutes?
                  reload('userIdle');
                }
              };

              //Increment the idle time counter every minute.
              global.setInterval(timerIncrement, 60000); // 1 minute

              //Zero the idle timer on mouse movement.
              $(document).mousemove(function () {
                idleTime = 0;
              }).keypress(function () {
                idleTime = 0;
              });
            }
          }
        }
      });
    }
  });
});
define('languages/english',[],function() {
return {
'name': 'english',
'data': {"actionbar_print_selected_item":"Print Selected Item","actionbar_print_$_selected_items_plural":"Print $ Selected Items","actionbar_email_selected_item":"Email Selected Item","actionbar_email_$_selected_items_plural":"Email $ Selected Items","actionbar_sort_alphabetically":"Sort Alphabetically","actionbar_sort_due_date":"Sort by Due Date","actionbar_sort_assignee":"Sort by Assignee","api_error_account_already_exists":"An account with this email address already exists.","api_error_connection_error":"Whoops, it seems there was a problem reaching the server. Please try again.","api_error_general_error":"Whoops, the server cannot be reached at the moment. Please try again.","api_error_incorrect_login":"The email address or password you entered is incorrect.","api_error_incorrect_password":"The password you entered is incorrect.","api_error_service_down":"A key part of the WunderAPI service is down.","api_error_unknown":"An unexpected and unhandled error has occurred.","api_error_validation_error_unable_to_signup":"We were unable to sign you up with the given email address.","api_error_not_a_beta_user":"You are not a member of the Wunderlist beta.","button_back":"Back","button_cancel":"Cancel","button_confirm":"Confirm","button_download":"Download","button_change":"Change","button_choose":"Choose","button_connect":"Connect","button_connect_facebook":"Connect With Facebook","button_continue":"Continue","button_delete":"Delete","button_disconnect":"Disconnect","button_dismiss":"Dismiss","button_done":"Done","button_edit":"Edit","button_get_started":"Let’s Get Started","button_go_back":"Go Back","button_go_back_sentence":"Go Back.","button_learn_more":"Learn More","button_go_back_to_login":"Go Back to Login","button_go_to_web_app":"Go to the Web App","button_join_now":"Join Now","button_log_in":"Log In","button_log_in_with_$":"Log In With $","button_log_out":"Log Out","button_log_in_facebook":"Log In With Facebook","button_next":"Next","button_no":"No","button_no_due_date":"No due date","button_ok":"OK","button_remove_due_date":"Remove Due Date","button_remove_reminder":"Remove Reminder","button_email_list":"Email List","button_print_list":"Print List","button_reset_password":"Password Reset","button_retry":"Retry","button_save":"Save","button_send":"Send","button_sign_up":"Sign Up","button_sign_up_with_$":"Sign Up With $","button_sign_up_for_free":"Sign Up for Free","button_sign_up_facebook":"Sign Up With Facebook","button_support_center":"Support Center","button_subscribe":"Awesome, Yes Please!","button_try_again":"Try Again","button_try_wunderlist":"Try Wunderlist","button_yes":"Yes","coachmark_all_list_empty":"You have not added any items yet. Go ahead, and add something.","coachmark_completed_list_empty":"You have not completed any items yet. Go ahead, check some items off your lists!","coachmark_no_search_results":"No Search Results","coachmark_sharing_invite_friends_heading":"Invite Your Friends","coachmark_sharing_invite_friends_text_$":"Your friends will be able to create, remove and check off items in the list “$”.","coachmark_sharing_recent_no_contacts_heading":"No Recent Contacts","coachmark_sharing_recent_no_contacts_text_$":"Type an email address or search your contacts. Once added, your friend will be able to create, remove and check off items in the list “$”.","coachmark_assigned_to_me_list_empty":"There is nothing assigned to you","coachmark_conversations_list_empty":"There are no current conversations.","coachmark_starred_list_empty":"You have no starred items","coachmark_today_list_empty":"Congrats! You have nothing due or overdue for today","coachmark_week_list_empty":"On vacation? You have no items due for the next 7 days","error_list_not_found":"The list you are looking for cannot be found","error_share_not_created":"An issue occurred while attempting to share your list. Please try again.","error_task_not_found":"The item you are looking for cannot be found","error_page_not_found":"Page not found","error_title_not_found":"Not found","label_are_you_sure_permanently_delete_item":"Are you sure you want to permanently delete this item?","label_are_you_sure_permanently_delete_item_plural":"Are you sure you want to permanently delete these items?","label_activity_center":"Activity Center","label_are_you_sure_permanently_delete_$_list":"Are you sure you want to permanently delete the list “$”?","label_are_you_sure_permanently_delete_$_task":"Are you sure you want to permanently delete the item “$”?","label_are_you_sure_permanently_delete_task_plural":"Are you sure you want to permanently delete these items?","label_are_you_sure_permanently_delete_$_subtask":"Are you sure you want to permanently delete the subtask “$”?","label_cant_undo":"You will not be able to undo this action.","label_completed_tasks_heading":"1 Completed Item","label_$_completed_tasks_heading_plural":"$ Completed Items","label_connecting":"Connecting...","label_minisite_description_line_1":"Keep track of everything you want to do.","label_minisite_description_line_2":"Wunderlist is available for free on all major platforms.","label_minisite_share_deleted_or_no_access":"It seems that this was deleted or you don’t have access anymore.","label_minisite_contact_sender_for_info":"Please contact the person who shared this list with you for more information.","label_minisite_$_invited_you_to_the_list_$":"$1 invited you to the list $2","label_minisite_empty_list_$":"This list is currently empty, so help them get started. Simply hit the Sign Up button above, and start adding items to the list $.","label_day_0":"SUN","label_day_1":"MON","label_day_2":"TUE","label_day_3":"WED","label_day_4":"THU","label_day_5":"FRI","label_day_6":"SAT","label_delete_file":"Delete File","label_delete_list":"Delete List","label_delete_task":"Delete Item","label_delete_task_plural":"Delete Items","label_delete_subtask":"Delete Subtask","label_due_$":"Due $","label_due_on":"Due on $","label_due_date":"Due Date","label_email":"Email","label_every":"every","label_loading":"Loading...","label_logging_out":"Logging Out...","label_name":"Name","label_newsletter":"Wunderlist Newsletter","label_none":"None","label_notification":"Notification","label_oops":"Oops!","label_or":"or","label_password":"Password","label_relative_date_today":"Today","label_relative_date_today_with_date":"Today, $","label_relative_date_today_mid_sentence":"today","label_relative_date_tomorrow":"Tomorrow","label_relative_date_tomorrow_with_date":"Tomorrow, $","label_relative_date_tomorrow_mid_sentence":"tomorrow","label_relative_date_yesterday":"Yesterday","label_remind_me_at_$":"Remind me at $","label_reminder":"Reminder","label_reminder_message_$":"Just a friendly reminder: $","label_repeat_every_day":"Repeat every day","label_repeat_every_week":"Repeat every week","label_repeat_every_month":"Repeat every month","label_repeat_every_year":"Repeat every year","label_repeat_custom":"Custom...","label_repeat_day":"Every day","label_repeat_day_$_plural":"Every $ days","label_repeat_month":"Every month","label_repeat_month_$_plural":"Every $ months","label_repeat_week":"Every week","label_repeat_week_$_plural":"Every $ weeks","label_repeat_never":"Never repeat","label_repeat_year":"Every year","label_repeat_year_$_plural":"Every $ years","label_reset_password":"Reset Password","label_rights_reserved":"All Rights Reserved","label_still_fetching_tasks":"Still fetching tasks ...","label_sync":"Sync","label_time_am":"AM","label_time_day_plural":"days","label_time_week_plural":"weeks","label_time_month_plural":"months","label_time_pm":"PM","label_time_year_plural":"years","label_assign_to":"Assign to","label_unassigned":"Unassigned","label_assign_me":"Me","label_created_$":"Created $","label_created_by_$":"Created by $","label_created_on_$":"Created on $","label_created_$_by_$":"Created $1 by $2","label_created_by_$_on_$":"Created by $1 on $2","label_completed_$":"Completed $","label_completed_on_$":"Completed on $","label_completed_$_by_$":"Completed $1 by $2","label_completed_by_$_on_$":"Completed by $1 on $2","login_add_photo_hint":"Personalize your Wunderlist account by uploading your photo.","login_already_have_account":"Already have an account?","login_email_not_valid":"Please enter a valid email address.","login_empty_name":"Please enter your name.","login_empty_password":"Please enter a password.","login_password_not_valid":"Please enter a valid password.","login_empty_email":"Please enter an email.","login_enter_name":"Who Are You?","login_enter_password":"You’re Almost Done","login_enter_password_hint":"Choose a password to finish setting up your Wunderlist account.","login_forgot_password":"Forgot Password","login_forgot_password_heading":"Forgot Something?","login_forgot_password_text":"Enter the email address you registered with, and we’ll send you a reset password link.","login_no_account_yet":"Don’t have an account?","login_password_changed":"Password Updated","login_password_not_match":"The passwords you entered did not match.","login_password_reset_email_has_been_sent":"Please check your email for password reset instructions.","login_reset_password_heading":"It’s time to create your new password.","login_reset_password_success":"Just hit the button below and you’re all set to log back into your Wunderlist.","login_reset_password_success_heading":"Hooray! Your password has been successfully changed.","login_password_too_short":"A password must contain at least 5 characters.","login_sign_up":"Sign Up.","login_want_to_try_again":"Want to try again?","login_accept_terms":"By signing up you accept our $1 and $2.","logout_timeout_title":"Sync Error","logout_timeout_text":"We couldn’t synchronize your data. Do you want to retry or just logout?","mobile_tutorial_welcome_to":"Welcome to","mobile_tutorial_wunderlist_subtitle":"your beautiful and simple to-do list","notifications_desktop_enable_heading":"Enable Desktop Notifications?","notifications_no_notifications":"No Activity","notifications_no_notifications_message":"Invitations to shared lists & other activity appears here.","notifications_event_accept":"Accept","notifications_event_accepted":"Accepted","web_upgrade_ie9_not_supported":"Wunderlist does not support Internet Explorer 9. Please upgrade to $ or $ for a better experience.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Looks like you are using a device with a touch screen. Would you like to enable a touch optimized interface? You can always change this in your account settings.","web_setting_enable_touch_for_$":"Enable Touch for: $","web_settings_text_refresh_may_be_required":"Refresh may be required","rate_label":"Rate Wunderlist","rate_app_heading":"Rate and Review Wunderlist","rate_app_message_web_chrome":"Thanks for using Wunderlist, we would love to hear what you think! Please tell us by rating and reviewing Wunderlist in the Chrome Web Store ★★★★★","rate_app_button_later":"Later","rate_app_button_no":"No Thanks","rate_app_button_yes":"Rate Wunderlist Now","placeholder_add_due_today_to_inbox":"Add an item due today in “Inbox”...","placeholder_add_list":"Add a list...","placeholder_add_subtask":"Add a subtask","placeholder_add_starred_to_inbox":"Add a starred item in “Inbox”...","placeholder_add_task_to_$":"Add an item in “$”...","placeholder_add_to_inbox":"Add an item in “Inbox”","placeholder_new_list":"New List","placeholder_remind_me":"Remind me","placeholder_search":"Search...","placeholder_sharing_search":"Name or email address...","placeholder_set_due_date":"Set due date","browser_outdated_heading":"Uh oh, it looks like your web browser isn’t up to date.","browser_outdated_update":"Please update your browser","browser_outdated_explanation":"Wunderlist is built using the latest and greatest technology. To use Wunderlist, download the latest version of your browser","prenamed_list_movies":"Movies to Watch","prenamed_list_private":"Private","prenamed_list_shopping":"Shopping","prenamed_list_wishlist":"Wishlist","prenamed_list_work":"Work","prenamed_list_read_later":"Read Later","settings_account_change_email":"Change Email...","settings_account_change_password":"Change Password...","settings_account_delete_confirmation":"Type \"I am sure\"","settings_account_delete_confirmation_text":"I am sure","settings_account_drop_image":"Drop Image Here","settings_account_connect_facebook_account":"Connecting your Wunderlist account with Facebook makes sharing lists with your friends simple, fast and easy.","settings_general_12_hour":"12 Hour","settings_general_24_hour":"24 Hour","settings_general_confirm_deletion":"Confirm before deleting items","settings_general_create_new_tasks":"Add new items","settings_general_date_format":"Date Format","settings_general_language":"Language","settings_general_start_of_week":"Start of the Week","settings_general_start_of_week_sunday":"Sunday","settings_general_start_of_week_saturday":"Saturday","settings_general_start_of_week_monday":"Monday","settings_general_sound_task_completion":"Enable sound on item completion","settings_general_sound_new_notifications":"Enable sound for new notifications","settings_general_print_done_tasks":"Print completed items","settings_general_tasks_bottom":"Bottom of List","settings_general_tasks_top":"Top of List","settings_general_time_format":"Time Format","settings_heading_team":"Business","settings_heading_about":"About","settings_heading_account":"Account","settings_heading_general":"General","settings_heading_notification":"Notifications","settings_heading_shortcuts":"Shortcuts","settings_heading_sidebar":"Sidebar","settings_imprint":"Imprint","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"Notify me of important events via:","settings_notifications_notify_me_on_text":"We’ll notify you on certain events, such as when someone accepts an invitation to a shared list, or when someone adds or completes an item in one of your shared lists.","settings_sidebar_smart_lists_title":"Show these Smart Lists in the Sidebar:","settings_sidebar_smart_lists_auto":"Auto","settings_sidebar_smart_lists_hidden":"Hidden","settings_sidebar_smart_lists_visible":"Visible","settings_sync_full":"Sync Now","settings_account_account_backup":"Account Backup","settings_account_restore_backup":"Import Backup Data","settings_account_backup_description":"Backup data includes all your Lists, Tasks, Subtasks, Notes, and Reminders. Please note it does not include those Lists that were shared with you, Files, Comments, Shared List recipients and previous application settings.","settings_account_data_is_being_processed":"Hold tight! Your backup data is being processed. We will send you an email when everything is complete.","settings_account_change_password_error":"There was a problem updating your password. Please try again.","settings_account_click_to_download_backup":"Click to Download","settings_account_create_backup":"Create Backup","settings_account_current_password":"Current Password","settings_account_delete_account":"Delete Account","settings_account_delete_account_confirm":"Do you really want to delete your account?","settings_account_delete_account_confirm_text":"Deleting your account will delete all your lists and items permanently and cannot be undone.","settings_account_fetching_data":"Fetching data ...","settings_account_new_password":"New Password","settings_account_repeat_new_password":"Repeat New Password","settings_account_right_click_and_save_as":"Right Click and Save","settings_third_party_libraries":"Licenses","settings_background_credits":"Background Credits","settings_notifications_email_enabled":"Email Notifications","settings_notifications_desktop_enabled":"Desktop Notifications","settings_notifications_push_enabled":"Push Notifications","settings_privacy_policy":"Privacy Policy","settings_shortcuts_arrow_keys":"Arrow Keys","settings_shortcuts_delete_item":"Delete Selected List or Item","settings_shortcuts_mark_done":"Mark Selected Items as 'Completed'","settings_shortcuts_mark_starred":"Mark Selected Items as 'Starred'","settings_shortcuts_new_list":"Add a New List","settings_shortcuts_new_task":"Add a New Item","settings_shortcuts_open_all_smart_list":"Open 'All' Smart List","settings_shortcuts_open_assigned_smart_list":"Open 'Assigned to Me' Smart List","settings_shortcuts_open_conversations_smart_list":"Open 'Conversations' Smart List","settings_shortcuts_open_done_smart_list":"Open 'Completed' Smart List","settings_shortcuts_open_inbox":"Open Inbox","settings_shortcuts_open_preferences":"Open Preferences","settings_shortcuts_open_search":"Focus Search","settings_shortcuts_open_starred_smart_list":"Open 'Starred' Smart List","settings_shortcuts_open_today_smart_list":"Open 'Today' Smart List","settings_shortcuts_open_week_smart_list":"Open 'Week' Smart List","settings_shortcuts_reset":"Reset to Defaults","settings_shortcuts_select_all_tasks":"Select All Items","settings_shortcuts_show_more":"Show More","settings_shortcuts_hide":"Hide","settings_shortcuts_show_notifications":"Show Activity Center","settings_shortcuts_step_through_list":"Step Through Lists","settings_shortcuts_step_through_task":"Step Through Items","settings_terms_of_use":"Terms of Use","settings_account_header_free":"Free","settings_account_header_unregistered":"Sign Up","settings_account_header_account_$":"$ Account","settings_account_pro_description":"Add comments and files to your to-dos and assign them to your colleagues. Collaboration in teams has never been easier!","settings_account_register_wunderlist_description":"Register for Wunderlist to sync your lists across all your devices.","settings_manage_subscription_button":"Manage subscription","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Yay, you’re a $!","settings_account_header_pro_description":"Wunderlist Pro is the best way to keep your projects on track. Invite your friends and colleagues to collaborate and make things happen!","settings_upgrade_to_pro_label":"Upgrade to $","settings_label_pro_account":"Pro Account","settings_label_purchased_from_$":"Purchased from: $","settings_label_purchased_from_$_by_$":"Purchased from $1 by: $2","settings_label_expires_in_$":"Expires in $","setting_label_next_billing_date":"Next Billing Date:","setting_label_cancel_subscription":"Cancel Subscription","setting_heading_cancel_subscription":"Do you really want to cancel you Wunderlist Pro Subscription?","setting_description_cancel_subscription":"You will still have access to all your data, but once your subscription expires, you will only be able to use Wunderlist’s standard features.","setting_label_cancel_subscription_success":"Your subscription was cancelled successfully.","settings_label_invoices":"Invoices","settings_label_become_a_pro":"Become a Pro","settings_payment_info_expires_$_relative":"Expires $","settings_payment_info_expires_$_absolute":"Expires in $1 days: $2","settings_manage_subscription_error":"Sorry, an error happened while trying to manage your subscription.","group_billing_packages_title":"Plans for every business","group_billing_packages_text":"Wunderlist for Business provides you with all the features you need to work smarter as a team at an affordable price. Simply select the right plan for your business now.","group_billing_plan_table_team_size":"Team Size","group_billing_plan_table_price":"Price","group_billing_plan_table_package_name_$":"$ Members","group_billing_buy_button_label":"Purchase","group_billing_$_off":"$ off","group_billing_larger_team_$":"Have a larger team? $","group_billing_contact_us":"Contact us!","group_billing_downgrade_error_$_$":"In order to switch to the $1 Members plan, you must remove $2 teammate(s) from the account.","group_billing_manage_team":"Click here to manage your team.","group_billing_button_label_manage":"Manage","group_billing_team_plan_title":"Your Wunderlist Pro Plan","group_billing_team_plan_text":"Wunderlist Pro grows right along with your team! Adding members is super easy, just enter their email addresses below. It’s that simple whether or not they’re already a Wunderlist user.","group_billing_upgrade_button_label":"Change Plan","group_billing_upgrade_plan_button_label":"Upgrade","group_billing_Downgrade_plan_button_label":"Downgrade","group_billing_view_plans_button_label":"View Plans","group_billing_manage_team_header":"Manage Team Members","group_billing_email_address_input_placeholder":"Email address","group_billing_manage_count_$_of_$":"$1 of $2","group_billing_cancel_team_plan":"Cancel Your Wunderlist Pro Plan","group_billing_search_coachmark":"To add members, simply enter the email addresses of your teammates, and they'll be added to your Pro plan.","group_billing_cancel_header":"Are you sure you want to cancel your team’s Wunderlist Pro Subscription?","group_billing_change_plan_confirmation_$_$_$":"Changing plans is easy. If you go for $1 Members plan now, you’ll be billed $2 in the next billing cycle starting on $3. Are you sure you want to do this now?","group_billing_cancel_text":"Your Pro subscription will run until the end of month, and you won’t be billed again. While you’ll still retain the ability to view any Pro features like files attached to tasks, you won’t be able to make any changes to them.","error_goup_billing_user_already_pro":"Looks like this person already has a Wunderlist Pro account. Give the gift of Pro to another teammate!","error_group_billing_wait_subscription_runs_out":"You’ll have to wait until your current subscription runs out before repurchasing. Expires on: $.","button_label_buy_wunderlist_for_business":"Go to Wunderlist for Business","benefit_payment_service_unavailable":"Payment Service Unavailable","benefit_name":"Wunderlist Pro","benefit_header_$":"Become a $","benefit_header_description":"Collaboration in teams and businesses has never been easier! Here are 5 very good reasons to sign up for Wunderlist Pro.","benefit_button_buy_monthly":"Monthly","benefit_assign_tasks_title":"Assign Tasks","benefit_assign_tasks_description":"Easily delegate and track the status of to-dos amongst colleagues and friends!","benefit_unlimited_subtasks_title":"Unlimited Subtasks","benefit_unlimited_subtasks_decription":"Break big tasks into small achievable steps for improved productivity without limitations.","benefit_comments_title":"Comments","benefit_comments_description":"Start a conversation with your teammates about any of your to-dos. Leave feedback, ask a question or add some extra insight.","benefit_backgrounds_update_$":"To use our new backgrounds, upgrade to a $","benefit_additional_backgrounds_title":"Additional Backgrounds","benefit_additional_backgrounds_description":"Discover 8 new beautiful backgrounds to customize Wunderlist just the way you like it!","benefit_files_title":"Files","benefit_files_description":"Attach files to your to-dos and share them with your coworkers.","benefit_coming_soon":"Coming Soon","benefit_assign_become_pro":"Assign to-dos to your coworkers with Wunderlist","benefit_label_accept_terms":"By buying a Wunderlist Pro Subscription you accept our $1 and $2.","benefit_label_need_more_subtasks":"Need more subtasks?","sharing_connect_facebook_sharing":"Connect your Wunderlist account with Facebook to easily invite your friends.","sharing_facebook_apprequest_message_$user_$list":"“$1” would like to share the list “$2” with you","sharing_invite":"Invite People","sharing_invite_friends":"Invite Friends","sharing_inviting_requires_account":"Sign up to invite your friends and colleagues to your lists.","sharing_leave_action":"Are you sure you want to leave this list?","sharing_leave_button":"Leave Shared List","sharing_list_members":"List Members","sharing_list_owner":"Owner","sharing_list_pending_member":"Pending","sharing_tab_recents":"Recent","sharing_shared_with_you_by":"Shared with you by","smart_list_assigned_to_me":"Assigned to me","smart_list_conversations":"Conversations","smart_list_all":"All","smart_list_completed":"Completed","smart_list_inbox":"Inbox","smart_list_starred":"Starred","smart_list_today":"Today","smart_list_week":"Week","label_tell_friends":"Tell Your Friends...","social_sharing_heading":"Love Wunderlist? Tell your friends!","social_sharing_dialog_headline":"Love Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"Not Now","social_sharing_button_no_thanks":"No Thanks","social_sharing_button_facebook":"Share","social_sharing_button_follow_us":"Follow Us","social_sharing_button_like_us":"Like Us","social_sharing_heading_thanks":"Be sure to follow us for all the latest Wunderlist news.","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"I’m using Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","twitter_sharing_placeholder":"I’m using @Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","tutorial_welcome_notes_title":"Notes","tutorial_welcome_notes_text":"Detachable notes allow you to work in or out of Wunderlist.","tutorial_welcome_notifications_title":"Activity Center","tutorial_welcome_notifications_text":"Customize the way you want to be notified. Choose to receive invites and updates to your shared lists via email and desktop notifications or view it all from Activity Center.","tutorial_welcome_sharing_title":"Invite Friends","tutorial_welcome_sharing_text":"It is now even easier to invite your friends and colleagues to lend a helping hand.","tutorial_welcome_subtasks_title":"Recurring Items, Reminders and Subtasks","tutorial_welcome_subtasks_text":"Wunderlist now features a brand new Detail View, that allows you to easily add recurring items, reminders and subtasks.","tutorial_welcome_user_title":"It’s All About You!","tutorial_welcome_user_text":"Change your account settings, check the status of sync and customize your background.","tutorial_welcome_newsletter_subscribe":"Notify me of important updates and new features of Wunderlist by mail","tutorial_feature_pro_title":"Wunderlist Pro Feature","share_list_email_signature":"Sent with Wunderlist – My beautiful and simple to-do list\\nIt’s free for iPhone, iPad, Android, Mac, Windows PC and Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ unsynced item","userbar_$_unsynced_item_plural":"$ unsynced items","userbar_account_settings":"Account Settings","userbar_change_background":"Change Background","userbar_last_synced_$":"Last synced $","userbar_no_internet_connection":"Offline","userbar_preferences":"Preferences","userbar_sync_in_progress":"Syncing...","userbar_user_name_for_unregistered_mode":"Sign Up to Sync","whatsnew_title":"What’s New","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Comments","whatsnew_label_voice":"Voice Input","whatsnew_label_groupbilling":"Team Pricing","whatsnew_copy_comments":"Keep all the conversations about your to-dos in one place with Comments in Wunderlist Pro. Leave feedback, ask a question or add extra insight to any of your to-dos to greatly improve communication within your team.","whatsnew_copy_pro_accounts":"Add Comments, Assign to-dos, add Files and create Unlimited Subtasks with Wunderlist Pro to accomplish more, together.","whatsnew_copy_voice":"Click the microphone icon to dictate your to-dos or even record a Voice Memo and attach it as a file.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Sign up to try Wunderlist Pro and add a File.","label_add_new_file":"Add a file...","file_uploaded_unsuccessfully":"Upload of $ failed. Please try again.","file_uploaded_failed":"Upload failed. Please try again.","file_uploaded_failed_deleted":"Upload of $ failed because the file was deleted from your hard drive.","label_are_you_sure_permanently_delete_$_file":"Are you sure you want to permanently delete the file “$” from Wunderlist?","upload_file_was_not_synced_yet":"Please sync","upload_file_not_synced_yet":"Not Synced","placeholder_add_comments":"Add a comment...","placeholder_reply":"Reply...","button_label_go_pro_to_comment":"Go Pro to comment","comment_request_failed":"Sorry, we couldn't load Comments. Please try again.","comment_load_earlier":"View more Comments","coachmark_no_current_comments":"No comments yet.\\nStart your conversation here.","coachmark_comments_not_available":"Sorry, we couldn’t load the previous comments. Please try again in a few moments.","notification_$_commented_on_$":"$1 commented on $2","notification_$_and_$_commented_on_$":"$1 and $2 commented on $3","notification_$_and_$_others_commented_on_$":"$1 and $2 others commented on $3","comments_requires_account":"Sign up to try Wunderlist Pro and add a Comment.","non_pro_trial_free_limit_reached":"You’ve reached your Free limit!","non_pro_trial_write_next_comment_$":"You can add another Comment $.","non_pro_trial_upload_next_file_$":"You’ll be able to add another File $.","non_pro_trial_assign_next_to_do_$":"You can Assign another to-do $.","button_signup_or_login":"Sign up or Log in","button_it_is_completely_free":"It’s completely free","label_free_download_for_platforms":"Available for free for iPhone, iPad, Android, Windows and Mac","label_wunderlist_to_get_things_done":"More than 5 million people use Wunderlist to get things done.","label_people_who_use_wunderlist":"See who is already using Wunderlist:","label_wunderlist_uses":"Whether you’re organizing your business, sharing a shopping list with a loved one or simply keeping track of your daily life, Wunderlist is the best to-do list for you, your team or your family.","label_install_browser_extension":"Install the Browser Extension","label_install_chrome_browser_extension":"Install the Chrome Browser Extension","label_newsletter_signup":"Sign up for our newsletter","label_know_upcoming_features":"Be amongst the first to know about upcoming features","label_learn_more_about_wunderlist":"Learn more about Wunderlist","label_learn_more":"Learn more...","label_your_email_address":"Your email address","button_subscribe_to_newsletter":"Subscribe","button_sending_subscribe_to_newsletter":"Sending...","iyf4_usermenu_label":"Get Wunderlist Pro for Free","iyf4_notification_label":"Get up to 12 free months of Wunderlist Pro by inviting your friends!","iyf4_notification_button_label_var_a":"Start Inviting","iyf4_notification_button_label_var_b":"Invite Friends","iyf4_notification_button_label_var_c":"Get Wunderlist Pro for Free","iyf4_notification_button_label_var_d":"Share Wunderlist Pro","iyf4_dialog_invite_headline_$":"Get up to $ of Wunderlist Pro by inviting your friends!","iyf4_dialog_invite_headline_incentive":"12 free months","iyf4_dialog_invite_incentive_$":"$ Wunderlist, we'll give you both 1 month of Wunderlist Pro for free (up to a limit of 12 months)","iyf4_dialog_invite_incentive_terms":"For every friend who joins","iyf4_dialog_tweet":"I love organizing my life with Wunderlist. Get a month of Wunderlist Pro for free here:","iyf_notification_label":"Refer Wunderlist to your friends and get Pro for free up to 12 months!","iyf_notification_button_label":"Go Pro!","iyf_dialog_step1_headline":"Get a free Pro Account","iyf_dialog_step1_subheadline":"in 3 easy steps","iyf_dialog_step1_instruction1_headline":"Start inviting your friends","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter or E-Mail","iyf_dialog_step1_instruction2_headline":"Your friends sign up","iyf_dialog_step1_instruction2_subheadline":"sit tight while they join Wunderlist","iyf_dialog_step1_instruction3_headline":"Enjoy your free Pro Account","iyf_dialog_step1_instruction3_subheadline":"1 month for every friend who accepts","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 month for every $ friends who accept","iyf_dialog_step1_next_button":"Start inviting","iyf_dialog_step2_subheadline":"to get your free Pro Account","iyf_dialog_step2_divider_label":"Share this link","iyf_dialog_share_on_facebook":"Share on Facebook","iyf_dialog_post_on_twitter":"Tweet on Twitter","iyf_dialog_email_placeholder":"Enter an email address...","iyf_dialog_more_placeholder":"Add another...","iyf_dialog_step3_headline":"Thank you for sharing","iyf_dialog_step3_subheadline":"Sit tight while your friends join","iyf_dialog_step3_success_headline":"Invites successfully sent","iyf_dialog_step3_success_subheadline":"We'll notify you as soon as your Pro account is ready.","iyf_dialog_step3_invite_more":"Invite more people","meta_title":"Wunderlist 2: Your beautiful and simple online to-do list app","meta_description":"Over 5 million people already use Wunderlist to manage tasks, to-do lists, and to get things done.  Wunderlist is the best to-do list for you, your team or your family.","meta_keywords":"6wunderkinder, productivity, collaborate, task management, task manager, to-do, todo, list, tasks, gtd, organize, plan, shopping list, reminders, subtasks, smart lists, grocery list, movie list, shared list","enable_desktop_notifications_text":"Click “Confirm” and then “Allow” in your browser to enable notifications.","notification_add_to_browser":"Keep your Wunderlist only one click away. Add the Wunderlist Web App to your Browser now.","notification_add_extension_to_browser":"Quickly save all your favorite web content directly into Wunderlist. Install the Add to Wunderlist Chrome extension now.","button_add_to_chrome":"Add to Chrome","button_add_to_store_added":"Added","aria_activity_center_hint":"Activity Center. Hit escape to close.","aria_exit_search":"Exit Search","aria_search":"Search","aria_sort_list":"Sort List","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"User menu. Hit escape to close.","aria_assign_to_$":"Assign to $","momentjs_months":"January_February_March_April_May_June_July_August_September_October_November_December","momentjs_monthsShort":"January_February_March_April_May_June_July_August_September_October_November_December","momentjs_weekdays":"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday","momentjs_weekdaysShort":"Sun_Mon_Tue_Wed_Thu_Fri_Sat","momentjs_weekdaysMin":"Su_Mo_Tu_We_Th_Fr_Sa","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Today at] LT","momentjs_calendar_nextDay":"[Tomorrow at] LT","momentjs_calendar_nextWeek":"dddd [at] LT","momentjs_calendar_lastDay":"[Yesterday at] LT","momentjs_calendar_lastWeek":"[last] dddd [at] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"in %s","momentjs_relativeTime_past":"%s ago","momentjs_relativeTime_s":"a few seconds","momentjs_relativeTime_m":"a minute","momentjs_relativeTime_mm":"%d minutes","momentjs_relativeTime_h":"an hour","momentjs_relativeTime_hh":"%d hours","momentjs_relativeTime_d":"a day","momentjs_relativeTime_dd":"%d days","momentjs_relativeTime_M":"a month","momentjs_relativeTime_MM":"%d months","momentjs_relativeTime_y":"a year","momentjs_relativeTime_yy":"%d years"}
};
});
define('languages/german',[],function() {
return {
'name': 'german',
'data': {"actionbar_print_selected_item":"Gewählten Eintrag drucken","actionbar_print_$_selected_items_plural":"$ gewählte Einträge drucken","actionbar_email_selected_item":"Gewählten Eintrag versenden","actionbar_email_$_selected_items_plural":"$ gewählte Einträge versenden","actionbar_sort_alphabetically":"Nach Titel sortieren","actionbar_sort_due_date":"Nach Datum sortieren","actionbar_sort_assignee":"Nach Person sortieren","api_error_account_already_exists":"Ein Account mit dieser E-Mail Adresse existiert bereits.","api_error_connection_error":"Uuups, scheinbar konnten wir den Server nicht erreichen. Bitte probiere es erneut.","api_error_general_error":"Wir konnten die Server nicht erreichen. Bitte probiere es erneut.","api_error_incorrect_login":"Die E-Mail Adresse oder das Passwort ist ungültig.","api_error_incorrect_password":"Das eingegebene Passwort ist nicht korrekt.","api_error_service_down":"Ein Teil der WunderAPI ist nicht erreichbar.","api_error_unknown":"Ein unerwarteter Fehler ist aufgetreten.","api_error_validation_error_unable_to_signup":"Wir konnten kein Konto mit dieser E-Mail-Adresse anlegen.","api_error_not_a_beta_user":"Du bist kein Teilnehmer der Wunderlist-Beta.","button_back":"Zurück","button_cancel":"Abbrechen","button_confirm":"Bestätigen","button_download":"Herunterladen","button_change":"Ändern","button_choose":"Auswählen","button_connect":"Verbinden","button_connect_facebook":"Mit Facebook verbinden","button_continue":"Weiter","button_delete":"Löschen","button_disconnect":"Verbindung trennen","button_dismiss":"Ausblenden","button_done":"Fertig","button_edit":"Bearbeiten","button_get_started":"Los geht’s","button_go_back":"Zurück","button_go_back_sentence":"Zurück","button_learn_more":"Weitere Informationen","button_go_back_to_login":"Zurück zum Anmelden","button_go_to_web_app":"Zur Web-App","button_join_now":"Jetzt registrieren","button_log_in":"Anmelden","button_log_in_with_$":"Mit $ anmelden","button_log_out":"Abmelden","button_log_in_facebook":"Mit Facebook anmelden","button_next":"Weiter","button_no":"Nein","button_no_due_date":"Kein Fälligkeitsdatum","button_ok":"OK","button_remove_due_date":"Datum entfernen","button_remove_reminder":"Erinnerung entfernen","button_email_list":"Liste per E-Mail versenden","button_print_list":"Liste drucken","button_reset_password":"Passwort zurücksetzen","button_retry":"Wiederholen","button_save":"Speichern","button_send":"Senden","button_sign_up":"Registrieren","button_sign_up_with_$":"Mit $ registrieren","button_sign_up_for_free":"Registriere dich kostenlos","button_sign_up_facebook":"Mit Facebook registrieren","button_support_center":"Support Center","button_subscribe":"Ja bitte!","button_try_again":"Erneut versuchen","button_try_wunderlist":"Wunderlist testen","button_yes":"Ja","coachmark_all_list_empty":"Du hast bisher keine Einträge hinzugefügt. Leg gleich los.","coachmark_completed_list_empty":"Du hast noch keine Einträge erledigt. Leg los und erledige einige der Einträge in deinen Listen!","coachmark_no_search_results":"Keine Suchergebnisse","coachmark_sharing_invite_friends_heading":"Freunde einladen","coachmark_sharing_invite_friends_text_$":"Deine Freunde können in der Liste \"$\" Einträge anlegen, entfernen und erledigen.","coachmark_sharing_recent_no_contacts_heading":"Keine letzten Kontakte","coachmark_sharing_recent_no_contacts_text_$":"Gib eine E-Mail ein oder durchsuche deine Kontakte. Sobald sie hinzugefügt wurden, können deine Freunde Einträge in der Liste \"$\" anlegen, entfernen und erledigen.","coachmark_assigned_to_me_list_empty":"Dir wurde nichts zugewiesen","coachmark_conversations_list_empty":"Momentan sind keine Diskussionen vorhanden.","coachmark_starred_list_empty":"Du hast keine wichtigen Einträge","coachmark_today_list_empty":"Glückwunsch! Du hast keine fälligen oder überfälligen Aufgaben.","coachmark_week_list_empty":"Du hast keine offenen Aufgaben für die nächsten 7 Tage.","error_list_not_found":"Die gesuchte Liste konnte nicht gefunden werden","error_share_not_created":"Beim Teilen der Liste ist ein Fehler aufgetreten. Bitte probiere es erneut.","error_task_not_found":"Der gesuchte Eintrag konnte nicht gefunden werden","error_page_not_found":"Seite nicht gefunden","error_title_not_found":"Nicht gefunden","label_are_you_sure_permanently_delete_item":"Bist du dir sicher, dass du diesen Eintrag endgültig löschen möchtest?","label_are_you_sure_permanently_delete_item_plural":"Bist du dir sicher, dass du diese Einträge endgültig löschen möchtest?","label_activity_center":"Activity Center","label_are_you_sure_permanently_delete_$_list":"Bist du dir sicher, dass du die Liste \"$\" endgültig löschen möchtest?","label_are_you_sure_permanently_delete_$_task":"Bist du dir sicher, dass du den Eintrag \"$\" endgültig löschen möchtest?","label_are_you_sure_permanently_delete_task_plural":"Bist du dir sicher, dass du diese Einträge endgültig löschen möchtest?","label_are_you_sure_permanently_delete_$_subtask":"Bist du dir sicher, dass du die Teilaufgabe \"$\" endgültig löschen möchtest?","label_cant_undo":"Diese Aktion kann nicht rückgängig gemacht werden.","label_completed_tasks_heading":"1 Erledigter Eintrag","label_$_completed_tasks_heading_plural":"$ Erledigte Einträge","label_connecting":"Verbinde...","label_minisite_description_line_1":"Behalte alles unter Kontrolle.","label_minisite_description_line_2":"Wunderlist ist verfügbar auf fast allen Plattformen.","label_minisite_share_deleted_or_no_access":"Dieser Eintrag wurde entweder gelöscht, oder du hast keinen Zugriff mehr darauf.","label_minisite_contact_sender_for_info":"Bitte kontaktiere die Person, die die Liste mit dir geteilt hat.","label_minisite_$_invited_you_to_the_list_$":"$1 hat dich zur Liste $2 eingeladen","label_minisite_empty_list_$":"Diese Liste ist im Moment noch leer. Klick einfach auf Anmelden und lege direkt die ersten Einträge an.","label_day_0":"So","label_day_1":"Mo","label_day_2":"Di","label_day_3":"Mi","label_day_4":"Do","label_day_5":"Fr","label_day_6":"Sa","label_delete_file":"Datei löschen","label_delete_list":"Liste löschen","label_delete_task":"Eintrag löschen","label_delete_task_plural":"Einträge löschen","label_delete_subtask":"Teilaufgabe löschen","label_due_$":"Zu erledigen $","label_due_on":"Fällig am $","label_due_date":"Datum","label_email":"E-Mail","label_every":"alle","label_loading":"Lädt...","label_logging_out":"Wird abgemeldet...","label_name":"Name","label_newsletter":"Wunderlist Newsletter","label_none":"Keine","label_notification":"Benachrichtigung","label_oops":"Uuups!","label_or":"oder","label_password":"Passwort","label_relative_date_today":"Heute","label_relative_date_today_with_date":"Heute, $","label_relative_date_today_mid_sentence":"heute","label_relative_date_tomorrow":"Morgen","label_relative_date_tomorrow_with_date":"Morgen, $","label_relative_date_tomorrow_mid_sentence":"morgen","label_relative_date_yesterday":"Gestern","label_remind_me_at_$":"Erinnere mich um $","label_reminder":"Erinnerung","label_reminder_message_$":"Nur zur Erinnerung: $","label_repeat_every_day":"Jeden Tag wiederholen","label_repeat_every_week":"Jede Woche wiederholen","label_repeat_every_month":"Jeden Monat wiederholen","label_repeat_every_year":"Jedes Jahr wiederholen","label_repeat_custom":"Benutzerdefiniert...","label_repeat_day":"Jeden Tag","label_repeat_day_$_plural":"Alle $ Tage","label_repeat_month":"Jeden Monat","label_repeat_month_$_plural":"Alle $ Monate","label_repeat_week":"Jede Woche","label_repeat_week_$_plural":"Alle $ Wochen","label_repeat_never":"Nie wiederholen","label_repeat_year":"Jedes Jahr","label_repeat_year_$_plural":"Alle $ Jahre","label_reset_password":"Passwort zurücksetzen","label_rights_reserved":"Alle Rechte vorbehalten","label_still_fetching_tasks":"Einträge werden geladen...","label_sync":"Synchronisieren","label_time_am":"Vorm. ","label_time_day_plural":"Tage","label_time_week_plural":"Wochen","label_time_month_plural":"Monate","label_time_pm":"Nachm.","label_time_year_plural":"Jahre","label_assign_to":"Jemanden zuweisen","label_unassigned":"Nicht zugewiesen","label_assign_me":"Ich","label_created_$":"Erstellt $","label_created_by_$":"Erstellt von $","label_created_on_$":"Erstellt am $","label_created_$_by_$":"Erstellt $1 von $2","label_created_by_$_on_$":"Erstellt von $1 am $2","label_completed_$":"$ erledigt","label_completed_on_$":"Erledigt am $","label_completed_$_by_$":"$1 erledigt von $2","label_completed_by_$_on_$":"Erledigt von $1 am $2","login_add_photo_hint":"Lade ein Bild für deinen Wunderlist-Account hoch.","login_already_have_account":"Du hast bereits einen Account?","login_email_not_valid":"Bitte gib eine gültige E-Mail Adresse ein.","login_empty_name":"Bitte gib deinen Namen ein.","login_empty_password":"Bitte gib ein Passwort ein.","login_password_not_valid":"Bitte gib ein gültiges Passwort ein.","login_empty_email":"Bitte gib eine E-Mail Adresse ein.","login_enter_name":"Wer bist du?","login_enter_password":"Du bist fast fertig","login_enter_password_hint":"Wähle ein Passwort um die Registrierung abzuschließen. ","login_forgot_password":"Passwort vergessen","login_forgot_password_heading":"Passwort vergessen?","login_forgot_password_text":"Gib die E-Mail Adresse ein, mit der du dich registriert hast, und wir schicken dir die weiteren Schritte zu.","login_no_account_yet":"Noch nicht registriert?","login_password_changed":"Neues Passwort gespeichert","login_password_not_match":"Die eingegebenen Passwörter stimmen nicht überein.","login_password_reset_email_has_been_sent":"Bitte folge den Anweisungen in der E-Mail um dein Passwort zurückzusetzen.","login_reset_password_heading":"Bitte erstelle hier ein neues Passwort.","login_reset_password_success":"Klicke auf den Button und melde dich dann wieder in Wunderlist an.","login_reset_password_success_heading":"Alles klar! Dein Passwort wurde geändert.","login_password_too_short":"Ein Passwort muss mindestens 5 Zeichen haben.","login_sign_up":"Registrieren.","login_want_to_try_again":"Erneut versuchen?","login_accept_terms":"Mit der Registrierung akzeptierst du unsere $1 und $2.","logout_timeout_title":"Synchronisationsfehler","logout_timeout_text":"Wir konnten deine Daten nicht synchronisieren. Möchtest du es erneut versuchen oder dich abmelden?","mobile_tutorial_welcome_to":"Willkommen zu","mobile_tutorial_wunderlist_subtitle":"deine schöne und einfache To-Do Liste","notifications_desktop_enable_heading":"Desktop-Benachrichtigungen aktiveren?","notifications_no_notifications":"Keine Aktivitäten","notifications_no_notifications_message":"Einladungen zu geteilten Listen und andere Aktivitäten erscheinen hier.","notifications_event_accept":"Akzeptieren","notifications_event_accepted":"Akzeptiert","web_upgrade_ie9_not_supported":"Internet Explorer 9 wird leider nicht unterstützt. Bitte installiere $ oder $ für schnelleres und besseres Surfen.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Scheinbar nutzt du Wunderlist auf einem Gerät mit Touch Screen. Möchtest du die Touch-optimierte Oberfläche nutzen? Du kannst das jederzeit in deinen Account-Einstellungen ändern.","web_setting_enable_touch_for_$":"Touchfunktion aktivieren für: $","web_settings_text_refresh_may_be_required":"Bitte neu laden","rate_label":"Bewerte Wunderlist","rate_app_heading":"Bewerte Wunderlist und schreib ein Review","rate_app_message_web_chrome":"Danke, dass du Wunderlist nutzt! Lass uns wissen was du über Wunderlist denkst! Schreibe dazu ein Review und bewerte Wunderlist im Google Web Store ★★★★★","rate_app_button_later":"Später erinnern","rate_app_button_no":"Nein Danke","rate_app_button_yes":"Bewerte Wunderlist","placeholder_add_due_today_to_inbox":"Eintrag für heute zum “Eingang” hinzufügen...","placeholder_add_list":"Liste hinzufügen...","placeholder_add_subtask":"Teilaufgabe hinzufügen","placeholder_add_starred_to_inbox":"Wichtigen Eintrag zum “Eingang” hinzufügen...","placeholder_add_task_to_$":"Einen Eintrag in \"$\" hinzufügen...","placeholder_add_to_inbox":"Eintrag zum “Eingang” hinzufügen","placeholder_new_list":"Neue Liste","placeholder_remind_me":"Erinnere mich","placeholder_search":"Suche...","placeholder_sharing_search":"Name oder E-Mail-Adresse...","placeholder_set_due_date":"Datum auswählen","browser_outdated_heading":"Oh nein, dein Browser ist nicht auf dem neuesten Stand.","browser_outdated_update":"Bitte installiere die neueste Version deines Browsers","browser_outdated_explanation":"Wunderlist nutzt die neuesten Technologien. Lade bitte die letzte Version deines Browsers runter.","prenamed_list_movies":"Filme","prenamed_list_private":"Privat","prenamed_list_shopping":"Einkaufsliste","prenamed_list_wishlist":"Wunschliste","prenamed_list_work":"Arbeit","prenamed_list_read_later":"Später lesen","settings_account_change_email":"E-Mail ändern...","settings_account_change_password":"Passwort ändern...","settings_account_delete_confirmation":"Gib ein: \"Ich bin sicher\"","settings_account_delete_confirmation_text":"Ich bin sicher","settings_account_drop_image":"Bild hier hereinziehen","settings_account_connect_facebook_account":"Verbinde deine Wunderlist mit Facebook und teile Listen  noch einfacher & schneller mit Freunden","settings_general_12_hour":"12 Stunden","settings_general_24_hour":"24 Stunden","settings_general_confirm_deletion":"Bestätigungsdialoge","settings_general_create_new_tasks":"Neue Einträge hinzufügen","settings_general_date_format":"Datumsformat","settings_general_language":"Sprache","settings_general_start_of_week":"Anfang der Woche","settings_general_start_of_week_sunday":"Sonntag","settings_general_start_of_week_saturday":"Samstag","settings_general_start_of_week_monday":"Montag","settings_general_sound_task_completion":"Ton beim Abhaken aktivieren","settings_general_sound_new_notifications":"Ton für Benachrichtigungen aktivieren","settings_general_print_done_tasks":"Erledigte Einträge drucken","settings_general_tasks_bottom":"Unten","settings_general_tasks_top":"Oben","settings_general_time_format":"Zeitformat","settings_heading_team":"Business","settings_heading_about":"Über","settings_heading_account":"Account","settings_heading_general":"Allgemein","settings_heading_notification":"Benachrichtigungen","settings_heading_shortcuts":"Shortcuts","settings_heading_sidebar":"Seitenleiste","settings_imprint":"Impressum","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"Benachrichtige mich über wichtige Aktivitäten per:","settings_notifications_notify_me_on_text":"Wir benachrichtigen dich bei bestimmten Ereignissen, wenn zum Beispiel jemand eine Einladung akzeptiert, oder eine Aufgabe in einer geteilten Listen hinzufügt oder erledigt.","settings_sidebar_smart_lists_title":"Diese Smart-Listen werden angezeigt:","settings_sidebar_smart_lists_auto":"Auto","settings_sidebar_smart_lists_hidden":"Versteckt","settings_sidebar_smart_lists_visible":"Sichtbar","settings_sync_full":"Jetzt synchronisieren","settings_account_account_backup":"Daten Backup","settings_account_restore_backup":"Backup Daten importieren","settings_account_backup_description":"Die Backup Datei enthält alle deine Listen, Aufgaben, Teilaufgaben, Notizen und Erinnerungen. Sie enthält keine Listen die mit dir geteilt wurden, Dateianhänge, Kommentare oder Einstellungen der App.","settings_account_data_is_being_processed":"Bitte warte einen Moment! Die Backup Datei wird erstellt. Wir werden dir eine E-Mail schicken sobald sie fertig ist.","settings_account_change_password_error":"Es gab ein Problem beim Speichern deines Passwortes. Bitte versuche es erneut.","settings_account_click_to_download_backup":"Zum Speichern klicken","settings_account_create_backup":"Backup erstellen","settings_account_current_password":"Aktuelles Passwort","settings_account_delete_account":"Account löschen","settings_account_delete_account_confirm":"Möchtest du wirklich deinen Account löschen?","settings_account_delete_account_confirm_text":"Mit dem Löschen deines Wunderlist-Accounts werden alle Aufgaben und Listen komplett aus dem System gelöscht. Dies kann nicht rückgängig gemacht werden.","settings_account_fetching_data":"Daten werden gesammelt..","settings_account_new_password":"Neues Passwort","settings_account_repeat_new_password":"Neues Passwort wiederholen","settings_account_right_click_and_save_as":"Rechtsklick zum Speichern","settings_third_party_libraries":"Lizenzen","settings_background_credits":"Hintergrund Credits","settings_notifications_email_enabled":"E-Mail-Benachrichtigungen","settings_notifications_desktop_enabled":"Desktop-Benachrichtigungen","settings_notifications_push_enabled":"Push-Benachrichtigungen","settings_privacy_policy":"Datenschutzbestimmungen","settings_shortcuts_arrow_keys":"Pfeiltasten","settings_shortcuts_delete_item":"Ausgewählte Liste oder Eintrag löschen","settings_shortcuts_mark_done":"Ausgewählte Aufgaben als 'Erledigt' markieren","settings_shortcuts_mark_starred":"Ausgewählte Aufgaben als 'Wichtig' markieren","settings_shortcuts_new_list":"Neue Liste hinzufügen","settings_shortcuts_new_task":"Einen neuen Eintrag hinzufügen","settings_shortcuts_open_all_smart_list":"'Alle' Smart List öffnen","settings_shortcuts_open_assigned_smart_list":"\"Mir zugewiesen\" Smart List öffnen","settings_shortcuts_open_conversations_smart_list":"'Diskussionen' Smart List öffnen","settings_shortcuts_open_done_smart_list":"'Erledigt' Smart List öffnen","settings_shortcuts_open_inbox":"Zum Eingang","settings_shortcuts_open_preferences":"Einstellungen öffnen","settings_shortcuts_open_search":"Suche auswählen","settings_shortcuts_open_starred_smart_list":"'Wichtig' Smart List öffnen","settings_shortcuts_open_today_smart_list":"'Heute' Smart List öffnen","settings_shortcuts_open_week_smart_list":"'Woche' Smart List öffnen","settings_shortcuts_reset":"Zurücksetzen","settings_shortcuts_select_all_tasks":"Alle Einträge auswählen","settings_shortcuts_show_more":"Mehr anzeigen","settings_shortcuts_hide":"Ausblenden","settings_shortcuts_show_notifications":"Acitivity Center anzeigen","settings_shortcuts_step_through_list":"Durch Listen gehen","settings_shortcuts_step_through_task":"Zwischen Einträgen wechseln","settings_terms_of_use":"AGB","settings_account_header_free":"Kostenloser","settings_account_header_unregistered":"Registrieren","settings_account_header_account_$":"$ Account","settings_account_pro_description":"Füge Kommentare und Dateien zu deinen Aufgaben hinzu und weise sie deinen Kollegen zu. Zusammenarbeit im Team war noch nie so einfach.","settings_account_register_wunderlist_description":"Registriere einen Account um Wunderlist auf allen Geräten zu nutzen","settings_manage_subscription_button":"Abonnement verwalten","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Hurra, du bist $!","settings_account_header_pro_description":"Mit Wunderlist Pro hast du all deine Projekte im Griff. Lade deine Freunde und Kollegen ein um deine Ziele zu erreichen.","settings_upgrade_to_pro_label":"Werde $","settings_label_pro_account":"Pro Account","settings_label_purchased_from_$":"Gekauft in: $","settings_label_purchased_from_$_by_$":"Gekauft von $1 durch: $2","settings_label_expires_in_$":"Läuft ab in $","setting_label_next_billing_date":"Nächste Rechnung:","setting_label_cancel_subscription":"Abo kündigen","setting_heading_cancel_subscription":"Möchtest du wirklich dein Wunderlist Pro Abo kündigen?","setting_description_cancel_subscription":"Du wirst weiter Zugang zu deinen Daten haben. Sobald dein Abo abgelaufen ist, kannst du allerdings nur noch die kostenlosen Funktionen nutzen.","setting_label_cancel_subscription_success":"Dein Abo wurde erfolgreich gekündigt.","settings_label_invoices":"Rechnungen","settings_label_become_a_pro":"Werde Pro","settings_payment_info_expires_$_relative":"Läuft $ ab","settings_payment_info_expires_$_absolute":"Läuft ab in $1 Tagen: $2","settings_manage_subscription_error":"Leider ist beim Verwalten deines Abonnements ein Fehler aufgetreten.","group_billing_packages_title":"Preise für jedes Unternehmen","group_billing_packages_text":"Wunderlist für Unternehmen bietet dir alle Funktionen die du brauchst um besser im Team zu arbeiten, zu einem passenden Preis. Wähle einfach den Preis für dein Unternehmen.","group_billing_plan_table_team_size":"Teamgröße","group_billing_plan_table_price":"Preis","group_billing_plan_table_package_name_$":"$ Mitglieder","group_billing_buy_button_label":"Kaufen","group_billing_$_off":"$ weniger","group_billing_larger_team_$":"Seid ihr ein größeres Team? $","group_billing_contact_us":"Schreibe uns!","group_billing_downgrade_error_$_$":"Um zum $1 Mitglieder-Paket zu wechseln, musst du erst $2 Mitglieder aus der Liste entfernen.","group_billing_manage_team":"Klicke hier um dein Team zu verwalten.","group_billing_button_label_manage":"Verwalten","group_billing_team_plan_title":"Dein Wunderlist Pro Abo","group_billing_team_plan_text":"Wunderlist Pro wächst zusammen mit deinem Team. Mitglieder hinzuzufügen ist super einfach. Gib einfach unten die E-Mail Adresse ein, egal ob Wunderlist Nutzer oder nicht.","group_billing_upgrade_button_label":"Teamaccount ändern","group_billing_upgrade_plan_button_label":"Upgrade","group_billing_Downgrade_plan_button_label":"Downgrade","group_billing_view_plans_button_label":"Pakete ansehen","group_billing_manage_team_header":"Team Mitglieder verwalten","group_billing_email_address_input_placeholder":"E-Mail Adresse","group_billing_manage_count_$_of_$":"$1 von $2","group_billing_cancel_team_plan":"Kündige dein Wunderlist Pro Abo","group_billing_search_coachmark":"Um Mitglieder hinzuzufügen, gib einfach unten die E-Mail Adresse ein. Sie werden dann zu deinem Pro-Team hinzugefügt.","group_billing_cancel_header":"Bist du dir sicher, dass du deinen Team-Abo kündigen möchtest?","group_billing_change_plan_confirmation_$_$_$":"Das Paket zu wechseln ist ganz einfach. Wenn du jetzt zum $1 Mitglieder Paket wechselst, werden dir $2 zum Beginn der nächsten Zahlungsperiode am $3 berechnet. Möchtest du jetzt wechseln?","group_billing_cancel_text":"Dein Pro Abonnement läuft bis zum Ende des Rechnungsmonats, danach wird nichts neu berechnet. Du kannst weiterhin Dateianhänge und die Profunktionen sehen, aber keine Änderungen daran vornehmen.","error_goup_billing_user_already_pro":"Diese Person ist schon Wunderlist Pro. Bitte wähle eine andere E-Mail Adresse.","error_group_billing_wait_subscription_runs_out":"Du musst warten bis dein aktuelles Abonnement abgelaufen ist, bevor du neu kaufen kannst. Es läuft ab am $.","button_label_buy_wunderlist_for_business":"Gehe zu Wunderlist für Unternehmen","benefit_payment_service_unavailable":"Zahlungsservice nicht erreichbar","benefit_name":"Wunderlist Pro","benefit_header_$":"Werde $","benefit_header_description":"Zusammenarbeit im Team und im Unternehmen war noch nie so einfach. Hier sind 5 gute Gründe für Wunderlist Pro.","benefit_button_buy_monthly":"Monatlich","benefit_assign_tasks_title":"Aufgaben zuweisen","benefit_assign_tasks_description":"Delegiere Aufgaben an deine Kollegen und bleibe auf dem Laufenden! ","benefit_unlimited_subtasks_title":"Unbegrenzte Teilaufgaben","benefit_unlimited_subtasks_decription":"Teile deine Aufgaben in kleinere produktivere Schritte, ohne Einschränkungen.","benefit_comments_title":"Kommentare","benefit_comments_description":"Führe jetzt Diskussionen direkt in deinen Aufgaben. Schreibe Feedback, stelle Fragen oder gib zusätzliche Informationen.","benefit_backgrounds_update_$":"Um neue Hintergründe zu nutzen, hol dir jetzt einen $","benefit_additional_backgrounds_title":"Zusätzliche Hintergründe","benefit_additional_backgrounds_description":"Entdecke 8 neue wunderschöne Hintergründe und passe Wunderlist deinem Geschmack an!","benefit_files_title":"Dateien","benefit_files_description":"Hänge Dateien an deine Aufgaben an und teile sie mit deinen Kollegen.","benefit_coming_soon":"Bald verfügbar","benefit_assign_become_pro":"Delegiere Aufgaben mit Wunderlist an deine Kollegen","benefit_label_accept_terms":"Indem du das Wunderlist Pro Abo kaufst, bestätigst du unsere $1 und $2.","benefit_label_need_more_subtasks":"Brauchst du mehr Teilaufgaben?","sharing_connect_facebook_sharing":"Verbinde deinen Wunderlist-Account mit Facebook, um deine Freunde einzuladen.","sharing_facebook_apprequest_message_$user_$list":"“$1” möchte die Liste “$2”  mit dir teilen","sharing_invite":"Freunde einladen","sharing_invite_friends":"Freunde einladen","sharing_inviting_requires_account":"Registriere dich um Freunde und Kollegen zu deinen Listen einzuladen","sharing_leave_action":"Möchtest du diese Liste wirklich verlassen?","sharing_leave_button":"Geteilte Liste verlassen","sharing_list_members":"Listenmitglieder","sharing_list_owner":"Besitzer","sharing_list_pending_member":"Ausstehend","sharing_tab_recents":"Letzte","sharing_shared_with_you_by":"Mit dir geteilt von","smart_list_assigned_to_me":"Mir zugewiesen","smart_list_conversations":"Diskussionen","smart_list_all":"Alle","smart_list_completed":"Erledigt","smart_list_inbox":"Eingang","smart_list_starred":"Wichtig","smart_list_today":"Heute","smart_list_week":"Woche","label_tell_friends":"Erzähls weiter","social_sharing_heading":"Gefällt dir Wunderlist? Erzähl's weiter!","social_sharing_dialog_headline":"Gefällt dir Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"Nicht jetzt","social_sharing_button_no_thanks":"Nein Danke","social_sharing_button_facebook":"Teilen","social_sharing_button_follow_us":"Folge uns","social_sharing_button_like_us":"Werde Fan","social_sharing_heading_thanks":"Folge uns um immer auf dem Laufenden zu bleiben.","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"Ich nutze Wunderlist, meine schöne und einfache To-Do Liste. Hol sie die jetzt kostenlos auf www.wunderlist.com.","twitter_sharing_placeholder":"Ich nutze @Wunderlist, meine schöne und einfache To-Do Liste. Hol sie die jetzt kostenlos auf www.wunderlist.com","tutorial_welcome_notes_title":"Notizen","tutorial_welcome_notes_text":"Separate Notizen erlauben es dir auch ohne Wunderlist weiterzuschreiben. ","tutorial_welcome_notifications_title":"Activity Center","tutorial_welcome_notifications_text":"Passe an wie du benachrichtigt werden willst. Wähle aus ob du Einladungen und Neuigkeiten aus geteilten Listen per E-Mail, Desktop-Benachrichtigung oder im Activity Center sehen willst.","tutorial_welcome_sharing_title":"Freunde einladen","tutorial_welcome_sharing_text":"Es ist jetzt noch leichter Freunde und Kollegen einzuladen.","tutorial_welcome_subtasks_title":"Wiederkehrende Aufgaben, Erinnerungen und Teilaufgaben","tutorial_welcome_subtasks_text":"Wunderlist hat jetzt den brandneuen Detail View in dem du wiederkehrende Aufgaben, Teilaufgaben und Erinnerungen anlegen kannst.","tutorial_welcome_user_title":"Es dreht sich alles um dich!","tutorial_welcome_user_text":"Ändere deine Einstellungen, wähle einen Hintergrund und passe Wunderlist an dich an.","tutorial_welcome_newsletter_subscribe":"Benachrichtige mich bei wichtigen Wunderlist-Updates und Neuigkeiten per E-Mail.","tutorial_feature_pro_title":"Wunderlist Pro Features","share_list_email_signature":"Gesendet mit Wunderlist - Meiner schönen und einfachen To-Do Liste.\\nKostenlos für iPhone, iPad, Android, Mac, Windows PC und Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ unsynchronisierter Eintrag","userbar_$_unsynced_item_plural":"$ unsynchronisierte Einträge","userbar_account_settings":"Account-Einstellungen","userbar_change_background":"Hintergrund ändern","userbar_last_synced_$":"Zuletzt synchronisiert $","userbar_no_internet_connection":"Offline","userbar_preferences":"Einstellungen","userbar_sync_in_progress":"Synchronisiert...","userbar_user_name_for_unregistered_mode":"Registrieren, um zu synchronisieren","whatsnew_title":"Das ist neu","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Kommentare","whatsnew_label_voice":"Spracheingabe","whatsnew_label_groupbilling":"Teampreise","whatsnew_copy_comments":"Behalte alle Diskussionen im Blick mit Kommentaren in Wunderlist Pro. Schreibe Feedback, stelle Fragen oder gib weitere Informationen zu jeder deiner Aufgaben und verbessere so die Kommunikation in deinem Team.","whatsnew_copy_pro_accounts":"Schreibe Kommentare, weise Aufgaben zu, lade Dateien hoch und erstelle unbegrenzt viele Teilaufgaben. Alles in Wunderlist Pro, um jetzt noch schneller deine Ziele zu erreichen.","whatsnew_copy_voice":"Klicke auf das Mikrofon um Aufgaben zu diktieren, oder hänge direkt eine Sprachaufnahme als Datei an.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Registriere dich und teste Wunderlist Pro um Dateien hochzuladen.","label_add_new_file":"Datei hinzufügen...","file_uploaded_unsuccessfully":"Das Hochladen von $ ist fehlgeschlagen. Bitte probiere es erneut.","file_uploaded_failed":"Upload fehlgeschlagen. Bitte versuche es erneut.","file_uploaded_failed_deleted":"Hochladen von $ fehlgeschlagen, da die Datei von der Festplatte gelöscht wurde.","label_are_you_sure_permanently_delete_$_file":"Bist du dir sicher, dass du die Datei \"$\" permanent aus Wunderlist entfernen möchtest?","upload_file_was_not_synced_yet":"Bitte synchronisiere.","upload_file_not_synced_yet":"Nicht synchronisiert","placeholder_add_comments":"Kommentar hinzufügen …","placeholder_reply":"Antworten...","button_label_go_pro_to_comment":"Werde Pro um zu kommentieren","comment_request_failed":"Sorry, die Kommentare konnten nicht geladen werden. Bitte probiere es erneut.","comment_load_earlier":"Mehr Kommentare anzeigen","coachmark_no_current_comments":"Bisher gibt es keine Kommentare.\\nBeginne jetzt die Unterhaltung.","coachmark_comments_not_available":"Leider konnten die vorherigen Kommentare nicht geladen werden. Bitte probiere es gleich noch einmal. ","notification_$_commented_on_$":"$1 hat $2 kommentiert","notification_$_and_$_commented_on_$":"$1 und $2 haben $3 kommentiert","notification_$_and_$_others_commented_on_$":"$1 und $2 andere haben $3 kommentiert","comments_requires_account":"Registriere dich und teste Wunderlist Pro um Kommentare zu schreiben.","non_pro_trial_free_limit_reached":"Du hast das Limit der kostenlosen Version erreicht.","non_pro_trial_write_next_comment_$":"Du kannst $ einen weiteren Kommentar schreiben.","non_pro_trial_upload_next_file_$":"Du kannst $ eine weitere Datei hochladen.","non_pro_trial_assign_next_to_do_$":"Du kannst $ eine weitere Aufgabe zuweisen.","button_signup_or_login":"Anmelden oder Registrieren","button_it_is_completely_free":"Komplett kostenlos","label_free_download_for_platforms":"Kostenlos verfügbar für iPhone, iPad, Android, Windows and Mac","label_wunderlist_to_get_things_done":"Mehr als 5 Millionen Menschen nutzen Wunderlist um sich zu organisieren.","label_people_who_use_wunderlist":"Schau wer schon Wunderlist nutzt:","label_wunderlist_uses":"Ob du dein Unternehmen organisierst, eine Einkaufsliste hast oder einfach nur deine täglichen Aufgaben in den Griff bekommen willst, Wunderlist ist die beste To-Do Liste für dich, dein Team und deine Familie.","label_install_browser_extension":"Browser Erweiterung installieren","label_install_chrome_browser_extension":"Installiere die Chrome Browser Erweiterung","label_newsletter_signup":"Für den Newsletter anmelden","label_know_upcoming_features":"Lass dich als Erster über neue Funktionen informieren","label_learn_more_about_wunderlist":"Finde mehr über Wunderlist heraus","label_learn_more":"Weiterlesen...","label_your_email_address":"Deine E-Mail Adresse","button_subscribe_to_newsletter":"Abonnieren","button_sending_subscribe_to_newsletter":"Senden …","iyf4_usermenu_label":"Hol dir Wunderlist Pro kostenlos","iyf4_notification_label":"Empfiehl Wunderlist deinen Freunden und werde kostenlos Pro-Nutzer für bis zu 12 Monate!","iyf4_notification_button_label_var_a":"Jetzt einladen","iyf4_notification_button_label_var_b":"Freunde einladen","iyf4_notification_button_label_var_c":"Hol dir einen kostenlosen Pro Account","iyf4_notification_button_label_var_d":"Erzähle anderen von Wunderlist Pro","iyf4_dialog_invite_headline_$":"Empfiehl Wunderlist deinen Freunden und werde kostenlos Pro-Nutzer für bis zu $!","iyf4_dialog_invite_headline_incentive":"12 Monate kostenlos","iyf4_dialog_invite_incentive_$":"$ Wunderlist, geben wir euch beiden 1 Monat Wunderlist Pro kostenlos (bis hin zu 12 Monaten)","iyf4_dialog_invite_incentive_terms":"Für jeden Freund der sich registriert für","iyf4_dialog_tweet":"Ich organisiere mein Leben mit Wunderlist. Hol dir jetzt einen Monat Wunderlist Pro kostenlos hier: ","iyf_notification_label":"Empfiehl Wunderlist deinen Freunden und werde kostenlos Pro-Nutzer für bis zu 12 Monate!","iyf_notification_button_label":"Werde Pro!","iyf_dialog_step1_headline":"Hol dir einen kostenlosen Pro Account","iyf_dialog_step1_subheadline":"in 3 kurzen Schritten","iyf_dialog_step1_instruction1_headline":"Lade jetzt deine Freunde ein","iyf_dialog_step1_instruction1_subheadline":"per Facebook, Twitter oder E-Mail","iyf_dialog_step1_instruction2_headline":"Deine Freunde registrieren sich","iyf_dialog_step1_instruction2_subheadline":"warte bis sie sich in Wunderlist registriert haben","iyf_dialog_step1_instruction3_headline":"Viel Spaß mit deinem kostenlosen Pro Account","iyf_dialog_step1_instruction3_subheadline":"1 Monat für jeden Freund der die Einladung annimmt","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 Monat wenn sich $ Freunde registrieren","iyf_dialog_step1_next_button":"Jetzt einladen","iyf_dialog_step2_subheadline":"um deinen kostenlosen Pro Account zu bekommen","iyf_dialog_step2_divider_label":"Teile diesen Link","iyf_dialog_share_on_facebook":"Auf Facebook teilen","iyf_dialog_post_on_twitter":"Auf Twitter teilen","iyf_dialog_email_placeholder":"E-Mail Adresse eingeben...","iyf_dialog_more_placeholder":"Einen weiteren...","iyf_dialog_step3_headline":"Danke fürs Teilen","iyf_dialog_step3_subheadline":"Warte bis sich deine Freunde registriert haben","iyf_dialog_step3_success_headline":"Einladungen erfolgreich verschickt","iyf_dialog_step3_success_subheadline":"Wir sagen dir Bescheid sobald der Pro Account verfügbar ist.","iyf_dialog_step3_invite_more":"Lade noch mehr Leute ein","meta_title":"Wunderlist 2: Deine schöne und einfache To-Do Liste","meta_description":"Mehr als 5 Millionen Menschen nutzen bereits Wunderlist um ihre Aufgaben und To-Do Listen zu verwalten. Wunderlist ist die beste App für dich, dein Team und deine Familie.","meta_keywords":"6wunderkinder, produktivität, kollaboration, aufgabenverwaltung, task manager, to-do, aufgaben, organisieren, planen, verwalten, zeitmanagement, erinnerungen, teilaufgaben, projektmanagement, einkaufsliste, filmliste","enable_desktop_notifications_text":"Klicke 'Bestätigen' und 'Erlauben' in deinem Browser, um Desktop-Benachrichtigungen zu aktivieren","notification_add_to_browser":"Wunderlist ist nur einen Klick entfernt. Nutze jetzt die Wunderlist Web App in deinem Browser.","notification_add_extension_to_browser":"Speichere jetzt deine Lieblings-Webseiten direkt in Wunderlist. Installiere dir dazu einfach die Wunderlist Chrome-Erweiterung.","button_add_to_chrome":"Zu Chrome hinzufügen","button_add_to_store_added":"Hinzugefügt","aria_activity_center_hint":"Activity Center. Drücke ESC um es zu schließen","aria_exit_search":"Suche schließen","aria_search":"Suche","aria_sort_list":"Liste sortieren","aria_thank_you":"Wir hoffen unsere barrierefreien Funktionen funktionieren für dich. Bitte sende uns dein Feedback an support@wunderlist.com. Vielen Dank, dass du Wunderlist nutzt!","aria_user_menu_hint":"Nutzer-Menü. Drücke ESC um es zu schließen.","aria_assign_to_$":"An $ zuweisen","momentjs_months":"Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember","momentjs_monthsShort":"Jan_Febr_Mrz_Apr_Mai_Jun_Jul_Aug_Sept_Okt_Nov_Dez","momentjs_weekdays":"Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag","momentjs_weekdaysShort":"So_Mo_Di_Mi_Do_Fr_Sa","momentjs_weekdaysMin":"So_Mo_Di_Mi_Do_Fr_Sa","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Heute um] LT","momentjs_calendar_nextDay":"[Morgen um] LT","momentjs_calendar_nextWeek":"dddd [um] LT","momentjs_calendar_lastDay":"[Gestern um] LT","momentjs_calendar_lastWeek":"[letzten] dddd [um] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"in %s","momentjs_relativeTime_past":"vor %s","momentjs_relativeTime_s":"ein paar Sekunden","momentjs_relativeTime_m":"einer Minute","momentjs_relativeTime_mm":"%d Minuten","momentjs_relativeTime_h":"einer Stunde","momentjs_relativeTime_hh":"%d Stunden","momentjs_relativeTime_d":"einem Tag","momentjs_relativeTime_dd":"%d Tagen","momentjs_relativeTime_M":"einem Monat","momentjs_relativeTime_MM":"%d Monaten","momentjs_relativeTime_y":"einem Jahr","momentjs_relativeTime_yy":"%d Jahren"}
};
});
define('languages/catalan',[],function() {
return {
'name': 'catalan',
'data': {"actionbar_print_selected_item":"Imprimeix l'element seleccionat","actionbar_print_$_selected_items_plural":"Imprimeix $ Elements","actionbar_email_selected_item":"Envia l'element seleccionat","actionbar_email_$_selected_items_plural":"Envia els $ elements","actionbar_sort_alphabetically":"Ordena alfabèticament","actionbar_sort_due_date":"Ordenar per Data de Venciment","actionbar_sort_assignee":"Ordenar per Assignat","api_error_account_already_exists":"Ja existeix un compte amb aquesta adreça de correu.","api_error_connection_error":"Ep! Sembla que hi ha hagut un problema a l'accedir al servidor. Intenta-ho de nou, si et plau.","api_error_general_error":"Ep! No es pot accedir al servidor en aquest moment. Intenta-ho de nou, si et plau.","api_error_incorrect_login":"L'adreça de correu o la contrasenya que has entrat és incorrecta.","api_error_incorrect_password":"La contrasenya que has entrat és incorrecta.","api_error_service_down":"Una part essencial del WunderAPI no està disponible.","api_error_unknown":"Un error no esperat i no tractat ha ocorregut.","api_error_validation_error_unable_to_signup":"No hem pogut donar-te accés amb l'adreça de correu electrònic que ens has donat.","api_error_not_a_beta_user":"No ets un membre de Wunderlist beta.","button_back":"Enrere","button_cancel":"Cancel·la","button_confirm":"Confirma","button_download":"Descarrega","button_change":"Canvia","button_choose":"Tria","button_connect":"Connecta","button_connect_facebook":"Connectar amb Facebook","button_continue":"Continua","button_delete":"Suprimeix","button_disconnect":"Desconnecta","button_dismiss":"Ignora","button_done":"Fet","button_edit":"Edita","button_get_started":"Comencem!","button_go_back":"Torna enrere","button_go_back_sentence":"Enrere","button_learn_more":"Saber-ne més","button_go_back_to_login":"Torna a l'Inici de Sessió","button_go_to_web_app":"Anar a l'Aplicació a la Web","button_join_now":"Unext-te Ara","button_log_in":"Inicia Sessió","button_log_in_with_$":"Inicia Sessió amb $","button_log_out":"Tanca la Sessió","button_log_in_facebook":"Inicia Sessió amb Facebook","button_next":"Següent","button_no":"No","button_no_due_date":"Sense venciment","button_ok":"OK","button_remove_due_date":"Suprimeix Venciment","button_remove_reminder":"Suprimeix el Recordatori","button_email_list":"Enviar la llista per correu electrònic","button_print_list":"Imprimir la llista","button_reset_password":"Restableix la Contrasenya","button_retry":"Reintenta","button_save":"Desa","button_send":"Envia","button_sign_up":"Registra't","button_sign_up_with_$":"Registra't amb $","button_sign_up_for_free":"Registra't Gratis","button_sign_up_facebook":"Registra't amb Facebook","button_support_center":"Centre de Suport","button_subscribe":"Fastàstic. Sí, si us plau!","button_try_again":"Torna-ho a intentar","button_try_wunderlist":"Prova Wunderlist","button_yes":"Sí","coachmark_all_list_empty":"Encara no has afegit cap element. Segueix endavant i afegeix alguna cosa.","coachmark_completed_list_empty":"Encara no has completat cap element. Vinga! Marca algun element de les teves llistes!","coachmark_no_search_results":"Cerca Sense Resultats","coachmark_sharing_invite_friends_heading":"Convida el teus amics","coachmark_sharing_invite_friends_text_$":"Els teus amics podran crear, el·liminar i marcar elements de la llista “$”.","coachmark_sharing_recent_no_contacts_heading":"No hi ha contactes recents","coachmark_sharing_recent_no_contacts_text_$":"Escriu una adreça de correu electrònic. Un cop afegida, els teus amics podran crear, el·liminar i marcar elements de la llista “$”.","coachmark_assigned_to_me_list_empty":"No tens res assignat","coachmark_conversations_list_empty":"Actualment no hi ha cap conversa","coachmark_starred_list_empty":"No tens elements marcats com a Destacats","coachmark_today_list_empty":"Felicitats! No tens res vençut ni que venci avui","coachmark_week_list_empty":"De vacances? No tens res que venci en els propers 7 dies","error_list_not_found":"La llista que busques no es pot trobar","error_share_not_created":"Alguna cosa no ha anat be quan s'intentava compartir la teva llista. Prova-ho de nou, si et plau.","error_task_not_found":"L'element que busques no s'ha pogut trobar","error_page_not_found":"Pàgina no trobada","error_title_not_found":"No trobat","label_are_you_sure_permanently_delete_item":"Estàs segur de que vols suprimir permanentment aquest element?","label_are_you_sure_permanently_delete_item_plural":"Estàs segur de que vols suprimir permanentment aquests elements?","label_activity_center":"Centre d'activitat","label_are_you_sure_permanently_delete_$_list":"Estàs segur de que vols suprimir permanentment la llista “$”?","label_are_you_sure_permanently_delete_$_task":"Estàs segur de que vols suprimir permanentment l'element “$”?","label_are_you_sure_permanently_delete_task_plural":"Estàs segur de que vols suprimir permanentment aquests elements?","label_are_you_sure_permanently_delete_$_subtask":"Estàs segur de que vols suprimir permanentment la subtasca “$”?","label_cant_undo":"No podràs desfer aquesta acció.","label_completed_tasks_heading":"1 Element Completat","label_$_completed_tasks_heading_plural":"$ Elements Completats","label_connecting":"Connectant...","label_minisite_description_line_1":"Fes un seguiment de tot el que vols fer.","label_minisite_description_line_2":"Wunderlist està disponible de forma gratuïta per a totes les principals plataformes.","label_minisite_share_deleted_or_no_access":"Sembla ser que això ha estat suprimit o que ja no hi tens accés.","label_minisite_contact_sender_for_info":"Contacta si et plau amb la persona que ha compartit això amb tu per més informació.","label_minisite_$_invited_you_to_the_list_$":"$1 t'ha convidat a la llista $2","label_minisite_empty_list_$":"Aquesta llista és buida. Només cal que toquis el botó de dalt Registra't i comença a afegir elements a la llista $.","label_day_0":"dg.","label_day_1":"dl.","label_day_2":"dt.","label_day_3":"dc.","label_day_4":"dj.","label_day_5":"dv.","label_day_6":"ds.","label_delete_file":"Esborrar fitxer","label_delete_list":"Suprimeix la Llista","label_delete_task":"Suprimeix l'element","label_delete_task_plural":"Suprimeix elements","label_delete_subtask":"Suprimeix la Subtasca","label_due_$":"Venç $","label_due_on":"Venç el $","label_due_date":"Data de Venciment","label_email":"Correu electrònic","label_every":"cada","label_loading":"Carregant...","label_logging_out":"Tancant la Sessió...","label_name":"Nom","label_newsletter":"Butlletí de notícies de Wunderlist","label_none":"Cap","label_notification":"Notificació","label_oops":"Ep!","label_or":"o","label_password":"Contrasenya","label_relative_date_today":"Avui","label_relative_date_today_with_date":"Avui, $","label_relative_date_today_mid_sentence":"avui","label_relative_date_tomorrow":"Demà","label_relative_date_tomorrow_with_date":"Demà, $","label_relative_date_tomorrow_mid_sentence":"demà","label_relative_date_yesterday":"Ahir","label_remind_me_at_$":"Recorda-m'ho a aquesta hora: $","label_reminder":"Recordatori","label_reminder_message_$":"Només un simple recordatori: $","label_repeat_every_day":"Repeteix cada dia","label_repeat_every_week":"Repeteix cada setmana","label_repeat_every_month":"Repeteix cada mes","label_repeat_every_year":"Repeteix cada any","label_repeat_custom":"Personalitzat...","label_repeat_day":"Cada dia","label_repeat_day_$_plural":"Cada $ dies","label_repeat_month":"Cada mes","label_repeat_month_$_plural":"Cada $ mesos","label_repeat_week":"Cada setmana","label_repeat_week_$_plural":"Cada $ setmanes","label_repeat_never":"No repetir mai","label_repeat_year":"Cada any","label_repeat_year_$_plural":"Cada $ anys","label_reset_password":"Restableix la Contrasenya","label_rights_reserved":"Tots els Drets Reservats","label_still_fetching_tasks":"Encara estic recuperant tasques...","label_sync":"Sincronitza","label_time_am":"AM","label_time_day_plural":"dies","label_time_week_plural":"setmanes","label_time_month_plural":"mesos","label_time_pm":"PM","label_time_year_plural":"anys","label_assign_to":"Assignar a","label_unassigned":"No assignat","label_assign_me":"Jo","label_created_$":"Creat $","label_created_by_$":"Creat per $","label_created_on_$":"Creat el $","label_created_$_by_$":"Creat $1 per $2","label_created_by_$_on_$":"Creat per $1 el $2","label_completed_$":"Completat $","label_completed_on_$":"Completat el $","label_completed_$_by_$":"Completat $1 per $2","label_completed_by_$_on_$":"Completat per $1 el $2","login_add_photo_hint":"Personalitza el teu compte de Wunderlist pujant la teva fotografia.","login_already_have_account":"Ja tens un compte?","login_email_not_valid":"Si et plau, escriu una adreça de correu electrònic vàlida.","login_empty_name":"Si us plau, introdueix el teu nom.","login_empty_password":"Si us plau, introdueix una contrasenya.","login_password_not_valid":"Siusplau, entra una contrasenya vàlida.","login_empty_email":"Si et plau, escriu una adreça de correu electrònic.","login_enter_name":"Qui ets?","login_enter_password":"Gairebé has acabat","login_enter_password_hint":"Tria una contrasenya per acabar d'establir el teu compte a Wunderlist.","login_forgot_password":"He oblidat la contrasenya","login_forgot_password_heading":"Has oblidat alguna cosa?","login_forgot_password_text":"Introdueix l'adreça de correu electrònic amb la que et vas registrar i t'enviarem un enllaç per restablir la contrasenya.","login_no_account_yet":"No tens un compte?","login_password_changed":"Contrasenya Actualitzada","login_password_not_match":"Les contrasenyes que has escrit no coincideixen.","login_password_reset_email_has_been_sent":"Si us plau, revisa el teu correu electrònic per a obtenir instruccions per a restablir la teva contrasenya.","login_reset_password_heading":"És el moment de crear la teva nova contrasenya.","login_reset_password_success":"Només cal que toquis el botó de més avall i ja ho tindràs tot a punt per tornar a entrar al teu Wunderlist","login_reset_password_success_heading":"Hurra! La teva contrasenya s'ha canviat amb èxit.","login_password_too_short":"La contrasenya ha de contenir almenys 5 caràcters.","login_sign_up":"Registra't","login_want_to_try_again":"Vols tornar-ho a intentar?","login_accept_terms":"Registrant-te acceptes les nostres $1 i/o $2.","logout_timeout_title":"Error de sincronització","logout_timeout_text":"No hem pogut sincronitzar les teves dades. Vols reintentar-ho o només tancar la sessió?","mobile_tutorial_welcome_to":"Benvingut/da a","mobile_tutorial_wunderlist_subtitle":"la teva senzilla i bonica llista de tasques","notifications_desktop_enable_heading":"Permetre Notificacions a l'Escriptori?","notifications_no_notifications":"Cap activitat","notifications_no_notifications_message":"Les invitacions a llistes compartides i altres activitats apareixen aquí.","notifications_event_accept":"Acceptar","notifications_event_accepted":"Acceptat","web_upgrade_ie9_not_supported":"Wunderlist no és compatible amb Internet Explorer 9. Si et plau, actualitza a  $ o $ per tenir una millor experiència.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Sembla que estàs utilitzant un aparell amb pantalla tàctil. Vols activar una interfície optimitzada per al tacte? Sempre podràs modificar això a les preferències del teu compte.","web_setting_enable_touch_for_$":"Activa Tacte per: $","web_settings_text_refresh_may_be_required":"Pot ser que calgui refrescar","rate_label":"Valora Wunderlist","rate_app_heading":"Valora i puntua Wunderlist","rate_app_message_web_chrome":"Gràcies per utilitzar Wunderlist, ens encantaria saber que en penses! Si et plau, diguens-ho valorant i puntuant Wunderlist a Chrome Web Store ★★★★★","rate_app_button_later":"Recorda-m'ho més endavant","rate_app_button_no":"No, gràcies","rate_app_button_yes":"Valora Wunderlist","placeholder_add_due_today_to_inbox":"Afegeix un element que venç avui a la \"Safata d'entrada\"...","placeholder_add_list":"Afegeix una llista...","placeholder_add_subtask":"Afegeix una subtasca","placeholder_add_starred_to_inbox":"Afegeix un element \"Destacat\" a la \"Safata d'Entrada\"...","placeholder_add_task_to_$":"Afegeix un element a “$”...","placeholder_add_to_inbox":"Afegeix un element a \"Safata d'Entrada\"","placeholder_new_list":"Llista Nova","placeholder_remind_me":"Recorda-m'ho","placeholder_search":"Cerca...","placeholder_sharing_search":"Nom o adreça de correu electrònic...","placeholder_set_due_date":"Indica la data de venciment","browser_outdated_heading":"Oh oh, sembla que el teu navegador no està actualitzat.","browser_outdated_update":"Si us plau, actualitza el teu navegador","browser_outdated_explanation":"Wunderlist està construït emprant la darrera i millor tecnologia. Per emprar Wunderlist, descarrega la darrera versió del teu navegador","prenamed_list_movies":"Pel·lícules per Veure","prenamed_list_private":"Personal","prenamed_list_shopping":"De Compres","prenamed_list_wishlist":"Properes compres","prenamed_list_work":"Treball","prenamed_list_read_later":"Llegir més tard","settings_account_change_email":"Canviar el correu electrònic...","settings_account_change_password":"Canviar Contrasenya...","settings_account_delete_confirmation":"Escriu \"N'estic segur\"","settings_account_delete_confirmation_text":"N'estic segur","settings_account_drop_image":"Arrossega la Imatge Aquí","settings_account_connect_facebook_account":"Connectar el teu compte Wunderlist amb Facebook fa que compartir llistes amb els teus amics sigui senzill, ràpid i fàcil.","settings_general_12_hour":"12 hores","settings_general_24_hour":"24 hores","settings_general_confirm_deletion":"Confirmar abans d'esborrar elements.","settings_general_create_new_tasks":"Afegir nous elements","settings_general_date_format":"Format de Data","settings_general_language":"Idioma","settings_general_start_of_week":"La setmana comença el","settings_general_start_of_week_sunday":"Diumenge","settings_general_start_of_week_saturday":"Dissabte","settings_general_start_of_week_monday":"Dilluns","settings_general_sound_task_completion":"Activar el so quan es completi un element","settings_general_sound_new_notifications":"Activar el so per les noves notificacions","settings_general_print_done_tasks":"Imprimir elements completats","settings_general_tasks_bottom":"Al final de la llista","settings_general_tasks_top":"A l'inici de la llista","settings_general_time_format":"Format de temps","settings_heading_team":"Negoci","settings_heading_about":"Sobre","settings_heading_account":"Compte","settings_heading_general":"General","settings_heading_notification":"Notificacions","settings_heading_shortcuts":"Dreceres","settings_heading_sidebar":"Barra lateral","settings_imprint":"Informació legal","settings_visit_website":"Visita'ns","settings_get_help":"Obtingues Ajuda","settings_notifications_notify_me_of_important_events_mobile":"Notifica'm els esdeveniments importants via:","settings_notifications_notify_me_on_text":"Et notificarem alguns fets, com quan algú accepta una invitació a una llista compartida, o quan algú afegeix o complerta un element en una de les teves llistes compartides.","settings_sidebar_smart_lists_title":"Mostra aquestes Llistes Intel·ligents a la Barra Lateral:","settings_sidebar_smart_lists_auto":"Auto","settings_sidebar_smart_lists_hidden":"Amagat","settings_sidebar_smart_lists_visible":"Visible","settings_sync_full":"Sincronitza ara","settings_account_account_backup":"Còpia de Seguretat del Compte","settings_account_restore_backup":"Importa Dades de Còpia de Seguretat","settings_account_backup_description":"Les dades de la Còpia de Seguretat inclouen totes les teves Llistes, Tasques, Subtasques, Notes i Recordatoris. Tingues en compte que no inclou les Llistes que han compartit amb tú, Arxius, Comentaris, receptors de Llistes Compartides ni les configuracions anteriors de l'aplicació.","settings_account_data_is_being_processed":"Estigues a l'espera! La teva còpia de suretat està essent processada. T'enviarem un email qun estigui tot complertat.","settings_account_change_password_error":"Hi ha hagut un problema actualitzant la teva contrasenya. Si us plau torna a provar-ho.","settings_account_click_to_download_backup":"Clica per descarregar","settings_account_create_backup":"Crea Còpia de Seguretat","settings_account_current_password":"Contrasenya Actual","settings_account_delete_account":"Suprimeix el Compte","settings_account_delete_account_confirm":"Segur que vols suprimir el teu compte?","settings_account_delete_account_confirm_text":"Si suprimeixes el teu compte, es suprimiran també permanentment totes les teves llistes i els teus elements i no es podrà desfer l'acció.","settings_account_fetching_data":"Recollint dades...","settings_account_new_password":"Nova Contrasenya","settings_account_repeat_new_password":"Repeteix la Nova Contrasenya","settings_account_right_click_and_save_as":"Clica amb la dreta i Guarda","settings_third_party_libraries":"Llicències","settings_background_credits":"Creadors de les imatges de fons","settings_notifications_email_enabled":"Notificacions per correu electrònic","settings_notifications_desktop_enabled":"Notificacions a l'Escriptori","settings_notifications_push_enabled":"Notificacions Push","settings_privacy_policy":"Política de Privacitat","settings_shortcuts_arrow_keys":"Tecles de Fletxa","settings_shortcuts_delete_item":"Suprimeix l'Element o Llista Seleccionat","settings_shortcuts_mark_done":"Marca els elements seleccionats com a \"Completat\"","settings_shortcuts_mark_starred":"Marca els elements seleccionats com a \"Destacat\"","settings_shortcuts_new_list":"Afegeix una Llista Nova","settings_shortcuts_new_task":"Afegeix un Element Nou","settings_shortcuts_open_all_smart_list":"Obre la Llista Intel·ligent \"Tot\"","settings_shortcuts_open_assigned_smart_list":"Obre la Llista Intel·ligent 'Assignat a mi'","settings_shortcuts_open_conversations_smart_list":"Obre la Llista Intel·ligent \"Converses\"","settings_shortcuts_open_done_smart_list":"Obre la Llista Intel·ligent \"Completat\"","settings_shortcuts_open_inbox":"Obre la Safata d'Entrada","settings_shortcuts_open_preferences":"Obre les Preferències","settings_shortcuts_open_search":"Vés al cercador","settings_shortcuts_open_starred_smart_list":"Obre la Llista Intel·ligent \"Destacats\"","settings_shortcuts_open_today_smart_list":"Obre la Llista Intel·ligent \"Avui\"","settings_shortcuts_open_week_smart_list":"Obre la Llista Intel·ligent \"Setmana\"","settings_shortcuts_reset":"Torna als valors per defecte","settings_shortcuts_select_all_tasks":"Selecciona tots els elements","settings_shortcuts_show_more":"Mostrar més","settings_shortcuts_hide":"Amaga","settings_shortcuts_show_notifications":"Mostra el Centre d'activitat","settings_shortcuts_step_through_list":"Recórrer les Llistes","settings_shortcuts_step_through_task":"Recórrer els elements","settings_terms_of_use":"Condicions d'utilització","settings_account_header_free":"Gratis","settings_account_header_unregistered":"Registra't","settings_account_header_account_$":"Compte $","settings_account_pro_description":"Afegeix comentaris i arxius a les teves tasques i assigna-les als teus col·legues. La col·laboració en equip mai ha estat tan fàcil!","settings_account_register_wunderlist_description":"Registra't a Wunderlist per sincronitzar les teves llistes en tots els teus aparells.","settings_manage_subscription_button":"Gestiona la suscripció","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Molt bé, ets un $!","settings_account_header_pro_description":"Wunderlist Pro és la millor manera de seguir la pista als teus projectes. Convida als teus amics i col·legues a col·laborar i fer que les coses funcionin!","settings_upgrade_to_pro_label":"Actualitza a $","settings_label_pro_account":"Compte Pro","settings_label_purchased_from_$":"Comprat des de: $","settings_label_purchased_from_$_by_$":"Comprat de $1 per $2","settings_label_expires_in_$":"Caduca en $","setting_label_next_billing_date":"Propera data de cobrament:","setting_label_cancel_subscription":"Cancel·lar la subscripció","setting_heading_cancel_subscription":"De veritat que vols cancel·lar la teva subscripció a Wunderlist Pro?","setting_description_cancel_subscription":"Encara tindràs accés a totes les teves dades, però un cop caduqui la teva subscripció, només podràs utilitzar les característiques estàndard de Wunderlist.","setting_label_cancel_subscription_success":"La teva subscripció ha estat correctament cancel·lada.","settings_label_invoices":"Factures","settings_label_become_a_pro":"Esdevé un Pro","settings_payment_info_expires_$_relative":"Caduca $","settings_payment_info_expires_$_absolute":"Caduca en $1 dies: $2","settings_manage_subscription_error":"Ho sentim, hi ha hagut un error mentre s'intentava gestionar la teva subscripció.","group_billing_packages_title":"Plans per a cada negoci","group_billing_packages_text":"Wunderlist per a Negocis et proporciona totes les característiques que necessites per treballar de forma més intel·ligent com a equip a un preu assequible. Simplement tria ara el pla pel teu negoci.","group_billing_plan_table_team_size":"Tamany de l'Equip","group_billing_plan_table_price":"Preu","group_billing_plan_table_package_name_$":"$ Membres","group_billing_buy_button_label":"Comprar","group_billing_$_off":"$ de descompte","group_billing_larger_team_$":"Tens un equip més gran? $","group_billing_contact_us":"Contacta amb nosaltres!","group_billing_downgrade_error_$_$":"Per canviar el pla a $1 Membres, has de treure $2 col·laborador(s) del compte","group_billing_manage_team":"Fes clic aquí per gestionar el teu equip.","group_billing_button_label_manage":"Gestiona","group_billing_team_plan_title":"El teu Plà Wunderlist Pro","group_billing_team_plan_text":"Wunderlist Pro creix paral·lelament al teu equip! Afegir membres és superfàcil, només cal escriure la seva adreça de correu electrònic a sota. És així de fàcil tant si ja són usuaris de Wunderlist com si no ho són.","group_billing_upgrade_button_label":"Canviar el Plà","group_billing_upgrade_plan_button_label":"Actualitza","group_billing_Downgrade_plan_button_label":"Passa a un Pla inferior","group_billing_view_plans_button_label":"Veure els Plans","group_billing_manage_team_header":"Gestionar el Membres de l'Equip","group_billing_email_address_input_placeholder":"Adreça de correu electrònic","group_billing_manage_count_$_of_$":"$1 de $2","group_billing_cancel_team_plan":"Cancel·la el teu Plà Wunderlist Pro","group_billing_search_coachmark":"Per afegir membres, simplement entra les adreces de correu dels teus companys d'equip i s'afegiran al teu plà Pro.","group_billing_cancel_header":"Estàs segur de que vols cancel·lar la teva subscripció d'Equip de Wunderlist Pro?","group_billing_change_plan_confirmation_$_$_$":"Canviar de pla és senzill. Si vols passar a un pla de $1 Membres ara, et facturarem $2 el proper cicle de facturació que s'inicia el $3. Estàs segur de voler fer això ara?","group_billing_cancel_text":"La teva subscripció arriba fins el final d'aquest mes i no et tornarem a facturar. Tot i que encara podràs veure les característiques Pro, com els fitxers annexats a les tasques, no podràs fer-hi canvis.","error_goup_billing_user_already_pro":"Sembla que aquesta persona ja té un compte Wunderlist Pro. Regala Pro a un altre company d'equip!","error_group_billing_wait_subscription_runs_out":"Hauràs d'esperar a que s'acabi la teva subscripció actual abans de tornar a comprar. Caduca el: $.","button_label_buy_wunderlist_for_business":"Ves a Wunderlist per a Negocis","benefit_payment_service_unavailable":"Servei de pagament no disponible","benefit_name":"Wunderlist","benefit_header_$":"Converteix-te en $","benefit_header_description":"La col·laboració en equips i negocis mai ha estat tan fàcil! Aquí tens 4 molt bones raons per registrar-se a Wunderlist Pro.","benefit_button_buy_monthly":"Mensual","benefit_assign_tasks_title":"Assigna Tasques","benefit_assign_tasks_description":"Delega fàcilment i segueix la pista a les tasques per fer entre col·legues i amics!","benefit_unlimited_subtasks_title":"Nombre il·limitat de subtasques","benefit_unlimited_subtasks_decription":"Trenca les grans tasques en petits passos més fàcils d'aconseguir per millorar la productivitat sense limitacions.","benefit_comments_title":"Comentaris","benefit_comments_description":"Comença una conversa amb els teus companys d'equip sobre qualsevol de les teves tasques. Opina, pregunta o afegeix alguna idea extra.","benefit_backgrounds_update_$":"Per utilitzar els nostres nous fons de pantalla, actualitza a $.","benefit_additional_backgrounds_title":"Fons addicionals","benefit_additional_backgrounds_description":"Descobreix 8 nous i bonics fons de pantalla per personalitzar Wunderlist de la manera que a tu t'agrada.","benefit_files_title":"Fitxers","benefit_files_description":"Adjunta arxius a les tasques pendents i comparteix-los amb els teus companys d'equip.","benefit_coming_soon":"Properament","benefit_assign_become_pro":"Assigna tasques per fer als teus companys amb Wunderlist","benefit_label_accept_terms":"Comprant una subscripció a Wunderlist Pro, acceptes $1 i $2.","benefit_label_need_more_subtasks":"Necessites més subtasques?","sharing_connect_facebook_sharing":"Connecta el teu compte a Wunderlist amb Facebook per convidar fàcilment els teus amics.","sharing_facebook_apprequest_message_$user_$list":"“$1”  voldria compartir la llista “$2” amb tu","sharing_invite":"Convida a Persones","sharing_invite_friends":"Convida Amics","sharing_inviting_requires_account":"Registra't per convidar als teus amics i col·legues a les teves llistes.","sharing_leave_action":"Estàs segur de que vols abandonar aquesta llista?","sharing_leave_button":"Abandonar Llista Compartida","sharing_list_members":"Membres de la Llista","sharing_list_owner":"Propietari","sharing_list_pending_member":"Pendent","sharing_tab_recents":"Recents","sharing_shared_with_you_by":"Compartit amb tu per","smart_list_assigned_to_me":"Assignat a mi","smart_list_conversations":"Converses","smart_list_all":"Totes","smart_list_completed":"Completat","smart_list_inbox":"Safata d'Entrada","smart_list_starred":"Destacat","smart_list_today":"Avui","smart_list_week":"Setmana","label_tell_friends":"Digues-ho als teus amics","social_sharing_heading":"T'agrada Wunderlist? Digues-ho als teus amics!","social_sharing_dialog_headline":"T'agrada Wunderlist?","social_sharing_dialog_danke":"Gràcies!","social_sharing_button_later":"Ara no","social_sharing_button_no_thanks":"No, gràcies","social_sharing_button_facebook":"Compartir","social_sharing_button_follow_us":"Segueix-nos","social_sharing_button_like_us":"Fes m'Agrada","social_sharing_heading_thanks":"Assegura't de seguir totes les novetats de Wunderlist.","social_sharing_button_twitter":"Tweetejar","general_sharing_placeholder":"Estic utilitzant Wunderlist, la meva bonica i simple llista de tasques. Obten-la ara gratis a www.wunderlist.com","twitter_sharing_placeholder":"Estic utilitzant @Wunderlist, la meva bonica i simple llista de tasques. Obten-la ara gratis a www.wunderlist.com","tutorial_welcome_notes_title":"Anotacions","tutorial_welcome_notes_text":"Les anotacions flotants et permeten treballar a dins o a fora de Wunderlist.","tutorial_welcome_notifications_title":"Centre d'activitat","tutorial_welcome_notifications_text":"Personalitza la manera en la que vols que se't notifiqui. Tria entre rebre invitacions i actualitzacions a les teves llistes compartides via correu electrònic i notificacions a l'escriptori o veure-ho tot al Centre d'activitat.","tutorial_welcome_sharing_title":"Convida Amics","tutorial_welcome_sharing_text":"Ara encara és més senzill convidar amics i companys a donar-te un cop de mà.","tutorial_welcome_subtasks_title":"Elements recurrents, recordatoris i subtasques","tutorial_welcome_subtasks_text":"Wunderlist ara té una nova Vista Detallada que et permet afegir fàcilment elements recurrents, recordatoris i subtasques.","tutorial_welcome_user_title":"És tot sobre tú!","tutorial_welcome_user_text":"Canvia la configuració del teu compte, comprova l'estat de la sincronització i personalitza el teu fons de pantalla.","tutorial_welcome_newsletter_subscribe":"Notifica'm per correu electrònic de noves funcions i actualitzacions importants de Wunderlist","tutorial_feature_pro_title":"Característiques de Wunderlist Pro","share_list_email_signature":"Enviat amb Wunderlist – La meva bonica i simple llista de tasques\\nÉs gratis per a iPhone, iPad, Android, Mac, Windows PC i Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ element no sincronitzat","userbar_$_unsynced_item_plural":"$ elements no sincronitzats","userbar_account_settings":"Configuració del compte","userbar_change_background":"Canvia el Fons","userbar_last_synced_$":"Sincronitzat $","userbar_no_internet_connection":"Fora de línia","userbar_preferences":"Preferències","userbar_sync_in_progress":"Sincronitzant...","userbar_user_name_for_unregistered_mode":"Registra't per Sincronitzar","whatsnew_title":"Novetats","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Comentaris","whatsnew_label_voice":"Entrada de Veu","whatsnew_label_groupbilling":"Preus per a Equips","whatsnew_copy_comments":"Manten totes les converses referents a les teves tasques a un mateix lloc amb Wunderlist Pro. Opina, pregunta o afegeix idees extra a qualsevol de les teves tasques per millorar notablement la comunicació dins del teu equip.","whatsnew_copy_pro_accounts":"Afegeix comentaris, assigna tasques, afegeig fitxers i crea subtasques il·limitades amb Wunderlist Pro per assolir més, junts.","whatsnew_copy_voice":"Clica la icona amb el micròfon per dictar les teves tasques o fins i tot per enregistrar un Memo de Veu i adjunta'l com un arxiu.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Registra't per provar Wunderlist Pro i afegeix un Fitxer.","label_add_new_file":"Afegeix un fitxer...","file_uploaded_unsuccessfully":"Ha fallat la pujada de $. Torna-ho a intentar, si et plau.","file_uploaded_failed":"Ha fallat la pujada. Torna-ho a intentar, si et plau.","file_uploaded_failed_deleted":"La pujada de $ ha fallat perquè el fitxer ha estat esborrat del teu disc dur.","label_are_you_sure_permanently_delete_$_file":"Estàs segur de que vols esborrar permanentment el fitxer “$” de Wunderlist?","upload_file_was_not_synced_yet":"Sincronitza, si et plau","upload_file_not_synced_yet":"No Sincronitzat","placeholder_add_comments":"Afegeix un comentari...","placeholder_reply":"Respon...","button_label_go_pro_to_comment":"Fes-te Pro per poder comentar","comment_request_failed":"Ho sentim, no hem pogut carregar Comentaris. Prova-ho de nou si et plau.","comment_load_earlier":"Veure mes Comentaris","coachmark_no_current_comments":"Encara no hi ha comentaris.\\nComença aquí la teva conversa.","coachmark_comments_not_available":"Ho sentim, no hem pogut carregar els anteriors comentaris. Prova-ho de nou d'aquí a una estona si et plau.","notification_$_commented_on_$":"$1 ha comentat sobre $2","notification_$_and_$_commented_on_$":"$1 i$2 han comentat sobre $3","notification_$_and_$_others_commented_on_$":"$1 i $2 més han comentat sobre $3","comments_requires_account":"Registra't per provar Wunderlist Pro i afegeix un Comentari.","non_pro_trial_free_limit_reached":"Has arribat al teu límit gratuït.","non_pro_trial_write_next_comment_$":"Podràs afegir un altre Comentari $.","non_pro_trial_upload_next_file_$":"Podràs afegir un altre Firxer $.","non_pro_trial_assign_next_to_do_$":"Podràs Assignar una altra tasca $.","button_signup_or_login":"Registra't o inicia la sessió","button_it_is_completely_free":"És totalment gratis","label_free_download_for_platforms":"Disponible gratuïtament per a iPhone, iPad, Android, Windows i Mac","label_wunderlist_to_get_things_done":"Més de 5 milions de persones utilitzen Wunderlist per fer les coses.","label_people_who_use_wunderlist":"Se hvem som allerede bruker Wunderlist","label_wunderlist_uses":"Si estàs organitzant el teu negoci, compartint una llista de la compra amb algú que estimes o simplement mantenint un registre de la teva vida diària, Wunderlist és la millor llista de tasques per a tú, el teu equip o la teva familia.","label_install_browser_extension":"Instal·la l'Extensió del Navegador","label_install_chrome_browser_extension":"Instal·la l'Extensió pel Navegador Chrome","label_newsletter_signup":"Inscriu-te al nostre full informatiu","label_know_upcoming_features":"Sigues dels primers en conèixer les noves funcions que es preparen","label_learn_more_about_wunderlist":"Saber-ne més de Wunderlist","label_learn_more":"Saber-ne més...","label_your_email_address":"El teu correu electrònic","button_subscribe_to_newsletter":"Subscriu-te","button_sending_subscribe_to_newsletter":"Enviant...","iyf4_usermenu_label":"Obten Wunderlist Pro Gratis","iyf4_notification_label":"Aconsegueix fins 12 mesos gratis de Wunderlist Pro convidant als teus amics!","iyf4_notification_button_label_var_a":"Comença a convidar","iyf4_notification_button_label_var_b":"Convida Amics","iyf4_notification_button_label_var_c":"Obten Wunderlist Pro Gratis","iyf4_notification_button_label_var_d":"Comparteix Wunderlist Pro","iyf4_dialog_invite_headline_$":"Aconsegueix fins a $ de Wunderlist Pro convidant als teus amics!","iyf4_dialog_invite_headline_incentive":"12 mesos gratis","iyf4_dialog_invite_incentive_$":"$ Wunderlist, us donarem a tots dos 1 mes de Wunderlist Pro gratis (fins a un límit de 12 mesos)","iyf4_dialog_invite_incentive_terms":"Per cada amic que s'apunti","iyf4_dialog_tweet":"M'encanta organitzar la meva vida amb Wunderlist. Obten un mes de Wunderlist Pro gratis aquí:","iyf_notification_label":"Recomana Wunderlist als teus amics i obten la versió Pro gratis per fins a 12 mesos!","iyf_notification_button_label":"Fes-te Pro!","iyf_dialog_step1_headline":"Obten un Compte Pro gratis","iyf_dialog_step1_subheadline":"En 3 senzills passos","iyf_dialog_step1_instruction1_headline":"Comença convidant els teus amics","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter o E-Mail","iyf_dialog_step1_instruction2_headline":"Els teus amics es registren","iyf_dialog_step1_instruction2_subheadline":"esteu tranquils mentre s'uneixen a Wunderlist","iyf_dialog_step1_instruction3_headline":"Disfruta del teu Compte Pro","iyf_dialog_step1_instruction3_subheadline":"1 mes per cada amic que accepti","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 mes per cada $ amics que acceptin","iyf_dialog_step1_next_button":"Comença a convidar","iyf_dialog_step2_subheadline":"per obtenir el teu Compte Pro gratis","iyf_dialog_step2_divider_label":"Comparteix aquest enllaç","iyf_dialog_share_on_facebook":"Comparteix a Facebook","iyf_dialog_post_on_twitter":"Piula a Twitter","iyf_dialog_email_placeholder":"Introdueix una adreça de correu electrònic...","iyf_dialog_more_placeholder":"Afegeix-ne més...","iyf_dialog_step3_headline":"Gràcies per compartir","iyf_dialog_step3_subheadline":"Espera tranquil mentre els teus amics s'hi uneixen","iyf_dialog_step3_success_headline":"Invitacions enviades amb èxit","iyf_dialog_step3_success_subheadline":"T'avisarem tan aviat com el teu compte Pro estigui a punt.","iyf_dialog_step3_invite_more":"Convida a més gent","meta_title":"Wunderlist 2: La teva senzilla i bonica app de llista de tasques online","meta_description":"Més de 5 milions de persones ja utilitzen Wunderlist per gestionar tasques, llistes de feines i per fer les coses. Wunderlist és la millor llista de tasques per a tú, el teu equip o la teva familia.","meta_keywords":"6wunderkinder, productivitat, col·laborar, gestió de tasques, gestor de tasques, llista de tasques pendents, pendents, llista, gtd, organitzar, planificar, llista de la compra, recordatoris, subtasques, llistes intel·ligents, llista del supermercat, llista de pel·lícules, llista compartida","enable_desktop_notifications_text":"Clica 'Confirmar' i després 'Permetre' al teu navegador per activar notificacions.","notification_add_to_browser":"Tingues el teu Wunderlist a només un clic. Afegeix l'Aplicació Web de Wunderlist al teu navegador.","notification_add_extension_to_browser":"Guarda ràpidament tot el teu contingut favorit de la web directament a Wunderlist. Instal·la ara l'extensió de Chrome 'Afegeix a Wunderlist'.","button_add_to_chrome":"Afegir a Chrome","button_add_to_store_added":"Afegit","aria_activity_center_hint":"Centre d'Activitat. Prem \"Esc\" per tancar.","aria_exit_search":"Surt de la Cerca","aria_search":"Cerca","aria_sort_list":"Ordena la Llista","aria_thank_you":"Esperem que les nostres funcions d'accessibilitat hagin funcionat bé per a tu. Si us plau, envia qualsevol comentari que tinguis referent a la implementació de la nostra accessibilitat a support@wunderlist.com. Gràcies per escollir Wunderlist.","aria_user_menu_hint":"Menú d'usuari. Prem \"Esc\" per tancar.","aria_assign_to_$":"Assignar a $","momentjs_months":"Gener_Febrer_Març_Abril_Maig_Juny_Juliol_Agost_Setembre_Octubre_Novembre_Desembre","momentjs_monthsShort":"gen_febr_març_abr_mai_juny_jul_ag_set_oct_nov_des","momentjs_weekdays":"Diumenge_Dilluns_Dimarts_Dimecres_Dijous_Divendres_Dissabte","momentjs_weekdaysShort":"dg._dl._dt._dc._dj._dv._ds.","momentjs_weekdaysMin":"dg_dl_dt_dc_dj_dv_ds","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Avui a la/les] LT","momentjs_calendar_nextDay":"[Demà a la/les] LT","momentjs_calendar_nextWeek":"dddd [a la/les] LT","momentjs_calendar_lastDay":"[Ahir a la/les] LT","momentjs_calendar_lastWeek":"dddd [passat] [a la/les] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"en %s","momentjs_relativeTime_past":"fa %s","momentjs_relativeTime_s":"fa uns segons","momentjs_relativeTime_m":"un minut","momentjs_relativeTime_mm":"%d minuts","momentjs_relativeTime_h":"una hora","momentjs_relativeTime_hh":"%d hores","momentjs_relativeTime_d":"un dia","momentjs_relativeTime_dd":"%d dies","momentjs_relativeTime_M":"un mes","momentjs_relativeTime_MM":"%d mesos","momentjs_relativeTime_y":"un any","momentjs_relativeTime_yy":"%d anys"}
};
});
define('languages/czech',[],function() {
return {
'name': 'czech',
'data': {"actionbar_print_selected_item":"Vytisknout označené","actionbar_print_$_selected_items_plural":"Vytisknout $ položky","actionbar_email_selected_item":"Odeslat vybrané","actionbar_email_$_selected_items_plural":"Odeslat $ položky","actionbar_sort_alphabetically":"Seřadit abecedně","actionbar_sort_due_date":"Seředit dle termínu","actionbar_sort_assignee":"Seřadit dle šéfa","api_error_account_already_exists":"Účet s touto emailovou adresou již existuje.","api_error_connection_error":"Hups, zdá se že byl problém dosáhnout serveru. Prosíme zkuste znovu.","api_error_general_error":"Hups, v současnosti nelze dosáhnout serveru. Prosíme zkuste znovu.","api_error_incorrect_login":"Emailová adresa, nebo heslo které jste zadali je nesprávně.","api_error_incorrect_password":"Heslo které jste zadali je nesprávně.","api_error_service_down":"Klíčová část služby WunderAPI je mimo provoz.","api_error_unknown":"Nastala neočekávaná a nezpracovatelná chyba.","api_error_validation_error_unable_to_signup":"Nebyly jsme schopni Vás přihlásit pomocí zadané emailové adresy.","api_error_not_a_beta_user":"Nejste členem programu Wunderlist beta.","button_back":"Zpět","button_cancel":"Zrušit","button_confirm":"Potvrdit","button_download":"Stáhnout","button_change":"Změnit","button_choose":"Zvolit","button_connect":"Připojit","button_connect_facebook":"Propojit s Facebookem","button_continue":"Pokračovat","button_delete":"Vymazat","button_disconnect":"Odpojit","button_dismiss":"Odmítnout","button_done":"Hotovo","button_edit":"Upravit","button_get_started":"Začínáme","button_go_back":"Jít zpět","button_go_back_sentence":"Jít zpět","button_learn_more":"Další informace","button_go_back_to_login":"Zpět na přihlášení","button_go_to_web_app":"Přejít k webové aplikaci","button_join_now":"Připojte se","button_log_in":"Přihlásit se","button_log_in_with_$":"Přihlásit se pomocí","button_log_out":"Odhlásit se","button_log_in_facebook":"Přihlásit se pomocí Facebooku","button_next":"Další","button_no":"Ne","button_no_due_date":"Bez termínu dokončení","button_ok":"OK","button_remove_due_date":"Odstranit termín dokončení","button_remove_reminder":"Odstranit připomínku","button_email_list":"Odeslat seznam emailem","button_print_list":"Vytisknout seznam","button_reset_password":"Resetovat heslo","button_retry":"Zkusit znovu","button_save":"Uložit","button_send":"Odeslat","button_sign_up":"Zaregistrovat se","button_sign_up_with_$":"Zaregistrovat se pomocí","button_sign_up_for_free":"Zaregistrovat se zdarma","button_sign_up_facebook":"Zaregistrovat se pomocí Facebooku","button_support_center":"Centrum podpory","button_subscribe":"Úžasné, ano prosím!","button_try_again":"Zkusit znovu","button_try_wunderlist":"Vyzkoušet Wunderlist","button_yes":"Ano","coachmark_all_list_empty":"Zatím nebyla přidána žádná položka. Do toho, přidejte něco.","coachmark_completed_list_empty":"Zatím od Vás není dokončena ani jedna položka. Do toho, označte nějaké položky z Vašeho seznamu!","coachmark_no_search_results":"Žádné výsledky hledání","coachmark_sharing_invite_friends_heading":"Pozvat Vaše přátele","coachmark_sharing_invite_friends_text_$":"Vaši přátelé budou moci vytvářet, odstraňovat a odznačovat položky v seznamu “$”.","coachmark_sharing_recent_no_contacts_heading":"Žádné poslední kontakty","coachmark_sharing_recent_no_contacts_text_$":"Zadejte emailovou adresu, nebo prohledejte Vaše kontakty. Jakmile tak učiníte, Vaši přátelé budou moci vytvářet, odstraňovat a odznačovat položky v seznamu “$”.","coachmark_assigned_to_me_list_empty":"Není pro vás nic k přiřazení","coachmark_conversations_list_empty":"Žádné probíhající konverzace","coachmark_starred_list_empty":"Nemáte žádné položky označené jako důležité","coachmark_today_list_empty":"Gratulujeme! Nemáte žádnou položku s dnešní splatností, nebo po splatnosti","coachmark_week_list_empty":"Vyrážíte na dovolenou? Nemáte žádné položky se splatností po následujících 7 dní","error_list_not_found":"Seznam který hledáte nelze najít","error_share_not_created":"Nastal problém během sdílení vašeho seznam. Zkuste to prosím později.","error_task_not_found":"Položku, kterou hledáte, nelze najít","error_page_not_found":"Stránka nenalezena","error_title_not_found":"Nenalezeno","label_are_you_sure_permanently_delete_item":"Opravdu chcete navždy odstranit tuto položku?","label_are_you_sure_permanently_delete_item_plural":"Opravdu chcete navždy odstranit tyto položky?","label_activity_center":"Centrum aktivit","label_are_you_sure_permanently_delete_$_list":"Opravdu chcete navždy odstranit seznam “$”?","label_are_you_sure_permanently_delete_$_task":"Opravdu chcete navždy odstranit položku “$”?","label_are_you_sure_permanently_delete_task_plural":"Opravdu chcete navždy odstranit tyto položky?","label_are_you_sure_permanently_delete_$_subtask":"Opravdu chcete navždy odstranit podřazený úkol “$”?","label_cant_undo":"Tuto akci není možné vrátit zpět.","label_completed_tasks_heading":"1 položka kompletní.","label_$_completed_tasks_heading_plural":"$ kompletních položek","label_connecting":"Připojování...","label_minisite_description_line_1":"Mějte přehled o všem co chcete udělat.","label_minisite_description_line_2":"Wunderlist je zdarma a dostupný na všech hlavních platformách.","label_minisite_share_deleted_or_no_access":"Zdá se, že toto bylo vymazáno, nebo již nemáte přístup.","label_minisite_contact_sender_for_info":"Pro více informací kontaktujte prosím osobu která s Vámi tento seznam nasdílela","label_minisite_$_invited_you_to_the_list_$":"$1 Vás pozval/a k seznamu $2","label_minisite_empty_list_$":"Tento seznam je momentálně prázdný. Klikněte nahoře na tlačítko Zaregistrovat se a můžete začít přidávat položky do seznamu $.","label_day_0":"NE","label_day_1":"PO","label_day_2":"ÚT","label_day_3":"ST","label_day_4":"ČT","label_day_5":"PÁ","label_day_6":"SO","label_delete_file":"Smazat soubor","label_delete_list":"Vymazat seznam","label_delete_task":"Vymazat položku","label_delete_task_plural":"Vymazat položky","label_delete_subtask":"Vymazat podřazený úkol","label_due_$":"Do $","label_due_on":"Termín dokončení je $","label_due_date":"Termín dokončení","label_email":"Email","label_every":"Každé","label_loading":"Načítání...","label_logging_out":"Odhlašování","label_name":"Jméno","label_newsletter":"Wunderlist novinky","label_none":"Žádné","label_notification":"Upozornění","label_oops":"Jejda!","label_or":"nebo","label_password":"Heslo","label_relative_date_today":"Dnes","label_relative_date_today_with_date":"Dnes, $","label_relative_date_today_mid_sentence":"dnes","label_relative_date_tomorrow":"Zítra","label_relative_date_tomorrow_with_date":"Zítra, $","label_relative_date_tomorrow_mid_sentence":"zítra","label_relative_date_yesterday":"Včera","label_remind_me_at_$":"Připomeň mi v $","label_reminder":"Připomínka","label_reminder_message_$":"Pouze přátelská připomínka: $","label_repeat_every_day":"Opakovat každý den","label_repeat_every_week":"Opakovat každý týden","label_repeat_every_month":"Opakovat každý měsíc","label_repeat_every_year":"Opakovat každý rok","label_repeat_custom":"Volitelné...","label_repeat_day":"Každý den","label_repeat_day_$_plural":"Každé $ dny","label_repeat_month":"Každý měsíc","label_repeat_month_$_plural":"Každé $ měsíce","label_repeat_week":"Každý týden","label_repeat_week_$_plural":"Každé $ týdny","label_repeat_never":"Nikdy neopakovat","label_repeat_year":"Každý rok","label_repeat_year_$_plural":"Každé $ roky","label_reset_password":"Obnova hesla","label_rights_reserved":"Všechna práva vyhrazena","label_still_fetching_tasks":"Stále nahrávám úkoly ...","label_sync":"Synchronizovat","label_time_am":"DOP","label_time_day_plural":"dny","label_time_week_plural":"týdny","label_time_month_plural":"měsíce","label_time_pm":"ODP","label_time_year_plural":"roky","label_assign_to":"Delegovat","label_unassigned":"Nepřiřazené","label_assign_me":"Já","label_created_$":"Vytvořeno $","label_created_by_$":"Vytvořeno uživatelem $","label_created_on_$":"Vytvořeno $","label_created_$_by_$":"Vytvořeno $1 uživatelem $2","label_created_by_$_on_$":"Vytvořeno $1 dne $2","label_completed_$":"Dokončeno $","label_completed_on_$":"Dokončeno dne $","label_completed_$_by_$":"Dokončil $1 dne $2","label_completed_by_$_on_$":"Dokončeno uživatelem $1 dne $2","login_add_photo_hint":"Přizpůsobte si Váš Wunderlist účet nahráním fotky.","login_already_have_account":"Už máte účet?","login_email_not_valid":"Zadejte prosím platnou emailovou adresu.","login_empty_name":"Prosím zadejte Vaše jméno.","login_empty_password":"Prosím zadejte Vaše heslo.","login_password_not_valid":"Zadejte prosím správné heslo.","login_empty_email":"Zadejte prosím email.","login_enter_name":"Kdo jste?","login_enter_password":"Už máte téměř hotovo","login_enter_password_hint":"Zvolte heslo a dokončete vytváření Vašeho účtu Wunderlist.","login_forgot_password":"Zapomenuté heslo","login_forgot_password_heading":"Zapomenuté heslo?","login_forgot_password_text":"Vložte emailovou adresu se kterou jste se registrovali. My Vám následně pošleme email s odkazem pro resetování hesla.","login_no_account_yet":"Nemáte účet?","login_password_changed":"Heslo změněno","login_password_not_match":"Heslo nesouhlasí","login_password_reset_email_has_been_sent":"Prosím zkontrolujte Vaši emailovou schránku pro instrukce k resetování hesla.","login_reset_password_heading":"Je čas vytvořit Vaše nové heslo.","login_reset_password_success":"Stačí stisknout tlačítko níže a můžete se znovu přihlásit do Wunderlistu.","login_reset_password_success_heading":"Hurá! Vaše heslo bylo úspěšně změněno.","login_password_too_short":"Heslo musí být nejméně 5 znaků dlouhé.","login_sign_up":"Zaregistrovat se","login_want_to_try_again":"Chcete zkusit znovu?","login_accept_terms":"By signing up you accept our $1 and $2.","logout_timeout_title":"Chyba synchronizace","logout_timeout_text":"Nedaří se nám synchronizovat Vaše data. Chcete zkusit znovu, nebo se jen odhlásit?","mobile_tutorial_welcome_to":"Vítejte v","mobile_tutorial_wunderlist_subtitle":"Váš krásný a jednoduchý seznam úkolů","notifications_desktop_enable_heading":"Povolit upozornění na pracovní ploše?","notifications_no_notifications":"Žádná aktivita","notifications_no_notifications_message":"Pozvánky ke sdíleným seznamům a jiné aktivity s zobrazují zde.","notifications_event_accept":"Přijmout","notifications_event_accepted":"Přijatý","web_upgrade_ie9_not_supported":"Wunderlist nepodporuje Internet Explorer 9. Prosím nainstalujte verzi $ nebo $","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Looks like you are using a device with a touch screen. Would you like to enable a touch optimized interface? You can always change this in your account settings.","web_setting_enable_touch_for_$":"Enable Touch for: $","web_settings_text_refresh_may_be_required":"Refresh may be required","rate_label":"Hodnotit Wunderlist","rate_app_heading":"Ohodnoťte a zrecenzujte Wunderlist","rate_app_message_web_chrome":"Děkujeme, že používáte Wunderlist. Rádi uslyšíme co si o nás myslíte! Řekněte nám to za použití hodnocení a recenze aplikace Wunderlist v Chrome Web Store ★★★★★","rate_app_button_later":"Připomenout později","rate_app_button_no":"Ne, děkuji","rate_app_button_yes":"Ohodnotit Wunderlist","placeholder_add_due_today_to_inbox":"Přidat položku s dnešním časem vypršení do \"Doručené\"...","placeholder_add_list":"Přidat seznam","placeholder_add_subtask":"Přidat podřazený úkol","placeholder_add_starred_to_inbox":"Přidat důležité položky do \"Doručené\"...","placeholder_add_task_to_$":"Přidat položku do \"$\"...","placeholder_add_to_inbox":"Přidat novou položku do \"Doručené\"","placeholder_new_list":"Nový seznam","placeholder_remind_me":"Připomeň mi","placeholder_search":"Hledání… ","placeholder_sharing_search":"Jméno, nebo emailovou adresu... ","placeholder_set_due_date":"Termín dokončení","browser_outdated_heading":"A jéje, vypadá to, že tvůj prohlížeč není aktualizovaný.","browser_outdated_update":"Updatujte svůj prohlížeč","browser_outdated_explanation":"Wunderlist je založen na nejnovějších a nejlepších technologiích. Stáhněte si proto prosím nejnovější verzi svého prohlížeče, abyste ho mohli plně využít.","prenamed_list_movies":"Filmy ke sledování","prenamed_list_private":"Soukromý","prenamed_list_shopping":"Nákup","prenamed_list_wishlist":"Přání","prenamed_list_work":"Pracovní","prenamed_list_read_later":"Přečíst později","settings_account_change_email":"Změnit email...","settings_account_change_password":"Změnit heslo...","settings_account_delete_confirmation":"Napište: \"Jsem si jistý\"","settings_account_delete_confirmation_text":"Jsem si jistý","settings_account_drop_image":"Sem vložte obrázek","settings_account_connect_facebook_account":"Spojením Vašeho účtu Wunderlist s Facebookem Vám pomůže sdílet seznamy úkolů s Vašimi přáteli jednoduše, rychle a snadno. ","settings_general_12_hour":"12 hodin","settings_general_24_hour":"24 hodin","settings_general_confirm_deletion":"Potvrdit vymazání položek","settings_general_create_new_tasks":"Přidat nové položky","settings_general_date_format":"Formát data","settings_general_language":"Jazyk","settings_general_start_of_week":"Začátek týdne","settings_general_start_of_week_sunday":"Neděle","settings_general_start_of_week_saturday":"Sobota","settings_general_start_of_week_monday":"Pondělí","settings_general_sound_task_completion":"Povolit zvuk při dokončení úkolu","settings_general_sound_new_notifications":"Povolit zvuk pro nová upozornění","settings_general_print_done_tasks":"Vytisknout dokončené úkoly","settings_general_tasks_bottom":"Konec seznamu","settings_general_tasks_top":"Začátek seznamu","settings_general_time_format":"Formát času","settings_heading_team":"Business","settings_heading_about":"O aplikaci","settings_heading_account":"Účet","settings_heading_general":"Obecné","settings_heading_notification":"Upozornění","settings_heading_shortcuts":"Zkratky","settings_heading_sidebar":"Postranní panel","settings_imprint":"Otisk","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"Upozorněte mě na důležité události skrze:","settings_notifications_notify_me_on_text":"Budeme vás informovat o důležitých událostech, například pokud někdo akceptuje pozvánku do sdíleného seznamu, nebo pokud někdo přidá či splní úkol v tomto seznamu.","settings_sidebar_smart_lists_title":"Zobrazovat tyto inteligentní seznamy v postranní liště.","settings_sidebar_smart_lists_auto":"Auto","settings_sidebar_smart_lists_hidden":"Skryté","settings_sidebar_smart_lists_visible":"Viditelný","settings_sync_full":"Synchronizuj nyní","settings_account_account_backup":"Záloha účtu","settings_account_restore_backup":"Import Backup Data","settings_account_backup_description":"Backup data includes all your Lists, Tasks, Subtasks, Notes, and Reminders. Please note it does not include those Lists that were shared with you, Files, Comments, Shared List recipients and previous application settings.","settings_account_data_is_being_processed":"Hold tight! Your backup data is being processed. We will send you an email when everything is complete.","settings_account_change_password_error":"Při aktualizaci vašeho hesla nastal problém. Prosím zkuste znovu.","settings_account_click_to_download_backup":"Kliknout pro stažerní","settings_account_create_backup":"Vytvořit zálohu","settings_account_current_password":"Aktuální heslo","settings_account_delete_account":"Smazat účet","settings_account_delete_account_confirm":"Opravdu chcete vymazat Váš účet?","settings_account_delete_account_confirm_text":"Vymazáním Vašeho účtu vymažete trvale a nevratně všechny Vaše seznamy a položky.","settings_account_fetching_data":"Stahuji data...","settings_account_new_password":"Nové heslo","settings_account_repeat_new_password":"Napište znovu Vaše nové heslo","settings_account_right_click_and_save_as":"Pravé tlačítko a Uložit","settings_third_party_libraries":"Licence","settings_background_credits":"Na vývoji spolupracovali","settings_notifications_email_enabled":"E-mailová upozornění","settings_notifications_desktop_enabled":"Upozornění na pracovní ploše","settings_notifications_push_enabled":"Push upozornění","settings_privacy_policy":"Zásady ochrany osobních údajů","settings_shortcuts_arrow_keys":"Směrové klávesy","settings_shortcuts_delete_item":"Vymazat vybraný seznam nebo položku","settings_shortcuts_mark_done":"Označit jako \"Dokončené\"","settings_shortcuts_mark_starred":"Označit jako \"Důležité\"","settings_shortcuts_new_list":"Přidat nový seznam","settings_shortcuts_new_task":"Přidat novou položku","settings_shortcuts_open_all_smart_list":"Otevřít inteligentní seznam \"Vše\"","settings_shortcuts_open_assigned_smart_list":"Otevřít Smart List úkolů delegovaných mně","settings_shortcuts_open_conversations_smart_list":"Open 'Conversations' Smart List","settings_shortcuts_open_done_smart_list":"Otevřít inteligentní seznam \"Dokončené\"","settings_shortcuts_open_inbox":"Otevřít Doručené","settings_shortcuts_open_preferences":"Otevřít předvolby","settings_shortcuts_open_search":"Hledání","settings_shortcuts_open_starred_smart_list":"Otevřít inteligentní seznam \"Důležité\"","settings_shortcuts_open_today_smart_list":"Otevřít inteligentní seznam \"Dnes\"","settings_shortcuts_open_week_smart_list":"Otevřít inteligentní seznam \"Týden\"","settings_shortcuts_reset":"Obnovit výchozí","settings_shortcuts_select_all_tasks":"Vybrat všechny položky","settings_shortcuts_show_more":"Zobrazit více","settings_shortcuts_hide":"Skrýt","settings_shortcuts_show_notifications":"Zobrazit centrum aktivit","settings_shortcuts_step_through_list":"Pokročit skrze seznamy","settings_shortcuts_step_through_task":"Pokročit skrze položky","settings_terms_of_use":"Podmínky užívání","settings_account_header_free":"Zdarma","settings_account_header_unregistered":"Sign Up","settings_account_header_account_$":"$ Účet","settings_account_pro_description":"Add comments and files to your to-dos and assign them to your colleagues. Collaboration in teams has never been easier!","settings_account_register_wunderlist_description":"Register for Wunderlist to sync your lists across all your devices.","settings_manage_subscription_button":"Spravovat předplatné","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Jej, nyní jste $!","settings_account_header_pro_description":"Wunderlist Pro je nejlepší možnost, jak zachovat v projektech tah na branku. Pozvěte své kolegy ke spolupráci a pracujte s čistou hlavou!","settings_upgrade_to_pro_label":"Upgradovat na $","settings_label_pro_account":"Pro účet","settings_label_purchased_from_$":"Zakoupeno z: $","settings_label_purchased_from_$_by_$":"Purchased from $1 by: $2","settings_label_expires_in_$":"Vyprší za $","setting_label_next_billing_date":"Další den zúčtování:","setting_label_cancel_subscription":"Zrušit předplatné","setting_heading_cancel_subscription":"Opravdu chcete zrušit předplatné Wunderlist Pro ?","setting_description_cancel_subscription":"Přestože budete mít stále přístup k vašim datům, jakmile vaše předplatné vyprší, budete mít přístup pouze k základním funkcím Wunderlistu.","setting_label_cancel_subscription_success":"Vaše předplatné bylo úspěšně zrušeno.","settings_label_invoices":"Invoices","settings_label_become_a_pro":"Staňte se Pro","settings_payment_info_expires_$_relative":"Vyprší $","settings_payment_info_expires_$_absolute":"Vyprší za $1 dnů: $2","settings_manage_subscription_error":"Omlouváme se, při nastavování předplatného se vyskytla chyba.","group_billing_packages_title":"Plans for every business ","group_billing_packages_text":"Wunderlist for Business provides you with all the features you need to work smarter as a team at an affordable price. Simply select the right plan for your business now.","group_billing_plan_table_team_size":"Team Size","group_billing_plan_table_price":"Price","group_billing_plan_table_package_name_$":"$ Members","group_billing_buy_button_label":"Purchase","group_billing_$_off":"$ off","group_billing_larger_team_$":"Have a larger team? $","group_billing_contact_us":"Contact us!","group_billing_downgrade_error_$_$":"In order to switch to the $1 Members plan, you must remove $2 teammate(s) from the account. ","group_billing_manage_team":"Click here to manage your team.","group_billing_button_label_manage":"Manage","group_billing_team_plan_title":"Your Wunderlist Pro Plan","group_billing_team_plan_text":"Wunderlist Pro grows right along with your team! Adding members is super easy, just enter their email addresses below. It’s that simple whether or not they’re already a Wunderlist user.","group_billing_upgrade_button_label":"Change Plan","group_billing_upgrade_plan_button_label":"Upgrade","group_billing_Downgrade_plan_button_label":"Downgrade","group_billing_view_plans_button_label":"View Plans","group_billing_manage_team_header":"Manage Team Members","group_billing_email_address_input_placeholder":"Email address","group_billing_manage_count_$_of_$":"$1 of $2","group_billing_cancel_team_plan":"Cancel Your Wunderlist Pro Plan","group_billing_search_coachmark":"To add members, simply enter the email addresses of your teammates, and they'll be added to your Pro plan.","group_billing_cancel_header":"Are you sure you want to cancel your team’s Wunderlist Pro Subscription?","group_billing_change_plan_confirmation_$_$_$":"Changing plans is easy. If you go for $1 Members plan now, you’ll be billed $2 in the next billing cycle starting on $3. Are you sure you want to do this now?","group_billing_cancel_text":"Your Pro subscription will run until the end of month, and you won’t be billed again. While you’ll still retain the ability to view any Pro features like files attached to tasks, you won’t be able to make any changes to them.","error_goup_billing_user_already_pro":"Looks like this person already has a Wunderlist Pro account. Give the gift of Pro to another teammate!","error_group_billing_wait_subscription_runs_out":"You’ll have to wait until your current subscription runs out before repurchasing. Expires on: $.","button_label_buy_wunderlist_for_business":"Go to Wunderlist for Business","benefit_payment_service_unavailable":"Platební brána je nedostupná","benefit_name":"Wunderlist Pro","benefit_header_$":"Staňte se $","benefit_header_description":"Spolupráce v teamu nikdy nebyla jednodušší! Známe 4 velmi dobré důvody pro přechod na Wunderlist Pro.","benefit_button_buy_monthly":"Měsíčně","benefit_assign_tasks_title":"Možnost delegovat úkol","benefit_assign_tasks_description":"Snadné delegování a kontrola stavu úkolů s přáteli a kolegy","benefit_unlimited_subtasks_title":"Neomezené podúkoly","benefit_unlimited_subtasks_decription":"Rozdělujte velké úlohy na více menších a přehlednějších podúkolů a to bez omezení jejich počtu.","benefit_comments_title":"Comments","benefit_comments_description":"Start a conversation with your teammates about any of your to-dos. Leave feedback, ask a question or add some extra insight.","benefit_backgrounds_update_$":"Abyste mohl využít nových pozadí, musíte upgradovat svůj účet.","benefit_additional_backgrounds_title":"Nové pozadí","benefit_additional_backgrounds_description":"Poznejte 8 nových krásných pozadí pracovní plochy Wunderlist, které se vám budou líbit!","benefit_files_title":"Soubory","benefit_files_description":"Vkládejte soubory jako přílohy k jednotlivým úkolům a sdílejte je se svými kolegy.","benefit_coming_soon":"Již brzy","benefit_assign_become_pro":"Delegujte úkoly vašim kolegům pomocí Wunderlist Pro","benefit_label_accept_terms":"Zakoupením předplatného Wunderlist Pro akceptujete $1 a $2.","benefit_label_need_more_subtasks":"Potřebujete více podúkolů ?","sharing_connect_facebook_sharing":"Propojte Váš účet Wunderlist s Facebookem a lehce tak pozvěte Vaše přátele.","sharing_facebook_apprequest_message_$user_$list":"Uživatel “$1” by s vámi rád sdílel seznam “$2” ","sharing_invite":"Pozvat lidi","sharing_invite_friends":"Pozvat přátele","sharing_inviting_requires_account":"Zaregistrujte se pro pozvání přátel a kolegů do Vašich seznamů","sharing_leave_action":"Opravdu chcete opustit tento seznam?","sharing_leave_button":"Opustit Sdílený seznam","sharing_list_members":"Seznam členů","sharing_list_owner":"Vlastník","sharing_list_pending_member":"Nevyřízené","sharing_tab_recents":"Naposledy použité","sharing_shared_with_you_by":"Sdílí s Vámi","smart_list_assigned_to_me":"Přiřazeno ke mně","smart_list_conversations":"Conversations","smart_list_all":"Všechny","smart_list_completed":"Dokončené","smart_list_inbox":"Doručené","smart_list_starred":"Důležité","smart_list_today":"Dnes","smart_list_week":"Týden","label_tell_friends":"Řekněte o nás Vašim přátelům","social_sharing_heading":"Řekněte o nás na vaši oblíbené sociální síti!","social_sharing_dialog_headline":"Love Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"Nyní ne","social_sharing_button_no_thanks":"Ne, děkuji","social_sharing_button_facebook":"Sdílet","social_sharing_button_follow_us":"Sledujte nás","social_sharing_button_like_us":"Přidejte Like","social_sharing_heading_thanks":"Sledujte nás a objevte novinky Wunderlist.","social_sharing_button_twitter":"Tweetovat","general_sharing_placeholder":"I’m using Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","twitter_sharing_placeholder":"I’m using @Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","tutorial_welcome_notes_title":"Poznámky","tutorial_welcome_notes_text":"Oddělitelné poznámky Vám dovolí pracovat uvnitř, nebo i mimo Wunderlist.","tutorial_welcome_notifications_title":"Centrum aktivit","tutorial_welcome_notifications_text":"Zvolte si způsob jakým chcete být upozorňováni. Vyberte, zda chcete přijímat pozvánky a aktualizace Vašich sdílených seznamů emailem a upozorněním na pracovní ploše, nebo vše sledovat z Centra aktivit.","tutorial_welcome_sharing_title":"Pozvat přátele","tutorial_welcome_sharing_text":"Nyní je mnohem jednodušší pozvat Vaše přátele, kolegy a podat jim pomocnou ruku.","tutorial_welcome_subtasks_title":"Opakující se položky, upomínky a podřazené úkoly","tutorial_welcome_subtasks_text":"Wunderlist nyní obsahuje nový detailní pohled, který umožňuje jednoduše přidat opakující se položky, připomínky a podůkoly.","tutorial_welcome_user_title":"Vše záleží na Vás!","tutorial_welcome_user_text":"Změnit nastavení účtu, zkontrolovat stav synchronizace a zvolit si vlastní pozadí.","tutorial_welcome_newsletter_subscribe":"Upozorněte mě na nové úkoly a funkce Wunderlistu pomocí emailu","tutorial_feature_pro_title":"Funkce Wunderlist Pro","share_list_email_signature":"Sent with Wunderlist – My beautiful and simple to-do list\\nIt’s free for iPhone, iPad, Android, Mac, Windows PC and Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ nesynchronizovaných položek","userbar_$_unsynced_item_plural":"$ nesynchronizovaných položek","userbar_account_settings":"Nastavení účtu","userbar_change_background":"Změnit pozadí","userbar_last_synced_$":"Naposledy synchronizováno $","userbar_no_internet_connection":"Offline","userbar_preferences":"Předvolby","userbar_sync_in_progress":"Synchronizuji...","userbar_user_name_for_unregistered_mode":"Zaregistrovat se pro synchronizaci","whatsnew_title":"Co je nového","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Comments","whatsnew_label_voice":"Voice Input","whatsnew_label_groupbilling":"Team Pricing","whatsnew_copy_comments":"Keep all the conversations about your to-dos in one place with Comments in Wunderlist Pro. Leave feedback, ask a question or add extra insight to any of your to-dos to greatly improve communication within your team.","whatsnew_copy_pro_accounts":"Add Comments, Assign to-dos, add Files and create Unlimited Subtasks with Wunderlist Pro to accomplish more, together.","whatsnew_copy_voice":"Click the microphone icon to dictate your to-dos or even record a Voice Memo and attach it as a file.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Sign up to try Wunderlist Pro and add a File.","label_add_new_file":"Přidat soubor...","file_uploaded_unsuccessfully":"Upload of $ failed. Please try again.","file_uploaded_failed":"Upload failed. Please try again.","file_uploaded_failed_deleted":"Upload of $ failed, because the file was deleted from your hard drive.","label_are_you_sure_permanently_delete_$_file":"Opravdu chcete navždy odstranit soubor $” z Wunderlist?","upload_file_was_not_synced_yet":"Please sync","upload_file_not_synced_yet":"Not Synced","placeholder_add_comments":"Add a comment...","placeholder_reply":"Reply...","button_label_go_pro_to_comment":"Go Pro to comment","comment_request_failed":"Sorry, we couldn't load Comments. Please try again.","comment_load_earlier":"View more Comments","coachmark_no_current_comments":"No comments yet.\\nStart your conversation here.","coachmark_comments_not_available":"Sorry, we couldn’t load the previous comments. Please try again in a few moments.","notification_$_commented_on_$":"$1 commented on $2","notification_$_and_$_commented_on_$":"$1 and $2 commented on $3","notification_$_and_$_others_commented_on_$":"$1 and $2 others commented on $3","comments_requires_account":"Sign up to try Wunderlist Pro and add a Comment.","non_pro_trial_free_limit_reached":"You’ve reached your Free limit!","non_pro_trial_write_next_comment_$":"You can add another Comment $.","non_pro_trial_upload_next_file_$":"You’ll be able to add another File $.","non_pro_trial_assign_next_to_do_$":"You can Assign another to-do $.","button_signup_or_login":"Zaregistrovat nebo přihlásit","button_it_is_completely_free":"Je navždy zdarma","label_free_download_for_platforms":"Dostupné zdarma pro iPhone, iPad, Android, Windows a Mac","label_wunderlist_to_get_things_done":"More than 5 million people use Wunderlist to get things done.","label_people_who_use_wunderlist":"Podívejte se kdo již Wunderlist používá","label_wunderlist_uses":"Ať už organizujete své podnikání, sdílíte nákupní seznam s milovanou osobou nebo si prostě udržujete přehled o svém každodenním životě, Wunderlist je nejlepší to-do list pro vás, váš tým i vaši rodinu.","label_install_browser_extension":"Nainstalovat plug-in do prohlížeče","label_install_chrome_browser_extension":"Nainstalujte rozšíření pro prohlížeč Chrome","label_newsletter_signup":"Přihlásit k odběru novinek","label_know_upcoming_features":"Buďte mezi prvními, kteří se dozví o přicházejících novinkách","label_learn_more_about_wunderlist":"Zjistit více o Wunderlistu","label_learn_more":"Další informace...","label_your_email_address":"Vaše emailová adresa","button_subscribe_to_newsletter":"Odebírat","button_sending_subscribe_to_newsletter":"Odesílám...","iyf4_usermenu_label":"Get Wunderlist Pro for Free","iyf4_notification_label":"Get up to 12 free months of Wunderlist Pro by inviting your friends!","iyf4_notification_button_label_var_a":"Start Inviting","iyf4_notification_button_label_var_b":"Invite Friends","iyf4_notification_button_label_var_c":"Get Wunderlist Pro for Free","iyf4_notification_button_label_var_d":"Share Wunderlist Pro","iyf4_dialog_invite_headline_$":"Get up to $ of Wunderlist Pro by inviting your friends!","iyf4_dialog_invite_headline_incentive":"12 free months","iyf4_dialog_invite_incentive_$":"$ Wunderlist, we'll give you both 1 month of Wunderlist Pro for free (up to a limit of 12 months)","iyf4_dialog_invite_incentive_terms":"For every friend who joins","iyf4_dialog_tweet":"I love organizing my life with Wunderlist. Get a month of Wunderlist Pro for free here:","iyf_notification_label":"Refer Wunderlist to your friends and get Pro for free up to 12 months!","iyf_notification_button_label":"Go Pro!","iyf_dialog_step1_headline":"Get a free Pro Account","iyf_dialog_step1_subheadline":"in 3 easy steps","iyf_dialog_step1_instruction1_headline":"Start inviting your friends","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter or E-Mail","iyf_dialog_step1_instruction2_headline":"Your friends sign up","iyf_dialog_step1_instruction2_subheadline":"sit tight while they join Wunderlist","iyf_dialog_step1_instruction3_headline":"Enjoy your free Pro Account","iyf_dialog_step1_instruction3_subheadline":"1 month for every friend who accepts","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 month for every $ friends who accept","iyf_dialog_step1_next_button":"Start inviting","iyf_dialog_step2_subheadline":"to get your free Pro Account","iyf_dialog_step2_divider_label":"Share this link","iyf_dialog_share_on_facebook":"Share on Facebook","iyf_dialog_post_on_twitter":"Tweet on Twitter","iyf_dialog_email_placeholder":"Enter an email address...","iyf_dialog_more_placeholder":"Add another...","iyf_dialog_step3_headline":"Thank you for sharing","iyf_dialog_step3_subheadline":"Sit tight while your friends join","iyf_dialog_step3_success_headline":"Invites successfully sent","iyf_dialog_step3_success_subheadline":"We'll notify you as soon as your Pro account is ready.","iyf_dialog_step3_invite_more":"Invite more people","meta_title":"Wunderlist 2: Skvělá a jednoduchá aplikace pro úkoly","meta_description":"Over 5 million people already use Wunderlist to manage tasks, to-do lists, and to get things done.  Wunderlist is the best to-do list for you, your team or your family.","meta_keywords":"6wunderkinder, produktivita, spolupráce, správa úkolů, to-do, todo, list, úkoly, gtd, organizace, plánování, nákupní lístek, připomínky, podúkoly, chytré seznamy, seznam potravin, seznam filmů, sdílené seznamy","enable_desktop_notifications_text":"Kliknutím na \"Potvrdit\" a potom \"Povolit\" ve Vašem internetovém prohlížeči, povolíte notifikace.","notification_add_to_browser":"Mějte Wunderlist na blízku. Přidejte si plug-in do svého prohlížeče.","notification_add_extension_to_browser":"Uložte si jednoduše obsah webové stránky přímo do Wunderlistu. Nainstalujte si rozšiřující modul do prohlížeče nyní.","button_add_to_chrome":"Přidat do Chrome","button_add_to_store_added":"Přidáno","aria_activity_center_hint":"Activity Center. Hit escape to close.","aria_exit_search":"Exit Search","aria_search":"Search","aria_sort_list":"Sort List","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"User menu. Hit escape to close.","aria_assign_to_$":"Assign to $","momentjs_months":"Leden_Únor_Březen_Duben_Květen_Červen_Červenec_Srpen_Září_Říjen_Listopad_Prosinec","momentjs_monthsShort":"Led_Ún_Bř_Dub_Kvě_Červn_Červc_Srpen_Zář_Říj_Lis_Pro","momentjs_weekdays":"Neděle_Pondělí_Úterý_Středa_Čtvrtek_Pátek_Sobota","momentjs_weekdaysShort":"Ned_Pon_Úte_Stř_Čtv_Pát_Sob","momentjs_weekdaysMin":"Ne_Po_Út_St_Čt_Pá_So","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Dnes v] LT","momentjs_calendar_nextDay":"[Zítra v] LT","momentjs_calendar_nextWeek":"dddd [v] LT","momentjs_calendar_lastDay":"[Včera v] LT","momentjs_calendar_lastWeek":"[poslední] dddd [v] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"v %s","momentjs_relativeTime_past":"před %s","momentjs_relativeTime_s":"pár sekund","momentjs_relativeTime_m":"minuta","momentjs_relativeTime_mm":"%d minut","momentjs_relativeTime_h":"hodina","momentjs_relativeTime_hh":"%d hodin","momentjs_relativeTime_d":"den","momentjs_relativeTime_dd":"%d dny","momentjs_relativeTime_M":"měsíc","momentjs_relativeTime_MM":"%d měsíci","momentjs_relativeTime_y":"rok","momentjs_relativeTime_yy":"%d roky"}
};
});
define('languages/danish',[],function() {
return {
'name': 'danish',
'data': {"actionbar_print_selected_item":"Print den valgte opgave","actionbar_print_$_selected_items_plural":"Print $ valgte opgaver","actionbar_email_selected_item":"Email den valgte opgave","actionbar_email_$_selected_items_plural":"Email $ valgte opgaver","actionbar_sort_alphabetically":"Sorter alfabetisk","actionbar_sort_due_date":"Sorter efter forfaldsdato","actionbar_sort_assignee":"Sorter efter opgavens indehaver","api_error_account_already_exists":"En eksisterende konto benytter allerede denne email adresse.","api_error_connection_error":"Ups - det ser ud til, at der var et problem med at få fat i serveren. Prøv venligst igen.","api_error_general_error":"Ups - serveren svarer ikke i øjeblikket. Prøv venligst igen.","api_error_incorrect_login":"Den indtastede email adresse eller adgangskode er ikke korrekt.","api_error_incorrect_password":"Den indtastede adgangskode er ikke korrekt.","api_error_service_down":"En central del af WunderAPI servicen er nede.","api_error_unknown":"En uventet og uhåndteret fejl er opstået.","api_error_validation_error_unable_to_signup":"Vi kunne ikke tilmelde dig med den angivne email adresse.","api_error_not_a_beta_user":"Du er ikke medlem af Wunderlist beta testen.","button_back":"Tilbage","button_cancel":"Annuller","button_confirm":"Bekræft","button_download":"Hent","button_change":"Ændre","button_choose":"Vælg","button_connect":"Forbind","button_connect_facebook":"Forbind med Facebook","button_continue":"Fortsæt","button_delete":"Slet","button_disconnect":"Afbryd forbindelsen","button_dismiss":"Afvis","button_done":"Udført","button_edit":"Rediger","button_get_started":"Lad os komme igang","button_go_back":"Tilbage.","button_go_back_sentence":"Tilbage.","button_learn_more":"Lær  mere","button_go_back_to_login":"Tilbage til login","button_go_to_web_app":"Gå til web app'en","button_join_now":"Join Now","button_log_in":"Log ind","button_log_in_with_$":"Log In With $","button_log_out":"Log ud","button_log_in_facebook":"Log ind med Facebook","button_next":"Næste","button_no":"Nej","button_no_due_date":"Ingen forfaldsdato","button_ok":"OK","button_remove_due_date":"Fjern forfaldsdato","button_remove_reminder":"Fjern påmindelse","button_email_list":"Send listen til email modtager","button_print_list":"Udskriv Liste","button_reset_password":"Nulstil adgangskode","button_retry":"Forsøg igen","button_save":"Gem","button_send":"Send","button_sign_up":"Tilmeld dig","button_sign_up_with_$":"Sign Up With $","button_sign_up_for_free":"Tilmeld dig gratis","button_sign_up_facebook":"Tilmeld dig med Facebook","button_support_center":"Supportcenter","button_subscribe":"Herligt, Ja tak!","button_try_again":"Prøv igen","button_try_wunderlist":"Prøv Wunderlist","button_yes":"Ja","coachmark_all_list_empty":"Du har endnu ikke tilføjet nogle emner. Prøv bare at tilføje et eller andet.","coachmark_completed_list_empty":"Du har ikke fuldført nogen af dine opgaver endnu. Gå nu bare videre og kryds nogen af opgaverne af på dine lister!","coachmark_no_search_results":"Ingen søgeresultater","coachmark_sharing_invite_friends_heading":"Inviter dine venner","coachmark_sharing_invite_friends_text_$":"Dine venner vil kunne oprette, fjerne og afkrydse opgaver i listen “$”.","coachmark_sharing_recent_no_contacts_heading":"Ingen nyligt anvendte kontaktpersoner","coachmark_sharing_recent_no_contacts_text_$":"Indtast en email adresse eller søg i dine kontaktpersoner. Når din ven er tilføjet, vil vedkommende kunne oprette, fjerne og afkrydse opgaver i listen \"$\".","coachmark_assigned_to_me_list_empty":"Der er ikke noget der er tildelt dig","coachmark_conversations_list_empty":"There are no current conversations.","coachmark_starred_list_empty":"Du har ingen stjernemarkerede opgaver","coachmark_today_list_empty":"Tillykke! Du har ikke noget, der skulle laves til i dag eller er for sent på den","coachmark_week_list_empty":"På ferie? Du har ingen opgaver, der skal udføres i de næste 7 dage","error_list_not_found":"Vi kan ikke finde den liste, du kigger efter","error_share_not_created":"Der skete en fejl under forsøget på at dele din liste. Prøv venligst igen.","error_task_not_found":"Den opgave du leder efter kunne ikke findes","error_page_not_found":"Siden blev ikke fundet","error_title_not_found":"Ikke fundet","label_are_you_sure_permanently_delete_item":"Er du sikker på, at du vil slette denne opgave permanent?","label_are_you_sure_permanently_delete_item_plural":"Er du sikker på, at du vil slette disse opgaver permanent?","label_activity_center":"Aktivitetscenter","label_are_you_sure_permanently_delete_$_list":"Er du sikker på at du vil slette disse lister permanent?","label_are_you_sure_permanently_delete_$_task":"Er du sikker på, at du vil slette opgaven “$” permanent?","label_are_you_sure_permanently_delete_task_plural":"Er du sikker på at du vil slette disse opgaver permanent?","label_are_you_sure_permanently_delete_$_subtask":"Er du sikker på, at du vil slette underopgaven “$” permanent?","label_cant_undo":"Du vil ikke kunne ændre dette valg.","label_completed_tasks_heading":"1 udført opgave","label_$_completed_tasks_heading_plural":"$ udførte opgaver","label_connecting":"Forbinder...","label_minisite_description_line_1":"Hold styr på alt hvad du vil lave.","label_minisite_description_line_2":"Wunderlist er frit tilgængeligt på alle gængse platforme.","label_minisite_share_deleted_or_no_access":"Der ser ud til at være slettet eller du ikke har adgang til det mere.","label_minisite_contact_sender_for_info":"Kontakt venligst den person der delte listen med dig for yderligere information.","label_minisite_$_invited_you_to_the_list_$":"$1 inviterede dig til listen","label_minisite_empty_list_$":"Listen er tom, hjælp venligst med at komme i gang. Bare tryk på Tilmeld knappen ovenfor og begynd at tilføje opgaver til listen $","label_day_0":"Søn","label_day_1":"Man","label_day_2":"Tirs","label_day_3":"Ons","label_day_4":"Tors","label_day_5":"Fre","label_day_6":"Lør","label_delete_file":"Delete File","label_delete_list":"Slet liste","label_delete_task":"Slet opgave","label_delete_task_plural":"Slet opgaver","label_delete_subtask":"Slet underopgave","label_due_$":"Forfalder $","label_due_on":"Udløber d. $","label_due_date":"Forfaldsdato","label_email":"Email","label_every":"hver","label_loading":"Indlæser...","label_logging_out":"Logger ud...","label_name":"Navn","label_newsletter":"Wunderlist Nyhedsbrev","label_none":"Ingen","label_notification":"Notifikation","label_oops":"Uups!","label_or":"eller","label_password":"Adgangskode","label_relative_date_today":"I dag","label_relative_date_today_with_date":"I dag, $","label_relative_date_today_mid_sentence":"i dag","label_relative_date_tomorrow":"I morgen","label_relative_date_tomorrow_with_date":"I morgen, $","label_relative_date_tomorrow_mid_sentence":"i morgen","label_relative_date_yesterday":"I går","label_remind_me_at_$":"Påmind mig kl. $","label_reminder":"Påmindelse","label_reminder_message_$":"Bare en venlig påmindelse: $","label_repeat_every_day":"Gentage hver dag","label_repeat_every_week":"Gentag hver uge","label_repeat_every_month":"Gentag hver måned","label_repeat_every_year":"Gentag hvert år","label_repeat_custom":"Brugertilpasset...","label_repeat_day":"Hver dag","label_repeat_day_$_plural":"Hver $. dag","label_repeat_month":"Hver måned","label_repeat_month_$_plural":"Hver $. måned","label_repeat_week":"Hver uge","label_repeat_week_$_plural":"Hver $. uge","label_repeat_never":"Gentag aldrig","label_repeat_year":"Hvert år","label_repeat_year_$_plural":"Hvert $. år","label_reset_password":"Nulstil adgangskode","label_rights_reserved":"Alle rettigheder forbeholdes","label_still_fetching_tasks":"Henter stadig opgaver ...","label_sync":"Synkroniser","label_time_am":"AM","label_time_day_plural":"dage","label_time_week_plural":"uger","label_time_month_plural":"måneder","label_time_pm":"PM","label_time_year_plural":"år","label_assign_to":"Tildel til","label_unassigned":"Ikke tildelt","label_assign_me":"Mig","label_created_$":"Oprettet $","label_created_by_$":"Oprettet af $","label_created_on_$":"Oprettet den $","label_created_$_by_$":"Oprettet $1 af $2","label_created_by_$_on_$":"Oprettet af $1 den $2","label_completed_$":"Udført $","label_completed_on_$":"Udført den $","label_completed_$_by_$":"Udført $1 af $2","label_completed_by_$_on_$":"Udført af $1 den $2","login_add_photo_hint":"Gør din Wunderlist konto personlig ved at uploade et billede","login_already_have_account":"Har du allerede en konto?","login_email_not_valid":"Indtast en gyldig email adresse.","login_empty_name":"Indtast dit navn.","login_empty_password":"Indtast en adgangskode.","login_password_not_valid":"Indtast en gyldig adgangskode.","login_empty_email":"Indtast venligst en email adresse.","login_enter_name":"Hvem er du?","login_enter_password":"Du er næsten færdig","login_enter_password_hint":"Vælg en adgangskode for at afslutte opsætningen af din Wunderlist konto.","login_forgot_password":"Glemt adgangskode","login_forgot_password_heading":"Glemt noget?","login_forgot_password_text":"Indtast email adressen som du registrerede dig med og vi sender instruktioner til nulstilling af din adgangkode.","login_no_account_yet":"Har du ikke en konto?","login_password_changed":"Adgangskode opdateret","login_password_not_match":"De indtastede adgangskoder matchede ikke.","login_password_reset_email_has_been_sent":"Tjek din email for instruktioner til nulstilling af adgangkode.","login_reset_password_heading":"Så er det nu, du skal lave din nye adgangskode.","login_reset_password_success":"Nu skal du blot klikke på knappen her under og alt er indstillet, så du kan logge på Wunderlist igen.","login_reset_password_success_heading":"Hurra! Din adgangskode er blevet ændret.","login_password_too_short":"En adgangskode skal indeholde mindst 5 tegn.","login_sign_up":"Tilmeld dig.","login_want_to_try_again":"Prøv igen","login_accept_terms":"By signing up you accept our $1 and $2.","logout_timeout_title":"Synkroniserings fejl","logout_timeout_text":"Vi kunne ikke synkronisere dine data. Vil du prøve igen eller blot logge ud?","mobile_tutorial_welcome_to":"Velkommen til","mobile_tutorial_wunderlist_subtitle":"Din smuk og simpel to-do liste","notifications_desktop_enable_heading":"Aktiver meddelelser på skrivebordet?","notifications_no_notifications":"Ingen aktivitet","notifications_no_notifications_message":"Invitationer til delte lister & andre aktiviteter vises her.","notifications_event_accept":"Accepter","notifications_event_accepted":"Accepteret","web_upgrade_ie9_not_supported":"Wunderlist understøtter ikke Internet Explorer 9. Opgrader venligst til $ eller $ for en bedre oplevelse.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Looks like you are using a device with a touch screen. Would you like to enable a touch optimized interface? You can always change this in your account settings.","web_setting_enable_touch_for_$":"Enable Touch for: $","web_settings_text_refresh_may_be_required":"Refresh may be required","rate_label":"Bedøm Wunderlist","rate_app_heading":"Vurder og anmeld Wunderlist","rate_app_message_web_chrome":"Tak fordi du bruger Wunderlist. Vi ville elske at høre hvad du synes! Fortæl os det ved at bedømme og anmelde Wunderlist i Chrome Web Store ★★★★★","rate_app_button_later":"Påmind mig senere","rate_app_button_no":"Nej tak","rate_app_button_yes":"Bedøm Wunderlist","placeholder_add_due_today_to_inbox":"Føj en opgave der forfalder i dag til \"Indbakken\"...","placeholder_add_list":"Tilføj en liste...","placeholder_add_subtask":"Tilføj en delopgave","placeholder_add_starred_to_inbox":"Føj en stjernemarkeret opgave til \"indbakken\"...","placeholder_add_task_to_$":"Tilføj en opgave i “$”...","placeholder_add_to_inbox":"Tilføj en opgave i \"Indbakken\"","placeholder_new_list":"Ny liste","placeholder_remind_me":"Påmind mig","placeholder_search":"Søg...","placeholder_sharing_search":"Navn eller email adresse...","placeholder_set_due_date":"Indstil forfaldsdato","browser_outdated_heading":"Åh åh - det ser ud som om din webbrowser ikke er opdateret.","browser_outdated_update":"Venligst opdater din webbrowser","browser_outdated_explanation":"Wunderlist er lavet ved hjælp af den seneste og bedste teknologi. For at bruge Wunderlist skal du downloade den nyeste version af din browser.","prenamed_list_movies":"Film der skal ses","prenamed_list_private":"Privat","prenamed_list_shopping":"Indkøb","prenamed_list_wishlist":"Ønskeseddel","prenamed_list_work":"Arbejde","prenamed_list_read_later":"Læs senere","settings_account_change_email":"Skift email adresse...","settings_account_change_password":"Skift adgangskode...","settings_account_delete_confirmation":"Indtast \"Jeg er sikker\"","settings_account_delete_confirmation_text":"Jeg er sikker","settings_account_drop_image":"Træk billede hertil","settings_account_connect_facebook_account":"Når du forbinder din Wunderlist konto med Facebook, kan du let og hurtigt dele lister med dine venner.","settings_general_12_hour":"12 timer","settings_general_24_hour":"24 timer","settings_general_confirm_deletion":"Bekræft før sletning af emner","settings_general_create_new_tasks":"Tilføj nye opgaver","settings_general_date_format":"Dato format","settings_general_language":"Sprog","settings_general_start_of_week":"Uge start","settings_general_start_of_week_sunday":"Søndag","settings_general_start_of_week_saturday":"Lørdag","settings_general_start_of_week_monday":"Mandag","settings_general_sound_task_completion":"Aktiver lyd når opgave afsluttes","settings_general_sound_new_notifications":"Aktiver lyd for nye notifikationer.","settings_general_print_done_tasks":"Udskriv afsluttede opgaver","settings_general_tasks_bottom":"Bunden af listen","settings_general_tasks_top":"Toppen af listen","settings_general_time_format":"Tidsformat","settings_heading_team":"Business","settings_heading_about":"Om","settings_heading_account":"Konto","settings_heading_general":"Generelt","settings_heading_notification":"Meddelelser","settings_heading_shortcuts":"Genveje","settings_heading_sidebar":"Sidebar","settings_imprint":"Aftryk","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"Notificer mig om vigtige hændelser gennem:","settings_notifications_notify_me_on_text":"Vi notificerer dig ved særlige begivenheder, så som når nogen accepterer en invitation til en delt liste, eller når nogen tilføjer eller færdiggør en opgave i en af dine delte lister.","settings_sidebar_smart_lists_title":"Vis disse Smart lister i sidebaren:","settings_sidebar_smart_lists_auto":"Automatisk","settings_sidebar_smart_lists_hidden":"Skjult","settings_sidebar_smart_lists_visible":"Synlig","settings_sync_full":"Synkroniser nu","settings_account_account_backup":"Account Backup","settings_account_restore_backup":"Import Backup Data","settings_account_backup_description":"Backup data includes all your Lists, Tasks, Subtasks, Notes, and Reminders. Please note it does not include those Lists that were shared with you, Files, Comments, Shared List recipients and previous application settings.","settings_account_data_is_being_processed":"Hold tight! Your backup data is being processed. We will send you an email when everything is complete.","settings_account_change_password_error":"Der var et problem med at opdatere din adgangskode. Prøv venligst igen.","settings_account_click_to_download_backup":"Click to Download","settings_account_create_backup":"Create Backup","settings_account_current_password":"Nuværende adgangskode","settings_account_delete_account":"Slet konto","settings_account_delete_account_confirm":"Vil du virkelig slette din konto?","settings_account_delete_account_confirm_text":"Hvis du sletter din konto, sletter du også alle dine lister og opgaver permanent. Dette kan ikke fortrydes.","settings_account_fetching_data":"Fetching data ...","settings_account_new_password":"Ny adgangskode","settings_account_repeat_new_password":"Gentag ny adgangskode","settings_account_right_click_and_save_as":"Right Click and Save","settings_third_party_libraries":"Licencer","settings_background_credits":"Anerkendelse for baggrunde","settings_notifications_email_enabled":"Email notifikationer","settings_notifications_desktop_enabled":"Skrivebordsmeddelelser","settings_notifications_push_enabled":"Push meddelelser","settings_privacy_policy":"Beskyttelse af personlige oplysninger","settings_shortcuts_arrow_keys":"Piletaster","settings_shortcuts_delete_item":"Slet valgt liste eller opgave","settings_shortcuts_mark_done":"Marker de valgte opgaver som 'udført'","settings_shortcuts_mark_starred":"Marker den valgte opgave med en \"Stjerne\"","settings_shortcuts_new_list":"Tilføj en ny liste","settings_shortcuts_new_task":"Tilføj en ny opgave","settings_shortcuts_open_all_smart_list":"Åbn Smart listen \"Alle\"","settings_shortcuts_open_assigned_smart_list":"Åbn smart listen 'Tildelt til mig'","settings_shortcuts_open_conversations_smart_list":"Open 'Conversations' Smart List","settings_shortcuts_open_done_smart_list":"Åbn Smart listen \"Udførte\"","settings_shortcuts_open_inbox":"Åbn indbakke","settings_shortcuts_open_preferences":"Åbn indstillinger","settings_shortcuts_open_search":"Fokuser på søg","settings_shortcuts_open_starred_smart_list":"Åbn Smart listen \"Stjernemarkerede\"","settings_shortcuts_open_today_smart_list":"Åbn Smart listen \"I dag\"","settings_shortcuts_open_week_smart_list":"Åbn Smart listen \"Uge\"","settings_shortcuts_reset":"Gendan standarder","settings_shortcuts_select_all_tasks":"Vælg alle opgaver","settings_shortcuts_show_more":"Vis Mere","settings_shortcuts_hide":"Skjul","settings_shortcuts_show_notifications":"Vis aktivitetscenter","settings_shortcuts_step_through_list":"Gennemgå lister","settings_shortcuts_step_through_task":"Gennemgå opgaver","settings_terms_of_use":"Vilkår for brug","settings_account_header_free":"Gratis","settings_account_header_unregistered":"Sign Up","settings_account_header_account_$":"$ Account","settings_account_pro_description":"Add comments and files to your to-dos and assign them to your colleagues. Collaboration in teams has never been easier!","settings_account_register_wunderlist_description":"Register for Wunderlist to sync your lists across all your devices.","settings_manage_subscription_button":"Administrer abonnement","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Hurraaa, du er en $!","settings_account_header_pro_description":"Wunderlist Pro er den bedste måde at holde dit projekt på sporet. Inviter dine venner og kollegaer til at samarbejde og få tingene til at ske!","settings_upgrade_to_pro_label":"Opgrader til $","settings_label_pro_account":"Pro Konto","settings_label_purchased_from_$":"Købt fra: $","settings_label_purchased_from_$_by_$":"Purchased from $1 by: $2","settings_label_expires_in_$":"Udløber om $","setting_label_next_billing_date":"Næste opkrævningsdato:","setting_label_cancel_subscription":"Annuller abonnement ","setting_heading_cancel_subscription":"Vil du virkelig opsige dit Wunderlist Pro abonnement?","setting_description_cancel_subscription":"Du vil stadigvæk have adgang til alle dine data, men når dit abonnement udløber, vil du kun kunne bruge Wunderlist standard funktionerne.","setting_label_cancel_subscription_success":"Your subscription was cancelled successfully.","settings_label_invoices":"Invoices","settings_label_become_a_pro":"Bliv en Pro","settings_payment_info_expires_$_relative":"Udløber $","settings_payment_info_expires_$_absolute":"Udløber om $1 dage: $2","settings_manage_subscription_error":"Vi beklager, der opstod en fejl under forsøget på at administrere dit abonnement","group_billing_packages_title":"Plans for every business ","group_billing_packages_text":"Wunderlist for Business provides you with all the features you need to work smarter as a team at an affordable price. Simply select the right plan for your business now.","group_billing_plan_table_team_size":"Team Size","group_billing_plan_table_price":"Price","group_billing_plan_table_package_name_$":"$ Members","group_billing_buy_button_label":"Purchase","group_billing_$_off":"$ off","group_billing_larger_team_$":"Have a larger team? $","group_billing_contact_us":"Contact us!","group_billing_downgrade_error_$_$":"In order to switch to the $1 Members plan, you must remove $2 teammate(s) from the account. ","group_billing_manage_team":"Click here to manage your team.","group_billing_button_label_manage":"Manage","group_billing_team_plan_title":"Your Wunderlist Pro Plan","group_billing_team_plan_text":"Wunderlist Pro grows right along with your team! Adding members is super easy, just enter their email addresses below. It’s that simple whether or not they’re already a Wunderlist user.","group_billing_upgrade_button_label":"Change Plan","group_billing_upgrade_plan_button_label":"Upgrade","group_billing_Downgrade_plan_button_label":"Downgrade","group_billing_view_plans_button_label":"View Plans","group_billing_manage_team_header":"Manage Team Members","group_billing_email_address_input_placeholder":"Email address","group_billing_manage_count_$_of_$":"$1 of $2","group_billing_cancel_team_plan":"Cancel Your Wunderlist Pro Plan","group_billing_search_coachmark":"To add members, simply enter the email addresses of your teammates, and they'll be added to your Pro plan.","group_billing_cancel_header":"Are you sure you want to cancel your team’s Wunderlist Pro Subscription?","group_billing_change_plan_confirmation_$_$_$":"Changing plans is easy. If you go for $1 Members plan now, you’ll be billed $2 in the next billing cycle starting on $3. Are you sure you want to do this now?","group_billing_cancel_text":"Your Pro subscription will run until the end of month, and you won’t be billed again. While you’ll still retain the ability to view any Pro features like files attached to tasks, you won’t be able to make any changes to them.","error_goup_billing_user_already_pro":"Looks like this person already has a Wunderlist Pro account. Give the gift of Pro to another teammate!","error_group_billing_wait_subscription_runs_out":"You’ll have to wait until your current subscription runs out before repurchasing. Expires on: $.","button_label_buy_wunderlist_for_business":"Go to Wunderlist for Business","benefit_payment_service_unavailable":"Betalingstjenesten er utilgængelig","benefit_name":"Wunderlist Pro","benefit_header_$":"Bliv $","benefit_header_description":"Samarbejde i teams og virksomheder har aldrig været nemmere! Her er 4 rigtig gode grunde til at melde dig til Wunderlist Pro.","benefit_button_buy_monthly":"Månedlig","benefit_assign_tasks_title":"Tildel opgaver","benefit_assign_tasks_description":"Gør det nemt at uddelegere opgaver og holde styr på opgavernes status iblandt kollegaer og venner!","benefit_unlimited_subtasks_title":"Uendeligt antal underopgaver","benefit_unlimited_subtasks_decription":"Bryd store opgaver op i små overkommelige trin, for at øge produktiviteten - uden begrænsninger.","benefit_comments_title":"Comments","benefit_comments_description":"Start a conversation with your teammates about any of your to-dos. Leave feedback, ask a question or add some extra insight.","benefit_backgrounds_update_$":"For at bruge vores nye baggrunde, skal du venligst opgradere til $","benefit_additional_backgrounds_title":"Nye baggrunde","benefit_additional_backgrounds_description":"Opdag 8 nye flotte baggrunde til at personliggøre Wunderlist præcis som du kan lide det!","benefit_files_title":"Filer","benefit_files_description":"Vedhæft filer til dine opgaver og del dem med medlemmerne i dit team.","benefit_coming_soon":"Kommer snart","benefit_assign_become_pro":"Tildel opgaver til dine kolleger med Wunderlist","benefit_label_accept_terms":"Ved at købe et Wunderlist Pro abonnement accepterer du $1 og $2.","benefit_label_need_more_subtasks":"Brug for flere underopgaver?","sharing_connect_facebook_sharing":"Forbind din Wunderlist-konto med Facebook for nemmere at kunne invitere dine venner.","sharing_facebook_apprequest_message_$user_$list":"“$1” ønsker at dele listen “$2” med dig","sharing_invite":"Inviter folk","sharing_invite_friends":"Inviter venner","sharing_inviting_requires_account":"Tilmeld dig for at invitere dine venner og kollegaer til dine lister.","sharing_leave_action":"Er du sikker på at du vil forlade denne liste?","sharing_leave_button":"Forlad delt liste","sharing_list_members":"Listens medlemmer","sharing_list_owner":"Ejer","sharing_list_pending_member":"Venter","sharing_tab_recents":"Seneste","sharing_shared_with_you_by":"Delt med dig af","smart_list_assigned_to_me":"Tildelt til mig","smart_list_conversations":"Conversations","smart_list_all":"Alle","smart_list_completed":"Udført","smart_list_inbox":"Indbakke","smart_list_starred":"Stjernemarkerede","smart_list_today":"I dag","smart_list_week":"Uge","label_tell_friends":"Del med dine venner","social_sharing_heading":"Fortæl til dine venner på dit foretrukne sociale netværk!","social_sharing_dialog_headline":"Love Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"Ikke nu","social_sharing_button_no_thanks":"Nej tak","social_sharing_button_facebook":"Del","social_sharing_button_follow_us":"Følg os","social_sharing_button_like_us":"Synes godt om os","social_sharing_heading_thanks":"Følg os for at få alle de seneste Wunderlist nyheder","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"I’m using Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","twitter_sharing_placeholder":"I’m using @Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","tutorial_welcome_notes_title":"Noter","tutorial_welcome_notes_text":"Aftagelige noter tillader dig at arbejde både inden og uden for Wunderlist.","tutorial_welcome_notifications_title":"Aktivitetscenter","tutorial_welcome_notifications_text":"Tilpas måden du gerne vil underrettes. Vælg om du vil modtage invitationer og opdateringer til dine delte lister via email og skrivebords notifikationer, eller se det hele i Aktivitetscenter.","tutorial_welcome_sharing_title":"Inviter venner","tutorial_welcome_sharing_text":"Det er nu endnu nemmere at invitere dine venner og kollegaer til at give en hånd.","tutorial_welcome_subtasks_title":"Gentagne opgaver, Påmindelser og Underopgaver","tutorial_welcome_subtasks_text":"Wunderlist indeholder nu en ny Detalje Visning som gør det muligt, nemt  at tilføje gentagne opgaver, påmindelser og underopgaver.","tutorial_welcome_user_title":"Det hele handler om dig!","tutorial_welcome_user_text":"Skift dine kontoindstillinger, tjek status for synkronisering og tilpas din baggrund.","tutorial_welcome_newsletter_subscribe":"Notificer mig om vigtige opdateringer og nye Wunderliste funktioner på email","tutorial_feature_pro_title":"Wunderlist Pro Funktion","share_list_email_signature":"Sent with Wunderlist – My beautiful and simple to-do list\\nIt’s free for iPhone, iPad, Android, Mac, Windows PC and Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ usynkroniseret opgave","userbar_$_unsynced_item_plural":"$ usynkroniserede opgaver","userbar_account_settings":"Kontoindstillinger","userbar_change_background":"Skift baggrund","userbar_last_synced_$":"Sidst synkroniseret $","userbar_no_internet_connection":"Offline","userbar_preferences":"Indstillinger","userbar_sync_in_progress":"Synkroniserer...","userbar_user_name_for_unregistered_mode":"Tilmeld dig for at synkronisere","whatsnew_title":"Nyheder","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Comments","whatsnew_label_voice":"Voice Input","whatsnew_label_groupbilling":"Team Pricing","whatsnew_copy_comments":"Keep all the conversations about your to-dos in one place with Comments in Wunderlist Pro. Leave feedback, ask a question or add extra insight to any of your to-dos to greatly improve communication within your team.","whatsnew_copy_pro_accounts":"Add Comments, Assign to-dos, add Files and create Unlimited Subtasks with Wunderlist Pro to accomplish more, together.","whatsnew_copy_voice":"Click the microphone icon to dictate your to-dos or even record a Voice Memo and attach it as a file.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Sign up to try Wunderlist Pro and add a File.","label_add_new_file":"Add a file...","file_uploaded_unsuccessfully":"Upload of $ failed. Please try again.","file_uploaded_failed":"Upload failed. Please try again.","file_uploaded_failed_deleted":"Upload of $ failed, because the file was deleted from your hard drive.","label_are_you_sure_permanently_delete_$_file":"Are you sure you want to permanently delete the file “$” from Wunderlist?","upload_file_was_not_synced_yet":"Please sync","upload_file_not_synced_yet":"Not Synced","placeholder_add_comments":"Add a comment...","placeholder_reply":"Reply...","button_label_go_pro_to_comment":"Go Pro to comment","comment_request_failed":"Sorry, we couldn't load Comments. Please try again.","comment_load_earlier":"View more Comments","coachmark_no_current_comments":"No comments yet.\\nStart your conversation here.","coachmark_comments_not_available":"Sorry, we couldn’t load the previous comments. Please try again in a few moments.","notification_$_commented_on_$":"$1 commented on $2","notification_$_and_$_commented_on_$":"$1 and $2 commented on $3","notification_$_and_$_others_commented_on_$":"$1 and $2 others commented on $3","comments_requires_account":"Sign up to try Wunderlist Pro and add a Comment.","non_pro_trial_free_limit_reached":"You’ve reached your Free limit!","non_pro_trial_write_next_comment_$":"You can add another Comment $.","non_pro_trial_upload_next_file_$":"You’ll be able to add another File $.","non_pro_trial_assign_next_to_do_$":"You can Assign another to-do $.","button_signup_or_login":"Tilmeld dig eller log ind","button_it_is_completely_free":"Det er helt og aldeles gratis","label_free_download_for_platforms":"Tilgængelig gratis til iPhone, iPad, Android, Windows and Mac","label_wunderlist_to_get_things_done":"More than 5 million people use Wunderlist to get things done.","label_people_who_use_wunderlist":"Se hvem der allerede bruger Wunderlist:","label_wunderlist_uses":"Uanset om du organiserer din forretning, deler en indkøbsliste med en du har kær eller simpelthen bare holder styr på din dagligdag, er Wunderlist den bedste to-do liste for dig, dit hold eller din familie.","label_install_browser_extension":"Installer browserudvidelsen","label_install_chrome_browser_extension":"Installer Chrome Browser udvidelsen","label_newsletter_signup":"Tilmeld dig til vores nyhedsbrev","label_know_upcoming_features":"Vær blandt de første der hører om kommende funktioner","label_learn_more_about_wunderlist":"Lær mere om Wunderlist","label_learn_more":"Lær  mere ...","label_your_email_address":"Din email adresse","button_subscribe_to_newsletter":"Subscribe","button_sending_subscribe_to_newsletter":"Sender...","iyf4_usermenu_label":"Get Wunderlist Pro for Free","iyf4_notification_label":"Get up to 12 free months of Wunderlist Pro by inviting your friends!","iyf4_notification_button_label_var_a":"Start Inviting","iyf4_notification_button_label_var_b":"Invite Friends","iyf4_notification_button_label_var_c":"Get Wunderlist Pro for Free","iyf4_notification_button_label_var_d":"Share Wunderlist Pro","iyf4_dialog_invite_headline_$":"Get up to $ of Wunderlist Pro by inviting your friends!","iyf4_dialog_invite_headline_incentive":"12 free months","iyf4_dialog_invite_incentive_$":"$ Wunderlist, we'll give you both 1 month of Wunderlist Pro for free (up to a limit of 12 months)","iyf4_dialog_invite_incentive_terms":"For every friend who joins","iyf4_dialog_tweet":"I love organizing my life with Wunderlist. Get a month of Wunderlist Pro for free here:","iyf_notification_label":"Refer Wunderlist to your friends and get Pro for free up to 12 months!","iyf_notification_button_label":"Go Pro!","iyf_dialog_step1_headline":"Get a free Pro Account","iyf_dialog_step1_subheadline":"in 3 easy steps","iyf_dialog_step1_instruction1_headline":"Start inviting your friends","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter or E-Mail","iyf_dialog_step1_instruction2_headline":"Your friends sign up","iyf_dialog_step1_instruction2_subheadline":"sit tight while they join Wunderlist","iyf_dialog_step1_instruction3_headline":"Enjoy your free Pro Account","iyf_dialog_step1_instruction3_subheadline":"1 month for every friend who accepts","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 month for every $ friends who accept","iyf_dialog_step1_next_button":"Start inviting","iyf_dialog_step2_subheadline":"to get your free Pro Account","iyf_dialog_step2_divider_label":"Share this link","iyf_dialog_share_on_facebook":"Share on Facebook","iyf_dialog_post_on_twitter":"Tweet on Twitter","iyf_dialog_email_placeholder":"Enter an email address...","iyf_dialog_more_placeholder":"Add another...","iyf_dialog_step3_headline":"Thank you for sharing","iyf_dialog_step3_subheadline":"Sit tight while your friends join","iyf_dialog_step3_success_headline":"Invites successfully sent","iyf_dialog_step3_success_subheadline":"We'll notify you as soon as your Pro account is ready.","iyf_dialog_step3_invite_more":"Invite more people","meta_title":"Wunderlist 2: Din flotte og simple online to-do liste app","meta_description":"Over 5 million people already use Wunderlist to manage tasks, to-do lists, and to get things done.  Wunderlist is the best to-do list for you, your team or your family.","meta_keywords":"6wunderkinder, produktivitet, samarbejde, opgavestyring, jobliste, to-do, todo, liste, opgaver, gtd, organiser, planlæg, shopping, påmindelser, underopgaver, smarte lister, indkøbsliste, film lister, delte lister","enable_desktop_notifications_text":"Klik på 'Bekræft' og derefter 'Tillad' i din browser for at aktivere meddelelser.","notification_add_to_browser":"Lad din Wunderlist være et enkelt klik væk. Tilføj Wunderlist Web App til din browser nu.","notification_add_extension_to_browser":"Gem nemt dit favorit web-indhold i Wunderlist. Installer ... Chrome udvidelsen nu.","button_add_to_chrome":"Tilføj til Chrome","button_add_to_store_added":"Tilføjjet","aria_activity_center_hint":"Activity Center. Hit escape to close.","aria_exit_search":"Exit Search","aria_search":"Search","aria_sort_list":"Sort List","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"User menu. Hit escape to close.","aria_assign_to_$":"Assign to $","momentjs_months":"Januar_Februar_Marts_April_Maj_Juni_Juli_August_September_Oktober_November_December","momentjs_monthsShort":"Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Okt_Nov_Dec","momentjs_weekdays":"Søndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_Lørdag","momentjs_weekdaysShort":"Søn_Man_Tir_Ons_Tor_Fre_Lør","momentjs_weekdaysMin":"Sø_Ma_Ti_On_To_Fr_Lø","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[I dag kl.] LT","momentjs_calendar_nextDay":"[I morgen kl.] LT","momentjs_calendar_nextWeek":"dddd [kl.] LT","momentjs_calendar_lastDay":"[I går kl.] LT","momentjs_calendar_lastWeek":"[sidste] dddd [kl.] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"om %s","momentjs_relativeTime_past":"%s siden","momentjs_relativeTime_s":"et par sekunder","momentjs_relativeTime_m":"et øjeblik","momentjs_relativeTime_mm":"%d minutter","momentjs_relativeTime_h":"en time","momentjs_relativeTime_hh":"%d timer","momentjs_relativeTime_d":"en dag","momentjs_relativeTime_dd":"%d dage","momentjs_relativeTime_M":"en måned","momentjs_relativeTime_MM":"%d måneder","momentjs_relativeTime_y":"et år","momentjs_relativeTime_yy":"%d år"}
};
});
define('languages/spanish',[],function() {
return {
'name': 'spanish',
'data': {"actionbar_print_selected_item":"Imprimir el Elemento Seleccionado","actionbar_print_$_selected_items_plural":"Imprimir $ Elementos Seleccionados","actionbar_email_selected_item":"Enviar Elemento Seleccionado por Correo Electrónico","actionbar_email_$_selected_items_plural":"Enviar por email los $ Elementos Seleccionados","actionbar_sort_alphabetically":"Ordenar alfabéticamente","actionbar_sort_due_date":"Ordenar por Fecha Límite","actionbar_sort_assignee":"Ordenar por Responsable","api_error_account_already_exists":"Ya existe una cuenta con este email.","api_error_connection_error":"Whoops, parece que ha ocurrido un problema conectando con el servidor. Inténtalo de nuevo.","api_error_general_error":"Whoops, no se puede conectar con el servidor en estos momentos. Inténtalo de nuevo.","api_error_incorrect_login":"El email o contraseña introducidos son incorrectos.","api_error_incorrect_password":"La contraseña introducida es incorrecta.","api_error_service_down":"Una parte importante del servicio WunderAPI no esta disponible.","api_error_unknown":"Ha ocurrido un error inesperado.","api_error_validation_error_unable_to_signup":"No hemos podido registrarte con la dirección de email proporcionada.","api_error_not_a_beta_user":"No eres miembro de Wunderlist beta.","button_back":"Atrás","button_cancel":"Cancelar","button_confirm":"Confirmar","button_download":"Descargar","button_change":"Cambiar","button_choose":"Elegir","button_connect":"Conectar","button_connect_facebook":"Conectar con Facebook","button_continue":"Continuar","button_delete":"Eliminar","button_disconnect":"Desconectar","button_dismiss":"Descartar","button_done":"Hecho","button_edit":"Editar","button_get_started":"Empecemos","button_go_back":"Atrás","button_go_back_sentence":"Atrás","button_learn_more":"Más información","button_go_back_to_login":"Volver a Entrar","button_go_to_web_app":"Ir a la aplicación Web","button_join_now":"Registrarse Ahora","button_log_in":"Entrar","button_log_in_with_$":"Entrar con $","button_log_out":"Salir","button_log_in_facebook":"Entrar con Facebook","button_next":"Siguiente","button_no":"No","button_no_due_date":"Sin fecha límite","button_ok":"OK","button_remove_due_date":"Eliminar fecha límite","button_remove_reminder":"Eliminar recordatorio","button_email_list":"Enviar la lista por email","button_print_list":"Imprimir la lista","button_reset_password":"Restablecer contraseña","button_retry":"Reintentar","button_save":"Guardar","button_send":"Enviar","button_sign_up":"Regístrate","button_sign_up_with_$":"Regístrate con $","button_sign_up_for_free":"Regístrate gratis","button_sign_up_facebook":"Regístrate con Facebook","button_support_center":"Centro de Soporte","button_subscribe":"Impresionante, Si por favor","button_try_again":"Vuelve a intentarlo","button_try_wunderlist":"Probar Wunderlist","button_yes":"Sí","coachmark_all_list_empty":"Aún no has añadido ningún elemento. Añade algo ahora.","coachmark_completed_list_empty":"Aún no has completado ningún elemento. Vamos ¡tacha algunos elementos de tus listas!","coachmark_no_search_results":"No hay resultados","coachmark_sharing_invite_friends_heading":"Invita a tus amigos","coachmark_sharing_invite_friends_text_$":"Tus amigos podrán crear, borrar y completar elementos en la lista \"$\".","coachmark_sharing_recent_no_contacts_heading":"No hay contactos recientes","coachmark_sharing_recent_no_contacts_text_$":"Escribe una dirección de email or busca entre tus contactos. Una vez añadidos, tus amigos podrán crear, borrar y completar elementos en la lista \"$\".","coachmark_assigned_to_me_list_empty":"No hay nada asignado a ti.","coachmark_conversations_list_empty":"No hay conversaciones.","coachmark_starred_list_empty":"No tienes elementos importantes","coachmark_today_list_empty":"Enhorabuena! No tienes elementos vencidos o que venzan hoy","coachmark_week_list_empty":"¿De vacaciones? No tienes ningún elemento que venza en los próximos 7 días","error_list_not_found":"La lista que estás buscando no se puede encontrar.","error_share_not_created":"Ha habido un problema al intentar compartir tu lista. Prueba de nuevo, por favor.","error_task_not_found":"El elemento que estás buscando no se puede encontrar","error_page_not_found":"Página no encontrada","error_title_not_found":"No se ha encontrado","label_are_you_sure_permanently_delete_item":"¿Estás seguro de que quieres eliminar permanentemente este elemento?","label_are_you_sure_permanently_delete_item_plural":"¿Estás seguro de que quieres eliminar permanentemente estos elementos?","label_activity_center":"Centro de actividad","label_are_you_sure_permanently_delete_$_list":"¿Estás seguro de que quieres eliminar permanentemente la lista \"$\"?","label_are_you_sure_permanently_delete_$_task":"¿Estás seguro de que quieres eliminar permanentemente el elemento \"$\"?","label_are_you_sure_permanently_delete_task_plural":"¿Estás seguro de que quieres eliminar permanentemente estos elementos?","label_are_you_sure_permanently_delete_$_subtask":"¿Estás seguro de que quieres eliminar permanentemente la subtarea \"$\"?","label_cant_undo":"No podrás deshacer esta acción.","label_completed_tasks_heading":"1 elemento completado","label_$_completed_tasks_heading_plural":"$ elementos completados","label_connecting":"Conectando...","label_minisite_description_line_1":"Mantén el control sobre todas las cosas que quieras hacer.","label_minisite_description_line_2":"Wunderlist esta disponible de forma gratuita en todas las principales plataformas.","label_minisite_share_deleted_or_no_access":"Parece que esto ha sido eliminado o que ya no tienes acceso.","label_minisite_contact_sender_for_info":"Por favor, contacta con la persona que compartió la lista contigo para más información.","label_minisite_$_invited_you_to_the_list_$":"$1 Te ha invitado a la lista $2","label_minisite_empty_list_$":"Esta lista esta vacía actualmente, ayuda a empezarla. Simplemente pulsa el boton conectarse que hay abajo, y comienza a añadir artículos a la lista $","label_day_0":"DOM","label_day_1":"LUN","label_day_2":"MAR","label_day_3":"MIE","label_day_4":"JUE","label_day_5":"VIE","label_day_6":"SAB","label_delete_file":"Borrar Archivo","label_delete_list":"Eliminar lista","label_delete_task":"Eliminar elemento","label_delete_task_plural":"Eliminar elementos","label_delete_subtask":"Eliminar subtarea","label_due_$":"Vence $","label_due_on":"Vence en $","label_due_date":"Fecha límite","label_email":"Email","label_every":"cada","label_loading":"Cargando...","label_logging_out":"Saliendo...","label_name":"Nombre","label_newsletter":"Boletín de Wunderlist","label_none":"Ninguno ","label_notification":"Notificación","label_oops":"¡Vaya!","label_or":"o","label_password":"Contraseña","label_relative_date_today":"Hoy","label_relative_date_today_with_date":"Hoy, $","label_relative_date_today_mid_sentence":"hoy","label_relative_date_tomorrow":"Mañana","label_relative_date_tomorrow_with_date":"Mañana, $","label_relative_date_tomorrow_mid_sentence":"mañana","label_relative_date_yesterday":"Ayer","label_remind_me_at_$":"Recuérdamelo a las $","label_reminder":"Recordatorio","label_reminder_message_$":"Simplemente un recordatorio: $","label_repeat_every_day":"Repetir cada día","label_repeat_every_week":"Repetir cada semana","label_repeat_every_month":"Repetir cada mes","label_repeat_every_year":"Repetir cada año","label_repeat_custom":"Personalizar...","label_repeat_day":"Cada día","label_repeat_day_$_plural":"Cada $ días","label_repeat_month":"Cada mes","label_repeat_month_$_plural":"Cada $ meses","label_repeat_week":"Cada semana","label_repeat_week_$_plural":"Cada $ semanas","label_repeat_never":"No repetir nunca","label_repeat_year":"Cada año","label_repeat_year_$_plural":"Cada $ años","label_reset_password":"Restablecer contraseña","label_rights_reserved":"Todos los derechos reservados","label_still_fetching_tasks":"Cargando tareas...","label_sync":"Sincronizar","label_time_am":"AM","label_time_day_plural":"días","label_time_week_plural":"semanas","label_time_month_plural":"meses","label_time_pm":"PM","label_time_year_plural":"años","label_assign_to":"Asignar a","label_unassigned":"Sin asignar","label_assign_me":"Yo","label_created_$":"Creado $","label_created_by_$":"Creado por $","label_created_on_$":"Creado el $","label_created_$_by_$":"Creado $1 por $2","label_created_by_$_on_$":"Creado por $1 el $2","label_completed_$":"Completado $","label_completed_on_$":"Completado el $","label_completed_$_by_$":"Completado $1 por $2","label_completed_by_$_on_$":"Completado por $1 el $2","login_add_photo_hint":"Personaliza tu cuenta en Wunderlist añadiendo una foto","login_already_have_account":"¿Ya tienes una cuenta?","login_email_not_valid":"Introduce una dirección de email válida, por favor.","login_empty_name":"Introduce tu nombre, por favor.","login_empty_password":"Introduce una contraseña, por favor.","login_password_not_valid":"Introduce una contraseña válida, por favor.","login_empty_email":"Por favor introduce un email","login_enter_name":"¿Quién eres?","login_enter_password":"Casi has terminado","login_enter_password_hint":"Elige una contraseña para terminar de configurar tu cuenta en Wunderlist.","login_forgot_password":"Recuperar Contraseña","login_forgot_password_heading":"¿Has olvidado algo?","login_forgot_password_text":"Introduce la dirección de email con la que te registraste y te enviaremos un enlace para restablecer la contraseña.","login_no_account_yet":"¿No tienes una cuenta?","login_password_changed":"Contraseña actualizada","login_password_not_match":"Las contraseñas que has introducido no coinciden.","login_password_reset_email_has_been_sent":"Las instrucciones para restablecer tu contraseña están en tu email.","login_reset_password_heading":"Hora de crear tu nueva contraseña.","login_reset_password_success":"Ahora solo pulsa el botón de abajo y estás listo para entrar de nuevo en Wunderlist.","login_reset_password_success_heading":"¡Bien! Hemos actualizado tu contraseña.","login_password_too_short":"Una contraseña debe contener 5 caracteres como mínimo.","login_sign_up":"Registrar.","login_want_to_try_again":"¿Quieres volver a intentarlo?","login_accept_terms":"Firmando aceptas nuestros $1 y $2.","logout_timeout_title":"Error de sincronización","logout_timeout_text":"No hemos podido sincronizar tus datos. ¿Quieres intentarlo de nuevo, o prefieres salir?","mobile_tutorial_welcome_to":"Bienvenido a","mobile_tutorial_wunderlist_subtitle":"tu simple y bonita lista de tareas","notifications_desktop_enable_heading":"¿Habilitar notificaciones de escritorio?","notifications_no_notifications":"Sin actividad","notifications_no_notifications_message":"Invitaciones a listas compartidas y cualquier otra actividad aparece aquí.","notifications_event_accept":"Aceptar","notifications_event_accepted":"Aceptada","web_upgrade_ie9_not_supported":"Wunderlist no soporta Internet Explorer 9. Por favor actualice a $ o $ para una experiencia mejor.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Parece que estás utilizando un dispositivo de pantalla táctil. ¿Te gustaría activar el interfaz táctil? Siempre puedes cambiarlo en la configuración de tu cuenta.","web_setting_enable_touch_for_$":"Activa Touch para: $","web_settings_text_refresh_may_be_required":"Puede ser necesario actualizar","rate_label":"Valorar Wunderlist","rate_app_heading":"Puntúe y comente Wunderlist","rate_app_message_web_chrome":"Gracias por usar Wunderlist. ¡Nos gustaría saber que piensas! Por favor, cuéntanos valorando o revisando Wunderlist en Chrome Web Store ★★★★★","rate_app_button_later":"Recordar en otro momento","rate_app_button_no":"No Gracias","rate_app_button_yes":"Valorar Wunderlist","placeholder_add_due_today_to_inbox":"Añadir un elemento con vencimiento hoy en la bandeja de entrada","placeholder_add_list":"Añadir una lista...","placeholder_add_subtask":"Añadir una subtarea","placeholder_add_starred_to_inbox":"Añadir un elemento destacado en la bandeja de entrada","placeholder_add_task_to_$":"Añadir un elemento en \"$\"...","placeholder_add_to_inbox":"Añadir un elemento en \"Bandeja de Entrada\"","placeholder_new_list":"Nueva Lista","placeholder_remind_me":"Recordar","placeholder_search":"Buscar...","placeholder_sharing_search":"Nombre o dirección de email...","placeholder_set_due_date":"Configura una fecha límite","browser_outdated_heading":"Oh, Oh. Parece que tu navegador no está actualizado.","browser_outdated_update":"Por favor, actualiza tu navegador","browser_outdated_explanation":"Wunderlist está desarrollado con las últimas y mejores tecnologías. Para usar Wunderlist, descarga la última versión de tu navegador","prenamed_list_movies":"Películas para ver","prenamed_list_private":"Privado","prenamed_list_shopping":"De compras","prenamed_list_wishlist":"Lista de deseos","prenamed_list_work":"Trabajo","prenamed_list_read_later":"Leer después","settings_account_change_email":"Cambiar email...","settings_account_change_password":"Cambiar contraseña...","settings_account_delete_confirmation":"Escribe \"estoy seguro\"","settings_account_delete_confirmation_text":"estoy seguro","settings_account_drop_image":"Arrastra una imagen aquí","settings_account_connect_facebook_account":"Conectar su cuenta Wunderlist con Facebook hará mas simple compartir sus listas, de una manera rapida y facil.","settings_general_12_hour":"12 Horas","settings_general_24_hour":"24 Horas","settings_general_confirm_deletion":"Confirmar antes de eliminar elementos","settings_general_create_new_tasks":"Añadir nuevos elementos","settings_general_date_format":"Formato de fecha","settings_general_language":"Idioma","settings_general_start_of_week":"Inicio de la semana","settings_general_start_of_week_sunday":"Domingo","settings_general_start_of_week_saturday":"Sábado","settings_general_start_of_week_monday":"Lunes","settings_general_sound_task_completion":"Habilitar un sonido al completar un elemento","settings_general_sound_new_notifications":"Habilitar sonido para notificaciones nuevas","settings_general_print_done_tasks":"Imprimir los artículos completados","settings_general_tasks_bottom":"Final de la lista","settings_general_tasks_top":"Principio de la lista","settings_general_time_format":"Formato de la hora","settings_heading_team":"Empresa","settings_heading_about":"Acerca de","settings_heading_account":"Cuenta","settings_heading_general":"General","settings_heading_notification":"Notificaciones","settings_heading_shortcuts":"Atajos","settings_heading_sidebar":"Menú lateral","settings_imprint":"Aviso legal","settings_visit_website":"Visita nuestra web","settings_get_help":"Centro de Soporte","settings_notifications_notify_me_of_important_events_mobile":"Notifícame de eventos importantes vía:","settings_notifications_notify_me_on_text":"Te notificaremos algunos sucesos, tales como que alguien acepta una invitación a una lista compartida, o que alguien añade o completa un elemento en una de tus listas compartidas.","settings_sidebar_smart_lists_title":"Mostrar estas Smart Lists en el menú lateral:","settings_sidebar_smart_lists_auto":"Auto","settings_sidebar_smart_lists_hidden":"Oculto","settings_sidebar_smart_lists_visible":"Visible","settings_sync_full":"Sincronizar ahora","settings_account_account_backup":"Backup de la cuenta","settings_account_restore_backup":"Importa desde copia de seguridad","settings_account_backup_description":"Los datos de la copia de seguridad incluyen todas tus Listas, Tareas, Subtareas y Recordatorios. Toma nota de que no incluye aquellas Listas compartidas contigo, Archivos, Comentarios, Receptores de Listas Compartidas y configuraciones anteriores de la aplicación.","settings_account_data_is_being_processed":"Mantente a la espera! La copia de seguridad de tus datos está siendo procesada. Te enviaremos un email de confirmación cuando todo esté completo.","settings_account_change_password_error":"Ha ocurrido un problema actualizando tu contraseña. Inténtalo de nuevo, por favor.","settings_account_click_to_download_backup":"Haga clic aquí para descargar","settings_account_create_backup":"Crear Backup","settings_account_current_password":"Contraseña actual","settings_account_delete_account":"Eliminar cuenta","settings_account_delete_account_confirm":"¿Estás seguro de que quieres borrar tu cuenta?","settings_account_delete_account_confirm_text":"Si eliminas tu cuenta, todas tus listas y elementos se borrarán permanentemente y no podrán ser recuperados.","settings_account_fetching_data":"Obteniendo datos ...","settings_account_new_password":"Nueva contraseña","settings_account_repeat_new_password":"Repite la nueva contraseña","settings_account_right_click_and_save_as":"Pulsar con el botón derecho y Guardar","settings_third_party_libraries":"Licencias","settings_background_credits":"Autores de los fondos","settings_notifications_email_enabled":"Notificaciones por email","settings_notifications_desktop_enabled":"Notificaciones de escritorio","settings_notifications_push_enabled":"Notificaciones Push","settings_privacy_policy":"Política de privacidad","settings_shortcuts_arrow_keys":"Teclas de flechas","settings_shortcuts_delete_item":"Eliminar lista o elemento seleccionado","settings_shortcuts_mark_done":"Marcar elemento seleccionado como \"Completado\"","settings_shortcuts_mark_starred":"Marcar elemento seleccionado como \"Importante\"","settings_shortcuts_new_list":"Añadir nueva lista","settings_shortcuts_new_task":"Añadir nuevo elemento","settings_shortcuts_open_all_smart_list":"Abrir la Lista Inteligente \"Todos\" ","settings_shortcuts_open_assigned_smart_list":"Abrir la Lista Inteligente 'Asignado a mí'","settings_shortcuts_open_conversations_smart_list":"Abrir la Lista Inteligente \"Conversaciones\"","settings_shortcuts_open_done_smart_list":"Abrir la Lista Inteligente \"Terminadas\"","settings_shortcuts_open_inbox":"Abrir bandeja de entrada","settings_shortcuts_open_preferences":"Abrir preferencias","settings_shortcuts_open_search":"Enfocar búsqueda","settings_shortcuts_open_starred_smart_list":"Abrir la Lista Inteligente \"Destacadas\"","settings_shortcuts_open_today_smart_list":"Abrir la Lista Inteligente \"Hoy\"","settings_shortcuts_open_week_smart_list":"Abrir la Lista Inteligente \"Semana\"","settings_shortcuts_reset":"Restablecer valores","settings_shortcuts_select_all_tasks":"Seleccionar todos los elementos","settings_shortcuts_show_more":"Mostrar Más","settings_shortcuts_hide":"Ocultar","settings_shortcuts_show_notifications":"Mostrar centro de actividad","settings_shortcuts_step_through_list":"Saltar por las listas","settings_shortcuts_step_through_task":"Saltar por los elementos","settings_terms_of_use":"Términos de Uso","settings_account_header_free":"Gratis","settings_account_header_unregistered":"Registrarse","settings_account_header_account_$":"Cuenta $","settings_account_pro_description":"Añade comentarios y archivos a tus tareas y asígnalas a tus compañeros. ¡El trabajo en equipo nunca ha sido tan fácil!","settings_account_register_wunderlist_description":"Regístrate en Wunderlist para sincronizar tus listas en todos tus dispositivos.","settings_manage_subscription_button":"Gestiona tu suscripción","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Genial, eres $!","settings_account_header_pro_description":"Wunderlist Pro es la mejor forma de mantener el rumbo de tus proyectos. Invita a tus amigos y colegas y haz que las cosas se hagan!","settings_upgrade_to_pro_label":"Actualiza a $","settings_label_pro_account":"Cuenta Pro","settings_label_purchased_from_$":"Comprado en: $","settings_label_purchased_from_$_by_$":"Comprado en $1 por $2","settings_label_expires_in_$":"Caduca en $","setting_label_next_billing_date":"Próxima fecha de facturación:","setting_label_cancel_subscription":"Cancelar Subscription","setting_heading_cancel_subscription":"¿Realmente quieres cancelar tu suscripción a Wunderlist Pro?","setting_description_cancel_subscription":"Mantendrás el acceso a todos tus datos, pero una vez que tu suscripción expire, solo podrás usar las funciones estándar de Wunderlist.","setting_label_cancel_subscription_success":"Hemos cancelado tu suscripción satisfactoriamente.","settings_label_invoices":"Facturas","settings_label_become_a_pro":"Conviértete en Pro","settings_payment_info_expires_$_relative":"Caduca $","settings_payment_info_expires_$_absolute":"Caduca en $1 días: $2","settings_manage_subscription_error":"Lo sentimos, ha habido un error mientras se intentaba gestionar tu suscripción.","group_billing_packages_title":"Planes para todas las empresas","group_billing_packages_text":"Wunderlist para Empresas te facilita todas las funcionalidades que necesitas para trabajar más inteligentemente como equipo a un precio razonable. Simplemente selecciona el plan adecuado para tu empresa ahora.","group_billing_plan_table_team_size":"Tamaño del equipo","group_billing_plan_table_price":"Precio","group_billing_plan_table_package_name_$":"$ Miembros","group_billing_buy_button_label":"Compra","group_billing_$_off":"$ ahorro","group_billing_larger_team_$":"¿Tienes un equipo mayor? $","group_billing_contact_us":"¡Contáctanos!","group_billing_downgrade_error_$_$":"Para cambiar al plan de $1 Miembros, debes eliminar $2 componentes de equipo de la cuenta.","group_billing_manage_team":"Pulsa aquí para gestionar tu equipo.","group_billing_button_label_manage":"Gestionar","group_billing_team_plan_title":"Tu Plan Wunderlist Pro","group_billing_team_plan_text":"¡Wunderlist Pro crece junto a tu equipo! Añadir nuevos miembros es muy facil, simplemente introduce sus direcciones de correo electrónico debajo. ¡Así de facil!","group_billing_upgrade_button_label":"Cambiar plan","group_billing_upgrade_plan_button_label":"Actualizar","group_billing_Downgrade_plan_button_label":"Degradar","group_billing_view_plans_button_label":"Ver planes","group_billing_manage_team_header":"Gestionar miembros del equipo","group_billing_email_address_input_placeholder":"Correo electrónico","group_billing_manage_count_$_of_$":"$1 de $2","group_billing_cancel_team_plan":"Cancela Tu Plan Wunderlist Pro","group_billing_search_coachmark":"Para añadir miembros, simplemente añade la dirección de correo electrónico de tus compañeros, y serán añadidos a tu plan Pro ","group_billing_cancel_header":"¿Estás seguro de que quieres cancelar la subscripción a Wunderlist Pro de tu equipo?","group_billing_change_plan_confirmation_$_$_$":"Cambiar de plan es fácil. Si te decides ahora por el plan de $1 Miembros, se te facturarán $2 en el siguiente ciclo de facturación empezando el $3. ¿Estás seguro de que quieres hacer esto ahora?","group_billing_cancel_text":"Tu plan Pro funcionará hasta final de mes, y no pagarás de nuevo. Seguirás pudiendo ver algunas de las funcionalidades Pro, como archivos adjuntos a tareas, pero no podrás realizar cambios sobre ellos.","error_goup_billing_user_already_pro":"Parece que este usuario ya tiene una cuenta Wunderlist Pro. ¡Regálale la cuenta Pro a otro usuario!","error_group_billing_wait_subscription_runs_out":"Tienes que esperar hasta que tu suscripción actual expire antes de comprar una nueva. Expira en: $.","button_label_buy_wunderlist_for_business":"Ir a Wunderlist para Empresas","benefit_payment_service_unavailable":"Servicio de pago no disponible","benefit_name":"Wunderlist","benefit_header_$":"Conviértete en $","benefit_header_description":"¡Colaboración entre equipos y negocios nunca ha sido tan fácil! Aquí tienes 4 buenas razones para comprar una suscripción a Wunderlist Pro.","benefit_button_buy_monthly":"Mensualmente","benefit_assign_tasks_title":"Asigna tareas","benefit_assign_tasks_description":"Delega y sigue el estado de las tareas de colegas y amigos fácilmente!","benefit_unlimited_subtasks_title":"Ilimitadas Subtareas","benefit_unlimited_subtasks_decription":"Divide grandes tareas en pequeños pasos realizables para una productividad mejorada sin limitaciones.","benefit_comments_title":"Comentarios","benefit_comments_description":"Inicia una conversación con tu equipo sobre alguna de tus tareas. Deja un comentario, una pregunta, o añade alguna idea extra.","benefit_backgrounds_update_$":"Para usar nuestros nuevos fondos de pantalla, actualiza a $.","benefit_additional_backgrounds_title":"Fondos adicionales","benefit_additional_backgrounds_description":"¡Descubre 8 nuevos hermosos fondos de pantalla para personalizar Wunderlist tal y como te gusta!","benefit_files_title":"Archivos","benefit_files_description":"Adjunta archivos a tus tareas y compártelos con tu equipo.","benefit_coming_soon":"Próximamente","benefit_assign_become_pro":"Asigna tareas a tus colegas de trabajo con Wunderlist","benefit_label_accept_terms":"Contratando una suscripción Wunderlist Pro, aceptas los $1 y $2.","benefit_label_need_more_subtasks":"¿Necesitas más subtareas?","sharing_connect_facebook_sharing":"Conectar tu cuenta Wunderlist con Facebook hará más simple compartir tus listas, de una manera rápida y fácil.","sharing_facebook_apprequest_message_$user_$list":"“$1” le gustaría compartir la lista “$2” contigo","sharing_invite":"Invitar gente","sharing_invite_friends":"Invitar amigos","sharing_inviting_requires_account":"Regístrate para invitar a tus amigos y colegas a tus listas.","sharing_leave_action":"¿Estás seguro de que quieres abandonar esta lista?","sharing_leave_button":"Abandonar lista compartida","sharing_list_members":"Miembros de la lista","sharing_list_owner":"Propietario","sharing_list_pending_member":"Pendiente","sharing_tab_recents":"Recientes","sharing_shared_with_you_by":"Compartido contigo por","smart_list_assigned_to_me":"Asignado a mí","smart_list_conversations":"Conversaciones","smart_list_all":"Todo","smart_list_completed":"Completado","smart_list_inbox":"Bandeja de entrada","smart_list_starred":"Destacados","smart_list_today":"Hoy","smart_list_week":"Semana","label_tell_friends":"Díselo a tus amigos","social_sharing_heading":"¿Te gusta Wunderlist? ¡Díselo a tus amigos!","social_sharing_dialog_headline":"¿Te encanta Wunderlist?","social_sharing_dialog_danke":"Gràcies!","social_sharing_button_later":"Ahora No","social_sharing_button_no_thanks":"No, gracias","social_sharing_button_facebook":"Compartir","social_sharing_button_follow_us":"Síguenos en Twitter","social_sharing_button_like_us":"Hazte fan en Facebook","social_sharing_heading_thanks":"Asegúrate de seguirnos para saber las últimas noticias sobre Wunderlist.","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"Estoy usando Wunderlist, mi lista de tareas, bonita y sencilla. Consíguela gratis en www.wunderlist.com","twitter_sharing_placeholder":"Estoy usando @Wunderlist, mi lista de tareas, bonita y sencilla. Consíguela gratis en www.wunderlist.com","tutorial_welcome_notes_title":"Notas","tutorial_welcome_notes_text":"Notas desacoplables te permite trabajar dentro y fuera de Wunderlist.","tutorial_welcome_notifications_title":"Centro de actividad","tutorial_welcome_notifications_text":"Personaliza la forma en la quieres ser notificado. Recibe invitaciones y actualizaciones sobre tus listas compartidas via email y notificaciones de escritorio, o revísalas todas desde el Centro de Actividad.","tutorial_welcome_sharing_title":"Invitar amigos","tutorial_welcome_sharing_text":"Ahora es incluso más fácil invitar a tus amigos o compañeros para que te echen una mano.","tutorial_welcome_subtasks_title":"Elementos recurrentes, Recordatorios y Subtareas","tutorial_welcome_subtasks_text":"Wunderlist incluye una vista de detalles renovada, que te permite añadir fácilmente elementos recurrentes, recordatorios y subtareas.","tutorial_welcome_user_title":"¡Es todo sobre ti!","tutorial_welcome_user_text":"Cambia las preferencias de tu cuenta, comprueba el estado de sincronización y personaliza tu fondo.","tutorial_welcome_newsletter_subscribe":"Notificarme de las actualizaciones importantes y nuevas características de Wunderlist por e-mail","tutorial_feature_pro_title":"Característica de Wunderlist Pro","share_list_email_signature":"Enviado con Wunderlist – Mi hermosa y simple lista de tareas\\nGratis para iPhone, iPad, Android, Mac, Windows PC y para la Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ elemento no sincronizado","userbar_$_unsynced_item_plural":"$ elemento(s) sin sincronizar","userbar_account_settings":"Ajustes de cuenta","userbar_change_background":"Cambiar fondo","userbar_last_synced_$":"Última sincronización: $","userbar_no_internet_connection":"Desconectado","userbar_preferences":"Preferencias","userbar_sync_in_progress":"Sincronizando...","userbar_user_name_for_unregistered_mode":"Regístrate para sincronizar","whatsnew_title":"Qué hay de nuevo","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Comentarios","whatsnew_label_voice":"Entrada de Voz","whatsnew_label_groupbilling":"Precios para Equipos","whatsnew_copy_comments":"Manten todas las conversaciones sobre tus tareas en un solo lugar con Comentarios en Wunderlist Pro. Deja un comentario, una pregunta o añade alguna inspiración extra a cualquiera de tus tareas para mejorar notablemente la comunicación dentro de tu equipo.","whatsnew_copy_pro_accounts":"Añade Comentarios, Asigna tareas, añade Archivos y crea Subtareas Ilimitadas con Wunderlist Pro para conseguir más, juntos.","whatsnew_copy_voice":"Pulsa en el icono del micrófono para dictar tus tareas o incluso grabar una Nota de Voz y adjuntarla como archivo.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Regístrate para probar Wunderlist Pro y añadir un Archivo.","label_add_new_file":"Añadir un archivo...","file_uploaded_unsuccessfully":"La subida de $ ha fallado. Inténtalo de nuevo.","file_uploaded_failed":"La subida ha fallado, inténtalo de nuevo.","file_uploaded_failed_deleted":"La carga de $ ha fallado porque el archivo ha sido borrado de tu disco duro.","label_are_you_sure_permanently_delete_$_file":"¿Estás seguro de que quieres eliminar permanentemente el archivo \"$\" de Wunderlist?","upload_file_was_not_synced_yet":"Por favor, sincroniza","upload_file_not_synced_yet":"No Sincronizado","placeholder_add_comments":"Añadir un comentario...","placeholder_reply":"Responder...","button_label_go_pro_to_comment":"Hazte Pro para comentar","comment_request_failed":"Lo sentimos, no se han podido cargar los Comentarios. Por favor, vuelve a intentarlo.","comment_load_earlier":"Ver más Comentarios","coachmark_no_current_comments":"Aún no hay comentarios.\\nComienza tu conversación aquí.","coachmark_comments_not_available":"Lo sentimos, no se han podido cargar los comentarios anteriores. Por favor vuelve a intentarlo en unos momentos.","notification_$_commented_on_$":"$1 ha comentado en $2","notification_$_and_$_commented_on_$":"$1 y $2 han comentado sobre $3","notification_$_and_$_others_commented_on_$":"$1 y otros $2 han comentado sobre $3","comments_requires_account":"Regístrate para probar Wunderlist Pro y añadir un Comentario.","non_pro_trial_free_limit_reached":"¡Has alcanzado el límite de la versión Free!","non_pro_trial_write_next_comment_$":"Puedes añadir otro Comentario $.","non_pro_trial_upload_next_file_$":"Podrás añadir otro archivo $.","non_pro_trial_assign_next_to_do_$":"Puedes Asignar otra tarea $.","button_signup_or_login":"Regístrate o Entra","button_it_is_completely_free":"Es totalmente gratis","label_free_download_for_platforms":"Disponible gratis para iPhone, iPad, Android, Windows y Mac","label_wunderlist_to_get_things_done":"Más de 5 millones de personas usan Wunderlist para organizarse con eficacia.","label_people_who_use_wunderlist":"Ver quién ya está utilizando Wunderlist:","label_wunderlist_uses":"Tanto si estás organizando tu negocio, compartiendo una lista de la compra con un ser querido o simplemente haciendo un seguimiento de tu vida diaria, Wunderlist es el mejor gestor de listas para ti, tu equipo o tu familia.","label_install_browser_extension":"Instala la Extensión del Navegador","label_install_chrome_browser_extension":"Instala la Extensión para Chrome","label_newsletter_signup":"Regístrate a nuestro boletín","label_know_upcoming_features":"Cuéntate entre los primeros en saber las novedades que se acercan","label_learn_more_about_wunderlist":"Saber más sobre Wunderlist","label_learn_more":"Saber más...","label_your_email_address":"Tu email","button_subscribe_to_newsletter":"Suscribirse","button_sending_subscribe_to_newsletter":"Enviando...","iyf4_usermenu_label":"Consigue Wunderlist Pro Gratis","iyf4_notification_label":"¡Consigue hasta 12 meses gratis de Wunderlist Pro invitando a tus amigos!","iyf4_notification_button_label_var_a":"Empieza invitando","iyf4_notification_button_label_var_b":"Invita a tus Amigos","iyf4_notification_button_label_var_c":"Consigue Wunderlist Pro Gratis","iyf4_notification_button_label_var_d":"Comparte Wunderlist Pro","iyf4_dialog_invite_headline_$":"Consigue hasta $ de Wunderlist Pro invitando a tus amigos!","iyf4_dialog_invite_headline_incentive":"12 meses gratis","iyf4_dialog_invite_incentive_$":"$ Wunderlist, os daremos a ambos 1 mes de Wunderlist Pro gratis hasta un límite de 12 meses)","iyf4_dialog_invite_incentive_terms":"Para cada amigo que se inscriba","iyf4_dialog_tweet":"Me encanta organizar mi vida con Wunderlist. Consigue gratis Wunderlist Pro por un mes aquí:","iyf_notification_label":"Recomienda Wunderlist a tus amigos y obtendrás la versión Pro gratis por 12 meses.","iyf_notification_button_label":"¡Hazte Pro!","iyf_dialog_step1_headline":"Consigue una Cuenta Pro gratis","iyf_dialog_step1_subheadline":"en 3 sencillos pasos","iyf_dialog_step1_instruction1_headline":"Empieza invitando a tus amigos","iyf_dialog_step1_instruction1_subheadline":"en Facebook, Twitter o por E-Mail","iyf_dialog_step1_instruction2_headline":"Tus amigos se registran","iyf_dialog_step1_instruction2_subheadline":"espera mientras ellos se unen a Wunderlist","iyf_dialog_step1_instruction3_headline":"Disfruta tu Cuenta Pro gratuita","iyf_dialog_step1_instruction3_subheadline":"1 mes por cada amigo que acepte","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 mes por cada $ amigos que acepten","iyf_dialog_step1_next_button":"Empieza invitando","iyf_dialog_step2_subheadline":"para conseguir tu Cuenta Pro gratuita","iyf_dialog_step2_divider_label":"Compartir este enlace","iyf_dialog_share_on_facebook":"Compartir en Facebook","iyf_dialog_post_on_twitter":"Comparte en Twitter","iyf_dialog_email_placeholder":"Introduce una dirección de correo electrónico...","iyf_dialog_more_placeholder":"Añade otra...","iyf_dialog_step3_headline":"Gracias por compartir","iyf_dialog_step3_subheadline":"Espera mientras tus amigos se unen","iyf_dialog_step3_success_headline":"Invitaciones enviadas correctamente","iyf_dialog_step3_success_subheadline":"Te notificaremos tan pronto tu cuenta Pro esté disponible.","iyf_dialog_step3_invite_more":"Invitar a más gente","meta_title":"Wunderlist 2: Tu hermosa y simple aplicación de listas de tareas online","meta_description":"Más de 5 millones de personas usan ya Wunderlist para gestionar tareas, listas, y organizarse con eficacia. Wunderlist es la mejor lista de tareas para ti, tu equipo, o tu familia.","meta_keywords":"6wunderkinder, productividad, colaboración, gestión de tareas, pendientes, lista, tareas, gtd, organizar, planificar, lista de la compra, recordatorios, subtareas, smart lists, lista de películas, lista compartida","enable_desktop_notifications_text":"Pulsa “Confirmar”y luego “Permitir” en tu navegador para activar las notificaciones.","notification_add_to_browser":"Mantén Wunderlist a un solo click de distancia. Añade la aplicación web de Wunderlist a tu navegador ahora.","notification_add_extension_to_browser":"Guarde rápidamente su contenido web directamente en Wunderlist. Instale la extensión para Chrome Añadir a Wunderlist ahora.","button_add_to_chrome":"Añadir a Chrome","button_add_to_store_added":"Añadido","aria_activity_center_hint":"Centro de Actividades. Pulsa escape para cerrar.","aria_exit_search":"Salir de la búsqueda","aria_search":"Buscar","aria_sort_list":"Ordenar Lista","aria_thank_you":"Esperamos que nuestras funciones de accesibilidad te hayan sido útiles. Por favor, envíanos cualquier comentario sobre nuestra implementación de accesibilidad a support@wunderlist.com. Gracias por elegir Wunderlist.","aria_user_menu_hint":"Menú de Usuario. Pulsa escape para cerrar.","aria_assign_to_$":"Asignar a $","momentjs_months":"Enero_Febrero_Marzo_Abril_Mayo_Junio_Julio_Agosto_Septiembre_Octubre_Noviembre_Diciembre","momentjs_monthsShort":"Ene_Feb_Mar_Abr_May_Jun_Jul_Ago_Sep_Oct_Nov_Dic","momentjs_weekdays":"Domingo_Lunes_Martes_Miércoles_Jueves_Viernes_Sábado","momentjs_weekdaysShort":"Dom_Lun_Mar_Mie_Jue_Vie_Sab","momentjs_weekdaysMin":"Do_Lu_Ma_Mi_Ju_Vi_Sa","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Dnes v] LT","momentjs_calendar_nextDay":"[Mañana a las] LT","momentjs_calendar_nextWeek":"dddd [a las] LT","momentjs_calendar_lastDay":"[Ayer a las] LT","momentjs_calendar_lastWeek":"[ultimo] dddd [a las] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"en %s","momentjs_relativeTime_past":"hace %s","momentjs_relativeTime_s":"unos pocos segundos","momentjs_relativeTime_m":"un minuto","momentjs_relativeTime_mm":"%d minutos","momentjs_relativeTime_h":"una hora","momentjs_relativeTime_hh":"%d horas","momentjs_relativeTime_d":"un día","momentjs_relativeTime_dd":"%d días","momentjs_relativeTime_M":"un mes","momentjs_relativeTime_MM":"%d meses","momentjs_relativeTime_y":"un año","momentjs_relativeTime_yy":"%d años"}
};
});
define('languages/persian',[],function() {
return {
'name': 'persian',
'data': {"actionbar_print_selected_item":"چاپ عنوان انتخاب شده","actionbar_print_$_selected_items_plural":"چاپ $ مورد انتخاب شده","actionbar_email_selected_item":"ارسال عنوان انتخاب شده با ایمیل","actionbar_email_$_selected_items_plural":"ارسال با ایمیل $ عناوین انتخاب شده","actionbar_sort_alphabetically":"مرتب‌سازی بر اساس حروف الفبا","actionbar_sort_due_date":"مرتب سازی بر اساس تاریخ سررسید","actionbar_sort_assignee":"مرتب‌سازی بر اساس فرد","api_error_account_already_exists":"کاربری با این نشانی ایمیل در حال حاضر موجود است. ","api_error_connection_error":"وع! به نظر می‌رسد که مشکلی در ارتباط با کارگزار پیش آمده باشد. لطفاً دوباره تلاش کنید.","api_error_general_error":"وع! در حال حاضر  کارگزار قابل دسترسی نیست. لطفاً دوباره تلاش کنید.","api_error_incorrect_login":"نشانی ایمیل یا گذرواژه ورودی شما  اشتباه است.","api_error_incorrect_password":"رمز عبور ورودی شما اشتباه است.","api_error_service_down":"یک کی پارت از سرویس واندرلیست از دسترس خارج شده است.","api_error_unknown":"خطایی غیرقابل پیش‌بینی و خارج از کنترل روی داد.","api_error_validation_error_unable_to_signup":"قادر به ثبت نام با ایمیلی که وارد شده نیستیم.","api_error_not_a_beta_user":"شما عضو نسخه ی آزمایشی واندرلیست نمیباشید.","button_back":"بازگشت","button_cancel":"لغو","button_confirm":"تأیید","button_download":"دانلود","button_change":"تغییر","button_choose":"انتخاب","button_connect":"ارتباط","button_connect_facebook":"ارتباط با فیسبوک","button_continue":"ادامه","button_delete":"حذف","button_disconnect":"قطع ارتباط","button_dismiss":"انصراف","button_done":"انجام شد","button_edit":"ویرایش","button_get_started":"آغاز به کار","button_go_back":"بازگشت","button_go_back_sentence":"بازگشت","button_learn_more":"آموزش بیشتر","button_go_back_to_login":"بازگشت به صفحه ورود","button_go_to_web_app":"بازگشت به برنامه تحت وب","button_join_now":"به ما بپیوندید","button_log_in":"ورود ","button_log_in_with_$":"ورود توسط $","button_log_out":"خروج","button_log_in_facebook":"ورود با  شناسه فیسبوک","button_next":"بعدی","button_no":"خیر","button_no_due_date":"بدون تاریخ سررسید","button_ok":"باشه","button_remove_due_date":"حذف تاریخ سر‌رسید","button_remove_reminder":"حذف یادآوری","button_email_list":"فهرست ایمیل","button_print_list":"فهرست چاپ","button_reset_password":"بازیابی گذرواژه","button_retry":"سعی مجدد","button_save":"ذخیره","button_send":"بفرست","button_sign_up":"ثبت نام","button_sign_up_with_$":"عضویت توسط $","button_sign_up_for_free":"عضویت رایگان","button_sign_up_facebook":"ثبت نام با شناسه فیسبوک","button_support_center":"مرکز پشتیبانی","button_subscribe":"عالیه. بله لطفا!","button_try_again":"تلاش دوباره","button_try_wunderlist":"امتحان واندرلیست","button_yes":"بله","coachmark_all_list_empty":"شما هنوز موردی را اضافه نکردید. بفرمایید و یک چیزی اضافه کنید.","coachmark_completed_list_empty":"شما موردی را انجام ندادید. بفرمایید، برخی موارد فهرست‌های خود را بررسی کنید!","coachmark_no_search_results":"جستجو بدون نتیجه","coachmark_sharing_invite_friends_heading":"دوستانتان را دعوت کنید","coachmark_sharing_invite_friends_text_$":"دوستان شما قادر به ایجاد، حذف و علامت‌گذاری موارد در فهرست «$» خواهند بود.","coachmark_sharing_recent_no_contacts_heading":"مخاطب جدیدی نیست","coachmark_sharing_recent_no_contacts_text_$":"یک نشانی ایمیل را بنویسید یا در مخاطبان به جستجو بپردازید. پس از افزودن یک نفر، دوستان شما قادر به ایجاد، حذف و علامت‌گذاری موارد در فهرست «$» خواهند بود.","coachmark_assigned_to_me_list_empty":"چیزی مختص به شما وجود ندارد","coachmark_conversations_list_empty":"هیچ گفتگویی در حال حاضر وجود ندارد.","coachmark_starred_list_empty":"شما هیچ موردی ستاره داری ندارید","coachmark_today_list_empty":"ایول! شما چیزی برای سررسید امروز ندارید.","coachmark_week_list_empty":"در اوقات فراغت هستید؟ شما هیچ موردی برای سر رسید در ۷ روز آینده ندارید.","error_list_not_found":"فهرست مورد نظر موجود نمی باشد","error_share_not_created":"ایرادی در حین به اشتراک گذاری فهرست شما رخ داده است، لطفا مجددا سعی نمایید.","error_task_not_found":"عنوان جستجو شده پیدا نشد.","error_page_not_found":"صفحه درخواستی موجود نیست","error_title_not_found":"موجود نیست","label_are_you_sure_permanently_delete_item":"آیا از حذف دائمی این مورد اطمینان دارید؟","label_are_you_sure_permanently_delete_item_plural":"آیا از حذف دائمی این موارد اطمینان دارید؟","label_activity_center":"مرکز فعالیت ","label_are_you_sure_permanently_delete_$_list":"آیا از حذف همیشگی فهرست «$» اطمینان دارید؟","label_are_you_sure_permanently_delete_$_task":"آیا از حذف همیشگی مورد «$» اطمینان دارید؟","label_are_you_sure_permanently_delete_task_plural":"آیا از حذف دائمی این موارد اطمینان دارید ؟","label_are_you_sure_permanently_delete_$_subtask":"آیا از حذف همیشگی زیروظیفه «$» اطمینان دارید؟","label_cant_undo":"شما قادر به واگرد این عمل نخواهید بود.","label_completed_tasks_heading":"۱ عنوان کامل شده","label_$_completed_tasks_heading_plural":"$ عناوین کامل شده","label_connecting":"در حال اتصال...","label_minisite_description_line_1":"رهگیری تمامی آیتم های دلخواه","label_minisite_description_line_2":"واندرلیست به صورت رایگان بر روی اغلب سیستم‌های نرم‌افزاری موجود است","label_minisite_share_deleted_or_no_access":"گویا این مورد حذف شده است و یا دیگر قابل دسترسی نیست.","label_minisite_contact_sender_for_info":"لطفا برای کسب اطلاعات بیشتر با کسی که این فهرست را به اشتراک گذاشته است ارتباط برقرار کنید","label_minisite_$_invited_you_to_the_list_$":"$1 شما را به لیست دعوت نموده @$%2","label_minisite_empty_list_$":"این فهرست در حال حاضر خالی است، پس به آن کمک کنید تا شروع کند، به آسانی بر دکمه ی عضویت کلیک کنید، و شروع به اضافه کردن عناوین به لیست نمایید $.","label_day_0":"ی","label_day_1":"د","label_day_2":"س","label_day_3":"چ","label_day_4":"پ","label_day_5":"ج","label_day_6":"ش","label_delete_file":"حذف فایل","label_delete_list":"حذف فهرست","label_delete_task":"حذف مورد","label_delete_task_plural":"حذف موارد","label_delete_subtask":"حذف زیروظیفه","label_due_$":"تا تاریخ $","label_due_on":"انجام شود در $","label_due_date":"تاریخ سررسید","label_email":"پست الکترونیک","label_every":"هر","label_loading":"در حال بارگذاری...","label_logging_out":"در حال خروج...","label_name":"نام","label_newsletter":"خبرنامه واندرلیست","label_none":"هیچ کدام","label_notification":"آگاه‌سازی","label_oops":"اوه!","label_or":"یا","label_password":"گذرواژه","label_relative_date_today":"امروز","label_relative_date_today_with_date":"امروز، $","label_relative_date_today_mid_sentence":"امروز","label_relative_date_tomorrow":"فردا","label_relative_date_tomorrow_with_date":"فردا، $","label_relative_date_tomorrow_mid_sentence":"فردا","label_relative_date_yesterday":"دیروز","label_remind_me_at_$":"به من یادآوری کن در  $","label_reminder":"یادآور","label_reminder_message_$":"تنها یک یادآور دوستانه: $","label_repeat_every_day":"تکرار روزانه","label_repeat_every_week":"تکرار هفتگی","label_repeat_every_month":"تکرار ماهیانه","label_repeat_every_year":"تکرار سالیانه","label_repeat_custom":"سفارشی...","label_repeat_day":"هر روز","label_repeat_day_$_plural":"هر $ روز","label_repeat_month":"هر ماه","label_repeat_month_$_plural":"هر $ ماه","label_repeat_week":"هر هفته","label_repeat_week_$_plural":"هر $ هفته","label_repeat_never":"بدون تکرار","label_repeat_year":"هر سال","label_repeat_year_$_plural":"هر $ سال","label_reset_password":"بازیابی گذرواژه","label_rights_reserved":"تمامی حقوق محفوظ است","label_still_fetching_tasks":"درحال دریافت وظایف...","label_sync":"همگام سازی","label_time_am":"ق.ظ.","label_time_day_plural":"روز","label_time_week_plural":"هفته","label_time_month_plural":"ماه","label_time_pm":"ب.ظ.","label_time_year_plural":"سال","label_assign_to":"اختصاص به","label_unassigned":"اختصاص نیافته","label_assign_me":"به من","label_created_$":"ایجاد شده $","label_created_by_$":"ایجاد شده توسط $","label_created_on_$":"ایجاد شده در $","label_created_$_by_$":"$2 ایجاد شده @$1% توسط","label_created_by_$_on_$":"%$2@ایجاد شده توسط  $1 در ","label_completed_$":"انجام شده $","label_completed_on_$":"انجام شده در $","label_completed_$_by_$":"$2 نجام شده @$1%  توسط","label_completed_by_$_on_$":"$2 انجام شده توسط @$1%  در ","login_add_photo_hint":"با ارسال تصویر شخصی شناسه واندرلیست خود را اختصاصی کنید.","login_already_have_account":"هم اکنون عضو هستید؟","login_email_not_valid":"لطفا نشانی معتبری برای ایمیل خود وارد کنید.","login_empty_name":"لطفا نام خود را وارد کنید.","login_empty_password":"لطفاً یک گذرواژه وارد کنید","login_password_not_valid":"لطفاً گذرواژه را صحیح وارد کنید.","login_empty_email":"لطفاً یک نشانی ایمیل وارد کنید","login_enter_name":"شما چه کسی هستید؟","login_enter_password":"شما تقریبا این کار را انجام داده اید","login_enter_password_hint":"گذرواژه ای برای اتمام عضویت در واندرلیست انتخاب کنید.","login_forgot_password":"گذرواژه را فراموش کردم","login_forgot_password_heading":"چیزی فراموش کردید ؟","login_forgot_password_text":"نشانی ایمیلی که با آن ثبت نام کردید را وارد کنید، و ما یک لینک بازنشانی گذرواژه را برایتان می‌فرستیم.","login_no_account_yet":"ثبت نام نکردید؟","login_password_changed":"گذرواژه به روز شد","login_password_not_match":"گذرواژه شما با تکرار آن یکسان نیست","login_password_reset_email_has_been_sent":"لطفا ایمیل خود را برای مطالعه دستورالعمل بازیابی گذرواژه بررسی کنید.","login_reset_password_heading":"حالا زمان ساخت گذرواژه جدید است.","login_reset_password_success":"تنها دکمه زیر را بفشارید و پس از آن شما به واندرلیست بازخواهید گشت.","login_reset_password_success_heading":"هورا! گذرواژه شما با موفقیت تغییر کرد.","login_password_too_short":"یک گذرواژه می بایست شامل حداقل 5 کارکتر باشد.","login_sign_up":"عضویت","login_want_to_try_again":"می خواهید دوباره تلاش کنید؟","login_accept_terms":"By signing up you accept our $1 and $2.","logout_timeout_title":"خطا در هماهنگ سازی","logout_timeout_text":"نمی‌توانیم داده های شما را همگام‌سازی کنیم. آیا دوباره تلاش می‌کنید یا خارج می‌شوید؟","mobile_tutorial_welcome_to":"خوش آمدید به ","mobile_tutorial_wunderlist_subtitle":"لیست زیبا و ساده ی کارهای شما","notifications_desktop_enable_heading":"فعال سازی آگاه‌سازهای رومیزی؟ ","notifications_no_notifications":"بدون فعالیت","notifications_no_notifications_message":"دعوت نامه های ارسالی برای اشتراک و دیگر فعالیت ها در این محل نمایان می شوند.","notifications_event_accept":"می پذیرم","notifications_event_accepted":"پذیرفته شد","web_upgrade_ie9_not_supported":"واندرلیست از اینترنت اکسپلورر 9 پشتیبانی نمی کند. لطفا برای تجربه بهتر به $  یا $  آپدیت کنید.","web_upgrade_to_chrome":"کروم","web_upgrade_to_ie10":"اینترنت اکسپلورر ۱۰","web_enable_touch_styles_alert":"Looks like you are using a device with a touch screen. Would you like to enable a touch optimized interface? You can always change this in your account settings.","web_setting_enable_touch_for_$":"فعالسازی لمس برای: $","web_settings_text_refresh_may_be_required":"ممکن است نیاز به تازه سازی باشد","rate_label":"به واندرلیست امتیاز دهید","rate_app_heading":"به واندرلیست امتیاز دهید و آن را بررسی نمایید","rate_app_message_web_chrome":"متشکریم که از واندرلیست استفاده میکنید. ما عاشق شنیدن نظرات شما هستیم! لطفا با رای های خود و ارسال نظرات و بررسی هایتان در فروشگاه کروم دیدگاهتان را در مورد واندرلیست به ما انتقال دهید.★★★★★","rate_app_button_later":"بعداً به من یادآوری کن","rate_app_button_no":"نه سپاسگزارم","rate_app_button_yes":"اکنون به واندرلیست امتیاز دهید","placeholder_add_due_today_to_inbox":"یک مورد با سررسید امروز به صندوقچه اضافه کن ...","placeholder_add_list":"افزودن فهرست","placeholder_add_subtask":"افزودن  وظیفه جانبی","placeholder_add_starred_to_inbox":"یک مورد ستاره دار را به صندوقچه اضافه کن.","placeholder_add_task_to_$":"افزودن یک مورد به «$»...","placeholder_add_to_inbox":"افزودن یک مورد به صندوقچه","placeholder_new_list":"فهرست جدید","placeholder_remind_me":"یادآوری کن","placeholder_search":"جستجو...","placeholder_sharing_search":"نام یا نشانی ایمیل ...","placeholder_set_due_date":"تنظیم تاریخ سررسید","browser_outdated_heading":"اوه نه، مثل اینکه مرورگر اینترنتی شما به روز نمیباشد","browser_outdated_update":"لطفا مرورگر خود را به روز رسانی نمایید","browser_outdated_explanation":"واندرلیست با استفاده از آخرین و بهترین تکنولوژی ها ساخته شده است، برای استفاده از واندرلیست، آخرین نسخه ی مرورگر خود را داناود نمایید.","prenamed_list_movies":"فیلم های منتظر تماشا","prenamed_list_private":"خصوصی","prenamed_list_shopping":"خرید","prenamed_list_wishlist":"لیست آرزوها","prenamed_list_work":"کار","prenamed_list_read_later":"دیرتر بخوانید","settings_account_change_email":"تغییر نشانی ایمیل","settings_account_change_password":"تغییر گذرواژه","settings_account_delete_confirmation":"عبارت «مطمئن نیستم» را تایپ کنید","settings_account_delete_confirmation_text":"مطمئن نیستم","settings_account_drop_image":"تصویر خود را در این محل رها کنید","settings_account_connect_facebook_account":"ارتباط شناسه واندرلیست با فیس بوک، اشتراک فهرست ها را با دوستان شما به سادگی و در اسرع وقت فراهم می کند","settings_general_12_hour":"۱۲ ساعت","settings_general_24_hour":"۲۴ ساعت","settings_general_confirm_deletion":"تأیید پیش از حذف موارد","settings_general_create_new_tasks":"افزودن مورد جدید","settings_general_date_format":"چارچوب تاریخ","settings_general_language":"زبان","settings_general_start_of_week":"شروع هفته","settings_general_start_of_week_sunday":"یکشنبه","settings_general_start_of_week_saturday":"شنبه","settings_general_start_of_week_monday":"دوشنبه","settings_general_sound_task_completion":"فعال کردن صدا پس از انجام شدن یک مورد","settings_general_sound_new_notifications":"افزودن صدا برایآگاه‌سازی‌های تازه","settings_general_print_done_tasks":"چاپ موارد تکمیل شده","settings_general_tasks_bottom":"پایین فهرست","settings_general_tasks_top":"بالای فهرست","settings_general_time_format":"فرمت زمان","settings_heading_team":"شغل","settings_heading_about":"درباره","settings_heading_account":"شناسه","settings_heading_general":"عمومی","settings_heading_notification":"آگاه‌سازها","settings_heading_shortcuts":"میان‌برها","settings_heading_sidebar":"نوار کناری","settings_imprint":"نشان ما","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"من را از رویدادهای مهم باخبر کن:","settings_notifications_notify_me_on_text":"We’ll notify you on certain events, such as when someone accepts an invitation to a shared list, or when someone adds or completes an item in one of your shared lists.","settings_sidebar_smart_lists_title":"نمایش این فهرست های هوشمند در نوار کناری","settings_sidebar_smart_lists_auto":"خودکار","settings_sidebar_smart_lists_hidden":"مخفی","settings_sidebar_smart_lists_visible":"نمایان","settings_sync_full":"همین الان به روز رسانی کن","settings_account_account_backup":"پشتیبان گیری از اکانت","settings_account_restore_backup":"ورود اطلاعات پشتیبان","settings_account_backup_description":"اطلاعات پشتیبان شامل تمام لیست ها، تسک ها، زیر تسک ها، نوشته ها و یادآوری ها است.لطفا به یاد داشته باشید که پشتیبان شامل لیست هایی که دیگران با شما به اشتراک گذاشته اند مانند فایلها، دیدگاه ها و تنظیمات قبلی برنامه نیست.","settings_account_data_is_being_processed":"Hold tight! Your backup data is being processed. We will send you an email when everything is complete.","settings_account_change_password_error":"مشکلی در به روز رسانی گذرواژه شما رخ داده است.  لطفا دوباره تلاش کنید.","settings_account_click_to_download_backup":"برای دانلود کلیک کنید","settings_account_create_backup":"تهیه پشتیبان","settings_account_current_password":"گذرواژه کنونی","settings_account_delete_account":"حذف شناسه کاربری","settings_account_delete_account_confirm":"آیا از حذف شناسه کاربری خود اطمینان دارید؟","settings_account_delete_account_confirm_text":"حذف شناسه کاربریتان باعث از بین رفتن تمام فهرست‌ها و مواردتان خواهد شد و قابل بازیابی نخواهد بود.","settings_account_fetching_data":"همسان سازی داده ها...","settings_account_new_password":"گذرواژه جدید","settings_account_repeat_new_password":"تکرار گذرواژه جدید","settings_account_right_click_and_save_as":"کلیک راست و ذخیره","settings_third_party_libraries":"پروانه ها","settings_background_credits":"سابقه اعتبار","settings_notifications_email_enabled":"آگاه‌سازی‌های ایمیلی","settings_notifications_desktop_enabled":"آگاه‌سازهای رومیزی","settings_notifications_push_enabled":"نشاندن آگاه‌سازی‌ها","settings_privacy_policy":"سیاست حفظ حریم خصوصی","settings_shortcuts_arrow_keys":"کلید‌های جهت‌نما","settings_shortcuts_delete_item":"حذف فهرست یا مورد انتخاب شده","settings_shortcuts_mark_done":"نشانه گذاری موارد انتخاب شده به عنوان 'انجام شده'","settings_shortcuts_mark_starred":"نشانه گذاری موارد انتخاب شده به عنوان 'ستاره دار'","settings_shortcuts_new_list":"افزودن فهرست جدید","settings_shortcuts_new_task":"افزودن مورد جدید","settings_shortcuts_open_all_smart_list":"باز کردن فهرست هوشمند 'همه'","settings_shortcuts_open_assigned_smart_list":"Open 'Assigned to Me' Smart List","settings_shortcuts_open_conversations_smart_list":"Open 'Conversations' Smart List","settings_shortcuts_open_done_smart_list":"باز کردن فهرست هوشمند 'انجام شده'","settings_shortcuts_open_inbox":"باز کردن صندوق ورودی","settings_shortcuts_open_preferences":"بازکردن ترجیحات","settings_shortcuts_open_search":"جستجوی متمرکز","settings_shortcuts_open_starred_smart_list":"باز کردن فهرست هوشمند 'ستاره دار'","settings_shortcuts_open_today_smart_list":"باز کردن فهرست هوشمند 'امروز'","settings_shortcuts_open_week_smart_list":"باز کردن فهرست هوشمند 'هفته'","settings_shortcuts_reset":"بازنشاندن به پیشفرض","settings_shortcuts_select_all_tasks":"انتخاب همه موارد","settings_shortcuts_show_more":"نمایش بیشتر","settings_shortcuts_hide":"پنهان","settings_shortcuts_show_notifications":"نمایش مرکز فعالیت","settings_shortcuts_step_through_list":"اقدام از طریق فهرست ها","settings_shortcuts_step_through_task":"اقدام از طریق موارد","settings_terms_of_use":"شرایط استفاده ","settings_account_header_free":"رایگان","settings_account_header_unregistered":"عضویت","settings_account_header_account_$":"$ شناسه کاربری","settings_account_pro_description":"Add comments and files to your to-dos and assign them to your colleagues. Collaboration in teams has never been easier!","settings_account_register_wunderlist_description":"Register for Wunderlist to sync your lists across all your devices.","settings_manage_subscription_button":"مدیریت اشتراک","settings_account_header_pro":"حرفه ای","settings_account_header_pro_account_$":"ایول، شما یک $ هستی!","settings_account_header_pro_description":"واندرلیست پرو بهترین راه برای پویا نگه داشتن پروژه‌هایتان است. دوستان و هم‌کلاسی‌های خود را برای هم‌کاری و ساخت لحظاتی شاد دعوت کنید!","settings_upgrade_to_pro_label":"به‌روزرسانی به $","settings_label_pro_account":"حساب حرفه‌ای","settings_label_purchased_from_$":"خریداری شده از: $","settings_label_purchased_from_$_by_$":"Purchased from $1 by: $2","settings_label_expires_in_$":"پایان حساب در: $","setting_label_next_billing_date":"تاریخ صورت‌حساب بعدی:","setting_label_cancel_subscription":"لغو اشتراک","setting_heading_cancel_subscription":"Do you really want to cancel your Wunderlist Pro Subscription?","setting_description_cancel_subscription":"You will still have access to all your data, but once your subscription expires, you will only be able to use Wunderlist’s standard features.","setting_label_cancel_subscription_success":"Your subscription was cancelled successfully.","settings_label_invoices":"Invoices","settings_label_become_a_pro":"یک $ شوید","settings_payment_info_expires_$_relative":"Expires $","settings_payment_info_expires_$_absolute":"Expires in $1 days: $2","settings_manage_subscription_error":"Sorry, an error happened while trying to manage your subscription.","group_billing_packages_title":"Plans for every business ","group_billing_packages_text":"Wunderlist for Business provides you with all the features you need to work smarter as a team at an affordable price. Simply select the right plan for your business now.","group_billing_plan_table_team_size":"Team Size","group_billing_plan_table_price":"Price","group_billing_plan_table_package_name_$":"$ Members","group_billing_buy_button_label":"Purchase","group_billing_$_off":"$ off","group_billing_larger_team_$":"Have a larger team? $","group_billing_contact_us":"Contact us!","group_billing_downgrade_error_$_$":"In order to switch to the $1 Members plan, you must remove $2 teammate(s) from the account. ","group_billing_manage_team":"Click here to manage your team.","group_billing_button_label_manage":"Manage","group_billing_team_plan_title":"Your Wunderlist Pro Plan","group_billing_team_plan_text":"Wunderlist Pro grows right along with your team! Adding members is super easy, just enter their email addresses below. It’s that simple whether or not they’re already a Wunderlist user.","group_billing_upgrade_button_label":"Change Plan","group_billing_upgrade_plan_button_label":"Upgrade","group_billing_Downgrade_plan_button_label":"Downgrade","group_billing_view_plans_button_label":"View Plans","group_billing_manage_team_header":"Manage Team Members","group_billing_email_address_input_placeholder":"Email address","group_billing_manage_count_$_of_$":"$1 of $2","group_billing_cancel_team_plan":"Cancel Your Wunderlist Pro Plan","group_billing_search_coachmark":"To add members, simply enter the email addresses of your teammates, and they'll be added to your Pro plan.","group_billing_cancel_header":"Are you sure you want to cancel your team’s Wunderlist Pro Subscription?","group_billing_change_plan_confirmation_$_$_$":"Changing plans is easy. If you go for $1 Members plan now, you’ll be billed $2 in the next billing cycle starting on $3. Are you sure you want to do this now?","group_billing_cancel_text":"Your Pro subscription will run until the end of month, and you won’t be billed again. While you’ll still retain the ability to view any Pro features like files attached to tasks, you won’t be able to make any changes to them.","error_goup_billing_user_already_pro":"Looks like this person already has a Wunderlist Pro account. Give the gift of Pro to another teammate!","error_group_billing_wait_subscription_runs_out":"You’ll have to wait until your current subscription runs out before repurchasing. Expires on: $.","button_label_buy_wunderlist_for_business":"Go to Wunderlist for Business","benefit_payment_service_unavailable":"خدمات پرداخت در دسترس نیست","benefit_name":"واندرلیست حرفه‌ای","benefit_header_$":"یک $ شوید","benefit_header_description":"Collaboration in teams and businesses has never been easier! Here are 5 very good reasons to sign up for Wunderlist Pro.","benefit_button_buy_monthly":"ماهانه","benefit_assign_tasks_title":"اختصاص انجام‌دادنی‌ها","benefit_assign_tasks_description":"Easily delegate and track the status of to-dos amongst colleagues and friends!","benefit_unlimited_subtasks_title":"کارهای ثانوی نامحدود","benefit_unlimited_subtasks_decription":"Break big tasks into small, achievable steps for improved productivity — without limitations.","benefit_comments_title":"Comments","benefit_comments_description":"Start a conversation with your teammates about any of your to-dos. Leave feedback, ask a question or add some extra insight.","benefit_backgrounds_update_$":"برای استفاده از پس‌زمینه‌های جدید به $ ارتقا بیابید","benefit_additional_backgrounds_title":"پس‌زمینه‌های جدید","benefit_additional_backgrounds_description":"Discover 8 new beautiful backgrounds to customize Wunderlist just the way you like it!","benefit_files_title":"فایلها","benefit_files_description":"Attach files to your to-dos and share them with your teammates.","benefit_coming_soon":"به زودی","benefit_assign_become_pro":"Assign to-dos to your coworkers with Wunderlist","benefit_label_accept_terms":"By purchasing a Wunderlist Pro subscription, you accept the $1 and $2.","benefit_label_need_more_subtasks":"Need more subtasks?","sharing_connect_facebook_sharing":"شناسه واندرلیستتان را به شناسه فیسبوکتان، برای دعوت آسان دوستانتان، متصل کنید.","sharing_facebook_apprequest_message_$user_$list":"“$1” میخواهد فهرست “@$2%” را با شما به اشتراک بگذارد","sharing_invite":"دعوت از دیگران","sharing_invite_friends":"دعوت دوستان","sharing_inviting_requires_account":"برای دعوت دوستان و هم‌دانشگاهیانتان ثبت نام کنید.","sharing_leave_action":"آیا مطمئن هستید که می خواهید این فهرست را ترک کنید؟","sharing_leave_button":"خروج از فهرست اشتراکی","sharing_list_members":"اعضای فهرست","sharing_list_owner":"صاحب","sharing_list_pending_member":"معلق","sharing_tab_recents":"اخیر","sharing_shared_with_you_by":"به اشتراک گذاری شده با شما توسط ","smart_list_assigned_to_me":"Assigned to Me","smart_list_conversations":"Conversations","smart_list_all":"همه","smart_list_completed":"انجام شده","smart_list_inbox":"صندوق ورودی","smart_list_starred":"ستاره دار شده","smart_list_today":"امروز","smart_list_week":"هفته","label_tell_friends":"به دوستانتان خبر دهید.","social_sharing_heading":"به دوستانتان در شبکه ی اجتماعی مورد علاقه تان بگویید!","social_sharing_dialog_headline":"Love Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"فعلاً نه","social_sharing_button_no_thanks":"نه متشکرم","social_sharing_button_facebook":"اشتراک","social_sharing_button_follow_us":"ما را دنبال کنید","social_sharing_button_like_us":"حمایت از ما","social_sharing_heading_thanks":"برای دریافت جدیدترین اخبار واندرلیست مطمین شوید که ما را دنبال میکنید","social_sharing_button_twitter":"توییت","general_sharing_placeholder":"I’m using Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","twitter_sharing_placeholder":"I’m using @Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","tutorial_welcome_notes_title":"یادداشت ها","tutorial_welcome_notes_text":"یادداشت های جدا شدنی به شما اجازه می دهند تا داخل یا خارج از واندرلیست کار کنید.","tutorial_welcome_notifications_title":"مرکز فعالیت ","tutorial_welcome_notifications_text":"روشی را که می‌خواهید به وسیله آن آگاهی یابید را سفارشی کنید. انتخاب کنید که می‌خواهید دعوت‌نامه ها و به روزرسانی های فهرست‌های به اشتراک گذاری شده را به وسیله ایمیل و آگاه‌سازهای رومیزی یا از طریق «مرکز فعالیت» ببینید.","tutorial_welcome_sharing_title":"دعوت دوستان","tutorial_welcome_sharing_text":"اکنون برای شما ساده تر است تا دوستان و همکلاسی هایتان را برای یک کمک دعوت کنید","tutorial_welcome_subtasks_title":"عناوین تکرار شونده، یادآورها و کارهای ثانوی","tutorial_welcome_subtasks_text":"واندرلیست در حال حاضر امکانات جدیدی برای مشاهده جزییات دارا میباشد، که به شما اجازه میدهد به راحتی عناوین تکرارشونده، یادآورها و کارهای ثانویه اضافه نمایید.","tutorial_welcome_user_title":"همه چیز در مورد شما ! ","tutorial_welcome_user_text":"ننظیمات شناسه خود را تغییر دهید، وضعیت همگام سازی را بررسی کنید و پس‌زمینه خود را سفارشی کنید.","tutorial_welcome_newsletter_subscribe":"مرا از به روز رسانی های مهم و ویژگی های جدید واندرلیست به وسیله ی ای-میل آگاه کن","tutorial_feature_pro_title":"ویژگی‌های واندرلیست حرفه‌ای","share_list_email_signature":"Sent with Wunderlist – My beautiful and simple to-do list\\nIt’s free for iPhone, iPad, Android, Mac, Windows PC and Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ مورد هم‌گام نشده","userbar_$_unsynced_item_plural":"$ مورد همگام نشده","userbar_account_settings":"تنظیمات کاربری","userbar_change_background":"تغییر پس زمینه","userbar_last_synced_$":"بروز رسانی  آخر $","userbar_no_internet_connection":"آفلاین","userbar_preferences":"شخصی سازی","userbar_sync_in_progress":"هماهنگ سازی...","userbar_user_name_for_unregistered_mode":"ثبت نام برای همگام سازی","whatsnew_title":"What’s New","whatsnew_label_pro_accounts":"واندرلیست حرفه ای","whatsnew_label_comments":"Comments","whatsnew_label_voice":"ورودی صدا","whatsnew_label_groupbilling":"قیمت گروهی","whatsnew_copy_comments":"Keep all the conversations about your to-dos in one place with Comments in Wunderlist Pro. Leave feedback, ask a question or add extra insight to any of your to-dos to greatly improve communication within your team.","whatsnew_copy_pro_accounts":"Add Comments, Assign to-dos, add Files and create Unlimited Subtasks with Wunderlist Pro to accomplish more, together.","whatsnew_copy_voice":"بر آیکون میکروفن برای دیکته کردن کارهایتان کلیک نمایید یا حتی صدای خود را ضبط نموده و به صورت یک فایل الصاق نمایید.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Sign up to try Wunderlist Pro and add a File.","label_add_new_file":"Add a file...","file_uploaded_unsuccessfully":"Upload of $ failed. Please try again.","file_uploaded_failed":"Upload failed. Please try again.","file_uploaded_failed_deleted":"Upload of $ failed, because the file was deleted from your hard drive.","label_are_you_sure_permanently_delete_$_file":"Are you sure you want to permanently delete the file “$” from Wunderlist?","upload_file_was_not_synced_yet":"Please sync","upload_file_not_synced_yet":"Not Synced","placeholder_add_comments":"Add a comment...","placeholder_reply":"Reply...","button_label_go_pro_to_comment":"Go Pro to comment","comment_request_failed":"Sorry, we couldn't load Comments. Please try again.","comment_load_earlier":"View more Comments","coachmark_no_current_comments":"No comments yet.\\nStart your conversation here.","coachmark_comments_not_available":"Sorry, we couldn’t load the previous comments. Please try again in a few moments.","notification_$_commented_on_$":"$1 commented on $2","notification_$_and_$_commented_on_$":"$1 and $2 commented on $3","notification_$_and_$_others_commented_on_$":"$1 and $2 others commented on $3","comments_requires_account":"Sign up to try Wunderlist Pro and add a Comment.","non_pro_trial_free_limit_reached":"You’ve reached your Free limit!","non_pro_trial_write_next_comment_$":"You can add another Comment $.","non_pro_trial_upload_next_file_$":"You’ll be able to add another File $.","non_pro_trial_assign_next_to_do_$":"You can Assign another to-do $.","button_signup_or_login":"ثبت نام نموده یا وارد شوید","button_it_is_completely_free":"کاملا رایگان است","label_free_download_for_platforms":"آماده برای استفاده ی رایگان برای آیفون، آیپد، اندروید، ویندوز و مکینتاش","label_wunderlist_to_get_things_done":"More than 5 million people use Wunderlist to get things done.","label_people_who_use_wunderlist":"ببینید چه کسانی از واندرلیست استفاده میکنند:","label_wunderlist_uses":"Whether you’re organizing your business, sharing a shopping list with a loved one or simply keeping track of your daily life, Wunderlist is the best to-do list for you, your team or your family.","label_install_browser_extension":"نصب افزونه مرورگر","label_install_chrome_browser_extension":"نصب افزونه مرورگر گوگل کروم","label_newsletter_signup":"برای خبررسانی روزانه ی ما ثبت نام نمایید","label_know_upcoming_features":"اولین فردی باشید که از امکانات جدید واندرلیست مطلع میشود","label_learn_more_about_wunderlist":"درباره ی واندرلیست بیشتر بدانید","label_learn_more":"Learn more...","label_your_email_address":"آدرس ایمیل شما","button_subscribe_to_newsletter":"اشتراک","button_sending_subscribe_to_newsletter":"درحال ارسال...","iyf4_usermenu_label":"Get Wunderlist Pro for Free","iyf4_notification_label":"Get up to 12 free months of Wunderlist Pro by inviting your friends!","iyf4_notification_button_label_var_a":"Start Inviting","iyf4_notification_button_label_var_b":"Invite Friends","iyf4_notification_button_label_var_c":"Get Wunderlist Pro for Free","iyf4_notification_button_label_var_d":"Share Wunderlist Pro","iyf4_dialog_invite_headline_$":"Get up to $ of Wunderlist Pro by inviting your friends!","iyf4_dialog_invite_headline_incentive":"12 free months","iyf4_dialog_invite_incentive_$":"$ Wunderlist, we'll give you both 1 month of Wunderlist Pro for free (up to a limit of 12 months)","iyf4_dialog_invite_incentive_terms":"For every friend who joins","iyf4_dialog_tweet":"I love organizing my life with Wunderlist. Get a month of Wunderlist Pro for free here:","iyf_notification_label":"Refer Wunderlist to your friends and get Pro for free up to 12 months!","iyf_notification_button_label":"Go Pro!","iyf_dialog_step1_headline":"Get a free Pro Account","iyf_dialog_step1_subheadline":"in 3 easy steps","iyf_dialog_step1_instruction1_headline":"Start inviting your friends","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter or E-Mail","iyf_dialog_step1_instruction2_headline":"Your friends sign up","iyf_dialog_step1_instruction2_subheadline":"sit tight while they join Wunderlist","iyf_dialog_step1_instruction3_headline":"Enjoy your free Pro Account","iyf_dialog_step1_instruction3_subheadline":"1 month for every friend who accepts","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 month for every $ friends who accept","iyf_dialog_step1_next_button":"Start inviting","iyf_dialog_step2_subheadline":"to get your free Pro Account","iyf_dialog_step2_divider_label":"Share this link","iyf_dialog_share_on_facebook":"Share on Facebook","iyf_dialog_post_on_twitter":"Tweet on Twitter","iyf_dialog_email_placeholder":"Enter an email address...","iyf_dialog_more_placeholder":"Add another...","iyf_dialog_step3_headline":"Thank you for sharing","iyf_dialog_step3_subheadline":"Sit tight while your friends join","iyf_dialog_step3_success_headline":"Invites successfully sent","iyf_dialog_step3_success_subheadline":"We'll notify you as soon as your Pro account is ready.","iyf_dialog_step3_invite_more":"Invite more people","meta_title":"واندرلیست ۲ : لیست زیبا و ساده ی آنلاین کارهای شما","meta_description":"Over 5 million people already use Wunderlist to manage tasks, to-do lists, and to get things done.  Wunderlist is the best to-do list for you, your team or your family.","meta_keywords":"6wunderkinder, productivity, collaborate, task management, task manager, to-do, todo, list, tasks, gtd, organize, plan, shopping list, reminders, subtasks, smart lists, grocery list, movie list, shared list","enable_desktop_notifications_text":"بر روی  «تایید» کلیک نمایید و سپس  «اجازه دهید»  تا آگاه‌سازهای در مرورگر شما فعال شود","notification_add_to_browser":"واندرلیست خود را به فاصله ی یک کلیک قرار دهید. واندرلیست را به مرورگر خود اضافه نمایید.","notification_add_extension_to_browser":"به سرعت تمامی محتوای مورد علاقه تان را در واندرلیست ذخیره نمایید.اکنون افزونه ی Add to Wunderlist را برای کروم نصب نمایید.","button_add_to_chrome":"اضافه نمودن به کروم","button_add_to_store_added":"اضافه شده","aria_activity_center_hint":"Activity Center. Hit escape to close.","aria_exit_search":"Exit Search","aria_search":"Search","aria_sort_list":"Sort List","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"User menu. Hit escape to close.","aria_assign_to_$":"Assign to $","momentjs_months":"ژانویه_فوریه_مارس_آوریل_می_ژوئن_جولای_آگوست_سپتامبر_اکتبر_نوامبر_دسامبر","momentjs_monthsShort":"دی_بهمن_اسفند_فروردین_اردیبهشت_خرداد_تیر_مرداد_شهریور_مهر_آبان_آذر","momentjs_weekdays":"یک‌شنبه_دوشنبه_سه شنبه_چهارشنبه_پنج‌شنبه_جمعه_شنبه","momentjs_weekdaysShort":"یکشنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنجشنبه_جمعه_شنبه","momentjs_weekdaysMin":"یکشنبه_دوشنبه_سه‌شنبه_چهارشنبه_پنجشنبه_جمعه_شنبه","momentjs_longDateFormat_LT":"ساعت:دقیقه روز","momentjs_longDateFormat_L":"سال/روز/ماه","momentjs_longDateFormat_LL":"سال روز ماه","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[امروز در] LT","momentjs_calendar_nextDay":"[فردا در] LT","momentjs_calendar_nextWeek":"dddd [at] LT","momentjs_calendar_lastDay":"[دیروز در] LT","momentjs_calendar_lastWeek":"[آخرین] dddd [در] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"در %s","momentjs_relativeTime_past":"%s قبل","momentjs_relativeTime_s":"چند ثانیه","momentjs_relativeTime_m":"یک دقیقه","momentjs_relativeTime_mm":"%d دقیقه","momentjs_relativeTime_h":"یک ساعت","momentjs_relativeTime_hh":"%d ساعت","momentjs_relativeTime_d":"یک روز","momentjs_relativeTime_dd":"%d روز","momentjs_relativeTime_M":"یک ماه","momentjs_relativeTime_MM":"%d ماه","momentjs_relativeTime_y":"یک سال","momentjs_relativeTime_yy":"%d سال"}
};
});
define('languages/french',[],function() {
return {
'name': 'french',
'data': {"actionbar_print_selected_item":"Imprimer cette tâche","actionbar_print_$_selected_items_plural":"Imprimer ces $ tâches","actionbar_email_selected_item":"Envoyer cette tâche","actionbar_email_$_selected_items_plural":"Envoyer ces $ tâches","actionbar_sort_alphabetically":"Tri alphabétique","actionbar_sort_due_date":"Tri par date d'échéance","actionbar_sort_assignee":"Tri par assignation","api_error_account_already_exists":"Un compte existe déjà pour cette adresse email.","api_error_connection_error":"Ooops, il semblerait qu'un problème de connexion avec le serveur soit intervenu. Veuillez réessayer.","api_error_general_error":"Ooops, impossible de contacter le serveur pour le moment. Veuillez réessayer.","api_error_incorrect_login":"L'adresse email ou le mot de passe saisi est incorrect.","api_error_incorrect_password":"Le mot de passe saisi est incorrect.","api_error_service_down":"Une partie essentielle du WunderAPI est hors-ligne.","api_error_unknown":"Une erreur inattendue et imprévue vient de se produire.","api_error_validation_error_unable_to_signup":"Nous n'avons pas pu vous inscrire avec l'adresse email spécifiée.","api_error_not_a_beta_user":"Vous n'êtes pas membre de Wunderlist beta.","button_back":"Retour","button_cancel":"Annuler","button_confirm":"Confirmer","button_download":"Télécharger","button_change":"Modifier","button_choose":"Choisir","button_connect":"Connexion","button_connect_facebook":"Connexion avec Facebook","button_continue":"Continuer","button_delete":"Supprimer","button_disconnect":"Déconnexion","button_dismiss":"Ignorer","button_done":"OK","button_edit":"Modifier","button_get_started":"C'est parti","button_go_back":"Retour","button_go_back_sentence":"Retour.","button_learn_more":"En savoir plus","button_go_back_to_login":"Retour à la page d’accueil ","button_go_to_web_app":"Aller à l'application web","button_join_now":"Inscrivez-vous","button_log_in":"Connexion","button_log_in_with_$":"Connexion avec $","button_log_out":"Déconnexion","button_log_in_facebook":"Connexion avec Facebook","button_next":"Suivant","button_no":"Non","button_no_due_date":"Pas d'échéance","button_ok":"OK","button_remove_due_date":"Supprimer la date d'échéance","button_remove_reminder":"Supprimer le rappel","button_email_list":"Envoyer la liste par email","button_print_list":"Imprimer la liste","button_reset_password":"Réinitialiser le mot de passe","button_retry":"Réessayer","button_save":"Enregistrer","button_send":"Envoyer","button_sign_up":"S'inscrire","button_sign_up_with_$":"S'inscrire avec $","button_sign_up_for_free":"S'inscrire gratuitement","button_sign_up_facebook":"S'inscrire avec Facebook","button_support_center":"Support","button_subscribe":"Génial, avec plaisir !","button_try_again":"Réessayer","button_try_wunderlist":"Essayer Wunderlist","button_yes":"Oui","coachmark_all_list_empty":"Vous n'avez pas encore ajouté de tâches. Essayez d'en ajouter quelques unes.","coachmark_completed_list_empty":"Vous n'avez pas encore accompli de tâches. Essayez d'en achever quelques-unes dans vos listes !","coachmark_no_search_results":"Aucun résultat","coachmark_sharing_invite_friends_heading":"Inviter vos amis","coachmark_sharing_invite_friends_text_$":"Vos amis pourront créer, supprimer et achever les tâches de la liste \"$\".","coachmark_sharing_recent_no_contacts_heading":"Pas de contacts récents","coachmark_sharing_recent_no_contacts_text_$":"Entrez une adresse email ou cherchez dans vos contacts. Une fois ajoutés, vos amis pourront créer, supprimer ou achever les tâches de la liste \"$\".","coachmark_assigned_to_me_list_empty":"Aucune tâche ne vous est assigné(e)","coachmark_conversations_list_empty":"Il n'y a actuellement aucune conversation .","coachmark_starred_list_empty":"Vous n'avez aucune tâche prioritaire","coachmark_today_list_empty":"Félicitations ! Vous n'avez aucun tâche en retard ou à faire aujourd'hui","coachmark_week_list_empty":"En vacances ? Vous n'avez aucun tâche en attente pour les sept prochains jours.","error_list_not_found":"La liste que vous cherchez est introuvable","error_share_not_created":"Une erreur est survenue lors du partage de la liste. Merci d'essayer à nouveau.","error_task_not_found":"La tâche que vous cherchez est introuvable","error_page_not_found":"Page non trouvée","error_title_not_found":"Non trouvé","label_are_you_sure_permanently_delete_item":"Êtes-vous sûr de vouloir définitivement supprimer cette tâche ?","label_are_you_sure_permanently_delete_item_plural":"Êtes-vous sûr de vouloir définitivement supprimer ces tâches ?","label_activity_center":"Centre d'activités","label_are_you_sure_permanently_delete_$_list":"Êtes-vous sûr de vouloir définitivement supprimer la liste \"$\" ?","label_are_you_sure_permanently_delete_$_task":"Êtes-vous sûr de vouloir définitivement supprimer la tâche \"$\" ?","label_are_you_sure_permanently_delete_task_plural":"Êtes-vous certain de vouloir supprimer définitivement ces tâches?","label_are_you_sure_permanently_delete_$_subtask":"Êtes-vous sûr de vouloir définitivement supprimer la sous-tâche \"$\" ?","label_cant_undo":"Vous ne pourrez pas annuler cette action.","label_completed_tasks_heading":"1 tâche accomplie","label_$_completed_tasks_heading_plural":"$ tâches accomplies","label_connecting":"Connexion...","label_minisite_description_line_1":"Gardez un suivi de tout ce que vous souhaitez faire.","label_minisite_description_line_2":"Wunderlist est disponible gratuitement sur toutes les grandes plateformes.","label_minisite_share_deleted_or_no_access":"Il semblerait que l'objet recherché ait été supprimé, ou que son accès vous soit désormais refusé.","label_minisite_contact_sender_for_info":"Pour plus d'informationsn veuillez contacter la personne qui a partagé cette liste","label_minisite_$_invited_you_to_the_list_$":"$1 vous invite dans la liste $2","label_minisite_empty_list_$":"Cette liste est pour l'instant vide, aidez à la commencer. Appuyez simplement sur le bouton S'incrire ci-dessus et commencez à ajouter des tâches dans la liste $.","label_day_0":"DIM","label_day_1":"LUN","label_day_2":"MAR","label_day_3":"MER","label_day_4":"JEU","label_day_5":"VEN","label_day_6":"SAM","label_delete_file":"Supprimer le fichier","label_delete_list":"Supprimer la liste","label_delete_task":"Supprimer la tâche","label_delete_task_plural":"Supprimer les tâches","label_delete_subtask":"Supprimer la sous-tâche","label_due_$":"Échéance $","label_due_on":"Échéance le $","label_due_date":"Échéance","label_email":"Adresse email","label_every":"chaque","label_loading":"Chargement...","label_logging_out":"Déconnexion...","label_name":"Nom","label_newsletter":"Bulletin d'informations Wunderlist ","label_none":"Aucun","label_notification":"Notification","label_oops":"Oups !","label_or":"ou","label_password":"Mot de passe","label_relative_date_today":"Aujourd'hui","label_relative_date_today_with_date":"Aujourd'hui, $","label_relative_date_today_mid_sentence":"aujourd'hui","label_relative_date_tomorrow":"Demain","label_relative_date_tomorrow_with_date":"Demain, $","label_relative_date_tomorrow_mid_sentence":"Demain","label_relative_date_yesterday":"Hier","label_remind_me_at_$":"Rappel à $","label_reminder":"Rappel","label_reminder_message_$":"Un petit rappel amical : $","label_repeat_every_day":"Répéter chaque jour","label_repeat_every_week":"Répéter chaque semaine","label_repeat_every_month":"Répéter chaque mois","label_repeat_every_year":"Répéter chaque année","label_repeat_custom":"Personnaliser...","label_repeat_day":"Chaque jour","label_repeat_day_$_plural":"Tous les $ jours","label_repeat_month":"Chaque mois","label_repeat_month_$_plural":"Tous les $ mois","label_repeat_week":"Chaque semaine","label_repeat_week_$_plural":"Toutes les $ semaines","label_repeat_never":"Ne pas répéter","label_repeat_year":"Chaque année","label_repeat_year_$_plural":"Tous les $ ans","label_reset_password":"Réinitialiser le mot de passe","label_rights_reserved":"Tous droits réservés","label_still_fetching_tasks":"Récupération des tâches en cours ...","label_sync":"Synchronisation","label_time_am":"AM","label_time_day_plural":"jours","label_time_week_plural":"semaines","label_time_month_plural":"mois","label_time_pm":"PM","label_time_year_plural":"ans","label_assign_to":"Assigner à","label_unassigned":"Non assignée","label_assign_me":"Moi","label_created_$":"Créée $","label_created_by_$":"Créée par $","label_created_on_$":"Créée le $","label_created_$_by_$":"Créée $1 par $2","label_created_by_$_on_$":"Créée par $1 le $2","label_completed_$":"Accomplie $","label_completed_on_$":"Accomplie le $","label_completed_$_by_$":"Accomplie $1 par $2","label_completed_by_$_on_$":"Accomplie par $1 le $2","login_add_photo_hint":"Personnalisez votre compte Wunderlist en téléchargeant votre photo.","login_already_have_account":"Vous avez déjà un compte ?","login_email_not_valid":"Veuillez saisir une adresse email valide.","login_empty_name":"Veuillez saisir votre nom d'utilisateur.","login_empty_password":"Veuillez saisir un mot de passe.","login_password_not_valid":"Veuillez saisir un mot de passe valide.","login_empty_email":"Veuillez entrer une adresse email.","login_enter_name":"Qui êtes-vous ?","login_enter_password":"Vous avez bientôt terminé","login_enter_password_hint":"Choisissez un mot de passe pour terminer la configuration de votre compte Wunderlist.","login_forgot_password":"Mot de passe oublié","login_forgot_password_heading":"Un oubli ?","login_forgot_password_text":"Entrez l'adresse email utilisée lors de votre inscription, et nous vous enverrons un lien de réinitialisation.","login_no_account_yet":"Pas encore de compte ?","login_password_changed":"Mot de passe mis à jour","login_password_not_match":"Les mots de passe saisis ne correspondent pas.","login_password_reset_email_has_been_sent":"Veuillez consulter vos emails pour y lire la suite des instructions.","login_reset_password_heading":"Il est temps de créer votre nouveau mot de passe.","login_reset_password_success":"Appuyez sur sur le bouton ci-dessous et reconnectez-vous à votre compte Wunderlist.","login_reset_password_success_heading":"Hourra ! Votre nouveau mot de passe à été changé avec succès.","login_password_too_short":"Un mot de passe doit contenir au moins 5 caractères.","login_sign_up":"S'inscrire","login_want_to_try_again":"Voulez-vous réessayer ?","login_accept_terms":"En vous inscrivant vous acceptez nos $1 et $2. ","logout_timeout_title":"Erreur de synchronisation","logout_timeout_text":"Nous n'avons pas pu synchroniser vos données. Voulez-vous réessayer ou vous déconnecter ?","mobile_tutorial_welcome_to":"Bienvenue sur","mobile_tutorial_wunderlist_subtitle":"Votregestionnaire de listes simple et superbe ","notifications_desktop_enable_heading":"Activer les notifications ?","notifications_no_notifications":"Aucune activité ","notifications_no_notifications_message":"Les invitations à partager des listes et toutes les autres activités apparaissent ici.","notifications_event_accept":"Accepter","notifications_event_accepted":"Acceptée","web_upgrade_ie9_not_supported":"Wunderlist ne fonctionne pas avec Internet Explorer 9. Veuillez vous mettre à jour vers $ ou $ pour une meilleure expérience.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Il semblerait que vous utilisiez un appareil à écran tactile. Désirez-vous activer l'interface optimisée pour tactile ? Vous pourrez toujours modifier ce paramètre dans les préférences de votre compte.","web_setting_enable_touch_for_$":"Activer Touch pour : $","web_settings_text_refresh_may_be_required":"Rafraîchissez la page si nécessaire","rate_label":"Noter Wunderlist","rate_app_heading":"Laisser une note et un avis","rate_app_message_web_chrome":"Merci d'utiliser Wunderlist. Nous aimerions savoir ce que vous en pensez ! N'hésitez pas à noter Wunderlist et à nous donner votre avis sur le Chrome Web Store ★★★★★","rate_app_button_later":"Plus tard","rate_app_button_no":"Non, merci","rate_app_button_yes":"Noter Wunderlist","placeholder_add_due_today_to_inbox":"Ajouter une tâche à accomplir aujourd'hui à “Inbox”...","placeholder_add_list":" Ajouter une liste...","placeholder_add_subtask":"Ajouter une sous-tâche","placeholder_add_starred_to_inbox":"Ajouter une tâche prioritaire à “Boîte de réception”...","placeholder_add_task_to_$":"Ajouter une tâche à \"$\"...","placeholder_add_to_inbox":"Ajouter une tâche à “Inbox”","placeholder_new_list":"Nouvelle liste","placeholder_remind_me":"Me rappeler","placeholder_search":"Rechercher...","placeholder_sharing_search":"Nom ou adresse email","placeholder_set_due_date":"Définir la date d'échéance","browser_outdated_heading":"Oups, il semble que votre navigateur n'est pas à jour.","browser_outdated_update":"Prière de mettre à jour votre navigateur","browser_outdated_explanation":"Wunderlist a été développé en utilisant les dernières et meilleures technologies disponibles. Afin d'utiliser Wunderlist, merci donc de télécharger la version la plus récente de votre navigateur préféré.","prenamed_list_movies":"Films à regarder","prenamed_list_private":"Privé","prenamed_list_shopping":"Courses","prenamed_list_wishlist":"Cadeaux","prenamed_list_work":"Travail","prenamed_list_read_later":"Lire plus tard","settings_account_change_email":"Modifier l'email...","settings_account_change_password":"Modifier le mot de passe...","settings_account_delete_confirmation":"Taper \"Je suis sûr\"","settings_account_delete_confirmation_text":"Je suis sûr","settings_account_drop_image":"Déposer l'image ici","settings_account_connect_facebook_account":"Connecter votre compte Wunderlist avec Facebook permet de rendre le partage de listes avec vos amis plus simple, rapide et facile.","settings_general_12_hour":"12 heures","settings_general_24_hour":"24 heures","settings_general_confirm_deletion":"Confirmer avant d'effacer une tâche","settings_general_create_new_tasks":"Ajouter de nouvelles tâches","settings_general_date_format":"Format de date","settings_general_language":"Langue","settings_general_start_of_week":"Début de la semaine","settings_general_start_of_week_sunday":"Dimanche","settings_general_start_of_week_saturday":"Samedi","settings_general_start_of_week_monday":"Lundi","settings_general_sound_task_completion":"Alertes sonores d'accomplissement","settings_general_sound_new_notifications":"Alertes sonores de notification","settings_general_print_done_tasks":"Imprimer les tâches accomplies","settings_general_tasks_bottom":"En bas de la liste","settings_general_tasks_top":"En haut de la liste","settings_general_time_format":"Format horaire","settings_heading_team":"Entreprises","settings_heading_about":"À propos","settings_heading_account":"Compte","settings_heading_general":"Général","settings_heading_notification":"Notifications","settings_heading_shortcuts":"Raccourcis","settings_heading_sidebar":"Barre latérale","settings_imprint":"Mentions légales","settings_visit_website":"Nous rendre visite","settings_get_help":"Aide","settings_notifications_notify_me_of_important_events_mobile":"Tenez-moi informé des événements importants :","settings_notifications_notify_me_on_text":"Nous vous informerons de certains évènements, comme lorsque quelqu'un accepte l'invitation à une liste partagée, ou bien ajoute ou termine une tâche dans l'une de vos listes partagées.","settings_sidebar_smart_lists_title":"Afficher ces listes intelligentes dans la barre latérale:","settings_sidebar_smart_lists_auto":"Auto","settings_sidebar_smart_lists_hidden":"Masqué","settings_sidebar_smart_lists_visible":"Visible","settings_sync_full":"Synchroniser maintenant","settings_account_account_backup":"Sauvegarde du compte","settings_account_restore_backup":"Import des données sauvegardées","settings_account_backup_description":"Les données de sauvegarde contiennent toutes vos listes, tâches, sous-tâches, notes et rappels. Merci de noter que cela n'inclut pas les listes partagées avec vous, les fichiers, les commentaires, les contenus partagés, ni les paramètres de l'application.","settings_account_data_is_being_processed":"C'est parti ! La sauvegarde de vos données est en cours. Nous vous enverrons un mail quand celle-ci sera terminée.","settings_account_change_password_error":"Echec de la mise à jour de votre mot de passe. Veuillez réessayer.","settings_account_click_to_download_backup":"Cliquez pour télécharger","settings_account_create_backup":"Créer une sauvegarde","settings_account_current_password":"Mot de passe actuel","settings_account_delete_account":"Supprimer votre compte","settings_account_delete_account_confirm":"Désirez-vous vraiment supprimer votre compte ?","settings_account_delete_account_confirm_text":"Supprimer votre compte supprimera toutes vos listes et tâches de façon permanente et définitive.","settings_account_fetching_data":"Récupération des données...","settings_account_new_password":"Nouveau mot de passe","settings_account_repeat_new_password":"Confirmer le nouveau mot de passe","settings_account_right_click_and_save_as":"Faites un clic-droit et sauvegardez","settings_third_party_libraries":"Licences","settings_background_credits":"Crédits pour les images de fond","settings_notifications_email_enabled":"Notifications par email","settings_notifications_desktop_enabled":"Notifications par le système","settings_notifications_push_enabled":"Notifications push","settings_privacy_policy":"Politique de confidentialité","settings_shortcuts_arrow_keys":"Touches fléchées","settings_shortcuts_delete_item":"Supprimer les listes et tâches sélectionnées","settings_shortcuts_mark_done":"Marquer les tâches sélectionnées comme 'Accomplies'","settings_shortcuts_mark_starred":"Marquer les tâches sélectionnées comme 'Prioritaires'","settings_shortcuts_new_list":"Ajouter une nouvelle liste","settings_shortcuts_new_task":"Ajouter une nouvelle tâche","settings_shortcuts_open_all_smart_list":"Ouvrir la liste intelligente 'Tout'","settings_shortcuts_open_assigned_smart_list":"Ouvrir la liste intelligente 'Assigné à vous'","settings_shortcuts_open_conversations_smart_list":"Ouvrir la liste intelligente 'Conversations'","settings_shortcuts_open_done_smart_list":"Ouvrir la liste intelligente 'Terminé\"'","settings_shortcuts_open_inbox":"Ouvrir la boîte de réception","settings_shortcuts_open_preferences":"Ouvrir les préférences","settings_shortcuts_open_search":"Lancer une recherche","settings_shortcuts_open_starred_smart_list":"Ouvrir la liste intelligente 'Prioritaire'","settings_shortcuts_open_today_smart_list":"Ouvrir la liste intelligente 'Aujourd'hui'","settings_shortcuts_open_week_smart_list":"Ouvrir la liste intelligente 'Semaine'","settings_shortcuts_reset":"éinitialiser aux valeurs par défaut","settings_shortcuts_select_all_tasks":"Sélectionner toutes les tâches","settings_shortcuts_show_more":"Afficher plus de raccourcis","settings_shortcuts_hide":"Masquer","settings_shortcuts_show_notifications":"Afficher le Centre d'activités","settings_shortcuts_step_through_list":"Se déplacer dans les listes","settings_shortcuts_step_through_task":"Se déplacer dans les tâches","settings_terms_of_use":"Conditions d'utilisation","settings_account_header_free":"Gratuit","settings_account_header_unregistered":"S'inscrire","settings_account_header_account_$":"Compte $","settings_account_pro_description":"Ajouter des commentaires ou des fichiers à vos tâches et les assigner à vos collègues. Le travail en équipe n'a jamais été aussi facile !","settings_account_register_wunderlist_description":"Inscrivez vous sur Wunderlist pour synchroniser vos listes depuis tous vos appareils.","settings_manage_subscription_button":"Gérer l'abonnement","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Yay, vous êtes un $ !","settings_account_header_pro_description":"Wunderlist Pro est la meilleure solution pour mener à terme vos projets. Invitez vos amis et collègues pour vous aider dans vos réalisations et faire de grandes choses !","settings_upgrade_to_pro_label":"Mettre à jour en $","settings_label_pro_account":"Compte Pro","settings_label_purchased_from_$":"Acheté à partir de: $","settings_label_purchased_from_$_by_$":"Acheté depuis $1 par : $2","settings_label_expires_in_$":"Expire dans $","setting_label_next_billing_date":"Prochaine date de facturation :","setting_label_cancel_subscription":"Annuler l'abonnement","setting_heading_cancel_subscription":"Souhaitez-vous vraiment annuler votre abonnement Wunderlist Pro ?","setting_description_cancel_subscription":"Vous aurez toujours accès à vos données, mais une fois que votre abonnement aura expiré, il ne vous sera possible de n'utiliser que les fonctionnalités de base de Wunderlist.","setting_label_cancel_subscription_success":"Votre abonnement a été annulé avec succès","settings_label_invoices":"Factures","settings_label_become_a_pro":"Devenir un Pro","settings_payment_info_expires_$_relative":"Expire $","settings_payment_info_expires_$_absolute":"Expire dans $1 jours : $2","settings_manage_subscription_error":"Désolé! Une erreur est survenue en essayant d'accéder à votre abonnement.","group_billing_packages_title":"Prix pour chaque entreprise","group_billing_packages_text":"Wunderlist pour les entreprises vous offre toutes les fonctionnalités dont vous avez besoin pour travailler de façon plus intelligente pour un prix abordable.  Choisissez simplement l'organisation qui convient le mieux à votre entreprise.","group_billing_plan_table_team_size":"Taille de l'équipe","group_billing_plan_table_price":"Prix","group_billing_plan_table_package_name_$":"$ membres","group_billing_buy_button_label":"Acheter","group_billing_$_off":"$ de réduction","group_billing_larger_team_$":"Vous avez une équipe plus importante ? $","group_billing_contact_us":"Contactez-nous !","group_billing_downgrade_error_$_$":"Afin de pouvoir passer à l'offre $1 pour plusieurs membres, il vous faut retirer $2 équipier(s) de ce compte.","group_billing_manage_team":"Cliquez ici pour gérer votre équipe.","group_billing_button_label_manage":"Gérer","group_billing_team_plan_title":"Votre offre Wunderlist Pro","group_billing_team_plan_text":"Wunderlist Pro évolue avec votre équipe ! Ajouter des membres est extrêmement simple : entrez juste leurs adresses email ci-dessous. C'est aussi simple que ça, qu'ils utilisent déjà Wunderlist ou non.","group_billing_upgrade_button_label":"Changer d'offre","group_billing_upgrade_plan_button_label":"Surclasser","group_billing_Downgrade_plan_button_label":"Déclasser","group_billing_view_plans_button_label":"Voir les offres","group_billing_manage_team_header":"Gérer les membres de l'équipe","group_billing_email_address_input_placeholder":"Adresse email","group_billing_manage_count_$_of_$":"$1 sur $2","group_billing_cancel_team_plan":"Annuler votre offre Wunderlist Pro","group_billing_search_coachmark":"Pour ajouter des membres, entrez simplement les adresses email de vos équipiers, et ils seront ajoutés à votre offre Pro.","group_billing_cancel_header":"Êtes-vous certain de vouloir annuler l'abonnement de votre équipe à Wunderlist Pro ?","group_billing_change_plan_confirmation_$_$_$":"Changer d'offre est simple. Si vous choisissez l'offre $1 pour plusieurs membres maintenant, vous serez facturé $2 au prochain cycle de facturation, débutant le $3. Êtes-vous sûr de vouloir procéder au changement maintenant ?","group_billing_cancel_text":"Votre abonnement Pro sera actif jusqu'à la fin du mois, sans nouvelle facturation. Tandis que vous gardez la capacité de consulter n'importe quelle fonction Pro, telle que les fichiers liés aux tâches, vous ne serez plus en mesure de lui apporter des modifications.","error_goup_billing_user_already_pro":"Il semblerait que cette personne possède déjà un compte Wunderlist Pro. Offrez un compte Pro à un autre de vos équipiers !","error_group_billing_wait_subscription_runs_out":"Il vous faudra attendre que votre abonnement actuel se termine avant de pouvoir le renouveler. Il expire le : $.","button_label_buy_wunderlist_for_business":"Allez à Wunderlist pour les entreprises","benefit_payment_service_unavailable":"Service de paiement indisponible","benefit_name":"Wunderlist Pro","benefit_header_$":"Devenir un $","benefit_header_description":"Le travail en équipe ou en entreprise n'a jamais été aussi simple ! Voici quatre très bonnes raisons de souscrire à Wunderlist Pro.","benefit_button_buy_monthly":"Mensuel","benefit_assign_tasks_title":"Assigner des tâches","benefit_assign_tasks_description":"Déléguez et effectuez facilement un suivi de l'état de vos tâches entre collègues et amis !","benefit_unlimited_subtasks_title":"Sous-tâches illimitées","benefit_unlimited_subtasks_decription":"Divisez vos tâches importantes en un nombre illimité de plus petites étapes, facilement réalisables.","benefit_comments_title":"Commentaires","benefit_comments_description":"Commencez une conversation avec les membres de votre équipe à partir de n'importe laquelle de vos tâches. Laissez des retours de l'information, posez une question ou ajoutez une info supplémentaire.","benefit_backgrounds_update_$":"Pour utiliser nos nouvelles images de fond, passez au $","benefit_additional_backgrounds_title":"Des nouvelles images de fond","benefit_additional_backgrounds_description":"Découvrez 8 nouvelles images de fond pour personnaliser Wunderlist comme il vous plaira !","benefit_files_title":"Fichiers","benefit_files_description":"Ajoutez des fichiers à vos tâches et partagez-les avec vos collègues.","benefit_coming_soon":"Bientôt disponible","benefit_assign_become_pro":"Assignez des tâches à vos collègues avec Wunderlist","benefit_label_accept_terms":"En souscrivant à un abonnement Wunderlist Pro, vous acceptez les $1 et $2.","benefit_label_need_more_subtasks":"Besoin de plus de sous-tâches ?","sharing_connect_facebook_sharing":"Connectez votre compte Wunderlist à votre Compte Facebook pour inviter facilement vos amis.","sharing_facebook_apprequest_message_$user_$list":"“$1” souhaiterait partager la liste “$2” avec vous","sharing_invite":"Inviter des personnes","sharing_invite_friends":"Inviter des amis","sharing_inviting_requires_account":"Inscrivez-vous pour inviter vos amis et collègues à vos listes.","sharing_leave_action":"Êtes-vous sûr de vouloir quitter cette liste ?","sharing_leave_button":"Quitter la liste partagée","sharing_list_members":"Membres de la liste","sharing_list_owner":"Propriétaire","sharing_list_pending_member":"En attente","sharing_tab_recents":"Récent","sharing_shared_with_you_by":"Partagé avec vous par","smart_list_assigned_to_me":"Assigné à vous","smart_list_conversations":"Conversations","smart_list_all":"Tout","smart_list_completed":"Terminé","smart_list_inbox":"Boîte de réception","smart_list_starred":"Prioritaire","smart_list_today":"Aujourd'hui","smart_list_week":"Semaine","label_tell_friends":"Partager avec mes amis","social_sharing_heading":"Vous aimez Wunderlist ? Dites-le à vos amis !","social_sharing_dialog_headline":"Vous aimez Wunderlist ?","social_sharing_dialog_danke":"Merci !","social_sharing_button_later":"Plus tard","social_sharing_button_no_thanks":"Non, merci","social_sharing_button_facebook":"Partager","social_sharing_button_follow_us":"Suivez-nous !","social_sharing_button_like_us":"Aimez-nous !","social_sharing_heading_thanks":"Soyez sûr de nous suivre afin de ne manquer aucune nouveauté.","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"J'utilise Wunderlist, mon gestionnaire de listes simple et superbe . Accédez-y gratuitement dès maintenant sur www.wunderlist.com.","twitter_sharing_placeholder":"J'utilise @Wunderlist, mon  gestionnaire de listes simple et superbe. Accédez-y gratuitement dès maintenant sur www.wunderlist.com.","tutorial_welcome_notes_title":"Notes","tutorial_welcome_notes_text":"Les notes détachables vous permettent de travailler à l'intérieur ou en dehors de Wunderlist.","tutorial_welcome_notifications_title":"Centre d'activités","tutorial_welcome_notifications_text":"Personnalisez la façon dont vous voulez être tenu informé. Choisissez de recevoir les invitations et les mises à jour de vos listes partagées par email, par les notifications de votre système, ou de tout afficher dans le Centre d'activités.","tutorial_welcome_sharing_title":"Inviter des amis","tutorial_welcome_sharing_text":"Il est maintenant encore plus facile d'inviter vos amis et collègues à vous venir en aide.","tutorial_welcome_subtasks_title":"Rappels, tâches récurrentes et sous-tâches","tutorial_welcome_subtasks_text":"Wunderlist propose maintenant une toute nouvelle vue détaillée, qui vous permet d'ajouter facilement des tâches récurrentes, des rappels et des sous-tâches.","tutorial_welcome_user_title":"Tout sur vous !","tutorial_welcome_user_text":"Changez les préférences de votre compte, vérifiez l'état de la synchronisation et changez votre image de fond.","tutorial_welcome_newsletter_subscribe":"Me prévenir par email des mises à jour importantes et nouvelles fonctionnalités de Wunderlist ?","tutorial_feature_pro_title":"Fonctionnalité Wunderlist Pro","share_list_email_signature":"Envoyé grâce à Wunderlist - mon  gestionnaire de listes simple et superbe \\nGratuit, sur iPhone, iPad, Android, Mac, Windows et web !\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ tâches non synchronisées","userbar_$_unsynced_item_plural":"$ tâches non synchronisées","userbar_account_settings":"Préférences du compte","userbar_change_background":"Changer l'image de fond","userbar_last_synced_$":"Dernière synchronisation : $","userbar_no_internet_connection":"Hors-ligne","userbar_preferences":"Préférences","userbar_sync_in_progress":"Synchronisation en cours...","userbar_user_name_for_unregistered_mode":"S'inscrire pour synchroniser","whatsnew_title":"Nouveautés","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Commentaires","whatsnew_label_voice":"Dictée vocale","whatsnew_label_groupbilling":"Tarification par équipe","whatsnew_copy_comments":"Conserver toutes vos conservations sur vos tâches et leurs commentaires en un seul endroit dans Wunderlist Pro. Laissez des feedbacks, poser une question ou faire une analyse de vos tâches peut améliorer grandement la communication avec votre équipe.","whatsnew_copy_pro_accounts":"Ajouter des commentaires, assigner des tâches, ajouter des fichiers ou créer un nombre illimité de sous-tâches avec Wunderlist Pro pour une meilleure collaboration entre nous.","whatsnew_copy_voice":"Cliquez sur l'icône microphone afin de pouvoir dicter vos tâches ou alors enregistrer un mémo vocal et l'ajouter en tant que fichier.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Inscrivez vous pour tester Wunderlist Pro et ajouter un fichier.","label_add_new_file":"Ajouter un fichier...","file_uploaded_unsuccessfully":"Échec du transfert de $. Veuillez essayer à nouveau.","file_uploaded_failed":"Échec du transfert. Veuillez essayer à nouveau. ","file_uploaded_failed_deleted":"Le chargement de $ a échoué car le fichier a été supprimé de votre disque dur.","label_are_you_sure_permanently_delete_$_file":"Êtes-vous sûr de vouloir supprimer définitivement le fichier “$” de Wunderlist ?","upload_file_was_not_synced_yet":"Veuillez synchroniser","upload_file_not_synced_yet":"Non synchronisé","placeholder_add_comments":"Ajouter un commentaire...","placeholder_reply":"Répondre...","button_label_go_pro_to_comment":"Devenez Pro pour commenter","comment_request_failed":"Désolé, nous ne pouvons charger de commentaires. Merci de réessayer.","comment_load_earlier":"Voir plus de commentaires","coachmark_no_current_comments":"Encore aucun commentaire.\\nCommencez votre conversation ici.","coachmark_comments_not_available":"Désolé, nous ne pouvons charger les commentaires précédents. Merci de réessayer dans quelques instants.","notification_$_commented_on_$":"$1 a ajouté un commentaire dans $2","notification_$_and_$_commented_on_$":"$1 et $2 ont ajouté un commentaire dans $3","notification_$_and_$_others_commented_on_$":"$1 et $2 autres ont ajouté un commentaire dans $3","comments_requires_account":"Inscrivez vous pour tester Wunderlist Pro et ajoutez un commentaire.","non_pro_trial_free_limit_reached":"Vous avez atteint la limite de la version gratuite !","non_pro_trial_write_next_comment_$":"Vous pouvez ajouter un autre commentaire $.","non_pro_trial_upload_next_file_$":"Vous pouvez ajouter un autre fichier $ .","non_pro_trial_assign_next_to_do_$":"Vous pouvez assigner une autre tâche $ .","button_signup_or_login":"S'inscrire ou se connecter","button_it_is_completely_free":"C'est complètement gratuit","label_free_download_for_platforms":"Disponible gratuitement sur iPhone, iPad, Android, Windows et Mac","label_wunderlist_to_get_things_done":"Plus de 5 millions de personnes utilisent Wunderlist pour exécuter leurs tâches.","label_people_who_use_wunderlist":"Découvrez qui utilise déjà Wunderlist","label_wunderlist_uses":"Pour organiser votre travail, partager une liste de courses avec votre moitié ou simplement pour planifier votre journée, Wunderlist est le meilleur moyen de gérer des listes de tâches pour vous, votre équipe ou votre famille.","label_install_browser_extension":"Installez l'extension pour votre navigateur","label_install_chrome_browser_extension":"Installez l'extension de navigateur pour Chrome","label_newsletter_signup":"Inscrivez-vous pour recevoir nos bulletins d'information","label_know_upcoming_features":"Soyez parmi les premiers à connaître les nouvelles fonctionnalités","label_learn_more_about_wunderlist":"En savoir plus sur Wunderlist","label_learn_more":"En savoir plus...","label_your_email_address":"Votre adresse email","button_subscribe_to_newsletter":"S'abonner","button_sending_subscribe_to_newsletter":"Envoi...","iyf4_usermenu_label":"Accédez à Wunderlist Pro gratuitement","iyf4_notification_label":"Gagnez jusqu'à 12 mois gratuits de Wunderlist Pro en invitant vos amis !","iyf4_notification_button_label_var_a":"Lancer les invitations","iyf4_notification_button_label_var_b":"Inviter vos amis","iyf4_notification_button_label_var_c":"Accédez à Wunderlist Pro gratuitement","iyf4_notification_button_label_var_d":"Partagez Wunderlist Pro","iyf4_dialog_invite_headline_$":"Gagnez jusqu'à $ de Wunderlist Pro en invitant vos amis !","iyf4_dialog_invite_headline_incentive":"12 mois gratuits","iyf4_dialog_invite_incentive_$":"$ wunderlist, nous vous offrons à tous les deux 1 mois gratuit de Wunderlist Pro (dans la limite de 12 mois)","iyf4_dialog_invite_incentive_terms":"Pour chaque ami qui nous rejoint","iyf4_dialog_tweet":"J'aime organiser ma vie avec Wunderlist. Gagnez un mois gratuit de Wunderlist Pro ici :","iyf_notification_label":"Conseillez Wunderlist à vos amis et gagnez jusqu'à 12 mois d'un compte Pro gratuit !","iyf_notification_button_label":"Offre pro!","iyf_dialog_step1_headline":"Obtenez un compte Pro gratuitement","iyf_dialog_step1_subheadline":"En 3 étapes simples","iyf_dialog_step1_instruction1_headline":"Invitez vos amis","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter ou par email","iyf_dialog_step1_instruction2_headline":"Vos amis s'inscrivent","iyf_dialog_step1_instruction2_subheadline":"Attendez qu'ils s'inscrivent à Wunderlist","iyf_dialog_step1_instruction3_headline":"Amusez-vous bien avec votre compte Pro gratuit.","iyf_dialog_step1_instruction3_subheadline":"1 mois pour chaque ami qui accepte","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 mois pour $ amis qui acceptent","iyf_dialog_step1_next_button":"Lancer les invitations","iyf_dialog_step2_subheadline":"Obtenir votre compte Pro gratuit","iyf_dialog_step2_divider_label":"Partager ce lien","iyf_dialog_share_on_facebook":"Partager sur Facebook","iyf_dialog_post_on_twitter":"Tweeter sur Twitter","iyf_dialog_email_placeholder":"Saisir une adresse mail...","iyf_dialog_more_placeholder":"Ajouter un autre...","iyf_dialog_step3_headline":"Merci de partager","iyf_dialog_step3_subheadline":"Attendez que vos amis s'inscrivent","iyf_dialog_step3_success_headline":"Invitations envoyées avec succès","iyf_dialog_step3_success_subheadline":"Vous serez notifié dès que votre compte Pro sera prêt.","iyf_dialog_step3_invite_more":"Inviter plus de personnes","meta_title":"Wunderlist 2 : votre un  gestionnaire de listes simple et superbe","meta_description":"Plus de 5 millions de personnes utilisent Wunderlist pour gérer leurs tâches, les lister et noter leur réalisation. Wunderlist est le meilleur gestionnaire de tâches pour vous, votre équipe et votre famille.","meta_keywords":"6wunderkinder, productivité, collaboration, gestionnaire de tâches, gestion de tâches, à faire, liste, tâches, gtd, organiser, planifier, liste de courses, rappels, sous-tâches, listes intelligentes, liste de shopping, liste de films, listes partagées","enable_desktop_notifications_text":"Cliquez sur “Confirmer” puis “Autoriser” dans votre navigateur afin d'activer les notifications par le système.","notification_add_to_browser":"Gardez votre Wunderlist à portée de clic ! Ajoutez dès maintenant la Web app Wunderlist à votre navigateur.","notification_add_extension_to_browser":"Sauvegardez rapidement tous les contenus du web qui vous intéressent directement dans Wunderlist. Installez pour cela, dès maintenantl, l'extension Add to Wunderlist pour Chrome.","button_add_to_chrome":"Ajouter à Chrome","button_add_to_store_added":"Ajoutée","aria_activity_center_hint":"Centre d'activités. Tapez Echap. pour fermer.","aria_exit_search":"Sortir de la recherche","aria_search":"Recherche","aria_sort_list":"Trier la liste","aria_thank_you":"Nous espérons que nos fonctions d'accès ont bien marché pour vous. Merci de nous envoyer vos retours et suggestions à support@wunderlist.com à propos de notre implémentation de l'accessibilité. Merci d'avoir choisi Wunderlist.","aria_user_menu_hint":"Menu utilisateur. Tapez Echap. pour fermer.","aria_assign_to_$":"Assigner à $","momentjs_months":"Janvier_Février_Mars_Avril_Mai_Juin_Juillet_Août_Septembre_Octobre_Novembre_Décembre","momentjs_monthsShort":"Jan_Fev_Mar_Avr_Mai_Jun_Jul_Aoû_Sep_Oct_Nov_Dec","momentjs_weekdays":"Dimanche_Lundi_Mardi_Mercredi_Jeudi_Vendredi_Samedi","momentjs_weekdaysShort":"Dim_Lun_Mar_Mer_Jeu_Ven_Sam","momentjs_weekdaysMin":"Di_Lu_Ma_Me_Je_Ve_Sa","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Aujourd'hui à] LT","momentjs_calendar_nextDay":"[Demain à] LT","momentjs_calendar_nextWeek":"dddd [à] LT","momentjs_calendar_lastDay":"[Hier à] LT","momentjs_calendar_lastWeek":"[dernier] dddd [à] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"dans %s","momentjs_relativeTime_past":"il y a %s","momentjs_relativeTime_s":"quelques secondes","momentjs_relativeTime_m":"une minute","momentjs_relativeTime_mm":"%d minutes","momentjs_relativeTime_h":"une heure","momentjs_relativeTime_hh":"%d heures","momentjs_relativeTime_d":"un jour","momentjs_relativeTime_dd":"%d jours","momentjs_relativeTime_M":"un mois","momentjs_relativeTime_MM":"%d mois","momentjs_relativeTime_y":"un an","momentjs_relativeTime_yy":"%d ans"}
};
});
define('languages/greek',[],function() {
return {
'name': 'greek',
'data': {"actionbar_print_selected_item":"Εκτύπωση επιλεγμένου στοιχείου","actionbar_print_$_selected_items_plural":"Εκτύπωση $ Επιλεγμένων στοιχείων","actionbar_email_selected_item":"Αποστολή επιλεγμένου στοιχείου με Email","actionbar_email_$_selected_items_plural":"Αποστολή $  επιλεγμένων στοιχείων  με Email ","actionbar_sort_alphabetically":"Αλφαβητική ταξινόμηση","actionbar_sort_due_date":"Ταξινόμηση κατα ημερομηνίες λήξης","actionbar_sort_assignee":"Ταξινόμηση κατα Αναθέτη","api_error_account_already_exists":"Ενας λογαριασμός με αυτή την  διευθυνση email υπάρχει ήδη.","api_error_connection_error":"Ουπς! Πρόβλημα επικοινωνίας με τον διακομιστή. Παρακαλώ δοκιμάστε ξανά.","api_error_general_error":"Ουπς! Ο διακομιστής δεν είναι προσβάσιμος αυτή τη στιγμή. Παρακαλώ δοκιμάστε ξανά.","api_error_incorrect_login":"Η διεύθυνση email ή ο κωδικός που εισήχθησαν είναι λάθος","api_error_incorrect_password":"Ο κωδικός πρόσβασης  που εισαγάγατε  είναι λάθος","api_error_service_down":"Το WunderAPI δεν λειτουργει.","api_error_unknown":"Ένα αναπάντεχο και απρόσμενο σφάλμα συνέβη.","api_error_validation_error_unable_to_signup":"Δεν μπορέσαμε να σας εγγράψουμε  με τη συγκεκριμένη διεύθυνση ηλεκτρονικού ταχυδρομείου. ","api_error_not_a_beta_user":"Δεν είστε μέλος της δοκιμαστικής έκδοσης του Wunderlist.  ","button_back":"Πλήκτρο Πίσω","button_cancel":"Ακύρωση","button_confirm":"Επιβεβαίωση","button_download":"Λήψη","button_change":"Αλλαγή","button_choose":"Επιλογή","button_connect":"Σύνδεση","button_connect_facebook":"Σύνδεση μέσω  Facebook","button_continue":"Συνέχεια","button_delete":"Διαγραφή","button_disconnect":"Αποσύνδεση","button_dismiss":"Απόρριψη ","button_done":"Ολοκληρώθηκε","button_edit":"Επεξεργασία","button_get_started":"Ας ξεκινήσουμε","button_go_back":"Πίσω","button_go_back_sentence":"Πίσω","button_learn_more":"Μάθετε περισσότερα","button_go_back_to_login":"Πίσω στη σύνδεση","button_go_to_web_app":"Πλοήγηση στην Ιστοσελίδα","button_join_now":"Εγγραφείτε τώρα","button_log_in":"Σύνδεση","button_log_in_with_$":"Log In With $","button_log_out":"Αποσύνδεση","button_log_in_facebook":"Σύνδεση μέσω Facebook","button_next":"Επόμενο","button_no":"Οχι","button_no_due_date":"Χωρίς ημερομηνία λήξης ","button_ok":"Εντάξει","button_remove_due_date":"Μετακίνηση καταληκτικής ημερομηνϊας","button_remove_reminder":"Διαγραφή Υπενθύμισης","button_email_list":"Αποστολή Λίστας με Email","button_print_list":"Εκτύπωση Λίστας","button_reset_password":"Επαναδημιουργία Κωδικού Πρόσβασης ","button_retry":"Επανάληψη","button_save":"Αποθήκευση","button_send":"Αποστολή","button_sign_up":"Εγγραφή","button_sign_up_with_$":"Sign Up With $","button_sign_up_for_free":"Δωρεάν Εγγραφή","button_sign_up_facebook":"Εγγραφή μέσω Facebook","button_support_center":"Κέντρο Υποστήριξης","button_subscribe":"Φοβερό, Ναι παρακαλώ! ","button_try_again":"Δοκιμάστε Ξανά","button_try_wunderlist":"Δοκιμάστε το Wunderlist","button_yes":"Ναι","coachmark_all_list_empty":"Δεν έχετε προσθέσει στοιχεία ακόμη . Εμπρός, μπορείτε να  εισάγετε κάτι .","coachmark_completed_list_empty":"Δεν έχετε ολοκληρώσει στοιχεία ακόμα. Ελεγξτε κάποια στοιχεία από τις λίστες σας ! ","coachmark_no_search_results":"Δεν υπάρχουν αποτελέσματα αναζήτησης ","coachmark_sharing_invite_friends_heading":"Πρόσκληση Φίλων","coachmark_sharing_invite_friends_text_$":"Οι φίλοι σας θα είναι σε θέση να δημιουργήσουν , να αφαιρέσουν και να πάρουν αντίτυπα των στοιχείων της λίστας  “$”.","coachmark_sharing_recent_no_contacts_heading":"Δεν υπάρχουν πρόσφατες επαφές","coachmark_sharing_recent_no_contacts_text_$":"Πληκτρολογήστε μια διεύθυνση ηλεκτρονικού ταχυδρομείου ή αναζητείστε στις επαφές  σας. Μόλις προστεθεί, ο φίλος σας θα είναι σε θέση να δημιουργήσει, να αφαιρέσει και να παίρνει αντίτυπα των στοιχείων στη λίστα “$”.","coachmark_assigned_to_me_list_empty":"Δεν υπάρχει τίποτα που σας έχει ανατεθεί\\n","coachmark_conversations_list_empty":"Δεν υπάρχουν τρέχουσες συζητήσεις","coachmark_starred_list_empty":"Δεν υπάρχουν διακεκριμένα στοιχεία","coachmark_today_list_empty":"Συγχαρητήρια! Δεν έχετε τίποτα που να λήγει ή να έχει λήξει σήμερα ","coachmark_week_list_empty":"Σε διακοπές ; Δεν υπάρχουν στοιχεία  που να λήγουν στις επόμενες 7 ημέρες ","error_list_not_found":"Η λίστα που ψάχνετε δεν  βρέθηκε ","error_share_not_created":"Εμφάνιση σφάλματος κατά την προσπάθεια για μοίρασμα της λίστας σας. Παρακαλώ δοκιμάστε ξανά. ","error_task_not_found":"Το στοιχείο που ψάχνετε δεν μπορεί να βρεθεί","error_page_not_found":"Η σελίδα δεν βρέθηκε","error_title_not_found":"Δεν βρέθηκε","label_are_you_sure_permanently_delete_item":"Είστε σίγουροι ότι θέλετε να διαγράψετε οριστικά αυτο το στοιχείο;","label_are_you_sure_permanently_delete_item_plural":"Είστε σίγουροι ότι θέλετε να διαγράψετε οριστικά αυτά τα στοιχεία;","label_activity_center":"Κέντρο Δραστηριότητας ","label_are_you_sure_permanently_delete_$_list":"Είστε σίγουροι ότι θέλετε να διαγράψετε οριστικά τη λίστα \"% @\"?","label_are_you_sure_permanently_delete_$_task":"Είστε σίγουροι ότι θέλετε να διαγράψετε οριστικά το στοιχείο “$”?","label_are_you_sure_permanently_delete_task_plural":"Είστε σίγουροι ότι θέλετε να διαγράψετε οριστικά αυτα τα στοιχεια;","label_are_you_sure_permanently_delete_$_subtask":"Είστε σίγουροι ότι θέλετε να διαγράψετε οριστικά την υποεργασία “$”?","label_cant_undo":"Η ενέργεια αυτή δεν αναιρείται . ","label_completed_tasks_heading":"1 ολοκληρωμένο στοιχείο","label_$_completed_tasks_heading_plural":"$ Ολοκληρωμένα στοιχεία","label_connecting":"Σύνδεση σε εξέλιξη ...","label_minisite_description_line_1":"Καταγράψτε και παρακολουθείστε όλα όσα  θέλετε να κάνετε.","label_minisite_description_line_2":"Το Wunderlist είναι διαθέσιμο δωρεάν σε όλες τις κύριες πλατφόρμες. ","label_minisite_share_deleted_or_no_access":"Φαίνεται ότι αυτό έχει διαγραφεί ή δεν έχετε πρόσβαση πια.\\n","label_minisite_contact_sender_for_info":"Παρακαλούμε επικοινωνήστε με το άτομο που μοιράστηκε αυτή τη λίστα μαζί σας για περισσότερες πληροφορίες. ","label_minisite_$_invited_you_to_the_list_$":"$1 σας προσκάλεσε στην λίστα $2","label_minisite_empty_list_$":"Αυτή η λίστα είναι άδεια, βοηθήστε τους λοιπόν να  ξεκινήσουν. Απλά πατήστε το κουμπί εγγραφής παραπάνω , και να αρχίστε την προσθήκη στοιχείων στη λίστα $.","label_day_0":"ΚΥΡ","label_day_1":"ΔΕΥ","label_day_2":"ΤΡΙ","label_day_3":"ΤΕΤ","label_day_4":"ΠΕΜ","label_day_5":"ΠΑΡ","label_day_6":"ΣΑΒ","label_delete_file":"Διαγραφή Αρχείου","label_delete_list":"Διαγραφή Λίστας","label_delete_task":"Διαγραφή Στοιχείου","label_delete_task_plural":"Διαγραφή Στοιχείων","label_delete_subtask":"Διαγραφή Υποεργασίας","label_due_$":"Καταληκτική ημερομηνία  $","label_due_on":"Λήξη την  $","label_due_date":"Καταληκτική Ημερομηνία ","label_email":"Email","label_every":"κάθε","label_loading":"Φόρτωση  ...","label_logging_out":"Αποσύνδεση...","label_name":"Ονομα","label_newsletter":"Wunderlist Ενημερωτικό δελτίο ","label_none":"Κανένα","label_notification":"Κοινοποίηση","label_oops":"Ουπς!","label_or":"ή","label_password":"Κωδικός Πρόσβασης","label_relative_date_today":"Σήμερα","label_relative_date_today_with_date":"Σήμερα, $","label_relative_date_today_mid_sentence":"σήμερα","label_relative_date_tomorrow":"Αύριο","label_relative_date_tomorrow_with_date":"Αύριο, $","label_relative_date_tomorrow_mid_sentence":"αύριο","label_relative_date_yesterday":"Χθες","label_remind_me_at_$":"Υπενθύμιση στις $","label_reminder":"Υπενθύμιση","label_reminder_message_$":"Φιλική υπενθύμιση : $","label_repeat_every_day":"Να επαναλαμβάνεται κάθε μέρα","label_repeat_every_week":"Να επαναλαμβάνεται κάθε εβδομάδα","label_repeat_every_month":"Να επαναλαμβάνεται κάθε μήνα","label_repeat_every_year":"Να επαναλαμβάνεται κάθε χρόνο","label_repeat_custom":"Προσαρμογή.","label_repeat_day":"Καθημερινά","label_repeat_day_$_plural":"Κάθε $ ημέρες","label_repeat_month":"Κάθε μήνα","label_repeat_month_$_plural":"Κάθε $ μήνες","label_repeat_week":"Κάθε εβδομάδα","label_repeat_week_$_plural":"Κάθε $ εβδομάδες","label_repeat_never":"Να μην επαναλαμβάνεται","label_repeat_year":"Κάθε χρόνο","label_repeat_year_$_plural":"Κάθε $ χρόνια","label_reset_password":"Επαναδημιουργία Κωδικού Πρόσβασης ","label_rights_reserved":"Με την επιφύλαξη παντός δικαιώματος ","label_still_fetching_tasks":"Ανάκτηση εργασιών σε εξέλιξη ...","label_sync":"Συγχρονισμός","label_time_am":"πμ","label_time_day_plural":"ημέρες","label_time_week_plural":"εβδομάδες","label_time_month_plural":"μήνες","label_time_pm":"μμ","label_time_year_plural":"έτη","label_assign_to":"Ανάθεση σε","label_unassigned":"Καμμια ανάθεση","label_assign_me":"Εγώ","label_created_$":"Δημιουργήθηκε $","label_created_by_$":"Δημιουργήθηκε από $","label_created_on_$":"Δημιουργήθηκε   $","label_created_$_by_$":"Δημιουργήθηκε  $1 από $2","label_created_by_$_on_$":"Δημιουργήθηκε  από $1 σε $2","label_completed_$":"Ολοκληρώθηκε $","label_completed_on_$":"Ολοκληρώθηκε στις $","label_completed_$_by_$":"Ολοκληρώθηκε $1 από $2","label_completed_by_$_on_$":"Ολοκληρώθηκε από $1 στις $2","login_add_photo_hint":"Πρωσοποποιηστε τον λογαριασμο σας ανεβάζοντας μια φωτογραφία σας.","login_already_have_account":"Εχετε ήδη λογαριασμό;","login_email_not_valid":"Παρακαλούμε εισάγετε μια έγκυρη διευθυνση email .","login_empty_name":"Παρακαλούμε εισάγετε το όνομά σας.","login_empty_password":"Παρακαλούμε εισάγετε ένα κωδικό πρόσβασης .","login_password_not_valid":"Παρακαλούμε εισάγετε ένα έγκυρο κωδικό.","login_empty_email":"Παρακαλώ εισάγετε μια διεύθυνση email ","login_enter_name":"Ποιος είστε ;","login_enter_password":"Σχεδόν τελειώσατε ","login_enter_password_hint":"Επιλέξτε έναν κωδικό πρόσβασης για να ολοκληρώσετε την ρύθμιση του Wunderlist λογαριασμού σας.","login_forgot_password":"Ξέχασα τον κωδικό","login_forgot_password_heading":"Ξεχάσατε κατι ;","login_forgot_password_text":"Εισάγετε την email διεύθυνση με την οποία εχετε κάνει την  εγγραφή σας  και θα σας αποστείλουμε ένα λινκ για να δημιουργήσετε  ενα καινούργιο κωδικό πρόσβασης.","login_no_account_yet":"Δεν έχετε ένα λογαριασμό;","login_password_changed":"Ο κωδικός πρόσβασης  ανανεώθηκε","login_password_not_match":"Οι κωδικοί πρόσβασης  που εισάγατε δεν  είναι οι ίδιοι.","login_password_reset_email_has_been_sent":"Παρακαλώ ελέγξτε το email σας για οδηγίες επαναφοράς του κωδικού πρόσβασης.","login_reset_password_heading":"Είναι ώρα να δημιουργήσετε το  νέο κωδικό προσβασής σας.","login_reset_password_success":"Απλά πατήστε το κουμπί παρακάτω και είστε έτοιμοι να συνδεθείτε ξανά στο Wunderlist σας. ","login_reset_password_success_heading":"Ζήτω! Ο κωδικός πρόσβασή σας άλλαξε  με επιτυχία.\\n","login_password_too_short":"Ενας κωδικός πρόσβασης πρέπει να έχει τουλάχιστον 5 χαρακτήρες.","login_sign_up":"Εγγραφή","login_want_to_try_again":"Θέλετε να δοκιμάσετε ξανά;","login_accept_terms":"Με την εγγραφή σας αποδέχεστε την   $1 και  $2.","logout_timeout_title":"Σφάλμα κατά τον συγχρονισμό","logout_timeout_text":"Ο συγχρονισμός των δεδομένων σας απέτυχε. Θελετε να επαναλάβετε ή να αποσυνδεθείτε;","mobile_tutorial_welcome_to":"Καλώς ήρθατε στο","mobile_tutorial_wunderlist_subtitle":"η όμορφη και απλή λίστα εργασιών σας","notifications_desktop_enable_heading":"Ενεργοποίηση κοινοποιήσεων στην Επιφάνεια Εργασίας;","notifications_no_notifications":"Καμμια Δραστηριότητα","notifications_no_notifications_message":"Προσκλήσεις σε κοινές λίστες και άλλες δραστηριότητες εμφανίζονται εδώ. ","notifications_event_accept":"Αποδοχή","notifications_event_accepted":"Η ενέργεια έγινε αποδεκτή","web_upgrade_ie9_not_supported":"Το Wunderlist δεν υποστηρίζει τον Internet Explorer 9. Παρακαλώ αναβαθμίστε σε $  ή  $ για καλύτερη εμπειρία.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Φαίνεται πως χρησιμοποιείτε μια συσκευή με οθόνη αφής. Θα θέλατε να ενεργοποιήσετε μια εξειδικευμένη για αυτή τη συσκευή  διεπαφή; Σε κάθε περίπτωση μπορείτε μετά να αλλάξετε την απόφασή σας  πηγαίνοντας στις ρυθμίσεις του λογαριασμού σας.","web_setting_enable_touch_for_$":"Ενεργοποίηση Αφής  για : $","web_settings_text_refresh_may_be_required":"Μπορεί να χρειστεί να ανανεώσετε","rate_label":"Βαθμολόγηση του Wunderlist","rate_app_heading":"Αξιολογείστε και βαθμολογείστε το Wunderlist ","rate_app_message_web_chrome":"Σας ευχαριστούμε που χρησιμοποιείτε το Wunderlist. Θα θέλαμε να ακούσουμε τη γνώμη σας! Παρακαλούμε πείτε μας την εκτίμησή σας για το Wunderlist στο  Chrome Web Store ★★★★★","rate_app_button_later":"Αργότερα","rate_app_button_no":"Όχι ευχαριστώ","rate_app_button_yes":"Βαθμολόγηση του Wunderlist τώρα","placeholder_add_due_today_to_inbox":"Προσθέστε ένα στοιχείο που λήγει σήμερα στο \"Εισερχόμενα\" .. ","placeholder_add_list":"Προσθήκη νέας λίστας...","placeholder_add_subtask":"Προσθήκη υποεργασίας ","placeholder_add_starred_to_inbox":"Προσθέστε ένα διακεκριμένο στοιχείο στο \" Εισερχόμενα \" ...\\n","placeholder_add_task_to_$":"Προσθήκη στοιχείου σε “$”...","placeholder_add_to_inbox":"Προσθήκη στοιχείου στα “Εισερχόμενα μηνύματα”","placeholder_new_list":"Νεα Λίστα","placeholder_remind_me":"Υπενθύμισέ μου","placeholder_search":"Αναζήτηση...","placeholder_sharing_search":"Ονομα η διεύθυνση email ... ","placeholder_set_due_date":"Ορισε καταληκτική ημερομηνία ","browser_outdated_heading":"Χμ, φαινεται πως ο web browser που χρησιμοποιείτε δεν έχει την τελευταία έκδοση.","browser_outdated_update":"Παρακαλώ ανανεώστε την έκδοση  του browser που χρησιμοποιείτε","browser_outdated_explanation":"Το Wunderlist έχει κατασκευαστεί χρησιμοποιώντας την τελευταία λέξη της τεχνολογίας. Για να χρησιμοποιήσετε το Wunderlist , κατεβάστε την τελευταία έκδοση του browser που χρησιμοποιείτε","prenamed_list_movies":"Ταινίες που θέλω να δω","prenamed_list_private":"Ιδιωτικό","prenamed_list_shopping":"Ψώνια ","prenamed_list_wishlist":"Λίστα επιθυμιών","prenamed_list_work":"Εργασία","prenamed_list_read_later":"Ανάγνωση αργότερα","settings_account_change_email":"Αλλαγή της διεύθυνσης Email  ...","settings_account_change_password":"Αλλαγή Κωδικού Πρόσβασης ...","settings_account_delete_confirmation":"Γράψτε \"Είμαι σίγουρος\"","settings_account_delete_confirmation_text":"Είμαι σίγουρος","settings_account_drop_image":"Σύρτε και αφήστε την εικόνα εδώ","settings_account_connect_facebook_account":"Η σύνδεση του Wunderlist λογαριασμού σας με το Facebook κάνει το μοίρασμα λιστών με τους φίλους σας απλό , γρήγορο και εύκολο.","settings_general_12_hour":"12 ώρες","settings_general_24_hour":"24 ώρες","settings_general_confirm_deletion":"Επιβεβαίωση πριν την διαγραφή στοιχείων","settings_general_create_new_tasks":"Προσθήκη νέων στοιχείων","settings_general_date_format":"Μορφοποίηση Ημερομηνίας","settings_general_language":"Γλώσσα","settings_general_start_of_week":"Αρχή της εβδομάδας","settings_general_start_of_week_sunday":"Κυριακή","settings_general_start_of_week_saturday":"Σάββατο","settings_general_start_of_week_monday":"Δευτέρα","settings_general_sound_task_completion":"Ενεργοποίηση ήχου στην ολοκλήρωση στοιχείου ","settings_general_sound_new_notifications":"Ενεργοποίηση ήχου για νέες κοινοποιήσεις.","settings_general_print_done_tasks":"Εκτύπωση ολοκληρωμένων στοιχείων","settings_general_tasks_bottom":"Στο Τέλος της Λίστας ","settings_general_tasks_top":"Στην Κορυφή της Λίστας","settings_general_time_format":"Μορφή ώρας","settings_heading_team":"Business","settings_heading_about":"Περί","settings_heading_account":"Λογαριασμός","settings_heading_general":"Γενικά","settings_heading_notification":"Κοινοποιήσεις","settings_heading_shortcuts":"Συντομεύσεις","settings_heading_sidebar":"Sidebar","settings_imprint":"Εταιρικές πληροφορίες","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"Ειδοποίηση για σημαντικά γεγονότα μέσω:","settings_notifications_notify_me_on_text":"Θα σας ενημερώσουμε για ορισμένα γεγονότα, όπως όταν κάποιος δέχεται μια πρόσκληση σε μια κοινή λίστα, ή όταν κάποιος προσθέτει ή ολοκληρώνει ένα στοιχείο σε μία από τις κοινές λίστες σας. ","settings_sidebar_smart_lists_title":"Εμφάνιση αυτών των έξυπνων λιστών στο Sidebar:","settings_sidebar_smart_lists_auto":"Αυτόματο","settings_sidebar_smart_lists_hidden":"Κρυφό","settings_sidebar_smart_lists_visible":"Ορατό","settings_sync_full":"Συγχρονισμός σε εξέλιξη","settings_account_account_backup":"Αντίγραφο ασφαλείας Λογαριασμού","settings_account_restore_backup":"Import Backup Data","settings_account_backup_description":"Backup data includes all your Lists, Tasks, Subtasks, Notes, and Reminders. Please note it does not include those Lists that were shared with you, Files, Comments, Shared List recipients and previous application settings.","settings_account_data_is_being_processed":"Hold tight! Your backup data is being processed. We will send you an email when everything is complete.","settings_account_change_password_error":"Παρουσιάστηκε ένα πρόβλημα κατά την ανανέωση του κωδικού πρόσβασης .Παρακαλούμε δοκιμάστε ξανά.","settings_account_click_to_download_backup":"κλικ για να κατεβάσετε","settings_account_create_backup":"Δημιουργία αντιγράφου ασφαλείας","settings_account_current_password":"Τρέχων κωδικός πρόσβασης","settings_account_delete_account":"Διαγραφή λογαριασμού","settings_account_delete_account_confirm":"Θέλετε να διαγραφεί ο λογαριασμός σας;","settings_account_delete_account_confirm_text":"Η διαγραφή του λογαριασμού σας θα διαγράψει όλες τις λίστες και τα στοιχεία σας μόνιμα και δεν μπορεί να αναιρεθεί. ","settings_account_fetching_data":"Ανάσυρση δεδομένων ...","settings_account_new_password":"Νέος κωδικός πρόσβασης","settings_account_repeat_new_password":"Επανάληψη νέου κωδικού πρόσβασης","settings_account_right_click_and_save_as":"Δεξί κλικ και αποθήκευση","settings_third_party_libraries":"Αδειες Χρήσης","settings_background_credits":"Εύσημα για τα Φόντα","settings_notifications_email_enabled":"Κοινοποιήσεις μέσω Email ","settings_notifications_desktop_enabled":"Κοινοποιήσεις στην Επιφάνεια Εργασίας","settings_notifications_push_enabled":"Εκπομπή Κοινοποιήσεων (Push)","settings_privacy_policy":"Πολιτική προστασίας προσωπικών δεδομένων ","settings_shortcuts_arrow_keys":"Βελάκια","settings_shortcuts_delete_item":"Διαγραφή Επιλεγμένης Λίστας ή Στοιχείου","settings_shortcuts_mark_done":"Σήμανση Επιλεγμένων Στοιχειων σαν  \"Ολοκληρωμένα\"","settings_shortcuts_mark_starred":"Σήμανση Επιλεγμένων Ετοιχείων σαν \"Διακεκριμένα\"","settings_shortcuts_new_list":"Προσθήκη Νέας Λίστας","settings_shortcuts_new_task":"Προσθήκη Νέου Στοιχείου","settings_shortcuts_open_all_smart_list":"Ανοιγμα Ολων των Εξυπνων Λιστών","settings_shortcuts_open_assigned_smart_list":"Ανοιγμα της έξυπνης λίστας  'Εχουν ανατεθεί σε εμένα' ","settings_shortcuts_open_conversations_smart_list":"Ανοίξτε την έξυπνη λίστα 'Συζητήσεις'","settings_shortcuts_open_done_smart_list":"Ανοιγμα ολοκληρωμένων Εξυπνων Λιστών","settings_shortcuts_open_inbox":"Ανοιγμα εισερχομένων μηνυμάτων","settings_shortcuts_open_preferences":"Ανοιγμα ρυθμίσεων","settings_shortcuts_open_search":"Εστιασμένη αναζήτηση","settings_shortcuts_open_starred_smart_list":"Ανοιγμα Ολων των διακεκριμένων  Εξυπνων Λιστών","settings_shortcuts_open_today_smart_list":"Ανοιγμα της Εξυπνης Λίστας 'Σήμερα'","settings_shortcuts_open_week_smart_list":"Ανοιγμα Εξυπνης Λίστας 'Εβδομάδα'","settings_shortcuts_reset":"Επαναφορά προκαθορισμένων ρυθμίσεων","settings_shortcuts_select_all_tasks":"Επιλογή Ολων των Στοιχείων","settings_shortcuts_show_more":"Εμφάνιση περισσότερων","settings_shortcuts_hide":"Απόκρυψη","settings_shortcuts_show_notifications":"Εμφάνιση Κέντρου Δραστηριότητας ","settings_shortcuts_step_through_list":"Πλοήγηση ανάμεσα στις Λίστες","settings_shortcuts_step_through_task":"Πλοηγηθείτε ανάμεσα στα στοιχεια ","settings_terms_of_use":"Όροι Χρήσης ","settings_account_header_free":"Δωρεάν","settings_account_header_unregistered":"Εγγραφείτε","settings_account_header_account_$":"$ Λογαριασμός","settings_account_pro_description":"Προσθέστε σχόλια και αρχεία στις εργασίες σας και αναθέστε τα στους συναδέλφους σας. Η συνεργασία στις ομάδες δεν ήταν ποτέ πιο απλή.","settings_account_register_wunderlist_description":"Κατωρίστε τα στοιχεία σας ώστε το Wunderlist  να συγχρονίσει τις εργασίες σας σε όλες τις συσκευές σας","settings_manage_subscription_button":"Διαχείριση συνδρομής ","settings_account_header_pro":" Pro ","settings_account_header_pro_account_$":"Ναι ! Είστε $ !","settings_account_header_pro_description":"Το Wunderlist Pro είναι ο καλύτερος τρόπος για να διαχειρίζεστε τα πρότζεκτ σας. Προσκαλέστε τους φίλους και συναδέλφους για να συνεργαστείτε μαζί τους!","settings_upgrade_to_pro_label":"Αναβάθμιση σε $","settings_label_pro_account":"Λογαριασμός Pro","settings_label_purchased_from_$":"Αγοράστηκε από το $","settings_label_purchased_from_$_by_$":"Αγοράστηκε από  $1 από : $2","settings_label_expires_in_$":"Λήγει σε $","setting_label_next_billing_date":"Ημ/νία επόμενης χρέωσης:","setting_label_cancel_subscription":"Ακύρωση συνδρομής","setting_heading_cancel_subscription":"Θα θέλατε πραγματικά να ακυρώσετε τη Wunderlist Pro συνδρομή σας :","setting_description_cancel_subscription":"Θα έχετε πρόσβαση στα δεδομένα σας αλλά όταν η συνδρομή σας λήξει θα μπορέσετε μόνο να χρησιμοποιείτε τα χαρακτηριστικά της απλής έκδοσης Wunderlist.","setting_label_cancel_subscription_success":"Η συνδρομή σας ακυρώθηκε με επιτυχία","settings_label_invoices":"Τιμολόγια","settings_label_become_a_pro":"Γίνετε Pro ","settings_payment_info_expires_$_relative":"Λήγει σε $","settings_payment_info_expires_$_absolute":"Λήγει σε $1 ημέρες : $2","settings_manage_subscription_error":"Συγγνώμη, ένα λάθος παρουσιάστηκε κατά τη διαχείριση  της συνδρομής σας.","group_billing_packages_title":"Plans for every business ","group_billing_packages_text":"Wunderlist for Business provides you with all the features you need to work smarter as a team at an affordable price. Simply select the right plan for your business now.","group_billing_plan_table_team_size":"Μέγεθος Ομάδας","group_billing_plan_table_price":"Τιμή","group_billing_plan_table_package_name_$":"$ Μέλη","group_billing_buy_button_label":"Αγορά","group_billing_$_off":"$ Εκπτωση","group_billing_larger_team_$":"Εχετε μεγαλύτερη ομάδα ; $","group_billing_contact_us":"Επικοινωνείστε μαζί μας!","group_billing_downgrade_error_$_$":"Για να αλλάξετε τη συνδρομή σας στο πακέτο  $1  πρέπει να αφαιρέσετε $2  συναδέλφους σας από το λογαριασμό.","group_billing_manage_team":"Κάντε κλικ εδώ για να διαχειριστείτε την ομάδα σας.","group_billing_button_label_manage":"Διαχείριση","group_billing_team_plan_title":"Το πρόγραμμά σας  Wunderlist Pro","group_billing_team_plan_text":"Το Wunndelist Pro μεγαλώνει μαζί με την ομάδα σας! Το να προσθέσετε μέλη είναι καταπληκτικά  εύκολο, απλά εισάγετε τις διευθύνσεις του ηλεκτρινικού τους ταχυδρομείου παρακάτω. Είναι τόσο απλό ανεξάρτητα από το εάν είναι ή όχι χρήστες του Wundelist.","group_billing_upgrade_button_label":"Αλλαγή Πακέτου","group_billing_upgrade_plan_button_label":"Αναβάθμιση","group_billing_Downgrade_plan_button_label":"Υποβάθμιση","group_billing_view_plans_button_label":"Απεικόνιση Πακέτων","group_billing_manage_team_header":"Διαχείριση Μελών Ομάδας","group_billing_email_address_input_placeholder":"Ηλεκτρονική Διεύθυνση","group_billing_manage_count_$_of_$":"$1  από $2","group_billing_cancel_team_plan":"Ακύρωση το  προγράμματος Wunderlist Pro","group_billing_search_coachmark":"Για να προσθέσετ μέλη απλά εισάγετε τα emails των  συναδέλφων σας και θα προστεθούν στο πακέτο Pro","group_billing_cancel_header":"Είστε σίγουρος  πως θέλετε να ακυρώσετε την συνδρομή της ομάδας σας στο Wunderlist Pro ;","group_billing_change_plan_confirmation_$_$_$":"Είναι εύκολο να αλλάξετε  συνδρομητικό πακέτο. Εάν θέλετε τη συνδρομή των  $1 Μελών θα χρεωθείτε $2  στην  επόμενη χρέωση ξεκινώντας από $3.  Θέλετε να προχωρήσετε ;","group_billing_cancel_text":"Η συνδρομή σας στο Pro θα είναι ενεργή μέχρι το τέλος του μήνα και δεν θα χρεωθείτε ξανά. Θα συνεχίσετε να έχετε τη δυνατότητα να βλέπετε χαρακτηριστικά του Pro όπως αρχεία επισυναπτόμενα σε εργασίες αλλά δεν θα μπορείτε να κάνετε αλλαγές.","error_goup_billing_user_already_pro":"Φαίνεται πως το πρόσωπο αυτό έχει ήδη ένα λογαριασμό Wunderlist Pro.  Κάντε δώρο το Wunderlist Pro σε κάποιον άλλο! ","error_group_billing_wait_subscription_runs_out":"Πρέπει να περιμένετε να λήξει η τρέχουσα συνδρομή σας για να την ανανεώσετε . Λήξη  : $.","button_label_buy_wunderlist_for_business":"Go to Wunderlist for Business","benefit_payment_service_unavailable":"Το σύστημα πληρωμών δεν είαι διαθέσιμο","benefit_name":"Wunderlist Pro","benefit_header_$":"Γίνετε $ ","benefit_header_description":"Η συνεργασία ανάμεσα σε ομάδες δεν ήταν ποτέ ευκολότερη ! Να 4 πολύ καλοί λόγοι για να εγγραφείτε στο Wunderlist Pro.","benefit_button_buy_monthly":"Μηνιαία","benefit_assign_tasks_title":"Aνάθεση εργασιών","benefit_assign_tasks_description":"Αναθέστε εύκολα και παρακολουθείστε την κατάσταση εργασιών ανάμεσα σε συναδέλφους και φίλους !","benefit_unlimited_subtasks_title":"Απεριόριστες υποεργασίες","benefit_unlimited_subtasks_decription":"Σπάστε μεγάλες εργασίες σε μικρότερες , μικρά βήματα που μπορείτε να εκπληρώσετε για μεγαλύτερη παραγωγικότητα - χωρίς περιορισμούς","benefit_comments_title":"Σχόλια","benefit_comments_description":"Ξεκίνησε μια συνομιλία με την ομάδα σου για τις εργασίες σου. Γνωστοποίησε την άποψή σου , ρώτησε κάτι ή πρόσθεσε την ανάλυσή σου.","benefit_backgrounds_update_$":"Για να χρησιμοποιείσετε τα νέα φόντα παρακαλώ αναβαθμίστε σε $","benefit_additional_backgrounds_title":"Νέα Φόντα","benefit_additional_backgrounds_description":"Ανακαλύψτε 8 νέα υπέροχα φόντα για να κάνετε το Wunderlist όπως ακριβώς θέλετε!","benefit_files_title":"Αρχεία","benefit_files_description":"Προσαρτήστε αρχεία στις εργασίες σας και μοιραστείτε τα με τους συναδέλφους σας.","benefit_coming_soon":"Έρχεται σύντομα","benefit_assign_become_pro":"Αναθέστε εργασίες στους συναδέλφους σας με το Wunderllist","benefit_label_accept_terms":"Αγοράζοντας μια συνδρομή Wunderlist Pro αποδέχεστε το  $1 και $2.","benefit_label_need_more_subtasks":"Χρειάζεστε περισσότερες υποεργασίες;","sharing_connect_facebook_sharing":"Συνδέστε τον Wunderlist λογαριασμό σας με το Facebook για να προσκαλείτε τους φίλους σας εύκολα. ","sharing_facebook_apprequest_message_$user_$list":"“$1” θέλει να μοιραστεί τη λίστα “$2” με εσάς","sharing_invite":"Προσκαλέστε Ατομα","sharing_invite_friends":"Πρόσκληση Φίλων","sharing_inviting_requires_account":"Εγγραφείτε για να προσκαλέσετε τους φίλους και τους συναδέλφους σας στις λίστες σας. ","sharing_leave_action":"Θέλετε να φύγετε από αυτή τη λίστα?","sharing_leave_button":"Εξοδος από την κοινόχρηστη λίστα ","sharing_list_members":"Κατάλογος Μελών","sharing_list_owner":"Ιδιοκτήτης","sharing_list_pending_member":"Εκκρεμεί","sharing_tab_recents":"Πρόσφατα","sharing_shared_with_you_by":"Διαμοιρασμός με εσάς από","smart_list_assigned_to_me":"Ανάθεση σε εμένα","smart_list_conversations":"Συνομιλίες","smart_list_all":"Όλα","smart_list_completed":"Ολοκληρώθηκε","smart_list_inbox":"Εισερχόμενα","smart_list_starred":"Διακεκριμένα ","smart_list_today":"Σήμερα","smart_list_week":"Εβδομάδα","label_tell_friends":"Πείτε το στους φίλους σας  ...","social_sharing_heading":"Πείτε το στους φίλους σας στο αγαπημένο σας κοινωνικό δίκτυο! ","social_sharing_dialog_headline":"Love Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"Αργότερα","social_sharing_button_no_thanks":"Όχι ευχαριστώ","social_sharing_button_facebook":"Διαμοιρασμός","social_sharing_button_follow_us":"Ακολουθήστε μας ","social_sharing_button_like_us":"Πατήστε \"Μου αρεσει\" στο Facebook","social_sharing_heading_thanks":"Σιγουρευτείτε πως μας ακολουθείτε για να βλέπετε τα τελευταία νέα του Wunderlist. ","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"I’m using Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","twitter_sharing_placeholder":"I’m using @Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","tutorial_welcome_notes_title":"Σημειώσεις","tutorial_welcome_notes_text":"Οι αποσπασμενες σημειώσεις σας επιτρέπουν να εργαζεστε μέσα ή έξω απο το Wunderlist.","tutorial_welcome_notifications_title":"Κέντρο Δραστηριότητας ","tutorial_welcome_notifications_text":"Προσαρμόστε τον τρόπο που θέλετε να γίνονται οι κοινοποιήσεις. Επιλέξτε για να λαμβάνετε ανανεώσεις και προσκλήσεις για κοινές λίστες σας μέσω e-mail και κοινοποιήσεις στην Επιφάνεια Εργασίας ή δείτε τα όλα στο  Κέντρο Δραστηριοτήτων. ","tutorial_welcome_sharing_title":"Πρόσκληση Φίλων","tutorial_welcome_sharing_text":"Τώρα είναι ακόμα πιο εύκολο να προσκαλέσετε τους φίλους και τους συναδέλφους σας για να σας βοηθήσουν.","tutorial_welcome_subtasks_title":"Επαναλαμβανόμενα στοιχεία, υπενθυμίσεις και υποεργασίες\\n","tutorial_welcome_subtasks_text":"Το Wunderlist τώρα υποστηρίζει μια ολοκαίνουρια  εμφάνιση λεπτομερειών , που σας επιτρέπει να προσθέσετε εύκολα επαναλαμβανόμενα στοιχεία, υπενθυμίσεις και υποεργασίες. ","tutorial_welcome_user_title":"Ολα  γίνονται για σας!","tutorial_welcome_user_text":"Αλλάξτε τις ρυθμίσεις του λογαριασμού σας, ελέγξτε την κατάσταση του συγχρονισμού και  προσαρμόστε το φόντο σας. ","tutorial_welcome_newsletter_subscribe":"Ειδοποίηση για σημαντικές ενημερώσεις και νέα χαρακτηριστικά του Wunderlist με email\\n","tutorial_feature_pro_title":"Χαρακτηριστικά του Wunderlist Pro","share_list_email_signature":"Sent with Wunderlist – My beautiful and simple to-do list\\nIt’s free for iPhone, iPad, Android, Mac, Windows PC and Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ στοιχείο  χωρίς συγχρονισμό","userbar_$_unsynced_item_plural":"$  στοιχεια δεν έχουν συγχρονιστεί","userbar_account_settings":"Ρυθμίσεις Λογαριασμού","userbar_change_background":"Αλλαγή Φόντου","userbar_last_synced_$":"Τελευταίος συγχρονισμός: $","userbar_no_internet_connection":"Εκτός σύνδεσης","userbar_preferences":"Ρυθμίσεις","userbar_sync_in_progress":"Συγχρονισμός σε εξέλιξη...","userbar_user_name_for_unregistered_mode":"Εγγραφείτε για να γίνει ο συγχρονισμός","whatsnew_title":"Δες τι νέο υπάρχει","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Σχόλια","whatsnew_label_voice":"Φωνητική Εισαγωγή ","whatsnew_label_groupbilling":"Κόστος για την Ομάδα","whatsnew_copy_comments":"Κρατήστε όλες τις συνομιλίες σας για τις εργασίες σας σε ένα σημείο με τη δυνότητα Σχολίων στο  Wunderlist Pro. Πείτε τη γνώμη σας , ρωτήστε ή προσθέστε μια άλλη οπτική γωνία στις εργασίες σας για να βελτιώσετε σημαντικά την επικοινωνία μέσα στην ομαάα.","whatsnew_copy_pro_accounts":"Πρόσθεσε σχόλια , ανάθεσε εργασίες και δημιούργησε απεριόριστες υπο'εργασίες με το Wunderlist Pro  για να διαικπεραιώσεις περισσότερα , μαζί.","whatsnew_copy_voice":"Πατήστε πάνω στο μικρόφωνο για υπαγορεύσετε τις εργασίες σας ή ακόμη και να μαγνητοφωνήσετε ένα φωνητικό σημείωμα και επισυνάψτε το σαν αρχείο.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Sign up to try Wunderlist Pro and add a File.","label_add_new_file":"Προσθήκη αρχείου ...","file_uploaded_unsuccessfully":"Το ανέβασμα του $ απέτυχε. Παρακαλώ προσπαθήστε ξανά.","file_uploaded_failed":"Η ανέβασημα απέτυχε. Παρακαλώ προσπαθήστε ξανά.","file_uploaded_failed_deleted":"Η μεταφόρτωση του $ απέτυχε γιατί το αρχείο είχε διαγραφεί από το σκληρό δίσκο.","label_are_you_sure_permanently_delete_$_file":"Είστε σίγουροι ότι θέλετε να διαγράψετε οριστικά το αρχείο  \"$\" από το Wunderlist ;","upload_file_was_not_synced_yet":"Παρακαλώ συγχρονίστε","upload_file_not_synced_yet":"Μη συγχρονισμένο","placeholder_add_comments":"Προσθήκη σχολίου","placeholder_reply":"Απάντηση","button_label_go_pro_to_comment":"Αναβάθμισε στο Wunderlist Pro  για να σχολιάσεις","comment_request_failed":"Μας συγχωρείτε, δεν μπορέσαμε να φορτώσουμε τα σχόλια. Προσπαθείστε ξανά.","comment_load_earlier":"Δίτε περισσότερα σχόλια","coachmark_no_current_comments":"No comments yet.\\nStart your conversation here.","coachmark_comments_not_available":"Μας συγχωρείτε, δεν μπορέσαμε να φορτώσουμε τα σχόλια. Προσπαθείστε ξανά σε λίγο.","notification_$_commented_on_$":"$1 σχολίασε στο $2","notification_$_and_$_commented_on_$":"$1 και $2 σχολίασαν στο $3","notification_$_and_$_others_commented_on_$":"$1 και $2 άλλοι σχολίασαν στο $3","comments_requires_account":"Sign up to try Wunderlist Pro and add a Comment.","non_pro_trial_free_limit_reached":"You’ve reached your Free limit!","non_pro_trial_write_next_comment_$":"You can add another Comment $.","non_pro_trial_upload_next_file_$":"You’ll be able to add another File $.","non_pro_trial_assign_next_to_do_$":"You can Assign another to-do $.","button_signup_or_login":"Εγγραφή ή Σύνδεση","button_it_is_completely_free":"Είναι εντελώς δωρεάν","label_free_download_for_platforms":"Ειναι διαθέσιμο δωρεάν για iPhone, iPad, Android, Windows και Mac","label_wunderlist_to_get_things_done":"More than 5 million people use Wunderlist to get things done.","label_people_who_use_wunderlist":"Δείτε ποιος χρησιμοποιεί ήδη το Wunderlist:","label_wunderlist_uses":"Είτε  οργανώνετε την επιχείρησή  σας, μοιράζεστε τη λίστα αγορών με ένα αγαπημένο πρόσωπο ή απλά διατηρείτε τον έλεγχο της καθημερινότητάς σας το Wunderlist είναι η καλύτερη λίστα εργασιών για εσάς, την ομάδα ή την οικογένειά σας.\\n","label_install_browser_extension":"Εγκατάσταση της Browser Προέκτασης","label_install_chrome_browser_extension":"Εγκατάσταση της Chrome Browser Προέκτασης","label_newsletter_signup":"Εγγραφείτε στο ενημερωτικό δελτίο μας ","label_know_upcoming_features":"Για να είστε οι πρώτοι που θα μαθαίνετε για μελλοντικά χαρακτηριστικά","label_learn_more_about_wunderlist":"Μάθετε περισσότερα σχετικά με το Wunderlist\\n","label_learn_more":"Μάθετε περισσότερα...","label_your_email_address":"Η email διεύθυνσή σας","button_subscribe_to_newsletter":"Εγγραφή ","button_sending_subscribe_to_newsletter":"Αποστολή σε εξέλιξη ...","iyf4_usermenu_label":"Get Wunderlist Pro for Free","iyf4_notification_label":"Get up to 12 free months of Wunderlist Pro by inviting your friends!","iyf4_notification_button_label_var_a":"Start Inviting","iyf4_notification_button_label_var_b":"Invite Friends","iyf4_notification_button_label_var_c":"Get Wunderlist Pro for Free","iyf4_notification_button_label_var_d":"Share Wunderlist Pro","iyf4_dialog_invite_headline_$":"Get up to $ of Wunderlist Pro by inviting your friends!","iyf4_dialog_invite_headline_incentive":"12 free months","iyf4_dialog_invite_incentive_$":"$ Wunderlist, we'll give you both 1 month of Wunderlist Pro for free (up to a limit of 12 months)","iyf4_dialog_invite_incentive_terms":"For every friend who joins","iyf4_dialog_tweet":"I love organizing my life with Wunderlist. Get a month of Wunderlist Pro for free here:","iyf_notification_label":"Refer Wunderlist to your friends and get Pro for free up to 12 months!","iyf_notification_button_label":"Go Pro!","iyf_dialog_step1_headline":"Get a free Pro Account","iyf_dialog_step1_subheadline":"in 3 easy steps","iyf_dialog_step1_instruction1_headline":"Start inviting your friends","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter or E-Mail","iyf_dialog_step1_instruction2_headline":"Your friends sign up","iyf_dialog_step1_instruction2_subheadline":"sit tight while they join Wunderlist","iyf_dialog_step1_instruction3_headline":"Enjoy your free Pro Account","iyf_dialog_step1_instruction3_subheadline":"1 month for every friend who accepts","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 month for every $ friends who accept","iyf_dialog_step1_next_button":"Start inviting","iyf_dialog_step2_subheadline":"to get your free Pro Account","iyf_dialog_step2_divider_label":"Share this link","iyf_dialog_share_on_facebook":"Share on Facebook","iyf_dialog_post_on_twitter":"Tweet on Twitter","iyf_dialog_email_placeholder":"Enter an email address...","iyf_dialog_more_placeholder":"Add another...","iyf_dialog_step3_headline":"Thank you for sharing","iyf_dialog_step3_subheadline":"Sit tight while your friends join","iyf_dialog_step3_success_headline":"Invites successfully sent","iyf_dialog_step3_success_subheadline":"We'll notify you as soon as your Pro account is ready.","iyf_dialog_step3_invite_more":"Invite more people","meta_title":"Wunderlist 2: Η όμορφη και απλή διαδικτυακή λίστα εργασιών σας","meta_description":"Over 5 million people already use Wunderlist to manage tasks, to-do lists, and to get things done.  Wunderlist is the best to-do list for you, your team or your family.","meta_keywords":"6wunderkinder, παραγωγικότητα, συνεργασία,   διαχείριση εργασιών, διαχειριστής εργασιών,  εκκρεμείς εργασίες, todo, λίστα, εργασίες,επίτευξη στόχων, οργάνωση ,σχέδιο, λίστα αγορων, υπενθυμίσεις, υποεργασίες , έξυπνες λίστες, λίστα ψώνιων, λίστα ταινιών, λίστα κοινής χρήσης\\n","enable_desktop_notifications_text":"Κάντε κλικ στο \"Επιβεβαίωση\" και στην συνέχεια, 'Επιτρέπω' στο πρόγραμμα περιήγησης για να ενεργοποιήσετε τις κοινοποιήσεις επιφάνειας εργασίας. ","notification_add_to_browser":"Κρατήστε το Wunderlist σας μόνο ένα κλικ μακριά. Προσθέστε την φορητή εφαρμογή στον Browser σας τώρα.\\n","notification_add_extension_to_browser":"Αποθηκεύστε γρήγορα όλο  το αγαπημένο  σας διαδικτυακό περιεχόμενο απευθείας στο Wunderlist. Εγκαταστήστε την προέκταση Wunderlist Chrome προέκταση τώρα.","button_add_to_chrome":"Προσθήκη στο Chrome","button_add_to_store_added":"Προστέθηκε","aria_activity_center_hint":"Activity Center. Hit escape to close.","aria_exit_search":"Exit Search","aria_search":"Search","aria_sort_list":"Sort List","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"User menu. Hit escape to close.","aria_assign_to_$":"Assign to $","momentjs_months":"Ιανουάριος_Φεβρουάριος_Μάρτιος_Απρίλιος_Μάιος_Ιούνιος_Ιούλιος_Αύγουστος_Σεπτέμβριος_Οκτώβριος_Νοέμβριος_Δεκέμβριος\\n\\n","momentjs_monthsShort":"Ιαν_Φεβ_Μαρ_Απρ_Μαι_Ιουν_Ιουλ_Αυγ_Σεπ_Oκτ_Νοε_Δεκ","momentjs_weekdays":"Κυριακή_Δευτέρα_Τρίτη_Τετάρτη_Πέμπτη_Παρασκευή_Σάββατο","momentjs_weekdaysShort":"Κυρ_Δευ_Τρι_Τετ_Πεμ_Παρ_Σαβ","momentjs_weekdaysMin":"Κυ_Δε_Τρ_Τε_Πε_Πα_Σα","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Σήμερα στις] LT","momentjs_calendar_nextDay":"[Αύριο στις] LT","momentjs_calendar_nextWeek":"dddd [στις] LT","momentjs_calendar_lastDay":"[Χθες στις] LT","momentjs_calendar_lastWeek":"[τελευταία] dddd [στις] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"σε %s","momentjs_relativeTime_past":"πριν απο %s ","momentjs_relativeTime_s":"μερικά δευτερόλεπτα","momentjs_relativeTime_m":"ένα λεπτό","momentjs_relativeTime_mm":"%d λεπτά","momentjs_relativeTime_h":"μια ώρα","momentjs_relativeTime_hh":"%d ώρες","momentjs_relativeTime_d":"μια ημέρα","momentjs_relativeTime_dd":"%d ημέρες","momentjs_relativeTime_M":"ένας μήνας","momentjs_relativeTime_MM":"%d μήνες","momentjs_relativeTime_y":"ένας χρόνος","momentjs_relativeTime_yy":"%d χρόνια"}
};
});
define('languages/hebrew',[],function() {
return {
'name': 'hebrew',
'data': {"actionbar_print_selected_item":"הדפס פריט שנבחר","actionbar_print_$_selected_items_plural":"הדפס $ פריטים שנבחרו","actionbar_email_selected_item":"שלח פריט שנבחר באימייל","actionbar_email_$_selected_items_plural":"שלח $ פריטים שנבחרו באימייל","actionbar_sort_alphabetically":"מיין לפי א\"ב","actionbar_sort_due_date":"מיין לפי מועד לביצוע","actionbar_sort_assignee":"מיין לפי האחראי לביצוע","api_error_account_already_exists":"משתמש עם כתובת אימייל זו כבר קיים.","api_error_connection_error":"וופס, כנראה היתה בעיה להתקשר עם השרת. נא לנסות שוב.","api_error_general_error":"וופס, אין קשר כעת עם השרת. נא נסה שנית.","api_error_incorrect_login":"כתובת אימייל או סיסמה שהכנסת לא נכונה.","api_error_incorrect_password":"הסיסמה שהכנסת לא נכונה.","api_error_service_down":"חלק חיוני של שרות וונדר איי.פי.אי. מושבת כעת.","api_error_unknown":"התרחשה שגייה לא צפויה.","api_error_validation_error_unable_to_signup":"לא הצלחנו לרשום אותך עם כתובת האימייל שנמסרה.","api_error_not_a_beta_user":"את/ה לא חבר/ה בבטא של Wunderlist.","button_back":"חזור","button_cancel":"ביטול","button_confirm":"אישור","button_download":"מוריד","button_change":"שינוי","button_choose":"בחירה","button_connect":"התחבר","button_connect_facebook":"התחבר עם פייסבוק","button_continue":"המשך","button_delete":"מחק","button_disconnect":"התנתק","button_dismiss":"התעלם","button_done":"סיים","button_edit":"ערוך","button_get_started":"בואו ונתחיל","button_go_back":"חזור","button_go_back_sentence":"חזור.","button_learn_more":"מידע נוסף","button_go_back_to_login":"חזור כדי להיכנס","button_go_to_web_app":"עבור לאפליקציה באינטרנט","button_join_now":"הצטרף עכשיו","button_log_in":"כניסה","button_log_in_with_$":"Log In With $","button_log_out":"יציאה","button_log_in_facebook":"כניסה דרך פייסבוק","button_next":"הבא","button_no":"לא","button_no_due_date":"אין תאריך לביצוע","button_ok":"בסדר","button_remove_due_date":"הסר תאריך לביצוע","button_remove_reminder":"הסר תזכורת","button_email_list":"רשימת דוא\"ל","button_print_list":"רשימת הדפסה","button_reset_password":"אתחול סיסמה","button_retry":"נסה שוב","button_save":"שמור","button_send":"שלח","button_sign_up":"הרשם","button_sign_up_with_$":"Sign Up With $","button_sign_up_for_free":"הרשם בחינם","button_sign_up_facebook":"הרשם דרך פייסבוק","button_support_center":"מרכז תמיכה","button_subscribe":"נפלא, כן בבקשה!","button_try_again":"נסה שוב","button_try_wunderlist":"תנסה וונדרליסט","button_yes":"כן","coachmark_all_list_empty":"עוד לא הוספת משימות. תנסה, הוסף משימה.","coachmark_completed_list_empty":"עוד לא ביצעת משימות כלשהן. תנסה לסמן כמבוצעות משימות מרשימותיך!","coachmark_no_search_results":"אין תוצאות לחיפוש","coachmark_sharing_invite_friends_heading":"הזמן את חבריך","coachmark_sharing_invite_friends_text_$":"חבריך יוכלו ליצור, למחוק ולסמן כמבוצעות משימות ברשימת \"$\".","coachmark_sharing_recent_no_contacts_heading":"אין אנשי קשר באחרונה","coachmark_sharing_recent_no_contacts_text_$":"הקלד כתובת אימייל או חפש באנשי קשר. לאחר צירוף חברך יוכל ליצור, למחוק ולסמן משימות כמבוצעות ברשימת \"$\".","coachmark_assigned_to_me_list_empty":"אין משימות שהוקצו לך","coachmark_conversations_list_empty":"אין כעת שיחות.","coachmark_starred_list_empty":"אין משימות מסומנות בכוכב","coachmark_today_list_empty":"מזל טוב! אין לך היום משימות שמועדיהן לביצוע הגיעו או עברו","coachmark_week_list_empty":"בחופש? אין לך משימות לביצוע בשבוע הקרוב.","error_list_not_found":"הרשימה שאתה מחפש לא נמצאה","error_share_not_created":"ארעה תקלה בנסיון לשתף את רשימתך. נא לנסות שוב.","error_task_not_found":"הרשימה שאתה מחפש לא נמצאה","error_page_not_found":"עמוד לא נמצא","error_title_not_found":"לא נמצא","label_are_you_sure_permanently_delete_item":"אתה בטוח שברצונך למחוק את הפריט הזה לנצח?","label_are_you_sure_permanently_delete_item_plural":"אתה בטוח שברצונך למחוק את הפריטים האלה לנצח?","label_activity_center":"מרכז הפעילויות","label_are_you_sure_permanently_delete_$_list":"אתה בטוח שברצונך למחוק לנצח רשימת \"$\"?","label_are_you_sure_permanently_delete_$_task":"אתה בטוח שברצונך למחוק לנצח משימת \"$\"?","label_are_you_sure_permanently_delete_task_plural":"אתה בטוח שברצונך למחוק את הפריטים האלה לנצח?","label_are_you_sure_permanently_delete_$_subtask":"אתה בטוח שברצונך למחוק לנצח תת-משימת \"$\"?","label_cant_undo":"לא תוכל לבטל את הפעולה הזאת.","label_completed_tasks_heading":"משימה אחת בוצעה","label_$_completed_tasks_heading_plural":"$ משימות שבוצעו","label_connecting":"מתחבר...","label_minisite_description_line_1":"עקוב אחרי כל מה שברצונך לעשות.","label_minisite_description_line_2":"וונדרליסט הוא חינמי על כל הפלטפורמות המובילות.","label_minisite_share_deleted_or_no_access":"כנראה הרשימה נמחקה או אין לך גישה אליה יותר.","label_minisite_contact_sender_for_info":"נא ליצור קשר עם הגורם ששיתף אותך ברשימה למידע נוסף.","label_minisite_$_invited_you_to_the_list_$":"$1$ הזמין אותך לרשימה $2$","label_minisite_empty_list_$":"הרשימה ריקה כעת, אז תעזור להם להתחיל. פשוט הקש בכפתור \"הירשם\" למעלה ותתחיל להוסיף משימות לרשימת $.","label_day_0":"'יום א","label_day_1":"'יום ב","label_day_2":"'יום ג","label_day_3":"'יום ד","label_day_4":"'יום ה","label_day_5":"'יום ו","label_day_6":"שבת","label_delete_file":"מחק קובץ","label_delete_list":"מחיקת רשימה","label_delete_task":"מחוק פריט","label_delete_task_plural":"מחוק פריטים","label_delete_subtask":"מחק תת-משימה","label_due_$":"לביצוע: $","label_due_on":"לביצוע $","label_due_date":"תאריך ביצוע","label_email":"אימייל","label_every":"כל","label_loading":"טוען...","label_logging_out":"ביציאה...","label_name":"שם","label_newsletter":"דף עדכון של וונדרליסט","label_none":"אין בחירה","label_notification":"הודעה","label_oops":"וופס!","label_or":"או","label_password":"סיסמה","label_relative_date_today":"היום","label_relative_date_today_with_date":"היום, $","label_relative_date_today_mid_sentence":"היום","label_relative_date_tomorrow":"מחר","label_relative_date_tomorrow_with_date":"מחר, $","label_relative_date_tomorrow_mid_sentence":"מחר","label_relative_date_yesterday":"אתמול","label_remind_me_at_$":"תזכיר לי בשעה $","label_reminder":"תזכורת","label_reminder_message_$":"רק להזכירך: $","label_repeat_every_day":" חזרתיות כל יום","label_repeat_every_week":"חזרתיות כל שבוע","label_repeat_every_month":"חזרתיות כל חודש","label_repeat_every_year":"חזרתיות כל שנה","label_repeat_custom":"עיצב אישי...","label_repeat_day":"כל יום","label_repeat_day_$_plural":"כל $ ימים","label_repeat_month":"כל חודש","label_repeat_month_$_plural":"כל $ חודשים","label_repeat_week":"כל שבוע","label_repeat_week_$_plural":"כל $ שבועות","label_repeat_never":"ללא חזרתיות","label_repeat_year":"כל שנה","label_repeat_year_$_plural":"כל $ שנים","label_reset_password":"איתחול סיסמה","label_rights_reserved":"כל הזכויות שמורות","label_still_fetching_tasks":"עדיין מוריד משימות ...","label_sync":"סנכרון","label_time_am":"לפנה\"צ","label_time_day_plural":"ימים","label_time_week_plural":"שבועות","label_time_month_plural":"חודשים","label_time_pm":"אחה\"צ","label_time_year_plural":"שנים","label_assign_to":"הקצה ל","label_unassigned":"לא הוקצה","label_assign_me":"אני","label_created_$":"נוצר $","label_created_by_$":"נוצר ע\"י $","label_created_on_$":"נוצר ב: $","label_created_$_by_$":"נוצר $1$ ע\"י $2$","label_created_by_$_on_$":"נוצר ע\"י $1$ ב: $2$","label_completed_$":"בוצע $","label_completed_on_$":"בוצעה ב: $","label_completed_$_by_$":"בוצעה $1$ ע\"י $2$","label_completed_by_$_on_$":"בוצע ע\"י $1$ $2$","login_add_photo_hint":"עצב אישי את חשבונך בוונדרליסט ע\"י הוספת תמונתך.","login_already_have_account":"כבר יש לך חשבון משתמש?","login_email_not_valid":"נא להכניס כתובת אימייל תקינה.","login_empty_name":"נא להכניס את שמך.","login_empty_password":"נא להכניס סיסמה.","login_password_not_valid":"נא להכניס סיסמה תקינה.","login_empty_email":"נא להכניס כתובת אימייל.","login_enter_name":"מי אתה?","login_enter_password":"כמעט סיימת","login_enter_password_hint":"בחר סיסמה כדי לסיים פתיחת חשבונך בוונדרליסט.","login_forgot_password":"שכחתי סיסמה","login_forgot_password_heading":"שכחת משהו?","login_forgot_password_text":"הכנס כתובת האימייל שבה נרשמת ונשלח אליך לינק לאתחול סיסמה.","login_no_account_yet":"אין לך חשבון משתמש?","login_password_changed":"סיסמתך עודכנה","login_password_not_match":"הסיסמאות שהכנסת לא תואמות.","login_password_reset_email_has_been_sent":"נשלחו לאימייל שלך הוראות לאיתחול סיסמה.","login_reset_password_heading":"יש לבחור כעת את סיסמתך החדשה.","login_reset_password_success":"פשוט תקש על הכפתור למטה ותוכל להיכנס בחזרה לוונדרליסט.","login_reset_password_success_heading":"הידד! סיסמתך הוחלפה בהצלחה.","login_password_too_short":"סיסמה חייבת להיות בת 5 תווים לפחות.","login_sign_up":"הרשם.","login_want_to_try_again":"לנסות שוב?","login_accept_terms":"בזה שאתה נרשם אתה מקבל $1$ ו- $2$ שלנו.","logout_timeout_title":"שגייה בסינכרון","logout_timeout_text":"לא הצלחנו לסנכרן את הנתונים שלך. ברצונך לנסות שוב או לצאת?","mobile_tutorial_welcome_to":"ברוכים הבאים ל","mobile_tutorial_wunderlist_subtitle":"אפלקציית המשימות היפה והפשוטה שלך","notifications_desktop_enable_heading":"הפעל הודעות משלחן העבודה?","notifications_no_notifications":"אין פעילות","notifications_no_notifications_message":"הזמנות לרשימות משותפות ועוד פעילויות מופיעות כאן","notifications_event_accept":"קבל","notifications_event_accepted":"התקבל","web_upgrade_ie9_not_supported":"וונדרליסט אינו תומך באינטרנט אקספלורר 9. אנא שדרג ל-$ או $ לחוויה טובה יותר.","web_upgrade_to_chrome":"כרום","web_upgrade_to_ie10":"אינטרנט אקספלורר","web_enable_touch_styles_alert":"כנראה אתה משתמש עם מסך מגע. האם ברצונך להפעיל ממשק מותאם למגע? ניתן תמיד לשנות את זה בהגדרות החשבון.","web_setting_enable_touch_for_$":"הפעל מגע עבור: $","web_settings_text_refresh_may_be_required":"ייתכן שיידרש ריענון","rate_label":"דרג את Wunderlist","rate_app_heading":"דרג וסקור את וונדרליסט","rate_app_message_web_chrome":"תודה שאתה משתמש בוונדרליסט, נשמח לשמוע את דעתך! נודה לך לדרג ולסקור את וונדרליסט חנות אנטרנטי כרום★★★★★","rate_app_button_later":"מאוחר יותר","rate_app_button_no":"לא תודה","rate_app_button_yes":"דרג את וונדרליסט","placeholder_add_due_today_to_inbox":"הוסף משימה לביצוע היום ב: \"משימות נכנסות\"...","placeholder_add_list":"הוסף רשימה...","placeholder_add_subtask":"הוסף תת-משימה","placeholder_add_starred_to_inbox":"הוסף משימה מסומנת בכוכב ב\"משימות נכנסות\"...","placeholder_add_task_to_$":"הוסף משימה ב\"$\"...","placeholder_add_to_inbox":"הוסף משימה ב- \"משימות נכנסות\"","placeholder_new_list":"רשימה חדשה","placeholder_remind_me":"תזכיר לי","placeholder_search":"חפש...","placeholder_sharing_search":"שם או כתובת אימייל...","placeholder_set_due_date":"קבע תאריך לביצוע","browser_outdated_heading":"וופס, כנראה הדפדפן שלך לא מעודכן.","browser_outdated_update":"נא לעדכן את הדפדפן שלך","browser_outdated_explanation":"וונדרליסט נוצרה עם הטכנולוגיה החדשנית והטובה ביותר. להשתמש בוונדרליסט הורד את הגרסה המעודכנת ביותר של הדפדפן שלך","prenamed_list_movies":"סרטים לצפייה","prenamed_list_private":"פרטי","prenamed_list_shopping":"קנייה","prenamed_list_wishlist":"לרכישה בעתיד","prenamed_list_work":"עבודה","prenamed_list_read_later":"קרא מאוחר יותר","settings_account_change_email":"החלף כתובת אימייל...","settings_account_change_password":"החלף סיסמה...","settings_account_delete_confirmation":"הקלק \"אני בטוח\"","settings_account_delete_confirmation_text":"אני בטוח","settings_account_drop_image":"הורד תמונה פה","settings_account_connect_facebook_account":" חיבור חשבונך בוונדרליסט לפייסבוק הופך שיתוף חבריך ברשימותיך למשימה פשוטה, מהירה וקלה.","settings_general_12_hour":"12 שעות","settings_general_24_hour":"24 שעות","settings_general_confirm_deletion":"אישור לפני מחיקת פריטים","settings_general_create_new_tasks":"הוסף משימות חדשות","settings_general_date_format":"תבנית תאריך","settings_general_language":"שפה","settings_general_start_of_week":"התחלת השבוע","settings_general_start_of_week_sunday":"יום ראשון","settings_general_start_of_week_saturday":"שבת","settings_general_start_of_week_monday":"יום שני","settings_general_sound_task_completion":"השמע קול בסיום ביצוע משימה","settings_general_sound_new_notifications":"הפעל קול להודעות חדשות","settings_general_print_done_tasks":"הדפס משימות שבוצעו","settings_general_tasks_bottom":"תחתית הרשימה","settings_general_tasks_top":"תחילת הרשימה","settings_general_time_format":"תבנית שעון","settings_heading_team":"Business","settings_heading_about":"אודות","settings_heading_account":"חשבון","settings_heading_general":"כללי","settings_heading_notification":"הודעות","settings_heading_shortcuts":"קיצורי דרך","settings_heading_sidebar":"סרגל צד","settings_imprint":"אודות החברה","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"הודיעו לי על אירועים חשובים דרך:","settings_notifications_notify_me_on_text":"נודיע לך באירועים מסויימים, כמו קבלת הזמנתך לרשימה משותפת, או הוספה או ביצוע משימה ע\"י אחר.","settings_sidebar_smart_lists_title":"הצג את הרשימות החכמות האלה בסרגל צד:","settings_sidebar_smart_lists_auto":"אוטומטי","settings_sidebar_smart_lists_hidden":"מוסתר","settings_sidebar_smart_lists_visible":"גלוי","settings_sync_full":"סנכרן עכשיו","settings_account_account_backup":"גיבוי חשבון","settings_account_restore_backup":"נתוני גיבוי חשובים","settings_account_backup_description":"גיבוי נתונים כולל רשימותיך, משימות, תת-משימות, רישומים ותזכורות. שים לב שגיבוי לא כולל רשימות שבהן שותפת, קבצים, הערות, חברי רשימות משותפות והגדרות קודמות.","settings_account_data_is_being_processed":"Hold tight! Your backup data is being processed. We will send you an email when everything is complete.","settings_account_change_password_error":"היתה תקלה בעדכון סיסמתך. נא לנסות שוב.","settings_account_click_to_download_backup":"הקלק להוריד","settings_account_create_backup":"צור גיבוי","settings_account_current_password":"סיסמה נוכחית","settings_account_delete_account":"מחק חשבון","settings_account_delete_account_confirm":"אתה בטוח שברצונך למחוק את חשבונך?","settings_account_delete_account_confirm_text":"ביטול חשבון משתמש ימחוק את כל רשימותיך לנצח ללא אפשרות שחזור.","settings_account_fetching_data":"אוסף נתונים...","settings_account_new_password":"סיסמה חדשה","settings_account_repeat_new_password":"הכנס סיסמה חדשה שוב","settings_account_right_click_and_save_as":"הקלק ימני ושמור","settings_third_party_libraries":"רשיונות","settings_background_credits":"זכויות מעצבי רקע","settings_notifications_email_enabled":"הודעות אימייל","settings_notifications_desktop_enabled":"הודעות שלחן עבודה","settings_notifications_push_enabled":"דחף הודעות","settings_privacy_policy":"מדיניות פרטיות","settings_shortcuts_arrow_keys":"מקשי חצים","settings_shortcuts_delete_item":"מחוק משימה או פריט הנבחר","settings_shortcuts_mark_done":"סמן משימות שנבחרו \"בוצע\"","settings_shortcuts_mark_starred":"סמן בכוכב משימות שנבחרו","settings_shortcuts_new_list":"הוסף רשימה חדשה","settings_shortcuts_new_task":"הוסף משימה חדשה","settings_shortcuts_open_all_smart_list":"פתח רשימת \"הכל\"","settings_shortcuts_open_assigned_smart_list":"פתח רשימה חכמה \"באחריותי\"","settings_shortcuts_open_conversations_smart_list":"פתח רשימת \"שיחות\"","settings_shortcuts_open_done_smart_list":"פתח רשימת \"בוצעו\"","settings_shortcuts_open_inbox":"פתח משימות נכנסות","settings_shortcuts_open_preferences":"פתח העדפות","settings_shortcuts_open_search":"מקד חיפוש","settings_shortcuts_open_starred_smart_list":"פתח רשימת  \"מסומנים סכוכב\"","settings_shortcuts_open_today_smart_list":"פתח רשימת \"היום\"","settings_shortcuts_open_week_smart_list":"פתח רשימת \"שבוע\"","settings_shortcuts_reset":"אתחל לברירות מחדל","settings_shortcuts_select_all_tasks":"בחר הכל","settings_shortcuts_show_more":"הצג עוד","settings_shortcuts_hide":"הסתר","settings_shortcuts_show_notifications":"הצג מרכז הפעילויות","settings_shortcuts_step_through_list":"סקירה ברשימות","settings_shortcuts_step_through_task":"סקור במשימות","settings_terms_of_use":"תנאיי שימוש","settings_account_header_free":"בחינם","settings_account_header_unregistered":"הירשם","settings_account_header_account_$":"חשבון $","settings_account_pro_description":"הוסף הערות וקבצים למשימותיך והקצה אותם לעמיתיך. שיתוף פועלה בצוותים לעולם לא היה קל יותר.","settings_account_register_wunderlist_description":"הירשם לוונדרליסט כדי לסנכרן את משימותיך על כל ההתקנים.","settings_manage_subscription_button":"נהל מינוי","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"היי, אתה $!","settings_account_header_pro_description":"וונדרליסט פרו היא הדרך הטובה ביותר לנהל את הפרוייקטים שלך. הזמן את חבריך ואת עמיתיך לשתף פעולה ותביאו דברים לידי ביצוע.","settings_upgrade_to_pro_label":"שדרג ל- $","settings_label_pro_account":"חשבון פרו","settings_label_purchased_from_$":"נרכש מ: $","settings_label_purchased_from_$_by_$":"נרכש מ: $1$ על ידי: $2$","settings_label_expires_in_$":"פג תוקף בעוד $","setting_label_next_billing_date":"תאריך הקרוב לחיוב חשבון:","setting_label_cancel_subscription":"בטל מינוי","setting_heading_cancel_subscription":"האם את/ה בטוח/ה שברצונך לבטל את מינוי ה-Wunderlist Pro שלך?","setting_description_cancel_subscription":"עדיין יהיה לך גישה לנתונים, אבל עם תום המנוי תוכל להשתמש בתכונות הסטנדרטיות של וונדרליסט בלבד.","setting_label_cancel_subscription_success":"המנוי שלך בוטל בהצלחה.","settings_label_invoices":"חשבוניות","settings_label_become_a_pro":"הפוך לפרו","settings_payment_info_expires_$_relative":"פג תוקף $","settings_payment_info_expires_$_absolute":"פג תוקף בעוד $1$ ימים: $2$.","settings_manage_subscription_error":"מצטערים, אירעה שגיאה בניהול המנוי שלך.","group_billing_packages_title":"Plans for every business ","group_billing_packages_text":"Wunderlist for Business provides you with all the features you need to work smarter as a team at an affordable price. Simply select the right plan for your business now.","group_billing_plan_table_team_size":"גודל צוות","group_billing_plan_table_price":"מחיר","group_billing_plan_table_package_name_$":"$ חברים","group_billing_buy_button_label":"רכישה","group_billing_$_off":"$ הנחה","group_billing_larger_team_$":"יש עוד חברים בצוות? $","group_billing_contact_us":"צור קשר איתנו!","group_billing_downgrade_error_$_$":"כדי לעבור לתוכנית $1$ חברים עליך להסיר $2$ איש/אנשי צוות מהחשבון.","group_billing_manage_team":"הקלק כאן כדי לנהל את הצוות שלך.","group_billing_button_label_manage":"ניהול","group_billing_team_plan_title":"חבילת וונדרליסט פרו שלך","group_billing_team_plan_text":"וונדרליסט פרו גדל במקביל לצוות שלך! תוסיף חברים בקלי קלות, פשוט תרשום למטה את כתובות הדוא\"ל שלהם. זה כל כך פשוט, ללא קשר אם הם כבר משתמשים בוונדרליסט או לא.","group_billing_upgrade_button_label":"שינוי תוכנית","group_billing_upgrade_plan_button_label":"שדרוג","group_billing_Downgrade_plan_button_label":"ביטול שדרוג","group_billing_view_plans_button_label":"צפייה בתוכניות","group_billing_manage_team_header":"ניהול חברי צוות","group_billing_email_address_input_placeholder":"דוא\"ל","group_billing_manage_count_$_of_$":"$1$ מ- $2$","group_billing_cancel_team_plan":"ביטול חבילת וונדרליסט פרו","group_billing_search_coachmark":"להוסיף חברים, פשוט תרשום כתובות הדוא\"ל של חברי הצוות והם יצורפו לתוכנית פרו שלך.","group_billing_cancel_header":"האם את/ה בטוח/ה שברצונך לבטל את מינוי ה-Wunderlist Pro של הצוות שלך?","group_billing_change_plan_confirmation_$_$_$":"קל להחליף תוכנית. אם תבחר כעת בתוכנית $1$ חברים תחוייב $2$ בתקופת חיוב הבאה שמתחילה ב-$3$. אתה בטוח שברצונך לעשות את זה כעת?","group_billing_cancel_text":"המנוי הפרו שלך בתוקף עד סוף החודש, ולא תחויב בחשבון נוסף. בעוד שעדיין תוכל לצפות בכל מאפייני פרו, כמו קבצים המצורפים למשימות, לא תוכל לבצע בהם שינויים.","error_goup_billing_user_already_pro":"כנראה לחבר כבר יש חשבון וונדרליסט פרו. תן מתנת פרו לחבר אחר.","error_group_billing_wait_subscription_runs_out":"תצטרך לחכות עד שהמנוי הנוכחי יסתיים לפני רכישה מחדש. תאריך סיום מנוי: $.","button_label_buy_wunderlist_for_business":"Go to Wunderlist for Business","benefit_payment_service_unavailable":"שרות תשלומים לא זמין","benefit_name":"וונדרליסט פרו","benefit_header_$":"הפוך ל: $","benefit_header_description":"שיתןף פעולה בצוותים ובעסקים לעולם לא היה קל יותר! הנה 4 סיבות טובות מאד להירשם לוונדרליסט פרו.","benefit_button_buy_monthly":"חודשי","benefit_assign_tasks_title":"העבר משימות","benefit_assign_tasks_description":"העבר ועקוב בקלות אחרי מצב המשימות של עמיתים וחברים!","benefit_unlimited_subtasks_title":"כמות בלתי מוגבלת של תת-משימות","benefit_unlimited_subtasks_decription":"פרק משימות גדולות לפעולות קטנות ברות השגה כדי להתייעל- ללא הגבלה.","benefit_comments_title":"הערות","benefit_comments_description":"תתחיל שיחה עם עמיתיך בקשר למשימותיך. תשאיר הערה, הארה או תשאל שאלה.","benefit_backgrounds_update_$":"כדי להשתמש במסכי רקע החדשים שדרג ל- $","benefit_additional_backgrounds_title":"מסכי רקע חדשים","benefit_additional_backgrounds_description":"תגלה 8 מסכי רקע חדשים ויפים כדי לעצב וונדרליסט לפי טעמך.","benefit_files_title":"קבצים","benefit_files_description":"צרף קבצים למשימות ושתפם עם חברי הצוות.","benefit_coming_soon":"מגיע בקרוב","benefit_assign_become_pro":"העבר משימות לעמיתיך עם וונדרליסט","benefit_label_accept_terms":"ברכישת מנוי של וונדרליסט פרו אתה מסכים לקבל את ה- $1$ ואת ה- $2$.","benefit_label_need_more_subtasks":"צריך ליצור עוד תת-משימות?","sharing_connect_facebook_sharing":"חבר את חשבונך בוונדרליסט לחשבונך בפייסבוק כדי להזמין בקלות את חבריך.","sharing_facebook_apprequest_message_$user_$list":"\"$1$\" מעוניין לשתף אותך ברשימה \"$2$\"","sharing_invite":"הזמן אנשים","sharing_invite_friends":"הזמן חברים","sharing_inviting_requires_account":"הרשם כדי להזמין חברים ועמיתים לרשימותיך.","sharing_leave_action":"אתה בטוח שברצונך לצאת מהרשימה?","sharing_leave_button":"יציאה מרשימה משותפת","sharing_list_members":"חברים ברשימה","sharing_list_owner":"בעלים","sharing_list_pending_member":"בהמתנה","sharing_tab_recents":"לאחרונה","sharing_shared_with_you_by":"שותפת ע\"י","smart_list_assigned_to_me":"הוקצה אלי","smart_list_conversations":"שיחות","smart_list_all":"הכל","smart_list_completed":"בוצעו","smart_list_inbox":"משימות נכנסות","smart_list_starred":"מסומנים בכוכב","smart_list_today":"היום","smart_list_week":"שבוע","label_tell_friends":"ספר לחבריך","social_sharing_heading":"אוהב וונדרליסט? ספר לחבריך!","social_sharing_dialog_headline":"Love Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"לא עכשיו","social_sharing_button_no_thanks":"לא תודה","social_sharing_button_facebook":"שתף","social_sharing_button_follow_us":"עקוב אחרינו","social_sharing_button_like_us":"אהוב אותנו","social_sharing_heading_thanks":"עקוב אחרינו לכל העדכונים מוונדרליסט.","social_sharing_button_twitter":"טוויט","general_sharing_placeholder":"אני משתמש בוונדרליסט, תוכנת המשימות היפה והקלה שלי. תשיג אותה בחינם ב- www.wunderlis.com","twitter_sharing_placeholder":"אני משתמש Wunderlist@, תוכנת המשימות היפה והקלה שלי. תשיג אותה בחינם ב- www.wunderlis.com","tutorial_welcome_notes_title":"הערות","tutorial_welcome_notes_text":"הערות שניתנות לשליפה מאפשרות לך לעבוד מתוך וונדרליסט או מחוצה לה.","tutorial_welcome_notifications_title":"מרכז הפעילויות","tutorial_welcome_notifications_text":"החלט באיזה צורה אתה מעוניין לקבל הודעות. בחר לקבל הזמנות ועדכונים לרשימות המשותפות דרך אימייל והודעות על שלחן העבודה או צפה בכל דרך מרכז הפעילוית...","tutorial_welcome_sharing_title":"הזמן חברים","tutorial_welcome_sharing_text":"עכשיו עוד יותר פשוט להזמין את חבריך ועמיתיך שיתנו לך יד.","tutorial_welcome_subtasks_title":"תזכורות, משימות חוזרות ותת-משימות","tutorial_welcome_subtasks_text":"וונדרליסט משיקה תצוגת פרטים חדשה שמפשרת לך להוסיף בקלות משימות חוזרות, תזכורות ותת-משימות.","tutorial_welcome_user_title":"הכל אודותיך!","tutorial_welcome_user_text":"שנה הגדרות בחשבונך, בדק מצב סינכרון ועצב את רקע המסך.","tutorial_welcome_newsletter_subscribe":"הודיעו לי באימייל לגבי עדכונים חדשים ואפשרויות חדשות בוונדרליסט","tutorial_feature_pro_title":"אפשרות בוונדרליסט פרו","share_list_email_signature":"נשלח ע\"י וונדרליסט - תוכנת המשימות היפה והקלה שליn\\בחינםעבור אייפון, אייפד, אנדרואיד, מאק, חלונות PC ורשת! - www.wunderlist.com","userbar_$_unsynced_item":"$ פריט לא סונכרן","userbar_$_unsynced_item_plural":"$ משימות שלא סונכרנו","userbar_account_settings":"הגדרות חשבון","userbar_change_background":"החלף מסך הרקע","userbar_last_synced_$":"סינכרון אחרון: $","userbar_no_internet_connection":"לא מקוון","userbar_preferences":"העדפות","userbar_sync_in_progress":"מסנכרון...","userbar_user_name_for_unregistered_mode":"הרשם לסנכרן","whatsnew_title":"מה חדש","whatsnew_label_pro_accounts":"וונדרליסט פרו","whatsnew_label_comments":"הערות","whatsnew_label_voice":"קלט קולי","whatsnew_label_groupbilling":"מחירות צוות","whatsnew_copy_comments":"תשמור במקום אחד את כל שיחותיך בקשר למשימותיך בעזרת הערות בוונדרליסט פרו. תשאיר הערה, הארה או תשאל שאלה לגבי משימה ממשימותיך כדי לשפר משמעותית את התקשורת עם הצוות שלך.","whatsnew_copy_pro_accounts":"הוסף הערות, הקצה משימות, הוסף קבצים ותיצור תת-משימות ללא הגבלה עם וונדרליסט פרו, כדי להספיק יותר, וביחד.","whatsnew_copy_voice":"הקלק על המיקרופון כדי להכתיב את משימותיך, או תקליט תזכיר קולי ותצרף אותו כקובץ.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"הירשם לניסוי וונדרליסט פרו ותצרף קובץ.","label_add_new_file":"הוסף קובץ...","file_uploaded_unsuccessfully":"העלאת $ נכשלה. אנא נסה שוב.","file_uploaded_failed":"ההעלאה נכשלה. אנא נסה שוב.","file_uploaded_failed_deleted":"העלאת $ נכשלה היות והקובץ נמחק מהדיסק","label_are_you_sure_permanently_delete_$_file":"אתה בטוח שברצונך למחוק את הקובץ \"$\" מוונדרליסט??","upload_file_was_not_synced_yet":"נא לסנכרן","upload_file_not_synced_yet":"לא מסונכרן","placeholder_add_comments":"הוסף הערה...","placeholder_reply":"השב...","button_label_go_pro_to_comment":"הפוך לפרו כדי להעיר","comment_request_failed":"מצטערים, לא הצלחנו לטעון הערות. אנא נסה שוב.","comment_load_earlier":"צפה בעוד הערות","coachmark_no_current_comments":"אין עדיין הערות.\\nתתחיל את השיחה שלך כאן.","coachmark_comments_not_available":"מצטערים, לא הצלחנו לטעון הערות קודמות. אנא נסה שוב בעוד כמה רגעים.","notification_$_commented_on_$":"$1$ העיר על $2$","notification_$_and_$_commented_on_$":"$1$  ו-$2$ העירו על $3$","notification_$_and_$_others_commented_on_$":"$1$  ו-$2$ אחרים העירו על $3$","comments_requires_account":"הישרם לניסוי וונדרליסט ותוסיף הערה.","non_pro_trial_free_limit_reached":"סיימת תקופת נסיון בחינם.","non_pro_trial_write_next_comment_$":"תוכל להוסיף עוד הערה $.","non_pro_trial_upload_next_file_$":"תוכל להוסיף עוד קובץ $.","non_pro_trial_assign_next_to_do_$":"תוכל להקצות עוד משימה $.","button_signup_or_login":"הרשם או התחבר","button_it_is_completely_free":"זה לגמרי בחינם","label_free_download_for_platforms":"זמין בחינם לאייפון, אייפאד, אנדרואיד, חלונות ומאק","label_wunderlist_to_get_things_done":"יותר מ-5 מיליון אנשים משתמשים בוונדרליסט כדי לסיים משימות.","label_people_who_use_wunderlist":"מי כבר משתמש בוונדרליסט:","label_wunderlist_uses":"בין אם לניהול העסק שלך, שיתוף מישהו אהוב ברשימת קניות פשוט כדי לעקוב אחר חיי היומיום, וונדרליסט היא אפליקצית המשימות הטובה ביותר בשבילך, לצוות שלך או למשפחה שלך.","label_install_browser_extension":"התקן את התוסף לדפדפן","label_install_chrome_browser_extension":"התקן את התוסף לדפדפן Chrome","label_newsletter_signup":"הרשם לניוזלטר שלנו","label_know_upcoming_features":"היה בין הראשונים לדעת על אפשרויות חדשות","label_learn_more_about_wunderlist":"מידע נוסף לגבי Wunderlist","label_learn_more":"מידע נוסף...","label_your_email_address":"כתובת האימייל שלך","button_subscribe_to_newsletter":"הרשם כמנוי","button_sending_subscribe_to_newsletter":"שולח...","iyf4_usermenu_label":"Get Wunderlist Pro for Free","iyf4_notification_label":"תזמין את חבריך ותקבל פרו בחינם עד 12 חודשים!","iyf4_notification_button_label_var_a":"Start Inviting","iyf4_notification_button_label_var_b":"Invite Friends","iyf4_notification_button_label_var_c":"Get Wunderlist Pro for Free","iyf4_notification_button_label_var_d":"Share Wunderlist Pro","iyf4_dialog_invite_headline_$":"תזמין את חבריך ותקבל פרו בחינם עד $ חודשים!","iyf4_dialog_invite_headline_incentive":"12 חודשים בחינם","iyf4_dialog_invite_incentive_$":"$ וונדרליסט, נעניק לשניכם חודש אחד של וונדרליסט פרו בחינם (עד ל-12 חודשים מקסימום)","iyf4_dialog_invite_incentive_terms":"לכל חבר שמצטרף","iyf4_dialog_tweet":"I love organizing my life with Wunderlist. Get a month of Wunderlist Pro for free here:","iyf_notification_label":"תציע וונדרליסט לחבריך ותקבל פרו בחינם עד 12 חודשים!","iyf_notification_button_label":"הפוך לפרו!","iyf_dialog_step1_headline":"קבל חשבון פרו בחינם","iyf_dialog_step1_subheadline":"בשלושה צעדים קלים.","iyf_dialog_step1_instruction1_headline":"תתחיל להזמין את חבריך","iyf_dialog_step1_instruction1_subheadline":"באמצעות פייסבוק, טוויטר או דוא\"ל.","iyf_dialog_step1_instruction2_headline":"חבריך נרשמים","iyf_dialog_step1_instruction2_subheadline":"תמתין להם להצטרף לוונדרליסט","iyf_dialog_step1_instruction3_headline":"תהנה מחשבון הפרו שלך","iyf_dialog_step1_instruction3_subheadline":"חודש נוסף תמורת כל חבר שמצטרף","iyf_dialog_step1_instruction3_subheadline_$_plural":"חודש נוסף תמורת כל $ חברים שמקבלים","iyf_dialog_step1_next_button":"תתחיל להזמין","iyf_dialog_step2_subheadline":"לקבל חשבון פרו שלך בחינם","iyf_dialog_step2_divider_label":"שתף את הלינק","iyf_dialog_share_on_facebook":"שתף בפייסבוק","iyf_dialog_post_on_twitter":"טוויט בטוויטר","iyf_dialog_email_placeholder":"הכניס כתובת דוא\"ל...","iyf_dialog_more_placeholder":"תוסיף עוד אחד...","iyf_dialog_step3_headline":"תודה ששיתפת","iyf_dialog_step3_subheadline":"תמתין לחבריך להצטרף","iyf_dialog_step3_success_headline":"הזמנות שנשלחו בהצלחה","iyf_dialog_step3_success_subheadline":"נודיע לך מיד כשחשבון הפרו שלך יהיה מוכן.","iyf_dialog_step3_invite_more":"תזמין עוד אנשים","meta_title":"Wunderlist 2: אפליקציית המשימות היפה והפשוטה שלך ברשת","meta_description":"יותר מחמישה מיליון אנשים כבר משתמשים בוונדרליסט לנהל משימות, רשימות ולהביא אותן לסיומן. וונדרליסט היא התוכנה הטובה ביותר בשבילך, הצוות שלך ומשפחתך.","meta_keywords":"6wunderkinder, פרודקטיביות, שיתוף, ניהול משימות, מנהל משימות to-do, מטלה, רשימה, משימות, gtd, ארגון, תכנון, רשימת קניות, תזכורות, תת-משימות, רשימות חכמות, רשימת מצרכים, רשימת סרטים, רשימה משותפת...","enable_desktop_notifications_text":"הקלק \"מאשר\" ואז \"אפשר\" בדפדפן כדי להפעיל הודעות משלחן העבודה.","notification_add_to_browser":"תאפשר גישה לוונדרליסט בקליק אחד. תוסיף אפליקצית וונדרליסט לאינטרנט לדפדפן שלך עכשיו.","notification_add_extension_to_browser":"שמור בקלות את כל התוכן האהוב עליך באינטרנט ישר ל-Wunderlist. התקן את התוסף \"Add to Wunderlist\" עבור Chrome עכשיו.","button_add_to_chrome":"הוסף לכרום","button_add_to_store_added":"הוסף","aria_activity_center_hint":"Activity Center. Hit escape to close.","aria_exit_search":"Exit Search","aria_search":"Search","aria_sort_list":"Sort List","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"User menu. Hit escape to close.","aria_assign_to_$":"Assign to $","momentjs_months":"ינואר_פברואר_מרץ_אפריל_מאי_יוני_יולי_אוגוסט_ספטמבר_אוקטובר_נובמבר_דצמבר","momentjs_monthsShort":"ינו_פבר_מרץ_אפר_מאי_יונ_יול_אוג_ספט_אוק_נוב_דצמ","momentjs_weekdays":"יום ראשון_יום שני_יום שלישי_יום רביעי_יום חמישי_יום שישי_שבת","momentjs_weekdaysShort":"א'_ב'_ג'_ד'_ה'_ו'_שבת","momentjs_weekdaysMin":"א'_ב'_ג'_ד'_ה'_ו'_שב","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[היום ב:] LT","momentjs_calendar_nextDay":"[מחר ב:] LT","momentjs_calendar_nextWeek":"dddd [ב:] LT","momentjs_calendar_lastDay":"[אתמול ב:] LT","momentjs_calendar_lastWeek":"dddd [אחרון ב:] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"ב: s%","momentjs_relativeTime_past":"לפני s%","momentjs_relativeTime_s":"כמה שניות","momentjs_relativeTime_m":"דקה","momentjs_relativeTime_mm":"d% דקות","momentjs_relativeTime_h":"שעה","momentjs_relativeTime_hh":"d% שעות","momentjs_relativeTime_d":"יום","momentjs_relativeTime_dd":"d% ימים","momentjs_relativeTime_M":"חודש","momentjs_relativeTime_MM":"d% חדשים","momentjs_relativeTime_y":"שנה","momentjs_relativeTime_yy":"d% שנים"}
};
});
define('languages/hungarian',[],function() {
return {
'name': 'hungarian',
'data': {"actionbar_print_selected_item":"Kijelölt elem nyomtatása","actionbar_print_$_selected_items_plural":"Kijelölt $ elem nyomtatása","actionbar_email_selected_item":"A kijelölt elem küldése e-mailben","actionbar_email_$_selected_items_plural":"A kijelölt $ elem küldése e-mailben","actionbar_sort_alphabetically":"Rendezés ABC sorrendben","actionbar_sort_due_date":"Rendezés esedékességi idő szerint","actionbar_sort_assignee":"Rendezés felelős szerint","api_error_account_already_exists":"Ezzel az email címmel már létezik felhasználó","api_error_connection_error":"Hoppácska! Úgy néz ki nem tudjuk elérni a szervert. Kérlek próbáld újra később!","api_error_general_error":"Hoppácska! A szervert nem lehet elérni. Kérlek próbáld újra!","api_error_incorrect_login":"A megadott email cím vagy jelszó helytelen.","api_error_incorrect_password":"A megadott jelszó helytelen.","api_error_service_down":"A WunderAPI egy fontos része jelenleg nem elérhető.","api_error_unknown":"Egy váratlan és nem kezelt hiba történt.","api_error_validation_error_unable_to_signup":"A regisztráció megadott e-mail címmel sikertelen volt.","api_error_not_a_beta_user":"Nem vagy a Wunderlist beta felhasználók tagja.","button_back":"Vissza","button_cancel":"Mégse","button_confirm":"Megerősítés","button_download":"Letöltés","button_change":"Módosítás","button_choose":"Válassz","button_connect":"Kapcsolódás","button_connect_facebook":"Kapcsolódás Facebook fiókkal","button_continue":"Folytatás","button_delete":"Törlés","button_disconnect":"Szétkapcsolás","button_dismiss":"Elrejtés","button_done":"Kész","button_edit":"Szerkesztés","button_get_started":"Kezdjük is el","button_go_back":"Vissza","button_go_back_sentence":"Vissza","button_learn_more":"Tudj meg többet","button_go_back_to_login":"Vissza a bejelentkezéshez","button_go_to_web_app":"Irány a webalkalmazás","button_join_now":"Csatlakozz most","button_log_in":"Bejelentkezés ","button_log_in_with_$":"Bejelentkezés $ szolgáltatással","button_log_out":"Kijelentkezés ","button_log_in_facebook":"Bejelentkezés Facebookkal","button_next":"következő","button_no":"Nem","button_no_due_date":"Határidő","button_ok":"OK","button_remove_due_date":"Határidő törlése","button_remove_reminder":"Emlékeztető törlése","button_email_list":"Lista küldése e-mailben","button_print_list":"Lista nyomtatása","button_reset_password":"Új jelszó igénylése","button_retry":"Újra","button_save":"Mentés","button_send":"Küldés","button_sign_up":"Regisztráció","button_sign_up_with_$":"Regisztráció $ szolgáltatással","button_sign_up_for_free":"Ingyenes regisztráció","button_sign_up_facebook":"Regisztráció Facebookkal","button_support_center":"Támogatási központ","button_subscribe":"Szuper! Igen, kérem!","button_try_again":"Próbáld újra","button_try_wunderlist":"Wunderlist kipróbálása","button_yes":"Igen","coachmark_all_list_empty":"Meg nem adtál hozzá semmit. Gyerünk, addj hozzá valamit.","coachmark_completed_list_empty":"Nem fejeztél be egyetlen feladatot sem. Gyerünk, jelöld be az elvégzett feladatokat!","coachmark_no_search_results":"Nincs találat","coachmark_sharing_invite_friends_heading":"Barátok meghívása","coachmark_sharing_invite_friends_text_$":"A “$” listában a barátaid létrehozhatnak, törölhetnek vagy késznek jelölhetnek elemeket.","coachmark_sharing_recent_no_contacts_heading":"Nincs legutóbbi kapcsolat","coachmark_sharing_recent_no_contacts_text_$":"Írj be egy e-mail címet vagy keresd meg a címjegyzékedben. Ha hozzáadtad, utána a “$” listában létrehozhat, törölhet vagy késznek jelölhet elemeket.","coachmark_assigned_to_me_list_empty":"Nincs hozzád rendelt feladat","coachmark_conversations_list_empty":"Nincs elérhető beszélgetés.","coachmark_starred_list_empty":"Nincsenek csillagozott elemek","coachmark_today_list_empty":"Gratulálunk! Nincs lejárt vagy régebben lejárt feladatod mára","coachmark_week_list_empty":"Szabadságon vagy? A következő 7 napra nincs feladatod","error_list_not_found":"A keresett lista nem található","error_share_not_created":"Hiba történt a lista megosztásakor. Próbáld meg újra.","error_task_not_found":"A keresett elem nem található","error_page_not_found":"Az oldal nem található","error_title_not_found":"Nem található","label_are_you_sure_permanently_delete_item":"Biztos, hogy véglegesen törlöd ezt az elemet?","label_are_you_sure_permanently_delete_item_plural":"Biztos, hogy véglegesen törlöd ezeket az elemeket?","label_activity_center":"Értesítési központ","label_are_you_sure_permanently_delete_$_list":"Biztos, hogy véglegesen törlöd a “$” listát?","label_are_you_sure_permanently_delete_$_task":"Biztos, hogy véglegesen törlöd a “$” elemet?","label_are_you_sure_permanently_delete_task_plural":"Biztos hogy véglegesen törölni szeretné ezeket a tételeket?","label_are_you_sure_permanently_delete_$_subtask":"Biztos hogy véglegesen törölni szeretné a: “$” részfeladatot?","label_cant_undo":"Ezt nem vonhatod vissza.","label_completed_tasks_heading":"1 befejezett feladat","label_$_completed_tasks_heading_plural":"$ befejezett feladat","label_connecting":"Csatlakozás...","label_minisite_description_line_1":"Vezess listát a fontos teendőkről.","label_minisite_description_line_2":"A Wunderlist ingyen elérhető minden nagyobb platformon.","label_minisite_share_deleted_or_no_access":"Törölt elem vagy már nincs hozzá jogosultságod.","label_minisite_contact_sender_for_info":"További információkhoz vedd fel a kapcsolatot azzal a személlyel, aki megosztotta veled a listát.","label_minisite_$_invited_you_to_the_list_$":"$1 meghívott a $2 listába","label_minisite_empty_list_$":"A lista üres, segíts az indulásban. Nyomd meg a belépés gombot fent és addj hozzá elemeket a $ listához.","label_day_0":"V","label_day_1":"H","label_day_2":"K","label_day_3":"Sze","label_day_4":"Cs","label_day_5":"P","label_day_6":"Szo","label_delete_file":"Fájl törlése","label_delete_list":"Lista törlése","label_delete_task":"Tétel törlése","label_delete_task_plural":"Elemek Törlése","label_delete_subtask":"Részfeladat törlése","label_due_$":"Késik $","label_due_on":"Határidő $","label_due_date":"Határidő","label_email":"E-mail","label_every":"minden","label_loading":"Töltés...","label_logging_out":"Kijelentkezés...","label_name":"Név","label_newsletter":"Wunderlist Hírlevél","label_none":"Nincs","label_notification":"Értesítés","label_oops":"Hoppá!","label_or":"vagy","label_password":"Jelszó","label_relative_date_today":"Ma","label_relative_date_today_with_date":"Ma, $","label_relative_date_today_mid_sentence":"ma","label_relative_date_tomorrow":"Holnap","label_relative_date_tomorrow_with_date":"Holnap, $","label_relative_date_tomorrow_mid_sentence":"holnap","label_relative_date_yesterday":"Tegnap","label_remind_me_at_$":"Emlékeztess ekkor: $","label_reminder":"Emlékeztető","label_reminder_message_$":"Csak egy baráti emlékeztető: $","label_repeat_every_day":"Ismétlés mindennap","label_repeat_every_week":"Ismétlés minden héten","label_repeat_every_month":"Ismétlés minden hónapban","label_repeat_every_year":"Ismétlés minden évben","label_repeat_custom":"Egyéni","label_repeat_day":"Mindennap","label_repeat_day_$_plural":"Minden $. napon","label_repeat_month":"Minden hónapban","label_repeat_month_$_plural":"Minden $. hónapban","label_repeat_week":"Minden héten","label_repeat_week_$_plural":"Minden $. héten","label_repeat_never":"Csak egyszer","label_repeat_year":"Minden évben","label_repeat_year_$_plural":"Minden $. évben","label_reset_password":"Új jelszó igénylése","label_rights_reserved":"Minden jog fenntartva","label_still_fetching_tasks":"Teendők letöltése folyamatban...","label_sync":"Szinkronizálás","label_time_am":"de.","label_time_day_plural":"nap","label_time_week_plural":"hét","label_time_month_plural":"hónap","label_time_pm":"du.","label_time_year_plural":"év","label_assign_to":"Felelős","label_unassigned":"Nincs felelőse","label_assign_me":"Én","label_created_$":"Létrehozva: $","label_created_by_$":"Létrehozva $ által","label_created_on_$":"Létrehozva ekkor: $","label_created_$_by_$":"Létrehozva $1  $2 által","label_created_by_$_on_$":"$1 által létrehozva ekkor: $2","label_completed_$":"$ befejezve","label_completed_on_$":"Elvégezve $","label_completed_$_by_$":"Elvégezve $1 $2 által","label_completed_by_$_on_$":"Elvégezte $1 $2 napon","login_add_photo_hint":"Tedd egyedivé Wunderlist fiókodat, töltsd fel egy fényképed.","login_already_have_account":"Már van fiókod?","login_email_not_valid":"Kérjük, érvényes e-mail címed adj meg.","login_empty_name":"Kérjük add meg a neved.","login_empty_password":"Kérjük adj meg egy jelszót.","login_password_not_valid":"Kérjük, érvényes jelszót adj meg.","login_empty_email":"Kérjük adj meg egy e-mail címet.","login_enter_name":"Ki vagy?","login_enter_password":"Már majdnem kész","login_enter_password_hint":"Válassz jelszót Wunderlist fiókod beállításának befejezéséhez.","login_forgot_password":"Elfelejtett jelszó","login_forgot_password_heading":"Elfelejtettél valamit?","login_forgot_password_text":"Add meg a regisztrációdhoz tartozó e-mail címed és elküldjük neked a jelszó visszaállításához szükséges linket.","login_no_account_yet":"Még nincs fiókod?","login_password_changed":"Jelszó frissítve","login_password_not_match":"A megadott jelszavak nem egyeznek.","login_password_reset_email_has_been_sent":"Ellenőrizd az e-mail fiókod, a jelszó helyreállítás instrukcióiért.","login_reset_password_heading":"Itt az ideje, hogy megadj egy új jelszót!","login_reset_password_success":"Nyomd meg a lenti gombot és visszaléphetsz a Wunderlist-be.","login_reset_password_success_heading":"Hurrá! A jelszavad sikeresen meg lett változtatva.","login_password_too_short":"A jelszónak legalább 5 karaktert tartalmaznia kell.","login_sign_up":"Regisztráció.","login_want_to_try_again":"Megpróbálod újra?","login_accept_terms":"A belépéssel elfogadod a következőket: $1 és $2","logout_timeout_title":"Szinkronizálási hiba","logout_timeout_text":"Nem tudjuk szinkronizálni az adataidat. Próbáljuk újra vagy ki akarsz lépni?","mobile_tutorial_welcome_to":"Üdvözli a","mobile_tutorial_wunderlist_subtitle":"szép és egyszerű feladatlista","notifications_desktop_enable_heading":"Engedélyezed az asztali értesítéseket?","notifications_no_notifications":"Nincs értesítés","notifications_no_notifications_message":"A megosztott listák meghívóit és más értesítéseket találod itt","notifications_event_accept":"Elfogad","notifications_event_accepted":"Elfogadva","web_upgrade_ie9_not_supported":"A Wunderlist nem támogatja az Internet Explorer 9 böngészőt. Kérjük használd a $ vagy $ böngészőt.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Úgy látjuk, hogy érintőképernyős eszközt használsz. Szeretnéd engedélyezni az érintőképernyős eszközre készült felületet? Ezt bármikor megváltoztathatod a beállításokban.","web_setting_enable_touch_for_$":"Érintőképernyős használat bekapcsolása $ eszközön","web_settings_text_refresh_may_be_required":"Lehet, hogy frissíteni kell","rate_label":"Értékeld a Wunderlistet","rate_app_heading":"Írj értékelést a Wunderlist-ről","rate_app_message_web_chrome":"Köszönjük, hogy a Wunderlist-et választottad. Szívesen fogadjuk a visszajelzésed! Kérjük értékeld a Wunderlist-et a Chrome Web Store-ban ★★★★★","rate_app_button_later":"Emlékeztess később","rate_app_button_no":"Köszönöm nem","rate_app_button_yes":"Értékeld a Wunderlist-et","placeholder_add_due_today_to_inbox":"Elem hozzáadása mai határidővel a \"Bejövő\" mappába...","placeholder_add_list":"Új lista...","placeholder_add_subtask":"Részfeladat hozzáadása","placeholder_add_starred_to_inbox":"Egy megcsillagozott elem hozzáadasa a következőhöz: \"Bejövő\"...","placeholder_add_task_to_$":"Új teendő hozzáadása a “$” listához","placeholder_add_to_inbox":"Elem hozzáadása a mappába: \"Bejövő\"","placeholder_new_list":"Új lista","placeholder_remind_me":"Emlékeztess","placeholder_search":"Keresés...","placeholder_sharing_search":"Név vagy e-mail cím...","placeholder_set_due_date":"Határidő","browser_outdated_heading":"Uh oh, a böngésződ elavult","browser_outdated_update":"Frissítened kell a böngésződet","browser_outdated_explanation":"A Wunderlist a legfrissebb és legjobb technológiát használja. A használatához töltsd le a böngésződ legfrissebb verzióját.","prenamed_list_movies":"Megnézendő filmek","prenamed_list_private":"Személyes","prenamed_list_shopping":"Bevásárlás","prenamed_list_wishlist":"Kívánságlista","prenamed_list_work":"Munka","prenamed_list_read_later":"Később olvasom el","settings_account_change_email":"Email cím módosítása","settings_account_change_password":"Jelszó módosítása","settings_account_delete_confirmation":"Írd be: \"Biztos vagyok benne\"","settings_account_delete_confirmation_text":"Biztos vagyok benne","settings_account_drop_image":"Dobj egy képet ide","settings_account_connect_facebook_account":"A Wunderlist profilod Facebook-kal való összekötése egyszerűvé, gyorssá és könnyűvé teszi a listáid megosztását.","settings_general_12_hour":"12 órás","settings_general_24_hour":"24 órás","settings_general_confirm_deletion":"Kérdés, mielőtt kitörölnél elemeket","settings_general_create_new_tasks":"Új elemek hozzáadása","settings_general_date_format":"Dátum formátum","settings_general_language":"Nyelv","settings_general_start_of_week":"A hét kezdőnapja","settings_general_start_of_week_sunday":"Vasárnap","settings_general_start_of_week_saturday":"Szombat","settings_general_start_of_week_monday":"Hétfő","settings_general_sound_task_completion":"Hangjelzés engedélyezése új teendő elvégzésekor","settings_general_sound_new_notifications":"Hangjelzés engedélyezése új értesítésnél","settings_general_print_done_tasks":"Befejezett feladatok nyomtatása","settings_general_tasks_bottom":"Lista aljára","settings_general_tasks_top":"Lista tetejére","settings_general_time_format":"Időformátum","settings_heading_team":"Üzleti","settings_heading_about":"Rólunk","settings_heading_account":"Felhasználó","settings_heading_general":"Általános","settings_heading_notification":"Értesítések","settings_heading_shortcuts":"Gyorsbillentyűk","settings_heading_sidebar":"Oldalsáv","settings_imprint":"Impresszum","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"Emlékeztess a fontos eseményekre:","settings_notifications_notify_me_on_text":"Értesítünk a változásokról, ha valaki elfogadja a meghívásod egy megosztott listába vagy valaki hozzáad egy új feladatot vagy elvégzettnek jelöl a megosztott listáidban.","settings_sidebar_smart_lists_title":"Mutasd ezeket az Okos listákat az oldalsávban","settings_sidebar_smart_lists_auto":"Autómatikus","settings_sidebar_smart_lists_hidden":"Elrejtett","settings_sidebar_smart_lists_visible":"Látható","settings_sync_full":"Szinkronizálás most","settings_account_account_backup":"Fiók mentése","settings_account_restore_backup":"Mentett adatok visszatöltése","settings_account_backup_description":"A mentésben benne lesz minden listád, feladatod, részfeladatod, megjegyzésed és emlékeztetőd. Figyelj arra, hogy nem lesznek benne azok a listák, fájlok, megjegyzések és listatagok, amelyeket megosztottak veled és az alkalmazás előző beállításai sem.","settings_account_data_is_being_processed":"Türelmet kérünk! A mentésed folyamatban. Ha minden elkészült e-mailt fogunk küldeni.","settings_account_change_password_error":"Hiba történt a jelszó módosítása közben. Kérjük próbáld újra.","settings_account_click_to_download_backup":"Kattints a letöltéshez","settings_account_create_backup":"Mentés készítése","settings_account_current_password":"Jelenlegi jelszó","settings_account_delete_account":"Fiók törlése","settings_account_delete_account_confirm":"Egészen biztos, hogy törölni szeretnéd a felhasználód?","settings_account_delete_account_confirm_text":"Ha törli fiókját, töröl minden listát és azok elemeit véglegesen és visszavonhatatlanul.","settings_account_fetching_data":"Adatok letöltése...","settings_account_new_password":"Új jelszó ","settings_account_repeat_new_password":"Jelszó ismét: ","settings_account_right_click_and_save_as":"Jobb gombbal kattintás ás mentés","settings_third_party_libraries":"Licenszek","settings_background_credits":"A háttérképek készítői","settings_notifications_email_enabled":"Értesítések emailben","settings_notifications_desktop_enabled":"Asztali értesítések","settings_notifications_push_enabled":"Azonnali értesítések","settings_privacy_policy":"Adatvédelem","settings_shortcuts_arrow_keys":"Nyíl billentyűk","settings_shortcuts_delete_item":"Kiválasztott lista vagy tétel törlése","settings_shortcuts_mark_done":"Kiválasztott tételek \"Kész\"-nek jelölése","settings_shortcuts_mark_starred":"Kiválasztott tételek \"Csillagozott\"-nak jelölése","settings_shortcuts_new_list":"Új lista készítése","settings_shortcuts_new_task":"Új teendő hozzáadása","settings_shortcuts_open_all_smart_list":"\"Összes\" okoslista megnyitása","settings_shortcuts_open_assigned_smart_list":"Kiosztott feladataim okoslista megnyitása","settings_shortcuts_open_conversations_smart_list":"'Beszélgetések' okoslista megnyitása","settings_shortcuts_open_done_smart_list":"\"Elvégzett\" okoslista megnyitása","settings_shortcuts_open_inbox":"Beérkezők megnyítása","settings_shortcuts_open_preferences":"Beállítások megnyítása","settings_shortcuts_open_search":"Keresőmezőre ugrás","settings_shortcuts_open_starred_smart_list":"A \"Csillagozott\" okoslista megnyitása","settings_shortcuts_open_today_smart_list":"A \"Ma\" okoslista megnyitása","settings_shortcuts_open_week_smart_list":"A \"Hét\" okoslista megnyitása","settings_shortcuts_reset":"Alapértelmezések visszaállítása","settings_shortcuts_select_all_tasks":"Összes elem kiválasztása","settings_shortcuts_show_more":"További elemek megjelenítése","settings_shortcuts_hide":"Elrejt","settings_shortcuts_show_notifications":"Értesítési központ mgjelenítése","settings_shortcuts_step_through_list":"Listák közötti lépkedés","settings_shortcuts_step_through_task":"Elemek közötti lépkedés","settings_terms_of_use":"Felhasználási feltételek","settings_account_header_free":"Ingyenes","settings_account_header_unregistered":"Regisztráció","settings_account_header_account_$":"$ fiókja","settings_account_pro_description":"Írj megjegyzéseket, csatolj fájlokat a feladataidhoz, oszd meg ezeket a munkatársaiddal. A csapatmunka sohasem volt ennyire egyszerű!","settings_account_register_wunderlist_description":"Ha regisztrálsz a Wunderlist-re a listáidat minden eszközödre szinkronizálhatod.","settings_manage_subscription_button":"Előfizetés kezelése","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Yay, $ vagy!","settings_account_header_pro_description":"A Wunderlist Pro a legjobb eszköz a projektjeid kezelésére. Hívd meg barátaidat és munkatársaidat az együttműködésre és a dolgok működni fognak!","settings_upgrade_to_pro_label":"Frissített fiók $","settings_label_pro_account":"Pro fiók","settings_label_purchased_from_$":"Letöltve innen: $","settings_label_purchased_from_$_by_$":"Letöltve innen: $1 $2 által","settings_label_expires_in_$":"Lejárata $","setting_label_next_billing_date":"Következő számla esedékes: $","setting_label_cancel_subscription":"Előfizetés megszüntetése","setting_heading_cancel_subscription":"Biztosan vissza akarod mondani a Wunderlist Pro előfízetésedet? ","setting_description_cancel_subscription":"Ha lejár az előfizetésed minden adatod elérhető marad, de csak az alapfunkciókat fogod tudni használni.","setting_label_cancel_subscription_success":"Az előfizetésed megszüntetése megtörtént.","settings_label_invoices":"Számlák","settings_label_become_a_pro":"Pro fiók választása","settings_payment_info_expires_$_relative":"Lejárata $","settings_payment_info_expires_$_absolute":"Lejár $1 nap múlva: $2","settings_manage_subscription_error":"Hiba történt a fiókod elérésekor.","group_billing_packages_title":"Előfizetések minden üzleti ügyfél részére","group_billing_packages_text":"Wunderlist for Business provides you with all the features you need to work smarter as a team at an affordable price. Simply select the right plan for your business now.","group_billing_plan_table_team_size":"Csapat mérete","group_billing_plan_table_price":"Ár","group_billing_plan_table_package_name_$":"$ tag","group_billing_buy_button_label":"Megvásárlás","group_billing_$_off":"$ megtakarítás","group_billing_larger_team_$":"Nagyobb a csapat? $","group_billing_contact_us":"Lépj kapcsolatba velünk!","group_billing_downgrade_error_$_$":"Ha $1 tagú csapatot szeretnél, akkor törölnöd kell $2 tagot.","group_billing_manage_team":"Kattints ide a csapatod kezeléséhez.","group_billing_button_label_manage":"Kezelés","group_billing_team_plan_title":"A Wunderlist Pro előfizetésed","group_billing_team_plan_text":"A Wunderlist Pro a csapatod méretével együtt növelhető! Az új tagokat nagyon könnyen hozzáadhatod, csak írd be az e-mail címüket alul. Nem feltétele a hozzáadásnak, hogy már tagja legyen a Wunderlist-nek.","group_billing_upgrade_button_label":"Előfizetés megváltoztatása","group_billing_upgrade_plan_button_label":"Frissítés","group_billing_Downgrade_plan_button_label":"Visszalépés","group_billing_view_plans_button_label":"Előfizetési lehetőségek","group_billing_manage_team_header":"Csapattagok kezelése","group_billing_email_address_input_placeholder":"E-mail cím","group_billing_manage_count_$_of_$":"$1 / $2","group_billing_cancel_team_plan":"Wunderlist Pro előfizetés megszüntetése","group_billing_search_coachmark":"A hozzáadáshoz csak a munkatársaid e-mail címét kell beírnod és megkapják a Pro fiókot.","group_billing_cancel_header":"Biztosan vissza akarod mondani a csapatod Wunderlist Pro előfízetését? ","group_billing_change_plan_confirmation_$_$_$":"Könnyen módosíthatod az előfizetésed. Ha $1 tagú csapatod szeretnél, akkor az ára $2 a következő számlázási időszaktól, amelynek kezdete $3. Ezt a módosítást szeretnéd?","group_billing_cancel_text":"A Pro előfizetésed a hónap végéig használhatod és új számlát nem fogunk küldeni. Továbbra is láthatod a Pro előfizetéshez tartozó szolgáltatásokat, például a csatolt fájlokat, de nem módosíthatod azokat.","error_goup_billing_user_already_pro":"Ennek a személynek már Wunderlist Pro fiókja van. Az ajándék Pro fiókot add másik kollégádnak!","error_group_billing_wait_subscription_runs_out":"A fizetés előtt meg kell várnod, amíg az élő előfizetésed lejár. Lejárata: $","button_label_buy_wunderlist_for_business":"Tovább a Wunderlist üzleti változathoz","benefit_payment_service_unavailable":"A fizetési szolgáltatás nem elérhető.","benefit_name":"Wunderlist Pro","benefit_header_$":"Légy $","benefit_header_description":"A csapatmunka sohasem volt ennyire egyszerű! 4 nyomós érvünk is van a Wunderlist Pro használata mellett.","benefit_button_buy_monthly":"Havonta","benefit_assign_tasks_title":"Adj feladatokat","benefit_assign_tasks_description":"Barátaidnak és munkatársaidnak könnyedén átadhatsz feladatokat  és nyomon követhetet azok állapotát.","benefit_unlimited_subtasks_title":"Korlátlan részfeladat","benefit_unlimited_subtasks_decription":"A jobb hatásfok érdekében a nagyobb feladatokat oszd fel részfeladatokra — megkötések nélkül.","benefit_comments_title":"Megjegyzések","benefit_comments_description":"Kezdj el beszélgetni a csapatod tagjaival a feladatokról. Írj értékelést, tegyél fel kérdéseket vagy addj hozzá hasznos információkat a feladatokhoz.","benefit_backgrounds_update_$":"Az új háttérképek használatához $ fiók szükséges.","benefit_additional_backgrounds_title":"Új háttérképek","benefit_additional_backgrounds_description":"Fedezz fel 8 új csodálatos háttérképet és tedd egyedivé a Wunderlistet úgy, ahogy azt Te szereted!","benefit_files_title":"Fájlok","benefit_files_description":"Csatolj fáljokat a feladatokhoz és oszd meg azokat a csapatod tagjaival.","benefit_coming_soon":"Hamarosan","benefit_assign_become_pro":"Adj feladatokat a munkatársaidnak a Wunderlist-tel","benefit_label_accept_terms":"A Wunderlist Pro előfizetéshez a következőket el kell fogadnod: $1 és $2.","benefit_label_need_more_subtasks":"Több részfeladatot szeretnél?","sharing_connect_facebook_sharing":"Kapcsold össze a Wunderlist és a Facebook fiókodat, hogy meghívhasd a Facebook ismerőseidet","sharing_facebook_apprequest_message_$user_$list":"“$1” meg akarja veled osztani a következő listát: “$2”","sharing_invite":"Tagok meghívása","sharing_invite_friends":"Barátok meghívása","sharing_inviting_requires_account":"Regisztrálj, ha meg akarod hívni a barátaidat vagy munkatársaidat a listádba.","sharing_leave_action":"Biztos vagy benne, hogy elhagyod ezt a listát?","sharing_leave_button":"Kilépés a megosztott listából","sharing_list_members":"Lista tagjai","sharing_list_owner":"Tulajdonos","sharing_list_pending_member":"Függőben","sharing_tab_recents":"Legutóbbiak","sharing_shared_with_you_by":"Veled megosztotta: ","smart_list_assigned_to_me":"Kiosztott feladataim","smart_list_conversations":"Beszélgetések","smart_list_all":"Összes","smart_list_completed":"Befejezve","smart_list_inbox":"Beérkező","smart_list_starred":"Csillagozott","smart_list_today":"Ma","smart_list_week":"Hét","label_tell_friends":"Mondd el barátaidnak","social_sharing_heading":"Mondd el barátaidnak a kedvenc közösségi oldaladon!","social_sharing_dialog_headline":"Tetszik a Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"Később","social_sharing_button_no_thanks":"Köszönöm nem","social_sharing_button_facebook":"Megosztás","social_sharing_button_follow_us":"Kövess minket","social_sharing_button_like_us":"Lájkolj minket","social_sharing_heading_thanks":"Kövess minket a legfrissebb Wunderlist hírekért.","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"A Wunderlist szép és egyszerű feladatkezelőt használom. A www.wunderlist.com címen ingyen elérhető.","twitter_sharing_placeholder":"A @Wunderlist szép és egyszerű feladatkezelőt használom. A www.wunderlist.com címen ingyen elérhető.","tutorial_welcome_notes_title":"Jegyzetek","tutorial_welcome_notes_text":"A leválasztható jegyzetek segítségével a Wunderlisten kívűl is jegyzetelhetsz.","tutorial_welcome_notifications_title":"Értesítési központ","tutorial_welcome_notifications_text":"Állítsd be hogyan kéred az emlékeztetőket. A meghívókat és a megosztott listák módosításait e-mailben küldjük el és asztali értesítéseket akarsz kapni vagy mindent megnézhetsz az Értesítési központban.","tutorial_welcome_sharing_title":"Barátok meghívása","tutorial_welcome_sharing_text":"Most még könnyebb meghívni a barátokat vagy a kollegákat hogy segítsenek a feladatokban.","tutorial_welcome_subtasks_title":"Ismétlődő teendők, emlékeztetők és részfeladatok","tutorial_welcome_subtasks_text":"A Wunderlist-ben megújult a részletes nézet, amellyel könnyebben lehet ismétlődő teendőket, emlékeztetőket és részfeladatokat hozzáadni","tutorial_welcome_user_title":"Csak rólad szól!","tutorial_welcome_user_text":"Változtasd meg a felhasználói beállításaid, ellenőrizd a szinkronizálás állapotát, és válassz egyéni hátteret.","tutorial_welcome_newsletter_subscribe":"E-mail emlékeztetőt kérek fontos frissítésekről és új szolgáltatásoktól a Wunderlist-tel kapcsolatban. ","tutorial_feature_pro_title":"Ez Wunderlist Pro szolgáltatás","share_list_email_signature":"A Wunderlist feladatkezelővel küldve.\\nSzép és egyszerű feladatkezelő - ingyenesen elérhető iPhone, iPad, Android, Mac, Windows PC eszközökre és böngészőben! – www.wunderlist.com","userbar_$_unsynced_item":"$ szinkronizálatlan elem","userbar_$_unsynced_item_plural":"$ szinkronizálatlan elem","userbar_account_settings":"Felhasználó beállítások","userbar_change_background":"Háttér megváltoztatása","userbar_last_synced_$":"Legutóbb szinkronizálva $","userbar_no_internet_connection":"Offline","userbar_preferences":"Beállítások","userbar_sync_in_progress":"Szinkronizálás...","userbar_user_name_for_unregistered_mode":"Regisztráció a szinkronizáláshoz","whatsnew_title":"Újdonságok","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Megjegyzések","whatsnew_label_voice":"Hangvezérlés","whatsnew_label_groupbilling":"Csoportos árkedvezmény","whatsnew_copy_comments":"A feladatokhoz tartozó megjegyzéseket egy helyen tárolhatod a Wunderlist Pro segítségével. Írj értékelést, tegyél fel kérdéseket vagy addj hozzá hasznos információkat a feladatokhoz, elősegítve ezzel a csapatod munkáját.","whatsnew_copy_pro_accounts":"Írj megjegyzéseket, oszd ki a feladatokat, csatolj fájlokat és készíts részfeladatokat korlátok nélkül a Wunderlist Pro segítségével.","whatsnew_copy_voice":"Kattints a mikrofon ikonra és mondd el a feladataidat vagy rögzíts hangjegyzetet, amit csatolhatsz.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Regisztrálj kipróbálásra Wunderlist Pro fiókot és használhatod a fájlok hozzáadását.","label_add_new_file":"Fájl hozzáadása...","file_uploaded_unsuccessfully":"$ feltöltése nem sikerült. Próbáld újra.","file_uploaded_failed":"A feltöltés nem sikerült. Próbáld újra.","file_uploaded_failed_deleted":"$ feltöltése nem sikerült, mert nem található a merevlemezeden.","label_are_you_sure_permanently_delete_$_file":"Biztos vagy benne, hogy véglegesen törlöd a “$” fájlt a Wunderlist-ből","upload_file_was_not_synced_yet":"Kérjük szinkronizálj","upload_file_not_synced_yet":"Nincs szinkronizálva","placeholder_add_comments":"Megjegyzés hozzáadása…","placeholder_reply":"Válasz...","button_label_go_pro_to_comment":"A megjegyzések használatához Pro előfizetés szükséges","comment_request_failed":"Sajnáljuk, nem lehet betölteni a megjegyzéseket. Próbáld újra!","comment_load_earlier":"További megjegyzések betöltése","coachmark_no_current_comments":"Még nincsenek megjegyzések.\\nIde írhatod az első megjegyzésedet.","coachmark_comments_not_available":"Sajnáljuk, nem lehet betölteni az előző megjegyzéseket. Próbáld újra pár perc múlva!","notification_$_commented_on_$":"$1 megjegyzést írt a $2 feladathoz","notification_$_and_$_commented_on_$":"$1 és $2 megjegyzést írt a $3 feladathoz","notification_$_and_$_others_commented_on_$":"$1 és még $2 másik felhasználó megjegyzést írt a $3 feladathoz","comments_requires_account":"Regisztrálj kipróbálásra Wunderlist Pro fiókot és használhatod a megjegyzéseket.","non_pro_trial_free_limit_reached":"Elérted az ingyenes fiók határát!","non_pro_trial_write_next_comment_$":"Legközelebb ekkor írhatsz megjegyzést: $","non_pro_trial_upload_next_file_$":"Legközelebb ekkor csatolhatsz másik fájlt: $","non_pro_trial_assign_next_to_do_$":"Legközelebb ekkor adhatsz át másik feladatot: $","button_signup_or_login":"Regisztrálj vagy lépj be","button_it_is_completely_free":"Teljesen ingyenes","label_free_download_for_platforms":"Ingyen elérhető iPhone, iPad, Android, Windows és Mac eszközökre","label_wunderlist_to_get_things_done":"Több, mint 5 millió ember használja a Wunderlist-et a feladatainak egyszerű kezelésére.","label_people_who_use_wunderlist":"Nézd meg, ki használja még a Wunderlistet:","label_wunderlist_uses":"Ha rendezettebben szeretnéd végezni a munkádat vagy meg akarod osztani a bevásárlólistádat a házastársaddal vagy csak a mindennapos dolgaidat szeretnéd rendben tartani a Wunderlist a legjobb választás erre a feladatra, a csapatod vagy a családod számára.","label_install_browser_extension":"böngésző kiegészítő telepítése","label_install_chrome_browser_extension":"Chrome böngésző kiegészítő telepítése","label_newsletter_signup":"Felirakozás a hírlevélre","label_know_upcoming_features":"Az elsők között szeretnék értesülni az újdonságokról.","label_learn_more_about_wunderlist":"Tudj meg többet a Wunderlist-ről","label_learn_more":"Tudj meg többet...","label_your_email_address":"E-mail címed","button_subscribe_to_newsletter":"Feliratkozás","button_sending_subscribe_to_newsletter":"Küldés...","iyf4_usermenu_label":"Legyen Wunderlist Pro fiókod ingyen","iyf4_notification_label":"12 hónapig ingyenes Wunderlist Pro fiókod lehet, ha meghívod a barátaidat!","iyf4_notification_button_label_var_a":"Meghívók küldése","iyf4_notification_button_label_var_b":"Barátok meghívása","iyf4_notification_button_label_var_c":"Legyen Wunderlist Pro fiókod ingyen","iyf4_notification_button_label_var_d":"A Wunderlist Pro megosztása","iyf4_dialog_invite_headline_$":"Legyen $ hónapig ingyenes Wunderlist Pro fiókod, ha meghívod a barátaidat!","iyf4_dialog_invite_headline_incentive":"12 ingyen hónap","iyf4_dialog_invite_incentive_$":"$ Wunderlist, plusz 1 havi ingyenes Wunderlist Pro fiókod lehet (maximum 12 hónap)","iyf4_dialog_invite_incentive_terms":"Minden barátodnak, aki csatlakozik","iyf4_dialog_tweet":"Rendezettebbé tettem az életem a Wunderlist használatával. Lehet Neked is egy hónapig ingyenes Wunderlist Pro fiókod:","iyf_notification_label":"Ajánld a Wunderlist-et barátaidnak és Pro fiókod lesz 12 hónapig ingyen!","iyf_notification_button_label":"Légy Pro!","iyf_dialog_step1_headline":"Legyen ingyenes Pro fiókod!","iyf_dialog_step1_subheadline":"3 egyszerű lépésben","iyf_dialog_step1_instruction1_headline":"Küldj meghívókat a barátaidnak","iyf_dialog_step1_instruction1_subheadline":"Facebook, Twitter vagy e-mail használatával","iyf_dialog_step1_instruction2_headline":"A barátaid regisztrálnak","iyf_dialog_step1_instruction2_subheadline":"Várd meg, amíg a barátaid csatlakoznak","iyf_dialog_step1_instruction3_headline":"Élvezd az ingyenes Pro fiókodat","iyf_dialog_step1_instruction3_subheadline":"minden regisztráló személy után 1 hónap","iyf_dialog_step1_instruction3_subheadline_$_plural":"minden $ regisztráló személy után 1 hónap","iyf_dialog_step1_next_button":"Meghívók küldése","iyf_dialog_step2_subheadline":"hogy Pro fiókod legyen ingyen","iyf_dialog_step2_divider_label":"Hivatkozás megosztása","iyf_dialog_share_on_facebook":"Megosztás a Facebook-on","iyf_dialog_post_on_twitter":"Üzenet küldése Twitter-en","iyf_dialog_email_placeholder":"Adj meg egy e-mail címet...","iyf_dialog_more_placeholder":"Adj meg egy másikat...","iyf_dialog_step3_headline":"Köszönjük a megosztást","iyf_dialog_step3_subheadline":"Várd meg, amíg a barátaid csatlakoznak","iyf_dialog_step3_success_headline":"Meghívók elküldve","iyf_dialog_step3_success_subheadline":"Értesítünk, ha a Pro fiókod elérhető.","iyf_dialog_step3_invite_more":"Még több személy meghívása","meta_title":"Wunderlist 2: a szép és egyszerű feladatlista kezelő alkalmazás","meta_description":"Több, mint 5 millió ember használja a Wunderlist-et a feladatainak egyszerű kezelésére. A Wunderlist a legjobb feladatlista kezelő számodra, csapatod vagy családod számára.","meta_keywords":"6wunderkinder, productivity, collaborate, task management, task manager, to-do, todo, list, tasks, gtd, organize, plan, shopping list, reminders, subtasks, smart lists, grocery list, movie list, shared list","enable_desktop_notifications_text":"Kattints a 'Megerősítés'-re, majd az 'Engedélyez'-re, hogy bekapcsold az értesítéseket a böngésződben.","notification_add_to_browser":"A Wunderlst egy kattintásnyira van. Add hozzá a böngésződhöz a Wunderlist Web alkalmazását","notification_add_extension_to_browser":"Gyorsan le tudod menteni a kedvenc weboldalad tartalmát a Wunderlist-be. Ehhez telepítsd a Wunderlist Chrome kiegészítőjét.","button_add_to_chrome":"Hozzáadás a Chrome-hoz","button_add_to_store_added":"Hozzáadva","aria_activity_center_hint":"Aktivitás központ: nyomj Esc-et a bezáráshoz","aria_exit_search":"Kilépés a keresésből","aria_search":"Keresés","aria_sort_list":"Lista rendezése","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"Felhasználói menü: nyomj Esc-et a bezáráshoz","aria_assign_to_$":"Assign to $","momentjs_months":"január_február_március_április_május_június_július_augusztus_szeptember_október_november_december","momentjs_monthsShort":"jan_feb_már_ápr_máj_jún_júl_aug_sze_okt_nov_dec","momentjs_weekdays":"vasárnap_hétfő_kedd_szerda_csütörtök_péntek_szombat","momentjs_weekdaysShort":"vas_hét_ked_sze_csü_pén_szo","momentjs_weekdaysMin":"V_H_K_SZE_CS_P_SZO","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Ma] LT","momentjs_calendar_nextDay":"[Holnap] LT","momentjs_calendar_nextWeek":"dddd [napon] LT","momentjs_calendar_lastDay":"[tegnapt] LT","momentjs_calendar_lastWeek":"[a múlt] dddd [napon] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"%s múlva","momentjs_relativeTime_past":"%s óta","momentjs_relativeTime_s":"néhány másodperc","momentjs_relativeTime_m":"egy perc","momentjs_relativeTime_mm":"%d perc","momentjs_relativeTime_h":"egy óra","momentjs_relativeTime_hh":"%d óra","momentjs_relativeTime_d":"egy nap","momentjs_relativeTime_dd":"%d nap","momentjs_relativeTime_M":"egy hónap","momentjs_relativeTime_MM":"%d hónap","momentjs_relativeTime_y":"egy év","momentjs_relativeTime_yy":"%d év"}
};
});
define('languages/icelandic',[],function() {
return {
'name': 'icelandic',
'data': {"actionbar_print_selected_item":"Prenta valinn hlut","actionbar_print_$_selected_items_plural":"Prenta $ valda hluti","actionbar_email_selected_item":"Senda valinn hlut","actionbar_email_$_selected_items_plural":"Senda $ valda hluti","actionbar_sort_alphabetically":"Raða í stafrófsröð","actionbar_sort_due_date":"Raða eftir lokadagsetningu ","actionbar_sort_assignee":"Raða eftir meðlimi","api_error_account_already_exists":"Annar reikningur er nú þegar skráður með þessu netfangi","api_error_connection_error":"Úps, það virðist hafa komið upp villa í samskiptum við vefþjóninn. Vinsamlegast reyndu aftur.","api_error_general_error":"Úps, samband næst ekki við vefþjóninn að svo stöddu. Vinsamlegast reyndu aftur.","api_error_incorrect_login":"Netfangið eða lykilorðið sem þú slóst inn er rangt","api_error_incorrect_password":"Lykilorðið sem þú slóst inn er rangt","api_error_service_down":"Lykilatriði í WunderAPI þjónustunni liggur niðri.","api_error_unknown":"Ófyrirséð villa kom upp.","api_error_validation_error_unable_to_signup":"Okkur tókst ekki að nýskrá þig með netfanginu sem þú gafst upp.","api_error_not_a_beta_user":"Þú er meðlimur í Wunderlist prufu hópnum","button_back":"Til baka","button_cancel":"Hætta við","button_confirm":"Staðfesta","button_download":"Hlaða niður","button_change":"Breyta","button_choose":"Veldu","button_connect":"Tengjast","button_connect_facebook":"Tengjast með Facebook","button_continue":"Áfram","button_delete":"Eyða","button_disconnect":"Aftengjast","button_dismiss":"Hunsa","button_done":"Lokið","button_edit":"Breyta","button_get_started":"Hefjum fjörið","button_go_back":"Til baka","button_go_back_sentence":"Til baka","button_learn_more":"Lesa nánar","button_go_back_to_login":"Aftur í innskráningu","button_go_to_web_app":"Opna vefviðmót","button_join_now":"Skrá mig","button_log_in":"Innskráning","button_log_in_with_$":"Innskráning með $","button_log_out":"Útskráning","button_log_in_facebook":"Innskráning með Facebook","button_next":"Næsta","button_no":"Nei","button_no_due_date":"Engin loka dagsetning","button_ok":"OK","button_remove_due_date":"Fjarlægja loka dagsetningu","button_remove_reminder":"Fjarlægja áminningu","button_email_list":"Senda lista","button_print_list":"Prenta lista","button_reset_password":"Endursetja lykilorð","button_retry":"Reyna aftur","button_save":"Vista","button_send":"Senda","button_sign_up":"Nýskrá","button_sign_up_with_$":"Nýskrá með $","button_sign_up_for_free":"Nýskráðu þig án endurgjalds","button_sign_up_facebook":"Nýskrá með Facebook","button_support_center":"Hjálpartorgið","button_subscribe":"Snilld, já takk!","button_try_again":"Reyna aftur","button_try_wunderlist":"Prufa Wunderlist.","button_yes":"Já","coachmark_all_list_empty":"Þú hefur ekki búið til neina lið enn. Áfram nú, bættu einhverju við.","coachmark_completed_list_empty":"Þú hefur ekki enn lokið við neinn leið. Prufaðu, ljúktu við eitthvað á þínum lista!","coachmark_no_search_results":"Engar leitarniðurstöður","coachmark_sharing_invite_friends_heading":"Bjóddu vinum þínum","coachmark_sharing_invite_friends_text_$":"Vinir þínir mun geta stofnað, eytt og ljúka liðum í listanum \"$\".","coachmark_sharing_recent_no_contacts_heading":"Engir nýlegir tengiliðir","coachmark_sharing_recent_no_contacts_text_$":"Sláðu inn netfang eða leitaðu í þínum tengiliðum. Þegar þú hefur bætt vini þínum við, getur hann stofnað, eytt og lokið við liði á listanum \"$\".","coachmark_assigned_to_me_list_empty":"Það er ekkert tengt við þig","coachmark_conversations_list_empty":"Það eru engin virk samtöl","coachmark_starred_list_empty":"Þú ert ekki með neina stjörnumerkta liði","coachmark_today_list_empty":"Til lukku! Þú ert ekki með neitt á dagskrá í dag.","coachmark_week_list_empty":"Ertu í fríi? Þú ert ekki með neitt á dagskrá næstu 7 daga","error_list_not_found":"Listinn sem þú leitaðir að fannst ekki","error_share_not_created":"Vandmál kom um við að deila listanum þínum. Vinsamlegast reyndu aftur.","error_task_not_found":"Liðurinn sem þú leitar að fannst ekki","error_page_not_found":"Síða fannst ekki","error_title_not_found":"Fannst ekki","label_are_you_sure_permanently_delete_item":"Ertu viss um að þú viljir endanlega eyða þessum lið?","label_are_you_sure_permanently_delete_item_plural":"Ertu viss um að þú viljir endanlega eyða þessum liðum?","label_activity_center":"Upplýsingatorg","label_are_you_sure_permanently_delete_$_list":"Ertu viss um að þú viljir endnanlega eyða listanum \"$\"?","label_are_you_sure_permanently_delete_$_task":"Ertu viss um að þú viljir endanlega eyða liðnum \"$\"?","label_are_you_sure_permanently_delete_task_plural":"Ertu viss um að þú viljir endanlega eyða þessum liðum?","label_are_you_sure_permanently_delete_$_subtask":"Ertu viss um að þú viljir endanlega eyða undirverkefninu \"$\"?","label_cant_undo":"Þú munt ekki geta afturkallað þessa aðgerð.","label_completed_tasks_heading":"1 lið lokið","label_$_completed_tasks_heading_plural":"$ liðum lokið","label_connecting":"Tengist...","label_minisite_description_line_1":"Halda utan um allt sem þú vilt gera.","label_minisite_description_line_2":"Þú færð Wunderlist endurgjaldslaust fyrir flest öll helstu stýrikerfi","label_minisite_share_deleted_or_no_access":"Þessu virðist hafa verið eytt eða þú hefur ekki aðgang að því lengur.","label_minisite_contact_sender_for_info":"Vinsamlegast hafðu samband við notandann sem deildi þessum lista með þér fyrir frekari upplýsingar.","label_minisite_$_invited_you_to_the_list_$":"$1 bauð þér í listann $2","label_minisite_empty_list_$":"Listinn er tómur en þú getur hjálpað þeim að byrja. Smelltu á Nýskrá hnappinn hér að ofan og byrjaðu að bæta við liðum á listann $.","label_day_0":"SUN","label_day_1":"MÁN","label_day_2":"ÞRI","label_day_3":"MIÐ","label_day_4":"FIM","label_day_5":"FÖS","label_day_6":"LAU","label_delete_file":"Eyða skrá","label_delete_list":"Eyða listanum","label_delete_task":"Eyða lið","label_delete_task_plural":"Eyða liðum","label_delete_subtask":"Eyða undirverkefni","label_due_$":"Lokið $","label_due_on":"Þarf að ljúka þann $","label_due_date":"Loka dagsetning","label_email":"Netfang","label_every":"Á hverjum","label_loading":"Hleð...","label_logging_out":"Útskráning...","label_name":"Nafn","label_newsletter":"Fréttabréf Wunderlist","label_none":"Enginn","label_notification":"Tilkynning","label_oops":"Úps!","label_or":"eða","label_password":"Lykilorð","label_relative_date_today":"Í dag","label_relative_date_today_with_date":"Í dag, $","label_relative_date_today_mid_sentence":"í dag","label_relative_date_tomorrow":"Á morgun","label_relative_date_tomorrow_with_date":"Á morgun, $","label_relative_date_tomorrow_mid_sentence":"á morgun","label_relative_date_yesterday":"Í gær","label_remind_me_at_$":"Fá áminningu $","label_reminder":"Áminning","label_reminder_message_$":"Bara vinaleg áminning: $","label_repeat_every_day":"Endurtaka hvern einasta dag","label_repeat_every_week":"Endurtaka á viku fresti","label_repeat_every_month":"Endurtaka á mánaðar fresti","label_repeat_every_year":"Endurtaka á árs fresti","label_repeat_custom":"Sérsníða...","label_repeat_day":"Á hverjum degi","label_repeat_day_$_plural":"Á $ daga fresti","label_repeat_month":"Á mánaðar fresti","label_repeat_month_$_plural":"Á $ mánaðar fresti","label_repeat_week":"Á viku fresti","label_repeat_week_$_plural":"Á $ viku fresti","label_repeat_never":"Aldrei endurtaka","label_repeat_year":"Á árs fresti","label_repeat_year_$_plural":"Á $ ára fresti","label_reset_password":"Endursetja lykilorð","label_rights_reserved":"Allur réttur áskilinn","label_still_fetching_tasks":"Enn að sækja gögn ...","label_sync":"Samstilla","label_time_am":"Eftir miðnætti","label_time_day_plural":"dagar","label_time_week_plural":"vikur","label_time_month_plural":"mánuðir","label_time_pm":"Eftir hádegi","label_time_year_plural":"ár","label_assign_to":"Tengja við","label_unassigned":"Ótengt","label_assign_me":"Ég","label_created_$":"Stofnað $","label_created_by_$":"Stofnað af $","label_created_on_$":"Stofnað $","label_created_$_by_$":"Stofnað $1 af $2","label_created_by_$_on_$":"Stofnað af $1, $2","label_completed_$":"Lokið $","label_completed_on_$":"Lokið þann $","label_completed_$_by_$":"$1 lokið af $2","label_completed_by_$_on_$":"Lokið af $1, $2","login_add_photo_hint":"Sérsníða þinn Wunderlist aðgang með því að bæta við mynd","login_already_have_account":"Átt þú aðgang nú þegar?","login_email_not_valid":"Vinsamlegast skrifaðu gilt netfang.","login_empty_name":"Vinsamlegast skrifaðu nafn þitt.","login_empty_password":"Vinsamlegast skrifaðu lykilorð.","login_password_not_valid":"Vinsamlegast skrifaðu gilt lykilorð.","login_empty_email":"Vinsamlegast sláðu inn netfang.","login_enter_name":"Hver ert þú?","login_enter_password":"Þessu er næstum lokið","login_enter_password_hint":"Veldu þér lykilorð til að ljúka Wunderlist skráningunni","login_forgot_password":"Gleymt lykilorð","login_forgot_password_heading":"Gleymdir þú einhverju?","login_forgot_password_text":"Sláðu inn netfangið sem þú skráðir þig með, og við sendum þér hlekk til að endursetja þitt lykilorð.","login_no_account_yet":"Ertu ekki með aðgang?","login_password_changed":"Lykilorð uppfært","login_password_not_match":"Lykilorðin sem þú skrifaðir pössuðu ekki.","login_password_reset_email_has_been_sent":"Vinsamlegast kíktu á póstinn þinn og fylgdu leiðbeiningunum til að endursetja lykilorðið.","login_reset_password_heading":"Það er kominn tími á uppfærslu á lykilorði þínu.","login_reset_password_success":"Smelltu bara á hnappinn hér að neðan til að skrá þig aftur inn í Wunderlist.","login_reset_password_success_heading":"Húrra! Lykilorði þínu hefur nú verið breytt.","login_password_too_short":"Lykilorðið verður að innihalda minnst 5 stafi","login_sign_up":"Nýskráning.","login_want_to_try_again":"Viltu reyna aftur?","login_accept_terms":"Með því að skrá þig ert þú að samþykkja $1 og $2.","logout_timeout_title":"Villa við samstillingu","logout_timeout_text":"Okkur tókst ekki að samstilla þínum gögnum. Viltu reyna aftur eða útskrá þig?","mobile_tutorial_welcome_to":"Verið velkomin í","mobile_tutorial_wunderlist_subtitle":"fallegi og einfaldi verkefnalistinn þinn","notifications_desktop_enable_heading":"Virkja skjáborðstilkynningar","notifications_no_notifications":"Engin virkni","notifications_no_notifications_message":"Boð í deilda lista & önnur virkni birtist hér","notifications_event_accept":"Samþykkja","notifications_event_accepted":"Samþykkt","web_upgrade_ie9_not_supported":"Wunderlist styður ekki Internet Explorer 9. Vinsamlegast uppfærðu í $ eða $ fyrir betri upplifun.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Þú virðist vera að nota tæki með snertiskjá. Viltu virkja sérstakt snertiviðmót? Þú getur alltaf breytt þessu í þínum stillingum.","web_setting_enable_touch_for_$":"Virkja snertingu fyrir: $","web_settings_text_refresh_may_be_required":"Gæti þurft að endurhlaða","rate_label":"Gefðu Wunderlist einkunn","rate_app_heading":"Gefðu Wunderlist einkunn og umsögn","rate_app_message_web_chrome":"Takk fyrir að nota Wunderlist. Okkur þætti vænt um að heyra hvað þér finnst! Segðu okkur með því að gefa Wunderlist einkunn og umsögn í Chrome Web Store ★★★★★","rate_app_button_later":"Fá áminningu seinna","rate_app_button_no":"Nei takk","rate_app_button_yes":"Gefa Wunderlist einkunn","placeholder_add_due_today_to_inbox":"Stofna lið sem þarf að ljúka í dag í \"Innhólfið\"...","placeholder_add_list":"Stofna lista...","placeholder_add_subtask":"Bæta við undirverkefni","placeholder_add_starred_to_inbox":"Stofna stjörnumerktan líð í \"Innhólfið\"","placeholder_add_task_to_$":"Bæta lið við í \"$\"...","placeholder_add_to_inbox":"Stofna lið í \"Innhólfið\"","placeholder_new_list":"Nýr listi","placeholder_remind_me":"Fá áminningu","placeholder_search":"Leita...","placeholder_sharing_search":"Nafn eða netfang...","placeholder_set_due_date":"Skrá loka dagsetningu","browser_outdated_heading":"Ónei, þú virðist vera að nota vafra sem hefur ekki verið uppfærður","browser_outdated_update":"Vinsamlegast uppfærðu vafrann þinn","browser_outdated_explanation":"Við byggjum Wunderlist á nýjustu og bestu tækni. TIl að nota Wunderlist, sæktu nýjustu útgáfu af vafranum þínum","prenamed_list_movies":"Óséðar kvikmyndir","prenamed_list_private":"Einkamál","prenamed_list_shopping":"Innkaupalisti","prenamed_list_wishlist":"Óskalisti","prenamed_list_work":"Vinna","prenamed_list_read_later":"Lesa seinna","settings_account_change_email":"Breyta netfangi...","settings_account_change_password":"Breyta lykilorði...","settings_account_delete_confirmation":"Skrifaðu \"Ég er viss\"","settings_account_delete_confirmation_text":"Ég er viss","settings_account_drop_image":"Slepptu myndinni hér","settings_account_connect_facebook_account":"Við það að tengja Wunderlist aðganginn þinn við Facebook verður fljótlegt og auðvelt að deila lista með vinum þínum.","settings_general_12_hour":"12 tíma","settings_general_24_hour":"24 tíma","settings_general_confirm_deletion":"Staðfesta áður en ég eyði","settings_general_create_new_tasks":"Nýir hlutir bætast við","settings_general_date_format":"Snið dagsetningar","settings_general_language":"Tungumál","settings_general_start_of_week":"Upphaf vikunnar","settings_general_start_of_week_sunday":"Sunnudagur","settings_general_start_of_week_saturday":"Laugardagur","settings_general_start_of_week_monday":"Mánudagur","settings_general_sound_task_completion":"Virkja hljóð þegar lið er lokið","settings_general_sound_new_notifications":"Virkja hljóð fyrir nýjar tilkynningar","settings_general_print_done_tasks":"Sýna liði eftir að þeim er lokið","settings_general_tasks_bottom":"Neðst í listann","settings_general_tasks_top":"Efst í listann","settings_general_time_format":"Tímasnið","settings_heading_team":"Fyrirtæki","settings_heading_about":"Um","settings_heading_account":"Aðgangur","settings_heading_general":"Almennt","settings_heading_notification":"Tilkynningar","settings_heading_shortcuts":"Flýtivísanir","settings_heading_sidebar":"Hliðarstika","settings_imprint":"Fyrirtækjaupplýsingar","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"Tilkynna mér mikilvæga hluti með:","settings_notifications_notify_me_on_text":"Við sendum þér ákveðnar tilkynningar, eins og þegar einhver samþykkir boð frá þér í sameiginlegan lista, eða þegar einhver bætir í eða lýkur lið í einum af sameiginlegum lista.","settings_sidebar_smart_lists_title":"Birta þessa snjall lista í hliðarstikunni:","settings_sidebar_smart_lists_auto":"Sjálfvirkt","settings_sidebar_smart_lists_hidden":"Falið","settings_sidebar_smart_lists_visible":"Sýnilegt","settings_sync_full":"Samstilla núna","settings_account_account_backup":"Afritun","settings_account_restore_backup":"Hlaða inn afrituðum gögnum","settings_account_backup_description":"Backup data includes all your Lists, Tasks, Subtasks, Notes, and Reminders. Please note it does not include those Lists that were shared with you, Files, Comments, Shared List recipients and previous application settings.","settings_account_data_is_being_processed":"Hold tight! Your backup data is being processed. We will send you an email when everything is complete.","settings_account_change_password_error":"Villa kom upp við breytingu á lykilorði þínu. Vinsamlegast reynið aftur.","settings_account_click_to_download_backup":"Click to Download","settings_account_create_backup":"Create Backup","settings_account_current_password":"Núverandi lykilorð","settings_account_delete_account":"Eyða aðgangi","settings_account_delete_account_confirm":"Ertu viss um að þú viljir eyða aðgangi þínum?","settings_account_delete_account_confirm_text":"Við það að eyða þínum aðgangi eyðast allir listar þínir og liðir endanlega og er ekki afturkræft","settings_account_fetching_data":"Fetching data ...","settings_account_new_password":"Nýtt lykilorð","settings_account_repeat_new_password":"Endurtekið nýtt lykilorð","settings_account_right_click_and_save_as":"Right Click and Save","settings_third_party_libraries":"Leyfi","settings_background_credits":"Eigandi bakgrunns","settings_notifications_email_enabled":"Póst tilkynningar","settings_notifications_desktop_enabled":"Skjáborðstilkynningar","settings_notifications_push_enabled":"Push tilkynningar","settings_privacy_policy":"Vinsamlegast skoðaðu nýju friðhelgis skilmálana okkar.","settings_shortcuts_arrow_keys":"Örvar","settings_shortcuts_delete_item":"Eyða völdum lista eða lið","settings_shortcuts_mark_done":"Merkja valda liði sem \"Lokið\"","settings_shortcuts_mark_starred":"Merkja valda liði sem \"Stjörnumerkt\"","settings_shortcuts_new_list":"Stofna nýjan lista","settings_shortcuts_new_task":"Stofna nýjan lið","settings_shortcuts_open_all_smart_list":"Opna 'Allt' snjalllistann","settings_shortcuts_open_assigned_smart_list":"Opna \"Á minni könnu\" snjalllista","settings_shortcuts_open_conversations_smart_list":"Open 'Conversations' Smart List","settings_shortcuts_open_done_smart_list":"Opna snalllista merktir, 'Lokið'","settings_shortcuts_open_inbox":"Opna innhólf","settings_shortcuts_open_preferences":"Opna stillingar","settings_shortcuts_open_search":"Leitargluggi","settings_shortcuts_open_starred_smart_list":"Opna snalllista merktir, 'Stjörnumerkt'","settings_shortcuts_open_today_smart_list":"Opna snalllista merktir, 'Í dag'","settings_shortcuts_open_week_smart_list":"Opna snalllista merktir, 'Vika'","settings_shortcuts_reset":"Endursetja í upphafsstillingar","settings_shortcuts_select_all_tasks":"Velja alla liði","settings_shortcuts_show_more":"Sjá fleiri","settings_shortcuts_hide":"Fela","settings_shortcuts_show_notifications":"Opna Upplýsingatorg","settings_shortcuts_step_through_list":"Hoppa á milli lista","settings_shortcuts_step_through_task":"Hoppa á milli liða","settings_terms_of_use":"Skilmálar","settings_account_header_free":"Ókeypis","settings_account_header_unregistered":"Nýskráning","settings_account_header_account_$":"$ aðgangur","settings_account_pro_description":"Add comments and files to your to-dos and assign them to your colleagues. Collaboration in teams has never been easier!","settings_account_register_wunderlist_description":"Register for Wunderlist to sync your lists across all your devices.","settings_manage_subscription_button":"Stilla áskrift","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Húrra, þú ert $!","settings_account_header_pro_description":"Wunderlist Pro er besta leiðin til að halda verkefnum á réttri braut. Bjóddu vinum þínum og samstarfsfélögum að vinna saman og láta hlutina gerast!","settings_upgrade_to_pro_label":"Uppfæra í $","settings_label_pro_account":"Pro aðgangur","settings_label_purchased_from_$":"Keypt úr: $","settings_label_purchased_from_$_by_$":"Purchased from $1 by: $2","settings_label_expires_in_$":"Rennur út  eftir $","setting_label_next_billing_date":"Næsta greiðsla:","setting_label_cancel_subscription":"Segja upp áskrift","setting_heading_cancel_subscription":"Ertu viss um að þú viljir segja upp Wunderlist Pro áskriftinni þinni?","setting_description_cancel_subscription":"Þú munt enn hafa aðgang að öllum þínum gögnum, en um leið og áskriftin rennur út muntu bara hafa aðgang að hefðbundnum Wunderlist aðgerðum.","setting_label_cancel_subscription_success":"Áskrift þinni hefur nú verið sagt upp.","settings_label_invoices":"Invoices","settings_label_become_a_pro":"Gerast Pro meðlimur","settings_payment_info_expires_$_relative":"Rennur út $","settings_payment_info_expires_$_absolute":"Rennur út eftir $1 daga: $2","settings_manage_subscription_error":"Því miður kom upp villa við að breyta áskrift þinni.","group_billing_packages_title":"Plans for every business ","group_billing_packages_text":"Wunderlist for Business provides you with all the features you need to work smarter as a team at an affordable price. Simply select the right plan for your business now.","group_billing_plan_table_team_size":"Team Size","group_billing_plan_table_price":"Verð","group_billing_plan_table_package_name_$":"$ meðlimir","group_billing_buy_button_label":"Kaupa","group_billing_$_off":"$ afsláttur","group_billing_larger_team_$":"Ertu með stærri hóp? $","group_billing_contact_us":"Hafðu samband!","group_billing_downgrade_error_$_$":"In order to switch to the $1 Members plan, you must remove $2 teammate(s) from the account. ","group_billing_manage_team":"Click here to manage your team.","group_billing_button_label_manage":"Manage","group_billing_team_plan_title":"Your Wunderlist Pro Plan","group_billing_team_plan_text":"Wunderlist Pro grows right along with your team! Adding members is super easy, just enter their email addresses below. It’s that simple whether or not they’re already a Wunderlist user.","group_billing_upgrade_button_label":"Change Plan","group_billing_upgrade_plan_button_label":"Upgrade","group_billing_Downgrade_plan_button_label":"Downgrade","group_billing_view_plans_button_label":"View Plans","group_billing_manage_team_header":"Manage Team Members","group_billing_email_address_input_placeholder":"Email address","group_billing_manage_count_$_of_$":"$1 of $2","group_billing_cancel_team_plan":"Cancel Your Wunderlist Pro Plan","group_billing_search_coachmark":"To add members, simply enter the email addresses of your teammates, and they'll be added to your Pro plan.","group_billing_cancel_header":"Are you sure you want to cancel your team’s Wunderlist Pro Subscription?","group_billing_change_plan_confirmation_$_$_$":"Changing plans is easy. If you go for $1 Members plan now, you’ll be billed $2 in the next billing cycle starting on $3. Are you sure you want to do this now?","group_billing_cancel_text":"Your Pro subscription will run until the end of month, and you won’t be billed again. While you’ll still retain the ability to view any Pro features like files attached to tasks, you won’t be able to make any changes to them.","error_goup_billing_user_already_pro":"Looks like this person already has a Wunderlist Pro account. Give the gift of Pro to another teammate!","error_group_billing_wait_subscription_runs_out":"You’ll have to wait until your current subscription runs out before repurchasing. Expires on: $.","button_label_buy_wunderlist_for_business":"Go to Wunderlist for Business","benefit_payment_service_unavailable":"Greiðslugátt ekki aðgengileg","benefit_name":"Wunderlist Pro","benefit_header_$":"Gerast $","benefit_header_description":"Samvinna í hópum og fyrirtækjum hefur aldrei verið auðveldara! Hér eru 4 mjög góðar ástæður fyrir því að skrá sig í Wunderlist Pro.","benefit_button_buy_monthly":"Mánaðarlega","benefit_assign_tasks_title":"Útdeila verkefnum","benefit_assign_tasks_description":"Útdeildu og fylgstu auðveldlega með stöðu á verkefnum meðal vinnufélaga og vina!","benefit_unlimited_subtasks_title":"Ótakmörkuð undirverkefni","benefit_unlimited_subtasks_decription":"Brjóttu upp stóru verkefni í minni, ljúkanleg skref til að auka afköst — án takmarkana.","benefit_comments_title":"Comments","benefit_comments_description":"Start a conversation with your teammates about any of your to-dos. Leave feedback, ask a question or add some extra insight.","benefit_backgrounds_update_$":"Til að nota nýju bakgrunnana okkar þarftu að uppfæra í $","benefit_additional_backgrounds_title":"Nýir bakgrunnar","benefit_additional_backgrounds_description":"Uppgötvaðu 8 nýja og fallega bakgrunna til að gera Wunderlist að þínu!","benefit_files_title":"Skrár","benefit_files_description":"Hengdu skrár við verkefnin og deildu þeim með vinnufélögunum.","benefit_coming_soon":"Á leiðinni","benefit_assign_become_pro":"Útdeildu verkefnum til vinnufélaga með Wunderlist","benefit_label_accept_terms":"Með því að kaupa Wunderlist Pro áskrift, samþykktir þú $1 og $2.","benefit_label_need_more_subtasks":"Þarftu fleiri undirverkefni?","sharing_connect_facebook_sharing":"Tengdu þinn Wunderlist aðgang við Facebook til að auðvelda þér að deila með þínum vinum.","sharing_facebook_apprequest_message_$user_$list":"\"$1\" vill deila listanum \"$2\" með þér","sharing_invite":"Bjóða fólki","sharing_invite_friends":"Bjóða vinum","sharing_inviting_requires_account":"Nýskráðu þig til að bjóða þínum vinum og vinnufélgum í þína lista.","sharing_leave_action":"Ertu viss um að þú viljir hætta í þessum lista?","sharing_leave_button":"Yfirgefa sameiginlegan lista","sharing_list_members":"Lista meðlimi","sharing_list_owner":"Eigandi","sharing_list_pending_member":"Í biðstöðu","sharing_tab_recents":"Nýlegir","sharing_shared_with_you_by":"Deilt með þér af","smart_list_assigned_to_me":"Á minni könnu","smart_list_conversations":"Conversations","smart_list_all":"Allt","smart_list_completed":"Lokið","smart_list_inbox":"Innhólf","smart_list_starred":"Stjörnumerkt","smart_list_today":"Í dag","smart_list_week":"Vika","label_tell_friends":"Segðu vinum þínum","social_sharing_heading":"Elskar þú Wunderlist? Segðu vinum þínum frá!","social_sharing_dialog_headline":"Love Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"Ekki núna","social_sharing_button_no_thanks":"Nei takk","social_sharing_button_facebook":"Deila","social_sharing_button_follow_us":"Fylgdu okkur","social_sharing_button_like_us":"Líkaðu við okkur","social_sharing_heading_thanks":"Vertu viss um að fá allar nýjustu Wunderlist fréttirnar","social_sharing_button_twitter":"Tísta","general_sharing_placeholder":"I’m using Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","twitter_sharing_placeholder":"I’m using @Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","tutorial_welcome_notes_title":"Punktar","tutorial_welcome_notes_text":"Losanlegir punktar auðvelda þér að vinna í Wunderlist.","tutorial_welcome_notifications_title":"Upplýsingatorg","tutorial_welcome_notifications_text":"Sérsníddu hvernig þú færð tilkynningar. Veldu að fá boð og uppfærslur á þínum deildu listum með tölvupósti og skjátilkynningar eða sjá það allt í upplýsingatorginu","tutorial_welcome_sharing_title":"Bjóða vinum","tutorial_welcome_sharing_text":"Nú er mun auðveldara að bjóða vinum þínum og samstarfsfélögum að ljá þér hjálparhönd.","tutorial_welcome_subtasks_title":"Endurteknir liðir, áminningar og undirverkefni","tutorial_welcome_subtasks_text":"Wunderlist er nú með glænýjum upplýsingaskjá, sem leyfir þér að bæta við endurteknum liðum, áminningum og undirverkefnum.","tutorial_welcome_user_title":"Allt um þig!","tutorial_welcome_user_text":"Breyttu þínum notendastillingum, athugaðu stöðuna á samstillingu og breyttu bakgrunninum þínum.","tutorial_welcome_newsletter_subscribe":"Fá sendar tilkynningar um mikilvægar uppfærslur og nýja eiginleika í Wunderlist með tölvupósti","tutorial_feature_pro_title":"Wunderlist Pro eiginleikar","share_list_email_signature":"Sent with Wunderlist – My beautiful and simple to-do list\\nIt’s free for iPhone, iPad, Android, Mac, Windows PC and Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ ósamstilltur liður","userbar_$_unsynced_item_plural":"$ ósamstilltir liðir","userbar_account_settings":"Aðgangs stillingar","userbar_change_background":"Breyta bakgrunni","userbar_last_synced_$":"Síðast samstillt $","userbar_no_internet_connection":"Ótengt","userbar_preferences":"Stillingar","userbar_sync_in_progress":"Samstilli...","userbar_user_name_for_unregistered_mode":"Nýskrá til að samstilla","whatsnew_title":"Hvað er nýtt?","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Comments","whatsnew_label_voice":"Voice Input","whatsnew_label_groupbilling":"Team Pricing","whatsnew_copy_comments":"Keep all the conversations about your to-dos in one place with Comments in Wunderlist Pro. Leave feedback, ask a question or add extra insight to any of your to-dos to greatly improve communication within your team.","whatsnew_copy_pro_accounts":"Add Comments, Assign to-dos, add Files and create Unlimited Subtasks with Wunderlist Pro to accomplish more, together.","whatsnew_copy_voice":"Click the microphone icon to dictate your to-dos or even record a Voice Memo and attach it as a file.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Sign up to try Wunderlist Pro and add a File.","label_add_new_file":"Bæta við skrá...","file_uploaded_unsuccessfully":"Upload of $ failed. Please try again.","file_uploaded_failed":"Upload failed. Please try again.","file_uploaded_failed_deleted":"Upload of $ failed, because the file was deleted from your hard drive.","label_are_you_sure_permanently_delete_$_file":"Ertu viss um að þú viljir endanlega eyða skránni \"$\" úr Wunderlist?","upload_file_was_not_synced_yet":"Please sync","upload_file_not_synced_yet":"Ekki samstillt","placeholder_add_comments":"Add a comment...","placeholder_reply":"Reply...","button_label_go_pro_to_comment":"Go Pro to comment","comment_request_failed":"Sorry, we couldn't load Comments. Please try again.","comment_load_earlier":"View more Comments","coachmark_no_current_comments":"No comments yet.\\nStart your conversation here.","coachmark_comments_not_available":"Sorry, we couldn’t load the previous comments. Please try again in a few moments.","notification_$_commented_on_$":"$1 commented on $2","notification_$_and_$_commented_on_$":"$1 and $2 commented on $3","notification_$_and_$_others_commented_on_$":"$1 and $2 others commented on $3","comments_requires_account":"Sign up to try Wunderlist Pro and add a Comment.","non_pro_trial_free_limit_reached":"You’ve reached your Free limit!","non_pro_trial_write_next_comment_$":"You can add another Comment $.","non_pro_trial_upload_next_file_$":"You’ll be able to add another File $.","non_pro_trial_assign_next_to_do_$":"You can Assign another to-do $.","button_signup_or_login":"Ný- eða innskrá","button_it_is_completely_free":"Algjörlega ókeypis","label_free_download_for_platforms":"Frítt fyrir iPhone, iPad, Android, Windows og Mac","label_wunderlist_to_get_things_done":"More than 5 million people use Wunderlist to get things done.","label_people_who_use_wunderlist":"Sjáðu hver er nú þegar að nota Wunderlist:","label_wunderlist_uses":"Hvort sem þú ert að skipuleggja vinnuna, deila innkaupalistanum með ástvini eða bara einfaldlega að halda utan um daglegt líf, þá er Wunderlist besti verkefnalistinn fyrir þig, vinnufélagana eða fjölskyldu","label_install_browser_extension":"Setja upp viðbót í vafrann","label_install_chrome_browser_extension":"Setja upp Chrome vafra viðbótina","label_newsletter_signup":"Fáðu fréttabréfið okkar","label_know_upcoming_features":"Vertu fyrst(ur) að fá upplýsingar um nýja eiginleika","label_learn_more_about_wunderlist":"Fræðast meira um Wunderlist","label_learn_more":"Nánar...","label_your_email_address":"Netfangið þitt","button_subscribe_to_newsletter":"Skrá","button_sending_subscribe_to_newsletter":"Sendi...","iyf4_usermenu_label":"Get Wunderlist Pro for Free","iyf4_notification_label":"Get up to 12 free months of Wunderlist Pro by inviting your friends!","iyf4_notification_button_label_var_a":"Start Inviting","iyf4_notification_button_label_var_b":"Invite Friends","iyf4_notification_button_label_var_c":"Get Wunderlist Pro for Free","iyf4_notification_button_label_var_d":"Share Wunderlist Pro","iyf4_dialog_invite_headline_$":"Get up to $ of Wunderlist Pro by inviting your friends!","iyf4_dialog_invite_headline_incentive":"12 free months","iyf4_dialog_invite_incentive_$":"$ Wunderlist, we'll give you both 1 month of Wunderlist Pro for free (up to a limit of 12 months)","iyf4_dialog_invite_incentive_terms":"For every friend who joins","iyf4_dialog_tweet":"I love organizing my life with Wunderlist. Get a month of Wunderlist Pro for free here:","iyf_notification_label":"Refer Wunderlist to your friends and get Pro for free up to 12 months!","iyf_notification_button_label":"Go Pro!","iyf_dialog_step1_headline":"Get a free Pro Account","iyf_dialog_step1_subheadline":"in 3 easy steps","iyf_dialog_step1_instruction1_headline":"Start inviting your friends","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter or E-Mail","iyf_dialog_step1_instruction2_headline":"Your friends sign up","iyf_dialog_step1_instruction2_subheadline":"sit tight while they join Wunderlist","iyf_dialog_step1_instruction3_headline":"Enjoy your free Pro Account","iyf_dialog_step1_instruction3_subheadline":"1 month for every friend who accepts","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 month for every $ friends who accept","iyf_dialog_step1_next_button":"Start inviting","iyf_dialog_step2_subheadline":"to get your free Pro Account","iyf_dialog_step2_divider_label":"Share this link","iyf_dialog_share_on_facebook":"Share on Facebook","iyf_dialog_post_on_twitter":"Tweet on Twitter","iyf_dialog_email_placeholder":"Enter an email address...","iyf_dialog_more_placeholder":"Add another...","iyf_dialog_step3_headline":"Thank you for sharing","iyf_dialog_step3_subheadline":"Sit tight while your friends join","iyf_dialog_step3_success_headline":"Invites successfully sent","iyf_dialog_step3_success_subheadline":"We'll notify you as soon as your Pro account is ready.","iyf_dialog_step3_invite_more":"Invite more people","meta_title":"Wunderlist 2: Fallega og einfalda verkefna-forritið þitt","meta_description":"Over 5 million people already use Wunderlist to manage tasks, to-do lists, and to get things done.  Wunderlist is the best to-do list for you, your team or your family.","meta_keywords":"6wunderkinder, framleiðni, vinna, verkefnastjórnun, verkefnastjóri, verkefni, listi, skipuleggja, skipulagning, innkaupalisti, áminning, undirverkefni, snjall listi, bíómyndlisti, sameiginlegur listi","enable_desktop_notifications_text":"Smelltu á “Confirm” og svo “Allow” í vafranum þínum til að virkja skjáborðstilkynningar.","notification_add_to_browser":"Hafðu Wunderlist nálægt. Bættu Wunderlist vefviðmótinu við í vafrann þinn núna.","notification_add_extension_to_browser":"Fljótlegt að vista uppáhalds efnið þitt af vefnum beint í Wunderlist. Settu upp Add to Wunderlist Chrome viðbótina núna.","button_add_to_chrome":"Bæta við í Chrome","button_add_to_store_added":"Bætt við","aria_activity_center_hint":"Activity Center. Hit escape to close.","aria_exit_search":"Exit Search","aria_search":"Search","aria_sort_list":"Sort List","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"User menu. Hit escape to close.","aria_assign_to_$":"Assign to $","momentjs_months":"Janúar_Febrúar_Mars_Apríl_Maí_Júní_Júlí_Ágúst_September_Október_Nóvember_Desember","momentjs_monthsShort":"Jan_Feb_Mar_Apr_Maí_Jún_Júl_Ágú_Sep_Okt_Nóv_Des","momentjs_weekdays":"Sunnudagur_Mánudagur_Þriðjudagur_Miðvikudagur_Fimmtudagur_Fösturdagur_Laugardagur","momentjs_weekdaysShort":"Sun_Mán_Þri_Mið_Fim_Fös_Lau","momentjs_weekdaysMin":"Su_Má_Þr_Mi_Fi_Fö_La","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Í dag þann] LT","momentjs_calendar_nextDay":"[Á morgun] LT","momentjs_calendar_nextWeek":"dddd [at] LT","momentjs_calendar_lastDay":"[Í gær klukkan] LT","momentjs_calendar_lastWeek":"[last] dddd [at] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"eftir %s","momentjs_relativeTime_past":"%s","momentjs_relativeTime_s":"fyrir nokkrum sekúndum","momentjs_relativeTime_m":"fyrir mínútu","momentjs_relativeTime_mm":"%d mínútur","momentjs_relativeTime_h":"fyrir klukkustund","momentjs_relativeTime_hh":"%d klukkustundir","momentjs_relativeTime_d":"eftir dag","momentjs_relativeTime_dd":"%d daga","momentjs_relativeTime_M":"eftir mánuð","momentjs_relativeTime_MM":"%d mánuði","momentjs_relativeTime_y":"eftir ár","momentjs_relativeTime_yy":"%d ár"}
};
});
define('languages/italian',[],function() {
return {
'name': 'italian',
'data': {"actionbar_print_selected_item":"Stampa l'attività selezionata","actionbar_print_$_selected_items_plural":"Stampa $ attività selezionate","actionbar_email_selected_item":"Invia per email l'attività selezionata","actionbar_email_$_selected_items_plural":"Invia per email $ attività selezionate","actionbar_sort_alphabetically":"Ordina Alfabeticamente","actionbar_sort_due_date":"Ordina per data di scadenza","actionbar_sort_assignee":"Ordina per assegnatario","api_error_account_already_exists":"Un account è già associato a questo indirizzo email.","api_error_connection_error":"Whoops, Sembra che ci siano dei problemi a raggiungere il server. Perfavore, prova di nuovo.","api_error_general_error":"Whoops, il server non può essere raggiunto al momento. Per favore prova di nuovo.","api_error_incorrect_login":"L'indirizzo o la password inserita non sono corretti.","api_error_incorrect_password":"La password che hai inserito non è corretta.","api_error_service_down":"Una parte chiave del servizio WunderAPI è offline.","api_error_unknown":"Si è verificato un errore inaspettato. ","api_error_validation_error_unable_to_signup":"Impossibile registrarsi con l'indirizzo email fornito.","api_error_not_a_beta_user":"Non sei un membro della beta di Wunderlist","button_back":"Indietro","button_cancel":"Annulla","button_confirm":"Conferma","button_download":"Scarica","button_change":"Modifica","button_choose":"Scegli","button_connect":"Connetti","button_connect_facebook":"Connettiti Tramite Facebook","button_continue":"Continua","button_delete":"Elimina","button_disconnect":"Disconnetti","button_dismiss":"Ignora","button_done":"Fatto","button_edit":"Modifica","button_get_started":"Iniziamo!","button_go_back":"Indietro","button_go_back_sentence":"Torna Indietro.","button_learn_more":"Ulteriori informazioni","button_go_back_to_login":"Torna al login","button_go_to_web_app":"Vai alla Web App","button_join_now":"Iscriviti ora","button_log_in":"Log In","button_log_in_with_$":"Accedi tramite $","button_log_out":"Log Out","button_log_in_facebook":"Log In Tramite Facebook","button_next":"Successivo","button_no":"No","button_no_due_date":"Nessuna data di scadenza","button_ok":"OK","button_remove_due_date":"Rimuovi Data di Scadenza","button_remove_reminder":"Rimuovi Promemoria","button_email_list":"Invia lista per email","button_print_list":"Stampa lista","button_reset_password":"Resetta la Password","button_retry":"Riprova","button_save":"Salva","button_send":"Invia","button_sign_up":"Registrati","button_sign_up_with_$":"Registrati tramite $","button_sign_up_for_free":"Registrati gratuitamente","button_sign_up_facebook":"Registrati Tramite Facebook","button_support_center":"Centro supporto","button_subscribe":"Fantastico, sì grazie!","button_try_again":"Riprova","button_try_wunderlist":"Prova Wunderlist","button_yes":"Sì","coachmark_all_list_empty":"Non hai ancora aggiunto nessuna attività. Prosegui, e aggiungi qualcosa.","coachmark_completed_list_empty":"Non hai ancora completato nessuna attività. Forza, spunta qualche attività dalle tue liste!","coachmark_no_search_results":"La Ricerca non ha dato alcun Risultato","coachmark_sharing_invite_friends_heading":"Invita amici","coachmark_sharing_invite_friends_text_$":"I tuoi amici potranno creare, rimuovere e spuntare attività nelle liste \"$\".","coachmark_sharing_recent_no_contacts_heading":"Nessun Contatto Recente","coachmark_sharing_recent_no_contacts_text_$":"Scrivi un indirizzo email o cerca fra i tuoi contatti. Una volta aggiunti, i tuoi amici potranno creare, rimuovere e spuntare attività nelle liste \"$\".","coachmark_assigned_to_me_list_empty":"Non c'è niente assegnato a te","coachmark_conversations_list_empty":"Non ci sono conversazioni correnti.","coachmark_starred_list_empty":"Fai doppio click su un elemento per vederne il dettaglio. Qui è possibile aggiungere più o meno informazioni, come preferisci, inclusi elementi ricorrenti, promemoria, sotto-tasks e note.","coachmark_today_list_empty":"Congratulazioni! Non hai niente in scadenza o scaduto per oggi","coachmark_week_list_empty":"In ferie? Non hai attività in scadenza per i prossimi 7 giorni!","error_list_not_found":"La lista che stai cercando non può essere trovata","error_share_not_created":"E' successo un problema mentre stavi cercando di condividere la tua lista. Per favore, prova di nuovo.","error_task_not_found":"L'attività che stai cercando non può essere trovata","error_page_not_found":"Pagina non trovata","error_title_not_found":"Non trovato","label_are_you_sure_permanently_delete_item":"Sei sicuro di voler eliminare definitivamente questo elemento?","label_are_you_sure_permanently_delete_item_plural":"Sei sicuro di voler eliminare definitivamente questi elementi?","label_activity_center":"Centro attività","label_are_you_sure_permanently_delete_$_list":"Sei sicuro di voler eliminare definitivamente la lista “$”?","label_are_you_sure_permanently_delete_$_task":"Sei sicuro di voler eliminare definitivamente l'attività \"$\"?","label_are_you_sure_permanently_delete_task_plural":"Sei sicuro che vuoi eliminare definitivamente queste attività?","label_are_you_sure_permanently_delete_$_subtask":"Sei sicuro di voler eliminare definitivamente l'attività secondaria “$”?","label_cant_undo":"Non sarai in grado di annullare questa azione.","label_completed_tasks_heading":"Un'attività completata","label_$_completed_tasks_heading_plural":"$ attività completate","label_connecting":"Connessione in corso...","label_minisite_description_line_1":"Tieni traccia di tutto ciò che vuoi fare.","label_minisite_description_line_2":"Wunderlist è disponibile gratuitamente su tutte le maggiori piattaforme.","label_minisite_share_deleted_or_no_access":"Sembra che sia stato cancellato o che tu non abbia più gli accessi","label_minisite_contact_sender_for_info":"Per favore contatta la persona che ha condiviso questa lista con te per maggiori informazioni","label_minisite_$_invited_you_to_the_list_$":"$1 ti ha invitato alla lista $2","label_minisite_empty_list_$":"Questa lista è attualmente vuota, quindi aiutali a cominciare. Clicca semplicemente il tasto Registrati, e inizia ad aggiungere attività alla lista $.","label_day_0":"DOM","label_day_1":"LUN","label_day_2":"MAR","label_day_3":"MER","label_day_4":"GIO","label_day_5":"VEN","label_day_6":"SAB","label_delete_file":"Elimina File","label_delete_list":"Elimina la lista","label_delete_task":"Cancella attività","label_delete_task_plural":"Elimina elementi","label_delete_subtask":"Cancelli questa attività secondaria?","label_due_$":"Da fare entro $","label_due_on":"Da fare il $","label_due_date":"Data di Scadenza","label_email":"Email","label_every":"ogni","label_loading":"Caricamento in corso...","label_logging_out":"Log Out in Corso...","label_name":"Nome","label_newsletter":"Newsletter Wunderlist","label_none":"Nessuno","label_notification":"Notifica","label_oops":"Oops!","label_or":"o","label_password":"Password","label_relative_date_today":"Oggi","label_relative_date_today_with_date":"Oggi, $","label_relative_date_today_mid_sentence":"oggi","label_relative_date_tomorrow":"Domani","label_relative_date_tomorrow_with_date":"Domani, $","label_relative_date_tomorrow_mid_sentence":"domani","label_relative_date_yesterday":"Ieri","label_remind_me_at_$":"Ricordamelo alle $","label_reminder":"Promemoria","label_reminder_message_$":"Solo un promemoria amichevole: $","label_repeat_every_day":"Ripeti ogni giorno","label_repeat_every_week":"Ripeti ogni settimana","label_repeat_every_month":"Ripeti ogni mese","label_repeat_every_year":"Ripeti ogni anno","label_repeat_custom":"Personalizzato...","label_repeat_day":"Ogni giorno","label_repeat_day_$_plural":"Ogni $ giorni","label_repeat_month":"Ogni mese","label_repeat_month_$_plural":"Ogni $ mesi","label_repeat_week":"Ogni settimana","label_repeat_week_$_plural":"Ogni $ settimane","label_repeat_never":"Non ripetere mai","label_repeat_year":"Ogni anno","label_repeat_year_$_plural":"Ogni $ anni","label_reset_password":"Resetta la Password","label_rights_reserved":"Tutti i Diritti Riservati","label_still_fetching_tasks":"Sto ancora prendendo attività...","label_sync":"Sincronizza","label_time_am":"AM","label_time_day_plural":"giorni","label_time_week_plural":"settimane","label_time_month_plural":"mesi","label_time_pm":"PM","label_time_year_plural":"anni","label_assign_to":"Assegna a","label_unassigned":"Non assegnato","label_assign_me":"Io","label_created_$":"Creato $","label_created_by_$":"Creato da $","label_created_on_$":"Creato il $","label_created_$_by_$":"Creato $1 da $2","label_created_by_$_on_$":"Creato da $1 il $2","label_completed_$":"Completato $","label_completed_on_$":"Completato il $","label_completed_$_by_$":"Completato il $1 da $2","label_completed_by_$_on_$":"Completato da $1 il $2","login_add_photo_hint":"Personalizza il tuo account Wunderlist caricando una tua foto.","login_already_have_account":"Hai già un account?","login_email_not_valid":"Per favore inserisci un indirizzo email valido.","login_empty_name":"Per favore inserisci il tuo nome.","login_empty_password":"Per favore inserisci una password.","login_password_not_valid":"Per favore inserisci una password valida.","login_empty_email":"Inserisci un indirizzo email.","login_enter_name":"Chi sei?","login_enter_password":"Ci siamo quasi!","login_enter_password_hint":"Scegli una password per concludere la creazione del tuo account.","login_forgot_password":"Password Dimenticata?","login_forgot_password_heading":"Hai Dimenticato Qualcosa?","login_forgot_password_text":"Inserisci l'indirizzo email con cui ti sei registrato/a, e ti invieremo un link per resettare la password.","login_no_account_yet":"Non hai un account?","login_password_changed":"Password Aggiornata","login_password_not_match":"La password che hai inserito non è corretta.","login_password_reset_email_has_been_sent":"Per favore controlla la tua email per le istruzioni su come resettare la password.","login_reset_password_heading":"E' tempo di creare la tua nuova password.","login_reset_password_success":"Clicca il bottone sotto e sei pronto per rientrare nel tuo Wunderlist.","login_reset_password_success_heading":"Urrà! La tua password è stata cambiata correttamente.","login_password_too_short":"Una password deve contenere almeno 5 caratteri.","login_sign_up":"Registrati.","login_want_to_try_again":"Vuoi provare di nuovo?","login_accept_terms":"Iscrivendoti accetti i nostri $1 e la nostra $2.","logout_timeout_title":"Errore di sincronizzazione","logout_timeout_text":"Impossibile sincronizzare i dati. Riprovare o disconnettersi?","mobile_tutorial_welcome_to":"Benvenuto su","mobile_tutorial_wunderlist_subtitle":"la tua stupenda e semplice lista di cose da fare","notifications_desktop_enable_heading":"Abiliti le Notifiche Desktop?","notifications_no_notifications":"Nessuna attività","notifications_no_notifications_message":"Inviti a liste condivise e altre attività compariranno qui.","notifications_event_accept":"Accetta","notifications_event_accepted":"Accettato","web_upgrade_ie9_not_supported":"Wunderlist non supporta Internet Explorer 9. Per favore, fai l'upgrade a $ o $ per una migliore esperienza.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Sembra che tu stia usando un device con uno schermo touch. Vorresti attivare un'interfaccia ottimizzata per il touch? Puoi sempre cambiare questa opzione nelle  impostazioni del tuo account.","web_setting_enable_touch_for_$":"Abilita il Touch per: $","web_settings_text_refresh_may_be_required":"Potrebbe essere necessario ricaricare","rate_label":"Valuta Wunderlist","rate_app_heading":"Vota e recensisci Wunderlist","rate_app_message_web_chrome":"Grazie di usare Wunderlist. Ci piacerebbe sapere che cosa ne pensi! Per favore diccelo valutando e recensendo Wunderlist sul Chrome Web Store ★★★★★","rate_app_button_later":"Ricordamelo più tardi","rate_app_button_no":"No grazie","rate_app_button_yes":"Vota Wunderlist","placeholder_add_due_today_to_inbox":"Aggiungi un'attività in scadenza oggi nell' \"Inbox\"...","placeholder_add_list":"Aggiungi una lista...","placeholder_add_subtask":"Aggiungi un'attività secondaria","placeholder_add_starred_to_inbox":"Aggiungi un'attività importante nell' \"Inbox\"...","placeholder_add_task_to_$":"Aggiungi un'attività in \"$\"...","placeholder_add_to_inbox":"Aggiungi un'attività alla tua \"Inbox\"","placeholder_new_list":"Nuova Lista","placeholder_remind_me":"Ricordamelo","placeholder_search":"Cerca...","placeholder_sharing_search":"Nome o indirizzo email...","placeholder_set_due_date":"Imposta scadenza","browser_outdated_heading":"Uh oh, sembra che il tuo browser web non sia aggiornato.","browser_outdated_update":"Per favore aggiorna il tuo browser","browser_outdated_explanation":"Wunderlist è costruito utilizzando le ultime e migliori tecnologie. Per usare Wunderlist, scarica l'ultima versione del tuo browser","prenamed_list_movies":"Film da Vedere","prenamed_list_private":"Privato","prenamed_list_shopping":"Shopping","prenamed_list_wishlist":"Lista dei Desideri","prenamed_list_work":"Lavoro","prenamed_list_read_later":"Leggi Più Tardi","settings_account_change_email":"Cambia Email...","settings_account_change_password":"Cambia Password...","settings_account_delete_confirmation":"Digita \"Sono sicuro\"","settings_account_delete_confirmation_text":"Sono sicuro","settings_account_drop_image":"Trascina l'Immagine Qui","settings_account_connect_facebook_account":"Collegare il tuo account Wunderlist con Facebook rende semplice, rapida e facile la condivisione delle liste con i tuoi amici.","settings_general_12_hour":"AM/PM","settings_general_24_hour":"24 ore","settings_general_confirm_deletion":"Conferma prima di eliminare questi elementi","settings_general_create_new_tasks":"Aggiungi nuove attività","settings_general_date_format":"Formato Data","settings_general_language":"Lingua","settings_general_start_of_week":"Inizio della settimana","settings_general_start_of_week_sunday":"Domenica","settings_general_start_of_week_saturday":"Sabato","settings_general_start_of_week_monday":"Lunedì","settings_general_sound_task_completion":"Abilitata riproduzione suoni al completamento di un'attività","settings_general_sound_new_notifications":"Abilita suoni in caso di nuove notifiche.","settings_general_print_done_tasks":"Stampa attività completate","settings_general_tasks_bottom":"Fondo della lista","settings_general_tasks_top":"Inizio della lista","settings_general_time_format":"Formato orario","settings_heading_team":"Business","settings_heading_about":"Informazioni","settings_heading_account":"Account","settings_heading_general":"Generale","settings_heading_notification":"Notifiche","settings_heading_shortcuts":"Scorciatoie","settings_heading_sidebar":"Barra laterale","settings_imprint":"Informazioni sullo sviluppatore","settings_visit_website":"Vieni a trovarci","settings_get_help":"Ottieni aiuto","settings_notifications_notify_me_of_important_events_mobile":"Notificami gli eventi importanti tramite:","settings_notifications_notify_me_on_text":"Ti invieremo notifiche per certi eventi, come quando qualcuno accetta un invito per una lista condivisa, o quando qualcuno aggiunge o completa un'attività in una delle tue liste condivise.","settings_sidebar_smart_lists_title":"Mostra queste Liste Intelligenti nella Barra Laterale","settings_sidebar_smart_lists_auto":"Automatico","settings_sidebar_smart_lists_hidden":"Nascosto","settings_sidebar_smart_lists_visible":"Visibile","settings_sync_full":"Sincronizza Ora","settings_account_account_backup":"Backup Account","settings_account_restore_backup":"Importa dati Backup","settings_account_backup_description":"Il backup dei dati include tutte le tue Liste, Attività, Attività Secondarie, e Promemoria. Ricordati che non comprende quelle Liste che sono state condivise con te, i File, i Commenti, i destinatari della Lista Condivisa e le impostazioni della precedente applicazione.","settings_account_data_is_being_processed":"Tieni duro! Stiamo processando i tuoi dati di backup. Ti invieremo un'email quando avremo finito.","settings_account_change_password_error":"C'è stato un problema nell'aggiornamento della tua password. Prova di nuovo.","settings_account_click_to_download_backup":"Clicca per Scaricare","settings_account_create_backup":"Crea Backup","settings_account_current_password":"Password Attuale","settings_account_delete_account":"Elimina Account","settings_account_delete_account_confirm":"Sei sicuro di voler eliminare il tuo account?","settings_account_delete_account_confirm_text":"Cancellare il tuo account comporterà l'eliminazione delle tue liste e attività in maniera permanente. ","settings_account_fetching_data":"Raccogliendo i dati ...","settings_account_new_password":"Nuova Password","settings_account_repeat_new_password":"Ripeti Nuova Password","settings_account_right_click_and_save_as":"Clicca con il tasto destro del mouse e Salva","settings_third_party_libraries":"Licenze","settings_background_credits":"Crediti per gli Sfondi","settings_notifications_email_enabled":"Notifiche Email","settings_notifications_desktop_enabled":"Notifiche Desktop","settings_notifications_push_enabled":"Notifiche Push","settings_privacy_policy":"Informativa sulla Privacy","settings_shortcuts_arrow_keys":"Tasti Freccia","settings_shortcuts_delete_item":"Cancella la lista o le attività selezionate","settings_shortcuts_mark_done":"Segna le attività selezionate come \"Completate\"","settings_shortcuts_mark_starred":"Segna le attività selezionate come \"Importanti\"","settings_shortcuts_new_list":"Aggiungi una Nuova Lista","settings_shortcuts_new_task":"Aggiungi una nuova attività","settings_shortcuts_open_all_smart_list":"Apri la Lista Intelligente 'Tutti'","settings_shortcuts_open_assigned_smart_list":"Apri la Lista Intelligente \"Assegnato a Me\"","settings_shortcuts_open_conversations_smart_list":"Apri la Lista Intelligente 'Conversazioni'","settings_shortcuts_open_done_smart_list":"Apri la Lista Intelligente 'Completato'","settings_shortcuts_open_inbox":"Apri Inbox","settings_shortcuts_open_preferences":"Apri Preferenze","settings_shortcuts_open_search":"Focus Cerca","settings_shortcuts_open_starred_smart_list":"Apri la Lista Intelligente 'Importante'","settings_shortcuts_open_today_smart_list":"Apri la Lista Intelligente 'Oggi'","settings_shortcuts_open_week_smart_list":"Apri la Lista Intelligente 'Settimana'","settings_shortcuts_reset":"Ripristina le Abbreviazioni di Default","settings_shortcuts_select_all_tasks":"Seleziona tutte le attività","settings_shortcuts_show_more":"Mostra di più","settings_shortcuts_hide":"Nascondi","settings_shortcuts_show_notifications":"Mostra centro attività","settings_shortcuts_step_through_list":"Muoviti Attraverso le Liste","settings_shortcuts_step_through_task":"Muoviti attraverso gli elementi","settings_terms_of_use":"Condizioni di Utilizzo","settings_account_header_free":"Gratis","settings_account_header_unregistered":"Registrati","settings_account_header_account_$":"$ Account","settings_account_pro_description":"Aggiungi commenti e file alle tue cose da fare e assegnale ai tuoi colleghi. La collaborazione nei team non è mai stata più semplice!","settings_account_register_wunderlist_description":"Registrati per permettere a Wunderlist di sincronizzare le tue liste su tutti i device.","settings_manage_subscription_button":"Gestisci l'abbonamento","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Evviva, sei un $!","settings_account_header_pro_description":"Wunderlist Pro è il modo migliore per tener traccia dei tuoi progetti. Invita i tuoi amici e colleghi a collaborare e fate sì di completare le vostre attività!","settings_upgrade_to_pro_label":"Passa a $","settings_label_pro_account":"Account Pro","settings_label_purchased_from_$":"Comprato da: $","settings_label_purchased_from_$_by_$":"Comprato da $1 da: $2","settings_label_expires_in_$":"Scade in $","setting_label_next_billing_date":"Prossima data di fatturazione:","setting_label_cancel_subscription":"Cancella l'abbonamento","setting_heading_cancel_subscription":"Vuoi veramente cancellare il tuo abbonamento a Wunderlist Pro?","setting_description_cancel_subscription":"Avrai ancora accesso a tutti i tuoi dati, ma una volta che il tuo abbonamento scade, potrai solamente usare le funzioni standard di Wunderlist.","setting_label_cancel_subscription_success":"Il tuo abbonamento è stato cancellato con successo.","settings_label_invoices":"Fatture","settings_label_become_a_pro":"Diventa un Pro","settings_payment_info_expires_$_relative":"Scade $","settings_payment_info_expires_$_absolute":"Scade in $1 giorni: $2","settings_manage_subscription_error":"Mi dispiace, è accaduto un errore mentre stavi provando a gestire il tuo abbonamento.","group_billing_packages_title":"Piani per qualsiasi business","group_billing_packages_text":"Wunderlist per il Business ti offre tutte le funzioni di cui hai bisogno per lavorare in modo più intelligente come team ad un prezzo accessibile. Seleziona il piano più adatto al tuo business.","group_billing_plan_table_team_size":"Dimensione del Team","group_billing_plan_table_price":"Prezzo","group_billing_plan_table_package_name_$":"$ Membri","group_billing_buy_button_label":"Acquista","group_billing_$_off":"$ di sconto","group_billing_larger_team_$":"Hai un team più grande? $","group_billing_contact_us":"Contattaci!","group_billing_downgrade_error_$_$":"Per passare al piano $1 Members, devi prima rimuovere $2 membri del team dall'account.","group_billing_manage_team":"Clicca qui per gestire il tuo team","group_billing_button_label_manage":"Gestisci","group_billing_team_plan_title":"Il tuo Piano Wunderlist Pro","group_billing_team_plan_text":"Wunderlist Pro cresce con il tuo team! Aggiungere membri è semplicissimo, basta inserire i loro indirizzi email qua sotto. E' facile sia che siano già utenti di Wunderlist oppure no.","group_billing_upgrade_button_label":"Cambia piano","group_billing_upgrade_plan_button_label":"Upgrade","group_billing_Downgrade_plan_button_label":"Downgrade","group_billing_view_plans_button_label":"Guarda i piani","group_billing_manage_team_header":"Gestisci i membri del team","group_billing_email_address_input_placeholder":"Indirizzo e-mail","group_billing_manage_count_$_of_$":"$1 di $2","group_billing_cancel_team_plan":"Cancella il tuo piano Wunderlist Pro","group_billing_search_coachmark":"Per aggiungere dei membri, inserisci semplicemente l'indirizzo email dei tuoi colleghi e saranno aggiunti al tuo piano Pro.","group_billing_cancel_header":"Sei sicuro di voler cancellare l'abbonamento del tuo team a Wunderlist Pro?","group_billing_change_plan_confirmation_$_$_$":"Cambiare piano è semplice. Se scegli ora il piano $1 Members, ti verranno addebitati $2 nella prossima fattura a partire dal $3. Vuoi davvero cambiare ora?","group_billing_cancel_text":"Il tuo abbonamento Pro continuerà fino alle fine del mese and non ti sarà più fatturato. Anche se continuerai ad avere la possibilità di vedere le funzione Pro come i file allegati alle attività, non sarai più in grado di apportare modifiche.","error_goup_billing_user_already_pro":"Sembra che questa persona abbia già un account Wunderlist Pro. Fai questo regalo ad un altro collega!","error_group_billing_wait_subscription_runs_out":"Devi aspettare che scada il tuo abbonamento attuale prima di riacquistarlo. Scade il: $.","button_label_buy_wunderlist_for_business":"Vai a Wunderlist per il Business","benefit_payment_service_unavailable":"Servizio di pagamento non disponibile","benefit_name":"Wunderlist Pro","benefit_header_$":"Diventa un $","benefit_header_description":"La collaborazione nei team e nei business non è mai stata più semplice! Ecco quattro buoni motivi per iscriverti a Wunderlist Pro.","benefit_button_buy_monthly":"Mensile","benefit_assign_tasks_title":"Assegna attività","benefit_assign_tasks_description":"Con facilità delega e tieni traccia dello stato delle attività da fare fra colleghi e amici!","benefit_unlimited_subtasks_title":"Attività secondarie illimitate","benefit_unlimited_subtasks_decription":"Spezza le attività più grandi in piccoli e raggiungibili passi per una produttività migliorata - senza limitazioni.","benefit_comments_title":"Commenti","benefit_comments_description":"Inizia una conversazione con i tuoi colleghi sulle cose da fare. Lascia un feedback, fai una domanda o aggiungi qualche idea.","benefit_backgrounds_update_$":"Per usare i nostri nuovi sfondi, fai l'upgrade a $","benefit_additional_backgrounds_title":"Nuovi Sfondi","benefit_additional_backgrounds_description":"Scopri 8 nuovi stupendi sfondi per personalizzare Wunderlist come preferisci!","benefit_files_title":"File","benefit_files_description":"Allega file alle tue attività e condividile con i tuoi colleghi.","benefit_coming_soon":"Prossimamente","benefit_assign_become_pro":"Assegna attività ai tuoi colleghi con Wunderlist","benefit_label_accept_terms":"Acquistando un abbonamento a Wunderlist Pro, accetti la $1 e $2.","benefit_label_need_more_subtasks":"Hai bisogno di più attività secondarie?","sharing_connect_facebook_sharing":"Connetti il tuo account Wunderlist con Facebook per invitare facilmente i tuoi amici.","sharing_facebook_apprequest_message_$user_$list":"\"$1\" vorrebbe condividere la lista \"$2\" con te","sharing_invite":"Invita Persone","sharing_invite_friends":"Invita amici","sharing_inviting_requires_account":"Registrati per invitare i tuoi amici e colleghi alle tue liste.","sharing_leave_action":"Sei sicuro di voler lasciare questa lista?","sharing_leave_button":"Abbandona la Lista Condivisa","sharing_list_members":"Membri della lista","sharing_list_owner":"Proprietario","sharing_list_pending_member":"In sospeso","sharing_tab_recents":"Recente","sharing_shared_with_you_by":"Condivisa con te da","smart_list_assigned_to_me":"Assegnato a me","smart_list_conversations":"Conversazioni","smart_list_all":"Tutti","smart_list_completed":"Completato","smart_list_inbox":"Inbox","smart_list_starred":"Importante","smart_list_today":"Oggi","smart_list_week":"Settimana","label_tell_friends":"Dillo agli amici","social_sharing_heading":"Ti piace Wunderlist? Dillo agli amici!","social_sharing_dialog_headline":"Ami Wunderlist?","social_sharing_dialog_danke":"Grazie!","social_sharing_button_later":"Non ora","social_sharing_button_no_thanks":"No grazie","social_sharing_button_facebook":"Condividi","social_sharing_button_follow_us":"Seguici","social_sharing_button_like_us":"Metti Mi Piace","social_sharing_heading_thanks":"Seguici per tutte le ultime notizie su Wunderlist.","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"Sto usando Wunderlist, la mia bellissima e semplice lista delle cose da fare. Ottienila gratuitamente su www.wunderlist.com","twitter_sharing_placeholder":"Sto usando @Wunderlist, la mia bellissima e semplice lista delle cose da fare. Ottienila gratuitamente su www.wunderlist.com","tutorial_welcome_notes_title":"Note","tutorial_welcome_notes_text":"Le note rimovibili permettono di lavorare dentro o fuori Wunderlist.","tutorial_welcome_notifications_title":"Centro attività","tutorial_welcome_notifications_text":"Modifica il modo in cui vuoi essere notificato. Scegli di ricevere inviti e aggiornamenti delle tue liste condivise via email e notifiche desktop o di vederle tutte dal Centro Attività.","tutorial_welcome_sharing_title":"Invita Amici","tutorial_welcome_sharing_text":"Ora è più semplice invitare i tuoi amici e colleghi per dare una mano.","tutorial_welcome_subtasks_title":"Attività ricorrenti, promemoria e attività secondarie","tutorial_welcome_subtasks_text":"Wunderlist ora si distingue per una nuova Vista Dettaglio, che ti permette facilmente di aggiungere attività ricorrenti, promemoria e attività secondarie.","tutorial_welcome_user_title":"E' tutto su di te!","tutorial_welcome_user_text":"Modifica le impostazioni del tuo account, controlla lo stato della sincronizzazione e personalizza lo sfondo.","tutorial_welcome_newsletter_subscribe":"Inviami notifiche di aggiornamenti importanti e di nuove funzioni di Wunderlist via mail","tutorial_feature_pro_title":"Funzioni di Wunderlist Pro","share_list_email_signature":"Inviato con Wunderlist – La mia bellissima e semplice lista delle cose da fare\\nE' gratis per iPhone, iPad, Android, Mac, PC Windows e sul Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ attività non sincronizzate","userbar_$_unsynced_item_plural":"$ attività non sincronizzate","userbar_account_settings":"Impostazioni Account","userbar_change_background":"Cambia Sfondo","userbar_last_synced_$":"Ultima sincronizzazione: $","userbar_no_internet_connection":"Offline","userbar_preferences":"Preferenze","userbar_sync_in_progress":"In Sincronizzazione...","userbar_user_name_for_unregistered_mode":"Iscriviti per Sincronizzare","whatsnew_title":"Novità","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Commenti","whatsnew_label_voice":"Input Vocale","whatsnew_label_groupbilling":"Prezzo del team","whatsnew_copy_comments":"Conserva in un posto solo tutte le conversazioni sulle cose da fare grazie a Commenti di Wunderlist Pro. Lascia un feedback, fai una domanda o aggiungi qualche idea ad una qualunque delle tue cose da fare per migliorare la comunicazione all'interno del tuo team.","whatsnew_copy_pro_accounts":"Aggiungi Commenti, Assegna le cose da fare, aggiungi File e crea Infinite Attività Secondarie con Wunderlist Pro per ottenere di più, insieme.","whatsnew_copy_voice":"Clicca sull'icona del microfono per dettare le tue cose da fare o anche registrare un Memo Vocale e allegarlo come un file.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Registrati per provare Wunderlist Pro e aggiungere un File.","label_add_new_file":"Aggiungi un file...","file_uploaded_unsuccessfully":"Il caricamento di $ è fallito. Per favore riprova.","file_uploaded_failed":"Caricamento fallito. Prova di nuovo.","file_uploaded_failed_deleted":"Il caricamento di $ è fallito perché il file è stato cancellato dal tuo hard drive.","label_are_you_sure_permanently_delete_$_file":"Sei sicuro di voler eliminare definitivamente il file “$” da Wunderlist?","upload_file_was_not_synced_yet":"Sincronizza","upload_file_not_synced_yet":"Non sincronizzato","placeholder_add_comments":"Aggiungi un commento...","placeholder_reply":"Rispondi...","button_label_go_pro_to_comment":"Diventa Pro per commentare","comment_request_failed":"Spiacenti, ma non abbiamo potuto caricare i Commenti. Riprova.","comment_load_earlier":"Leggi altri Commenti","coachmark_no_current_comments":"Ancora nessun commento.\\nComincia qui la tua conversazione.","coachmark_comments_not_available":"Spiacenti, ma non abbiamo potuto caricare i commenti precedenti. Riprova tra qualche momento.","notification_$_commented_on_$":"$1 ha commentato $2","notification_$_and_$_commented_on_$":"$1 e $2 hanno commentato $3","notification_$_and_$_others_commented_on_$":"$1 e altri $2 hanno commentato $3","comments_requires_account":"Registrati per provare Wunderlist Pro e aggiungere un Commento.","non_pro_trial_free_limit_reached":"Hai raggiunto il limite con un account Free!","non_pro_trial_write_next_comment_$":"Puoi aggiungere un altro Commento $.","non_pro_trial_upload_next_file_$":"Puoi aggiungere un altro File $.","non_pro_trial_assign_next_to_do_$":"Puoi Assegnare un'altra cosa da fare $.","button_signup_or_login":"Iscriviti o Accedi","button_it_is_completely_free":"E' completamente gratis","label_free_download_for_platforms":"Disponibile gratuitamente per iPhone, iPad, Android, Windows e Mac","label_wunderlist_to_get_things_done":"Più di 5 milioni di persone usano Wunderlist per svolgere le proprie attività.","label_people_who_use_wunderlist":"Scopri chi sta già usando Wunderlist:","label_wunderlist_uses":"Che tu stia organizzando il tuo business, condividendo una lista della spesa con una persona a te cara o semplicemente tenendo traccia della tua vita quotidiana, Wunderlist è la migliore lista di cose da fare per te, il tuo team o la tua famiglia.","label_install_browser_extension":"Installa l'Estensione per il Browser","label_install_chrome_browser_extension":"Installa l'Estensione per Chrome","label_newsletter_signup":"Iscriviti alla nostra newsletter","label_know_upcoming_features":"Sii fra i primi a sapere delle prossime funzioni","label_learn_more_about_wunderlist":"Ulteriori informazioni su Wunderlist","label_learn_more":"Ulteriori informazioni...","label_your_email_address":"Il tuo indirizzo email","button_subscribe_to_newsletter":"Sottoscrivi","button_sending_subscribe_to_newsletter":"Spedizione...","iyf4_usermenu_label":"Ottieni Wunderlist Pro gratis","iyf4_notification_label":"Ottieni gratuitamente fino a 12 mesi di Wunderlist Pro invitando i tuoi amici!","iyf4_notification_button_label_var_a":"Inizia mandando inviti","iyf4_notification_button_label_var_b":"Invita Amici","iyf4_notification_button_label_var_c":"Ottieni Wunderlist Pro gratis","iyf4_notification_button_label_var_d":"Condividi Wunderlist Pro","iyf4_dialog_invite_headline_$":"Ottieni gratuitamente fino a $ di Wunderlist Pro invitando i tuoi amici!","iyf4_dialog_invite_headline_incentive":"12 mesi gratis","iyf4_dialog_invite_incentive_$":"$ Wunderlist, daremo ad entrambi 1 mese di Wunderlist Pro gratis (fino ad un massimo di 12 mesi)","iyf4_dialog_invite_incentive_terms":"Per ogni amico che si iscrive","iyf4_dialog_tweet":"Adoro organizzare la mia vita con Wunderlist. Ottieni un mese di Wunderlist Pro gratis:","iyf_notification_label":"Segnala Wunderlist ai tuoi amici ed ottieni un account Pro gratis fino a 12 mesi!","iyf_notification_button_label":"Diventa Pro!","iyf_dialog_step1_headline":"Ottiene un Account Pro gratis","iyf_dialog_step1_subheadline":"in 3 semplici passo","iyf_dialog_step1_instruction1_headline":"Inizia invitando i tuoi amici","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter o E-Mail","iyf_dialog_step1_instruction2_headline":"I tuoi amici si registrano","iyf_dialog_step1_instruction2_subheadline":"non muoverti mentre si iscrivono a Wunderlist","iyf_dialog_step1_instruction3_headline":"Divertiti col tuo Account Pro gratis","iyf_dialog_step1_instruction3_subheadline":"1 mese per ogni amico che accetta","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 mese per ogni $ amici che accettano","iyf_dialog_step1_next_button":"Inizia mandando inviti","iyf_dialog_step2_subheadline":"per ottenere un Account Pro gratis","iyf_dialog_step2_divider_label":"Condividi questo link","iyf_dialog_share_on_facebook":"Condividi su Facebook","iyf_dialog_post_on_twitter":"Invia un Tweet su Twitter","iyf_dialog_email_placeholder":"Inserisci un indirizzo email...","iyf_dialog_more_placeholder":"Aggiungi un altro...","iyf_dialog_step3_headline":"Grazie per averlo condiviso","iyf_dialog_step3_subheadline":"Non muoverti mentre i tuoi amici si iscrivono","iyf_dialog_step3_success_headline":"Inviti inviati con successo","iyf_dialog_step3_success_subheadline":"Ti informeremo non appena il tuo account Pro sarà pronto.","iyf_dialog_step3_invite_more":"Invita altre persone","meta_title":"Wunderlist 2: La tua stupenda e semplice lista di cose da fare online","meta_description":"Più di 5 milioni di persone usano già Wunderlist per gestire i propri compiti, le liste delle cose da fare e per svolgere le proprie attività. Wunderlist è la migliore lista delle cose da fare per te, per il tuo team o per la tua famiglia.","meta_keywords":"6wunderkinder, produttività, collaborare, gestione delle attività, da fare, lista, attività, gtd, organizzare, pianificare, lista della spesa, promemoria, attività secondarie, liste intelligenti, lista di film, lista condivisa","enable_desktop_notifications_text":"Clicca \"Conferma\" e poi \"Autorizza\" nel tuo browser per abilitare le notifiche desktop.","notification_add_to_browser":"Tieni il tuo Wunderlist distante solamente ad un click. Aggiungi la Web App di Wunderlist al tuo browser, ora.","notification_add_extension_to_browser":"Salva velocemente tutti i tuoi contenuti web preferiti direttamente dentro Wunderlist. Installa ora Add to Wunderlist, l'estensione per Chrome.","button_add_to_chrome":"Aggiungi a Chrome","button_add_to_store_added":"Aggiunto","aria_activity_center_hint":"Centro Attività. Tocca uscita per chiudere.","aria_exit_search":"Esci da Cerca","aria_search":"Cerca","aria_sort_list":"Ordina Lista","aria_thank_you":"Speriamo che le nostre funzioni per l'accessibilità abbiamo funzionato bene. Puoi inviare le tue opinioni sull'implementazione di queste funzionalità a support@wunderlist.com. Grazie per aver scelto Wunderlist.","aria_user_menu_hint":"Menu utente. Tocca uscita per chiudere.","aria_assign_to_$":"Assegna a $","momentjs_months":"Gennaio_Febbraio_Marzo_Aprile_Maggio_Giugno_Luglio_Agosto_Settembre_Ottobre_Novembre_Dicembre","momentjs_monthsShort":"Gen_Feb_Mar_Apr_Mag_Giu_Lug_Ago_Set_Ott_Nov_Dic","momentjs_weekdays":"Domenica_Lunedì_Martedì_Mercoledì_Giovedì_Venerdì_Sabato","momentjs_weekdaysShort":"Dom_Lun_Mar_Mer_Gio_Ven_Sab","momentjs_weekdaysMin":"Do_Lu_Ma_Me_Gi_Ve_Sa","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Oggi alle] LT","momentjs_calendar_nextDay":"[Domani alle] LT","momentjs_calendar_nextWeek":"dddd [alle] LT","momentjs_calendar_lastDay":"[Ieri alle] LT","momentjs_calendar_lastWeek":"[scorso] dddd [alle] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"in %s","momentjs_relativeTime_past":"%s fa","momentjs_relativeTime_s":"qualche secondo","momentjs_relativeTime_m":"un minuto","momentjs_relativeTime_mm":"%d minuti","momentjs_relativeTime_h":"un'ora","momentjs_relativeTime_hh":"%d ore","momentjs_relativeTime_d":"un giorno","momentjs_relativeTime_dd":"%d giorni","momentjs_relativeTime_M":"un mese","momentjs_relativeTime_MM":"%d mesi","momentjs_relativeTime_y":"un anno","momentjs_relativeTime_yy":"%d anni"}
};
});
define('languages/japanese',[],function() {
return {
'name': 'japanese',
'data': {"actionbar_print_selected_item":"選択したアイテムの印刷","actionbar_print_$_selected_items_plural":"選択した $ 個のアイテムを印刷","actionbar_email_selected_item":"選択したアイテムをメールで送信","actionbar_email_$_selected_items_plural":"選択した $ 個のアイテムをメールで送信","actionbar_sort_alphabetically":"アルファベット順に並び替え","actionbar_sort_due_date":"期限日で並び替え","actionbar_sort_assignee":"任命された人で並び替え","api_error_account_already_exists":"このメールアドレスのアカウントは既に存在しています。","api_error_connection_error":"しまった! サーバー接続時に問題が生じたようです。再試行してください。","api_error_general_error":"しまった! 現在サーバに接続できません。再試行してください。","api_error_incorrect_login":"入力したメールアドレスかパスワードが間違っています。","api_error_incorrect_password":"入力したパスワードが間違っています。","api_error_service_down":"WunderAPIサービスの重要な部分がダウンしています。","api_error_unknown":"予測不能の未処理のエラーが発生しました。","api_error_validation_error_unable_to_signup":"そのメールアドレスでの新規登録はできませんでした。","api_error_not_a_beta_user":"あなたはWunderlistベータのメンバーではありません。","button_back":"戻る","button_cancel":"キャンセル","button_confirm":"確認","button_download":"ダウンロード","button_change":"変更","button_choose":"選択","button_connect":"接続","button_connect_facebook":"Facebookに接続","button_continue":"続ける","button_delete":"削除","button_disconnect":"接続解除","button_dismiss":"終了","button_done":"完了","button_edit":"編集","button_get_started":"始めましょう","button_go_back":"戻る","button_go_back_sentence":"戻る。","button_learn_more":"もっと詳しく","button_go_back_to_login":"ログインに戻る","button_go_to_web_app":"ウェブアプリへ","button_join_now":"登録する","button_log_in":"ログイン","button_log_in_with_$":"$でログイン","button_log_out":"ログアウト","button_log_in_facebook":"Facebookアカウントでログイン","button_next":"次へ","button_no":"いいえ","button_no_due_date":"期限なし","button_ok":"はい","button_remove_due_date":"期限日を削除","button_remove_reminder":"リマインダーを削除","button_email_list":"リストをメールで送信","button_print_list":"リストを印刷","button_reset_password":"パスワードをリセット","button_retry":"再試行","button_save":"保存","button_send":"送信","button_sign_up":"新規登録","button_sign_up_with_$":"$で登録","button_sign_up_for_free":"無料新規登録","button_sign_up_facebook":"Facebookアカウントを使って新規登録","button_support_center":"サポートセンター","button_subscribe":"はい、登録します!","button_try_again":"再試行","button_try_wunderlist":"Wunderlistを試してみてください","button_yes":"はい","coachmark_all_list_empty":"アイテムが追加されていません。追加してください。","coachmark_completed_list_empty":"どのアイテムもまだ完了していません。リスト上の完了したアイテムには、チェックマークを入れてください!","coachmark_no_search_results":"検索結果なし","coachmark_sharing_invite_friends_heading":"友達を招待","coachmark_sharing_invite_friends_text_$":"友達が“$”リスト内でアイテムの作成、削除、完了マーク入力ができるようになります。","coachmark_sharing_recent_no_contacts_heading":"最近の連絡先なし","coachmark_sharing_recent_no_contacts_text_$":"メールアドレスの入力または連絡先の検索をしてください。追加後に友達は“$”リスト内のアイテムの作成、削除、および完了マークの入力ができるようになります。","coachmark_assigned_to_me_list_empty":"あなたに割り当てられた仕事はありません","coachmark_conversations_list_empty":"現在進行中の会話はありません","coachmark_starred_list_empty":"スターつきのアイテムなし","coachmark_today_list_empty":"おめでとうございます! 今日、締切または期限切れのアイテムはありません。","coachmark_week_list_empty":"休暇中ですか? 今後7日間中に締め切りのアイテムはありません。","error_list_not_found":"お探しのリストが見つかりません","error_share_not_created":"リストを共有する際に、問題が発生しました。再試行してください。","error_task_not_found":"お探しのアイテムが見つかりません","error_page_not_found":"ページが見つかりません","error_title_not_found":"見つかりません","label_are_you_sure_permanently_delete_item":"このアイテムを完全に削除しますか?","label_are_you_sure_permanently_delete_item_plural":"これらのアイテムを完全に削除しますか?","label_activity_center":"アクティビティセンター","label_are_you_sure_permanently_delete_$_list":"リスト“$”を完全に削除しますか?","label_are_you_sure_permanently_delete_$_task":"アイテム“$”を完全に削除しますか?","label_are_you_sure_permanently_delete_task_plural":"これらのアイテムを完全に削除しますか?","label_are_you_sure_permanently_delete_$_subtask":"サブタスク“$”を完全に削除しますか?","label_cant_undo":"この操作は元に戻せません。","label_completed_tasks_heading":"完了したアイテム１件","label_$_completed_tasks_heading_plural":"$完了したアイテム","label_connecting":"接続中…","label_minisite_description_line_1":"やりたい事をすべて記録できます","label_minisite_description_line_2":"Wunderlistは主要プラットフォームで無料でご利用できます。","label_minisite_share_deleted_or_no_access":"削除されたかアクセス不可能になっているようです。","label_minisite_contact_sender_for_info":"詳細はこのリストを共有している人にお問い合わせください。","label_minisite_$_invited_you_to_the_list_$":"$1が $2リストにあなたを招待しました","label_minisite_empty_list_$":"このリストはまだ空欄なので、リストを始めるのをお手伝いしてあげましょう。上のサインアップボタンを押せば、アイテムを$リストに足し始める事が簡単にできます。","label_day_0":"日","label_day_1":"月","label_day_2":"火","label_day_3":"水","label_day_4":"木","label_day_5":"金","label_day_6":"土","label_delete_file":"ファイルを削除","label_delete_list":"リストを削除","label_delete_task":"アイテムを削除","label_delete_task_plural":"アイテムを削除","label_delete_subtask":"サブタスクを削除","label_due_$":"期限日：$","label_due_on":"期限は$","label_due_date":"期限日","label_email":"メール","label_every":"毎","label_loading":"読み込み中…","label_logging_out":"ログアウト中…","label_name":"名前","label_newsletter":"Wunderlistニュースレター","label_none":"なし","label_notification":"通知","label_oops":"しまった!","label_or":"または","label_password":"パスワード","label_relative_date_today":"今日","label_relative_date_today_with_date":"今日 $","label_relative_date_today_mid_sentence":"今日","label_relative_date_tomorrow":"明日","label_relative_date_tomorrow_with_date":"明日 $","label_relative_date_tomorrow_mid_sentence":"明日","label_relative_date_yesterday":"昨日","label_remind_me_at_$":"$にリマインダーを送信","label_reminder":"リマインダー","label_reminder_message_$":"気軽なリマインダー：$","label_repeat_every_day":"毎日繰り返す","label_repeat_every_week":"毎週繰り返す","label_repeat_every_month":"毎月繰り返す","label_repeat_every_year":"毎年繰り返す","label_repeat_custom":"カスタム…...","label_repeat_day":"毎日","label_repeat_day_$_plural":"$日毎","label_repeat_month":"毎月","label_repeat_month_$_plural":"$ヶ月毎","label_repeat_week":"毎週","label_repeat_week_$_plural":"$週毎","label_repeat_never":"繰り返しなし","label_repeat_year":"毎年","label_repeat_year_$_plural":"$年毎","label_reset_password":"パスワードのリセット","label_rights_reserved":"著作権所有","label_still_fetching_tasks":"まだタスクを取得中...","label_sync":"同期","label_time_am":"午前","label_time_day_plural":"日","label_time_week_plural":"週","label_time_month_plural":"月","label_time_pm":"午後","label_time_year_plural":"年","label_assign_to":"。。。に割り当て","label_unassigned":"割り当てられていません","label_assign_me":"自分","label_created_$":"$作成","label_created_by_$":"$　によって作成","label_created_on_$":"$ に作成","label_created_$_by_$":"$2　によって　$1　作成","label_created_by_$_on_$":"$1 によって $2　に作成","label_completed_$":"$　完了","label_completed_on_$":"$　に完了","label_completed_$_by_$":"$2　によって　$1　完了","label_completed_by_$_on_$":"$1　によって　$2　に完了","login_add_photo_hint":"写真をアップロードすれば、Wunderlistアカウントを個人化できます。","login_already_have_account":"既にアカウントがありますか?","login_email_not_valid":"有効なメールアドレスを入力してください。","login_empty_name":"名前を入力してください。","login_empty_password":"パスワードを入力してください。","login_password_not_valid":"有効なパスワードを入力してください。","login_empty_email":"メールアドレスを入力してください。","login_enter_name":"あなたは誰ですか? ","login_enter_password":"もう少しで完了です","login_enter_password_hint":"パスワードを選択すると、Wunderlistアカウントの設定が完了します。","login_forgot_password":"パスワードを忘れた","login_forgot_password_heading":"パスワードをお忘れですか?","login_forgot_password_text":"登録したメールアドレスを入力してください。パスワードのリセット用のリンクを送信します。","login_no_account_yet":"アカウントがありませんか?","login_password_changed":"パスワードが更新されました","login_password_not_match":"パスワードが一致しません。","login_password_reset_email_has_been_sent":"パスワードのリセットの説明メールをお読みください。","login_reset_password_heading":"新しいパスワードを作成しましょう。","login_reset_password_success":"下のボタンを押せばWunderlistへの再ログインの準備完了です。","login_reset_password_success_heading":"おめでとうございます! パスワードは無事変更されました。","login_password_too_short":"パスワードは文字が最低５つ含まれる必要があります。","login_sign_up":"新規登録。","login_want_to_try_again":"再試行しますか?","login_accept_terms":"登録することにより、$1と$2に同意します。","logout_timeout_title":"同期エラー","logout_timeout_text":"データの同期に失敗しました。再試行かログアウトをしますか?","mobile_tutorial_welcome_to":"へようこそ","mobile_tutorial_wunderlist_subtitle":"美しく、そしてシンプルなTo Doリスト","notifications_desktop_enable_heading":"デスクトップ通知を有効化しますか?","notifications_no_notifications":"アクティビティなし","notifications_no_notifications_message":"リスト共有の招待やその他のアクティビティはここに表示されます。","notifications_event_accept":"受け入れ","notifications_event_accepted":"受入済","web_upgrade_ie9_not_supported":"Wunderlist はInternet Explorer 9をサポートしていません。Wunderlistを最大限楽しむため、$か’$にアップグレードしてください。","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"タッチスクリーンのデバイスをお使いのようです。タッチ操作によるインターフェースを有効にしますか？アカウント設定からいつでも変更できます。","web_setting_enable_touch_for_$":"タッチ操作を有効にする：$","web_settings_text_refresh_may_be_required":"再読込が必要な場合があります。","rate_label":"Wunderlistを評価","rate_app_heading":"Wunderlistを評価ならびにレビュー","rate_app_message_web_chrome":"Wunderlistをご利用いただきありがとうございます。当アプリのご感想を是非お聞かせください！Wunderlistのご感想は、Chrome Web Store内の評価ならびにレビューでお聞かせください ★★★★★","rate_app_button_later":"あとで評価","rate_app_button_no":"いいえ、結構です。","rate_app_button_yes":"Wunderlistを評価","placeholder_add_due_today_to_inbox":"“受信トレイ”に今日が期限のアイテムを追加...","placeholder_add_list":"リストを追加…","placeholder_add_subtask":"サブタスクを追加","placeholder_add_starred_to_inbox":"星印つきのアイテムを“受信トレイ”に追加…","placeholder_add_task_to_$":"“$”にアイテムを追加…","placeholder_add_to_inbox":"“受信トレイ”にアイテムを追加","placeholder_new_list":"新規リスト","placeholder_remind_me":"リマインダーを設定","placeholder_search":"検索…","placeholder_sharing_search":"名前またはメールアドレス…","placeholder_set_due_date":"期限日を設定","browser_outdated_heading":"最新のWebブラウザをお使いになっていないようです。","browser_outdated_update":"Webブラウザを最新バージョンにアップデートしてください。","browser_outdated_explanation":"Wunderlistは最新・最高のテクノロジーが使われています。是非ともブラウザを最新版にしてご利用下さい。","prenamed_list_movies":"観たい映画","prenamed_list_private":"プライベート","prenamed_list_shopping":"ショッピング","prenamed_list_wishlist":"欲しいものリスト","prenamed_list_work":"仕事","prenamed_list_read_later":"あとで読む","settings_account_change_email":"メールアドレスを変更…","settings_account_change_password":"パスワードを変更…","settings_account_delete_confirmation":"\"確定\"を入力","settings_account_delete_confirmation_text":"確定","settings_account_drop_image":"ここに画像をドロップ","settings_account_connect_facebook_account":"WunderlistアカウントをFacebookに接続すると、友達とのリスト共有が素早く簡単にできます。","settings_general_12_hour":"12時間","settings_general_24_hour":"24時間","settings_general_confirm_deletion":"アイテムの削除前に確認","settings_general_create_new_tasks":"新規アイテムを追加","settings_general_date_format":"日付のフォーマット","settings_general_language":"言語","settings_general_start_of_week":"週の初め","settings_general_start_of_week_sunday":"日曜日","settings_general_start_of_week_saturday":"土曜日","settings_general_start_of_week_monday":"月曜日","settings_general_sound_task_completion":"アイテムの完了時に、サウンドを有効化","settings_general_sound_new_notifications":"新しい通知のサウンドを有効化","settings_general_print_done_tasks":"完了済みのアイテムを印刷","settings_general_tasks_bottom":"リストの下部","settings_general_tasks_top":"リストの上部","settings_general_time_format":"時刻表示形式","settings_heading_team":"ビジネス","settings_heading_about":"バージョン情報","settings_heading_account":"アカウント","settings_heading_general":"概要","settings_heading_notification":"通知","settings_heading_shortcuts":"ショートカット","settings_heading_sidebar":"サイドバー","settings_imprint":"印","settings_visit_website":"ウェブサイトへ","settings_get_help":"ヘルプ（サポートセンターへ）","settings_notifications_notify_me_of_important_events_mobile":"重要イベントの通知方法：","settings_notifications_notify_me_on_text":"メンバーが共有リストへの招待を承認したり、あなたの共有リストにアイテムが追加されたり、完了した場合などにお知らせいたします。","settings_sidebar_smart_lists_title":"これらのスマートリストをサイドバーに表示：","settings_sidebar_smart_lists_auto":"自動","settings_sidebar_smart_lists_hidden":"非表示","settings_sidebar_smart_lists_visible":"表示","settings_sync_full":"すぐに同期","settings_account_account_backup":"アカウントのバックアップ","settings_account_restore_backup":"バックアップデータをインポート","settings_account_backup_description":"バックアップを行うと、リスト、タスク、サブタスク、メモ、リマインダーが保存されます。自分以外のメンバがー作成した共有リストや、ファイル、コメント、リスト共有メンバー、アプリケーション設定は保存されませんので、ご注意ください。","settings_account_data_is_being_processed":"バックアップデータが処理中です。少々お待ちください！終了後、確認メールをお送り致します。","settings_account_change_password_error":"パスワードの更新に問題がありました。再試行してください。","settings_account_click_to_download_backup":"クリックしてダウンロード","settings_account_create_backup":"バックアップを作成","settings_account_current_password":"現在のパスワード","settings_account_delete_account":"アカウントを削除","settings_account_delete_account_confirm":"本当にアカウントを削除してもよろしいですか?","settings_account_delete_account_confirm_text":"アカウントを削除すると全てのリストと、アイテムが完全に削除され、元に戻せなくなります。","settings_account_fetching_data":"データ取得中...","settings_account_new_password":"新しいパスワード","settings_account_repeat_new_password":"新しいパスワードを再度入力してください","settings_account_right_click_and_save_as":"右クリックをして保存","settings_third_party_libraries":"ライセンス","settings_background_credits":"背景の制作","settings_notifications_email_enabled":"メール通知","settings_notifications_desktop_enabled":"デスクトップ通知","settings_notifications_push_enabled":"プッシュ通知","settings_privacy_policy":"個人情報保護方針","settings_shortcuts_arrow_keys":"矢印キー","settings_shortcuts_delete_item":"選択したリストまたはアイテムを削除","settings_shortcuts_mark_done":"選択したアイテムを「完了」とマーク付け","settings_shortcuts_mark_starred":"選択したアイテムを「スターつき」とマーク付け","settings_shortcuts_new_list":"新規リストを追加","settings_shortcuts_new_task":"新規アイテムを追加","settings_shortcuts_open_all_smart_list":"「全て」のスマートリストを開く","settings_shortcuts_open_assigned_smart_list":"「私に割り当て」のスマートリストを開く","settings_shortcuts_open_conversations_smart_list":"「会話」のスマートリストを開く","settings_shortcuts_open_done_smart_list":"「完了済」のスマートリストを開く","settings_shortcuts_open_inbox":"受信トレイを開く","settings_shortcuts_open_preferences":"環境設定を開く","settings_shortcuts_open_search":"フォーカスサーチ","settings_shortcuts_open_starred_smart_list":"「スターつき」のスマートリストを開く","settings_shortcuts_open_today_smart_list":"「今日」のスマートリストを開く","settings_shortcuts_open_week_smart_list":"「今週」のスマートリストを開く","settings_shortcuts_reset":"デフォルトにリセット","settings_shortcuts_select_all_tasks":"全てのアイテムを選択","settings_shortcuts_show_more":"もっと詳しく","settings_shortcuts_hide":"隠す","settings_shortcuts_show_notifications":"アクティビティセンターを表示","settings_shortcuts_step_through_list":"ステップスルーリスト","settings_shortcuts_step_through_task":"ステップスルーアイテム","settings_terms_of_use":"利用規約","settings_account_header_free":"無料","settings_account_header_unregistered":"新規登録","settings_account_header_account_$":"$ アカウント","settings_account_pro_description":"コメントやファイルをタスク(To Do)に加え、同僚に割り当てられます。チームによる共同作業が、かつてないほど簡単になりました！","settings_account_register_wunderlist_description":"Wunderlist に登録すれば、お持ちの全てのデバイスにリストを同期させることができます。","settings_manage_subscription_button":"会費の管理","settings_account_header_pro":"Pro版","settings_account_header_pro_account_$":"やった！あなたは $です！","settings_account_header_pro_description":"Wunderlist Proは、予定通りにプロジェクトを進めるために最適なアプリです。友達や同僚を招待し、協力してタスクを遂行しましょう！","settings_upgrade_to_pro_label":"$　にアップグレード","settings_label_pro_account":"Pro版のアカウント","settings_label_purchased_from_$":"購入元： $","settings_label_purchased_from_$_by_$":"購入元：$1 　購入者：$2","settings_label_expires_in_$":"$　日で期限切れ","setting_label_next_billing_date":"次の請求日：","setting_label_cancel_subscription":"購読をキャンセル","setting_heading_cancel_subscription":"本当にあなたのWunderlist Proの購読をキャンセルしますか？","setting_description_cancel_subscription":"全てのデータにアクセスすることはできますが、会員の期限が切れますと、Wunderlistの標準機能しか使用できなくなります。","setting_label_cancel_subscription_success":"購読がキャンセルされました。","settings_label_invoices":"請求書","settings_label_become_a_pro":"Proになる","settings_payment_info_expires_$_relative":"$　期限切れ","settings_payment_info_expires_$_absolute":"$1日で期限切れです。： $2","settings_manage_subscription_error":"恐れ入りますが、申し込み中にエラーが発生しました。","group_billing_packages_title":"全ビジネスに対応するプラン","group_billing_packages_text":"ビジネス版Wunderlistは、手頃な値段で、チームでスマートに仕事をしていくために必要な全てを提供します。ご自分のビジネスに合ったプランを選びましょう。","group_billing_plan_table_team_size":"メンバーの人数","group_billing_plan_table_price":"料金","group_billing_plan_table_package_name_$":"メンバー数　$人","group_billing_buy_button_label":"購入","group_billing_$_off":"％@引き","group_billing_larger_team_$":"メンバー数がもっと多い場合：$","group_billing_contact_us":"ご連絡ください！","group_billing_downgrade_error_$_$":"メンバー数$1人のプランに変更するためには、アカウントから$2人減らす必要があります。","group_billing_manage_team":"チームを管理するにはここをクリック","group_billing_button_label_manage":"管理","group_billing_team_plan_title":"Wunderlist Pro版　プラン","group_billing_team_plan_text":"Wunderlist Pro はチームと共に成長します！メンバーを追加するのはとても簡単。メールアドレスを下に入力するだけです。相手が既にWunderlist を利用していなくても大丈夫です。","group_billing_upgrade_button_label":"プランを変更","group_billing_upgrade_plan_button_label":"アップグレード","group_billing_Downgrade_plan_button_label":"ダウングレード","group_billing_view_plans_button_label":"プランを見る","group_billing_manage_team_header":"チームメンバーを管理する","group_billing_email_address_input_placeholder":"メールアドレス","group_billing_manage_count_$_of_$":"$2のうち$1 ","group_billing_cancel_team_plan":"Wunderlist Pro版プランをキャンセル","group_billing_search_coachmark":"追加したいメンバーのメールアドレスを入力するだけで、Pro版プランに参加させることができます。","group_billing_cancel_header":"チームのWunderlist Pro購読をキャンセルしてもよろしいですか？","group_billing_change_plan_confirmation_$_$_$":"プラン変更は簡単です。メンバー数$1人のプランをお使いになられる場合、$3 からスタートする次のお支払いサイクルから$2支払う計算となります。このプランに変更されますか？ ","group_billing_cancel_text":"Pro版のご利用は月末までです。その後、請求は行われません。また、タスクに添付されたファイル等、Pro版でご利用になれる機能を閲覧することはできますが、変更を加えることができなくなります。","error_goup_billing_user_already_pro":"この方はすでにWunderlist Proのアカウントをお持ちのようです。他の方にPro版をプレゼントしましょう！","error_group_billing_wait_subscription_runs_out":"次のご購入には、現在ご利用のプランが終了する必要があります。ご利用期限：","button_label_buy_wunderlist_for_business":"ビジネス版Wunderlist へ進む","benefit_payment_service_unavailable":"ただ今一時的にお支払いができません","benefit_name":"Wunderlist Pro","benefit_header_$":"$　になる","benefit_header_description":"チームやビジネスでの共同作業が、かつてないほど簡単になりました！こちらは、Wunderlist Proにサインアップする4つの理由です。","benefit_button_buy_monthly":"月毎","benefit_assign_tasks_title":"タスクを割り当て","benefit_assign_tasks_description":"同僚や友達の間で、タスク(To Do)を任せたり、進行状況のチェックが簡単にできます！","benefit_unlimited_subtasks_title":"無制限のサブタスク","benefit_unlimited_subtasks_decription":"効率を上げるため、大きなタスクを達成可能な小さなタスクへと無制限に分けられます。","benefit_comments_title":"コメント","benefit_comments_description":"タスク（to-dos）についてメンバーと会話を始めましょう。フィードバック、質問、ひらめきなどをシェアしてみてください。","benefit_backgrounds_update_$":"新しい背景を使用するには $にアップグレードしてください。","benefit_additional_backgrounds_title":"新しい背景","benefit_additional_backgrounds_description":"８つの新しい背景をご用意しました。お好きなように Wunderlistをカスタマイズして楽しんでください！","benefit_files_title":"ファイル","benefit_files_description":"「トゥドゥ」にファイルを添付し、チームメイトと共有してください。","benefit_coming_soon":"近日登場","benefit_assign_become_pro":"Wunderlistで同僚にタスク（To Do）を割り当て","benefit_label_accept_terms":"Wunderlist Proを購入することにより、$1 と $2に同意したものとみなします。","benefit_label_need_more_subtasks":"他のサブタスクが必要ですか？?","sharing_connect_facebook_sharing":"WunderlistアカウントをFacebookに接続すると、友達を招待するのが簡単になります。","sharing_facebook_apprequest_message_$user_$list":"“$1”がリスト“$2”の共有を希望しています。","sharing_invite":"人を招待","sharing_invite_friends":"友達を招待","sharing_inviting_requires_account":"新規登録をすれば、友達や同僚を自分のリストに招待できます。","sharing_leave_action":"このリストを閉じてもよろしいですか？","sharing_leave_button":"共有リストを閉じる","sharing_list_members":"リストメンバー","sharing_list_owner":"所有者","sharing_list_pending_member":"参加待ち","sharing_tab_recents":"最近","sharing_shared_with_you_by":"自分との共有者","smart_list_assigned_to_me":"私に割り当て","smart_list_conversations":"会話","smart_list_all":"全て","smart_list_completed":"完了","smart_list_inbox":"受信トレイ","smart_list_starred":"スター付き","smart_list_today":"今日","smart_list_week":"週","label_tell_friends":"友人に伝える。","social_sharing_heading":"Wunderlistはお好きですか？もしそうなら、お気に入りのソーシャルメディアを使って友人へ紹介しましょう！","social_sharing_dialog_headline":"Wunderlistが気に入りましたか？","social_sharing_dialog_danke":"サンキュー！","social_sharing_button_later":"あとで","social_sharing_button_no_thanks":"いいえ、結構です。","social_sharing_button_facebook":"共有","social_sharing_button_follow_us":"フォローする","social_sharing_button_like_us":"「いいね! 」とする","social_sharing_heading_thanks":"最新のWunderlist のお知らせをぜひフォローしてください","social_sharing_button_twitter":"ツイート","general_sharing_placeholder":"Wunderlistを利用しています。美しく、シンプルなTo Doリスト。www.wunderlist.comから無料で利用できます。","twitter_sharing_placeholder":" @Wunderlistを利用しています。美しく、シンプルなTo Doリスト。www.wunderlist.comから無料で利用できます。","tutorial_welcome_notes_title":"メモ","tutorial_welcome_notes_text":"取り外し可能なメモはWunderlistの中でも外でも利用できます。","tutorial_welcome_notifications_title":"アクティビティセンター","tutorial_welcome_notifications_text":"通知方法をカスタマイズできます。招待や共有リストの更新のお知らせをメール通知やデスクトップ通知で受信したり、アクティビティセンターで閲覧できます。","tutorial_welcome_sharing_title":"友達を招待","tutorial_welcome_sharing_text":"協力のために友達や同僚を招待するのがさらに簡単になりました。","tutorial_welcome_subtasks_title":"繰り返し、リマインダー、サブタスク","tutorial_welcome_subtasks_text":"Wunderlist には新しい詳細ビュー機能が加えられ、繰り返しアイテム、リマインダー、サブタスクを簡単に追加することができます。","tutorial_welcome_user_title":"皆様について!","tutorial_welcome_user_text":"アカウント設定の変更、同期ステータスのチェック、背景のカスタマイズができます。","tutorial_welcome_newsletter_subscribe":"Wunderlistの重要な更新や新機能についてのメール通知を希望","tutorial_feature_pro_title":"Wunderlist Proの機能","share_list_email_signature":"Wunderlistから送信ー美しく、シンプルなTo Doリスト。\\niPhone、iPad、Android、Mac、Windows、またはウェブサイトから無料でご利用できます！\\nウェブサイトはこちらーwww.wunderlist.com","userbar_$_unsynced_item":"同期なしのアイテム$ ","userbar_$_unsynced_item_plural":"同期なしのアイテム$ ","userbar_account_settings":"アカウント設定","userbar_change_background":"背景を変更","userbar_last_synced_$":"最終同期$","userbar_no_internet_connection":"オフライン","userbar_preferences":"環境設定","userbar_sync_in_progress":"同期中…","userbar_user_name_for_unregistered_mode":"新規登録して同期","whatsnew_title":"新しい機能","whatsnew_label_pro_accounts":"Pro版 Wunderlist","whatsnew_label_comments":"コメント","whatsnew_label_voice":"音声入力","whatsnew_label_groupbilling":"チーム料金","whatsnew_copy_comments":"Wunderlist Proのコメント機能では、タスクに関する会話を全て一カ所で行うことができます。タスクにまつわるフィードバック、質問、ひらめきなどをシェアし、チーム間のコミュニケーションを大いに向上させましょう。","whatsnew_copy_pro_accounts":" Wunderlist Proで、コメント入力、タスクの割り当て、ファイル添付、無制限のサブタスク作成の機能を活用し、共により多くを実現させましょう。","whatsnew_copy_voice":"マイクのアイコンをクリックすると、タスクを音声で吹き込んだり、ボイスメモを録音することができ、さらにそのデータをファイルとして添付できます。","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":" Wunderlist Proに登録し、ファイルを追加する","label_add_new_file":"ファイルを追加する...","file_uploaded_unsuccessfully":"ファイル$のアップロードに失敗しました。再試行してください。 ","file_uploaded_failed":"アップロードに失敗しました。再試行してください。","file_uploaded_failed_deleted":"ファイル$はハードディスクから削除されているため、アップロードに失敗しました。","label_are_you_sure_permanently_delete_$_file":"Wunderlistからファイルの 「％@」を完全に削除してもよろしいですか？","upload_file_was_not_synced_yet":"同期してください","upload_file_not_synced_yet":"同期されていません","placeholder_add_comments":"コメントを書く…","placeholder_reply":"返事をする…","button_label_go_pro_to_comment":"Pro版に進み、コメントする","comment_request_failed":"コメントを読み込むことができませんでした。再試行してください。","comment_load_earlier":"コメントをもっと見る","coachmark_no_current_comments":"コメントはまだありません。\\n会話をここから始めましょう。","coachmark_comments_not_available":"これまでのコメントを読み込むことができませんでした。数分後に再試行してください。","notification_$_commented_on_$":"$1 が$2にコメントしました","notification_$_and_$_commented_on_$":"$1 と$2 が$3にコメントしました","notification_$_and_$_others_commented_on_$":"$1 と他$2 人が$3にコメントしました","comments_requires_account":"Wunderlist Proに登録し、コメントを入力してみる","non_pro_trial_free_limit_reached":"無料サービスでの制限に達しました！","non_pro_trial_write_next_comment_$":"$コメントを追加することができます。","non_pro_trial_upload_next_file_$":"$ファイルを追加することができます。","non_pro_trial_assign_next_to_do_$":"$タスクを追加することができます。","button_signup_or_login":"新規登録またはログイン","button_it_is_completely_free":"全て無料です","label_free_download_for_platforms":" iPhone、iPad、Android、Windows、Macでのご利用が無料です","label_wunderlist_to_get_things_done":"５百万人以上の人々がWunderlistを使いタスクを達成しています。","label_people_who_use_wunderlist":"Wunderlistの利用者を見る","label_wunderlist_uses":"ビジネスを行う、愛する人と買い物リストをシェアする、自分の日常生活を管理するなどどのような場合においても、Wunderlistはあなた、仲間、家族に最高のTo-Doリストを提供します。","label_install_browser_extension":"ブラウザ拡張をインストール","label_install_chrome_browser_extension":"Chromeのブラウザ拡張をインストール","label_newsletter_signup":"ニュースレターの購読申し込み","label_know_upcoming_features":"近日公開の機能について一番にお知らせが届きます","label_learn_more_about_wunderlist":"Wunderlistについてもっと知ることができます","label_learn_more":"もっと詳しく...","label_your_email_address":"あなたのメールアドレス","button_subscribe_to_newsletter":"購読申し込み","button_sending_subscribe_to_newsletter":"送信中...","iyf4_usermenu_label":"Wunderlist Proを無料でゲット","iyf4_notification_label":"友達を招待して、Wunderlist Proを最大１２ヶ月無料でゲットしよう！","iyf4_notification_button_label_var_a":"招待を開始","iyf4_notification_button_label_var_b":"友達を招待","iyf4_notification_button_label_var_c":"Wunderlist Proを無料でゲット","iyf4_notification_button_label_var_d":"Wunderlist Proをシェア","iyf4_dialog_invite_headline_$":"友達を招待して、Wunderlist Proに最大$ で登録しよう！","iyf4_dialog_invite_headline_incentive":"１２ヶ月無料","iyf4_dialog_invite_incentive_$":"Wunderlistに$、Wunderlist Pro を無料で一ヶ月あなたと友達にプレゼントします（最大１２ヶ月まで）","iyf4_dialog_invite_incentive_terms":"参加するあらゆる友人のために","iyf4_dialog_tweet":"Wunderlistを使って毎日を組み立てるのが大好き。Wunderlist Proを無料で一ヶ月分ここからゲット：","iyf_notification_label":"友達にWunderlistを紹介し、Wunderlist Proを最大１２ヶ月無料でゲットしよう！","iyf_notification_button_label":"Pro版へ！","iyf_dialog_step1_headline":"Pro版の無料のアカウントをゲット","iyf_dialog_step1_subheadline":"簡単な３つのステップで","iyf_dialog_step1_instruction1_headline":"友達の招待を開始する","iyf_dialog_step1_instruction1_subheadline":"Facebook、ツイッターまたはメールで","iyf_dialog_step1_instruction2_headline":"友達が登録申請をする","iyf_dialog_step1_instruction2_subheadline":"友達がWunderlistに登録されるまで、じっと待ちましょう。","iyf_dialog_step1_instruction3_headline":"無料のProのアカウントをお楽しみください","iyf_dialog_step1_instruction3_subheadline":"招待を承認する友達一人につき１ヶ月","iyf_dialog_step1_instruction3_subheadline_$_plural":"招待を承認する友達$ 人につき１ヶ月","iyf_dialog_step1_next_button":"招待を開始","iyf_dialog_step2_subheadline":"無料のProアカウントをゲットするには","iyf_dialog_step2_divider_label":"このリンクをシェアする","iyf_dialog_share_on_facebook":"Facebookでシェアする","iyf_dialog_post_on_twitter":"Twitterでツイートする","iyf_dialog_email_placeholder":"メールアドレスを入力する...","iyf_dialog_more_placeholder":"さらに追加...","iyf_dialog_step3_headline":"シェアしていただき、ありがとうございます","iyf_dialog_step3_subheadline":"友達が参加するまで、じっと待ちましょう","iyf_dialog_step3_success_headline":"招待状が送信されました","iyf_dialog_step3_success_subheadline":"Pro accountが用意でき次第、すぐにご連絡します。","iyf_dialog_step3_invite_more":"もっと招待する","meta_title":"Wunderlist 2：美しくシンプルなTo Doリストアプリケーション","meta_description":"５百万人以上の人々が既にWunderlistを使い、タスクを管理し達成しています。Wunderlistは、あなた、仲間、家族に最高のTo-Doリストを提供します。","meta_keywords":"6wunderkinder、生産性、協力、タスク管理、タスクマネジャー、To-Do、タスク、リスト、課題、課題処理、整理、計画、ショッピングリスト、リマインダー、サブタスク、スマートリスト、買い物リスト、映画リスト、共有リスト","enable_desktop_notifications_text":"ブラウザ内で'確認'、'許可'の順にクリックするとデスクトップ通知を有効化できます。","notification_add_to_browser":"Wunderlist のウェブアプリをブラウザに追加し、Wunderlistにワンクリックでアクセスしましょう。","notification_add_extension_to_browser":"お気に入りのウェブコンテンツを全てWunderlistに直接、簡単に保存しましょう。 Add to WunderlistのChrome拡張をインストールする。","button_add_to_chrome":"Chromeに追加する","button_add_to_store_added":"追加しました","aria_activity_center_hint":"アクティビティセンター。エスケープ・キーを押して閉じる","aria_exit_search":"検索を閉じる","aria_search":"検索","aria_sort_list":"リストの並び替え","aria_thank_you":"当製品のアクセシビリティ機能はいかがでしょうか？弊社のアクセシビリティ機能導入に関連したフィードバックを、support@wunderlist.com. まで是非お寄せ下さい。Wunderlistをご利用いただきありがとうございます。","aria_user_menu_hint":"ユーザーメニュー。エスケープ・キーを押して閉じる","aria_assign_to_$":"$に割り当てる","momentjs_months":"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月","momentjs_monthsShort":"1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月","momentjs_weekdays":"日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日","momentjs_weekdaysShort":"日曜_月曜_火曜_水曜_木曜_金曜_土曜","momentjs_weekdaysMin":"日_月_火_水_木_金_土","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[今日の] LT","momentjs_calendar_nextDay":"[明日の] LT","momentjs_calendar_nextWeek":"dddd [の] LT","momentjs_calendar_lastDay":"[昨日の] LT","momentjs_calendar_lastWeek":"[先週] dddd [の] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"%s後","momentjs_relativeTime_past":"%s 前","momentjs_relativeTime_s":"数秒","momentjs_relativeTime_m":"1分","momentjs_relativeTime_mm":"%d分","momentjs_relativeTime_h":"1時間","momentjs_relativeTime_hh":"%d時間","momentjs_relativeTime_d":"1日","momentjs_relativeTime_dd":"%d日","momentjs_relativeTime_M":"1ヶ月","momentjs_relativeTime_MM":"%dヶ月","momentjs_relativeTime_y":"1年","momentjs_relativeTime_yy":"%d年"}
};
});
define('languages/georgian',[],function() {
return {
'name': 'georgian',
'data': {"actionbar_print_selected_item":"ელემენტის დაბეჭდვა","actionbar_print_$_selected_items_plural":"$ ელემენტის დაბეჭდვა","actionbar_email_selected_item":"ელემენტის გაგზავნა","actionbar_email_$_selected_items_plural":"$ ელემენტის გაგზავნა","actionbar_sort_alphabetically":"დახარისხება ანბანით","actionbar_sort_due_date":"დახარისხება ვადით","actionbar_sort_assignee":"დახარისხება შემსრულებლით","api_error_account_already_exists":"ანგარიში ამ ელ.ფოსტით უკვე არსებობს.","api_error_connection_error":"უკაცრავად, სერვერთან წვდომა არ ხერხდება. სცადეთ ხელახლა.","api_error_general_error":"უკაცრავად, ამჟამად სერვერთან წვდომა არ ხერხდება. სცადეთ ხელახლა.","api_error_incorrect_login":"ელ.ფოსტა ან პაროლი არასწორია.","api_error_incorrect_password":"პაროლი არასწორია.","api_error_service_down":"WunderAPI სერვისის საკვანძო ნაწილი გათიშულია.","api_error_unknown":"მოხდა მოულოდნელი შეცდომა.","api_error_validation_error_unable_to_signup":"მოცემული ელ.ფოსტის მისამართით გაწევრიანება შეუძლებელია.","api_error_not_a_beta_user":"თქვენ არ ხართ Wunderlist-ის საცდელი ვერსიის წევრი.","button_back":"უკან","button_cancel":"გაუქმება","button_confirm":"დამოწმება","button_download":"გადმოწერა","button_change":"შეცვლა","button_choose":"არჩევა","button_connect":"დაკავშირება","button_connect_facebook":"Facebook-თან დაკავშირება.","button_continue":"გაგრძელება","button_delete":"წაშლა","button_disconnect":"კავშირის გაწყვეტა","button_dismiss":"გამოტოვება","button_done":"დასრულება","button_edit":"შეცვლა","button_get_started":"დავიწყოთ","button_go_back":"დაბრუნება","button_go_back_sentence":"დაბრუნება","button_learn_more":"ვრცლად","button_go_back_to_login":"დაბრუნდით, რომ შეხვიდეთ","button_go_to_web_app":"ვებ-აპლიკაციის გახსნა","button_join_now":"Join Now","button_log_in":"შესვლა","button_log_in_with_$":"Log In With $","button_log_out":"გასვლა","button_log_in_facebook":"Facebook-ით შესვლა","button_next":"შემდეგი","button_no":"არა","button_no_due_date":"ვადა არ არის განსაზღვრული","button_ok":"OK","button_remove_due_date":"ვადის მოცილება","button_remove_reminder":"შეხსენების მოცილება","button_email_list":"სიის გაგზავნა","button_print_list":"სიის დაბეჭდვა","button_reset_password":"პაროლის ჩამოყრა","button_retry":"ხელახლა ცდა","button_save":"შენახვა","button_send":"გაგზავნა","button_sign_up":"გაწევრიანება","button_sign_up_with_$":"Sign Up With $","button_sign_up_for_free":"გაწევრიანდით უფასოდ","button_sign_up_facebook":"Facebook-ით გაწევრიანება","button_support_center":"მხარდაჭერის ცენტრს","button_subscribe":"დიახ, თუ შეიძლება!","button_try_again":"ხელახლა ცდა","button_try_wunderlist":"სცადეთ Wunderlist-ი","button_yes":"დიახ","coachmark_all_list_empty":"ჯერ-ჯერობით არაფერი დაგიმატებიათ. რაღას უცდით, დაამატეთ რაიმე.","coachmark_completed_list_empty":"ჯერ-ჯერობით არცერთი დავალება არ შეგისრულებიათ. რაღას უცდით, შეასრულეთ რომელიმე ელემენტი თქვენი დავალებიდან.","coachmark_no_search_results":"არაფერი მოიძებნა","coachmark_sharing_invite_friends_heading":"მოიწვიეთ მეგობრები","coachmark_sharing_invite_friends_text_$":"თქვენს მეგობრებს საშუალება ექნებათ შექმნან, წაშალონ და გახსნან ელემენტები ამ სიაში “$”.","coachmark_sharing_recent_no_contacts_heading":"ბოლო კონტაქტები არ მოიძებნა","coachmark_sharing_recent_no_contacts_text_$":"ჩაწერეთ ელ.ფოსტის მისამართი ან მოძებნეთ თქვენს კონტაქტებში. დამატების შემდეგ თქვენს მეგობრებს საშუალება ექნებათ შექმნან, წაშალონ და გახსნან ელემენტები სიაში “$”.","coachmark_assigned_to_me_list_empty":"თქვენზე არაფერია დაკისრებული","coachmark_conversations_list_empty":"There are no current conversations.","coachmark_starred_list_empty":"მნიშვნელოვანი ელემენტები არ მოიძებნა","coachmark_today_list_empty":"გილოცავთ, დღეისთვის არაფერი გაქვთ შესასრულებელი ან ვადაგადაცდენილი.","coachmark_week_list_empty":"შვებულებაში ხართ? შემდეგი 7 დღისთვის არაფერი გაქვთ დაგეგმილი.","error_list_not_found":"სია არ მოიძებნა","error_share_not_created":"სიის გაზიარებისას მოხდა შეცდომა. სცადეთ ხელახლა.","error_task_not_found":"ელემენტი არ მოიძებნა","error_page_not_found":"გვერდი არ მოიძებნა","error_title_not_found":"არ მოიძებნა","label_are_you_sure_permanently_delete_item":"ნამდვილად გსურთ, ამ ელემენტის სამუდამოდ წაშლა?","label_are_you_sure_permanently_delete_item_plural":"ნამდვილად გსურთ, ამ ელემენტების სამუდამოდ წაშლა?","label_activity_center":"აქტივობის ცენტრი","label_are_you_sure_permanently_delete_$_list":"ნამდვილად გსურთ, სიის “$” სამუდამოდ წაშლა?","label_are_you_sure_permanently_delete_$_task":"ნამდვილად გსურთ, ელემენტის “$” სამუდამოდ წაშლა?","label_are_you_sure_permanently_delete_task_plural":"ნამდვილად გსურთ, ამ ელემენტების სამუდამოდ წაშლა?","label_are_you_sure_permanently_delete_$_subtask":"ნამდვილად გსურთ, ქვედავალების “$” სამუდამოდ წაშლა?","label_cant_undo":"მოქმედების გაუქმება შეუძლებელი გახდება.","label_completed_tasks_heading":"შესრულებული ელემენტი","label_$_completed_tasks_heading_plural":"$ შესრულებული ელემენტი","label_connecting":"დაკავშირება...","label_minisite_description_line_1":"ადევნეთ თვალყური ყველაფერს, რისი შესრულებაც გსურთ.","label_minisite_description_line_2":"Wunderlist-ი უფასოა და ხელმისაწვდომია ყველა ძირითადი პლატფორმისთვის.","label_minisite_share_deleted_or_no_access":"როგორც ჩანს იგი წაიშალა, ან მასთან წვდომა აღარ გაქვთ.","label_minisite_contact_sender_for_info":"დაუკავშირდით პიროვნებას, რომელმაც გაგიზიარათ ეს სია.","label_minisite_$_invited_you_to_the_list_$":"$1-მ(ა) მიგიწვიათ სიაში $2","label_minisite_empty_list_$":"ეს სია ამჟამად ცარიელია, დაეხმარეთ მათ დაიწყონ. უბრალოდ დააჭირეთ ღილაკს \"გაწევრიანება\" და დაამატეთ სიაში ($) ახალი ელემენტი.","label_day_0":"კვ","label_day_1":"ორშ","label_day_2":"სამ","label_day_3":"ოთხ","label_day_4":"ხუთ","label_day_5":"პარ","label_day_6":"შაბ","label_delete_file":"Delete File","label_delete_list":"სიის წაშლა","label_delete_task":"ელემენტის წაშლა","label_delete_task_plural":"ელემენტების წაშლა","label_delete_subtask":"ქვედავალების წაშლა","label_due_$":"ვადა - $","label_due_on":"ვადა $","label_due_date":"შესრულების ვადა","label_email":"ელ.ფოსტა","label_every":"ყოველ","label_loading":"იტვირთება...","label_logging_out":"გასვლა...","label_name":"სახელი","label_newsletter":"Wunderlist-ის სიახლეები","label_none":"არაფერი","label_notification":"შეტყობინება","label_oops":"უკაცრავად!","label_or":"ან","label_password":"პაროლი","label_relative_date_today":"დღეს","label_relative_date_today_with_date":"დღეს, $","label_relative_date_today_mid_sentence":"დღეს","label_relative_date_tomorrow":"ხვალ","label_relative_date_tomorrow_with_date":"ხვალ, $","label_relative_date_tomorrow_mid_sentence":"ხვალ","label_relative_date_yesterday":"გუშინ","label_remind_me_at_$":"შეხსენება: $","label_reminder":"შეხსენება","label_reminder_message_$":"უბრალოდ მეგობრული შეხსენება: $","label_repeat_every_day":"გამეორება ყოველ დღე","label_repeat_every_week":"გამეორება ყოველ კვირა","label_repeat_every_month":"გამეორება ყოველ თვე","label_repeat_every_year":"გამეორება ყოველ წელს","label_repeat_custom":"მორგებული...","label_repeat_day":"ყოველ დღე","label_repeat_day_$_plural":"ყოველ $ დღეში","label_repeat_month":"ყოველ თვე","label_repeat_month_$_plural":"ყოველ $ თვეში","label_repeat_week":"ყოველ კვირა","label_repeat_week_$_plural":"ყოველ $ კვირაში","label_repeat_never":"არ გამეორდეს","label_repeat_year":"ყოველ წელს","label_repeat_year_$_plural":"ყოველ $ წელში","label_reset_password":"პაროლის ჩამოყრა","label_rights_reserved":"ყველა უფლება დაცულია","label_still_fetching_tasks":"გთხოვთ დაიცადოთ...","label_sync":"სინქრონიზაცია","label_time_am":"AM","label_time_day_plural":"დღე","label_time_week_plural":"კვირა","label_time_month_plural":"თვე","label_time_pm":"PM","label_time_year_plural":"წელი","label_assign_to":"დავალების დაკისრება","label_unassigned":"არავისზეა დაკისრებული","label_assign_me":"მე","label_created_$":"შეიქმნა $","label_created_by_$":"ავტორი $","label_created_on_$":"შეიქმნის დრო $","label_created_$_by_$":"შეიქმნა $1, ავტორი $2","label_created_by_$_on_$":"ავტორი $1, შეიქმნის დრო $2","label_completed_$":"შესრულდა$","label_completed_on_$":"შესრულდა$","label_completed_$_by_$":"შესრულდა $1 ავტორი $2","label_completed_by_$_on_$":"შეასრულა $1 დრო $2","login_add_photo_hint":"ატვირთეთ სურათი, მოირგეთ თქვენი Wunderlist-ის ანგარიში.","login_already_have_account":"უკვე გაქვთ ანგარიში?","login_email_not_valid":"შეიყვანეთ ნამდვილი ელ.ფოსტა.","login_empty_name":"შეიყვანეთ სახელი.","login_empty_password":"შეიყვანეთ სასურველი პაროლი.","login_password_not_valid":"შეიყვანეთ პაროლი სწორად.","login_empty_email":"შეიყვანეთ სხვა ელ.ფოსტის მისამართი","login_enter_name":"თქვენი სახელი?","login_enter_password":"თითქმის დასრულდა","login_enter_password_hint":"გაწევრიანების პროცესის დასასრულებლად შეიყვანეთ პაროლი.","login_forgot_password":"პაროლის აღდგენა","login_forgot_password_heading":"დაგავიწყდათ პაროლი?","login_forgot_password_text":"ჩაწერეთ ელ.ფოსტის მისამართი რომელიც გამოიყენეთ გასაწევრიანებლად და ჩვენ გამოგიგზავნით ბმულს პაროლის ჩამოსაყრელად.","login_no_account_yet":"არ გაქვთ ანგარიში?","login_password_changed":"პაროლი განახლდა","login_password_not_match":"შეყვანილი პაროლები არ ემთხვევა ერთმანეთს.","login_password_reset_email_has_been_sent":"პაროლის ჩამოყრის ინსტრუქციის სანახავად შეამოწმეთ ელ.ფოსტა.","login_reset_password_heading":"დროა დააყენოთ ახალი პაროლი.","login_reset_password_success":"უბრალოდ დააჭირეთ ღილაკს \"უკან\" და შედით Wunderlist-ში.","login_reset_password_success_heading":"გილოცავთ! თქვენი პაროლი შეიცვალა.","login_password_too_short":"პაროლი უნდა შეიცავდეს სულ მცირე 5 სიმბოლოს.","login_sign_up":"გაწევრიანება.","login_want_to_try_again":"გსურთ, სცადოთ ხელახლა?","login_accept_terms":"By signing up you accept our $1 and $2.","logout_timeout_title":"სინქრონიზაციის შეცდომა","logout_timeout_text":"თქვენი მონაცემების სინქრონიზაცია არ მოხერხდა. რა გსურთ, სცადოთ ხელახლა თუ უბრალოდ გამოხვიდეთ?","mobile_tutorial_welcome_to":"მოგესალმებით","mobile_tutorial_wunderlist_subtitle":"საყვარელი და მარტივი დავალებათა დამგეგმავი","notifications_desktop_enable_heading":"გსურთ, სისტემური შეტყობინების ჩართვა?","notifications_no_notifications":"აქტივობა არ არის","notifications_no_notifications_message":"აქ გამოჩნდება გაზიარებული სიის ან სხვა აქტივობის მოწვევა.","notifications_event_accept":"მიღება","notifications_event_accepted":"მიღებულია","web_upgrade_ie9_not_supported":"Wunderlist does not support Internet Explorer 9. Please upgrade to $ or $ for a better experience.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Looks like you are using a device with a touch screen. Would you like to enable a touch optimized interface? You can always change this in your account settings.","web_setting_enable_touch_for_$":"Enable Touch for: $","web_settings_text_refresh_may_be_required":"Refresh may be required","rate_label":"Wunderlist-ის შეფასება","rate_app_heading":"შეაფასეთ და განიხილეთ Wunderlist-ი","rate_app_message_web_chrome":"გმადლობთ, რომ იყენებთWunderlist-ს, გაგვიხარდება თუ გაგვიზიარებთ თქვენს აზრს ჩვენს შესახებ! შეაფასეთ ჩვენი პროდუქტი Chrome Web Store-ზე და გვიჩვენეთ რამდენად მოგწონთ Wunderlist-ი ★★★★★","rate_app_button_later":"მოგვიანებით შემახსენე","rate_app_button_no":"არა, გმადლობთ","rate_app_button_yes":"Wunderlist-ის შეფასება","placeholder_add_due_today_to_inbox":"დღევანდელი ელემენტის \"შემომავალში\" დამატება...","placeholder_add_list":"სიის დამატება...","placeholder_add_subtask":"ქვედავალების დამატება","placeholder_add_starred_to_inbox":"მნიშვნელოვანი ელემენტის \"შემომავალში\" დამატება...","placeholder_add_task_to_$":"ელემენტის დამატება სიაში “$”","placeholder_add_to_inbox":"ელემენტის დამატება “შემომავალში”","placeholder_new_list":"ახალი სია","placeholder_remind_me":"შეხსენება","placeholder_search":"ძებნა...","placeholder_sharing_search":"სახელი ან ელ.ფოსტის მისამართი...","placeholder_set_due_date":"ვადის განსაზღვრა","browser_outdated_heading":"უკაცრავად, ჩანს თქვენი ბროუზერი გასაახლებელია.","browser_outdated_update":"განაახლეთ ბროუზერი","browser_outdated_explanation":"Wunderlist-ი შექმნილია უახლესი და საუკეთესო ტექნოლოგიებით. Wunderlist-ის გამოსაყენებლად განაახლეთ თქვენი ბროუზერი.","prenamed_list_movies":"ფილმების სია","prenamed_list_private":"პირადი","prenamed_list_shopping":"საყიდლები","prenamed_list_wishlist":"სურვილების სია","prenamed_list_work":"სამუშაო","prenamed_list_read_later":"მოგვიანებით წაკითხვა","settings_account_change_email":"ელ.ფოსტის შეცვლა...","settings_account_change_password":"პაროლის შეცვლა...","settings_account_delete_confirmation":"ჩაწერეთ \"დარწმუნებული ვარ\"","settings_account_delete_confirmation_text":"დარწმუნებული ვარ","settings_account_drop_image":"ჩააგდეთ სურათი აქ","settings_account_connect_facebook_account":"Wunderlist-ის Facebook-თან დაკავშირებით, მეგობრებისთვის სიის გაზიარება გახდება უფრო სწრაფი და მარტივი.","settings_general_12_hour":"12 სთ","settings_general_24_hour":"24 სთ","settings_general_confirm_deletion":"დამოწმება წაშლისას","settings_general_create_new_tasks":"ახალი ელემენტის დამატება","settings_general_date_format":"დროის ფორმატი","settings_general_language":"ენა","settings_general_start_of_week":"კვირის დასაწყისი","settings_general_start_of_week_sunday":"კვირა","settings_general_start_of_week_saturday":"შაბათი","settings_general_start_of_week_monday":"ორშაბათი","settings_general_sound_task_completion":"ხმოვანი სიგნალი ელემენტის დასრულებისას","settings_general_sound_new_notifications":"ხმოვანი სიგნალი შეტყობინების მიღებისას","settings_general_print_done_tasks":"შესრულებული ელემენტების დაბეჭდვა","settings_general_tasks_bottom":"სიის ბოლოში","settings_general_tasks_top":"სიის თავში","settings_general_time_format":"დროის ფორმატი","settings_heading_team":"Business","settings_heading_about":"ინფორმაცია","settings_heading_account":"ანგარიში","settings_heading_general":"ზოგადი","settings_heading_notification":"შეტყობინება","settings_heading_shortcuts":"ცხელი ღილაკები","settings_heading_sidebar":"გვერდპანელი","settings_imprint":"Imprint","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"მნიშვნელოვანი მოვლენების შეტყობინება:","settings_notifications_notify_me_on_text":"We’ll notify you on certain events, such as when someone accepts an invitation to a shared list, or when someone adds or completes an item in one of your shared lists.","settings_sidebar_smart_lists_title":"გვერდპანელში შემდეგი ფილტრების ჩვენება:","settings_sidebar_smart_lists_auto":"ავტომატურად","settings_sidebar_smart_lists_hidden":"დამალვა","settings_sidebar_smart_lists_visible":"გამოჩენა","settings_sync_full":"სინქრონიზაცია","settings_account_account_backup":"Account Backup","settings_account_restore_backup":"Import Backup Data","settings_account_backup_description":"Backup data includes all your Lists, Tasks, Subtasks, Notes, and Reminders. Please note it does not include those Lists that were shared with you, Files, Comments, Shared List recipients and previous application settings.","settings_account_data_is_being_processed":"Hold tight! Your backup data is being processed. We will send you an email when everything is complete.","settings_account_change_password_error":"პაროლის შეცვლისას მოხდა შეცდომა. სცადეთ ხელახლა.","settings_account_click_to_download_backup":"Click to Download","settings_account_create_backup":"Create Backup","settings_account_current_password":"მიმდინარე პაროლი","settings_account_delete_account":"ანგარიშის წაშლა","settings_account_delete_account_confirm":"ნამდვილად გსურთ, ანგარიშის წაშლა?","settings_account_delete_account_confirm_text":"ანგარიშის წაშლა გამოიწვევს ყველა სიის და ელემენტის სამუდამოდ  წაშლას.","settings_account_fetching_data":"Fetching data ...","settings_account_new_password":"ახალი პაროლი","settings_account_repeat_new_password":"გაიმეორეთ პაროლი","settings_account_right_click_and_save_as":"Right Click and Save","settings_third_party_libraries":"ლიცენზია","settings_background_credits":"ფონის ავტორები","settings_notifications_email_enabled":"ელ.ფოსტით შეტყობინება","settings_notifications_desktop_enabled":"სისტემური შეტყობინება","settings_notifications_push_enabled":"გარე შეტყობინება","settings_privacy_policy":"პირადობის პოლიტიკა","settings_shortcuts_arrow_keys":"ისრები","settings_shortcuts_delete_item":"მონიშნული სიის ან ელემენტის წაშლა","settings_shortcuts_mark_done":"ელემენტის მონიშვნა როგორც \"შესრულებული\"","settings_shortcuts_mark_starred":"ელემენტის მონიშვნა როგორც \"მნიშვნელოვანი\"","settings_shortcuts_new_list":"ახალი სიის დამატება","settings_shortcuts_new_task":"ახალი ელემენტის დამატება","settings_shortcuts_open_all_smart_list":"ფილტრი 'ყველა'-ს გახსნა","settings_shortcuts_open_assigned_smart_list":"Open 'Assigned to Me' Smart List","settings_shortcuts_open_conversations_smart_list":"Open 'Conversations' Smart List","settings_shortcuts_open_done_smart_list":"ფილტრი 'შესრულებული'-ს გახსნა","settings_shortcuts_open_inbox":"შემომავლის გახსნა","settings_shortcuts_open_preferences":"პარამეტრების გახსნა","settings_shortcuts_open_search":"ძებნა","settings_shortcuts_open_starred_smart_list":"ფილტრი 'მნიშვნელოვანი'-ს გახსნა","settings_shortcuts_open_today_smart_list":"ფილტრი 'დღევანდელი'-ს გახსნა","settings_shortcuts_open_week_smart_list":"ფილტრი 'კვირა'-ს გახსნა","settings_shortcuts_reset":"საწყისი პარამეტრების აღდგენა","settings_shortcuts_select_all_tasks":"ყველა ელემენტის მონიშვნა","settings_shortcuts_show_more":"სხვა ცხელი ღილაკების ჩვენება","settings_shortcuts_hide":"დამალვა","settings_shortcuts_show_notifications":"აქტივობის ცენტრი გამოჩენა","settings_shortcuts_step_through_list":"სიებს შორის გადასვლა","settings_shortcuts_step_through_task":"დავალებებს შორის გადასვლა","settings_terms_of_use":"გამოყენების პირობები","settings_account_header_free":"უფასო","settings_account_header_unregistered":"Sign Up","settings_account_header_account_$":"$ ანგარიში","settings_account_pro_description":"Add comments and files to your to-dos and assign them to your colleagues. Collaboration in teams has never been easier!","settings_account_register_wunderlist_description":"Register for Wunderlist to sync your lists across all your devices.","settings_manage_subscription_button":"Manage Subscription","settings_account_header_pro":"პრო","settings_account_header_pro_account_$":"Yay, you’re a $!","settings_account_header_pro_description":"Wunderlist Pro is the best way to keep your projects on track. Invite your friends and colleagues to collaborate and make things happen!","settings_upgrade_to_pro_label":"$ ვერსიით გაუმჯობესება","settings_label_pro_account":"Pro Account","settings_label_purchased_from_$":"Purchased from: $","settings_label_purchased_from_$_by_$":"Purchased from $1 by: $2","settings_label_expires_in_$":"Expires in $","setting_label_next_billing_date":"Next Billing Date:","setting_label_cancel_subscription":"Cancel Subscription","setting_heading_cancel_subscription":"Do you really want to cancel your Wunderlist Pro Subscription?","setting_description_cancel_subscription":"You will still have access to all your data, but once your subscription expires, you will only be able to use Wunderlist’s standard features.","setting_label_cancel_subscription_success":"Your subscription was cancelled successfully.","settings_label_invoices":"Invoices","settings_label_become_a_pro":"Become a Pro","settings_payment_info_expires_$_relative":"Expires $","settings_payment_info_expires_$_absolute":"Expires in $1 days: $2","settings_manage_subscription_error":"Sorry, an error happened while trying to manage your subscription.","group_billing_packages_title":"Plans for every business ","group_billing_packages_text":"Wunderlist for Business provides you with all the features you need to work smarter as a team at an affordable price. Simply select the right plan for your business now.","group_billing_plan_table_team_size":"Team Size","group_billing_plan_table_price":"Price","group_billing_plan_table_package_name_$":"$ Members","group_billing_buy_button_label":"Purchase","group_billing_$_off":"$ off","group_billing_larger_team_$":"Have a larger team? $","group_billing_contact_us":"Contact us!","group_billing_downgrade_error_$_$":"In order to switch to the $1 Members plan, you must remove $2 teammate(s) from the account. ","group_billing_manage_team":"Click here to manage your team.","group_billing_button_label_manage":"Manage","group_billing_team_plan_title":"Your Wunderlist Pro Plan","group_billing_team_plan_text":"Wunderlist Pro grows right along with your team! Adding members is super easy, just enter their email addresses below. It’s that simple whether or not they’re already a Wunderlist user.","group_billing_upgrade_button_label":"Change Plan","group_billing_upgrade_plan_button_label":"Upgrade","group_billing_Downgrade_plan_button_label":"Downgrade","group_billing_view_plans_button_label":"View Plans","group_billing_manage_team_header":"Manage Team Members","group_billing_email_address_input_placeholder":"Email address","group_billing_manage_count_$_of_$":"$1 of $2","group_billing_cancel_team_plan":"Cancel Your Wunderlist Pro Plan","group_billing_search_coachmark":"To add members, simply enter the email addresses of your teammates, and they'll be added to your Pro plan.","group_billing_cancel_header":"Are you sure you want to cancel your team’s Wunderlist Pro Subscription?","group_billing_change_plan_confirmation_$_$_$":"Changing plans is easy. If you go for $1 Members plan now, you’ll be billed $2 in the next billing cycle starting on $3. Are you sure you want to do this now?","group_billing_cancel_text":"Your Pro subscription will run until the end of month, and you won’t be billed again. While you’ll still retain the ability to view any Pro features like files attached to tasks, you won’t be able to make any changes to them.","error_goup_billing_user_already_pro":"Looks like this person already has a Wunderlist Pro account. Give the gift of Pro to another teammate!","error_group_billing_wait_subscription_runs_out":"You’ll have to wait until your current subscription runs out before repurchasing. Expires on: $.","button_label_buy_wunderlist_for_business":"Go to Wunderlist for Business","benefit_payment_service_unavailable":"Payment Service Unavailable","benefit_name":"Wunderlist","benefit_header_$":"შეიძინეთ &@","benefit_header_description":"Collaboration in teams and businesses has never been easier! Here are 5 very good reasons to sign up for Wunderlist Pro.","benefit_button_buy_monthly":"Monthly","benefit_assign_tasks_title":"დავალების დაკისრება","benefit_assign_tasks_description":"Easily delegate and track the status of to-dos amongst colleagues and friends!","benefit_unlimited_subtasks_title":"შეუზღუდავი ქვედავალებები","benefit_unlimited_subtasks_decription":"Break big tasks into small, achievable steps for improved productivity — without limitations.","benefit_comments_title":"Comments","benefit_comments_description":"Start a conversation with your teammates about any of your to-dos. Leave feedback, ask a question or add some extra insight.","benefit_backgrounds_update_$":"To use our new backgrounds, upgrade to a $","benefit_additional_backgrounds_title":"დამატებითი ფონები","benefit_additional_backgrounds_description":"Discover 8 new beautiful backgrounds to customize Wunderlist just the way you like it!","benefit_files_title":"ფაილები","benefit_files_description":"Attach files to your to-dos and share them with your teammates.","benefit_coming_soon":"მალე","benefit_assign_become_pro":"Assign to-dos to your coworkers with Wunderlist","benefit_label_accept_terms":"By purchasing a Wunderlist Pro subscription, you accept the $1 and $2.","benefit_label_need_more_subtasks":"Need more subtasks?","sharing_connect_facebook_sharing":"დაუკავშირეთ თქვენი Wunderlist-ის ანგარიში Facebook-ს და მოიწვიეთ მეგობრები.","sharing_facebook_apprequest_message_$user_$list":"მომხმარებელს (“$1”) სურს, რომ გაგიზიაროთ სია “$2”","sharing_invite":"მეგობრების მოწვევა","sharing_invite_friends":"მეგობრების მოწვევა","sharing_inviting_requires_account":"გაწევრიანდით და გაუზიარეთ სიები თქვენს მეგობრებსა და თანამშრომლებს.","sharing_leave_action":"ნამდვილად გსურთ, ამ სიის დატოვება?","sharing_leave_button":"გაზიარებული სიის დატოვება","sharing_list_members":"წევრები","sharing_list_owner":"მფლობელი","sharing_list_pending_member":"მოლოდინშია","sharing_tab_recents":"ბოლო","sharing_shared_with_you_by":"გაგიზიარათ","smart_list_assigned_to_me":"ჩემზე დაკისრებული","smart_list_conversations":"Conversations","smart_list_all":"ყველა","smart_list_completed":"შესრულებული","smart_list_inbox":"შემომავალი","smart_list_starred":"მნიშვნელოვანი","smart_list_today":"დღევანდელი","smart_list_week":"კვირა","label_tell_friends":"უთხარით მეგობრებს","social_sharing_heading":"მოგწონთ Wunderlist-ი? უთხარით თქვენს მეგობრებს!","social_sharing_dialog_headline":"Love Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"ახლა არა","social_sharing_button_no_thanks":"არა, გმადლობთ","social_sharing_button_facebook":"გაზიარება","social_sharing_button_follow_us":"მოგვყევით","social_sharing_button_like_us":"მოგვიწონეთ","social_sharing_heading_thanks":"მოგვყევით და მიიღეთ Wunderlist-ის ბოლო სიახლეები","social_sharing_button_twitter":"Tweeter","general_sharing_placeholder":"I’m using Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","twitter_sharing_placeholder":"I’m using @Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","tutorial_welcome_notes_title":"ჩანაწერები","tutorial_welcome_notes_text":"მოძრავი ჩანაწერები საშუალებას მოგცემთ იმუშაოთ Wunderlist-ში ან მის გარეთ.","tutorial_welcome_notifications_title":"აქტივობის ცენტრი","tutorial_welcome_notifications_text":"განსაზღვრეთ როგორ გსურთ შეტყობინების მიღება. აირჩიეთ, როგორ მიიღებთ მოწვევას ან განახლების შეტყობინებას გაზიარებულ სიაში ელ.ფოსტით, სისტემური შეტყობინებით თუ აქტივობის ცენტრიდან.","tutorial_welcome_sharing_title":"მეგობრების მოწვევა","tutorial_welcome_sharing_text":"ახლა უფრო მარტივია მოიწვიოთ მეგობრები და თანამშრომლები დასახმარებლად.","tutorial_welcome_subtasks_title":"შეხსენება, განმეორბითი დავალება ან ქვედავალება","tutorial_welcome_subtasks_text":"Wunderlist-ს ახლა უკვე აქვს ვრცელი ხედი, რომელიც საშუალებას მოგცემთ დაამატოთ განმეორებითი დავალება, შეხსენება, შენიშვნა და ქვედავალება.","tutorial_welcome_user_title":"ყველაფერი თქვენს შესახებ!","tutorial_welcome_user_text":"გამართეთ თქვენი ანგარიში, შეამოწმეთ სინქრონიზაციის მდგომარეობა და შეცვალეთ ფონი.","tutorial_welcome_newsletter_subscribe":"შემატყობინე ელ.ფოსტაზე Wunderlist-ის მნიშვნელოვანი განახლებისა და ახალი ფუნქციების შესახებ","tutorial_feature_pro_title":"Wunderlist Pro Feature","share_list_email_signature":"Sent with Wunderlist – My beautiful and simple to-do list\\nIt’s free for iPhone, iPad, Android, Mac, Windows PC and Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ ელემენტის სინქრონიზაცია არ მომხდარა","userbar_$_unsynced_item_plural":"$ არ არის სინქრონიზებული","userbar_account_settings":"ანგარიშის გამართვა","userbar_change_background":"ფონის შეცვლა","userbar_last_synced_$":"ბოლო სინქრონიზაცია - $","userbar_no_internet_connection":"კავშირი გაწყვეტილია","userbar_preferences":"გამართვა","userbar_sync_in_progress":"სინქრონიზაცია...","userbar_user_name_for_unregistered_mode":"გაწევრიანდით, რომ შეძლოთ სინქრონიზაცია","whatsnew_title":"სიახლეები","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Comments","whatsnew_label_voice":"Voice Input","whatsnew_label_groupbilling":"Team Pricing","whatsnew_copy_comments":"Keep all the conversations about your to-dos in one place with Comments in Wunderlist Pro. Leave feedback, ask a question or add extra insight to any of your to-dos to greatly improve communication within your team.","whatsnew_copy_pro_accounts":"Add Comments, Assign to-dos, add Files and create Unlimited Subtasks with Wunderlist Pro to accomplish more, together.","whatsnew_copy_voice":"Click the microphone icon to dictate your to-dos or even record a Voice Memo and attach it as a file.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Sign up to try Wunderlist Pro and add a File.","label_add_new_file":"Add a file...","file_uploaded_unsuccessfully":"Upload of $ failed. Please try again.","file_uploaded_failed":"Upload failed. Please try again.","file_uploaded_failed_deleted":"Upload of $ failed, because the file was deleted from your hard drive.","label_are_you_sure_permanently_delete_$_file":"Are you sure you want to permanently delete the file “$” from Wunderlist?","upload_file_was_not_synced_yet":"Please sync","upload_file_not_synced_yet":"Not Synced","placeholder_add_comments":"Add a comment...","placeholder_reply":"Reply...","button_label_go_pro_to_comment":"Go Pro to comment","comment_request_failed":"Sorry, we couldn't load Comments. Please try again.","comment_load_earlier":"View more Comments","coachmark_no_current_comments":"No comments yet.\\nStart your conversation here.","coachmark_comments_not_available":"Sorry, we couldn’t load the previous comments. Please try again in a few moments.","notification_$_commented_on_$":"$1 commented on $2","notification_$_and_$_commented_on_$":"$1 and $2 commented on $3","notification_$_and_$_others_commented_on_$":"$1 and $2 others commented on $3","comments_requires_account":"Sign up to try Wunderlist Pro and add a Comment.","non_pro_trial_free_limit_reached":"You’ve reached your Free limit!","non_pro_trial_write_next_comment_$":"You can add another Comment $.","non_pro_trial_upload_next_file_$":"You’ll be able to add another File $.","non_pro_trial_assign_next_to_do_$":"You can Assign another to-do $.","button_signup_or_login":"გაწევრიანდით ან შედით","button_it_is_completely_free":"სრულიად უფასოა","label_free_download_for_platforms":"ხელმისაწვდომია iPhone-ის, Mac-ის, Android-ის და Windows-ისთვის","label_wunderlist_to_get_things_done":"More than 5 million people use Wunderlist to get things done.","label_people_who_use_wunderlist":"იხილეთ ვინ იყენებს Wunderlist-ს:","label_wunderlist_uses":"თუ გსურთ მოაწესრიგოთ თქვენი ბიზნესი, გაუზიაროთ საყიდლების სია თქვენს შეყვარებულს ან უბრალოდ თვალი მიადევნოთ თქვენს ყოველდღიურ ცხოვრებას, Wunderlist-ი არის საუკეთესო საშუალება თქვენთვის, თქვენი გუნდისა და ოჯახისათვის.","label_install_browser_extension":"ბროუზერის დანამატის ინსტალაცია","label_install_chrome_browser_extension":"ბროუზერის დანამატის ინსტალაცია","label_newsletter_signup":"სიახლეების გამოწერა","label_know_upcoming_features":"შეიტყვეთ წინასწარ დაგეგმილი სიახლეების შესახებ","label_learn_more_about_wunderlist":"ვრცლად Wunderlist-ის შესახებ","label_learn_more":"ვრცლად...","label_your_email_address":"თქვენი ელ.ფოსტა","button_subscribe_to_newsletter":"გამოწერა","button_sending_subscribe_to_newsletter":"იგზავნება...","iyf4_usermenu_label":"Get Wunderlist Pro for Free","iyf4_notification_label":"Get up to 12 free months of Wunderlist Pro by inviting your friends!","iyf4_notification_button_label_var_a":"Start Inviting","iyf4_notification_button_label_var_b":"Invite Friends","iyf4_notification_button_label_var_c":"Get Wunderlist Pro for Free","iyf4_notification_button_label_var_d":"Share Wunderlist Pro","iyf4_dialog_invite_headline_$":"Get up to $ of Wunderlist Pro by inviting your friends!","iyf4_dialog_invite_headline_incentive":"12 free months","iyf4_dialog_invite_incentive_$":"$ Wunderlist, we'll give you both 1 month of Wunderlist Pro for free (up to a limit of 12 months)","iyf4_dialog_invite_incentive_terms":"For every friend who joins","iyf4_dialog_tweet":"I love organizing my life with Wunderlist. Get a month of Wunderlist Pro for free here:","iyf_notification_label":"Refer Wunderlist to your friends and get Pro for free up to 12 months!","iyf_notification_button_label":"Go Pro!","iyf_dialog_step1_headline":"Get a free Pro Account","iyf_dialog_step1_subheadline":"in 3 easy steps","iyf_dialog_step1_instruction1_headline":"Start inviting your friends","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter or E-Mail","iyf_dialog_step1_instruction2_headline":"Your friends sign up","iyf_dialog_step1_instruction2_subheadline":"sit tight while they join Wunderlist","iyf_dialog_step1_instruction3_headline":"Enjoy your free Pro Account","iyf_dialog_step1_instruction3_subheadline":"1 month for every friend who accepts","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 month for every $ friends who accept","iyf_dialog_step1_next_button":"Start inviting","iyf_dialog_step2_subheadline":"to get your free Pro Account","iyf_dialog_step2_divider_label":"Share this link","iyf_dialog_share_on_facebook":"Share on Facebook","iyf_dialog_post_on_twitter":"Tweet on Twitter","iyf_dialog_email_placeholder":"Enter an email address...","iyf_dialog_more_placeholder":"Add another...","iyf_dialog_step3_headline":"Thank you for sharing","iyf_dialog_step3_subheadline":"Sit tight while your friends join","iyf_dialog_step3_success_headline":"Invites successfully sent","iyf_dialog_step3_success_subheadline":"We'll notify you as soon as your Pro account is ready.","iyf_dialog_step3_invite_more":"Invite more people","meta_title":"Wunderlist 2: მარტივი და მშვენიერი დავალებათა დამგეგმავი","meta_description":"Over 5 million people already use Wunderlist to manage tasks, to-do lists, and to get things done.  Wunderlist is the best to-do list for you, your team or your family.","meta_keywords":"6wunderkinder, პროდუქტიულობა, თანამშრომლობა, დავალებათა დაგეგმვა, დავალებათა დამგეგმავი, შესასრულებელი, შესასრულებელი, სია, დავალება, შპს, ორგანიზება, დაგეგმარება, საყიდლები, შეხსენება, ქვედავალება, ფილტრები, სურსათის სია, ფილმების სია, გაზიარებული სიები","enable_desktop_notifications_text":"თქვენს ბროუზერში დააჭიერთ ღილაკს \"დამოწმება\", შემდეგ - \"ნების დართვა\", რომ ჩართოთ შეტყობინებები.","notification_add_to_browser":"იქონიეთ Wunderlist-ი ახლოს. დაამატეთ Wunderlist-ის ვებ-აპლიკაცია თქვენს ბროუზერში.","notification_add_extension_to_browser":"Quickly save all your favorite web content directly into Wunderlist. Install the Add to Wunderlist Chrome extension now.","button_add_to_chrome":"Chrome-ში დამატება","button_add_to_store_added":"დამატებულია","aria_activity_center_hint":"Activity Center. Hit escape to close.","aria_exit_search":"Exit Search","aria_search":"Search","aria_sort_list":"Sort List","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"User menu. Hit escape to close.","aria_assign_to_$":"Assign to $","momentjs_months":"იანვარი_თებერვალი_მარტი_აპრილი_მაისი_ივნისი_ივლისი_აგვისტო_სექტემბერი_ოქტომბერი_ნოემბერი_დეკემბერი","momentjs_monthsShort":"იან_თებ_მარ_აპრ_მაი_ივნ_ივლ_აგვ_სექ_ოქტ_ნოე_დეკ","momentjs_weekdays":"კვირა_ორშაბათი_სამშაბათი_ოთხშაბათი_ხუთშაბათი_პარასკევი_შაბათი","momentjs_weekdaysShort":"კვ_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ","momentjs_weekdaysMin":"კვ_ორშ_სამ_ოთხ_ხუთ_პარ_შაბ","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[დღეს] LT","momentjs_calendar_nextDay":"[ხვალ] LT","momentjs_calendar_nextWeek":"dddd [] LT","momentjs_calendar_lastDay":"[გუშინ] LT","momentjs_calendar_lastWeek":"[ბოლო] dddd [] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"%s-ში","momentjs_relativeTime_past":"%s წინ","momentjs_relativeTime_s":"რამდენიმე წამის","momentjs_relativeTime_m":"წუთის","momentjs_relativeTime_mm":"%d წუთის","momentjs_relativeTime_h":"საათის","momentjs_relativeTime_hh":"%d საათის","momentjs_relativeTime_d":"დღის","momentjs_relativeTime_dd":"%d დღის","momentjs_relativeTime_M":"თვის","momentjs_relativeTime_MM":"%d თვის","momentjs_relativeTime_y":"წლის","momentjs_relativeTime_yy":"%d წლის"}
};
});
define('languages/korean',[],function() {
return {
'name': 'korean',
'data': {"actionbar_print_selected_item":"선택된 항목 인쇄","actionbar_print_$_selected_items_plural":"선택된 항목 $건 인쇄","actionbar_email_selected_item":"선택된 항목 이메일로 보내기","actionbar_email_$_selected_items_plural":"선택된 항목 $건 이메일로 보내기","actionbar_sort_alphabetically":"알파벳 순서로 정렬","actionbar_sort_due_date":"만기일 순으로 정렬","actionbar_sort_assignee":"피지정자별로 정렬","api_error_account_already_exists":"해당 이메일 주소를 가진 계정이 이미 존재합니다.","api_error_connection_error":"서버와 연결하는 데 문제가 발생했습니다. 다시 시도해 주세요.","api_error_general_error":"지금은 서버와 연결할 수 없습니다. 나중에 다시 시도해 주세요.","api_error_incorrect_login":"입력하신 이메일주소 또는 비밀번호가 정확하지 않습니다.","api_error_incorrect_password":"입력하신 비밀번호가 정확하지 않습니다.","api_error_service_down":"Wunderlist API 서비스의 주요 부분이 다운되었습니다.","api_error_unknown":"예상치 못한 에러가 발생했습니다.","api_error_validation_error_unable_to_signup":"해당 이메일로 등록하는 데 실패했습니다.","api_error_not_a_beta_user":"사용자님은 Wunderlist 베타 버전의 회원이 아닙니다.","button_back":"뒤로","button_cancel":"취소","button_confirm":"확인","button_download":"다운로드","button_change":"변경하기","button_choose":"선택","button_connect":"연계하기","button_connect_facebook":"페이스북과 연계하기","button_continue":"다음","button_delete":"삭제","button_disconnect":"연결 끊기","button_dismiss":"닫기","button_done":"완료","button_edit":"편집하기","button_get_started":"시작하기","button_go_back":"뒤로가기","button_go_back_sentence":"뒤로","button_learn_more":"자세히 알아보기","button_go_back_to_login":"로그인 화면으로 돌아가기","button_go_to_web_app":"웹기반 Wunderlist 앱으로 가기","button_join_now":"지금 가입하기","button_log_in":"로그인","button_log_in_with_$":"$로 로그인","button_log_out":"로그아웃","button_log_in_facebook":"페이스북 계정으로 로그인하기","button_next":"다음","button_no":"아니요","button_no_due_date":"기한 없음","button_ok":"확인","button_remove_due_date":"기한 삭제","button_remove_reminder":"미리알림 삭제","button_email_list":"이메일로 목록 보내기 ","button_print_list":"목록 인쇄 ","button_reset_password":"비밀번호 재설정","button_retry":"재시도","button_save":"저장하기","button_send":"보내기","button_sign_up":"가입하기","button_sign_up_with_$":"$로 가입하기","button_sign_up_for_free":"무료 가입하기","button_sign_up_facebook":"페이스북 계정으로 가입하기","button_support_center":"고객 지원 센터 ","button_subscribe":"네, 받겠습니다!","button_try_again":"재시도","button_try_wunderlist":"Wunderlist 사용하기","button_yes":"예","coachmark_all_list_empty":"추가된 항목이 없습니다. 항목을 추가해 주세요.","coachmark_completed_list_empty":"완료된 항목이 없습니다. 한번 목록에 있는 항목들을 체크해 보세요!","coachmark_no_search_results":"검색 결과가 없습니다","coachmark_sharing_invite_friends_heading":"친구 초대하기","coachmark_sharing_invite_friends_text_$":"초대받은 친구는 \"$\" 목록에 항목을 추가하거나 삭제할 수 있고 완료 상태로 표시할 수 있습니다.","coachmark_sharing_recent_no_contacts_heading":"최근 연락처 없음 ","coachmark_sharing_recent_no_contacts_text_$":"이메일 주소를 입력하거나 연락처를 검색해 보세요. 추가된 친구는 \"$\" 목록에 항목을 만들거나 삭제할 수 있고 완료 상태로 표시할 수 있습니다.","coachmark_assigned_to_me_list_empty":"지정된 항목이 없습니다.","coachmark_conversations_list_empty":"현재 진행중인 대화가 없습니다.","coachmark_starred_list_empty":"별표된 항목이 없습니다.","coachmark_today_list_empty":"축하합니다! 오늘은 밀린 일이 하나도 없습니다.","coachmark_week_list_empty":"휴가 중인가요? 앞으로 일주일 동안 할 일이 없네요","error_list_not_found":"사용자님이 찾으시는 목록을 찾지 못했습니다.","error_share_not_created":"목록을 공유하는 과정에서 문제가 발생했습니다. 다시 시도해 주세요.","error_task_not_found":"찾으시는 항목을 찾을 수 없습니다.","error_page_not_found":"페이지를 찾을 수 없습니다.","error_title_not_found":"찾을 수 없습니다.","label_are_you_sure_permanently_delete_item":"이 항목을 영구적으로 삭제하시겠습니까?","label_are_you_sure_permanently_delete_item_plural":"이 항목들을 영구적으로 삭제하시겠습니까?","label_activity_center":"활동 센터","label_are_you_sure_permanently_delete_$_list":"\"$\" 목록을 영구적으로 삭제하시겠습니까?","label_are_you_sure_permanently_delete_$_task":"\"$\" 항목을 영구적으로 삭제하시겠습니까?","label_are_you_sure_permanently_delete_task_plural":"이 항목들을 영구적으로 삭제하겠습니까?","label_are_you_sure_permanently_delete_$_subtask":"세부 작업 \"$\"를 영구적으로 삭제하시겠습니까?","label_cant_undo":"이 작업은 한 번 적용되면 되돌릴 수 없습니다.","label_completed_tasks_heading":"완료된 항목 1건","label_$_completed_tasks_heading_plural":"완료된 항목 $건","label_connecting":"연결중...","label_minisite_description_line_1":"내가 하고 싶은 일, 모두 Wunderlist로 관리하세요.","label_minisite_description_line_2":"Wunderlist는 모든 주요 플랫폼에서 무료로 이용하실 수 있습니다.","label_minisite_share_deleted_or_no_access":"아마 이것은 삭제 되었거나 접근이 더 이상 불가능 합니다.","label_minisite_contact_sender_for_info":"자세한 내용은 목록을 공유한 사람에게 문의하시기 바랍니다.","label_minisite_$_invited_you_to_the_list_$":"$1님이 사용자님을 $2 목록으로 초대했습니다.","label_minisite_empty_list_$":"이 목록은 현재 비어있습니다. 아래의 가입 버튼을 누르시고 $ 목록에 항목을 추가해 보세요.","label_day_0":"일","label_day_1":"월","label_day_2":"화","label_day_3":"수","label_day_4":"목","label_day_5":"금","label_day_6":"토","label_delete_file":"파일 삭제","label_delete_list":"목록 삭제","label_delete_task":"항목 삭제","label_delete_task_plural":"항목 삭제","label_delete_subtask":"세부 작업 삭제","label_due_$":"기한 $","label_due_on":"$에 완료 예정 입니다.","label_due_date":"기한","label_email":"이메일","label_every":"매","label_loading":"로딩중...","label_logging_out":"로그아웃 중...","label_name":"이름","label_newsletter":"Wunderlist 뉴스레터","label_none":"없음","label_notification":"알림","label_oops":"앗!","label_or":"또는","label_password":"비밀번호","label_relative_date_today":"오늘","label_relative_date_today_with_date":"오늘, $","label_relative_date_today_mid_sentence":"오늘","label_relative_date_tomorrow":"내일","label_relative_date_tomorrow_with_date":"내일, $","label_relative_date_tomorrow_mid_sentence":"내일","label_relative_date_yesterday":"어제","label_remind_me_at_$":"$에 미리 알리기","label_reminder":"미리 알림","label_reminder_message_$":"친절한 알림 : $","label_repeat_every_day":"매일 반복","label_repeat_every_week":"매주 반복","label_repeat_every_month":"매달 반복","label_repeat_every_year":"매년 반복","label_repeat_custom":"사용자 지정...","label_repeat_day":"매일","label_repeat_day_$_plural":"$ 일 마다","label_repeat_month":"매월","label_repeat_month_$_plural":"$ 달 마다","label_repeat_week":"매주","label_repeat_week_$_plural":"$ 주 마다","label_repeat_never":"반복 안함","label_repeat_year":"매년","label_repeat_year_$_plural":"$ 년 마다","label_reset_password":"비밀번호 재설정","label_rights_reserved":"All Rights Reserved","label_still_fetching_tasks":"작업을 불러오는 중입니다...","label_sync":"동기화","label_time_am":"오전","label_time_day_plural":"일","label_time_week_plural":"주","label_time_month_plural":"월","label_time_pm":"오후","label_time_year_plural":"년","label_assign_to":"지정하기","label_unassigned":"지정되지 않음","label_assign_me":"나","label_created_$":"$에 생성됨","label_created_by_$":"$님이 생성함","label_created_on_$":"$에 생성됨","label_created_$_by_$":"$2님이 $1에 생성함","label_created_by_$_on_$":" $1님이 $2에 생성함","label_completed_$":"$ 완료","label_completed_on_$":"$에 완료했습니다.","label_completed_$_by_$":"$2님이 $1에 완료했습니다.","label_completed_by_$_on_$":"$1님이 $2에 완료했습니다.","login_add_photo_hint":"사진을 업로드해서 Wunderlist 계정을 꾸며 보세요.","login_already_have_account":"이미 계정을 가지고 있습니까?","login_email_not_valid":"유효한 이메일 주소를 입력해 주세요.","login_empty_name":"이름을 입력해 주세요.","login_empty_password":"비밀번호를 입력해 주세요.","login_password_not_valid":"유효한 비밀번호를 입력해 주세요.","login_empty_email":"이메일을 입력해 주세요","login_enter_name":"신원 확인","login_enter_password":"거의 다 되었습니다.","login_enter_password_hint":"Wunderlist 계정 설정을 완료하기 위해 비밀번호를 선택해 주세요.","login_forgot_password":"비밀번호를 잊으셨나요?","login_forgot_password_heading":"어떤 것을 잊으셨나요?","login_forgot_password_text":"Wunderlist에 등록할 때 사용한 이메일 주소를 입력하시면 비밀번호 재설정 링크를 받으실 수 있습니다.","login_no_account_yet":"계정이 없으신가요?","login_password_changed":"비밀번호가 변경되었습니다.","login_password_not_match":"입력하신 비밀번호가 일치하지 않습니다.","login_password_reset_email_has_been_sent":"비밀번호 재설정에 대한 안내문을 보내드렸습니다. 이메일을 확인해 주세요.","login_reset_password_heading":"새 비밀번호를 정하실 수 있습니다.","login_reset_password_success":"아래 버튼을 누르면,  Wunderlist에 다시 로그인할 수 있습니다.","login_reset_password_success_heading":"비밀번호가 성공적으로 변경되었습니다.","login_password_too_short":"비밀번호는 적어도 5자이어야 합니다.","login_sign_up":"가입하기","login_want_to_try_again":"다시 시도하시겠습니까?","login_accept_terms":"가입과 동시에 $1 및 $2에 동의합니다.","logout_timeout_title":"동기화 에러","logout_timeout_text":"해당 데이터를 동기화하지 못했습니다. 재시도하시겠습니까? 로그아웃하시겠습니까?","mobile_tutorial_welcome_to":"환영합니다.","mobile_tutorial_wunderlist_subtitle":"아름답고 간편한 할일 목록","notifications_desktop_enable_heading":"데스크탑 알림을 사용하시겠습니까?","notifications_no_notifications":"활동 내역 없음","notifications_no_notifications_message":"여기에 공유 목록 초대 및 기타 활동들이 표시됩니다.","notifications_event_accept":"수락","notifications_event_accepted":"수락됨","web_upgrade_ie9_not_supported":"Wunderlist는 인터넷 익스프롤러 9를 지원하지 않습니다. $ 또는 $로 업그레이드하시면 더 좋은 사용자 경험을 체험하실 수 있습니다.","web_upgrade_to_chrome":"크롬","web_upgrade_to_ie10":"인터넷 익스플로러 10","web_enable_touch_styles_alert":"현재 터치스크린을 탑재한 기기를 사용중이 신가요? 터치에 최적화된 환경을 적용하시겠습니까? 이 설정은 언제든지 계정 설정에서 변경하실 수 있습니다.","web_setting_enable_touch_for_$":"$에 터치 환경 적용","web_settings_text_refresh_may_be_required":"새로고침할 필요가 있을 수 있습니다.","rate_label":"Wunderlist 평가하기","rate_app_heading":"Wunderlist 평가하기 ","rate_app_message_web_chrome":"Wunderlist를 사용해 주셔서 감사합니다. Wunderlist가 도움이 되었나요? 사용자님의 사용 경험을 듣고 싶습니다! 크롬 웹스토어에 접속하신 후 Wunderlist에 대한 사용 소감을 남겨주시고 ★★★★★로 평가하는 것도 잊지 말아주세요!","rate_app_button_later":"나중에 평가하기","rate_app_button_no":"아니오, 괜찮습니다.","rate_app_button_yes":"지금 Wunderlist 평가하기","placeholder_add_due_today_to_inbox":"오늘 완료 예정인 항목을 \"보관함\"에 추가...","placeholder_add_list":"새 목록 추가","placeholder_add_subtask":"세부 작업 추가","placeholder_add_starred_to_inbox":"별표된 항목을 \"보관함\"에 추가.","placeholder_add_task_to_$":"\"$\" 에 항목 추가하기...","placeholder_add_to_inbox":"\"보관함\"에 항목을 추가합니다.","placeholder_new_list":"새 목록","placeholder_remind_me":"미리 알리기","placeholder_search":"찾기...","placeholder_sharing_search":"이름 또는 이메일 주소...","placeholder_set_due_date":"기한 설정","browser_outdated_heading":"지금 사용하고 계신 웹브라우저는 최신 버전이 아닙니다.","browser_outdated_update":"브라우저를 업데이트해 주세요.","browser_outdated_explanation":"Wunderlist는 최신 및 최고의 기술로 개발된 어플리케이션입니다. Wunderlist를 사용하기 위해 기존에 사용 중인 브라우저를 최신 버전으로 업데이트해 주세요.","prenamed_list_movies":"감상할 영화","prenamed_list_private":"비공개","prenamed_list_shopping":"쇼핑","prenamed_list_wishlist":"사고 싶은 것","prenamed_list_work":"업무","prenamed_list_read_later":"나중에 읽기","settings_account_change_email":"이메일 변경하기...","settings_account_change_password":"비밀번호 변경...","settings_account_delete_confirmation":"\"제거에 동의합니다\"를 입력해 주세요","settings_account_delete_confirmation_text":"제거에 동의합니다","settings_account_drop_image":"여기에 사진을 끌어다 놓아 주세요.","settings_account_connect_facebook_account":"Wunderlist 계정을 페이스북과 연결하면 목록을 친구들과 간편하게 공유할 수 있습니다.","settings_general_12_hour":"12시간 형식 ","settings_general_24_hour":"24시간 형식","settings_general_confirm_deletion":"항목을 삭제하기 전에 확인해 주세요.","settings_general_create_new_tasks":"새 항목 추가","settings_general_date_format":"날짜 형식","settings_general_language":"언어","settings_general_start_of_week":"한 주의 시작","settings_general_start_of_week_sunday":"일요일","settings_general_start_of_week_saturday":"토요일","settings_general_start_of_week_monday":"월요일","settings_general_sound_task_completion":"항목이 완료되면 음성으로 알리기","settings_general_sound_new_notifications":"새로운 알림을 위한 소리를 활성화합니다.","settings_general_print_done_tasks":"완료된 항목 인쇄하기","settings_general_tasks_bottom":"목록 맨 끝에","settings_general_tasks_top":"목록 맨 위에","settings_general_time_format":"시간 형식 ","settings_heading_team":"비즈니스","settings_heading_about":"Wunderlist에 대하여...","settings_heading_account":"계정","settings_heading_general":"일반 설정 ","settings_heading_notification":"알림 ","settings_heading_shortcuts":"단축키 ","settings_heading_sidebar":"사이드바 ","settings_imprint":"회사 정보","settings_visit_website":"방문하기","settings_get_help":"도움 얻기","settings_notifications_notify_me_of_important_events_mobile":"다음 수단을 통해 중요한 이벤트에 대해서 알려주세요:","settings_notifications_notify_me_on_text":"다른 사용자가 공유 목록 초대를 수락하거나 공유 목록에 있는 작업을 완료하는 등 특정 활동에 대한 알림을 보내드립니다.","settings_sidebar_smart_lists_title":"사이드바에 스마트 목록을 표시합니다.","settings_sidebar_smart_lists_auto":"자동","settings_sidebar_smart_lists_hidden":"숨김","settings_sidebar_smart_lists_visible":"보임 ","settings_sync_full":"지금 동기화하기","settings_account_account_backup":"계정 백업","settings_account_restore_backup":"백업 데이터 불러오기","settings_account_backup_description":"백업 데이터는 목록, 작업, 세부 작업, 노트, 미리 알림을 포함합니다. 자신에게 공유된 목록, 파일, 댓글, 공유 목록 대상자, 기존 앱 설정은 백업 데이터에 포함되지 않습니다.","settings_account_data_is_being_processed":"백업 데이터를 처리하는 중입니다. 잠시만 기다려 주세요. 처리 작업이 완료되면 이메일을 보내드리겠습니다.","settings_account_change_password_error":"비밀번호를 변경하는 중에 문제가 발생했습니다. 다시 시도해 주세요.","settings_account_click_to_download_backup":"클릭하여 다운로드","settings_account_create_backup":"백업 만들기","settings_account_current_password":"현재 비밀번호","settings_account_delete_account":"계정 삭제","settings_account_delete_account_confirm":"정말로 계정을 삭제하시겠습니까?","settings_account_delete_account_confirm_text":"계정을 삭제하면 모든 목록과 항목이 영구적으로 삭제되고, 계정 삭제를 취소할 수 없습니다.","settings_account_fetching_data":"데이터를 불러오는 중...","settings_account_new_password":"새 비밀번호","settings_account_repeat_new_password":"새 비밀번호 확인","settings_account_right_click_and_save_as":"오른쪽 클릭 후 저장","settings_third_party_libraries":"라이선스","settings_background_credits":"배경화면 제공","settings_notifications_email_enabled":"이메일 알림","settings_notifications_desktop_enabled":"데스크탑 알림","settings_notifications_push_enabled":"푸쉬 알림","settings_privacy_policy":"개인정보 보호정책","settings_shortcuts_arrow_keys":"방향키","settings_shortcuts_delete_item":"선택된 목록과 항목 삭제","settings_shortcuts_mark_done":"선택된 항목들을 '완료' 로 표시","settings_shortcuts_mark_starred":"선택된 항목들을 '별표됨'으로 표시","settings_shortcuts_new_list":"새 목록 추가","settings_shortcuts_new_task":"새 항목 추가","settings_shortcuts_open_all_smart_list":"'모든' 스마트 목록 열기","settings_shortcuts_open_assigned_smart_list":"'내에게 지정된 항목' 스마트 목록 열기","settings_shortcuts_open_conversations_smart_list":"'대화' 스마트 목록 열기","settings_shortcuts_open_done_smart_list":"'완료' 스마트 목록 열기","settings_shortcuts_open_inbox":"보관함 열기","settings_shortcuts_open_preferences":"환경설정 열기","settings_shortcuts_open_search":"찾기 ","settings_shortcuts_open_starred_smart_list":"'별표됨' 스마트 목록 열기","settings_shortcuts_open_today_smart_list":"'오늘' 스마트 목록 열기","settings_shortcuts_open_week_smart_list":"'이번 주' 스마트 목록 열기","settings_shortcuts_reset":"기본값으로 초기화","settings_shortcuts_select_all_tasks":"모든 항목 선택","settings_shortcuts_show_more":"더 보기","settings_shortcuts_hide":"숨기기","settings_shortcuts_show_notifications":"활동 센터 보기","settings_shortcuts_step_through_list":"다양한 목록 보기","settings_shortcuts_step_through_task":"다양한 항목 보기","settings_terms_of_use":"이용약관","settings_account_header_free":"무료","settings_account_header_unregistered":"가입","settings_account_header_account_$":"$ 계정","settings_account_pro_description":"할일에 댓글을 달거나 파일을 첨부한 후 팀원에게 공유하는 등 팀원들과 간편하게 협업할 수 있습니다!","settings_account_register_wunderlist_description":"Wunderlist에 등록해서 사용자님의 목록을  모든 기기에 걸쳐 동기화하세요.","settings_manage_subscription_button":"앱 유료 사용권 관리","settings_account_header_pro":"프로","settings_account_header_pro_account_$":"축하드립니다. 이제 $ 사용자가 되셨습니다!","settings_account_header_pro_description":"Wunderlist 프로는 프로젝트를 지속적으로 추적 관리할 수 있는 최고의 도구입니다. 친구와 동료를 초대한 후 협업을 통해 성과를 올려 보세요!","settings_upgrade_to_pro_label":"$로 업그레이드 하기","settings_label_pro_account":"프로 계정","settings_label_purchased_from_$":"구매처: $","settings_label_purchased_from_$_by_$":"$1에서 $2님이 구매했습니다.","settings_label_expires_in_$":"만료일: $\"","setting_label_next_billing_date":"다음 결제일:","setting_label_cancel_subscription":"앱 유료 사용권 취소","setting_heading_cancel_subscription":"정말로 Wunderlist 프로 유료 사용권을 취소하시겠습니까?","setting_description_cancel_subscription":"유료 사용권이 만료되면 모든 데이터에는 계속 접근할 수 있지만  Wunderlist의 기본 기능만 사용하시게 됩니다.","setting_label_cancel_subscription_success":"유료 사용권이 성공적으로 취소되었습니다.","settings_label_invoices":"청구 내역","settings_label_become_a_pro":"프로로 업그레이드하기","settings_payment_info_expires_$_relative":"$에 만료","settings_payment_info_expires_$_absolute":"$1일 후에 만료됨: $2","settings_manage_subscription_error":"죄송합니다만, 귀하의 유료 사용 내역을 관리하려 하는 동안 오류가 발생했습니다.","group_billing_packages_title":"각 비즈니스를 위한 서비스 플랜","group_billing_packages_text":"비즈니스용 Wunderlist 서비스는 업무 효율성 및 생산성 개선을 지원하는 도구를 저렴한 가격에 제공하고 있습니다. 지금 운영하고 계시는 사업에 적합한 플랜을 선택해 보세요.","group_billing_plan_table_team_size":"팀 크기","group_billing_plan_table_price":"가격","group_billing_plan_table_package_name_$":"팀원 $명","group_billing_buy_button_label":"구매","group_billing_$_off":"$ 끄기","group_billing_larger_team_$":"규모가 더 큰 팀을 생각하고 계신가요? $","group_billing_contact_us":"연락해 주세요!","group_billing_downgrade_error_$_$":"%1@ 명의 사용자를 지원하는 서비스로 전환할 경우 기존 계정에서 $2 명의 구성원을 삭제해야 합니다..","group_billing_manage_team":"여기를 클릭해서 팀을 관리하세요.","group_billing_button_label_manage":"관리","group_billing_team_plan_title":"현재 사용중인 Wunderlist 플랜","group_billing_team_plan_text":"Wunderlist 프로는 팀의 규모에 따라 자유롭게 확장할 수 있습니다. 아래에 이메일 주소만 입력하면 기존 팀에 추가 인원을 추가할 수 있습니다. Wunderlist 회원 가입 여부에 상관없이 누구든지 추가할 수 있습니다.","group_billing_upgrade_button_label":"서비스 플랜 바꾸기","group_billing_upgrade_plan_button_label":"업그레이드","group_billing_Downgrade_plan_button_label":"다운그레이드","group_billing_view_plans_button_label":"서비스 플랜 보기","group_billing_manage_team_header":"팀원 관리","group_billing_email_address_input_placeholder":"이메일 주소","group_billing_manage_count_$_of_$":"$2에서 $1 사용 중","group_billing_cancel_team_plan":"Wunderlist 프로 취소하기","group_billing_search_coachmark":"Wunderlist에서는 팀에 새로운 인원을 간편하게 추가할 수 있습니다. 아래에 해당인의 이메일 주소만 입력하면 사용자님의 프로 프랜에 추가됩니다.","group_billing_cancel_header":"현재 사용중인 Wunderlist 프로 서비스의 유료 사용권을 취소하시겠습니까?","group_billing_change_plan_confirmation_$_$_$":"플랜은 손쉽게 바꿀 수 있습니다. $1 명의 사용자를 지원하는 플랜을 원하신다면 $3마다 $2을 청구됩니다. 지금 플랜을 바꾸시겠습니까?","group_billing_cancel_text":"Pro 가입은 월말까지만 유효하며, 다시 청구되지는 않습니다. 이 기간 후에도 작업에 연결된 파일과 같은 Pro 기능을 계속 볼 수는 있지만, 변경을 하지는 못합니다.","error_goup_billing_user_already_pro":"이 분은 이미 Wunderlist 프로 계정이 있습니다. 다른 분을 추가해 보세요!","error_group_billing_wait_subscription_runs_out":"기존에 사용하고 계시는 플랜이 만료될 때까지 기다린 후에 재구입하실 수 있습니다. 만료일: $.","button_label_buy_wunderlist_for_business":"비즈니스용 Wunderlist로 가기","benefit_payment_service_unavailable":"지금은 결제 서비스를 사용하실 수 없습니다.","benefit_name":"Wunderlist 프로","benefit_header_$":"$로 업그레이드하기","benefit_header_description":"매우 간편하게 팀별 및 사업별로 협업을 할 수 있습니다! 다음은 Wunderlist 프로에 가입하셔야 하는 4가지 이유입니다.","benefit_button_buy_monthly":"매달","benefit_assign_tasks_title":"할일 지정하기","benefit_assign_tasks_description":"동료 및 친구들 사이에서 손쉽게 작업을 지정하고 진척도를 추적할 수 있습니다!","benefit_unlimited_subtasks_title":"무제한 세부 작업","benefit_unlimited_subtasks_decription":"큰 작업을 달성 가능한 작은 단계로 나누어 생산성을 대폭 향상시킬 수 있습니다.","benefit_comments_title":"댓글","benefit_comments_description":"할일에 대해서 팀 동료와 대화를 시작해 보세요. 피드백을 남기거나 질문을 하거나 다른 아이디어를 추가하실 수도 있습니다.","benefit_backgrounds_update_$":"Wunderlist의 새 배경화면을 이용하시려면 $로 업그레이드하셔야 됩니다.","benefit_additional_backgrounds_title":"새 배경 화면","benefit_additional_backgrounds_description":"8종의 새 배경화면 통해서 Wunderlist를 다양하게 꾸며보세요.","benefit_files_title":"파일","benefit_files_description":"파일을 할일 목록에 첨부하고 팀원들과 공유할 수 있습니다.","benefit_coming_soon":"곧 출시 예정","benefit_assign_become_pro":"Wunderlist로 동료들에게 할 일을 지정할 수 있습니다","benefit_label_accept_terms":"Wunderlist 프로 유료 사용권을 구입함과 동시에 $1 및 $2에 동의합니다.","benefit_label_need_more_subtasks":"추가 세부 작업이 필요하십니까?","sharing_connect_facebook_sharing":"Wunderlist 계정을 페이스북 계정과 연계하면 친구를 쉽게 초대할 수 있습니다.","sharing_facebook_apprequest_message_$user_$list":"\"$1\"님이 \"$2\" 목록을 공유하고 싶어 합니다.","sharing_invite":"초대하기","sharing_invite_friends":"친구 초대","sharing_inviting_requires_account":"Wunderlist에 가입해서 사용자님의 목록에 친구와 동료를 초대해 보세요.","sharing_leave_action":"정말로 이 목록에서 나오시겠습니까?","sharing_leave_button":"공유 목록에서 나오기","sharing_list_members":"멤버 목록","sharing_list_owner":"소유자","sharing_list_pending_member":"대기 중","sharing_tab_recents":"최근","sharing_shared_with_you_by":"공유자","smart_list_assigned_to_me":"나에게 지정된 항목","smart_list_conversations":"대화","smart_list_all":"전체","smart_list_completed":"완료","smart_list_inbox":"보관함","smart_list_starred":"별표됨","smart_list_today":"오늘 할일","smart_list_week":"주간 할일","label_tell_friends":"친구에게 추천하기...","social_sharing_heading":"Wunderlist가 마음에 드셨나요? 그렇다면 소셜 네트워크를 통해서 친구들에게  Wunderlist에 대해 얘기해 주세요!","social_sharing_dialog_headline":"Wunderlist가 마음에 드시나요?","social_sharing_dialog_danke":"감사합니다","social_sharing_button_later":"나중에 하기","social_sharing_button_no_thanks":"아니오, 괜찮습니다.","social_sharing_button_facebook":"공유하기","social_sharing_button_follow_us":"트위터에서 팔로우하기","social_sharing_button_like_us":"페이스북에서 \"좋아요\" 누르기","social_sharing_heading_thanks":"트위터에서 Wunderlist를 팔로우하고 최신 뉴스를 받아보세요.","social_sharing_button_twitter":"트윗","general_sharing_placeholder":"아름답고 간편한 일정 관리 서비스인 Wunderlist를 사용하고 있습니다. 지금 www.wunderlist.com에 접속해서 무료 체험을 해보세요.","twitter_sharing_placeholder":"아름답고 간편한 일정 관리 서비스인@Wunderlist를 사용하고 있습니다. 지금 www.wunderlist.com에 접속해서 무료 체험을 해보세요.","tutorial_welcome_notes_title":"노트","tutorial_welcome_notes_text":"노트는 작성 후 Wunderlist 안 뿐만 밖에서도 사용하실 수 있습니다.","tutorial_welcome_notifications_title":"활동 센터","tutorial_welcome_notifications_text":"원하는 수단을 통해 활동에 대한 알림을 볼 수 있습니다. 예를 들어 다른 사용자로부터 받은 초대나 공유 목록에 대한 업데이트를 이메일 또는 데스크탑 알림을 통해서 받거나 활동 센터에서 모두 열람할 수 있습니다.","tutorial_welcome_sharing_title":"친구 초대하기","tutorial_welcome_sharing_text":"친구나 동료를 초대해 협업하기가 더 쉬워졌습니다.","tutorial_welcome_subtasks_title":"반복 항목, 미리 알림, 세부 작업","tutorial_welcome_subtasks_text":"Wunderlist는 이제 반복 항목, 미리 알림, 세부 작업을 쉽게 추가할 수 있는 새로운 자세히 보기 기능을 지원합니다.","tutorial_welcome_user_title":"당신에 대한 모든 것입니다!","tutorial_welcome_user_text":"계정 설정을 변경하거나 동기화 상태를 확인하거나 배경화면을 지정할 수 있습니다.","tutorial_welcome_newsletter_subscribe":"Wunderlist에 대한 중요한 업데이트나 신기능 출시 소식을 이메일로 받으시겠습니까?","tutorial_feature_pro_title":"Wunderlist 프로 기능","share_list_email_signature":"Wunderlist로 전송한 이메일 입니다 – 아름답고 간편한 일정 관리 서비스 Wunderlist\\n아이폰, 아이패드, 안드로이드, 맥, 윈도우 PC, 웹등 다양한 플랫폼에서 무료로 사용해 보세요!\\nwww.wunderlist.com","userbar_$_unsynced_item":"동기화되지 않은 항목 $건","userbar_$_unsynced_item_plural":"동기화되지 않은 항목 $건","userbar_account_settings":"계정 설정","userbar_change_background":"배경화면 선택","userbar_last_synced_$":"가장 최근 동기화 $","userbar_no_internet_connection":"오프라인","userbar_preferences":"환경 설정","userbar_sync_in_progress":"동기화 중...","userbar_user_name_for_unregistered_mode":"가입 후 동기화하기","whatsnew_title":"신규 기능","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"댓글","whatsnew_label_voice":"음성 입력","whatsnew_label_groupbilling":"팀 가격책정","whatsnew_copy_comments":"Wunderlist Pro의 댓글 기능을 통해 할일과 관련된 모든 대화를 한 곳에서 관리하세요. 또 할일에 피드백을 남기고, 질문을 하거나 좋은 아이디어를 추가함으로써 팀내의 의사소통을 개선시켜 보세요.","whatsnew_copy_pro_accounts":"Wunderlist Pro를 이용하여 보다 더 함께 하면서 댓글을 추가하고, 할일을 지정하고, 파일을 추가하고, 아무 제한 없이 세부 작업을 만드세요.","whatsnew_copy_voice":"할일을 지시하거나 음성 노트를 녹음하여 파일로 첨부하려면 마이크 아이콘을 클릭하세요.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Wunderlist 프로에 가입해서 파일 추가하기.","label_add_new_file":"파일 추가","file_uploaded_unsuccessfully":"$을(를) 업로드하는 데 실패했습니다. 다시 시도해 주세요.","file_uploaded_failed":"업로드에 실패했습니다. 다시 시도해 주세요.","file_uploaded_failed_deleted":"$을(를) 업로드하는 데 실패했습니다. 해당 파일이 하드드라이브에서 지워지지는 않았는지 확인해 주세요.","label_are_you_sure_permanently_delete_$_file":"“$” 파일을 Wunderlist에서 영구적으로 삭제하시겠습니까?","upload_file_was_not_synced_yet":"동기화해 주세요.","upload_file_not_synced_yet":"동기화안됨","placeholder_add_comments":"댓글 달기...","placeholder_reply":"답변하기...","button_label_go_pro_to_comment":"댓글 달기 위해 프로 서비스로 이동","comment_request_failed":"죄송합니다. 댓글을 불러오지 못했습니다. 다시 시도해 주세요.","comment_load_earlier":"댓글 더 보기 ","coachmark_no_current_comments":"댓글이 아직 없습니다.\\n이곳에서 대화를 시작하세요.","coachmark_comments_not_available":"죄송합니다. 이전 댓글을 불러오지 못했습니다. 잠시 후에 다시 시도해 주세요.","notification_$_commented_on_$":"$1님 $2에 댓글을 달았습니다.","notification_$_and_$_commented_on_$":"$1님과 $2님이 $3에 댓글을 달았습니다.","notification_$_and_$_others_commented_on_$":"$1님과 다른 사용자 $2명이 $3에 댓글을 달았습니다.","comments_requires_account":"Wunderlist 프로에 가입하고 댓글 달기","non_pro_trial_free_limit_reached":"무료 한도에 거의 도달했습니다!","non_pro_trial_write_next_comment_$":"$ 다른 댓글을 달 수 있습니다.","non_pro_trial_upload_next_file_$":"$ 다른 파일을 추가할 수 있습니다.","non_pro_trial_assign_next_to_do_$":"$ 다른 할일을 지정할 수 있습니다.","button_signup_or_login":"가입 또는 로그인","button_it_is_completely_free":"완전 무료입니다.","label_free_download_for_platforms":"아이폰, 아이패드, 안드로이드 기기, 윈도우 기기, 맥 PC에서 무료로 사용하실 수 있습니다.","label_wunderlist_to_get_things_done":"5백여 만명 사용자들이 Wunderlist를 통해 일정을 관리하고 있습니다.","label_people_who_use_wunderlist":"기존 Wunderlist 사용자 보기","label_wunderlist_uses":"Wunderlist는 사업 계획, 사랑하는 사람과의 쇼핑 목록 공유, 일상 생활 관리 등 수많은 일들을 누구나 쉽고 빠르게 관리할 수 있도록 지원하는 최고의 일정 관리 서비스입니다.","label_install_browser_extension":"브라우저 확장 프로그램을 설치합니다.","label_install_chrome_browser_extension":"크롬 브라우저 확장 프로그램을 설치합니다.","label_newsletter_signup":"Wunderlist 뉴스레터에 가입하기","label_know_upcoming_features":"차후에 Wunderlist가 선보일 신기능을 가장 먼저 접하는 사용자 중 한명이 되세요.","label_learn_more_about_wunderlist":"Wunderlist에 대해 더 알아보기","label_learn_more":"자세히 알아보기","label_your_email_address":"사용자님의 이메일 주소","button_subscribe_to_newsletter":"가입하기","button_sending_subscribe_to_newsletter":"보내는 중...","iyf4_usermenu_label":"Wunderlist 프로를 무료로 사용하세요.","iyf4_notification_label":"친구를 초대하여 최장 12개월 동안 Wunderlist 프로를 무료로 이용하세요!","iyf4_notification_button_label_var_a":"초대 시작하기","iyf4_notification_button_label_var_b":"친구 초대하기","iyf4_notification_button_label_var_c":"Wunderlist 프로 무료로 사용하기","iyf4_notification_button_label_var_d":"Wunderlist 프로 공유하기","iyf4_dialog_invite_headline_$":"친구를 초대하여  최장 $개월 동안 Wunderlist 프로를 이용하세요!","iyf4_dialog_invite_headline_incentive":"12개월간 무료","iyf4_dialog_invite_incentive_$":"$ Wunderlist, 모두에게 1개월 무료 Wunderlist Pro 사용 기회(최장 12개월)를 드리겠습니다.","iyf4_dialog_invite_incentive_terms":"가입하는 친구마다","iyf4_dialog_tweet":"Wunderlist로 계획을 만드는 것은 즐겁습니다. 이곳에서 Wunderlist Pro를 1개월 무료로 사용하세요:","iyf_notification_label":"친구에게 Wunderlist를 추천하시고 최장 12개월동안 Wunderlist 프로를 무료로 이용하세요!","iyf_notification_button_label":"Wunderlist 프로 이용하기!","iyf_dialog_step1_headline":"무료로 Wunderlist 프로 계정 만들기","iyf_dialog_step1_subheadline":"간편한 3단계","iyf_dialog_step1_instruction1_headline":"친구 초대하기 시작  ","iyf_dialog_step1_instruction1_subheadline":"페이스북, 트위터, 이메일 이용","iyf_dialog_step1_instruction2_headline":"친구 가입","iyf_dialog_step1_instruction2_subheadline":"친구가 Wunderlist에 가입하는 동안 기다리기","iyf_dialog_step1_instruction3_headline":"무료 Wunderlist 프로 계정을 이용해 보세요.","iyf_dialog_step1_instruction3_subheadline":"수락하는 친구마다 1개월씩","iyf_dialog_step1_instruction3_subheadline_$_plural":"수락하는 친구 $명마다 1개월씩 ","iyf_dialog_step1_next_button":"초대하기 시작 ","iyf_dialog_step2_subheadline":"무료 Wunderlist 프로 계정 만들기","iyf_dialog_step2_divider_label":"이 링크 공유하기","iyf_dialog_share_on_facebook":"페이스북에서 공유하기","iyf_dialog_post_on_twitter":"트위터에서 트윗하기","iyf_dialog_email_placeholder":"이메일 주소를 입력해 주세요....","iyf_dialog_more_placeholder":"추가하기...","iyf_dialog_step3_headline":"공유해 주셔서 감사합니다.","iyf_dialog_step3_subheadline":"친구가 가입하는 동안 기다리기 ","iyf_dialog_step3_success_headline":"성공적으로 초대했습니다.","iyf_dialog_step3_success_subheadline":"Wunderlist 프로 계정이 준비되면 곧바로 알려드겠습니다.","iyf_dialog_step3_invite_more":"더 많은 사람 초대하기","meta_title":"Wunderlist 2: 아름답고 간편한 온라인 일정 관리 앱","meta_description":"이미 5백여 만명 사람들이 Wunderlist를 통해 작업을 관리하거나 할일 목록을 만들고 업무를 수행하고 있습니다. Wunderlist는 누구나 간편하게 사용자할 수 있는 최고의 일정 관리 서비스입니다.","meta_keywords":"6wunderkinder, 생산성, 협업, 작업 관리, 일정, 일정, 목록, 작업, gtd, 정리하기, 계획, 쇼핑 목록, 미리 알림, 세부 작업, 스마트 목록, 장볼 물건, 영화 목록, 공유 목록","enable_desktop_notifications_text":"알림을 사용하기 위해서 브라우저에서 \"확인\" 버튼을 누르신 후 \"승인\" 버튼을 눌러주세요.","notification_add_to_browser":"사용하고 계신 브라우저에 웹기반의 Wunderlist 앱을 추가하여 단 한번의 클릭만으로 Wunderlist를 사용하세요.","notification_add_extension_to_browser":"Add to Wunderlist Chrome 확장 프로그램을 설치한 후 Wunderlist에 즐겨찾는 웹 컨텐츠를 모두 저장하세요.","button_add_to_chrome":"크롬에 추가하기","button_add_to_store_added":"추가되었습니다.","aria_activity_center_hint":"활동 센터. 닫으려면 Esc키를 누르세요.","aria_exit_search":"검색 종료","aria_search":"검색","aria_sort_list":"목록 정렬","aria_thank_you":"액세스 기능을 잘 사용해주셔서 감사합니다. 액세스 기능에 대한 피드백은 support@wunderlist.com으로 알려주세요. Wunderlist를 사용해주셔서 감사합니다.","aria_user_menu_hint":"사용자 메뉴. 닫으려면 Esc키를 누르세요.","aria_assign_to_$":"$에게 지정","momentjs_months":"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월","momentjs_monthsShort":"1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월","momentjs_weekdays":"일요일_월요일_화요일_수요일_목요일_금요일_토요일","momentjs_weekdaysShort":"일_월_화_수_목_금_토","momentjs_weekdaysMin":"일_월_화_수_목_금_토","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[오늘은] LT","momentjs_calendar_nextDay":"[내일은] LT","momentjs_calendar_nextWeek":"dddd [에] LT","momentjs_calendar_lastDay":"[어제는] LT","momentjs_calendar_lastWeek":"[이전] dddd [에] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"%s 에","momentjs_relativeTime_past":"%s 전에","momentjs_relativeTime_s":"방금","momentjs_relativeTime_m":"일 분","momentjs_relativeTime_mm":"%d 분","momentjs_relativeTime_h":"한 시간","momentjs_relativeTime_hh":"%d 시간","momentjs_relativeTime_d":"하루","momentjs_relativeTime_dd":"%d 일","momentjs_relativeTime_M":"한 달","momentjs_relativeTime_MM":"%d 달","momentjs_relativeTime_y":"일 년","momentjs_relativeTime_yy":"%d 년"}
};
});
define('languages/maltese',[],function() {
return {
'name': 'maltese',
'data': {"actionbar_print_selected_item":"Ipprintja Dan L-Item","actionbar_print_$_selected_items_plural":"Ipprintja dawn l-$ items","actionbar_email_selected_item":"Ibgħat Dan L-Item","actionbar_email_$_selected_items_plural":"Ibgħat l-Items Magħżula","actionbar_sort_alphabetically":"Issortja alfabetikament","actionbar_sort_due_date":"Issortja skont id-Deadline","actionbar_sort_assignee":"Issortja skont l-Assenjat","api_error_account_already_exists":"Kont b'dan l-indirizz elettroniku diġà jeżisti","api_error_connection_error":"Whoops, kien hemm problema biex nilħqu s-server. Erġa pprova. ","api_error_general_error":"Whoops, is-server ma jistax jiġi milħuq bħalissa. Erġa pprova. ","api_error_incorrect_login":"L-indirizz elettroniku jew password li int daħħalt huma ħżiena. ","api_error_incorrect_password":"Il-Password li int daħħalt hi ħażina. ","api_error_service_down":"Parti mportanti mis-servizz tal-WunderAPI mhux qed taħdem. ","api_error_unknown":"Għadek kif sar żball li ma kienx mistenni. ","api_error_validation_error_unable_to_signup":"Ma rnexxilniex nirreġistrawk bl-indirizz elettroniku li int tajtna. ","api_error_not_a_beta_user":"Int m'intix membru tal-beta tal-Wunderlist. ","button_back":"Lura","button_cancel":"Waqqaf","button_confirm":"Ikkonferma","button_download":"Iddawnlodja","button_change":"Biddel","button_choose":"Agħż el","button_connect":"Għaqqad","button_connect_facebook":"Għaqqad mal-Facebook","button_continue":"Kompli","button_delete":"Ħassar","button_disconnect":"Skonnetja","button_dismiss":"Injora","button_done":"Lesti","button_edit":"Biddel","button_get_started":"Ejja ħalli nibdew","button_go_back":"Mur Lura","button_go_back_sentence":"Mur Lura","button_learn_more":"Skopri Aktar","button_go_back_to_login":"Mur Lura Għal-Login","button_go_to_web_app":"Mur għal Wunderlist online","button_join_now":"Irreġistra","button_log_in":"Idħol","button_log_in_with_$":"Log In With $","button_log_out":"Oħroġ","button_log_in_facebook":"Idħol bil-Facebook","button_next":"Uri li jmiss","button_no":"Le","button_no_due_date":"L-ebda deadline","button_ok":"OK","button_remove_due_date":"Neħħi d-deadline","button_remove_reminder":"Neħħi r-reminder","button_email_list":"Ibgħat b'Email","button_print_list":"Ipprintja","button_reset_password":"Irresetja l-Password","button_retry":"Erġa' pprova","button_save":"Issejvja","button_send":"Ibgħat","button_sign_up":"Irreġistra","button_sign_up_with_$":"Sign Up With $","button_sign_up_for_free":"Irreġistra b'xejn","button_sign_up_facebook":"Irreġistra bil-Facebook Account tiegħek","button_support_center":"Ċentru ta' Sapport","button_subscribe":"Iva, jekk jogħġbok!","button_try_again":"Erġa pprova","button_try_wunderlist":"Ipprova Wunderlist","button_yes":"Iva","coachmark_all_list_empty":"Għadek ma żidtx xejn. Ejja u żid xi ħaġa. ","coachmark_completed_list_empty":"Int għadek ma lestejt xejn. Ejja u lesti xi ħaġa!","coachmark_no_search_results":"L-ebda riżultat","coachmark_sharing_invite_friends_heading":"Stieden lill-ħbiebek","coachmark_sharing_invite_friends_text_$":"Ħbiebek se jkunu jistgħu joħolqu, iħassru u jlestu xi items mil-lista “$”.","coachmark_sharing_recent_no_contacts_heading":"L-ebda kuntatt riċenti","coachmark_sharing_recent_no_contacts_text_$":"Daħħal l-indirizz elettroniku jew sib mill-kuntatti tiegħek. Meta jidħlu, ħbiebek ikunu jistgħu joħolqu, iħassru u jlestu xi items mil-lista \"$\". ","coachmark_assigned_to_me_list_empty":"M'hawn xejn assenjat lilek","coachmark_conversations_list_empty":"M'hemm l-ebda konversazzjonijiet kurrenti. ","coachmark_starred_list_empty":"M'għandex items importanti","coachmark_today_list_empty":"Prosit, m'għandek xejn għal lum. ","coachmark_week_list_empty":"Jaqaw għaddej b'vaganza? M'għandex xejn għas-7 t'ijiem li ġejjin. ","error_list_not_found":"Il-lista li qed tfittex għalihom huma ma tistax tinstab","error_share_not_created":"Għadha kif ġrat problema waqt li aħna qed naqsmu l-lista tiegħek. Jekk jogħġbok erġa pprova. ","error_task_not_found":"L-item li qed tfittex ma stabx","error_page_not_found":"Paġna Ma Teżistix","error_title_not_found":"Ma Teżistix","label_are_you_sure_permanently_delete_item":"Żgur trid tħassar dan l-item għal dejjem?","label_are_you_sure_permanently_delete_item_plural":"Żgur trid tħassar dawn l-items għal dejjem?","label_activity_center":"Ċentru t'Attivita","label_are_you_sure_permanently_delete_$_list":"Żgur li trid tħassar il-lista \"$\" għal dejjem?","label_are_you_sure_permanently_delete_$_task":"Żgur li trid tħassar l-item \"$\" għal dejjem?","label_are_you_sure_permanently_delete_task_plural":"Żgur li trid tħassar dawn l-items għal dejjem?","label_are_you_sure_permanently_delete_$_subtask":"Żgur li trid tħassar is-subtask \"$\" għal dejjem?","label_cant_undo":"Din l-azzjoni hi permanenti. ","label_completed_tasks_heading":"Item 1 Lest","label_$_completed_tasks_heading_plural":"$ Items Lesti","label_connecting":"Connecting...","label_minisite_description_line_1":"Kollox hu taħt idejk. ","label_minisite_description_line_2":"Tista ssib 'l Wunderlist b'xejn fuq il-platforms kollha maġġuri. ","label_minisite_share_deleted_or_no_access":"Milli jidher din tħassret jew m'għandekx aċċess għal din aktar. ","label_minisite_contact_sender_for_info":"Jekk jogħġbok ikkuntatja lil persuna li qasmet din il-lista miegħek għal aktar informazzjoni. ","label_minisite_$_invited_you_to_the_list_$":"$1 stiednek għal lista $2","label_minisite_empty_list_$":"Din il-lista hi vojta, u għalqastant għinhom jibdew. Agħfas il-buttuna Irreġistra hawn fuq, u żid xi items mal-lista $. ","label_day_0":"ĦAD","label_day_1":"TNEJN","label_day_2":"TLIETA","label_day_3":"ERB","label_day_4":"ĦAM","label_day_5":"ĠIM","label_day_6":"SIBT","label_delete_file":"Ħassar dan il-Fajl","label_delete_list":"Ħassar Lista","label_delete_task":"Ħassar Item","label_delete_task_plural":"Ħassar Items","label_delete_subtask":"Ħassar is-Subtask","label_due_$":"Għal $","label_due_on":"Għal $","label_due_date":"Deadline","label_email":"Indirizz Elettroniku","label_every":"kull","label_loading":"Loading...","label_logging_out":"Ħiereġ...","label_name":"Isem","label_newsletter":"Wunderlist Newsletter","label_none":"Xejn","label_notification":"Notifikazzjoni","label_oops":"Oops!","label_or":"jew","label_password":"Password","label_relative_date_today":"Illum","label_relative_date_today_with_date":"Illum, $","label_relative_date_today_mid_sentence":"illum","label_relative_date_tomorrow":"Għada","label_relative_date_tomorrow_with_date":"Għada, $","label_relative_date_tomorrow_mid_sentence":"għada","label_relative_date_yesterday":"Ilbieraħ","label_remind_me_at_$":"Fakkarni f'$","label_reminder":"Tifkira","label_reminder_message_$":"Tifkira: $","label_repeat_every_day":"Irrepeti kuljum","label_repeat_every_week":"Irrepeti kull ġimgħa","label_repeat_every_month":"Irrepeti kull xahar","label_repeat_every_year":"Irrepeti kull sena","label_repeat_custom":"Oħrajn...","label_repeat_day":"Kuljum","label_repeat_day_$_plural":"Kull $ ġurnata","label_repeat_month":"Kull xahar","label_repeat_month_$_plural":"Kull $ xhur","label_repeat_week":"Kull ġimgħa","label_repeat_week_$_plural":"Kull $ ġimgħat","label_repeat_never":"Tirrepeti Qatt","label_repeat_year":"Kull Sena","label_repeat_year_$_plural":"Kull $ snin","label_reset_password":"Irresetja l-Password","label_rights_reserved":"Kull Dritt Riservat","label_still_fetching_tasks":"Taken worden nog gehaald...","label_sync":"Sync","label_time_am":"AM","label_time_day_plural":"ġranet","label_time_week_plural":"ġimgħat","label_time_month_plural":"xhur","label_time_pm":"PM","label_time_year_plural":"snin","label_assign_to":"Assenja lil","label_unassigned":"Mhux assenjatha","label_assign_me":"Lili Nnifsi","label_created_$":"Maħluqa $","label_created_by_$":"Maħluqa minn $","label_created_on_$":"Maħluq f'$","label_created_$_by_$":"Maħluqa $1 minn $2","label_created_by_$_on_$":"Maħluqa minn $1 f'$2","label_completed_$":"Tlestiet $","label_completed_on_$":"Mlestija f'$","label_completed_$_by_$":"$2 lesta din $1","label_completed_by_$_on_$":"Tlestiet minn $1 f'$2","login_add_photo_hint":"Ippersonalizza l-account tiegħek billi taplowdja ritratt. ","login_already_have_account":"Diġa għandek account?","login_email_not_valid":"Jekk jogħġbok daħħal indirizz elettroniku validu. ","login_empty_name":"Jekk jogħġbok daħħal ismek. ","login_empty_password":"Jekk jogħġbok daħħal password. ","login_password_not_valid":"Jekk jogħġbok daħħal password valida. ","login_empty_email":"Jekk jogħġbok daħħal indirizz elettroniku. ","login_enter_name":"Min int?","login_enter_password":"Kważi lest...","login_enter_password_hint":"Għażel password biex tlesti t-twaqqif tal-account tiegħek","login_forgot_password":"Insejt il-password","login_forgot_password_heading":"Insejt xi ħaġa?","login_forgot_password_text":"Daħħal l-indirizz elettroniku li użajt biex tirreġistra, u aħna nibgħatulek link biex tbiddel il-password. ","login_no_account_yet":"M'għandekx account?","login_password_changed":"Il-Password inbidlet","login_password_not_match":"Il-passwords li int daħħalt ma qablux. ","login_password_reset_email_has_been_sent":"Jekk jogħġbok iċċekkja l-inbox tiegħek għal struzzjonijiet dwar kif tirrisetja l-password tiegħek. ","login_reset_password_heading":"Issa wasal il-ħin li toħloq il-password il-ġdida tiegħek. ","login_reset_password_success":"Agħfas il-buttuna t'hawn taħt u tkun lest biex tillogja lura f'Wunderlist. ","login_reset_password_success_heading":"Hooray! Il-password ġiet mibdula. ","login_password_too_short":"Password irid ikollha mill-inqas 5 karattri. ","login_sign_up":"Irreġistra. ","login_want_to_try_again":"Trid terġa tipprova?","login_accept_terms":"Jekk tirreġistra int tkun qed taċċetta it-$1 u l-$2 tagħna. ","logout_timeout_title":"Problema fis-sinkronizzazjoni","logout_timeout_text":"Ma rnexxilniex nissinkronizzaw l-informazzjoni tiegħek. Trid terġa tipprova jew  tibqa ħiereġ?","mobile_tutorial_welcome_to":"Merħba Għal","mobile_tutorial_wunderlist_subtitle":"il-lista to-do sempliċi u mill-isbaħ","notifications_desktop_enable_heading":"Trid tattiva n-notifikazzjonijiet fuq id-desktop?","notifications_no_notifications":"L-ebda attivita","notifications_no_notifications_message":"Inviti u attivitajiet oħra jidhru hawn. ","notifications_event_accept":"Aċċetta","notifications_event_accepted":"Aċċettat","web_upgrade_ie9_not_supported":"Wunderlist ma jaħdimx f'Internet Explorer 9. Jekk jogħġbok aġġorna għal $ jew $ għal esperjenza aħjar. ","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Milli jidher int qed tuża touch screen. Trid tattiva l-interface ottimizzat għat-touch? Dan is-setting tista' tbiddlu meta trid mis-settings tal-kont. ","web_setting_enable_touch_for_$":"Attiva t-touch għal: $","web_settings_text_refresh_may_be_required":"Jista jkun li jkollok bżonn refresh","rate_label":"Irrejtja 'l Wunderlist","rate_app_heading":"Agħmel Review ta' Wunderlist","rate_app_message_web_chrome":"Grazzi talli ppruvajt 'l Wunderlist 2! Għidilna x'taħseb billi tagħmel rating jew review ġol-Chrome Web Store ★★★★★","rate_app_button_later":"Fakkarni Aktar Tard","rate_app_button_no":"Le grazzi","rate_app_button_yes":"Irrejtja 'l Wunderlist","placeholder_add_due_today_to_inbox":"Żid item fl-\"Inbox\" għal-lum...","placeholder_add_list":"Żid lista...","placeholder_add_subtask":"Żid subtask","placeholder_add_starred_to_inbox":"Żid item importanti fl-\"Inbox\"...","placeholder_add_task_to_$":"Żid item ġo \"$\"...","placeholder_add_to_inbox":"Żid item fl-\"Inbox\"","placeholder_new_list":"Lista Ġdida","placeholder_remind_me":"Fakkarni","placeholder_search":"Fittex","placeholder_sharing_search":"Isem u indirizz elettroniku...","placeholder_set_due_date":"Issetja deadline","browser_outdated_heading":"Stenn.., milli jidher il-browser tiegħek mhux aġġornat. ","browser_outdated_update":"Jekk jogħġbok aġġorna l-browser tiegħek. ","browser_outdated_explanation":"Wunderlist hu mibni permezz tal-aħħar teknoloġiji. Biex tuża 'l Wunderlist, iddawnlodja l-aħħar verżjoni tal-browser tiegħek. ","prenamed_list_movies":"Films","prenamed_list_private":"Privat","prenamed_list_shopping":"Xirja","prenamed_list_wishlist":"WWishlist","prenamed_list_work":"Xogħol","prenamed_list_read_later":"Aqra Aktar Tard","settings_account_change_email":"Biddel l-Indirizz Elettroniku...","settings_account_change_password":"Biddel il-Password","settings_account_delete_confirmation":"Ikteb \"Jien ċert\"","settings_account_delete_confirmation_text":"Jien ċert","settings_account_drop_image":"Waqqa' l-istampa hawn","settings_account_connect_facebook_account":"Jekk tgħaqqad l-kont Wunderlist tiegħek ma' Facebook tkun tista' taqsam il-listi tiegħek ma' ħbiebek aktar malajr. ","settings_general_12_hour":"12-il siegħa","settings_general_24_hour":"24 siegħa","settings_general_confirm_deletion":"Ikkonferma qabel tħassar","settings_general_create_new_tasks":"Żid items ġodda","settings_general_date_format":"Format għad-data","settings_general_language":"Lingwa","settings_general_start_of_week":"Bidu tal-ġimgħa","settings_general_start_of_week_sunday":"Ħadd","settings_general_start_of_week_saturday":"Sibt","settings_general_start_of_week_monday":"Tnejn","settings_general_sound_task_completion":"Attiva s-sound ma' kull item li jkun lest","settings_general_sound_new_notifications":"Uża s-sound ma' notifikazzjonijiet ġodda","settings_general_print_done_tasks":"Ipprintja l-items lesti","settings_general_tasks_bottom":"Qiegħ tal-lista","settings_general_tasks_top":"Quċċata tal-lista","settings_general_time_format":"Format tal-Ħin","settings_heading_team":"Business","settings_heading_about":"Dwar","settings_heading_account":"Kont","settings_heading_general":"Ġenerali","settings_heading_notification":"Notifikazzjonijiet","settings_heading_shortcuts":"Shortcuts","settings_heading_sidebar":"Sidebar","settings_imprint":"Aktar Informazzjoni","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"Avżani dwar events importanti permezz:","settings_notifications_notify_me_on_text":"Aħna se navżawk dwar ċerti avvenimenti, bħal meta xi ħadd jaċċetta xi invit għal lista maqsuma, jew meta xi ħadd iżid jew ilesti xi item f'waħda mil-listi maqsuma tiegħek. ","settings_sidebar_smart_lists_title":"Uri dawn l-iSmart Lists fis-Sidebar:","settings_sidebar_smart_lists_auto":"Awto","settings_sidebar_smart_lists_hidden":"Moħbijin","settings_sidebar_smart_lists_visible":"Viżibbli","settings_sync_full":"Issinkronizza Issa","settings_account_account_backup":"Backup","settings_account_restore_backup":"Import Backup Data","settings_account_backup_description":"Backup data includes all your Lists, Tasks, Subtasks, Notes, and Reminders. Please note it does not include those Lists that were shared with you, Files, Comments, Shared List recipients and previous application settings.","settings_account_data_is_being_processed":"Hold tight! Your backup data is being processed. We will send you an email when everything is complete.","settings_account_change_password_error":"Kien hemm problema biex il-password tiġi aġġornata. Jekk jogħġbok erġa pprova. ","settings_account_click_to_download_backup":"Ikklikja biex Tiddownlowdja","settings_account_create_backup":"Oħloq Backup","settings_account_current_password":"Password kurrenti","settings_account_delete_account":"Ħassar il-kont","settings_account_delete_account_confirm":"Ċert li trid tagħlaq dan l-account?","settings_account_delete_account_confirm_text":"Jekk tħassar l-account tiegħek, il-listi u l-items kollha tiegħek jitħassru għal dejjem. ","settings_account_fetching_data":"Stenna Ftit...","settings_account_new_password":"Password ġdida","settings_account_repeat_new_password":"Irrepeti l-Password il-ġdida","settings_account_right_click_and_save_as":"Right Click u Issejvja","settings_third_party_libraries":"Liċenzji","settings_background_credits":"Grazzi għal backgrounds","settings_notifications_email_enabled":"Notifikazzjonijiet b'email","settings_notifications_desktop_enabled":"Notifikazzjonijiet fuq id-desktop","settings_notifications_push_enabled":"Notifikazzjonijiet Push","settings_privacy_policy":"Policy dwar il-Privacy","settings_shortcuts_arrow_keys":"Buttuni tal-vleġeġ","settings_shortcuts_delete_item":"Ħassar din il-lista jew item","settings_shortcuts_mark_done":"Immarka dawn l-items bħala \"Lesti\"","settings_shortcuts_mark_starred":"Immarka dawn l-items bħala \"Importanti\"","settings_shortcuts_new_list":"Żid lista...","settings_shortcuts_new_task":"Żid task ġdida...","settings_shortcuts_open_all_smart_list":"Iftaħ il-lista 'Kollha'","settings_shortcuts_open_assigned_smart_list":"Iftaħ il-lista smart 'Assenajti lili nnifsi'","settings_shortcuts_open_conversations_smart_list":"Iftaħ il-lista 'Konversazzjonijiet'","settings_shortcuts_open_done_smart_list":"Iftaħ il-lista 'Lesti'","settings_shortcuts_open_inbox":"Iftaħ l-Inbox","settings_shortcuts_open_preferences":"Iftaħ il-preferenzi","settings_shortcuts_open_search":"Tiftix","settings_shortcuts_open_starred_smart_list":"Iftaħ il-lista 'Mportanti'","settings_shortcuts_open_today_smart_list":"Iftaħ il-lista 'Għal-lum'","settings_shortcuts_open_week_smart_list":"Iftaħ il-lista 'Għal dil-ġimgħa'","settings_shortcuts_reset":"Mur Lura għad-defaults","settings_shortcuts_select_all_tasks":"Għażel l-items kollha","settings_shortcuts_show_more":"Uri Aktar","settings_shortcuts_hide":"Aħbi","settings_shortcuts_show_notifications":"Uri ċ-Ċentru t'Attivita","settings_shortcuts_step_through_list":"Dur bejn il-listi","settings_shortcuts_step_through_task":"Dur bejn il-listi","settings_terms_of_use":"Termini tal-Użu","settings_account_header_free":"B'Xejn","settings_account_header_unregistered":"Irreġistra","settings_account_header_account_$":"Kont $","settings_account_pro_description":"Żid kummenti u fajls mat-tasks tiegħek u assenjahom lill-kollegu tiegħek. Kollaborazzjoni f'timijiet qatt ma kienet daqshekk faċli. ","settings_account_register_wunderlist_description":"Irreġistra għal Wunderlist biex tissinkronizza il-listi tiegħek bejn id-devices kollha tiegħek. ","settings_manage_subscription_button":"Immaniġja l-Abbonament","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Yay, issa int $!","settings_account_header_pro_description":"Wunderlist Pro hu l-qawa mod biex iżżomm il-proġetti mad-deadlines. Stieden lil ħbieb u l-kollegi tiegħek biex tikkollabora u tlesti aktar affarijiet. ","settings_upgrade_to_pro_label":"Aġġorna għal $","settings_label_pro_account":"Kont Pro","settings_label_purchased_from_$":"Mixtrija mill-$","settings_label_purchased_from_$_by_$":"Mixtrija mingħand $1 minn: $2","settings_label_expires_in_$":"Se tiskadi f'$","setting_label_next_billing_date":"Data tal-Ħlas Li Jmiss:","setting_label_cancel_subscription":"Waqqaf l-Abbonament","setting_heading_cancel_subscription":"Ċert li trid twaqqaf l-Abbonament Wunderlist Pro tiegħek?","setting_description_cancel_subscription":"Int xorta se jkollok aċċess għal informazzjoni tiegħek, imma meta l-abbonament tiegħek jiskadi, int tkun tista' tuża l-features standard ta' wunderlist. ","setting_label_cancel_subscription_success":"L-abbonament tiegħek ġie mwaqqaf.","settings_label_invoices":"Irċevuti","settings_label_become_a_pro":"Sir Pro","settings_payment_info_expires_$_relative":"Tiskadi $","settings_payment_info_expires_$_absolute":"Se tiskadi f'$1 ġranet: $2","settings_manage_subscription_error":"Skużana, iltqajna ma' problema waqt li konna qed nippruvaw nimmaniġjaw l-abbonament tiegħek. ","group_billing_packages_title":"Plans for every business ","group_billing_packages_text":"Wunderlist for Business provides you with all the features you need to work smarter as a team at an affordable price. Simply select the right plan for your business now.","group_billing_plan_table_team_size":"Qies tat-Tim","group_billing_plan_table_price":"Prezz","group_billing_plan_table_package_name_$":"$ Membri","group_billing_buy_button_label":"Ixtri","group_billing_$_off":"$ anqas","group_billing_larger_team_$":"Għandek tim akbar? $","group_billing_contact_us":"Ikkuntatjana!","group_billing_downgrade_error_$_$":"Biex timxi għal pakkett ta' $1 Membri, trid tneħħi $2 kollegi mill-kont tiegħek. ","group_billing_manage_team":"Agħfas hawn biex timmaniġja t-tim tiegħek. ","group_billing_button_label_manage":"Immaniġja","group_billing_team_plan_title":"Il-Pjan Wunderlist Pro Tiegħek","group_billing_team_plan_text":"Wunderlist Pro tikber mat-tim tiegħek! Hi faċli ħafna biex iżżid aktar membri, kemm iddaħħal l-indirizz elettroniku tagħhom hawn taħt. Dan jgħodd ukoll anke jekk huma mhumiex membri ta' Wunderlist. ","group_billing_upgrade_button_label":"Biddel il-Pakkett","group_billing_upgrade_plan_button_label":"Aġġorna","group_billing_Downgrade_plan_button_label":"Downgrade","group_billing_view_plans_button_label":"Ara l-Pakketti","group_billing_manage_team_header":"Immaniġja l-Membri tat-Tim","group_billing_email_address_input_placeholder":"Indirizz elettroniku","group_billing_manage_count_$_of_$":"$1 minn $2","group_billing_cancel_team_plan":"Waqqaf il-Pjan Wunderlist Pro Tiegħek","group_billing_search_coachmark":"Biex iżżid il-membri, daħħal l-indirizz elettroniku tal-kollegi tiegħek, u dawn jkunu mdaħħlin fil-pjan Pro tiegħek. ","group_billing_cancel_header":"Ċert li trid twaqqaf l-Abbonament Wunderlist Pro tat-tim tiegħek?","group_billing_change_plan_confirmation_$_$_$":"Hi faċli ħafna biex tbiddel il-pjan tiegħek. Jekk tmur għall-pjan ta' $1 Membri issa, int tħallas $2 mal-kont li jmiss li jibda f'$3. Ċert li trid tagħmel dan issa?","group_billing_cancel_text":"L-abbonamet Pro tiegħek se jiskadi fl-aħħar tax-xahar, u nhux se terġa tħallas. Int xorta se tkun tista tara kull feature Pro bħal fajls mehmużin mat-tasks, imma ma tkunx tista' tibdilhom. ","error_goup_billing_user_already_pro":"Milli jidher din il-persuna diġa għandha kont Wunderlist Pro. Agħti r-rigal ta' Pro lil xi ħadd ieħor. ","error_group_billing_wait_subscription_runs_out":"Int se jkollok tistenna li jiskadi l-abbonament kurrenti tiegħek qabel terġa tixtri. Jiskadi f'$. ","button_label_buy_wunderlist_for_business":"Go to Wunderlist for Business","benefit_payment_service_unavailable":"Servizz tal-Ħlas Mhux Disponibbli","benefit_name":"Wunderlist Pro","benefit_header_$":"Sir Pro","benefit_header_description":"Kollaborazzjoni f'timijiet u negozji qatt ma kienet daqshekk faċli! Hawn huma 4 raġunijiet għalfejn għandek tirreġistra għal Wunderlist Pro. ","benefit_button_buy_monthly":"Kull Xahar","benefit_assign_tasks_title":"Assenja t-Tasks","benefit_assign_tasks_description":"Iddelega u kun af l-istat ta' do-dos lill-kollegi tiegħek. ","benefit_unlimited_subtasks_title":"Subtasks Mhux Limitati","benefit_unlimited_subtasks_decription":"Aqsam tasks kbar f'biċċiet żgħar u li jistgħu jsiru biex ttejjeb il-produttività tiegħek — mingħajr limitazzjoni. ","benefit_comments_title":"Kummenti","benefit_comments_description":"Ibda konversazzjoni mal-kollegi tiegek dwar kull to-do li trid. Ħalli feedback, saqsi mistoqsijiet, u agħti aktar informazzjoni. ","benefit_backgrounds_update_$":"Biex tuża l-backgrounds ġodda tagħna, jekk jogħġbok aġġorna għal $","benefit_additional_backgrounds_title":"Backgrounds Addizzjonali","benefit_additional_backgrounds_description":"Skopri 8 backgrounds ġodda biex tagħmel 'l Wunderlist kif tridu int!","benefit_files_title":"Fajls","benefit_files_description":"Ehmeż fajls mat-tasks tiegħek u aqsamhom mat-tim tiegħek. ","benefit_coming_soon":"Ġejjin Aktar Tard","benefit_assign_become_pro":"Assenja t-to dos lill-kollegi tiegħek permezz ta' Wunderlist","benefit_label_accept_terms":"Jekk tixtri abbonament għal wunderlist Pro, int tkun qed taċċetta it-$1 u l-$2.","benefit_label_need_more_subtasks":"Trid aktar subtasks?","sharing_connect_facebook_sharing":"Agħqqad il-kont Wunderlist tiegħek ma' Facebook biex tistieden il-ħbiebek faċilment. ","sharing_facebook_apprequest_message_$user_$list":"\"$1\" irid jaqsam il-lista \"$2\" miegħek. ","sharing_invite":"Stieden xi nies","sharing_invite_friends":"Stieden xi ħbieb","sharing_inviting_requires_account":"Irreġistra biex tistieden il-ħbiebek u l-kollegi tiegħek għal listi tiegħek. ","sharing_leave_action":"Żgur trid titlaq minn din il-lista?","sharing_leave_button":"Abanduna l-lista maqsuma","sharing_list_members":"Membri","sharing_list_owner":"Sid","sharing_list_pending_member":"Pendenti","sharing_tab_recents":"Riċenti","sharing_shared_with_you_by":"Maqsum miegħek minn","smart_list_assigned_to_me":"Assenjati lili nnifsi","smart_list_conversations":"Konversazzjonijiet","smart_list_all":"Kollha","smart_list_completed":"Lesti","smart_list_inbox":"Inbox","smart_list_starred":"Importanti","smart_list_today":"Illum","smart_list_week":"Ġimgħa","label_tell_friends":"Għid lil ħbiebek","social_sharing_heading":"Jgħoġbok? Għid lil sħabek!","social_sharing_dialog_headline":"Love Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"Mhux Issa","social_sharing_button_no_thanks":"Le Grazzi","social_sharing_button_facebook":"Share","social_sharing_button_follow_us":"Iffollowjana","social_sharing_button_like_us":"Għamlilna Like","social_sharing_heading_thanks":"Kun ċert li ma titlef xejn mill-aħħar aħbarijiet dwar Wunderlist. ","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"I’m using Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","twitter_sharing_placeholder":"I’m using @Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","tutorial_welcome_notes_title":"Noti","tutorial_welcome_notes_text":"Dawn in-noti li jinqalgħu qegħdin biex jgħinuk taħdem kemm ġo jew barra Wunderlist. ","tutorial_welcome_notifications_title":"Ċentru t'Attivita","tutorial_welcome_notifications_text":"Biddel kif trid tkun notifikat. Agħżel li tirċievi l-inviti għal listi jew b'email jew fuq id-desktop jew miċ-Ċentru t'Attivita. ","tutorial_welcome_sharing_title":"Stieden xi ħbieb","tutorial_welcome_sharing_text":"Issa hi eħfef minn qatt qabel li tistieden il-ħbiebek u l-kollegi biex jgħinuk. ","tutorial_welcome_subtasks_title":"Items Rikorrenti, Tifkiriet u Subtasks","tutorial_welcome_subtasks_text":"Wunderlist issa tinkludi Veduta ddettalja ġdida, li ttik iċ-ċans li żżid xi items rikorenti, tifkiriet u subtasks. ","tutorial_welcome_user_title":"Hawn int il-protagonist!","tutorial_welcome_user_text":"Biddel is-settings tiegħek, iċċekja l-istatus tas-sinkronizzazjoni u biddel il-background tiegħek.","tutorial_welcome_newsletter_subscribe":"Infurmani dwar aġġornamenti mportanti u features ġodda dwar Wunderlist b'email","tutorial_feature_pro_title":"Feature riservat għal membri Pro","share_list_email_signature":"Sent with Wunderlist – My beautiful and simple to-do list\\nIt’s free for iPhone, iPad, Android, Mac, Windows PC and Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ items mhux sinkronizzati","userbar_$_unsynced_item_plural":"$ items mhux issinkronizzati","userbar_account_settings":"Settings","userbar_change_background":"Biddel il-Background","userbar_last_synced_$":"L-aħħar sinkronizzazjoni $","userbar_no_internet_connection":"Offline","userbar_preferences":"Preferenzi","userbar_sync_in_progress":"Syncing...","userbar_user_name_for_unregistered_mode":"Irreġistra biex tuża s-Sinkronizzazjoni","whatsnew_title":"X'inhu Ġdid","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Kummenti","whatsnew_label_voice":"Input Vokali","whatsnew_label_groupbilling":"Prezzijiet għal Timijiet","whatsnew_copy_comments":"Żomm il-konversazzjonijiet tiegħek kollha f'post wieħed fil-Kummenti permezz ta' Wunderlist Pro. Ħalli feedback, saqsi mistoqsijiet u agħti aktar informazzjoni mat-to-dos tiegħek biex ittejjeb il-komunikazzjoni bejn it-tim tiegħek. ","whatsnew_copy_pro_accounts":"Ikkummenta, Assenja to-dos, żid fajls u oħloq Subtasks Mhux Limitati permezz ta' Wunderlist Pro biex tlesti aktar, flimkien. ","whatsnew_copy_voice":"Agħfas fuq l-ikona tal-mikrofonu biex tiddetta t-tasks tiegħek jew tirrekordja Memo Vokali u tehmiżha bħala fajl. ","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Sign up to try Wunderlist Pro and add a File.","label_add_new_file":"Żid fajl...","file_uploaded_unsuccessfully":"L-upload ta' $ waqaf. Jekk jogħġbok erġa pprova. ","file_uploaded_failed":"L-upload ma setgħax jitkompla. Jekk jogħġbok erġa pprova. ","file_uploaded_failed_deleted":"L-upload ta' $ waqaf, għax il-fajl tħassar mill-hard drive tiegħek. ","label_are_you_sure_permanently_delete_$_file":"Ċert li trid tneħħi l-fajl \"$\" minn Wunderlist?","upload_file_was_not_synced_yet":"Jekk jogħġbok issinkronizza","upload_file_not_synced_yet":"Mhux Sinkronizzat","placeholder_add_comments":"Ikkumenta...","placeholder_reply":"Wieġeb...","button_label_go_pro_to_comment":"Biex tikkumenta trid tkun Pro","comment_request_failed":"Skużana, imma rnexxilniex nuruk il-Kummenti. Jekk jogħġbok erġa pprova. ","comment_load_earlier":"Ara aktar kummenti","coachmark_no_current_comments":"No comments yet.\\nStart your conversation here.","coachmark_comments_not_available":"Skużana, imma rnexxilniex nuruk il-Kummenti ta' qabel. Jekk jogħġbok erġa pprova minn hawn u ftit ieħor. ","notification_$_commented_on_$":"$1 ikkummenta fuq $2","notification_$_and_$_commented_on_$":"$1 u $2 ikkummentaw fuq $3","notification_$_and_$_others_commented_on_$":"$1 u $2 oħrajn ikkummentaw fuq $3","comments_requires_account":"Sign up to try Wunderlist Pro and add a Comment.","non_pro_trial_free_limit_reached":"You’ve reached your Free limit!","non_pro_trial_write_next_comment_$":"You can add another Comment $.","non_pro_trial_upload_next_file_$":"You’ll be able to add another File $.","non_pro_trial_assign_next_to_do_$":"You can Assign another to-do $.","button_signup_or_login":"Irreġistra jew Illogja","button_it_is_completely_free":"Kompletament B'xejn","label_free_download_for_platforms":"Disponibbli b'xejn għall-iPhone, iPad, Android, Windows u Mac","label_wunderlist_to_get_things_done":"More than 5 million people use Wunderlist to get things done.","label_people_who_use_wunderlist":"Ara min diġa qed juża 'l Wunderlist:","label_wunderlist_uses":"Kemm jekk qed torganizza n-negozju tiegħek, triq taqsam ix-xirja ma' xi ħadd li tħobb jew biex tikkontrolla l-ħajja ta' kuljum, Wunderlist hi l-aqwa lista to-do għalik, it-tim tiegħek u familtek. ","label_install_browser_extension":"Installa l-Estensjoni għal Browser","label_install_chrome_browser_extension":"Installa l-Estensjoni għal Chrome","label_newsletter_signup":"Irreġistra għan-newsletter tagħna","label_know_upcoming_features":"Kun minn tal-ewwel li tkun taf dwar l-iżviluppi li ġejjin","label_learn_more_about_wunderlist":"Tgħallem aktar dwar Wunderlist","label_learn_more":"Skopri aktar...","label_your_email_address":"L-indirizz elettroniku tiegħek","button_subscribe_to_newsletter":"Abbona","button_sending_subscribe_to_newsletter":"Stenna Ftit...","iyf4_usermenu_label":"Get Wunderlist Pro for Free","iyf4_notification_label":"Get up to 12 free months of Wunderlist Pro by inviting your friends!","iyf4_notification_button_label_var_a":"Start Inviting","iyf4_notification_button_label_var_b":"Invite Friends","iyf4_notification_button_label_var_c":"Get Wunderlist Pro for Free","iyf4_notification_button_label_var_d":"Share Wunderlist Pro","iyf4_dialog_invite_headline_$":"Get up to $ of Wunderlist Pro by inviting your friends!","iyf4_dialog_invite_headline_incentive":"12 free months","iyf4_dialog_invite_incentive_$":"$ Wunderlist, we'll give you both 1 month of Wunderlist Pro for free (up to a limit of 12 months)","iyf4_dialog_invite_incentive_terms":"For every friend who joins","iyf4_dialog_tweet":"I love organizing my life with Wunderlist. Get a month of Wunderlist Pro for free here:","iyf_notification_label":"Refer Wunderlist to your friends and get Pro for free up to 12 months!","iyf_notification_button_label":"Go Pro!","iyf_dialog_step1_headline":"Get a free Pro Account","iyf_dialog_step1_subheadline":"in 3 easy steps","iyf_dialog_step1_instruction1_headline":"Start inviting your friends","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter or E-Mail","iyf_dialog_step1_instruction2_headline":"Your friends sign up","iyf_dialog_step1_instruction2_subheadline":"sit tight while they join Wunderlist","iyf_dialog_step1_instruction3_headline":"Enjoy your free Pro Account","iyf_dialog_step1_instruction3_subheadline":"1 month for every friend who accepts","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 month for every $ friends who accept","iyf_dialog_step1_next_button":"Start inviting","iyf_dialog_step2_subheadline":"to get your free Pro Account","iyf_dialog_step2_divider_label":"Aqsam din il-link","iyf_dialog_share_on_facebook":"Share fuq Facebook","iyf_dialog_post_on_twitter":"Tweet fuq Twitter","iyf_dialog_email_placeholder":"Enter an email address...","iyf_dialog_more_placeholder":"Add another...","iyf_dialog_step3_headline":"Thank you for sharing","iyf_dialog_step3_subheadline":"Sit tight while your friends join","iyf_dialog_step3_success_headline":"Invites successfully sent","iyf_dialog_step3_success_subheadline":"We'll notify you as soon as your Pro account is ready.","iyf_dialog_step3_invite_more":"Invite more people","meta_title":"Wunderlist 2: il-lista to-do sempliċi u mill-isbaħ tiegħek","meta_description":"Over 5 million people already use Wunderlist to manage tasks, to-do lists, and to get things done.  Wunderlist is the best to-do list for you, your team or your family.","meta_keywords":"6wunderkinder, produttivita, ikkollabora, task management, task manager, to-do, todo, lista, tasks, gtd, organizza, ippjana, lista tax-xiri, reminders, subtasks, listi smart, xirja, lista ta' films, lista maqsuma","enable_desktop_notifications_text":"Ikklikja 'Ikkonferma' u 'Ħalli' fil-browser tiegħek biex tattiva n-notifikazzjonijiet.","notification_add_to_browser":"Żomm lil Wunderlist klikk 'il bogħod. Żid il-Wunderlist Web App mal-browser tiegħek issa stess. ","notification_add_extension_to_browser":"Issejvja il-kontenut favorit tiegħek minn fuq l-Internet direttament f'Wunderlist. Installa l-estensjoni Add to Wunderlist issa stess. ","button_add_to_chrome":"Żid ma' Chrome","button_add_to_store_added":"Miżjud","aria_activity_center_hint":"Activity Center. Hit escape to close.","aria_exit_search":"Exit Search","aria_search":"Search","aria_sort_list":"Sort List","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"User menu. Hit escape to close.","aria_assign_to_$":"Assign to $","momentjs_months":"Jannar_Frar_Marzu_April_Mejju_Ġunju_Lulju_Awissu_Settembru_Ottubru_Novembru_Diċembru","momentjs_monthsShort":"Jan_Fra_Mar_Apr_Mej_Ġun_Lul_Awi_Set_Ott_Nov_Diċ","momentjs_weekdays":"Ħadd_Tnejn_Tlieta_Erbgħa_Ħamis_Ġimgħa_Sibt","momentjs_weekdaysShort":"Ħad_Tne_Tli_Erb_Ħam_Ġim_Sib","momentjs_weekdaysMin":"Ħa_Tn_Tl_Er_Ħa_Ġi_Si","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Illum f'] LT","momentjs_calendar_nextDay":"[Għada f'] LT","momentjs_calendar_nextWeek":"dddd [f'] LT","momentjs_calendar_lastDay":"[Ilbieraħ f'] LT","momentjs_calendar_lastWeek":"[L-Aħħar] dddd [f'] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"f'%s","momentjs_relativeTime_past":"%s ilu","momentjs_relativeTime_s":"ftit sekondi ilu","momentjs_relativeTime_m":"minuta ilu","momentjs_relativeTime_mm":"%d minuti","momentjs_relativeTime_h":"siegħa","momentjs_relativeTime_hh":"%d sigħat","momentjs_relativeTime_d":"ġurnata","momentjs_relativeTime_dd":"%d ġranet","momentjs_relativeTime_M":"xahar","momentjs_relativeTime_MM":"%d xhur","momentjs_relativeTime_y":"sena","momentjs_relativeTime_yy":"%d snin"}
};
});
define('languages/burmese',[],function() {
return {
'name': 'burmese',
'data': {"actionbar_print_selected_item":"ရွေးချယ်ထားသောအမျိုးအစားများကိုစာရွက်ထုတ်မည်","actionbar_print_$_selected_items_plural":"ရွေးချယ်ထားသော$ အမျိုးအစားများကိုစာရွက်ထုတ်မည်","actionbar_email_selected_item":"ရွေးချယ်ထားသောအမျိုးအစားများကို အီးမေးလ်ပို့မည်","actionbar_email_$_selected_items_plural":"$ ရွေးချယ်ထားသောအမျိုးအစားများကို အီးမေးလ်ပို့မည်","actionbar_sort_alphabetically":"အက္ခရာစဉ်အလိုက်စီမည်","actionbar_sort_due_date":"ပြည့်မည့်ရက်အရစီမည်","actionbar_sort_assignee":"သက်ဆိုင်သူ အလိုက် စဉ်ပါ။","api_error_account_already_exists":"ဒီ အီးမေးလ်လိပ်စာနှင့်အကောင့်သည်ယခင်ကတည်းကရှိပြီးသားပါ။","api_error_connection_error":"Whoops,  ဆာဗာသို့ရောက်ရန် ပြဿာနာတက်နေပါသည်။ ပြန်လည်ကြိုးစားပါ","api_error_general_error":"Whoops, ယခုလောလောဆယ် ဆာဗာ ထံသို့မရောက်နိုင်ပါ။ ပြန်လည်ကြိုးစားပါ","api_error_incorrect_login":"သင်ရိုက်ထည့်သော အီးမေးလ်လိပ်စာ သို့မဟုတ် စကားဝှက်သည် မှားနေပါသည်။","api_error_incorrect_password":"သင်ရိုက်ထည့်သောစကားဝှက်သည် မှားနေပါသည်။","api_error_service_down":"WunderAPI service ၏ key အစိတ်အပိုင်းသည် ဒေါင်းသွားပါသည်။","api_error_unknown":"An unexpected and unhandled error has occurred.","api_error_validation_error_unable_to_signup":"ပေးထားသောအီးမေးလ်လိပ်စာနှင့် အကောင့်မပြုလုပ်နိုင်ပါ","api_error_not_a_beta_user":"သင်သည် Wunderlist beta ၏ အဖွဲ့ဝင်မဟုတ်ပါ။","button_back":"နောက်သို့","button_cancel":"ပယ်ဖျက်မည်","button_confirm":"အတည်ပြုချက်ရယူမည်","button_download":"ဒေါင်းလုတ်","button_change":"ပြောင်းမည်","button_choose":"ရွေးပါ","button_connect":"ချိတ်ဆက်မည်","button_connect_facebook":"ဖေ့ဘုတ်နှင့်ချိတ်ဆက်မည်","button_continue":"ဆက်လက်လုပ်ဆောင်မည်","button_delete":"ဖျက်မည်","button_disconnect":"ချိတ်ဆက်မှု့ဖြတ်တောက်မည်","button_dismiss":"ပယ်ဖျက်မည်","button_done":"လုပ်ဆောင်ပြီးပါပြီ။","button_edit":"ပြင်ဆင်ရန်","button_get_started":"ကဲ စလိုက်ရအောင်","button_go_back":"နောက်သို့ပြန်သွားမည်","button_go_back_sentence":"နောက်သို့ပြန်သွားမည်","button_learn_more":"နောက်ထပ်သင်ယူရန်","button_go_back_to_login":"ဝင်ရန်နောက်သို့ပြန်သွားပါ","button_go_to_web_app":"Web App သို့သွားမည်","button_join_now":"အခုပဲဝင်လိုက်ရအောင်","button_log_in":"ဝင်ရောက်မည်","button_log_in_with_$":"$ နှင့်ဝင်ရောက်မည်","button_log_out":"ထွက်မည်","button_log_in_facebook":"ဖေ့ဘုတ်အကောင့်နှင့်ဝင်မည်","button_next":"နောက်သို့","button_no":"မဟုတ်ဘူး","button_no_due_date":"ပြည့်မည့်ရက်စွဲမရှိပါ။","button_ok":"အိုကေ","button_remove_due_date":"သက်တမ်းပြည့်မည့်ရက်ကိုဖြုတ်မည်","button_remove_reminder":"သတိပေးချက်ဖြုတ်မည်","button_email_list":"အီးမေးလ်စာရင်း","button_print_list":"ပရင့်ထုတ်ရန်စာရင်း","button_reset_password":"စကားဝှက်ကို ပြန်လည်သတ်မှတ်မည်","button_retry":"ပြန်ကြိုးစားမည်","button_save":"သိမ်းဆည်းမည်","button_send":"ပို့မည်","button_sign_up":"Sign Up","button_sign_up_with_$":"$ နှင့် Sign Up ပြုလုပ်မည်","button_sign_up_for_free":"အခမဲ့ Sign Up ပြုလုပ်နိုင်","button_sign_up_facebook":"ဖေ့ဘုတ်နှင့် Sign Up လုပ်မည်","button_support_center":"ထောက်ပံ့ပေးသော စင်တာ","button_subscribe":"Awesome, ဟုတ်ကဲ့။ ကျေးဇူးပြုပြီ။","button_try_again":"ပြန်ကြိုးစားပါ","button_try_wunderlist":"Wunderlist ကိုကြိုးစားကြည့်မည်","button_yes":"ဟုတ်ကဲ့","coachmark_all_list_empty":"သင်သည် မည်သည့်အမျိုးအစားမှကိုမှ မထည့်ရသေးပါ။ ရှေ့ဆက်သွားပြီး တစ်ခုခုထည့်ပါ","coachmark_completed_list_empty":"ဘယ်အချက်မျှ မပြီးသေးဘူး။ ဆက်လုပ်ပါ၊ တစ်ချို့အချက်တွေကို စစ်ကြည့်ပါ။","coachmark_no_search_results":"ရှာဖွေသည့်အဖြေမတွေ့ရှိပါ","coachmark_sharing_invite_friends_heading":"သင်၏သူငယ်ချင်းများကိုဖိတ်မည်","coachmark_sharing_invite_friends_text_$":"သင်၏သူငယ်ချင်းများသည် “$” စာရင်းထဲတွင် ဖန်တီးနိုင်မည်၊ ပယ်ဖျက်နိုင်မည်၊ အမှန်ခြစ်ဖျောက်နိုင်မည်။","coachmark_sharing_recent_no_contacts_heading":"မကြာသေးခင်က ဆက်သွယ်ထားသောလူစာရင်းမရှိပါ","coachmark_sharing_recent_no_contacts_text_$":"အီးမေးလ်လိပ်စာတစ်ခုကိုရိုက်ထည့်ပါ သို့မဟုတ် သင်၏ဆက်သွယ်ရမည့်လူစာရင်းထဲတွင်ရှာကြည့်ပါ။ တစ်ခါထည့်ပြီးပါက သင်၏သူငယ်ချင်းသည် “$” စာရင်းထဲတွင် ဖန်တီးနိုင်မည်၊ ပယ်ဖျက်နိုင်မည်၊ အမှန်ခြစ်ဖျောက်နိုင်မည်။","coachmark_assigned_to_me_list_empty":"သင့်ထံ သတ်မှတ်ထားသောအရာမရှိသေးပါ","coachmark_conversations_list_empty":"ယခုပြောကြားနေသောစကားများမရှိသေးပါ။","coachmark_starred_list_empty":"သင့်ထံတွင်ကြယ်ပြထားသောအမျိုးအစားမရှိပါ","coachmark_today_list_empty":"ဂုဏ်ယူပါတယ်။ ဒီကနေ့အတွက် သင် သည် အချိန်မီနှင့် အချိန်မကျော်အောင် ပြုလုပ်နိုင်ခဲ့ပါသည်","coachmark_week_list_empty":"On vacation? You have no items due for the next 7 days","error_list_not_found":"သင်ရှာနေသောအစီအစဉ်ကိုရှာမတွေ့ပါ","error_share_not_created":"An issue occurred while attempting to share your list. Please try again.","error_task_not_found":"သင်ရှာနေသောအမျိုးအစားကိုရှာမတွေ့ပါ","error_page_not_found":"စာမျက်နှာရှာမတွေ့ပါ","error_title_not_found":"မတွေ့ပါ","label_are_you_sure_permanently_delete_item":"ဒီအမျိုးအစားများကိုတကယ်ဖျက်ချင်တာသေချာပါသလား။","label_are_you_sure_permanently_delete_item_plural":"ဒီအမျိုးအစားများကိုတကယ်ဖျက်ချင်တာသေချာပြီလား","label_activity_center":"လုပ်ဆောင်မှု့စင်တာ","label_are_you_sure_permanently_delete_$_list":"စာရင်း“$” ကိုလုံး၀ဖျက်ချင်တာသေချာပြီလား","label_are_you_sure_permanently_delete_$_task":"ဒီအမျိုးအစား“$”ကိုတကယ်ဖျက်ချင်တာသေချာပါသလား။","label_are_you_sure_permanently_delete_task_plural":"ဒီအမျိုးအစားတွေကိုလုံး၀ဖျက်မှာသင်သေချာပြီလား။","label_are_you_sure_permanently_delete_$_subtask":"ဒီအလုပ်ခွဲ“$”များကိုဖျက်ချင်တာသေချာလား။","label_cant_undo":"You will not be able to undo this action.","label_completed_tasks_heading":"၁ ပြီးသောအမျိုးအစား","label_$_completed_tasks_heading_plural":"$ ပြီးသွားသောအမျိုးအစားများ","label_connecting":"ချိတ်ဆက်နေပါသည်","label_minisite_description_line_1":"Keep track of everything you want to do.","label_minisite_description_line_2":"အဓိက Platform တွေမှာ Wunderlist ကိုအခမဲ့ရနိုင်ပါတယ်။","label_minisite_share_deleted_or_no_access":"ဒီဟာကိုဖျက်ပြီးသွားပြီ သို့မဟုတ် သင်နောက်ထပ် မသုံးနိုင်တော့ဘူး လို့ထင်ရပါသည်","label_minisite_contact_sender_for_info":"နောက်ထပ်အချက်အလက်အနေနှင့် ဒီအစီအစဉ်ကိုဝေမျှထားသော လူများနှင့်ကျေးဇူးပြု၍ဆက်သွယ်ပါ","label_minisite_$_invited_you_to_the_list_$":"$1 သည် $2 အစီအစဉ်ကို သင်နှင့်အတူမျှဝေလိုပါသည်","label_minisite_empty_list_$":"This list is currently empty, so help them get started. Simply hit the Sign Up button above, and start adding items to the list $.","label_day_0":"နွေ","label_day_1":"လာ","label_day_2":"ဂါ","label_day_3":"ဟူး","label_day_4":"ကြာ","label_day_5":"သော","label_day_6":"နေ","label_delete_file":"ဖိုင်ကိုဖျက်မည်","label_delete_list":"အစီအစဉ်ကိုဖျက်မည်","label_delete_task":"အမျိုးအစားကိုဖျက်မည်","label_delete_task_plural":"အမျိုးအစားများကိုဖျက်မည်","label_delete_subtask":"အလုပ်ခွဲကိုဖျက်မည်","label_due_$":"ပြည့်မည့် $","label_due_on":"$ တွင်ရက်ပြည့်ပါမည်","label_due_date":"ပြည့်မည့်ရက်စွဲ","label_email":"အီးမေးလ်","label_every":"အမြဲတမ်း","label_loading":"ဖွင့်နေပါသည်","label_logging_out":"ထွက်နေပါသည်","label_name":"အမည်","label_newsletter":"Wunderlist သတင်းလွှာ","label_none":"ဘာမှမရှိပါ","label_notification":"အသိပေးခြင်း","label_oops":"Oops!","label_or":"သို့မဟုတ်","label_password":"စကားဝှက်","label_relative_date_today":"ယနေ့","label_relative_date_today_with_date":"ယနေ့ $","label_relative_date_today_mid_sentence":"ယနေ့","label_relative_date_tomorrow":"မနက်ဖြန်","label_relative_date_tomorrow_with_date":"မနက်ဖြန် $","label_relative_date_tomorrow_mid_sentence":"မနက်ဖြန်","label_relative_date_yesterday":"မနေ့က","label_remind_me_at_$":"$ မှာ ကျွန်ုပ်ကိုသတိပေးပါ","label_reminder":"သတိပေးချက်","label_reminder_message_$":"ရင်းနှီးပျူငှာသော သတိပေးချက်သာ - $","label_repeat_every_day":"နေ့တိုင်းထပ်လုပ်မည်","label_repeat_every_week":"အပတ်တိုင်းပြုလုပ်မည်","label_repeat_every_month":"လတိုင်းပြုလုပ်မည်","label_repeat_every_year":"နှစ်တိုင်းထပ်ခါထပ်ခါပြုလုပ်မည်","label_repeat_custom":"စိတ်ကြိုက်","label_repeat_day":"နေ့တိုင်း","label_repeat_day_$_plural":"$ နေ့တိုင်း","label_repeat_month":"လတိုင်း","label_repeat_month_$_plural":"$ လများတိုင်း","label_repeat_week":"အပတ်တိုင်း","label_repeat_week_$_plural":"$ အပတ်တိုင်း","label_repeat_never":"ဘယ်တော့မှပြန်မလုပ်ဘူး","label_repeat_year":"နှစ်တိုင်း","label_repeat_year_$_plural":"$ နှစ်တိုင်း","label_reset_password":"စကားဝှက်ကို ပြန်လည်သတ်မှတ်မည်","label_rights_reserved":"အားလုံးမှတ်ပုံတင်ပြီး","label_still_fetching_tasks":"Still fetching tasks ...","label_sync":"Sync","label_time_am":"မနက်","label_time_day_plural":"နေ့များ","label_time_week_plural":"အပတ်များ","label_time_month_plural":"လများ","label_time_pm":"PM","label_time_year_plural":"နှစ်များ","label_assign_to":"Assign to","label_unassigned":"Unassigned","label_assign_me":"ကျွန်ုပ်","label_created_$":"ဖန်တီးခဲ့သည့် $","label_created_by_$":"$ မှဖန်တီးခဲ့","label_created_on_$":"$ တွင်ဖန်တီးခဲ့","label_created_$_by_$":"Created $1 by $2","label_created_by_$_on_$":"$2 တွင် $1 ကဖန်တီးခဲ့","label_completed_$":"ပြီးပြည့်စုံပါပြီ$","label_completed_on_$":"Completed on $","label_completed_$_by_$":"Completed $1 by $2","label_completed_by_$_on_$":"Completed by $1 on $2","login_add_photo_hint":"သင်၏ဓာတ်ပုံကိုတင်ပြီး သင်၏ Wunderlist အကောင့်ကိုပြင်ဆင်မည်","login_already_have_account":"အကောင့်တစ်ခုရှိပြီးသားလား။","login_email_not_valid":"မှန်ကန်သော အီးမေးလ်လိပ်စာရိုက်ထည့်ပါ","login_empty_name":"သင်၏အမည်ကိုရိုက်ထည့်ပါ","login_empty_password":"စကားဝှက်တစ်ခုရိုက်ထည့်ပါ","login_password_not_valid":"မှန်ကန်သောစကားဝှက်ကိုရိုက်ထည့်ပါ","login_empty_email":"အီးမေးလ်လိပ်စာတစ်ခုရိုက်ထည့်ပါ","login_enter_name":"သင်ဘယ်သူလဲ","login_enter_password":"သင်အားလုံးနီးပါးလုပ်ပြီးပါပြီ။","login_enter_password_hint":"သင်၏Wunderlist အကောင့်ပြီးပြည့်စုံရန် စကားဝှက်တစ်ခုကိုရွေးပါ","login_forgot_password":"စကားဝှက်မေ့သွားပြီလား","login_forgot_password_heading":"တစ်ခုခုမေ့သွားပြီလား","login_forgot_password_text":"သင် စတင်အကောင့်လုပ်တုန်းက အီးမေးလ်လိပ်စာနှင့်ဝင်ပါ။ ကျွန်ုပ်တို့ သင့်ထံစကားဝှက်ကိုပြောင်းနိုင်မည့် Link ပို့လိုက်မည်။","login_no_account_yet":"အကောင့်တစ်ခုမရှိဘူးလား","login_password_changed":"စကားဝှက်ကို ပြင်ဆင်ပြီးပါပြီ။","login_password_not_match":"သင်ရိုက်ထည့်ခဲ့သောစကားဝှက်သည်မတူညီပါ","login_password_reset_email_has_been_sent":"ကျေးဇူးပြု၍ စကားဝှက်ပြန်ပြောင်းရန်အတွက် သင်၏အီးမေးလ်ကို စစ်ပေးပါ။","login_reset_password_heading":"သင်၏စကားဝှက်အသစ်ကိုဖန်တီးဖို့အချိန်ရောက်ပါပြီ။","login_reset_password_success":"အောက်ကခလုတ်လေးကို နှိပ်လိုက်ရုံလေးပါ။ ပြီးတာနဲ့ သင်၏ Wunderlist ထဲ့သို့ပြန်ဝင်သွားပါလိမ့်မည်","login_reset_password_success_heading":"Hooray! သင်၏စကားဝှက်ကိုအောင်မြင်စွာ ပြောင်းလဲပြီးပါပြီ။","login_password_too_short":"စကားဝှက်သည် စာလုံး ငါးလုံး အနည်းဆုံးပါရမည်။","login_sign_up":"Sign Up.","login_want_to_try_again":"ပြန်ကြိုးစားချင်သလား။","login_accept_terms":"By signing up you accept our $1 and $2.","logout_timeout_title":"Sync ချို့ယွင်းမှု့","logout_timeout_text":"We couldn't synchronize your data. Do you want to retry or just logout?","mobile_tutorial_welcome_to":"ကြိုဆိုပါတယ်။","mobile_tutorial_wunderlist_subtitle":"သင်၏လှပပြီး ရိုးရှင်းသောအစီအစဉ်","notifications_desktop_enable_heading":"Desktop မှ သတိပေးချက်ကို ဖွင့်ထားမှာလား။","notifications_no_notifications":"လုပ်ဆောင်မှု့မရှိပါ","notifications_no_notifications_message":"ဝေမျှထားသောအစီအစဉ်များနှင့် တခြားလုပ်ဆောင်မှု့များဖိတ်ကြားခြင်းသည် ဤနေရာတွင်ပေါ်သည်။","notifications_event_accept":"လက်ခံမည်","notifications_event_accepted":"လက်ခံပြီးပါပြီ။","web_upgrade_ie9_not_supported":"Wunderlist does not support Internet Explorer 9. Please upgrade to $ or $ for a better experience.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer ၁၀","web_enable_touch_styles_alert":"Looks like you are using a device with a touch screen. Would you like to enable a touch optimized interface? You can always change this in your account settings.","web_setting_enable_touch_for_$":"Enable Touch for: $","web_settings_text_refresh_may_be_required":"Refresh လုပ်ခြင်းလိုအပ်လိမ့်မည်","rate_label":"Wunderlist ကိုအမှတ်ပေးမည်","rate_app_heading":"Rate and Review Wunderlist","rate_app_message_web_chrome":"Wunderlist ကိုသုံးသည့်အတွက်ကျေးဇူးတင်ပါသည်။ သင်ဘာတွေးနေသည်ကိုလည်း ကျွန်ုပ်တို့ကြားလိုသည်။ Wunderlist ကို Rating နှင့် Reviewing လုပ်ပြီး Chrome Web Store ထဲတွင် ကျွန်ုပ်တို့ကိုပြောခဲ့ပါ။★★★★★","rate_app_button_later":"ကျွန်ုပ်ကိုနောက်မှသတိပေးပါ","rate_app_button_no":"မလိုအပ်ပါ","rate_app_button_yes":"Wunderlist ကိုအမှတ်ပေးမည်","placeholder_add_due_today_to_inbox":"Add an item due today in “Inbox”...","placeholder_add_list":"စာရင်းတစ်ခုထည့်မည်","placeholder_add_subtask":"အလုပ်ခွဲတစ်ခုထည့်မည်","placeholder_add_starred_to_inbox":"“Inbox” ထဲသို့ ကြယ်ပြထားသောအမျိုးအစားတစ်ခုကိုထည့်မည်","placeholder_add_task_to_$":"“$” ထဲတွင် အမျိုအစားတစ်ခုကိုထည့်မည်","placeholder_add_to_inbox":"“Inbox” ထဲသို့ အမျိုးအစားတစ်ခုထည့်မည်","placeholder_new_list":"စာရင်းအသစ်","placeholder_remind_me":"ကျွန်ုပ်ကိုသတိပေးပါ","placeholder_search":"ရှာမည်........","placeholder_sharing_search":"အမည် သို့မဟုတ် အီးမေးလ်လိပ်စာ","placeholder_set_due_date":"ပြည့်မည့်ရက်သတ်မှတ်မည်","browser_outdated_heading":"အို့....သင်၏ Web browser သည်အဟောင်းဖြစ်နေလေသည်။","browser_outdated_update":"သင်၏ browser ကို update ပြုလုပ်ပါ","browser_outdated_explanation":"Wunderlist ကို နောက်ဆုံးပေါ်နှင့်အခန်းနားဆုံး နည်းပညာများနှင့်တည်ဆောက်ထားပါသည်။ Wunderlist ကိုသုံးရန်အတွက် သင်၏browser နောက်ဆုံးပေါ်ကိုဒေါင်းလုတ်ဆွဲပါ","prenamed_list_movies":"ကြည့်ရန်ရုပ်ရှင်များ","prenamed_list_private":"ကိုယ်ပိုင်","prenamed_list_shopping":"စျေးဝယ်ထွက်ခြင်း","prenamed_list_wishlist":"လိုချင်သောစာရင်း","prenamed_list_work":"အလုပ်","prenamed_list_read_later":"နောက်မှဖတ်ရန်","settings_account_change_email":"အီးမေးလ် ပြောင်းမည်","settings_account_change_password":"စကားဝှက်ပြောင်းမည်","settings_account_delete_confirmation":"'ကျွန်ုပ်သေချာပြီ' ဆိုပြီးရိုက်ထည့်ပါ","settings_account_delete_confirmation_text":"ကျွန်ုပ်သေချာပြီ","settings_account_drop_image":"ပုံကိုဒီနေရာမှာ ထားပါ","settings_account_connect_facebook_account":"သင်၏ Wunderlist အကောင့်ကို ဖေ့ဘုတ်နှင့်ချိတ်ဆက်ခြင်းသည် သင်၏သူငယ်ချင်းများနှင့် စာရင်းများကို ရိုးရိုးရှင်းရှင်း၊ မြန်စွာ၊နှင့် လွယ်ကူစွာ ပြုလုပ်နိုင်ပါသည်။","settings_general_12_hour":"၁၂ နာရီ","settings_general_24_hour":"၂၄ နာရီ","settings_general_confirm_deletion":"အမျိုးအစားများကိုမဖျက်ခင် အတည်ပြုချက်ရယူမည်","settings_general_create_new_tasks":"အကြောင်းအရာများအသစ်ထည့်မည်","settings_general_date_format":"ရက်စွဲပုံစံ","settings_general_language":"ဘာသာစကား","settings_general_start_of_week":"အပတ်၏အစ","settings_general_start_of_week_sunday":"တနင်္ဂနွေ","settings_general_start_of_week_saturday":"စနေ","settings_general_start_of_week_monday":"တနင်္လာ","settings_general_sound_task_completion":"အမျိုးအစား ပြီးသွားပါက အသံဖွင့်ထားမည်","settings_general_sound_new_notifications":"အချက်ပေးခြင်းအသစ်များအတွက် အသံကိုဖွင့်ထားမည်","settings_general_print_done_tasks":"ပြီးပြည့်စုံသွားသောအစီအစဉ်များကို စာရွက်ထုတ်မည်","settings_general_tasks_bottom":"အစီအစဉ်၏အောက်ဆုံး","settings_general_tasks_top":"အစီအစဉ်၏ထိပ်ဆုံး","settings_general_time_format":"အချိန်ပုံစံ","settings_heading_team":"စီးပွားရေး","settings_heading_about":"အကြောင်း","settings_heading_account":"အကောင့်","settings_heading_general":"ယေဘုယျ","settings_heading_notification":"အချက်ပေးချက်","settings_heading_shortcuts":"အမြန်ခလုတ်များ","settings_heading_sidebar":"ဘေးတန်း","settings_imprint":"Imprint","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"အရေးကြီးသောပွဲများကို ကျွန်ုပ်ထံသို့ အချက်ပေးမည် -","settings_notifications_notify_me_on_text":"We’ll notify you on certain events, such as when someone accepts an invitation to a shared list, or when someone adds or completes an item in one of your shared lists.","settings_sidebar_smart_lists_title":"ဒီပိုမိုကောင်းမွန်သော အစီအစဉ်ကို ဘေးတန်းတွင်ပြမည်","settings_sidebar_smart_lists_auto":"အလိုအလျောက်","settings_sidebar_smart_lists_hidden":"ဖျောက်ထားသော","settings_sidebar_smart_lists_visible":"မြင်နိုင်သော","settings_sync_full":"ယခုချက်ချင်း Sync လုပ်မည်","settings_account_account_backup":"Account Backup","settings_account_restore_backup":"Import Backup Data","settings_account_backup_description":"Backup data includes all your Lists, Tasks, Subtasks, Notes, and Reminders. Please note it does not include those Lists that were shared with you, Files, Comments, Shared List recipients and previous application settings.","settings_account_data_is_being_processed":"Hold tight! Your backup data is being processed. We will send you an email when everything is complete.","settings_account_change_password_error":"သင်၏စကားဝှက်ကို မွမ်းမံနေစဉ်ပြဿနာတက်နေပါသည်။ ပြန်လည်ကြိုးစားပါ","settings_account_click_to_download_backup":"ဒေါင်းလုတ်ဆွဲရန်နှိပ်ပါ။","settings_account_create_backup":"Backup ဖန်တီးမည်","settings_account_current_password":"ယခုစကားဝှက်","settings_account_delete_account":"အကောင့်ကိုဖျက်မည်","settings_account_delete_account_confirm":"သင်၏အကောင့်ကိုတကယ်ဖျက်ချင်ပါသလား။","settings_account_delete_account_confirm_text":"သင်၏အကောင့်ကိုဖျက်ခြင်းသည် သင်၏အစီအစဉ်နှင့်အမျိုးအစားအားလုံးကိုပျက်သွားပါလိမ့်မယ်။ ပြန်ပြင်လို့မရနိုင်ပါ။","settings_account_fetching_data":"အချက်အလက်များရယူနေသည်","settings_account_new_password":"စကားဝှက်အသစ်","settings_account_repeat_new_password":"စကားဝှက်အသစ်ပြန်ရိုက်မည်","settings_account_right_click_and_save_as":"ညာဖက်ကလစ်နှိပ်ပြီး Save ကိုနှိပ်ပါ။","settings_third_party_libraries":"လိုင်စင်များ","settings_background_credits":"Background Credits","settings_notifications_email_enabled":"အီးမေးလ်အချက်ပေးခြင်း","settings_notifications_desktop_enabled":"Desktop အချက်ပေးခြင်း","settings_notifications_push_enabled":"Push Notifications","settings_privacy_policy":"ကိုယ်ပိုင် လမ်းစဉ်","settings_shortcuts_arrow_keys":"Arrow Keys","settings_shortcuts_delete_item":"ရွေးထားသောစာရင်း သို့မဟုတ် အမျိုးအစားများကိုဖျက်မည်","settings_shortcuts_mark_done":"ရွေးထားသောအမျိုးအစားများကို ပြီးပြီဟု မှတ်ယူမည်","settings_shortcuts_mark_starred":"ရွေးထားသောအမျိုးအစားများကို ကြယ်ဖြင့်ပြသမည်","settings_shortcuts_new_list":"စာရင်းအသစ်တစ်ခုပေါင်းထည့်မည်","settings_shortcuts_new_task":"အမျိုးအစားအသစ်တစ်ခုထည့်မည်","settings_shortcuts_open_all_smart_list":"'All' Smart List ကိုဖွင့်မည်","settings_shortcuts_open_assigned_smart_list":"Open 'Assigned to Me' Smart List","settings_shortcuts_open_conversations_smart_list":"Open 'Conversations' Smart List","settings_shortcuts_open_done_smart_list":"Open 'Completed' Smart List","settings_shortcuts_open_inbox":"Inbox ကိုဖွင့်မည်","settings_shortcuts_open_preferences":"Preferences ကိုဖွင့်မည်","settings_shortcuts_open_search":"Focus Search","settings_shortcuts_open_starred_smart_list":"Open 'Starred' Smart List","settings_shortcuts_open_today_smart_list":"'Today' Smart List ကိုဖွင့်မည်","settings_shortcuts_open_week_smart_list":"'Week' Smart List ကိုဖွင့်မည်","settings_shortcuts_reset":"မူလအတိုင်းပြန်ထားမည်","settings_shortcuts_select_all_tasks":"အမျိုးအစားအားလုံးကိုရွေးမည်","settings_shortcuts_show_more":"နောက်ထပ်ပြမည်","settings_shortcuts_hide":"ဖျောက်ထားမည်","settings_shortcuts_show_notifications":"လုပ်ဆောင်မှု့စင်တာ ကိုပြမည်","settings_shortcuts_step_through_list":"Step Through Lists","settings_shortcuts_step_through_task":"Step Through Items","settings_terms_of_use":"အသုံးပြုမှု့သဘောတူညီချက်","settings_account_header_free":"အခမဲ့","settings_account_header_unregistered":"Sign Up","settings_account_header_account_$":"$ အကောင့်","settings_account_pro_description":"Add comments and files to your to-dos and assign them to your colleagues. Collaboration in teams has never been easier!","settings_account_register_wunderlist_description":"Register for Wunderlist to sync your lists across all your devices.","settings_manage_subscription_button":"Manage Subscription","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Yay, you’re a $!","settings_account_header_pro_description":"Wunderlist Pro is the best way to keep your projects on track. Invite your friends and colleagues to collaborate and make things happen!","settings_upgrade_to_pro_label":"$ သို့အဆင့်မြင့်တင်မည်","settings_label_pro_account":"Pro Account","settings_label_purchased_from_$":"ဝယ်ယူမည့်နေရာ-$","settings_label_purchased_from_$_by_$":"Purchased from $1 by: $2","settings_label_expires_in_$":"$ တွင်သက်တမ်းကုန်ဆုံးမည်","setting_label_next_billing_date":"Next Billing Date:","setting_label_cancel_subscription":"Cancel Subscription","setting_heading_cancel_subscription":"Do you really want to cancel your Wunderlist Pro Subscription?","setting_description_cancel_subscription":"You will still have access to all your data, but once your subscription expires, you will only be able to use Wunderlist’s standard features.","setting_label_cancel_subscription_success":"Your subscription was cancelled successfully.","settings_label_invoices":"Invoices","settings_label_become_a_pro":"Become a Pro","settings_payment_info_expires_$_relative":"Expires $","settings_payment_info_expires_$_absolute":"Expires in $1 days: $2","settings_manage_subscription_error":"Sorry, an error happened while trying to manage your subscription.","group_billing_packages_title":"စီးပွားရေးအားလုံးအတွက် အစီအစဉ်များ","group_billing_packages_text":"Wunderlist for Business provides you with all the features you need to work smarter as a team at an affordable price. Simply select the right plan for your business now.","group_billing_plan_table_team_size":"အဖွဲ့အရေအတွက်","group_billing_plan_table_price":"စျေးနှုန်း","group_billing_plan_table_package_name_$":"$ အဖွဲ့ဝင်","group_billing_buy_button_label":"ဝယ်မည်","group_billing_$_off":"$ off","group_billing_larger_team_$":"$ အဖွဲ့ဝင်အများကြီးရှိတာလား။","group_billing_contact_us":"ကျွန်ုပ်တို့နှင့်ဆက်သွယ်ပါ။","group_billing_downgrade_error_$_$":"In order to switch to the $1 Members plan, you must remove $2 teammate(s) from the account. ","group_billing_manage_team":"သင့်အဖွဲ့ဝင်များကို စီစဉ်ရန်အတွက် ဒီနေရာကို နှိပ်ပါ။","group_billing_button_label_manage":"စီစဉ်မည်","group_billing_team_plan_title":"Your Wunderlist Pro Plan","group_billing_team_plan_text":"Wunderlist Pro grows right along with your team! Adding members is super easy, just enter their email addresses below. It’s that simple whether or not they’re already a Wunderlist user.","group_billing_upgrade_button_label":"Change Plan","group_billing_upgrade_plan_button_label":"Upgrade","group_billing_Downgrade_plan_button_label":"Downgrade","group_billing_view_plans_button_label":"View Plans","group_billing_manage_team_header":"Manage Team Members","group_billing_email_address_input_placeholder":"Email address","group_billing_manage_count_$_of_$":"$1 of $2","group_billing_cancel_team_plan":"Cancel Your Wunderlist Pro Plan","group_billing_search_coachmark":"To add members, simply enter the email addresses of your teammates, and they'll be added to your Pro plan.","group_billing_cancel_header":"Are you sure you want to cancel your team’s Wunderlist Pro Subscription?","group_billing_change_plan_confirmation_$_$_$":"Changing plans is easy. If you go for $1 Members plan now, you’ll be billed $2 in the next billing cycle starting on $3. Are you sure you want to do this now?","group_billing_cancel_text":"Your Pro subscription will run until the end of month, and you won’t be billed again. While you’ll still retain the ability to view any Pro features like files attached to tasks, you won’t be able to make any changes to them.","error_goup_billing_user_already_pro":"Looks like this person already has a Wunderlist Pro account. Give the gift of Pro to another teammate!","error_group_billing_wait_subscription_runs_out":"You’ll have to wait until your current subscription runs out before repurchasing. Expires on: $.","button_label_buy_wunderlist_for_business":"Go to Wunderlist for Business","benefit_payment_service_unavailable":"Payment Service Unavailable","benefit_name":"Wunderlist Pro","benefit_header_$":"Become a $","benefit_header_description":"Collaboration in teams and businesses has never been easier! Here are 5 very good reasons to sign up for Wunderlist Pro.","benefit_button_buy_monthly":"လစဉ်","benefit_assign_tasks_title":"Assign To-Dos","benefit_assign_tasks_description":"Easily delegate and track the status of to-dos amongst colleagues and friends!","benefit_unlimited_subtasks_title":"Unlimited Subtasks","benefit_unlimited_subtasks_decription":"Break big tasks into small, achievable steps for improved productivity — without limitations.","benefit_comments_title":"မှတ်ချက်များ","benefit_comments_description":"Start a conversation with your teammates about any of your to-dos. Leave feedback, ask a question or add some extra insight.","benefit_backgrounds_update_$":"ကျွန်ုပ်တို့၏နောက်ခံအသစ်များသုံးရန် $ သို့အဆင့်မြင့်တင်ပါ။","benefit_additional_backgrounds_title":"နောက်ခံပုံ အသစ်များ","benefit_additional_backgrounds_description":"Discover 8 new beautiful backgrounds to customize Wunderlist just the way you like it!","benefit_files_title":"ဖိုင်များ","benefit_files_description":"Attach files to your to-dos and share them with your teammates.","benefit_coming_soon":"မကြာခင်လာမည်","benefit_assign_become_pro":"Wunderlist နှင့် လုပ်စရာရှိသည်များကို သင်၏အလုပ်အတူတူလုပ်သူများနှင့်သတ်မှတ်မည်","benefit_label_accept_terms":"By purchasing a Wunderlist Pro subscription, you accept the $1 and $2.","benefit_label_need_more_subtasks":"Need more subtasks?","sharing_connect_facebook_sharing":"သင်၏ Wunderlist အကောင့်ကို ဖေ့ဘုတ်နဲ့ချိတ်ဆက်ပြီး သူငယ်ချင်းများကိုဖိတ်ကြားမည်","sharing_facebook_apprequest_message_$user_$list":"“$1” သည် သင်နှင့်အတူ အစီအစဉ် “$2” ကိုဝေမျှလိုပါသည်။","sharing_invite":"လူများကိုဖိတ်မည်","sharing_invite_friends":"သူငယ်ချင်းများကိုဖိတ်ကြားမည်","sharing_inviting_requires_account":"သင်၏သူငယ်ချင်းများနှင့် လုပ်ဖော်ကိုင်ဖက်များကို သင်၏အစီအစဉ်သို့ဖိတ်ရန် Sign Up ပြုလုပ်ပါ","sharing_leave_action":"ဒီစာရင်းမှ ထွက်ဖို့သေချာပြီလား","sharing_leave_button":"ဝေမျှထားသောစာရင်းမှထွက်မည်","sharing_list_members":"အဖွဲ့ဝင်စာရင်း","sharing_list_owner":"ပိုင်ရှင်","sharing_list_pending_member":"ဆိုင်းငံ့ထားသော","sharing_tab_recents":"မကြာသေးခင်က","sharing_shared_with_you_by":"သင်နှင့်ဝေမျှထားသော သူ","smart_list_assigned_to_me":"Assigned to Me","smart_list_conversations":"Conversations","smart_list_all":"အားလုံး","smart_list_completed":"ပြီးပြည့်စုံပါပြီ","smart_list_inbox":"Inbox","smart_list_starred":"ကြယ်ပြထားသော","smart_list_today":"ယနေ့","smart_list_week":"အပတ်","label_tell_friends":"သင်၏သူငယ်ချင်းများကို ညွှန်ပေးပါ","social_sharing_heading":"Wunderlist ကို​ကြိုက်ပါသလား။ သင်၏သူငယ်ချင်းများကိုညွှန်ပေးလိုက်ပါ","social_sharing_dialog_headline":"Love Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"ယခုမဟုတ်ပါ","social_sharing_button_no_thanks":"ကျေးဇူးမတင်ပါ","social_sharing_button_facebook":"ဝေမျှမည်","social_sharing_button_follow_us":"ကျွန်ုပ်တို့၏နောက်ကိုလိုက်မည်","social_sharing_button_like_us":"ကျွန်ုပ်တို့ကိုကြိုက်ရန်","social_sharing_heading_thanks":"Wunderlist သတင်းများအားလုံးအတွက် ကျွန်န်ုပ်တို့နောက်ကိုလိုက်ပါ။","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"I’m using Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","twitter_sharing_placeholder":"I’m using @Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","tutorial_welcome_notes_title":"မှတ်စု","tutorial_welcome_notes_text":"Detachable notes allow you to work in or out of Wunderlist.","tutorial_welcome_notifications_title":"လုပ်ဆောင်မှု့စင်တာ","tutorial_welcome_notifications_text":"Customize the way you want to be notified. Choose to receive invites and updates to your shared lists via email and desktop notifications or view it all from Activity Center.","tutorial_welcome_sharing_title":"သူငယ်ချင်းများကိုဖိတ်ကြားမည်","tutorial_welcome_sharing_text":"It is now even easier to invite your friends and colleagues to lend a helping hand.","tutorial_welcome_subtasks_title":"Recurring Items, Reminders and Subtasks","tutorial_welcome_subtasks_text":"Wunderlist now features a brand new Detail View, that allows you to easily add recurring items, reminders and subtasks.","tutorial_welcome_user_title":"ဒီဟာတွေကတော့ သင်အကြောင်းတွေအားလုံးပါ။","tutorial_welcome_user_text":"Change your account settings, check the status of sync and customize your background.","tutorial_welcome_newsletter_subscribe":"Wunderlist ၏ features အသစ်များ၊ အရေးကြီးသော update များ ကို ကျွန်ုပ်ထံသို့ အီးမေးလ်ပို့ပြီးအကြောင်းကြားမည်","tutorial_feature_pro_title":"Wunderlist အဆင့်မြင့်တွင်ပါသည့်အင်္ဂါရပ်များ","share_list_email_signature":"Sent with Wunderlist – My beautiful and simple to-do list\\nIt’s free for iPhone, iPad, Android, Mac, Windows PC and Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ unsynced အမျိုးအစား","userbar_$_unsynced_item_plural":"$ unsynced items","userbar_account_settings":"အကောင့်Settings","userbar_change_background":"နောက်ခံပြောင်းမည်","userbar_last_synced_$":"နောက်ဆုံး synced $","userbar_no_internet_connection":"လိုင်းပေါ်တွင်မရှိပါ","userbar_preferences":"Preferences","userbar_sync_in_progress":"Syncing...","userbar_user_name_for_unregistered_mode":"Sync ရန် အတွက် Sign Up ပြုလုပ်မည်","whatsnew_title":"ဘာတွေထူးလဲ","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"မှတ်ချက်များ","whatsnew_label_voice":"Voice Input","whatsnew_label_groupbilling":"Team Pricing","whatsnew_copy_comments":"Keep all the conversations about your to-dos in one place with Comments in Wunderlist Pro. Leave feedback, ask a question or add extra insight to any of your to-dos to greatly improve communication within your team.","whatsnew_copy_pro_accounts":"Add Comments, Assign to-dos, add Files and create Unlimited Subtasks with Wunderlist Pro to accomplish more, together.","whatsnew_copy_voice":"Click the microphone icon to dictate your to-dos or even record a Voice Memo and attach it as a file.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Sign up to try Wunderlist Pro and add a File.","label_add_new_file":"ဖိုင်တစ်ခုပေါင်းထည့်မည်","file_uploaded_unsuccessfully":"Upload of $ failed. Please try again.","file_uploaded_failed":"Upload failed. Please try again.","file_uploaded_failed_deleted":"Upload of $ failed, because the file was deleted from your hard drive.","label_are_you_sure_permanently_delete_$_file":"Are you sure you want to permanently delete the file “$” from Wunderlist?","upload_file_was_not_synced_yet":"Please sync","upload_file_not_synced_yet":"Not Synced","placeholder_add_comments":"မှတ်ချက်တစ်ခုထည့်သွင်းမည်","placeholder_reply":"အကြောင်းပြန်မည်","button_label_go_pro_to_comment":"Go Pro to comment","comment_request_failed":"Sorry, we couldn't load Comments. Please try again.","comment_load_earlier":"မှတ်ချက်များကိုကြည့်မည်","coachmark_no_current_comments":"No comments yet.\\nStart your conversation here.","coachmark_comments_not_available":"Sorry, we couldn’t load the previous comments. Please try again in a few moments.","notification_$_commented_on_$":"$1 commented on $2","notification_$_and_$_commented_on_$":"$1 and $2 commented on $3","notification_$_and_$_others_commented_on_$":"$1 and $2 others commented on $3","comments_requires_account":"Sign up to try Wunderlist Pro and add a Comment.","non_pro_trial_free_limit_reached":"You’ve reached your Free limit!","non_pro_trial_write_next_comment_$":"You can add another Comment $.","non_pro_trial_upload_next_file_$":"You’ll be able to add another File $.","non_pro_trial_assign_next_to_do_$":"You can Assign another to-do $.","button_signup_or_login":"Sign up သို့မဟုတ် Log in","button_it_is_completely_free":"လုံး၀အခမဲ့ဖြစ်ပါသည်။","label_free_download_for_platforms":" iPhone, iPad, Android, Windows နှင့် Mac အတွက်အခမဲ့ရရှိနိုင်ပါသည်။","label_wunderlist_to_get_things_done":"More than 5 million people use Wunderlist to get things done.","label_people_who_use_wunderlist":"Wunderlist ကိုဘယ်သူတွေသုံးနေသလဲဆိုတာကြည့်မည်","label_wunderlist_uses":"Whether you’re organizing your business, sharing a shopping list with a loved one or simply keeping track of your daily life, Wunderlist is the best to-do list for you, your team or your family.","label_install_browser_extension":"Install the Browser Extension","label_install_chrome_browser_extension":"Chrome Browser Extension သွင်းမည်","label_newsletter_signup":"သတင်းစာစောင်အတွက် Sign Up ပြုလုပ်မည်","label_know_upcoming_features":"Be amongst the first to know about upcoming features","label_learn_more_about_wunderlist":"Wunderlist အကြောင်းပိုမိုသင်ယူမည်","label_learn_more":"Learn more...","label_your_email_address":"သင်၏အီးမေးလ်လိပ်စာ","button_subscribe_to_newsletter":"Subscribe","button_sending_subscribe_to_newsletter":"ပို့နေသည်","iyf4_usermenu_label":"Get Wunderlist Pro for Free","iyf4_notification_label":"Get up to 12 free months of Wunderlist Pro by inviting your friends!","iyf4_notification_button_label_var_a":"Start Inviting","iyf4_notification_button_label_var_b":"Invite Friends","iyf4_notification_button_label_var_c":"Get Wunderlist Pro for Free","iyf4_notification_button_label_var_d":"Share Wunderlist Pro","iyf4_dialog_invite_headline_$":"Get up to $ of Wunderlist Pro by inviting your friends!","iyf4_dialog_invite_headline_incentive":"၁၂ လ အခမဲ့","iyf4_dialog_invite_incentive_$":"$ Wunderlist, we'll give you both 1 month of Wunderlist Pro for free (up to a limit of 12 months)","iyf4_dialog_invite_incentive_terms":"ဝင်ရောက်လာသည့်မိတ်ဆွေအားလုံးအတါက်","iyf4_dialog_tweet":"I love organizing my life with Wunderlist. Get a month of Wunderlist Pro for free here:","iyf_notification_label":"Refer Wunderlist to your friends and get Pro for free up to 12 months!","iyf_notification_button_label":"Go Pro!","iyf_dialog_step1_headline":"Get a free Pro Account","iyf_dialog_step1_subheadline":"in 3 easy steps","iyf_dialog_step1_instruction1_headline":"Start inviting your friends","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter or E-Mail","iyf_dialog_step1_instruction2_headline":"Your friends sign up","iyf_dialog_step1_instruction2_subheadline":"sit tight while they join Wunderlist","iyf_dialog_step1_instruction3_headline":"Enjoy your free Pro Account","iyf_dialog_step1_instruction3_subheadline":"1 month for every friend who accepts","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 month for every $ friends who accept","iyf_dialog_step1_next_button":"Start inviting","iyf_dialog_step2_subheadline":"to get your free Pro Account","iyf_dialog_step2_divider_label":"ဒီလင့်ခ် ကိုဝေမျှမည်","iyf_dialog_share_on_facebook":"Share on Facebook","iyf_dialog_post_on_twitter":"Twitter ပေါ်တွင် Tweet  မည်","iyf_dialog_email_placeholder":"အီးမေးလ်လိပ်စာရိုက်ထည့်မည်","iyf_dialog_more_placeholder":"တခြားရိုက်ထည့်ရန်","iyf_dialog_step3_headline":"ဝေမျှသည့်အတွက် ကျေးဇူးပါ","iyf_dialog_step3_subheadline":"Sit tight while your friends join","iyf_dialog_step3_success_headline":"အောင်မြင်စွာဖိတ်ပြိးပါပြီ။","iyf_dialog_step3_success_subheadline":"We'll notify you as soon as your Pro account is ready.","iyf_dialog_step3_invite_more":"Invite more people","meta_title":"Wunderlist ၂ - သင်၏လှပပြီး ရိုးရှင်းသောအစီအစဉ် app","meta_description":"Over 5 million people already use Wunderlist to manage tasks, to-do lists, and to get things done.  Wunderlist is the best to-do list for you, your team or your family.","meta_keywords":"6wunderkinder, productivity, collaborate, task management, task manager, to-do, todo, list, tasks, gtd, organize, plan, shopping list, reminders, subtasks, smart lists, grocery list, movie list, shared list","enable_desktop_notifications_text":"'Comfirm' ကိုကလစ်နှိပ်ပါ။ ထို့နောက် သင်၏ Browser ထဲတွင် 'Allow' ကို ကလစ်နှိပ်ပြီး အချက်ပေးချက်များကိုလက်ခံရှိနိုင်ပါပြီ။","notification_add_to_browser":"သင်၏ Wunderlist ကိုတစ်ချက်တည်းနှီပ်ရုံနှင့်သုံးချင်ပါသလား။ Wunderlist Web App ကိုသင်၏ Browser ထဲသို့ထည့်သွင်းထားလိုက်ပါ","notification_add_extension_to_browser":"သင်၏ကြိုက်နှစ်သက်သော Web Content များကို လွယ်ကူလျှင်မြန်စွာ Wunderlist သို့သိမ်းဆည်းပေးပါသည်။ Add to Wunderlist Chrome Extension ကိုယခုပင်သွင်းလိုက်ပါ။","button_add_to_chrome":"Chrome ထဲသို့ထည့်မည်","button_add_to_store_added":"ထည့်ပြီးပါပြီ။","aria_activity_center_hint":"Activity Center. Hit escape to close.","aria_exit_search":"Exit Search","aria_search":"ရှာမည်","aria_sort_list":"Sort List","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"User menu. Hit escape to close.","aria_assign_to_$":"Assign to $","momentjs_months":"ဇန်နဝါရီ_ဖေဖော်ဝါရီ_မတ်_ဧပြီ_မေ_ဇွန်_ဇူလိုင်_ဩဂုတ်_စက်တင်ဘာ_အောက်တိုဘာ_နိုဝင်ဘာ_ဒီဇင်ဘာ","momentjs_monthsShort":"ဇန်_ဖေ_မတ်_ဧ_မေ_ဇွန်_ဇူ_ဩ_စက်_အောက်_နို_ဒီ","momentjs_weekdays":"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday","momentjs_weekdaysShort":"ဂ်_လာ_ဂါ_ဗု_ကြာ_သော_စ","momentjs_weekdaysMin":"ဂ်_လာ_ဂါ_ဗု_ကြာ_သော_စ","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[ယနေ့မှာ] LT","momentjs_calendar_nextDay":"[မနက်ဖြန်မှာ] LT","momentjs_calendar_nextWeek":"dddd [at] LT","momentjs_calendar_lastDay":"[မနေ့ကမှာ] LT","momentjs_calendar_lastWeek":"[last] dddd [at] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"%s ထဲတွင်","momentjs_relativeTime_past":"%s အရင်က","momentjs_relativeTime_s":"စက္ကန့်အနည်းငယ်","momentjs_relativeTime_m":"တစ်မိနစ်","momentjs_relativeTime_mm":"%d မိနစ်များ","momentjs_relativeTime_h":"တစ်နာရီ","momentjs_relativeTime_hh":"%d နာရီများ","momentjs_relativeTime_d":"တစ်နေ့","momentjs_relativeTime_dd":"%d နေ့များ","momentjs_relativeTime_M":"တစ်လ","momentjs_relativeTime_MM":"%d လများ","momentjs_relativeTime_y":"တစ်နှစ်","momentjs_relativeTime_yy":"%d နှစ်များ"}
};
});
define('languages/dutch',[],function() {
return {
'name': 'dutch',
'data': {"actionbar_print_selected_item":"Druk geselecteerde taken af","actionbar_print_$_selected_items_plural":"Druk $ geselecteerde taken","actionbar_email_selected_item":"E-mail geselecteerde taken","actionbar_email_$_selected_items_plural":"E-mail $ geselecteerde taken","actionbar_sort_alphabetically":"Sorteer alfabetisch","actionbar_sort_due_date":"Sorteer op datum","actionbar_sort_assignee":"Sorteer op persoon","api_error_account_already_exists":"Er bestaat al een account met dit e-mailadres.","api_error_connection_error":"Oeps, er was een probleem met het bereiken van de server. Probeer het opnieuw.","api_error_general_error":"Oeps, kan de server momenteel niet bereiken. Probeer het opnieuw.","api_error_incorrect_login":"Het ingevoerde e-mailadres of wachtwoord is niet juist.","api_error_incorrect_password":"Het ingevoerde wachtwoord is niet juist.","api_error_service_down":"Een essentieel onderdeel van de WunderAPI-service is buiten dienst.","api_error_unknown":"Een onverwachte en niet-afgehandelde fout is opgetreden.","api_error_validation_error_unable_to_signup":"Aanmelden met het opgegeven e-mailadres is niet mogelijk.","api_error_not_a_beta_user":"U is geen lid van de Wunderlist beta","button_back":"Terug","button_cancel":"Annuleren","button_confirm":"Bevestig","button_download":"Download","button_change":"Wijzig","button_choose":"Kies","button_connect":"Verbind","button_connect_facebook":"Verbind met Facebook","button_continue":"Ga verder","button_delete":"Verwijder","button_disconnect":"Loskoppelen","button_dismiss":"Wijs af","button_done":"Klaar","button_edit":"Wijzig","button_get_started":"Laten we beginnen","button_go_back":"Terug","button_go_back_sentence":"Ga Terug","button_learn_more":"Leer meer","button_go_back_to_login":"Ga terug om in te loggen.","button_go_to_web_app":"Naar de Web App","button_join_now":"Doe mee","button_log_in":"Log in","button_log_in_with_$":"Inloggen Met $","button_log_out":"Log uit","button_log_in_facebook":"Log in met Facebook","button_next":"Volgende","button_no":"Nee","button_no_due_date":"Geen vervaldatum","button_ok":"OK","button_remove_due_date":"Vervaldatum verwijderen","button_remove_reminder":"Verwijder herinnering","button_email_list":"E-maillijst","button_print_list":"Afdruklijst","button_reset_password":"Wachtwoord opnieuw instellen","button_retry":"Opnieuw","button_save":"Opslaan","button_send":"Verzend","button_sign_up":"Aanmelden","button_sign_up_with_$":"Aanmelden met $","button_sign_up_for_free":"Meld u gratis aan","button_sign_up_facebook":"Aanmelden met Facebook","button_support_center":"Support Center","button_subscribe":"Geweldig, ja graag!","button_try_again":"Probeer opnieuw","button_try_wunderlist":"Probeer Wunderlist","button_yes":"Ja","coachmark_all_list_empty":"U hebt nog geen taken toegevoegd. Ga aan slag en voeg iets toe.","coachmark_completed_list_empty":"U hebt nog geen enkele taak voltooid. Ga aan slag, vink sommige taken af in uw lijsten!","coachmark_no_search_results":"Geen resultaten gevonden","coachmark_sharing_invite_friends_heading":"Nodig uw vrienden uit","coachmark_sharing_invite_friends_text_$":"Uw vrienden kunnen taken aanmaken, verwijderen en afvinken in de lijst \"$\".","coachmark_sharing_recent_no_contacts_heading":"Geen recente contacten","coachmark_sharing_recent_no_contacts_text_$":"Typ een e-mailadres of zoek uw contactpersoon. Zodra deze is toegevoegd kan uw vriend taken aanmaken, verwijderen en afvinken in de lijst \"$\".","coachmark_assigned_to_me_list_empty":"Er is niets aan u toegewezen","coachmark_conversations_list_empty":"Er zijn op dit moment geen conversaties","coachmark_starred_list_empty":"U heeft geen belangrijke taken","coachmark_today_list_empty":"Proficiat! U heeft geen verlopen of achterstallige taken voor vandaag","coachmark_week_list_empty":"Op vakantie? U heeft geen taken voor de komende 7 dagen","error_list_not_found":"Kan de lijst die u zoekt niet vinden","error_share_not_created":"Er was een probleem bij het delen van uw lijst. Probeer het opnieuw.","error_task_not_found":"Kan de taak die u zoekt niet vinden","error_page_not_found":"Pagina niet gevonden","error_title_not_found":"Niet gevonden","label_are_you_sure_permanently_delete_item":"Bent u zeker dat u deze taak definitief wilt verwijderen?","label_are_you_sure_permanently_delete_item_plural":"Bent u zeker dat u deze taken definitief wilt verwijderen?","label_activity_center":"Activiteiten centrum","label_are_you_sure_permanently_delete_$_list":"Bent u zeker dat u de lijst \"$\" definitief wilt verwijderen?","label_are_you_sure_permanently_delete_$_task":"Weet u zeker dat u de taak \"$\" permanent wilt verwijderen?","label_are_you_sure_permanently_delete_task_plural":"Bent u zeker dat u deze taken definitief wilt verwijderen?","label_are_you_sure_permanently_delete_$_subtask":"Weet u zeker dat u de subtaak \"$\" permanent wilt verwijderen?","label_cant_undo":"U zult niet in staat zijn om deze actie ongedaan te maken.","label_completed_tasks_heading":"1 voltooide taak","label_$_completed_tasks_heading_plural":"$ voltooide taken.","label_connecting":"Verbinding maken...","label_minisite_description_line_1":"Blijf op de hoogte van alles wat u wilt doen.","label_minisite_description_line_2":"Wunderlist is gratis beschikbaar op alle grote platforms.","label_minisite_share_deleted_or_no_access":"Het lijkt erop dat dit werd verwijderd of dat je geen toegang meer hebt.","label_minisite_contact_sender_for_info":"Neem contact op met de persoon die deze lijst met u deelde voor meer informatie.","label_minisite_$_invited_you_to_the_list_$":"$1 heeft u uitgenodigd voor de lijst $2","label_minisite_empty_list_$":"Deze lijst is momenteel leeg, help ze op weg! Klik op de knop \"aanmelden\" en u kunt beginnen met het toevoegen van taken aan de lijst $.","label_day_0":"ZON","label_day_1":"MA","label_day_2":"DI","label_day_3":"WOE","label_day_4":"DON","label_day_5":"VRIJ","label_day_6":"ZAT","label_delete_file":"Verwijder bestand","label_delete_list":"Verwijder lijst","label_delete_task":"Verwijder taak","label_delete_task_plural":"Verwijder taken","label_delete_subtask":"Subtaak verwijderen","label_due_$":"Vervalt $","label_due_on":"Vervalt op $","label_due_date":"Vervaldatum","label_email":"E-mail","label_every":"elke","label_loading":"Laden...","label_logging_out":"Uitloggen...","label_name":"Naam","label_newsletter":"Wunderlist Nieuwsbrief","label_none":"Geen","label_notification":"Melding","label_oops":"Oeps!","label_or":"of","label_password":"Wachtwoord","label_relative_date_today":"Vandaag","label_relative_date_today_with_date":"Vandaag, $","label_relative_date_today_mid_sentence":"vandaag","label_relative_date_tomorrow":"Morgen","label_relative_date_tomorrow_with_date":"Morgen, $","label_relative_date_tomorrow_mid_sentence":"morgen","label_relative_date_yesterday":"Gisteren","label_remind_me_at_$":"Herinner mij om $","label_reminder":"Herinnering","label_reminder_message_$":"Gewoon een vriendelijke herinnering: $","label_repeat_every_day":"Herhaal elke dag","label_repeat_every_week":"Herhaal elke week","label_repeat_every_month":"Herhaal elke maand","label_repeat_every_year":"Herhaal elk jaar","label_repeat_custom":"Aangepast...","label_repeat_day":"Elke dag","label_repeat_day_$_plural":"Elke $ dagen","label_repeat_month":"Elke maand","label_repeat_month_$_plural":"Elke $ maanden","label_repeat_week":"Elke week","label_repeat_week_$_plural":"Elke $ weken","label_repeat_never":"Nooit herhalen","label_repeat_year":"Elk jaar","label_repeat_year_$_plural":"Elke $ jaren","label_reset_password":"Wachtwoord opnieuw instellen","label_rights_reserved":"Alle rechten voorbehouden","label_still_fetching_tasks":"Taken halen...","label_sync":"Synchroniseer","label_time_am":"AM","label_time_day_plural":"dagen","label_time_week_plural":"weken","label_time_month_plural":"maanden","label_time_pm":"PM","label_time_year_plural":"jaren","label_assign_to":"Toewijzen aan","label_unassigned":"Niet toegewezen","label_assign_me":"Mij","label_created_$":"Gemaakt $","label_created_by_$":"Gemaakt door $","label_created_on_$":"Gemaakt op $","label_created_$_by_$":"Gemaakt $1 door $2","label_created_by_$_on_$":"Gemaakt door $1 op $2","label_completed_$":"Voltooid $","label_completed_on_$":"Voltooid op $","label_completed_$_by_$":"Voltooid $1 door $2","label_completed_by_$_on_$":"Voltooid door $1 op $2","login_add_photo_hint":"Personaliseer jouw Wunderlist account door jouw foto toe te voegen.","login_already_have_account":"Heeft u al een account?","login_email_not_valid":"Voer een geldig e-mailadres in.","login_empty_name":"Voer uw naam in.","login_empty_password":"Voer een wachtwoord in.","login_password_not_valid":"Voor een geldig wachtwoord in.","login_empty_email":"Voer een e-mailadres in.","login_enter_name":"Wie bent u?","login_enter_password":"Je bent bijna klaar","login_enter_password_hint":"Kies een wachtwoord om het aanmaken van uw Wunderlist account te voltooien.","login_forgot_password":"Vergeten?","login_forgot_password_heading":"Iets vergeten?","login_forgot_password_text":"Voer uw registratie e-mailadres in en ontvang een link om uw wachtwoord terug in te stellen.","login_no_account_yet":"Heb je nog geen account?","login_password_changed":"Wachtwoord bijgewerkt","login_password_not_match":"De ingevoerde wachtwoorden komen niet overeen.","login_password_reset_email_has_been_sent":"Controleer uw e-mail voor instructies voor het opnieuw instellen van uw wachtwoord.","login_reset_password_heading":"Maak uw nieuw wachtwoord aan.","login_reset_password_success":"Klik op de knop hieronder en u bent klaar om weer bij Wunderlist in te loggen.","login_reset_password_success_heading":"Hoera! Uw wachtwoord is succesvol veranderd.","login_password_too_short":"Een wachtwoord moet minstens 5 karakters bevatten.","login_sign_up":"Aanmelden.","login_want_to_try_again":"Opnieuw proberen?","login_accept_terms":"Door aan te melden gaat u akkoord met onze $1 en $2.","logout_timeout_title":"Synchronisatiefout","logout_timeout_text":"We konden jouw gegevens niet synchroniseren. Wil je het opnieuw proberen of alleen uitloggen?","mobile_tutorial_welcome_to":"Welkom bij","mobile_tutorial_wunderlist_subtitle":"uw mooie en eenvoudige takenlijst","notifications_desktop_enable_heading":"Meldingen op het bureaublad toestaan?","notifications_no_notifications":"Geen activiteit","notifications_no_notifications_message":"Uitnodigingen voor gedeelde lijsten & andere activiteiten worden hier weergegeven.","notifications_event_accept":"Accepteer","notifications_event_accepted":"Geaccepteerd","web_upgrade_ie9_not_supported":"Wunderlist ondersteund niet Internet Explorer 9. Waardeer op naar $ of $ voor een beter resultaat.","web_upgrade_to_chrome":"Crome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Gebruikt u een apparaat met touchscreen? Dan kunt u een geoptimaliseerde touch interface aanzetten in uw accountinstellingen.","web_setting_enable_touch_for_$":"Zet touch aan voor: $","web_settings_text_refresh_may_be_required":"Het kan nodig moeten zijn om te vernieuwen","rate_label":"Beoordeel Wunderlist","rate_app_heading":"Beoordeel Wunderlist","rate_app_message_web_chrome":"Bedankt voor het gebruiken van Wunderlist. We zouden graag horen wat u ervan denkt! Laat het ons weten door Wunderlist een ★★★★★ waardering of beoordeling in de Chrome Web Store te geven. ","rate_app_button_later":"Herinner me later","rate_app_button_no":"Nee, bedankt","rate_app_button_yes":"Beoordeel Wunderlist nu","placeholder_add_due_today_to_inbox":"Voeg een taak voor vandaag toe aan \"Postvak in\"","placeholder_add_list":"Nieuwe lijst toevoegen...","placeholder_add_subtask":"Een subtaak toevoegen.","placeholder_add_starred_to_inbox":"Voeg een belangrijke taak toe aan \"Postvak in\"","placeholder_add_task_to_$":"Een taak toevoegen in \"$\"...","placeholder_add_to_inbox":"Voeg een belangrijke taak toe aan uw Postvak in","placeholder_new_list":"Nieuwe lijst","placeholder_remind_me":"Herinner mij","placeholder_search":"Zoeken...","placeholder_sharing_search":"Naam of e-mailadres...","placeholder_set_due_date":"Geef vervaldatum in","browser_outdated_heading":"Euhh, het lijkt erop dat uw web browser niet de meest recente versie is.","browser_outdated_update":"Gelieve uw browser bij te werken","browser_outdated_explanation":"Wunderlist maakt gebruik van de laatste technologieën. Om Wunderlist te gebruiken download u de meest recente versie van uw browser","prenamed_list_movies":"Te kijken films","prenamed_list_private":"Privé","prenamed_list_shopping":"Winkelen","prenamed_list_wishlist":"Verlanglijst","prenamed_list_work":"Werk","prenamed_list_read_later":"Lees later","settings_account_change_email":"Wijzig e-mail...","settings_account_change_password":"Wijzig wachtwoord...","settings_account_delete_confirmation":"Typ :Ik weet het zeker\"","settings_account_delete_confirmation_text":"Ik weet het zeker","settings_account_drop_image":"Afbeelding hier plaatsen","settings_account_connect_facebook_account":"Uw Wunderlist account verbinden met Facebook maakt lijsten delen met uw vrienden eenvoudig, snel en gemakkelijk.","settings_general_12_hour":"12 uur","settings_general_24_hour":"24 uur","settings_general_confirm_deletion":"Bevestig verwijderen","settings_general_create_new_tasks":"Nieuwe taken toevoegen","settings_general_date_format":"Datum weergave","settings_general_language":"Taal","settings_general_start_of_week":"Start van de week","settings_general_start_of_week_sunday":"Zondag","settings_general_start_of_week_saturday":"Zaterdag","settings_general_start_of_week_monday":"Maandag","settings_general_sound_task_completion":"Speel geluid af wanneer taak voltooid is","settings_general_sound_new_notifications":"Geluid voor meldingen inschakelen","settings_general_print_done_tasks":"Afdruk voltooide taken ","settings_general_tasks_bottom":"Onderaan de lijst","settings_general_tasks_top":"Bovenaan de lijst","settings_general_time_format":"Tijdformaat","settings_heading_team":"Zakelijk","settings_heading_about":"Over","settings_heading_account":"Account","settings_heading_general":"Algemeen","settings_heading_notification":"Berichten","settings_heading_shortcuts":"Sneltoets","settings_heading_sidebar":"Zijbalk","settings_imprint":"Over ons","settings_visit_website":"Bezoek Ons","settings_get_help":"Hulp Vragen","settings_notifications_notify_me_of_important_events_mobile":"Houd mij op de hoogte van belangrijke gebeurtenissen via:","settings_notifications_notify_me_on_text":"We zullen je informeren van bepaalde gebeurtenissen, zoals het accepteren van een uitnodiging voor een gedeelde lijst of als iemand taken heeft voltooid of toegevoegd in een van jouw gedeelde lijsten.","settings_sidebar_smart_lists_title":"Toon deze slimme lijsten in de zijbalk:","settings_sidebar_smart_lists_auto":"Automatisch","settings_sidebar_smart_lists_hidden":"Verborgen","settings_sidebar_smart_lists_visible":"Zichtbaar","settings_sync_full":"Synchroniseer nu","settings_account_account_backup":"Account backup","settings_account_restore_backup":"Importeren backup","settings_account_backup_description":"Back-upgegevens waaronder al uw Lijsten, Taken, Subtaken, Notities en Herinneringen. Let op: dit betreft niet de Lijsten die met uw werden gedeeld, Bestanden, Reacties, onvangers van Gedeelde Lijsten en eerdere applicatie-instellingen.","settings_account_data_is_being_processed":"Hou vol! Uw back-updata wordt verwerkt. We sturen u een e-mail als alles klaar is.","settings_account_change_password_error":"Er was een probleem met het bijwerken van uw wachtwoord. Probeer het opnieuw.","settings_account_click_to_download_backup":"Klik om te downloaden","settings_account_create_backup":"Creëer Backup","settings_account_current_password":"Huidig wachtwoord","settings_account_delete_account":"Verwijder account","settings_account_delete_account_confirm":"Wilt u echt uw account verwijderen?","settings_account_delete_account_confirm_text":"Verwijderen van uw account zal al uw lijsten en taken permanent verwijderen en kan niet ongedaan gemaakt worden.","settings_account_fetching_data":"Ophalen data...","settings_account_new_password":"Nieuw wachtwoord","settings_account_repeat_new_password":"Herhaal nieuw wachtwoord","settings_account_right_click_and_save_as":"Rechts-klik en bewaar","settings_third_party_libraries":"Licenties","settings_background_credits":"Achtergrond gemaakt door","settings_notifications_email_enabled":"E-mail Meldingen","settings_notifications_desktop_enabled":"Bureaublad Meldingen","settings_notifications_push_enabled":"Automatische Meldingen (Push)","settings_privacy_policy":"Privacybeleid","settings_shortcuts_arrow_keys":"Pijltoetsen","settings_shortcuts_delete_item":"Verwijder de geselecteerde lijst of taak","settings_shortcuts_mark_done":"Markeer geselecteerde taak als 'Voltooid'","settings_shortcuts_mark_starred":"Markeer geselecteerde taak als 'Belangrijk'","settings_shortcuts_new_list":"Nieuwe lijst toevoegen","settings_shortcuts_new_task":"Een nieuwe taak toevoegen","settings_shortcuts_open_all_smart_list":"Open slimme lijst 'Alle'","settings_shortcuts_open_assigned_smart_list":"Open \"Aan mij toegewezen\" slimme lijst","settings_shortcuts_open_conversations_smart_list":"Open slimme lijst 'Conversaties'","settings_shortcuts_open_done_smart_list":"Open slimme lijst 'Voltooid'","settings_shortcuts_open_inbox":"Open postvak in","settings_shortcuts_open_preferences":"Open Voorkeuren","settings_shortcuts_open_search":"Zoek","settings_shortcuts_open_starred_smart_list":"Open slimme lijst 'Belangrijk'","settings_shortcuts_open_today_smart_list":"Open slimme lijst 'Vandaag'","settings_shortcuts_open_week_smart_list":"Open slimme lijst 'Week'","settings_shortcuts_reset":"Standaard instellingen herstellen","settings_shortcuts_select_all_tasks":"Alle taken selecteren","settings_shortcuts_show_more":"Toon meer","settings_shortcuts_hide":"Verberg","settings_shortcuts_show_notifications":"Toon activiteiten centrum","settings_shortcuts_step_through_list":"Navigeer door de lijsten","settings_shortcuts_step_through_task":"Navigeer door de taken","settings_terms_of_use":"Algemene voorwaarden","settings_account_header_free":"Gratis","settings_account_header_unregistered":"Aanmelden","settings_account_header_account_$":"$ account","settings_account_pro_description":"Voeg commentaar en bestanden toe aan je taken en wijs ze aan je collega's toe. Samenwerking in teams was nog nooit zo eenvoudig!","settings_account_register_wunderlist_description":"Meld u aan bij Wunderlist om uw lijsten te synchroniseren over al uw apparaten.","settings_manage_subscription_button":"Beheer inschrijving","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Jippie, je bent een $!","settings_account_header_pro_description":"Wunderlist Pro is de beste manier om uw projecten op te volgen. Nodig uw vrienden en collega's uit om samen te werken en laat het gebeuren!","settings_upgrade_to_pro_label":"Upgrade naar $","settings_label_pro_account":"Pro Account","settings_label_purchased_from_$":"Aangeschaft bij: $","settings_label_purchased_from_$_by_$":"Aangeschaft in $1 door: $2","settings_label_expires_in_$":"Verloopt in $","setting_label_next_billing_date":"Volgende betalingsdatum:","setting_label_cancel_subscription":"Beëindig abonnement","setting_heading_cancel_subscription":"Wil je echt je Wunderlist Pro abonnement beëindigen?","setting_description_cancel_subscription":"Je hebt altijd toegang tot alle gegevens, maar als je abbonement afloopt, kun je alleen nog maar de standard Winderlist functies gebruiken.","setting_label_cancel_subscription_success":"Uw abonnement is met succes beëindigd.","settings_label_invoices":"Facturen","settings_label_become_a_pro":"Word een Pro","settings_payment_info_expires_$_relative":"Verloopt $","settings_payment_info_expires_$_absolute":"Verloopt in $1 dagen: $2","settings_manage_subscription_error":"Sorry, er ging iets mis tijdens het beheren van uw abonnement.","group_billing_packages_title":"Pakketten voor elk bedrijf","group_billing_packages_text":"Wunderlist voor bedrijven biedt u alle functies die u nodig hebt om slimmer te werken als een team tegen een betaalbare prijs. Selecteer nu eenvoudig het juiste plan voor uw bedrijf.","group_billing_plan_table_team_size":"Teamgrootte","group_billing_plan_table_price":"Prijs","group_billing_plan_table_package_name_$":"$ Leden","group_billing_buy_button_label":"Koop","group_billing_$_off":"$ uit","group_billing_larger_team_$":"Heb je een groter team? $","group_billing_contact_us":"Neem contact met ons op!","group_billing_downgrade_error_$_$":"In order to switch to the $1 Members plan, you must remove $2 teammate(s) from the account. ","group_billing_manage_team":"Klik hier om je team te beheren","group_billing_button_label_manage":"Beheer","group_billing_team_plan_title":"Uw Wunderlist Pro-pakket","group_billing_team_plan_text":"Wunderlist Pro groeit samen met uw team! Het toevoegen van leden is super eenvoudig, vul gewoon hieronder hun e-mailadressen in. Het is zo simpel of ze een Wunderlist gebruiker zijn of niet.","group_billing_upgrade_button_label":"Pakket Aanpassen","group_billing_upgrade_plan_button_label":"Upgrade","group_billing_Downgrade_plan_button_label":"Degradeer","group_billing_view_plans_button_label":"Pakketten Bekijken","group_billing_manage_team_header":"Beheer teamleden","group_billing_email_address_input_placeholder":"E-mailadres","group_billing_manage_count_$_of_$":"$1 van $2","group_billing_cancel_team_plan":"Annuleer uw Wunderlist Pro-pakket","group_billing_search_coachmark":"To add members, simply enter the email addresses of your teammates, and they'll be added to your Pro plan.","group_billing_cancel_header":"Weet u zeker dat u uw teams Wunderlist Pro-pakket wilt opzeggen?","group_billing_change_plan_confirmation_$_$_$":"Changing plans is easy. If you go for $1 Members plan now, you’ll be billed $2 in the next billing cycle starting on $3. Are you sure you want to do this now?","group_billing_cancel_text":"Your Pro subscription will run until the end of month, and you won’t be billed again. While you’ll still retain the ability to view any Pro features like files attached to tasks, you won’t be able to make any changes to them.","error_goup_billing_user_already_pro":"Het lijkt erop dat deze persoon al een Wunderlist Pro-account heeft. Geef het Pro-cadeau aan een ander teamlid!","error_group_billing_wait_subscription_runs_out":"U zult moeten wachten totdat uw huidige abonnement verlopen is voordat u het opnieuw kunt kopen. Verloopt op: $.","button_label_buy_wunderlist_for_business":"Ga naar Wunderlist voor Bedrijven","benefit_payment_service_unavailable":"Betalingsservice niet toegankelijk","benefit_name":"Wunderlist","benefit_header_$":"Word een $","benefit_header_description":"Samenwerking in teams en zaken was nog nooit zo gemakkelijk! Hier zijn vier goede redenen om te kiezen voor Wunderlist Pro.","benefit_button_buy_monthly":"Maandelijks","benefit_assign_tasks_title":"Toewijzen taken","benefit_assign_tasks_description":"Gemakkelijk delegeren en opvolgen van de status van taken tussen collega's en vrienden!","benefit_unlimited_subtasks_title":"Onbeperkte subtaken","benefit_unlimited_subtasks_decription":"Verdeel grote taken in kleine overzichtelijke stappen om de productiviteit te verbeteren zonder beperkingen.","benefit_comments_title":"Opmerkingen","benefit_comments_description":"Ga een conversatie aan met uw teamleden over een van uw taken. Laat feedback achter, stel een vraag of geef extra inzicht.","benefit_backgrounds_update_$":"Om de nieuwe achtergronden te kunnen gebruiken, waardeer op naar een $","benefit_additional_backgrounds_title":"Mooie nieuwe achtergronden","benefit_additional_backgrounds_description":"Ondek 8 nieuwe mooie achtergronden om Wunderlist aan te passen precies zoals u het wilt!","benefit_files_title":"Bestanden","benefit_files_description":"Voeg bijlagen toe aan je taken en deel ze met je collega's.","benefit_coming_soon":"Binnenkort verwacht","benefit_assign_become_pro":"Wijs taken toe aan uw collega's met Wunderlist.","benefit_label_accept_terms":"Bij accepteren van een Wunderlist Pro abonnement, dan ga je akkoord met de $1 en $2.","benefit_label_need_more_subtasks":"Meer behoefte aan subtaken?","sharing_connect_facebook_sharing":"Koppel uw Wunderlist account aan Facebook om gemakkelijk uw vrienden uit te nodigen.","sharing_facebook_apprequest_message_$user_$list":"\"$1\" zou  de lijst \"$2\" met u willen delen","sharing_invite":"Iemand uitnodigen","sharing_invite_friends":"Nodig vrienden uit","sharing_inviting_requires_account":"Meldt u aan om uw vrienden en collega's voor uw lijsten uit te nodigen .","sharing_leave_action":"Weet u zeker dat u deze lijst wilt verlaten?","sharing_leave_button":"Verlaat gedeelde lijst","sharing_list_members":"Lijst leden","sharing_list_owner":"Eigenaar","sharing_list_pending_member":"In afwachting","sharing_tab_recents":"Recente","sharing_shared_with_you_by":"Gedeeld met u door","smart_list_assigned_to_me":"Aan mij toegewezen","smart_list_conversations":"Gesprekken","smart_list_all":"Alle","smart_list_completed":"Voltooid","smart_list_inbox":"Postvak in","smart_list_starred":"Belangrijk","smart_list_today":"Vandaag","smart_list_week":"Week","label_tell_friends":"Vertel het uw vrienden.","social_sharing_heading":"Vertel het je vrienden in de sociale media!","social_sharing_dialog_headline":"Houd u van Wunderlist?","social_sharing_dialog_danke":"Dankjewel!","social_sharing_button_later":"Straks","social_sharing_button_no_thanks":"Nee, bedankt","social_sharing_button_facebook":"Deel","social_sharing_button_follow_us":"Volg ons","social_sharing_button_like_us":"Vind ons leuk","social_sharing_heading_thanks":"Zorg dat u ons volgt voor het laatste Wunderlist nieuws.","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"Ik gebruik Wunderlist, mijn fraaie en simpele to-do lijst. Krijg het nu gratis op www.wunderlist.com","twitter_sharing_placeholder":"Ik gebruik @Wunderlist, mijn fraaie en simpele to-do lijst. Krijg het nu gratis op www.wunderlist.nl","tutorial_welcome_notes_title":"Notities","tutorial_welcome_notes_text":"Afneembare notities staan u toe binnen of buiten Wunderlist te werken.","tutorial_welcome_notifications_title":"Activiteiten centrum","tutorial_welcome_notifications_text":"Pas de manier aan waarop u wilt worden herinnerd. Kies om uitnodigingen en updates van uw gedeelde lijsten te ontvangen via e-mail en bureaubladmeldingen of bekijk alles in het activiteiten centrum.","tutorial_welcome_sharing_title":"Nodig vrienden uit","tutorial_welcome_sharing_text":"Het is nu nog gemakkelijker om uw vrienden en collega's uit te nodigen om een helpende hand te bieden.","tutorial_welcome_subtasks_title":"Terugkerende taken, herinneringen en subtaken","tutorial_welcome_subtasks_text":"Wunderlist heeft nu een gloednieuwe detail weergave waarmee u terugkerende taken, herinneringen en subtaken eenvoudig kan toevoegen.","tutorial_welcome_user_title":"Het betreft allemaal jou!","tutorial_welcome_user_text":"Uw accountinstellingen wijzigen, de status van synchronisatie controleren en uw achtergrond aanpassen.","tutorial_welcome_newsletter_subscribe":"Meld belangrijke updates en nieuwe mogelijkheden via e-mail","tutorial_feature_pro_title":"Wunderlist Pro functie","share_list_email_signature":"Verzonden met Wunderlist - Mijn fraaie en simpele to-do lijst\\nHet is gratis voor iPhone, iPad, Android, Mac, Windows PC en web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ niet-gesynchroniseerde taak","userbar_$_unsynced_item_plural":"$ niet-gesynchroniseerde taken","userbar_account_settings":"Account instellingen","userbar_change_background":"Wijzig achtergrond","userbar_last_synced_$":"Laatst gesynchroniseerd $","userbar_no_internet_connection":"Offline","userbar_preferences":"Instellingen","userbar_sync_in_progress":"Synchroniseren...","userbar_user_name_for_unregistered_mode":"Meldt u aan om te synchroniseren","whatsnew_title":"Wat is nieuw","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Reacties","whatsnew_label_voice":"Spraakinvoer","whatsnew_label_groupbilling":"Teamprijzen","whatsnew_copy_comments":"Keep all the conversations about your to-dos in one place with Comments in Wunderlist Pro. Leave feedback, ask a question or add extra insight to any of your to-dos to greatly improve communication within your team.","whatsnew_copy_pro_accounts":"Add Comments, Assign to-dos, add Files and create Unlimited Subtasks with Wunderlist Pro to accomplish more, together.","whatsnew_copy_voice":"Klik op het microfoonicoon om uw to-do's te dicteren of een gesproken notitie op te nemen en als bestand te gebruiken.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Meld aan om Wunderlist Pro te proberen en een bestand toe te voegen.","label_add_new_file":"Bestand toevoegen...","file_uploaded_unsuccessfully":"Uploaden van $ mislukt. Probeer opnieuw a.u.b.","file_uploaded_failed":"Upload mislukt. Probeer het nogmaals.","file_uploaded_failed_deleted":"Uploaden van $ mislukt, omdat het bestand is verwijderd van uw harde schijf.","label_are_you_sure_permanently_delete_$_file":"Weet u zeker dat u het bestand \"$\" definitief wilt verwijderen uit Wunderlist?","upload_file_was_not_synced_yet":"Synchroniseer a.u.b.","upload_file_not_synced_yet":"Niet gesynchroniseerd","placeholder_add_comments":"Opmerking toevoegen...","placeholder_reply":"Antwoorden...","button_label_go_pro_to_comment":"Word Pro om te reageren","comment_request_failed":"Sorry, we konden Reacties niet laden. Probeer het opnieuw.","comment_load_earlier":"Meer Reacties bekijken","coachmark_no_current_comments":"Nog geen reacties.\\nBegin de conversatie hier.","coachmark_comments_not_available":"Sorry, we couldn’t load the previous comments. Please try again in a few moments.","notification_$_commented_on_$":"$1 reageerde op $2","notification_$_and_$_commented_on_$":"$1 en $2 reageerden op $3","notification_$_and_$_others_commented_on_$":"$1 en $2 anderen reageerden op $3","comments_requires_account":"Meld aan om Wunderlist Pro te proberen en een reactie te plaatsen.","non_pro_trial_free_limit_reached":"U hebt uw gratis limiet bereikt!","non_pro_trial_write_next_comment_$":"U kunt een $ nieuwe reactie schrijven.","non_pro_trial_upload_next_file_$":"You’ll be able to add another File $.","non_pro_trial_assign_next_to_do_$":"You can Assign another to-do $.","button_signup_or_login":"Meld aan of Log in","button_it_is_completely_free":"Het is volledig gratis","label_free_download_for_platforms":"Gratis beschikbaar voor iPhone, iPad, Android, Windows en Mac","label_wunderlist_to_get_things_done":"Meer dan 5 miljoen mensen gebruiken Wunderlist om dingen te voltooien.","label_people_who_use_wunderlist":"Bekijk wie Wunderlist al gebruikt:","label_wunderlist_uses":"Of je nu je zaken organiseert, je boodschappenlijstje deelt met je partner of overzicht wilt houden over je dagelijks leven, Wunderlist is de beste takenlijst voor jou, je team of je familie.","label_install_browser_extension":"Installeer de browser extension","label_install_chrome_browser_extension":"Installeer de Chrome browser extensie","label_newsletter_signup":"Meldt u aan voor onze nieuwsbrief","label_know_upcoming_features":"Wees bij de eersten op de hoogte van te verwachten nieuwigheden","label_learn_more_about_wunderlist":"Leer meer over Wunderlist","label_learn_more":"Leer meer...","label_your_email_address":"Uw e-mailadres","button_subscribe_to_newsletter":"Abonneren","button_sending_subscribe_to_newsletter":"Versturen...","iyf4_usermenu_label":"Krijg Wunderlist Pro gratis","iyf4_notification_label":"Krijg Wunderlist Pro tot 12 maanden gratis door uw vrienden uit te nodigen!","iyf4_notification_button_label_var_a":"Start met Uitnodigen","iyf4_notification_button_label_var_b":"Nodig vrienden uit","iyf4_notification_button_label_var_c":"Krijg Wunderlist Pro gratis","iyf4_notification_button_label_var_d":"Deel Wunderlist Pro","iyf4_dialog_invite_headline_$":"Krijg Wunderlist Pro tot $ gratis door uw vrienden uit te nodigen!","iyf4_dialog_invite_headline_incentive":"12 maanden gratis","iyf4_dialog_invite_incentive_$":"$ Wunderlist, we'll give you both 1 month of Wunderlist Pro for free (up to a limit of 12 months)","iyf4_dialog_invite_incentive_terms":"Voor iedere vriend die deelneemt","iyf4_dialog_tweet":"I love organizing my life with Wunderlist. Get a month of Wunderlist Pro for free here:","iyf_notification_label":"Refer Wunderlist to your friends and get Pro for free up to 12 months!","iyf_notification_button_label":"Word Pro!","iyf_dialog_step1_headline":"Krijg een gratis Pro-account","iyf_dialog_step1_subheadline":"in 3 gemakkelijke stappen","iyf_dialog_step1_instruction1_headline":"Start met vrienden uitnodigen","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter of E-mail","iyf_dialog_step1_instruction2_headline":"Uw vrienden melden zich aan","iyf_dialog_step1_instruction2_subheadline":"leun achterover terwijl zij Wunderlist gaan gebruiken","iyf_dialog_step1_instruction3_headline":"Geniet van uw gratis Pro-account","iyf_dialog_step1_instruction3_subheadline":"1 maand voor iedere vriend die deelneemt","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 maand voor iedere $vriend(en) die deelnemen","iyf_dialog_step1_next_button":"Start met uitnodigen","iyf_dialog_step2_subheadline":"om uw gratis Pro-account te verkrijgen","iyf_dialog_step2_divider_label":"Deel deze link","iyf_dialog_share_on_facebook":"Deel via Facebook","iyf_dialog_post_on_twitter":"Tweet op Twitter","iyf_dialog_email_placeholder":"Voer een e-mailadres in...","iyf_dialog_more_placeholder":"Andere toevoegen...","iyf_dialog_step3_headline":"Bedankt voor het delen","iyf_dialog_step3_subheadline":"Leun achterover terwijl uw vrienden deelnemen","iyf_dialog_step3_success_headline":"Uitnodigingen succesvol verzonden","iyf_dialog_step3_success_subheadline":"We laten het u weten zodra uw Pro-account gereed is.","iyf_dialog_step3_invite_more":"Meer mensen uitnodigen","meta_title":"Wunderlist 2: Uw handige en eenvoudige online takenlijst app","meta_description":"Meer dan 5 miljoen mensen gebruiken Wunderlist voor het beheren van taken, takenlijsten en om dingen voor elkaar te krijgen. Wunderlist is de beste takenlijst voor u, uw team of uw familie.","meta_keywords":"6wunderkinder, productiviteit, samenwerken, taken management, takenverdelen, to-do, todo, lijst, taken, takenlijst, gtd, organiseren, plannen, boodschappenlijst, herhalingen, subtaken, slimme lijsten, kruidenierslijst, filmlijst, gedeelde lijst","enable_desktop_notifications_text":"Klik op 'Bevestigen' en vervolgens 'Toestaan' in uw browser om bureaublad meldingen toe te staan.","notification_add_to_browser":"Uw Wunderlist in één klik openen. Voeg de Wunderlist Web App toe aan uw Browser.","notification_add_extension_to_browser":"Sla rechtstreeks uw favoriete website informatie op in Wunderlist. Installeer nu de Add to Wunderlist Chrome extensie.","button_add_to_chrome":"Voeg toe aan Chrome","button_add_to_store_added":"Toegevoegd","aria_activity_center_hint":"Activiteitencentrum. Druk op escape om te sluiten.","aria_exit_search":"Zoeken Sluiten","aria_search":"Zoeken","aria_sort_list":"Lijst Sorteren","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"Gebruikersmenu. Druk op escape om te sluiten.","aria_assign_to_$":"Wijs toe aan $","momentjs_months":"Januari_Februari_Maart_April_Mei_Juni_Juli_Augustus_September_Oktober_November_December","momentjs_monthsShort":"Jan_Feb_Mrt_Apr_Mei_Jun_Jul_Aug_Sep_Okt_Nov_Dec","momentjs_weekdays":"Zondag_Maandag_Dinsdag_Woensdag_Donderdag_Vrijdag_Zaterdag","momentjs_weekdaysShort":"Zo_Ma_Di_Wo_Do_Vr_Za","momentjs_weekdaysMin":"Zo_Ma_Di_Wo_Do_Vr_Za","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Vandaag om] LT","momentjs_calendar_nextDay":"[Morgen om] LT","momentjs_calendar_nextWeek":"dddd [om] LT","momentjs_calendar_lastDay":"[Gisteren om] LT","momentjs_calendar_lastWeek":"[laatste] dddd [om] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"in %s","momentjs_relativeTime_past":"%s geleden","momentjs_relativeTime_s":"enkele seconden","momentjs_relativeTime_m":"een minuut","momentjs_relativeTime_mm":"%d minuten","momentjs_relativeTime_h":"een uur","momentjs_relativeTime_hh":"%d uur","momentjs_relativeTime_d":"een dag","momentjs_relativeTime_dd":"%d dagen","momentjs_relativeTime_M":"een maand","momentjs_relativeTime_MM":"%d maanden","momentjs_relativeTime_y":"een jaar","momentjs_relativeTime_yy":"%d jaren"}
};
});
define('languages/norwegian-bokmal',[],function() {
return {
'name': 'norwegian-bokmal',
'data': {"actionbar_print_selected_item":"Skriv ut valgt element","actionbar_print_$_selected_items_plural":"Skriv ut $ valgte elementer","actionbar_email_selected_item":"Send valgt element på e-post","actionbar_email_$_selected_items_plural":"Send $ valgte elementer på e-post","actionbar_sort_alphabetically":"Sorter alfabetisk","actionbar_sort_due_date":"Sorter på forfallsdato","actionbar_sort_assignee":"Sorter etter oppgavemottaker","api_error_account_already_exists":"Det finnes allerede en konto med denne e-postadressen.","api_error_connection_error":"Oops, det virker som det var et problem med å nå serveren. Vennligst prøv igjen.","api_error_general_error":"Oops, serveren kan ikke nås for øyeblikket. Vennligst prøv igjen.","api_error_incorrect_login":"Feil i e-postadresse eller passord.","api_error_incorrect_password":"Passordet er feil.","api_error_service_down":"En viktig del av WunderAPI-tjenesten er nede.","api_error_unknown":"En uventet feil har oppstått.","api_error_validation_error_unable_to_signup":"Vi klarte ikke å dele med e-postadressen som ble oppgitt.","api_error_not_a_beta_user":"Du har ikke tilgang til Wunderlist beta.","button_back":"Tilbake","button_cancel":"Avbryt","button_confirm":"Bekreft","button_download":"Last ned","button_change":"Endre","button_choose":"Velg","button_connect":"Koble til","button_connect_facebook":"Koble til Facebook","button_continue":"Fortsett","button_delete":"Slett","button_disconnect":"Koble fra","button_dismiss":"Avvis","button_done":"Ferdig","button_edit":"Redigér","button_get_started":"Kom i gang","button_go_back":"Gå tilbake","button_go_back_sentence":"Gå tilbake.","button_learn_more":"Lær mer","button_go_back_to_login":"Gå tilbake til innlogging","button_go_to_web_app":"Gå til nettversjon","button_join_now":"Bli med nå","button_log_in":"Logg inn","button_log_in_with_$":"Log In With $","button_log_out":"Logg ut","button_log_in_facebook":"Logg inn med Facebook","button_next":"Neste","button_no":"Nei","button_no_due_date":"Ingen forfallsdato","button_ok":"OK","button_remove_due_date":"Fjern forfallsdato","button_remove_reminder":"Fjern påminnelse","button_email_list":"Send listen på e-post","button_print_list":"Skriv ut listen","button_reset_password":"Tilbakestill passord","button_retry":"Prøv igjen","button_save":"Lagre","button_send":"Send","button_sign_up":"Registrer","button_sign_up_with_$":"Sign Up With $","button_sign_up_for_free":"Registrér deg gratis","button_sign_up_facebook":"Registrer deg med Facebook","button_support_center":"Brukerstøttesenter","button_subscribe":"Stilig, ja takk!","button_try_again":"Prøv igjen","button_try_wunderlist":"Prøv Wunderlist","button_yes":"Ja","coachmark_all_list_empty":"Du har ikke lagt til noen elementer ennå. Kom igjen, legg til noe. ","coachmark_completed_list_empty":"Du har ikke ferdigstilt noen elementer ennå. Kom igjen, kryss noen elementer av listene dine!","coachmark_no_search_results":"Ingen søketreff","coachmark_sharing_invite_friends_heading":"Invitér venner","coachmark_sharing_invite_friends_text_$":"Dine venner vil bli i stand til å lage, fjerne og krysse av elementer fra listen “$”.","coachmark_sharing_recent_no_contacts_heading":"Ingen nylig brukte kontakter","coachmark_sharing_recent_no_contacts_text_$":"Skriv inn en e-postadresse eller søk blant dine kontakter. Straks sin venn er lagt til, vil han/hun kunne opprette, slette eller krysse av elementer i listen “$”.","coachmark_assigned_to_me_list_empty":"Det er ikke noe som er tildelt deg","coachmark_conversations_list_empty":"Det pågår ingen samtaler nå.","coachmark_starred_list_empty":"Du har ingen stjernemerkede elementer","coachmark_today_list_empty":"Gratulerer! Ingen forfallsfrister er på overtid eller går ut i dag.","coachmark_week_list_empty":"På ferie? Du har ingen elementer til forfall de neste syv dagene.","error_list_not_found":"Listen du leter etter, ble ikke funnet","error_share_not_created":"Det oppstod en feil i forsøket på å dele listen din. Vennligst prøv igjen.","error_task_not_found":"Elementet du leter etter ble ikke funnet","error_page_not_found":"Siden ble ikke funnet","error_title_not_found":"Ikke funnet","label_are_you_sure_permanently_delete_item":"Er du sikker på at du vil slette dette elementet permanent?","label_are_you_sure_permanently_delete_item_plural":"Er du sikker på at du vil slette disse elementene permanent?","label_activity_center":"Aktivitetssenter","label_are_you_sure_permanently_delete_$_list":"Er du sikker på at du vil fjerne listen “$” permanent?","label_are_you_sure_permanently_delete_$_task":"Er du sikker på at du vil slette elementet “$” permanent?","label_are_you_sure_permanently_delete_task_plural":"Er du sikker på at du vil slette disse elementene permanent?","label_are_you_sure_permanently_delete_$_subtask":"Er du sikker på at du ønsker å slette underoppgaven “$” permanent?","label_cant_undo":"Du kan ikke gjøre om denne handlingen.","label_completed_tasks_heading":"1 fullført element","label_$_completed_tasks_heading_plural":"$ fullførte elementer","label_connecting":"Kobler til...","label_minisite_description_line_1":"Hold oversikt over alt du har lyst til å gjøre.","label_minisite_description_line_2":"Wunderlist er tilgjengelig gratis på alle de store plattformene.","label_minisite_share_deleted_or_no_access":"Det ser ut til at dette er slettet eller at du ikke har tilgang lenger.","label_minisite_contact_sender_for_info":"Vennligst ta kontakt med personen som delta denne listen med deg, for mer informasjon.","label_minisite_$_invited_you_to_the_list_$":"$1 inviterte deg til listen $2","label_minisite_empty_list_$":"Denne listen er tom for øyeblikket, så hjelp dem å komme i gang. Bare klikk på Registrer-knappen over, og begynn å legge elementer til listen $.","label_day_0":"SØN","label_day_1":"MAN","label_day_2":"TIR","label_day_3":"ONS","label_day_4":"TOR","label_day_5":"FRE","label_day_6":"LØR","label_delete_file":"Slett fil","label_delete_list":"Slett liste","label_delete_task":"Slett element","label_delete_task_plural":"Slett elementer","label_delete_subtask":"Slett underoppgave","label_due_$":"Forfall $","label_due_on":"Forfall $","label_due_date":"Forfallsdato","label_email":"Epost","label_every":"hver","label_loading":"Laster","label_logging_out":"Logger ut...","label_name":"Navn","label_newsletter":"Wunderlist nyhetsbrev","label_none":"Ingen","label_notification":"Varsel","label_oops":"Oops!","label_or":"eller","label_password":"Passord","label_relative_date_today":"I dag","label_relative_date_today_with_date":"I dag, $","label_relative_date_today_mid_sentence":"i dag","label_relative_date_tomorrow":"I morgen","label_relative_date_tomorrow_with_date":"I morgen, $","label_relative_date_tomorrow_mid_sentence":"i morgen","label_relative_date_yesterday":"I går","label_remind_me_at_$":"Gi meg påminnelse $","label_reminder":"Påminnelse","label_reminder_message_$":"Bare en vennlig påminnelse: $","label_repeat_every_day":"Gjenta hver dag","label_repeat_every_week":"Gjenta hver uke","label_repeat_every_month":"Gjenta hver måned","label_repeat_every_year":"Gjenta hvert år","label_repeat_custom":"Tilpass...","label_repeat_day":"Hver dag","label_repeat_day_$_plural":"Hver $ dag","label_repeat_month":"Hver måned","label_repeat_month_$_plural":"Hver $ måned","label_repeat_week":"Hver uke","label_repeat_week_$_plural":"Hver $ uke","label_repeat_never":"Aldri gjenta","label_repeat_year":"Hvert år","label_repeat_year_$_plural":"Hvert $ år","label_reset_password":"Tilbakestill passord","label_rights_reserved":"Med enerett","label_still_fetching_tasks":"Henter fremdeles oppgaver...","label_sync":"Synkronisering","label_time_am":"AM","label_time_day_plural":"dager","label_time_week_plural":"uker","label_time_month_plural":"måneder","label_time_pm":"PM","label_time_year_plural":"år","label_assign_to":"Tildel til","label_unassigned":"Utildelt","label_assign_me":"Meg","label_created_$":"Opprettet $","label_created_by_$":"Opprettet av $","label_created_on_$":"Opprettet den $","label_created_$_by_$":"Opprettet $1 av $2","label_created_by_$_on_$":"Opprettet av $1 den $2","label_completed_$":"Fullført $","label_completed_on_$":"Fullført den $","label_completed_$_by_$":"Fullført $1 av $2","label_completed_by_$_on_$":"Fullført av $1 den $2","login_add_photo_hint":"Gjør Wunderlist-kontoen din personlig ved å laste opp et bilde.","login_already_have_account":"Har du allerede en konto?","login_email_not_valid":"Oppgi en gyldig epost-adresse.","login_empty_name":"Oppgi ditt navn.","login_empty_password":"Oppgi et passord.","login_password_not_valid":"Oppgi et gyldig passord","login_empty_email":"Oppgi epost-adresse.","login_enter_name":"Hvem er du?","login_enter_password":"Du er nesten ferdig","login_enter_password_hint":"Velg et passord for å avslutte opprettelsen av din Wunderlist-konto.","login_forgot_password":"Glemt passord","login_forgot_password_heading":"Glemt noe?","login_forgot_password_text":"Oppgi epost-adressen du registrerte deg med, så sender vi deg en lenke for å sette nytt passord.","login_no_account_yet":"Har du ikke en konto?","login_password_changed":"Passord oppdatert","login_password_not_match":"Passordene du oppga var ikke like.","login_password_reset_email_has_been_sent":"Vær vennlig å sjekke din epost for informasjon om nytt passord.","login_reset_password_heading":"Det er på tide å lage ditt nye passord.","login_reset_password_success":"Bare klikk på knappen under, så er alt klart for å logge tilbake inn i din Wunderlist.","login_reset_password_success_heading":"Hurra! Passordendringen din var vellykket!","login_password_too_short":"Passordet må inneholde minst 5 bokstaver.","login_sign_up":"Registrer","login_want_to_try_again":"Vil du prøve igjen?","login_accept_terms":"Når du registrerer deg aksepterer du vår $1 og $2.","logout_timeout_title":"Problemer med synkronisering.","logout_timeout_text":"Vi kunne ikke synkronisere dataene dine. Vil du prøve igjen eller bare logge ut?","mobile_tutorial_welcome_to":"Velkommen til","mobile_tutorial_wunderlist_subtitle":"din vakre og enkle gjøremålsliste","notifications_desktop_enable_heading":"Skru på desktop-påminnelser?","notifications_no_notifications":"Ingen aktivitet","notifications_no_notifications_message":"Invitasjoner til delte lister og annen aktivitet dukker opp her.","notifications_event_accept":"Godta","notifications_event_accepted":"Akseptert","web_upgrade_ie9_not_supported":"Wunderlist støtter ikke Internet Explorer 9. Vennligst oppgrader til $ eller $ for en bedre opplevelse.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Det ser ut til at du bruker en enhet med berøringsskjerm. Vil du aktivere et grensesnitt som er tilpasset enheter med berøringsskjermer? Du kan senere endre dette valget i dine kontoinnstillinger.","web_setting_enable_touch_for_$":"Skru på touch for: $","web_settings_text_refresh_may_be_required":"Det kan bli nødvendig å oppfriske","rate_label":"Vurdér Wunderlist","rate_app_heading":"Vurder og omtal Wunderlist","rate_app_message_web_chrome":"Takk for at du bruker Wunderlist. Vi vil veldig gjerne få vite hva du mener! Vær snill og fortell oss det ved å vurdere og omtale Wunderlist i Chrome nettbutikk ★★★★★","rate_app_button_later":"Gi meg påminnelse senere","rate_app_button_no":"Nei takk","rate_app_button_yes":"Vurdér Wunderlist","placeholder_add_due_today_to_inbox":"Legg til et element som forfaller i dag i \"Innboks\"...","placeholder_add_list":"Legg til ny liste","placeholder_add_subtask":"Lag underoppgave","placeholder_add_starred_to_inbox":"Legg til et stjernemerket element i \"Innboks\"","placeholder_add_task_to_$":"Legg element til “$”...","placeholder_add_to_inbox":"Legg til element i \"Innboks\"","placeholder_new_list":"Ny liste","placeholder_remind_me":"Gi meg påminnelse","placeholder_search":"Søk","placeholder_sharing_search":"Navn eller e-postadresse...","placeholder_set_due_date":"Oppgi forfallsdato","browser_outdated_heading":"Oops, det ser ut til at nettleseren din ikke er oppdatert.","browser_outdated_update":"Vennligst oppdater nettleseren din","browser_outdated_explanation":"Wunderlist er laget med den siste og beste teknologien. For å bruke Wunderlist bør du laste ned den siste versjonen av din nettleser","prenamed_list_movies":"Filmer jeg må se","prenamed_list_private":"Privat","prenamed_list_shopping":"Å handle","prenamed_list_wishlist":"Ønskeliste","prenamed_list_work":"Arbeid","prenamed_list_read_later":"Les senere","settings_account_change_email":"Endre epost","settings_account_change_password":"Endre passord","settings_account_delete_confirmation":"Skriv \"Jeg er sikker\"","settings_account_delete_confirmation_text":"Jeg er sikker","settings_account_drop_image":"Dra og slipp bildet hit","settings_account_connect_facebook_account":"Å koble Wunderlist-kontoen din med Facebook-kontoen din, gjør det enkelt, raskt og lett å dele lister med dine venner.","settings_general_12_hour":"12-timers","settings_general_24_hour":"24-timers","settings_general_confirm_deletion":"Bekreft før du sletter elementer.","settings_general_create_new_tasks":"Opprett nye elementer","settings_general_date_format":"Datoformat","settings_general_language":"Språk","settings_general_start_of_week":"Starten av uka","settings_general_start_of_week_sunday":"Søndag","settings_general_start_of_week_saturday":"Lørdag","settings_general_start_of_week_monday":"Mandag","settings_general_sound_task_completion":"Bruk lyd når et element merkes som fullført","settings_general_sound_new_notifications":"Bruk lyd for nye varslinger","settings_general_print_done_tasks":"Skriv ut avsluttede elementer","settings_general_tasks_bottom":"Bunnen av listen","settings_general_tasks_top":"Toppen av listen","settings_general_time_format":"Tidsformat","settings_heading_team":"Business","settings_heading_about":"Om","settings_heading_account":"Brukerkonto","settings_heading_general":"Generelt","settings_heading_notification":"Varslinger","settings_heading_shortcuts":"Snarveier","settings_heading_sidebar":"Sidefelt","settings_imprint":"Om oss","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"Varsle meg om viktige hendelser via:","settings_notifications_notify_me_on_text":"Vi vil sende deg et varsel ved enkelte hendelser, blant annet når noen aksepterer en invitasion til en delt liste, legger til eller fullfører oppgaver i en av dine delte lister og når oppgaver forfaller.","settings_sidebar_smart_lists_title":"Vis disse Smart-listene i sidefeltet","settings_sidebar_smart_lists_auto":"Auto","settings_sidebar_smart_lists_hidden":"Skjult","settings_sidebar_smart_lists_visible":"Synlig","settings_sync_full":"Synkronisér nå","settings_account_account_backup":"Sikkerhetskopi av konto","settings_account_restore_backup":"Import Backup Data","settings_account_backup_description":"Backup data includes all your Lists, Tasks, Subtasks, Notes, and Reminders. Please note it does not include those Lists that were shared with you, Files, Comments, Shared List recipients and previous application settings.","settings_account_data_is_being_processed":"Hold tight! Your backup data is being processed. We will send you an email when everything is complete.","settings_account_change_password_error":"Det oppsto et problem under oppdateringen av passordet ditt. Vennligst prøv igjen.","settings_account_click_to_download_backup":"Klikk for å laste ned","settings_account_create_backup":"Lag sikkerhetskopi","settings_account_current_password":"Nåværende passord","settings_account_delete_account":"Slett brukerkonto","settings_account_delete_account_confirm":"Vil du virkelig slette brukerkontoen din?","settings_account_delete_account_confirm_text":"Sletting av brukerkontoen vil slette alle listene og elementene dine permanent og kan ikke angres.","settings_account_fetching_data":"Henter data …","settings_account_new_password":"Nytt passord","settings_account_repeat_new_password":"Gjenta nytt passord","settings_account_right_click_and_save_as":"Høyreklikk og Lagre","settings_third_party_libraries":"Lisenser","settings_background_credits":"Rettighetshavere for bakgrunner","settings_notifications_email_enabled":"Epost-varsel","settings_notifications_desktop_enabled":"Desktop-varsel","settings_notifications_push_enabled":"Push-varsler","settings_privacy_policy":"Personvern","settings_shortcuts_arrow_keys":"Piltaster","settings_shortcuts_delete_item":"Slett valgt liste eller element","settings_shortcuts_mark_done":"Markér valgte elementer som 'Fullført'","settings_shortcuts_mark_starred":"Markér valgte elementer med en stjerne","settings_shortcuts_new_list":"Legg til ny liste","settings_shortcuts_new_task":"Legg til nytt element","settings_shortcuts_open_all_smart_list":"Åpne «Alle» Smart-liste","settings_shortcuts_open_assigned_smart_list":"Åpne smartlisten 'Tildelt meg'","settings_shortcuts_open_conversations_smart_list":"Åpne Smart-listen 'Samtaler'","settings_shortcuts_open_done_smart_list":"Åpne «Fullført» Smart-liste","settings_shortcuts_open_inbox":"Åpne innboksen","settings_shortcuts_open_preferences":"Åpne Innstillinger","settings_shortcuts_open_search":"Søk","settings_shortcuts_open_starred_smart_list":"Åpne «Stjernemerket» Smart-liste","settings_shortcuts_open_today_smart_list":"Åpne 'I dag' Smart-liste","settings_shortcuts_open_week_smart_list":"Åpne «Uke» Smart-liste","settings_shortcuts_reset":"Tilbakestill til standard","settings_shortcuts_select_all_tasks":"Velg alle elementer","settings_shortcuts_show_more":"Vis mer","settings_shortcuts_hide":"Skjul","settings_shortcuts_show_notifications":"Vis aktivitetssenter","settings_shortcuts_step_through_list":"Gå igjennom lister","settings_shortcuts_step_through_task":"Navigér i elementer","settings_terms_of_use":"Vilkår for bruk","settings_account_header_free":"Gratis","settings_account_header_unregistered":"Registrer deg","settings_account_header_account_$":"$ brukerkonto","settings_account_pro_description":"Legg til kommentarer og filer til gjøremålene dine og tildel dem til dine kolleger. Samarbeid i grupper har aldri vært enklere!","settings_account_register_wunderlist_description":"Registrer deg på Wunderlist for å synkronisere listene dine på tvers av alle enhetene dine.","settings_manage_subscription_button":"Håndter abonnement","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Jadda,  du er en $!","settings_account_header_pro_description":"Wunderlist Pro er den beste måten du kan holde prosjektene dine på skinnene. Inviter dine venner og kolleger til å samarbeide og få ting til å skje!","settings_upgrade_to_pro_label":"Oppgrader til $","settings_label_pro_account":"Pro-konto","settings_label_purchased_from_$":"Kjøpt fra: $","settings_label_purchased_from_$_by_$":"Kjøpt fra $1 av: $2","settings_label_expires_in_$":"Utløper om $","setting_label_next_billing_date":"Neste regningsdato:","setting_label_cancel_subscription":"Avbryt abonnement","setting_heading_cancel_subscription":"Ønsker du virkelig å si opp ditt Wunderlist Pro-abonnement?","setting_description_cancel_subscription":"Du vil fremdeles ha tilgang til alle dataene dine, men når abonnementet ditt utløper, kan du bare bruke standardfunksjonene i Wunderlist.","setting_label_cancel_subscription_success":"Abonnementet ditt ble avbrutt.","settings_label_invoices":"Faktura","settings_label_become_a_pro":"Bli en Pro","settings_payment_info_expires_$_relative":"Utløper $","settings_payment_info_expires_$_absolute":"Utløper om $1 dager: $2","settings_manage_subscription_error":"Beklager, men det oppsto en feil da vi skulle håndtere abonnementet ditt.","group_billing_packages_title":"Plans for every business ","group_billing_packages_text":"Wunderlist for Business provides you with all the features you need to work smarter as a team at an affordable price. Simply select the right plan for your business now.","group_billing_plan_table_team_size":"Gruppestørrelse","group_billing_plan_table_price":"Pris","group_billing_plan_table_package_name_$":"$ medlemmer","group_billing_buy_button_label":"Kjøp","group_billing_$_off":"$ av","group_billing_larger_team_$":"Har du en større gruppe? $","group_billing_contact_us":"Kontakt oss!","group_billing_downgrade_error_$_$":"For å velge $1 medlemsplanen, må du først fjerne $2 gruppemedlem(mer) fra kontoen.","group_billing_manage_team":"Klikk her for å administrere gruppen din.","group_billing_button_label_manage":"Administrer","group_billing_team_plan_title":"Wunderlist Pro-planen din","group_billing_team_plan_text":"Wunderlist Pro vokser med gruppen din! Det er superenkelt å legge til medlemmer, bare skriv inn e-postadressene deres under. Det er så enkelt, uansett om de er Wunderlist-brukere allerede eller ikke. ","group_billing_upgrade_button_label":"Endre plan","group_billing_upgrade_plan_button_label":"Oppgrader","group_billing_Downgrade_plan_button_label":"Nedgrader","group_billing_view_plans_button_label":"Se planer","group_billing_manage_team_header":"Administrer gruppemedlemmer","group_billing_email_address_input_placeholder":"E-postadresse","group_billing_manage_count_$_of_$":"$1 av $2","group_billing_cancel_team_plan":"Avbryt Wunderlist Pro-planen din","group_billing_search_coachmark":"For å legge til medlemmer, bare legg til e-postadressene til gruppemedlemmene dine, så blir de lagt til Pro-planen din.","group_billing_cancel_header":"Ønsker du virkelig å si opp din gruppes Wunderlist Pro-abonnement?","group_billing_change_plan_confirmation_$_$_$":"Det er enkelt å endre plan. Hvis du går for for $1 medlemsplan nå, vil du bli fakturert $2 i den neste fakturaperioden som starter den $3. Er du sikker på at du ønsker å gjøre dette nå?","group_billing_cancel_text":"Pro-abonnementet ditt løper til slutten av måneden, og du vil ikke bli fakturert igjen. Du kan forsatt se Pro-funksjoner som er tilknyttet oppgavene, men du kan ikke gjøre endringer i dem.","error_goup_billing_user_already_pro":"Det ser ut som om denne personen allerede har en Wunderlist Pro-konto. Gi Pro-gaven til et annet gruppemedlem!","error_group_billing_wait_subscription_runs_out":"Du må vente til det nåværende abonnementet ditt løper ut før du kan kjøpe igjen. Løper ut: $.","button_label_buy_wunderlist_for_business":"Go to Wunderlist for Business","benefit_payment_service_unavailable":"Betalingstjenesten er utilgjengelig","benefit_name":"Wunderlist Pro","benefit_header_$":"Bli en $","benefit_header_description":"Samarbeid i grupper og bedrifter har aldri vært enklere! Her er 4 veldig gode grunner til å anskaffe Wunderlist Pro.","benefit_button_buy_monthly":"Månedlig","benefit_assign_tasks_title":"Tildel gjøremål","benefit_assign_tasks_description":"Du kan enkelt delegere og holde kontroll på statusen til gjøremål blant kolleger og venner!","benefit_unlimited_subtasks_title":"Ubegrenset antall underoppgaver","benefit_unlimited_subtasks_decription":"Del store oppgaver inn i små, oppnåelige steg for økt produktivitet - uten begrensninger.","benefit_comments_title":"Kommentarer","benefit_comments_description":"Start en samtale med dine gruppevenner om hvilke som helst av dine gjøremål. Gi tilbakemelding, still et spørsmål eller tilfør litt ekstra innsikt.","benefit_backgrounds_update_$":"For å bruke de nye bakgrunnene våre, må du oppgradere til en $","benefit_additional_backgrounds_title":"Nye bakgrunner","benefit_additional_backgrounds_description":"Oppdag 8 nye vakre bakgrunner som du kan bruke til å tilpasse Wunderlist akkurat slik du ønsker det!","benefit_files_title":"Filer","benefit_files_description":"Legg filer til i gjøremålene dine og del dem med gruppemedlemmene dine.","benefit_coming_soon":"Kommer snart","benefit_assign_become_pro":"Tildel gjøremål til dine medarbeidere med Wunderlist","benefit_label_accept_terms":"Når du kjøper et Wunderlist Pro-abonnement, så aksepterer du $1 og $2.","benefit_label_need_more_subtasks":"Trenger du flere underoppgaver?","sharing_connect_facebook_sharing":"Koble din Wunderlist-konto til Facebook for å enkelt invitere venner.","sharing_facebook_apprequest_message_$user_$list":"“$1” ønsker å dele listen “$2” med deg","sharing_invite":"Invitér andre","sharing_invite_friends":"Invitér venner","sharing_inviting_requires_account":"Registrer deg for å invitere dine venner og kolleger til dine lister.","sharing_leave_action":"Er du sikker på at du vil forlate denne listen?","sharing_leave_button":"Forlat delt liste","sharing_list_members":"Medlemmer i listen","sharing_list_owner":"Eier","sharing_list_pending_member":"Ikke bekreftet","sharing_tab_recents":"Nylig","sharing_shared_with_you_by":"Delt med deg av","smart_list_assigned_to_me":"Tildelt til meg","smart_list_conversations":"Samtaler","smart_list_all":"Alle","smart_list_completed":"Fullført","smart_list_inbox":"Innboks","smart_list_starred":"Stjernemerket","smart_list_today":"I dag","smart_list_week":"Uke","label_tell_friends":"Fortell dine venner","social_sharing_heading":"Liker du Wunderlist? Fortell dine venner!","social_sharing_dialog_headline":"Love Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"Ikke nå","social_sharing_button_no_thanks":"Nei takk","social_sharing_button_facebook":"Del","social_sharing_button_follow_us":"Følg oss","social_sharing_button_like_us":"Lik oss","social_sharing_heading_thanks":"Følg oss for å få alle de siste Wunderlist-nyhetene.","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"Jeg bruker Wunderlist, min lekre og enkle gjøremålsliste. Få den gratis nå på www.wunderlist.com","twitter_sharing_placeholder":"I’m using @Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","tutorial_welcome_notes_title":"Notater","tutorial_welcome_notes_text":"Avtagbare notater tillater redigering av notater i et eget vindu.","tutorial_welcome_notifications_title":"Aktivitetssenter","tutorial_welcome_notifications_text":"Tilpass måten du ønsker å bli varslet. Velg å motta invitasjoner og oppdateringer til din delte liste via epost og desktop-varslinger, eller vis alt i aktivitetssenteret.","tutorial_welcome_sharing_title":"Invitér venner","tutorial_welcome_sharing_text":"Nå er det enklere enn noensinne å invitere dine venner og kollegaer til å gi en hjelpende hånd.","tutorial_welcome_subtasks_title":"Påminnelser, gjentakelser og underoppgaver","tutorial_welcome_subtasks_text":"Wunderlist har nå fått en helt ny funksjon: Detaljvisning, som lar deg enkelt legge til gjentakende elementer, påminnelser og underoppgaver. ","tutorial_welcome_user_title":"Det handler bare om deg!","tutorial_welcome_user_text":"Endre kontoinnstillingene dine, sjekk synkroniseringsstatusen og tilpass bakgrunnsbildet ditt.","tutorial_welcome_newsletter_subscribe":"Varsle meg om viktige oppdateringer og nye funksjoner i Wunderlist via e-post","tutorial_feature_pro_title":"Wunderlist Pro-funksjon","share_list_email_signature":"Sent with Wunderlist – My beautiful and simple to-do list\\nIt’s free for iPhone, iPad, Android, Mac, Windows PC and Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ usynkronisert element","userbar_$_unsynced_item_plural":"$ usynkroniserte elementer","userbar_account_settings":"Kontoinnstillinger","userbar_change_background":"Tilpass bakgrunn","userbar_last_synced_$":"Sist synkronisert $","userbar_no_internet_connection":"Frakoblet","userbar_preferences":"Innstillinger","userbar_sync_in_progress":"Synkroniserer...","userbar_user_name_for_unregistered_mode":"Registrér deg for å synkronisere","whatsnew_title":"Hva er nytt","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Kommentarer","whatsnew_label_voice":"Stemmeinnspilling","whatsnew_label_groupbilling":"Gruppeprisprofil","whatsnew_copy_comments":"Samle alle samtalene om gjøremålene dine på ett sted med Kommentarer i Wunderlist Pro. Gi tilbakemelding, still et spørsmål eller tilfør ekstra innsikt til hvilket som helst av dine gjøremål for å forbedre kommunikasjonen innen gruppen din vesentlig.","whatsnew_copy_pro_accounts":"Legg til kommentarer, tildel gjøremål, legg til filer og lag et ubegrenset antall underoppgaver med Wunderlist Pro for å oppnå mer, sammen.","whatsnew_copy_voice":"Klikk på mikrofonikonet for å diktere gjøremålene dine eller til og med ta opp en stemme-memo og legge den ved som en fil.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Registrer deg for å prøve Wunderlist Pro og å legge til en fil.","label_add_new_file":"Legg til en fil…","file_uploaded_unsuccessfully":"Opplastingen av $ lyktes ikke. Vennligst prøv igjen.","file_uploaded_failed":"Opplasting lyktes ikke. Vennligst prøv igjen.","file_uploaded_failed_deleted":"Opplasting av $ gikk galt fordi filen var slettet fra harddisken din.","label_are_you_sure_permanently_delete_$_file":"Er du sikker på at du ønsker å slette filen “$” permanent fra Wunderlist?","upload_file_was_not_synced_yet":"Vennligst synkroniser","upload_file_not_synced_yet":"Ikke synkronisert","placeholder_add_comments":"Legg til kommentar...","placeholder_reply":"Svar...","button_label_go_pro_to_comment":"Bestill Pro for å kommentere","comment_request_failed":"Beklager, vi kunne ikke laste Kommentarer. Vennligst prøv på nytt.","comment_load_earlier":"Se på flere Kommentarer","coachmark_no_current_comments":"Ingen kommentarer ennå.\\nBegynn din samtale her.","coachmark_comments_not_available":"Beklager, vi kunne ikke laste de forrige kommentarene. Vennligst prøv på nytt om et øyeblikk.","notification_$_commented_on_$":"$1 kommenterte om $2","notification_$_and_$_commented_on_$":"$1 og $2 kommenterte om $3","notification_$_and_$_others_commented_on_$":"$1 og $2 andre kommenterte om $3","comments_requires_account":"Sign up to try Wunderlist Pro and add a Comment.","non_pro_trial_free_limit_reached":"Du har nådd grensen!","non_pro_trial_write_next_comment_$":"Du kan legge til enda en kommentar $.","non_pro_trial_upload_next_file_$":"Du vil kunne legge til enda en fil $.","non_pro_trial_assign_next_to_do_$":"You can Assign another to-do $.","button_signup_or_login":"Registrer deg eller logg inn","button_it_is_completely_free":"Det er fullstendig gratis","label_free_download_for_platforms":"Tilgjengelig gratis for iPhone, iPad, Android, Windows og Mac","label_wunderlist_to_get_things_done":"Mer enn 5 millioner personer bruker Wunderlist for å få ting gjort.","label_people_who_use_wunderlist":"Se hvem som allerede bruker Wunderlist:","label_wunderlist_uses":"Uansett om du organiser forretningen din, deler en handleliste med en kjæreste eller ret og slett holder styr på hverdagen din, så er Wunderlist den beste gjøremålslisten for deg, ditt team eller din familie.","label_install_browser_extension":"Installer nettleserutvidelsen","label_install_chrome_browser_extension":"Installer nettleserutvidelsen for Chrome","label_newsletter_signup":"Registrer deg for vårt nyhetsbrev","label_know_upcoming_features":"Vær blant de første til å få vite om kommente funksjoner","label_learn_more_about_wunderlist":"Lær mer om Wunderlist","label_learn_more":"Lær mer…","label_your_email_address":"Din e-postadresse","button_subscribe_to_newsletter":"Abonner","button_sending_subscribe_to_newsletter":"Sender...","iyf4_usermenu_label":"Get Wunderlist Pro for Free","iyf4_notification_label":"Get up to 12 free months of Wunderlist Pro by inviting your friends!","iyf4_notification_button_label_var_a":"Start Inviting","iyf4_notification_button_label_var_b":"Invite Friends","iyf4_notification_button_label_var_c":"Get Wunderlist Pro for Free","iyf4_notification_button_label_var_d":"Share Wunderlist Pro","iyf4_dialog_invite_headline_$":"Get up to $ of Wunderlist Pro by inviting your friends!","iyf4_dialog_invite_headline_incentive":"12 free months","iyf4_dialog_invite_incentive_$":"$ Wunderlist, we'll give you both 1 month of Wunderlist Pro for free (up to a limit of 12 months)","iyf4_dialog_invite_incentive_terms":"For every friend who joins","iyf4_dialog_tweet":"I love organizing my life with Wunderlist. Get a month of Wunderlist Pro for free here:","iyf_notification_label":"Refer Wunderlist to your friends and get Pro for free up to 12 months!","iyf_notification_button_label":"Go Pro!","iyf_dialog_step1_headline":"Få en gratis Pro-konto","iyf_dialog_step1_subheadline":"I tre enkle steg","iyf_dialog_step1_instruction1_headline":"Begynn å invitere vennene dine","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter or E-Mail","iyf_dialog_step1_instruction2_headline":"Your friends sign up","iyf_dialog_step1_instruction2_subheadline":"sit tight while they join Wunderlist","iyf_dialog_step1_instruction3_headline":"Enjoy your free Pro Account","iyf_dialog_step1_instruction3_subheadline":"1 month for every friend who accepts","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 month for every $ friends who accept","iyf_dialog_step1_next_button":"Start inviting","iyf_dialog_step2_subheadline":"to get your free Pro Account","iyf_dialog_step2_divider_label":"Share this link","iyf_dialog_share_on_facebook":"Share on Facebook","iyf_dialog_post_on_twitter":"Tweet on Twitter","iyf_dialog_email_placeholder":"Enter an email address...","iyf_dialog_more_placeholder":"Add another...","iyf_dialog_step3_headline":"Thank you for sharing","iyf_dialog_step3_subheadline":"Sit tight while your friends join","iyf_dialog_step3_success_headline":"Invites successfully sent","iyf_dialog_step3_success_subheadline":"We'll notify you as soon as your Pro account is ready.","iyf_dialog_step3_invite_more":"Invite more people","meta_title":"Wunderlist 2: Din elegante og enkle online gjøremålsliste-app","meta_description":"Mer enn fem millioner bruker Wunderlist til å organisere gjøremålene sine, og for å få ting gjort. Wunderlist er den beste gjøremålslisten for deg, kollegaene dine og familien din,","meta_keywords":"6Wunderkinder, produktivitet, samarbeide, oppgaveledelse, oppgaveleder, gjøremål, liste, oppgaver, gtd, organiser, planlegg, handleliste, påminnelser, smarte lister, matvarelister, filmlister, delt liste","enable_desktop_notifications_text":"Klikk \"Bekreft\" og deretter \"Tilat\" i nettleseren din for å slå på varsler.","notification_add_to_browser":"Hold Wunderlist et museklikk unna og legg til Wunderlist nettapp til nettleseren din nå.","notification_add_extension_to_browser":"Du kan raskt og greit lagre alt favorittinnholdet ditt fra nettet direkte inn i Wunderlist. Installer \"Add to Wunderlist\" Chrome-utvidelsen nå. ","button_add_to_chrome":"Legg til Chrome","button_add_to_store_added":"Lagt til","aria_activity_center_hint":"Activity Center. Hit escape to close.","aria_exit_search":"Exit Search","aria_search":"Search","aria_sort_list":"Sort List","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"User menu. Hit escape to close.","aria_assign_to_$":"Assign to $","momentjs_months":"Januar_Februar_Mars_April_Mai_Juni_Juli_August_September_Oktober_November_Desember","momentjs_monthsShort":"Jan_Feb_Mar_Apr_Mai_Jun_Jul_Aug_Sep_Okt_Nov_Des","momentjs_weekdays":"Søndag_Mandag_Tirsdag_Onsdag_Torsdag_Fredag_Lørdag","momentjs_weekdaysShort":"Søn_Man_Tir_Ons_Tor_Fre_Lør","momentjs_weekdaysMin":"Sø_Ma_Ti_On_To_Fr_Lø","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[I dag kl] LT","momentjs_calendar_nextDay":"[I morgen kl] LT","momentjs_calendar_nextWeek":"dddd [kl] LT","momentjs_calendar_lastDay":"[I går kl] LT","momentjs_calendar_lastWeek":"[sist] dddd [kl] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"i %s","momentjs_relativeTime_past":"%s siden","momentjs_relativeTime_s":"noen sekunder","momentjs_relativeTime_m":"ett minutt","momentjs_relativeTime_mm":"%d minutter","momentjs_relativeTime_h":"en time","momentjs_relativeTime_hh":"%d timer","momentjs_relativeTime_d":"én dag","momentjs_relativeTime_dd":"%d dager","momentjs_relativeTime_M":"én måned","momentjs_relativeTime_MM":"%d måneder","momentjs_relativeTime_y":"ett år","momentjs_relativeTime_yy":"%d år"}
};
});
define('languages/polish',[],function() {
return {
'name': 'polish',
'data': {"actionbar_print_selected_item":"Drukuj wybrany element","actionbar_print_$_selected_items_plural":"Wydrukuj $ wybranych elementów","actionbar_email_selected_item":"Wyślij wybrany element","actionbar_email_$_selected_items_plural":"Wyślij $ wybranych elementów","actionbar_sort_alphabetically":"Sortuj alfabetycznie","actionbar_sort_due_date":"Sortuj wg daty ukończenia","actionbar_sort_assignee":"Sortuj wg przydzielonej osoby","api_error_account_already_exists":"Konto o podanym adresie e-mail już istnieje.","api_error_connection_error":"Ojej, wystąpił jakiś problem z dostępem do serwera. Spróbuj ponownie.","api_error_general_error":"Ojej, nie można nawiązać połączenia z serwerem. Spróbuj ponownie.","api_error_incorrect_login":"Podany adres e-mail lub hasło jest nieprawidłowe.","api_error_incorrect_password":"Podane hasło jest nieprawidłowe.","api_error_service_down":"Kluczowa część usługi WunderAPI nie działa.","api_error_unknown":"Wystąpił nieoczekiwany i nieobsługiwany błąd.","api_error_validation_error_unable_to_signup":"Nie udało się zarejestrować używając podanego adresu e-mail.","api_error_not_a_beta_user":"Nie jesteś członkiem Wunderlist Beta.","button_back":"Powrót","button_cancel":"Anuluj","button_confirm":"Potwierdź","button_download":"Pobierz","button_change":"Zmień","button_choose":"Wybierz","button_connect":"Połącz","button_connect_facebook":"Połącz z Facebookiem","button_continue":"Kontynuuj","button_delete":"Usuń","button_disconnect":"Rozłącz","button_dismiss":"Porzuć","button_done":"Gotowe","button_edit":"Edycja","button_get_started":"Zaczynajmy","button_go_back":"Powrót","button_go_back_sentence":"Powrót","button_learn_more":"Dowiedz się więcej","button_go_back_to_login":"Powrót do logowania","button_go_to_web_app":"Przejdź do aplikacji internetowej","button_join_now":"Dołącz teraz","button_log_in":"Zaloguj się","button_log_in_with_$":"Zaloguj się za pomocą $","button_log_out":"Wyloguj","button_log_in_facebook":"Zaloguj z Facebookiem","button_next":"Dalej","button_no":"Nie","button_no_due_date":"Bez terminu","button_ok":"OK","button_remove_due_date":"Usuń datę ukończenia","button_remove_reminder":"Usuń przypomnienie","button_email_list":"Wyślij listę","button_print_list":"Wydrukuj listę","button_reset_password":"Zresetuj hasło","button_retry":"Ponów","button_save":"Zapisz","button_send":"Wyślij","button_sign_up":"Załóż konto","button_sign_up_with_$":"Załóż konto używając $","button_sign_up_for_free":"Załóż bezpłatne konto","button_sign_up_facebook":"Załóż konto używając Facebooka","button_support_center":"Centrum wsparcia","button_subscribe":"Tak, poproszę!","button_try_again":"Spróbuj ponownie","button_try_wunderlist":"Wypróbuj Wunderlist","button_yes":"Tak","coachmark_all_list_empty":"Nie dodano jeszcze żadnych elementów. Śmiało, dodaj coś.","coachmark_completed_list_empty":"Nie ukończono jeszcze żadnych elementów. Śmiało, oznacz kilka elementów z listy jako wykonane!","coachmark_no_search_results":"Brak wyników","coachmark_sharing_invite_friends_heading":"Zaproś znajomych","coachmark_sharing_invite_friends_text_$":"Twoi znajomi będą mogli tworzyć, usuwać i odznaczać elementy jako wykonane na liście \"$\".","coachmark_sharing_recent_no_contacts_heading":"Brak ostatnich kontaktów","coachmark_sharing_recent_no_contacts_text_$":"Podaj adres e-mail lub wybierz z kontaktów. Po dodaniu, znajomy będzie mógł tworzyć, usuwać i odznaczać elementy jako wykonane na liście \"$\".","coachmark_assigned_to_me_list_empty":"Brak przydzielonych zadań","coachmark_conversations_list_empty":"Aktualnie brak konwersacji.","coachmark_starred_list_empty":"Nie masz elementów wyróżnionych gwiazdką","coachmark_today_list_empty":"Gratulacje! Nie masz dzisiaj żadnych zadań, ani żadne się nie przedawniają","coachmark_week_list_empty":"Jesteś na wakacjach? Nie masz żadnych zadań w ciągu następnych siedmiu dni","error_list_not_found":"Nie można odnaleźć listy, której szukasz","error_share_not_created":"Wystąpił problem z udostępnianiem listy. Spróbuj ponownie.","error_task_not_found":"Nie udało się znaleźć poszukiwanego elementu","error_page_not_found":"Nie znaleziono strony","error_title_not_found":"Nie znaleziono","label_are_you_sure_permanently_delete_item":"Czy na pewno chcesz trwale usunąć ten element?","label_are_you_sure_permanently_delete_item_plural":"Czy na pewno chcesz trwale usunąć te elementy?","label_activity_center":"Centrum aktywności","label_are_you_sure_permanently_delete_$_list":"Czy na pewno chcesz trwale usunąć listę \"$\"?","label_are_you_sure_permanently_delete_$_task":"Czy na pewno chcesz trwale usunąć element \"$\"?","label_are_you_sure_permanently_delete_task_plural":"Czy na pewno chcesz usunąć te elementy?","label_are_you_sure_permanently_delete_$_subtask":"Czy na pewno chcesz trwale usunąć podzadanie \"$\"?","label_cant_undo":"Tej operacji nie można cofnąć.","label_completed_tasks_heading":"1 ukończony element","label_$_completed_tasks_heading_plural":"$ Ukończone zadania","label_connecting":"Łączenie...","label_minisite_description_line_1":"Śledź wszystko, co chcesz zrobić.","label_minisite_description_line_2":"Wundelist jest dostępne za darmo dla wszystkich wiodących platform.","label_minisite_share_deleted_or_no_access":"To prawdopodobnie zostało usunięte lub nie masz już dostępu.","label_minisite_contact_sender_for_info":"Skontaktuj się z osobą, która udostępniła listę, aby uzyskać więcej informacji.","label_minisite_$_invited_you_to_the_list_$":"$1 zaprosił(a) Cię do listy $2","label_minisite_empty_list_$":"Ta lista jest aktualnie pusta, pomóż im zacząć. Kliknij powyższy przycisk \"Załóż konto\", aby zacząć dodawać elementy do listy $.","label_day_0":"Nie","label_day_1":"Pon","label_day_2":"Wt","label_day_3":"Śr","label_day_4":"Czw","label_day_5":"Pt","label_day_6":"So","label_delete_file":"Usuń plik","label_delete_list":"Usuń listę","label_delete_task":"Usuń element","label_delete_task_plural":"Usuń elementy","label_delete_subtask":"Usuń podzadanie","label_due_$":"Do dnia $","label_due_on":"Do dnia $.","label_due_date":"Data ukończenia","label_email":"E-mail","label_every":"co","label_loading":"Wczytywanie...","label_logging_out":"Wylogowywanie...","label_name":"Nazwa","label_newsletter":"Newsletter Wunderlist","label_none":"Brak","label_notification":"Powiadomienie","label_oops":"Ojej!","label_or":"lub","label_password":"Hasło","label_relative_date_today":"Dzisiaj","label_relative_date_today_with_date":"Dzisiaj, $","label_relative_date_today_mid_sentence":"dzisiaj","label_relative_date_tomorrow":"Jutro","label_relative_date_tomorrow_with_date":"Jutro, $","label_relative_date_tomorrow_mid_sentence":"jutro","label_relative_date_yesterday":"Wczoraj","label_remind_me_at_$":"Przypomnij mi o $","label_reminder":"Przypomnienie","label_reminder_message_$":"Przyjazne powiadomienie o: $","label_repeat_every_day":"Powtarzaj codziennie","label_repeat_every_week":"Powtarzaj co tydzień","label_repeat_every_month":"Powtarzaj co miesiąc","label_repeat_every_year":"Powtarzaj co rok","label_repeat_custom":"Niestandardowe...","label_repeat_day":"Codziennie","label_repeat_day_$_plural":"Co $ dni","label_repeat_month":"Co miesiąc","label_repeat_month_$_plural":"Co $ mies.","label_repeat_week":"Co tydzień","label_repeat_week_$_plural":"Co $ tyg.","label_repeat_never":"Nigdy nie powtarzaj","label_repeat_year":"Co rok","label_repeat_year_$_plural":"Co $ lat(a)","label_reset_password":"Zresetuj hasło","label_rights_reserved":"Wszystkie prawa zastrzeżone","label_still_fetching_tasks":"Wciąż ściągam zadania ...","label_sync":"Synchronizacja","label_time_am":"AM","label_time_day_plural":"dni","label_time_week_plural":"tyg.","label_time_month_plural":"mies.","label_time_pm":"PM","label_time_year_plural":"lat(a)","label_assign_to":"Przydziel do","label_unassigned":"Nie przydzielone","label_assign_me":"Ja","label_created_$":"Utworzono: $","label_created_by_$":"Autor: $","label_created_on_$":"Utworzono: $","label_created_$_by_$":"Utworzono: $1. Autor:  $2","label_created_by_$_on_$":"Autor: $1, Utworzono: $2","label_completed_$":"Ukończono $","label_completed_on_$":"Ukończono dnia: $","label_completed_$_by_$":"Ukończono dnia $1 przez $2","label_completed_by_$_on_$":"Ukończono przez $1 dnia $2","login_add_photo_hint":"Spersonalizuj swoje konto Wunderlist poprzez dodanie zdjęcia.","login_already_have_account":"Masz już konto?","login_email_not_valid":"Podaj poprawny adres e-mail.","login_empty_name":"Podaj swoje imię.","login_empty_password":"Podaj hasło.","login_password_not_valid":"Podaj prawidłowe hasło.","login_empty_email":"Podaj adres e-mail.","login_enter_name":"Kim jesteś?","login_enter_password":"Już prawie gotowe.","login_enter_password_hint":"Wybierz hasło, aby ukończyć konfigurację konta Wunderlist.","login_forgot_password":"Nie pamiętam hasła","login_forgot_password_heading":"O czymś zapomniałeś?","login_forgot_password_text":"Wpisz adres e-mail podany w trakcje rejestracji, a my wyślemy Ci łącze resetowania hasła.","login_no_account_yet":"Nie masz konta?","login_password_changed":"Zaktualizowano hasło","login_password_not_match":"Podane hasła nie są takie same.","login_password_reset_email_has_been_sent":"Sprawdź skrzynkę e-mail w poszukiwaniu instrukcji resetowania hasła.","login_reset_password_heading":"Już czas, aby utworzyć nowe hasło.","login_reset_password_success":"Naciśnij poniższy przycisk, aby ponownie zalogować się w Wunderlist.","login_reset_password_success_heading":"Hura! Hasło zostało zmienione!","login_password_too_short":"Hasło musi składać się z przynajmniej 5 znaków.","login_sign_up":"Załóż konto.","login_want_to_try_again":"Chcesz spróbować ponownie?","login_accept_terms":"Zapisując się, akceptujesz $1 i $2.","logout_timeout_title":"Błąd synchronizacji","logout_timeout_text":"Nie udało się zsynchronizować danych. Chcesz ponowić próbę czy po prostu się wylogować?","mobile_tutorial_welcome_to":"Witamy w","mobile_tutorial_wunderlist_subtitle":"Twoja piękna i prosta w użyciu lista zadań","notifications_desktop_enable_heading":"Włączyć powiadomienia na pulpicie?","notifications_no_notifications":"Brak aktywności","notifications_no_notifications_message":"Tutaj pojawią się informacje o zaproszeniach do współdzielenia list i inne aktywności.","notifications_event_accept":"Zaakceptuj","notifications_event_accepted":"Zaakceptowano","web_upgrade_ie9_not_supported":"Aplikacja Wunderlist nie obsługuje przeglądarki Internet Explorer 9. Aby móc pracować, zainstaluj przeglądarkę $ lub $.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Wygląda na to, że korzystasz z urządzenia z ekranem dotykowym. Czy chcesz włączyć interfejs przygotowany dla takich ekranów? Zawsze możesz to później zmienić w ustawieniach konta.","web_setting_enable_touch_for_$":"Włącz interfejs dotykowy dla platformy $.","web_settings_text_refresh_may_be_required":"Spróbuj odświeżyć widok.","rate_label":"Oceń Wunderlist","rate_app_heading":"Oceń i zrecenzuj Wunderlist","rate_app_message_web_chrome":"Dziękujemy, że korzystasz z Wunderlist. Chcielibyśmy dowiedzieć się co sądzisz o programie! Prosimy, wystaw nam ocenę i napisz recenzję Wunderlist w Chrome Web Store ★★★★★","rate_app_button_later":"Przypomnij mi później","rate_app_button_no":"Nie, dziękuję","rate_app_button_yes":"Oceń Wunderlist","placeholder_add_due_today_to_inbox":"Dodaj zadanie na dziś do \"Skrzynki odbiorczej\"","placeholder_add_list":"Dodaj listę...","placeholder_add_subtask":"Dodaj podzadanie","placeholder_add_starred_to_inbox":"Dodaj element wyróżniony gwiazdką do Skrzynki odbiorczej...","placeholder_add_task_to_$":"Dodaj element do \"$\"...","placeholder_add_to_inbox":"Dodaj do \"Skrzynki odbiorczej\"","placeholder_new_list":"Nowa lista","placeholder_remind_me":"Przypomnij mi","placeholder_search":"Znajdź...","placeholder_sharing_search":"Nazwa lub adres e-mail...","placeholder_set_due_date":"Ustaw datę ukończenia","browser_outdated_heading":"Ojej! Wygląda na to, że używana przeglądarka internetowa jest nieświeża!","browser_outdated_update":"Zaktualizuj przeglądarkę","browser_outdated_explanation":"Wunderlist zostało stworzone z użyciem najnowszej i najlepszej technologii. Aby korzystać z programu, pobierz najnowszą wersję przeglądarki.","prenamed_list_movies":"Filmy do obejrzenia","prenamed_list_private":"Prywatne","prenamed_list_shopping":"Zakupy","prenamed_list_wishlist":"Lista życzeń","prenamed_list_work":"Praca","prenamed_list_read_later":"Przeczytaj później","settings_account_change_email":"Zmień adres e-mail...","settings_account_change_password":"Zmień hasło...","settings_account_delete_confirmation":"Wpisz \"Na pewno\"","settings_account_delete_confirmation_text":"Na pewno","settings_account_drop_image":"Przeciągnij obraz tutaj","settings_account_connect_facebook_account":"Połączenia konta Wunderlist z kontem na Facebooku ułatwia udostępnianie list znajomym.","settings_general_12_hour":"12 godzinny","settings_general_24_hour":"24 godzinny","settings_general_confirm_deletion":"Potwierdź przed usunięciem elementów","settings_general_create_new_tasks":"Dodaj elementy","settings_general_date_format":"Format daty","settings_general_language":"Język","settings_general_start_of_week":"Początek tygodnia","settings_general_start_of_week_sunday":"Niedziela","settings_general_start_of_week_saturday":"Sobota","settings_general_start_of_week_monday":"Poniedziałek","settings_general_sound_task_completion":"Włącz dźwięk przy kończeniu elementu","settings_general_sound_new_notifications":"Włącz dźwięk dla nowych powiadomień","settings_general_print_done_tasks":"Drukuj ukończone zadania","settings_general_tasks_bottom":"Dół listy","settings_general_tasks_top":"Szczyt listy","settings_general_time_format":"Format czasu","settings_heading_team":"Biznes","settings_heading_about":"Informacje","settings_heading_account":"Konto","settings_heading_general":"Ogólne","settings_heading_notification":"Powiadomienia","settings_heading_shortcuts":"Skróty","settings_heading_sidebar":"Panel boczny","settings_imprint":"Wdrukuj","settings_visit_website":"Visit Us","settings_get_help":"Uzyskaj pomoc","settings_notifications_notify_me_of_important_events_mobile":"Powiadamiaj mnie o ważnych wydarzeniach przez:","settings_notifications_notify_me_on_text":"Powiadomimy Cię o różnych zdarzeniach, np. o zaakceptowaniu przez kogoś zaproszenia do listy udostępnionej lub dodaniu/ukończeniu zadania z listy udostępnionej.","settings_sidebar_smart_lists_title":"Wyświetl te listy inteligentne na panelu bocznym.","settings_sidebar_smart_lists_auto":"Auto.","settings_sidebar_smart_lists_hidden":"Ukryta","settings_sidebar_smart_lists_visible":"Widoczna","settings_sync_full":"Zsynchronizuj","settings_account_account_backup":"Kopia zapasowa konta","settings_account_restore_backup":"Importuj dane z kopii zapasowej","settings_account_backup_description":"Kopia zapasowa zawiera wszystkie Twoje listy, zadania, podzadania, notatki i przypomnienia. Pamiętaj, że nie zawiera list, które zostały Ci udostępnione, jak również plików, komentarzy, odbiorców list udostępnionych, ani wcześniejszych ustawień aplikacji.","settings_account_data_is_being_processed":"Uważaj! Trwa przetwarzanie kopii zapasowej Twoich danych. Wyślemy do Ciebie wiadomość e-mail, gdy proces dobiegnie końca.","settings_account_change_password_error":"Wystąpił problem przy aktualizacji hasła. Spróbuj ponownie.","settings_account_click_to_download_backup":"Kliknij, aby pobrać","settings_account_create_backup":"Utwórz kopię zapasową","settings_account_current_password":"Obecne hasło","settings_account_delete_account":"Usuń konto","settings_account_delete_account_confirm":"Czy na pewno chcesz usunąć konto?","settings_account_delete_account_confirm_text":"Wraz z usunięciem konta zostaną usunięte wszystkie listy i elementy, a operacji tej nie można cofnąć.","settings_account_fetching_data":"Trwa odtwarzanie danych...","settings_account_new_password":"Nowe hasło","settings_account_repeat_new_password":"Powtórz nowe hasło","settings_account_right_click_and_save_as":"Kliknij prawym przyciskiem myszy i zapisz","settings_third_party_libraries":"Licencje","settings_background_credits":"Autor tła","settings_notifications_email_enabled":"Powiadomienia e-mail","settings_notifications_desktop_enabled":"Powiadomienia na pulpicie","settings_notifications_push_enabled":"Powiadomienia push","settings_privacy_policy":"Polityka prywatności","settings_shortcuts_arrow_keys":"Klawisze strzałek","settings_shortcuts_delete_item":"Usuń wybraną listę lub element","settings_shortcuts_mark_done":"Oznacz wybrane elementy jako ukończone","settings_shortcuts_mark_starred":"Wyróżnij wybrane elementy gwiazdką","settings_shortcuts_new_list":"Dodaj nową listę","settings_shortcuts_new_task":"Dodaj element","settings_shortcuts_open_all_smart_list":"Otwórz listę inteligentną \"Wszystkie\"","settings_shortcuts_open_assigned_smart_list":"Otwórz listę \"Przydzielone do mnie\"","settings_shortcuts_open_conversations_smart_list":"Otwórz listę inteligentną „Konwersacje”","settings_shortcuts_open_done_smart_list":"Otwórz listę inteligentną \"Ukończone\"","settings_shortcuts_open_inbox":"Otwórz skrzynkę odbiorczą","settings_shortcuts_open_preferences":"Otwórz preferencje","settings_shortcuts_open_search":"Wyszukiwarka","settings_shortcuts_open_starred_smart_list":"Otwórz listę inteligentną \"Wyróżnione\"","settings_shortcuts_open_today_smart_list":"Otwórz listę inteligentną \"Dzisiaj\"","settings_shortcuts_open_week_smart_list":"Otwórz listę inteligentną \"Tydzień\"","settings_shortcuts_reset":"Przywróć domyślne","settings_shortcuts_select_all_tasks":"Zaznacz wszystkie elementy","settings_shortcuts_show_more":"Pokaż Więcej","settings_shortcuts_hide":"Ukryj","settings_shortcuts_show_notifications":"Wyświetl centrum aktywności","settings_shortcuts_step_through_list":"Przechodzenie między listami","settings_shortcuts_step_through_task":"Przechodzenie między elementami","settings_terms_of_use":"Warunki świadczenia usług","settings_account_header_free":"Bezpłatne","settings_account_header_unregistered":"Załóż konto","settings_account_header_account_$":"Konto $","settings_account_pro_description":"Dodawaj komentarze i pliki do zadań i przypisuj je do kolegów. Współpraca w zespole nigdy nie była łatwiejsza!","settings_account_register_wunderlist_description":"Zarejestruj się w aplikacji Wunderlist, aby zsynchronizować listy zadań ze wszystkich urządzeń.","settings_manage_subscription_button":"Zarządzanie subskrypcją","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Yay, jesteś $!","settings_account_header_pro_description":"Wunderlist Pro to najlepszy sposób, aby zachować swoje projekty na torze. Zaproś znajomych i kolegów do współpracy i skutecznie realizuj cele!","settings_upgrade_to_pro_label":"Zaktualizuj do $","settings_label_pro_account":"Konto Pro","settings_label_purchased_from_$":"Zakupione od: $","settings_label_purchased_from_$_by_$":"Zakupione w $1 przez $2.","settings_label_expires_in_$":"Wygasa za: $","setting_label_next_billing_date":"Następna Data Płatności:","setting_label_cancel_subscription":"Anuluj Subskrypcje","setting_heading_cancel_subscription":"Czy na pewno chcesz zakończyć subskrypcję Wunderlist Pro?","setting_description_cancel_subscription":"Nadal będziesz mieć dostęp do wszystkich swoich danych, jednak gdy subskrypcja wygaśnie, będziesz mieć dostęp tylko do podstawowych funkcji Wunderlist.","setting_label_cancel_subscription_success":"Pomyślnie anulowano subskrypcję.","settings_label_invoices":"Faktury","settings_label_become_a_pro":"Zostań Pro","settings_payment_info_expires_$_relative":"Wygasa $","settings_payment_info_expires_$_absolute":"Wygasa za $1 dni: $2","settings_manage_subscription_error":"Przepraszamy, wystąpił błąd podczas próby zarządzania subskrypcji.","group_billing_packages_title":"Plany przygotowane do potrzeb każdej firmy","group_billing_packages_text":"Wersja Wunderlist for Business zawiera wszystkie funkcje niezbędne do sprawnej współpracy w zespole. To wszystko w przystępnej cenie. Wybierz plan odpowiedni dla Twojej firmy.","group_billing_plan_table_team_size":"Wielkość zespołu","group_billing_plan_table_price":"Cena","group_billing_plan_table_package_name_$":"Liczba członków: $","group_billing_buy_button_label":"Kup","group_billing_$_off":"Zniżka $","group_billing_larger_team_$":"Masz większy zespół? $","group_billing_contact_us":"Skontaktuj się z nami!","group_billing_downgrade_error_$_$":"Aby zmienić plan na „$1 członków”, musisz zmniejszyć liczbę współpracowników o $2.","group_billing_manage_team":"Kliknij tutaj, aby zarządzać zespołem.","group_billing_button_label_manage":"Zarządzaj","group_billing_team_plan_title":"Twój plan Wunderlist Pro","group_billing_team_plan_text":"Wunderlist Pro rośnie wraz z Twoim zespołem! Dodawanie nowych członków jest bardzo proste. Wystarczy wpisać poniżej ich adresy e-mail. Nawet nie muszą być jeszcze użytkownikami Wunderlist.","group_billing_upgrade_button_label":"Zmień plan","group_billing_upgrade_plan_button_label":"Zaktualizuj","group_billing_Downgrade_plan_button_label":"Obniż","group_billing_view_plans_button_label":"Wyświetl plany","group_billing_manage_team_header":"Zarządzaj członkami zespołu","group_billing_email_address_input_placeholder":"Adres e-mail","group_billing_manage_count_$_of_$":"$1 z $2","group_billing_cancel_team_plan":"Anuluj plan Wunderlist Pro","group_billing_search_coachmark":"Aby dodać członków, wpisz po prostu adresy e-mail współpracowników, a zostaną dodani do Twojego planu Pro.","group_billing_cancel_header":"Czy na pewno chcesz zrezygnować z subskrypcji Wunderlist Pro dla Twojego zespołu?","group_billing_change_plan_confirmation_$_$_$":"Zmiana planu jest bardzo prosta. Jeśli zmienisz w tej chwili plan na „$1 członków”, to zapłacisz za niego $2 w kolejnym cyklu rozliczeniowym, który rozpoczyna się w dniu $3. Czy na pewno chcesz to zrobić teraz?","group_billing_cancel_text":"Twoja subskrypcja Pro będzie ważna do końca miesiąca, ale już nie pobieramy za to opłaty. Funkcje wersji Pro, takie jak pliki dodane do zadań, będą wciąż widoczne, ale już nie będzie można ich zmieniać.","error_goup_billing_user_already_pro":"Zdaje się, że ta osoba już ma konto Wunderlist Pro. Podaruj upominek Pro innemu współpracownikowi.","error_group_billing_wait_subscription_runs_out":"Przed ponownym zakupem musisz zaczekać, aż bieżąca subskrypcja utraci ważność. Data ważności: $.","button_label_buy_wunderlist_for_business":"Kup wersję Wunderlist for Business","benefit_payment_service_unavailable":"Usługa płatności jest niedostępna","benefit_name":"Wunderlist Pro","benefit_header_$":"Zostań $","benefit_header_description":"Współpraca w drużynie i firmie nigdy nie była łatwiejsza! Oto cztery bardzo dobre powody, aby zarejestrować się do Wunderlist Pro.","benefit_button_buy_monthly":"Mies.","benefit_assign_tasks_title":"Przydzielaj zadania","benefit_assign_tasks_description":"Łatwo przydzielaj zadania do kolegów i znajomych. Możesz również śledzić status tych zadań.","benefit_unlimited_subtasks_title":"Nielimitowane podzadania","benefit_unlimited_subtasks_decription":"Rozdziel duże zadania na małe osiągalne kroki aby poprawić wydajność bez ograniczeń.","benefit_comments_title":"Komentarze","benefit_comments_description":"Ropocznij konwersację z członkami zespołu na temat dowolnego zadania. Wyraź opinię, zadaj pytanie lub dodaj swoje spostrzeżenia.","benefit_backgrounds_update_$":"Aby korzystać z nowych teł, ulepsz do $","benefit_additional_backgrounds_title":"Więcej obrazów tła","benefit_additional_backgrounds_description":"Odkryj 8 nowych i pięknych teł, dzięki którym spersonalizujesz Wunderlist!","benefit_files_title":"Pliki","benefit_files_description":"Dołącz pliki do zadań i dziel się nimi ze współpracownikami.","benefit_coming_soon":"Już niebawem","benefit_assign_become_pro":"Przypisz zadania do Twoich współpracowników z Wunderlist","benefit_label_accept_terms":"Kupując Wunderlist Pro, wyrażasz zgodę na $1 i $2.","benefit_label_need_more_subtasks":"Potrzebujesz więcej podzadań?","sharing_connect_facebook_sharing":"Połącz konto Wunderlist z kontem Facebooka, aby w prosty sposób zapraszać znajomych.","sharing_facebook_apprequest_message_$user_$list":"“$1” chce udostępnić Ci listę “$2” ","sharing_invite":"Zaproś innych","sharing_invite_friends":"Zaproś znajomych","sharing_inviting_requires_account":"Załóż konto i zaproś znajomych do swoich list.","sharing_leave_action":"Czy na pewno chcesz opuścić tę listę?","sharing_leave_button":"Zamknij listę udostępnionych","sharing_list_members":"Lista członków","sharing_list_owner":"Właściciel","sharing_list_pending_member":"Oczekujące","sharing_tab_recents":"Ostatnie","sharing_shared_with_you_by":"Udostępnione Tobie przez","smart_list_assigned_to_me":"Przydzielone do mnie","smart_list_conversations":"Konwersacje","smart_list_all":"Wszystko","smart_list_completed":"Ukończono","smart_list_inbox":"Skrzynka odbiorcza","smart_list_starred":"Wyróżnione gwiazdką","smart_list_today":"Dzisiaj","smart_list_week":"Tydzień","label_tell_friends":"Powiedz znajomym","social_sharing_heading":"Lubisz Wunderlist? Powiedz o tym znajomym!","social_sharing_dialog_headline":"Lubisz Wunderlist?","social_sharing_dialog_danke":"Dziękujemy!","social_sharing_button_later":"Nie teraz","social_sharing_button_no_thanks":"Nie, dziękuję","social_sharing_button_facebook":"Udostępnij","social_sharing_button_follow_us":"Obserwuj nas","social_sharing_button_like_us":"Polub nas","social_sharing_heading_thanks":"Upewnij się, że nas obserwujesz, aby być na bieżąco z aktualizacjami dot. Wunderlist.","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"Ja już korzystam z aplikacji Wunderlist, mojej wspaniałej i łatwej w obsłudze listy zadań. Pobierz ją za darmo ze strony www.wunderlist.com.","twitter_sharing_placeholder":"Korzystam z aplikacji @Wunderlist mojej wspaniałej i łatwej w obsłudze listy zadań. Pobierz ją za darmo ze strony www.wunderlist.com","tutorial_welcome_notes_title":"Notatki...","tutorial_welcome_notes_text":"Odpinane notatki umożliwiają pracę w lub poza Wunderlist.","tutorial_welcome_notifications_title":"Centrum aktywności","tutorial_welcome_notifications_text":"Dostosuj sposób, w który mają być przekazywane powiadomienia. Zdecyduj, czy powiadomienia o zaproszeniach i aktualizacjach w listach udostępnionych mają być wysyłane na adres e-mail i wyświetlane jako powiadomienia na pulpicie, czy mają być widoczne tylko w centrum aktywności.","tutorial_welcome_sharing_title":"Zaproś znajomych","tutorial_welcome_sharing_text":"Teraz jeszcze łatwiej poprosić znajomych o pomocną dłoń.","tutorial_welcome_subtasks_title":"Zadania cykliczne, przypomnienia i podzadania","tutorial_welcome_subtasks_text":"Wunderlist udostępnia teraz zupełnie nowy widok szczegółowy, który umożliwia szybkie dodawanie zadań cyklicznych, przypomnień i podzadań.","tutorial_welcome_user_title":"Tutaj liczysz się tylko Ty!","tutorial_welcome_user_text":"Zmień ustawienia konta, sprawdź status synchronizacji i dostosuj tło.","tutorial_welcome_newsletter_subscribe":"Powiadamiaj mnie na e-mail o ważnych aktualizacjach i nowych funkcjach Wunderlist","tutorial_feature_pro_title":"Właściwości Wunderlist Pro","share_list_email_signature":"Wysłano z aplikacji Wunderlist – mojej wspaniałej i łatwej w obsłudze listy zadań!\\nMożesz jej używać za darmo na telefonie iPhone, tablecie iPad, w dowolnym systemie Android, na urządzeniach Mac, komputerach z systemem Windows oraz przez przeglądarkę internetową! – www.wunderlist.com","userbar_$_unsynced_item":"$ niezsynchronizowany element","userbar_$_unsynced_item_plural":"Niezsynchronizowane elementy: $","userbar_account_settings":"Ustawienia konta","userbar_change_background":"Zmień tło","userbar_last_synced_$":"Ostatnia synch.: $","userbar_no_internet_connection":"Offline","userbar_preferences":"Preferencje","userbar_sync_in_progress":"Synchronizacja...","userbar_user_name_for_unregistered_mode":"Załóż konto, aby zsynchronizować","whatsnew_title":"Co Nowego","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Komentarze","whatsnew_label_voice":"Nagranie głosowe","whatsnew_label_groupbilling":"Cennik produktów dla zespołów","whatsnew_copy_comments":"Przechowuj wszystkie konwersacje dotyczące zadań w jednym miejscu wraz z komentarzami dzięki wersji Wunderlist Pro. Wyraź opinię, zadaj pytanie lub dodaj swoje spostrzeżenia do dowolnego zadania, aby usprawnić komunikację z zespołem.","whatsnew_copy_pro_accounts":"Dodawanie komentarzy, przydzielanie zadań, dodawanie plików i tworzenie nieograniczonej liczby podzadań w wersji Wunderlist Pro pozwoli zrealizować wspólnie jeszcze więcej.","whatsnew_copy_voice":"Kliknij ikonę mikrofonu, aby nagrać zadanie, lub nagraj notatkę głosową i dołącz ją jako plik.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Załóż na próbę konto w aplikacji Wunderlist Pro i dodaj plik.","label_add_new_file":"Dodaj plik...","file_uploaded_unsuccessfully":"Przesyłanie pliku $ nie powiodło się. Spróbuj ponownie.","file_uploaded_failed":"Przesyłanie pliku nie powiodło się. Spróbuj ponownie.","file_uploaded_failed_deleted":"Przesłanie pliku $ nie powiodło się, ponieważ plik został usunięty z dysku twardego.","label_are_you_sure_permanently_delete_$_file":"Czy na pewno chcesz trwale usunąć plik „$” z Wunderlist?","upload_file_was_not_synced_yet":"Przeprowadź synchronizację","upload_file_not_synced_yet":"Nie zsynchronizowano","placeholder_add_comments":"Dodaj komentarz...","placeholder_reply":"Odpowiedz...","button_label_go_pro_to_comment":"Kup wersję Pro, aby mieć możliwość komentowania.","comment_request_failed":"Nie można załadować komentarzy. Spróbuj ponownie.","comment_load_earlier":"Wyświetl więcej komentarzy","coachmark_no_current_comments":"Nie ma jeszcze żadnych komentarzy.\\nRozpocznij konwersację tutaj,","coachmark_comments_not_available":"Nie można załadować wcześniejszych komentarzy. Spróbuj ponownie za chwilę.","notification_$_commented_on_$":"Komentarz użytkownika $1 z dnia $2","notification_$_and_$_commented_on_$":"W dniu $3 komentarz dodali użytkownicy $1 i $2.","notification_$_and_$_others_commented_on_$":"W dniu $3 komentarz dodał użytkownik $1 oraz inni użytkownicy ($2).","comments_requires_account":"Załóż na próbę konto w aplikacji Wunderlist Pro i dodaj komentarz.","non_pro_trial_free_limit_reached":"Osiągnięto limit darmowej wersji.","non_pro_trial_write_next_comment_$":"Następny komentarz będzie można dodać $.","non_pro_trial_upload_next_file_$":"Następny plik będzie można dodać $.","non_pro_trial_assign_next_to_do_$":"Następne zadanie będzie można przydzielić $.","button_signup_or_login":"Zarejestruj lub zaloguj się","button_it_is_completely_free":"Zupełnie za darmo","label_free_download_for_platforms":"Dostępne dla iPhone, iPad, Androida, Windows i Mac","label_wunderlist_to_get_things_done":"Ponad 5 milionów ludzi realizuje swoje zadania, korzystając z aplikacji Wunderlist.","label_people_who_use_wunderlist":"Zobacz, kto już używa Wunderlist:","label_wunderlist_uses":"Prowadzisz własny biznes, chcesz komuś przekazać listę zakupów lub po prostu chcesz zapisywać informacje z życia, Wunderlist to najlepsze narzędzie do zarządzania zadaniami dla Ciebie, Twojego zespołu i rodziny.","label_install_browser_extension":"Zainstaluj rozszerzenie przeglądarki","label_install_chrome_browser_extension":"Zainstaluj rozszerzenie dla Google Chrome","label_newsletter_signup":"Zapisz się do newslettera","label_know_upcoming_features":"Bądź jedną z pierwszych osób, która dowiaduje się o nowościach","label_learn_more_about_wunderlist":"Dowiedz się więcej o Wunderlist","label_learn_more":"Dowiedz się więcej...","label_your_email_address":"Twój adres e-mail","button_subscribe_to_newsletter":"Subskrybuj","button_sending_subscribe_to_newsletter":"Wysyłanie...","iyf4_usermenu_label":"Zdobądź wersję Wunderlist Pro za darmo!","iyf4_notification_label":"Zapraszaj przyjaciół, a otrzymasz darmowe konto Wunderlist Pro nawet na 12 miesięcy!","iyf4_notification_button_label_var_a":"Zapraszaj","iyf4_notification_button_label_var_b":"Zaproś znajomych","iyf4_notification_button_label_var_c":"Zdobądź wersję Wunderlist Pro za darmo!","iyf4_notification_button_label_var_d":"Poleć wersję Wunderlist Pro","iyf4_dialog_invite_headline_$":"Zapraszaj znajomych, a otrzymasz darmowe konto Wunderlist Pro nawet na 12 miesięcy!","iyf4_dialog_invite_headline_incentive":"12 miesięcy za darmo","iyf4_dialog_invite_incentive_$":"$ Wunderlist, obie osoby otrzymają 1 miesiąc bezpłatnego dostępu do konta Wunderlist Pro (maksymalny limit - 12 miesięcy).","iyf4_dialog_invite_incentive_terms":"Za każdego znajomego dołączającego do","iyf4_dialog_tweet":"Uwielbiam organizować swoje życie w Wunderlist. Na tej stronie otrzymasz bezpłatnie wersję Wunderlist Pro na miesiąc:","iyf_notification_label":"Poleć aplikację Wunderlist swoim przyjaciołom i otrzymaj darmowe konto Pro nawet na 12 miesięcy!","iyf_notification_button_label":"Kup wersję Pro!","iyf_dialog_step1_headline":"Zdobądź darmowe konto w wersji Pro","iyf_dialog_step1_subheadline":"w trzech prostych krokach","iyf_dialog_step1_instruction1_headline":"Zapraszaj swoich przyjaciół","iyf_dialog_step1_instruction1_subheadline":"przez Facebooka, Twittera lub mejlem","iyf_dialog_step1_instruction2_headline":"Twoi przyjaciele założą konta","iyf_dialog_step1_instruction2_subheadline":"Bądź czujny, gdy dołączą do Wunderlist.","iyf_dialog_step1_instruction3_headline":"Ciesz się darmowym kontem Pro","iyf_dialog_step1_instruction3_subheadline":"1 miesiąc za kązdego przyjaciela, który zaakceptuje zaproszenie","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 miesiąc za każdych $ przyjaciół, którzy zaakceptują zaproszenia.","iyf_dialog_step1_next_button":"Zapraszaj","iyf_dialog_step2_subheadline":"aby zdobyć darmowe konto Pro","iyf_dialog_step2_divider_label":"Udostępnij to łącze","iyf_dialog_share_on_facebook":"Udostępnij na Facebooku","iyf_dialog_post_on_twitter":"Tweetnij na Twitterze","iyf_dialog_email_placeholder":"Podaj adres e-mail...","iyf_dialog_more_placeholder":"Dodaj następny...","iyf_dialog_step3_headline":"Dziękujemy za polecenie","iyf_dialog_step3_subheadline":"Bądź czujny, gdy znajomi będą dołączać.","iyf_dialog_step3_success_headline":"Zaproszenia zostały wysłane pomyślnie.","iyf_dialog_step3_success_subheadline":"Wyślemy do Ciebie informację, gdy konto Pro zostanie uruchomione.","iyf_dialog_step3_invite_more":"Zaproś więcej osób","meta_title":"Wunderlist 2: Twoja piękna i prosta w użyciu lista zadań","meta_description":"Ponad 5 milionów ludzi korzysta z aplikacji Wunderlist do zarządzania zadaniami, listami zadań i realizowania swoich projektów. Wunderlist jest najlepszą listą zadań dla Ciebie, Twojego zespołu i rodziny.","meta_keywords":"6wunderkinder, produktywność, współpraca, zarządzanie zadaniami, zadanie, zadania, GTD, organizacja, plan, planowanie, lista zakupów, przypomnienia, podzadania, inteligentne listy, lista filmów, udostępniona lista, lista udostępniona","enable_desktop_notifications_text":"Kliknij “Potwierź” a następnie “Pozwól” w przeglądarce, aby włączyć powiadomienia.","notification_add_to_browser":"Trzymaj Wunderlist w zasięgu jednego kliknięcia. Dodaj aplikację internetową Wunderlist do przeglądarki teraz.","notification_add_extension_to_browser":"Szybko zapisuj ulubione treści ze stron internetowych bezpośrednio w Wunderlist. Zainstaluj rozszerzenie Wunderlist dla Chrome.","button_add_to_chrome":"Dodaj do Chrome","button_add_to_store_added":"Dodano","aria_activity_center_hint":"Centrum aktywności. Naciśnij klawisz Esc, aby zamknąć.","aria_exit_search":"Zakończ wyszukiwanie","aria_search":"Znajdź","aria_sort_list":"Sortuj listę","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"Menu użytkownika. Naciśnij klawisz Esc, aby zamknąć.","aria_assign_to_$":"Przydziel do użytkownika $","momentjs_months":"styczeń_luty_marzec_kwieceń_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień","momentjs_monthsShort":"sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru","momentjs_weekdays":"Niedziela_Poniedziałek_Wtorek_Środa_Czwartek_Piątek_Sobota","momentjs_weekdaysShort":"Nie_Pon_Wt_Śr_Czw_Pt_So","momentjs_weekdaysMin":"Ni_Po_Wt_Śr_Cz_Pt_So","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Dzisiaj o] LT","momentjs_calendar_nextDay":"[Jutro o] LT","momentjs_calendar_nextWeek":"dddd [o] LT","momentjs_calendar_lastDay":"[Wczoraj o] LT","momentjs_calendar_lastWeek":"[ostatni] dddd [o] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"w %s","momentjs_relativeTime_past":"%s temu","momentjs_relativeTime_s":"kilka sekund","momentjs_relativeTime_m":"minutę","momentjs_relativeTime_mm":"%d min.","momentjs_relativeTime_h":"godz.","momentjs_relativeTime_hh":"%d godz.","momentjs_relativeTime_d":"dzień","momentjs_relativeTime_dd":"%d dni","momentjs_relativeTime_M":"mies.","momentjs_relativeTime_MM":"%d mies.","momentjs_relativeTime_y":"rok","momentjs_relativeTime_yy":"%d lat"}
};
});
define('languages/portuguese',[],function() {
return {
'name': 'portuguese',
'data': {"actionbar_print_selected_item":"Imprimir item selecionado","actionbar_print_$_selected_items_plural":"Imprimir $ itens selecionados","actionbar_email_selected_item":"Enviar Item Selecionado","actionbar_email_$_selected_items_plural":"Enviar $ Itens Selecionados","actionbar_sort_alphabetically":"Ordenar alfabeticamente","actionbar_sort_due_date":"Ordenar por Data de Conclusão","actionbar_sort_assignee":"Ordenar por atribuição","api_error_account_already_exists":"Uma conta com este endereço de correio eletrónico já existe.","api_error_connection_error":"Whoops, parece que houve um problema ao aceder o servidor. Por favor, tente novamente.","api_error_general_error":"Whooops, o servidor não pôde ser contactado neste momento. Por favor, tente novamente.","api_error_incorrect_login":"O endereço de correio eletrónico ou palavra-passe digitada estão incorretos.","api_error_incorrect_password":"A palavra-passe digitada está incorreta","api_error_service_down":"Uma parte fundamental do serviço WunderAPI está inativa.","api_error_unknown":"Um erro inesperado e não processado ocorreu.","api_error_validation_error_unable_to_signup":"Não foi possível inscrevê-lo com o endereço de e-mail fornecido.","api_error_not_a_beta_user":"Não é um membro de Wunderlist Beta.","button_back":"Voltar","button_cancel":"Cancelar","button_confirm":"Confirmar","button_download":"Download","button_change":"Alterar","button_choose":"Escolher","button_connect":"Ligar","button_connect_facebook":"Conectar com o Facebook","button_continue":"Continuar","button_delete":"Apagar","button_disconnect":"Desligar","button_dismiss":"Dispensar","button_done":"Concluído ","button_edit":"Editar","button_get_started":"Vamos Começar!","button_go_back":"Voltar","button_go_back_sentence":"Voltar","button_learn_more":"Saiba mais","button_go_back_to_login":"Voltar para o Login","button_go_to_web_app":"Ir para a Web App","button_join_now":"Junta-te agora","button_log_in":"Entrar","button_log_in_with_$":"Entrar com $","button_log_out":"Sair","button_log_in_facebook":"Entrar com Facebook","button_next":"Seguinte","button_no":"Não","button_no_due_date":"Sem data de conclusão","button_ok":"OK","button_remove_due_date":"Remover Data de Conclusão","button_remove_reminder":"Remover Lembrete","button_email_list":"Enviar por Email","button_print_list":"Imprimir Lista","button_reset_password":"Redefinir Senha","button_retry":"Tentar novamente","button_save":"Guardar","button_send":"Enviar","button_sign_up":"Registe-se","button_sign_up_with_$":"Registe-se com $","button_sign_up_for_free":"Registe-se Gratuitamente","button_sign_up_facebook":"Registe-se através do Facebook","button_support_center":"Centro de Suporte","button_subscribe":"Incrível, Sim, Por favor!","button_try_again":"Tentar novamente","button_try_wunderlist":"Experimente Wunderlist","button_yes":"Sim","coachmark_all_list_empty":"Você não adicionou nenhum item ainda. Vá em frente, e acrescente algo.","coachmark_completed_list_empty":"Você não completou nenhum item ainda. Vá em frente, verifique alguns itens das suas listas!","coachmark_no_search_results":"Sem resultados da pesquisa","coachmark_sharing_invite_friends_heading":"Convide os Seus Amigos","coachmark_sharing_invite_friends_text_$":"Os seus amigos serão capazes de criar, remover e marcar os itens na lista \"$\".","coachmark_sharing_recent_no_contacts_heading":"Nenhum Contato Recente","coachmark_sharing_recent_no_contacts_text_$":"Digite um endereço de email ou pesquise os seus contatos. Uma vez adicionado, o(a) seu(sua) amigo(a) será capaz de criar, remover e marcar os itens na lista \"$\".","coachmark_assigned_to_me_list_empty":"Não há nada que lhe foi atribuído","coachmark_conversations_list_empty":"Não há conversas correntes.","coachmark_starred_list_empty":"Você não tem itens Com Estrela","coachmark_today_list_empty":"Parabéns! Você não tem nada pendente para hoje","coachmark_week_list_empty":"De férias? Você não tem nenhum item pendente nos próximos 7 dias","error_list_not_found":"A lista que você está a procurar não foi encontrada","error_share_not_created":"Um problema ocorreu durante a tentativa de compartilhar a lista. Por favor, tente novamente.","error_task_not_found":"O item que está a procurar não foi encontrado","error_page_not_found":"Página não encontrada","error_title_not_found":"Não encontrado","label_are_you_sure_permanently_delete_item":"Tem a certeza de que deseja apagar permanentemente este item?","label_are_you_sure_permanently_delete_item_plural":"Tem certeza de que deseja apagar permanentemente estes itens?","label_activity_center":"Centro de Atividades","label_are_you_sure_permanently_delete_$_list":"Tem certeza de que deseja apagar permanentemente a lista \"$\"?","label_are_you_sure_permanently_delete_$_task":"Tem certeza de que deseja apagar permanentemente o item \"$\"?","label_are_you_sure_permanently_delete_task_plural":"Tem certeza de que deseja apagar permanentemente estes itens?","label_are_you_sure_permanently_delete_$_subtask":"Tem certeza de que deseja apagar permanentemente a subtarefa \"$\"?","label_cant_undo":"Você não será capaz de desfazer esta ação.","label_completed_tasks_heading":"1 Item Completado","label_$_completed_tasks_heading_plural":"$ Itens Completados","label_connecting":"A ligar...","label_minisite_description_line_1":"Mantenha o controlo de tudo o que você quer fazer.","label_minisite_description_line_2":"Wunderlist está disponível gratuitamente em todas as principais plataformas.","label_minisite_share_deleted_or_no_access":"Parece que isto foi excluído ou você não tem mais acesso.","label_minisite_contact_sender_for_info":"Entre em contato com a pessoa que compartilhou esta lista com você para obter mais informações.","label_minisite_$_invited_you_to_the_list_$":"$1 convidou-te para a lista $2","label_minisite_empty_list_$":"Esta lista está atualmente vazia, ajude-os a começar. Carregue no botão Registo acima, e começe a adicionar itens à lista $.","label_day_0":"DOM","label_day_1":"SEG","label_day_2":"TER","label_day_3":"QUA","label_day_4":"QUI","label_day_5":"SEX","label_day_6":"SÁB","label_delete_file":"Apagar ficheiro","label_delete_list":"Apagar Lista","label_delete_task":"Apagar Item","label_delete_task_plural":"Apagar Itens","label_delete_subtask":"Apagar Subtarefa","label_due_$":"Para $","label_due_on":"Para $","label_due_date":"Data de Conclusão","label_email":"Email","label_every":"a cada","label_loading":"A carregar...","label_logging_out":"A Sair...","label_name":"Nome","label_newsletter":"Boletim Wunderlist","label_none":"Nenhum","label_notification":"Notificação","label_oops":"Ups!","label_or":"ou","label_password":"Senha","label_relative_date_today":"Hoje","label_relative_date_today_with_date":"Hoje, $","label_relative_date_today_mid_sentence":"Hoje","label_relative_date_tomorrow":"Amanhã","label_relative_date_tomorrow_with_date":"Amanha, $","label_relative_date_tomorrow_mid_sentence":"Amanhã","label_relative_date_yesterday":"Ontem","label_remind_me_at_$":"Lembrar-me às $","label_reminder":"Lembrete","label_reminder_message_$":"Lembrete: $","label_repeat_every_day":"Repetir todos os dias","label_repeat_every_week":"Repetir todas as semanas","label_repeat_every_month":"Repetir todos os meses","label_repeat_every_year":"Repetir todos os anoss","label_repeat_custom":"Personalizado...","label_repeat_day":"Todos os dias","label_repeat_day_$_plural":"A cada $ dias","label_repeat_month":"Todos os meses","label_repeat_month_$_plural":"A cada $ meses","label_repeat_week":"Todas as semanas","label_repeat_week_$_plural":"A cada $ semanas","label_repeat_never":"Nunca repetir","label_repeat_year":"Todos os anos","label_repeat_year_$_plural":"A cada $ anos","label_reset_password":"Redefinir Senha","label_rights_reserved":"Todos os Direitos Reservados","label_still_fetching_tasks":"Ainda a reunir tarefas...","label_sync":"Sincronizar","label_time_am":"AM","label_time_day_plural":"dias","label_time_week_plural":"semanas","label_time_month_plural":"meses","label_time_pm":"PM","label_time_year_plural":"anos","label_assign_to":"Atribuir a","label_unassigned":"Não atribuído","label_assign_me":"Mim","label_created_$":"Criado $","label_created_by_$":"Criado por $","label_created_on_$":"Criado a $","label_created_$_by_$":"Criado $1 por $2","label_created_by_$_on_$":"Criado por $1 a $2","label_completed_$":"Concluído $","label_completed_on_$":"Concluído a $","label_completed_$_by_$":"Concluído $1 por $2","label_completed_by_$_on_$":"Concluído a $1 por $2","login_add_photo_hint":"Personalize a conta Wunderlist enviando uma foto sua.","login_already_have_account":"Já possui uma conta?","login_email_not_valid":"Por favor introduza um endereço de email válido!","login_empty_name":"Por favor insira o seu nome.","login_empty_password":"Por favor introduza a senha.","login_password_not_valid":"Por favor insira uma senha válida.","login_empty_email":"Por favor introduza um email.","login_enter_name":"Que É Você","login_enter_password":"Estás quase pronto","login_enter_password_hint":"Escolha uma senha para concluir a configuração da sua conta Wunderlist.","login_forgot_password":"Esqueci a Senha","login_forgot_password_heading":"Esqueceu-se de alguma coisa?","login_forgot_password_text":"Introduza o endereço de email com que se registou, e nós vamos enviar-lhe um link de redefinição de senha.","login_no_account_yet":"Não possui uma conta?","login_password_changed":"Senha Atualizada","login_password_not_match":"As senhas digitadas não conferem.","login_password_reset_email_has_been_sent":"Por favor, verifique seu email para obter instruções de redefinição de senha.","login_reset_password_heading":"É tempo de criar a sua senha nova.","login_reset_password_success":"Basta clicar no botão abaixo e você estará pronto para voltar a entrar na sua Wunderlist.","login_reset_password_success_heading":"Parabéns! A sua senha foi alterada com sucesso.","login_password_too_short":"A senha deve conter pelo menos 5 caracteres.","login_sign_up":"Registe-se.","login_want_to_try_again":"Quer tentar novamente?","login_accept_terms":"Ao entrares aceitas os nossos $1 e $2.","logout_timeout_title":"Erro ao Sincronizar","logout_timeout_text":"Não podemos sincronizar a sua data. Tentar novamente ou fazer logout?","mobile_tutorial_welcome_to":"Bem-Vindo a","mobile_tutorial_wunderlist_subtitle":"A tua bela e simples lista de coisas a fazer","notifications_desktop_enable_heading":"Ativar Notificações de Desktop?","notifications_no_notifications":"Nenhuma Atividade","notifications_no_notifications_message":"Convites para listas compartilhadas e outras atividades aparecem aqui.","notifications_event_accept":"Aceitar","notifications_event_accepted":"Aceitada","web_upgrade_ie9_not_supported":"Wunderlist não suporta Internet Explorer 9. Por favor, faça upgrade para $ ou $ para uma melhor experiência.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Parece estares a utilizar um aparelho com ecrã de toque. Gostarias de ativar um interface otimizado para o toque? Podes sempre alterar isto nas definições da tua conta.","web_setting_enable_touch_for_$":"Ativar Toque para: $","web_settings_text_refresh_may_be_required":"Poderá ser necessário refrescar","rate_label":"Avalie Wunderlist","rate_app_heading":"Avalie e Comente sobre Wunderlist","rate_app_message_web_chrome":"Obrigado por usar o Wunderlist. Gostaríamos muito de ouvir o que você pensa! Por favor, diga-nos ao classificar e avaliar Wunderlist na Chrome Web Store ★★★★★","rate_app_button_later":"Lembre-me mais Tarde","rate_app_button_no":"Não, obrigado.","rate_app_button_yes":"Classifique Wunderlist","placeholder_add_due_today_to_inbox":"Adicionar um item a concluir hoje à \"Caixa de Entrada\"","placeholder_add_list":"Adicionar uma lista...","placeholder_add_subtask":"Adicionar uma subtarefa","placeholder_add_starred_to_inbox":"Adicionar um item \"Com Estrela\" à \"Caixa de Entrada\"","placeholder_add_task_to_$":"Adicionar um item a \"$\"...","placeholder_add_to_inbox":"Adicionar um item na \"Caixa de Entrada\"","placeholder_new_list":"Lista Nova","placeholder_remind_me":"Lembrar-me","placeholder_search":"Pesquisar...","placeholder_sharing_search":"Nome ou endereço de email...","placeholder_set_due_date":"Definir data de conclusão","browser_outdated_heading":"Uh oh, parece que seu navegador não está atualizado.","browser_outdated_update":"Por favor atualize o seu navegador","browser_outdated_explanation":"Wunderlist é construído usando a tecnologia melhor e mais recente. Para usar o Wunderlist, descaregue a última versão do seu navegador","prenamed_list_movies":"Filmes para Assistir","prenamed_list_private":"Privado","prenamed_list_shopping":"Compras","prenamed_list_wishlist":"Lista de Desejos","prenamed_list_work":"Trabalho","prenamed_list_read_later":"Ler mais tarde","settings_account_change_email":"Alterar Email...","settings_account_change_password":"Alterar Senha...","settings_account_delete_confirmation":"Escreva \"Eu tenho a certeza\"","settings_account_delete_confirmation_text":"Eu tenho a certeza","settings_account_drop_image":"Largar Imagem Aqui","settings_account_connect_facebook_account":"Ligar a sua conta Wunderlist ao Facebook torna a partilha de listas com os seus amigos simples, rápido e fácil.","settings_general_12_hour":"12 Horas","settings_general_24_hour":"24 Horas","settings_general_confirm_deletion":"Confirme antes de eliminar os itens","settings_general_create_new_tasks":"Adicionar itens novos","settings_general_date_format":"Formato da data","settings_general_language":"Idioma","settings_general_start_of_week":"Começo da semana","settings_general_start_of_week_sunday":"Domingo","settings_general_start_of_week_saturday":"Sábado","settings_general_start_of_week_monday":"Segunda","settings_general_sound_task_completion":"Ativar som ao concluir um item","settings_general_sound_new_notifications":"Ativar som para novas notificações","settings_general_print_done_tasks":"Imprimir itens completados","settings_general_tasks_bottom":"Final da Lista","settings_general_tasks_top":"Topo da Lista","settings_general_time_format":"Formato da Hora","settings_heading_team":"Negócio","settings_heading_about":"Sobre","settings_heading_account":"Conta","settings_heading_general":"Geral","settings_heading_notification":"Notificações","settings_heading_shortcuts":"Atalhos","settings_heading_sidebar":"Barra Lateral","settings_imprint":"Sobre nós","settings_visit_website":"Visite-nos","settings_get_help":"Obtenha Ajuda!","settings_notifications_notify_me_of_important_events_mobile":"Notifique-me de acontecimentos importantes por:","settings_notifications_notify_me_on_text":"Vamos notificá-lo sobre determinados eventos, como quando alguém aceita um convite para uma lista compartilhada, ou quando alguém adiciona ou conclui um item numa das suas listas compartilhadas.","settings_sidebar_smart_lists_title":"Mostrar estas Listas Inteligentes na Barra Lateral:","settings_sidebar_smart_lists_auto":"Auto","settings_sidebar_smart_lists_hidden":"Oculto","settings_sidebar_smart_lists_visible":"Visível","settings_sync_full":"Sincronizar Agora","settings_account_account_backup":"Cópia de segurança da conta","settings_account_restore_backup":"Restaurar Cópia de Segurança","settings_account_backup_description":"A Cópia de Segurança inclui todas as suas Listas, Tarefas, Subtarefas, Notas, Lembretes. Note que não inclui Listas compartilhadas consigo, Ficheiros, Comentários, Destinatários de listas compartilhadas e anteriores configurações do aplicativo.","settings_account_data_is_being_processed":"Espere! Os seus dados de backup estão sendo processados. Enviar-lhe-emos um e-mail quando tudo estiver completo.","settings_account_change_password_error":"Houve um problema ao atualizar a sua senha. Por favor, tente novamente.","settings_account_click_to_download_backup":"Carrega para descarregar","settings_account_create_backup":"Criar cópia de segurança","settings_account_current_password":"Palavra-passe atual","settings_account_delete_account":"Apagar conta","settings_account_delete_account_confirm":"Quer mesmo apagar a sua conta?","settings_account_delete_account_confirm_text":"Eliminar a sua conta irá apagar todas as suas listas e itens permanente e não pode ser desfeito.","settings_account_fetching_data":"Procurando dados ...","settings_account_new_password":"Nova palavra-passe","settings_account_repeat_new_password":"Repita a nova palavra-passe","settings_account_right_click_and_save_as":"Clique com o botão direito e guarde","settings_third_party_libraries":"Licenças","settings_background_credits":"Créditos","settings_notifications_email_enabled":"Notificações de Email","settings_notifications_desktop_enabled":"Notificações de Desktop","settings_notifications_push_enabled":"Notificações Push","settings_privacy_policy":"Política de Privacidade","settings_shortcuts_arrow_keys":"Teclas de Direção","settings_shortcuts_delete_item":"Apagar Listas e Itens Selecionados","settings_shortcuts_mark_done":"Marcar Item Selecionado como \"Completado\"","settings_shortcuts_mark_starred":"Marcar Item Selecionado como \"Com Estrela\"","settings_shortcuts_new_list":"Adicionar uma Lista Nova","settings_shortcuts_new_task":"Adicionar Item Novo","settings_shortcuts_open_all_smart_list":"Abrir Lista Inteligente \"Todas\"","settings_shortcuts_open_assigned_smart_list":"Abra a lista inteligente 'Atribuído a mim'","settings_shortcuts_open_conversations_smart_list":"Abrir lista inteligente 'Conversas'","settings_shortcuts_open_done_smart_list":"Abrir Lista Inteligente \"Concluído\"","settings_shortcuts_open_inbox":"Abrir Caixa de Entrada","settings_shortcuts_open_preferences":"Abrir Preferências ","settings_shortcuts_open_search":"Realçar Pesquisa","settings_shortcuts_open_starred_smart_list":"Abrir Lista Inteligente \"Com Estrela\"","settings_shortcuts_open_today_smart_list":"Abrir Lista Inteligente \"Hoje\"","settings_shortcuts_open_week_smart_list":"Abrir Lista Inteligente \"Semana\"","settings_shortcuts_reset":"Repor para Padrão","settings_shortcuts_select_all_tasks":"Seleccionar Tudo","settings_shortcuts_show_more":"Mostrar Mais","settings_shortcuts_hide":"Ocultar","settings_shortcuts_show_notifications":"Mostrar Centro de Atividades","settings_shortcuts_step_through_list":"Mover Entre Listas","settings_shortcuts_step_through_task":"Mover Entre Itens","settings_terms_of_use":"Termos de Uso","settings_account_header_free":"Grátis","settings_account_header_unregistered":"Regista-te","settings_account_header_account_$":"Conta $","settings_account_pro_description":"Adiciona comentários e ficheiro às tuas tarefas e delega-as aos teus colegas. Colaboração em equipas nunca foi mais fácil!","settings_account_register_wunderlist_description":"Regista no Wunderlist para sincronizares as tuas listas através de todos os teus dispositivos.","settings_manage_subscription_button":"Gerir subscrição","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Boa, voce é um $!","settings_account_header_pro_description":"Wunderlist Pro é a melhor maneira de manter os seus projectos sob controlo. Convide os seus amigos e colegas para colaborar e tornar os seus projectos reais.","settings_upgrade_to_pro_label":"Actualiza para $","settings_label_pro_account":"Conta Pro","settings_label_purchased_from_$":"Comprado de: $","settings_label_purchased_from_$_by_$":"Comprado em $1 por: $2","settings_label_expires_in_$":"Expira em $","setting_label_next_billing_date":"Próxima data de faturação:","setting_label_cancel_subscription":"Cancelar Subscrição","setting_heading_cancel_subscription":"Pretende mesmo cancelar a sua subscrição Wunderlist Pro?","setting_description_cancel_subscription":"Voce continuará a ter acesso a todos os seus dados, mas quando a sua subscrição expirar, só terá acesso às características padrão.","setting_label_cancel_subscription_success":"A tua subscrição foi cancelada com sucesso.","settings_label_invoices":"Facturas","settings_label_become_a_pro":"Torna-te um Pro","settings_payment_info_expires_$_relative":"Expira $","settings_payment_info_expires_$_absolute":"Expira em $1 dias: $2","settings_manage_subscription_error":"Lamentamos, um erro ocorreu enquanto tentava gerir a sua subscrição.","group_billing_packages_title":"Planos para todas as empresas","group_billing_packages_text":"Wunderlist para Empresas tem todas as características que você precisa para trabalhar melhor em equipe, a um preço acessível. Basta selecionar o plano certo para o seu negócio.","group_billing_plan_table_team_size":"Tamanho da equipa","group_billing_plan_table_price":"Preço","group_billing_plan_table_package_name_$":"$ Membros","group_billing_buy_button_label":"Comprar","group_billing_$_off":"$ de desconto","group_billing_larger_team_$":"Tens uma equipa maior? $","group_billing_contact_us":"Contata-nos!","group_billing_downgrade_error_$_$":"Para mudares para o plano de $1 membros, tens de remover $2 colega(s) de equipa da conta.","group_billing_manage_team":"Carrega aqui para gerir a tua equipa.","group_billing_button_label_manage":"Gerir","group_billing_team_plan_title":"O teu plano Wunderlist Pro","group_billing_team_plan_text":"Wunderlist Pro cresce junto com sua equipe! Adicionar membros é super fácil, basta digitar os seus endereços de e-mail abaixo. É simples quer já seja ou não um usuário do Wunderlist.","group_billing_upgrade_button_label":"Mudar plano","group_billing_upgrade_plan_button_label":"Melhorar","group_billing_Downgrade_plan_button_label":"Descer de categoria","group_billing_view_plans_button_label":"Ver planos","group_billing_manage_team_header":"Gerir Membros de Equipa","group_billing_email_address_input_placeholder":"Endereço de correio eletrónico","group_billing_manage_count_$_of_$":"$1 de $2","group_billing_cancel_team_plan":"Cancela o teu Wunderlist Pro Plan","group_billing_search_coachmark":"Para adicionar membros, basta introduzir o endereço de correio eletrónico dos teus colegas de equipa e eles serão adicionados ao teu plano Pro.","group_billing_cancel_header":"Tens a certeza que queres cancelar a tua subscrição Wunderlist Pro de equipa?","group_billing_change_plan_confirmation_$_$_$":"Mudar de planos é fácil. Se fores para o plano de $1 membros agora, ser-te-á cobrado $2 no próximo ciclo de pagamento a começar em $3. Tens a certeza que queres fazê-lo agora?","group_billing_cancel_text":"A tua subscrição Pro funcionará até ao final do mês e não te será cobrada novamente. Enquanto manténs a possibilidade de ver recursos Pro como anexar ficheiros às tarefas, não conseguirás fazer nenhuma alteração nelas.","error_goup_billing_user_already_pro":"Parece que esta pessoa já tem uma conta Wunderlist Pro. Oferece a prenda Pro a outro membro da equipa!","error_group_billing_wait_subscription_runs_out":"Tens de esperar até que a tua subscrição corrente expire antes de voltar a comprar. Expira em: $.","button_label_buy_wunderlist_for_business":"Ir para Wunderlist para Empresas","benefit_payment_service_unavailable":"Serviço de pagamento indisponível.","benefit_name":"Wunderlist Pro","benefit_header_$":"Torna-te um $","benefit_header_description":"Colaborações em equipas e negócios nunca foi tão fácil! Aqui tem 4 boas razões para inscrever-se para Wunderlist Pro","benefit_button_buy_monthly":"Mensalmente","benefit_assign_tasks_title":"Atribuir Tarefas","benefit_assign_tasks_description":"Facilmente delegar e acompanhar o status de tarefas entre colegas e amigos!","benefit_unlimited_subtasks_title":"Subtarefas Ilimitadas","benefit_unlimited_subtasks_decription":"Divida grandes tarefas em mais pequenas e fáceis de realizar, de forma a melhorar a sua produtividade - sem limitações.","benefit_comments_title":"Comentários","benefit_comments_description":"Começa uma conversa com os teus parceiros de equipa sobre qualquer uma das tuas tarefas. Deixa reação, coloca uma questão ou acrescenta alguma informação extra.","benefit_backgrounds_update_$":"Para utilizar os nossos novos planos de fundo, por favor, faça upgrade à sua conta.","benefit_additional_backgrounds_title":"Novos planos de fundo","benefit_additional_backgrounds_description":"Descobre 8 novos belos panos de fundo para personalizar o Wunderlist da forma que mais gostas!","benefit_files_title":"Ficheiros","benefit_files_description":"Adiciona ficheiros às tuas tarefas e partilha-as com os teus parceiros de equipa.","benefit_coming_soon":"Brevemente","benefit_assign_become_pro":"Atribui tarefas a colegas de trabalho com Wunderlist","benefit_label_accept_terms":"Ao comprar uma subscrição Wunderlist Pro, você aceita $1 e $2.","benefit_label_need_more_subtasks":"Precisa de mais sub-tarefas?","sharing_connect_facebook_sharing":"Conecte sua conta Wunderlist com o Facebook para facilmente convidar seus amigos.","sharing_facebook_apprequest_message_$user_$list":"\"$1\" gostaria de compartilhar a lista \"$2\" com você","sharing_invite":"Convidar Pessoas","sharing_invite_friends":"Convidar Amigos","sharing_inviting_requires_account":"Registe-se para convidar seus amigos e colegas para suas listas.","sharing_leave_action":"Tem certeza de que quer sair desta lista?","sharing_leave_button":"Deixar Lista Compartilhada","sharing_list_members":"Membros da Lista","sharing_list_owner":"Proprietario","sharing_list_pending_member":"Pendente","sharing_tab_recents":"Recente","sharing_shared_with_you_by":"Compartilhado com você por","smart_list_assigned_to_me":"Atribuído a mim","smart_list_conversations":"Conversas","smart_list_all":"Todas","smart_list_completed":"Concluído","smart_list_inbox":"Caixa de Entrada","smart_list_starred":"Marcadas","smart_list_today":"Hoje","smart_list_week":"Semana","label_tell_friends":"Conta aos teus amigos...","social_sharing_heading":"Ama Wunderlist? Diga aos seus amigos!","social_sharing_dialog_headline":"Gosta de Wunderlist?","social_sharing_dialog_danke":"Obrigado!","social_sharing_button_later":"Agora não","social_sharing_button_no_thanks":"Não, obrigado.","social_sharing_button_facebook":"Partilhar","social_sharing_button_follow_us":"Segue-nos","social_sharing_button_like_us":"Faz Like","social_sharing_heading_thanks":"Certifique-se de seguir-nos para todas as recentes notícias sobre Wunderlist.","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"Eu uso Wunderlist, a minha bela e simples lista de tarefas. Obtém-a gratuitamente em www.wunderlist.com","twitter_sharing_placeholder":"Eu uso @Wunderlist, a minha bela e simples lista de tarefas. Obtém-a agora gratuitamente em www.wunderlist.com","tutorial_welcome_notes_title":"Notas","tutorial_welcome_notes_text":"Notas destacáveis ​​permitem que você trabalhe dentro ou fora do Wunderlist.","tutorial_welcome_notifications_title":"Centro de Atividades","tutorial_welcome_notifications_text":"Personalize a forma como você quer ser notificado. Escolha receber convites e atualizações para suas listas compartilhadas através de email e notificações no computador ou ver tudo a partir do Centro de Atividades.","tutorial_welcome_sharing_title":"Convidar Amigos","tutorial_welcome_sharing_text":"Agora é ainda mais fácil de convidar os seus amigos e colegas para dar uma mãozinha.","tutorial_welcome_subtasks_title":"Itens Recorrentes, Lembretes e Subtarefas","tutorial_welcome_subtasks_text":"Wunderlist tem uma nova Vista Detalhada, que permite facilmente adicionar itens recorrentes, lembretes e subtarefas.","tutorial_welcome_user_title":"É tudo sobre voce!","tutorial_welcome_user_text":"Altere as configurações da sua conta, verifique o estado da sincronização e personalize o seu fundo.","tutorial_welcome_newsletter_subscribe":"Notifique-me de atualizações importantes e novos recursos de Wunderlist por email","tutorial_feature_pro_title":"Características do Wunderlist Pro","share_list_email_signature":"Enviado com Wunderlist - a minha bela e simples lista de tarefas\\nÉ grátis para iPhone, iPad, Android, Mac, Windows PC e Web! \\nwww.wunderlist.com","userbar_$_unsynced_item":"$ item(ns) não sincronizados","userbar_$_unsynced_item_plural":"$ Itens não sincronizados","userbar_account_settings":"Configurações da Conta","userbar_change_background":"Mudar o Fundo","userbar_last_synced_$":"Última Sincronização $","userbar_no_internet_connection":"Offline","userbar_preferences":"Preferências","userbar_sync_in_progress":"A Sincronizar...","userbar_user_name_for_unregistered_mode":"Registe-se para Sincronizar","whatsnew_title":"Novidades","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Comentários","whatsnew_label_voice":"Entrada de Voz","whatsnew_label_groupbilling":"Preço de equipa","whatsnew_copy_comments":"Mantém todas as conversas sobre afazeres num único sítio com Comentários no Wunderlist Pro. Deixa reação, coloca uma questão ou adiciona informação extra a qualquer das tuas tarefas para que melhores grandemente a comunicação dentro da tua equipa.","whatsnew_copy_pro_accounts":"Acrescenta comentários, atribui tarefas, acrescenta ficheiros e cria sub-tarefas ilimitadas com o Wunderlist Pro para alcançares mais, em conjunto.","whatsnew_copy_voice":"Carrega no ícone do microfone para ditares as tuas tarefas ou até gravares uma lembrança de voz e adicioná-la como ficheiro.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Inscreva-se para experimentar Wunderlist Pro e adicione um ficheiro.","label_add_new_file":"Adicionar um ficheiro...","file_uploaded_unsuccessfully":"Falhou o envio de $. Por favor tende de novo.","file_uploaded_failed":"O carregamento falhou. Por favor, volta a tentar.","file_uploaded_failed_deleted":"Carregamento de $ falhou, pois o ficheiro foi apagado do teu disco rígido.","label_are_you_sure_permanently_delete_$_file":"Tem a certeza que pretende remover permanentemente o ficheiro \"$\" de Wunderlist?","upload_file_was_not_synced_yet":"Por favor, sincroniza.","upload_file_not_synced_yet":"Não sincronizado","placeholder_add_comments":"Adicionar um comentário...","placeholder_reply":"Responder...","button_label_go_pro_to_comment":"Torna-te Pro para comentar","comment_request_failed":"Desculpa, não conseguimos carregar os Comentários. Por favor, tenta novamente.","comment_load_earlier":"Ver mais comentários","coachmark_no_current_comments":"Ainda sem comentários.\\nInicie a sua conversa aqui.","coachmark_comments_not_available":"Desculpa, não conseguimos carregar os comentários anteriores. Por favor, tenta novamente dentro de momentos.","notification_$_commented_on_$":"$1 comentou em $2","notification_$_and_$_commented_on_$":"$1 e $2 comentaram em $3","notification_$_and_$_others_commented_on_$":"$1 e $2 outros comentaram em $3","comments_requires_account":"Inscreva-se para experimentar Wunderlist Pro e adicione um Comentário.","non_pro_trial_free_limit_reached":"Atingiu o seu limite grátis!","non_pro_trial_write_next_comment_$":"Pode adicionar outro comentário $.","non_pro_trial_upload_next_file_$":"Pode adicionar outro Ficheiro $.","non_pro_trial_assign_next_to_do_$":"Pode adicionar outra tarefa $.","button_signup_or_login":"Registe-se ou Entrar","button_it_is_completely_free":"É completamente grátis","label_free_download_for_platforms":"Disponível grátis para iPhone, iPad, Android, Windows e Mac","label_wunderlist_to_get_things_done":"Mais de 5 milhões de pessoas usam Wunderlist para fazerem as coisas.","label_people_who_use_wunderlist":"Vê quem já usa Wunderlist","label_wunderlist_uses":"Quer esteja a organizar a sua empresa, a partilhar  uma lista de compras com um ente querido ou simplesmente mantendo o controle de sua vida diária, Wunderlist é a melhor lista de tarefas para você, sua equipa ou sua família.","label_install_browser_extension":"Instalar a extensão do navegador","label_install_chrome_browser_extension":"Instalar a extensão do navegador Chrome","label_newsletter_signup":"Registe-se na nossa newsletter","label_know_upcoming_features":"Seja um dos primeiros a saber sobre próximas funcionalidades","label_learn_more_about_wunderlist":"Saiba mais sobre Wunderlist","label_learn_more":"Saber mais...","label_your_email_address":"Seu enderece de email","button_subscribe_to_newsletter":"Subscrever","button_sending_subscribe_to_newsletter":"A enviar...","iyf4_usermenu_label":"Obtém gratuitamente Wunderlist Pro","iyf4_notification_label":"Obtém gratuitamente, até 12 meses, Wunderlist Pro ao convidares amigos!","iyf4_notification_button_label_var_a":"Começar a convidar","iyf4_notification_button_label_var_b":"Convidar amigos","iyf4_notification_button_label_var_c":"Obtém gratuitamente Wunderlist Pro","iyf4_notification_button_label_var_d":"Partilha Wunderlist Pro","iyf4_dialog_invite_headline_$":"Obtém gratuitamente, até $, Wunderlist Pro ao convidares amigos!","iyf4_dialog_invite_headline_incentive":"12 meses grátis","iyf4_dialog_invite_incentive_$":"$ Wunderlist, damos a ambos 1 mês grátis no Wunderlist Pro (até ao limite de 12 meses)","iyf4_dialog_invite_incentive_terms":"Por cada amigo que se junte","iyf4_dialog_tweet":"Adoro organizar a minha vida com Wunderlist. Ganha um mês grátis no Wunderlist Pro, aqui","iyf_notification_label":"Refere Wunderlist aos teus amigos e torna-te Pro gratuitamente até 12 meses!","iyf_notification_button_label":"Torna-te Pro!","iyf_dialog_step1_headline":"Obtém uma conta Pro grátis","iyf_dialog_step1_subheadline":"em 3 etapas fáceis","iyf_dialog_step1_instruction1_headline":"Começa a convidar os teus amigos","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter ou E-Mail","iyf_dialog_step1_instruction2_headline":"A inscrição dos teus amigos","iyf_dialog_step1_instruction2_subheadline":"Mantém-te firme enquanto eles se juntam a Wunderlist","iyf_dialog_step1_instruction3_headline":"Aprecia a tua conta Pro grátis","iyf_dialog_step1_instruction3_subheadline":"1 mês por cada amigo que aceite","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 mês por cada $ amigos que aceitem","iyf_dialog_step1_next_button":"Começa a convidar","iyf_dialog_step2_subheadline":"para obteres a tua Conta Pro grátis","iyf_dialog_step2_divider_label":"Partilha esta ligação","iyf_dialog_share_on_facebook":"Partilha no Facebook","iyf_dialog_post_on_twitter":"Tweet no Twitter","iyf_dialog_email_placeholder":"Introduza um endereço de email ","iyf_dialog_more_placeholder":"Adiciona outro...","iyf_dialog_step3_headline":"Obrigado por partilhar","iyf_dialog_step3_subheadline":"Mantém-te firme enquanto os teus amigos aderem","iyf_dialog_step3_success_headline":"Convites enviados com sucesso","iyf_dialog_step3_success_subheadline":"Notificar-te-emos assim que a tua conta Pro esteja pronta","iyf_dialog_step3_invite_more":"Convida mais pessoas","meta_title":"Wunderlist 2: Sua linda e simples app online de lista de tarefas","meta_description":"Over 5 million people already use Wunderlist to manage tasks, to-do lists, and to get things done.  Wunderlist is the best to-do list for you, your team or your family.","meta_keywords":"6wunderkinder, produtividade, colaboração, gerenciamento de tarefas, gerenciador de tarefas, coisas a fazer, coisas a fazer, lista,  tarefas, GTD, organizar, planear, lista de compras, lembretes, subtarefas, listas inteligentes, lista de compras, lista de filmes, lista compartilhada","enable_desktop_notifications_text":"Clique em \"Confirmar\" e depois \"Permitir\" em seu navegador para ativar as notificações.","notification_add_to_browser":"Mantenha Wunderlist apenas um clique de distância. Adicione o aplicativo Web Wunderlist ao seu navegador agora.","notification_add_extension_to_browser":"Guarde rapidamente todo o seu conteúdo favorito da web diretamente no Wunderlist. Instale a extensão do Chrome Add to Wunderlist agora.","button_add_to_chrome":"Adicionar ao Chrome","button_add_to_store_added":"Adicionado","aria_activity_center_hint":"Centro de Actividade. Faz escape para fechar.","aria_exit_search":"Sair de Pesquisa","aria_search":"Pesquisa","aria_sort_list":"Lista ordenada","aria_thank_you":"Esperamos que os nossos recursos de acessibilidade tenham funcionado bem para ti. Por favor envia alguns comentários relacionados com a nossa implementação de acessibilidade para support@wunderlist.com. Obrigado por escolheres Wunderlist.","aria_user_menu_hint":"Menu de utilizador. Faz escape para fechar.","aria_assign_to_$":"Atribuir a $","momentjs_months":"Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro","momentjs_monthsShort":"Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez","momentjs_weekdays":"Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado","momentjs_weekdaysShort":"Dom_Seg_Ter_Qua_Qui_Sex_Sáb","momentjs_weekdaysMin":"Do_2ª_3ª_4ª_5ª_6ª_Sá","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Hoje às] LT","momentjs_calendar_nextDay":"[Amanha às] LT","momentjs_calendar_nextWeek":"dddd [às] LT","momentjs_calendar_lastDay":"[Ontem às] LT","momentjs_calendar_lastWeek":"[última] dddd [at] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"em %s","momentjs_relativeTime_past":"%s atrás","momentjs_relativeTime_s":"alguns segundos","momentjs_relativeTime_m":"um minuto","momentjs_relativeTime_mm":"%d minutos","momentjs_relativeTime_h":"uma hora","momentjs_relativeTime_hh":"%d horas","momentjs_relativeTime_d":"um dia","momentjs_relativeTime_dd":"%d dias","momentjs_relativeTime_M":"um mês","momentjs_relativeTime_MM":"%d meses","momentjs_relativeTime_y":"um  ano","momentjs_relativeTime_yy":"%d anos"}
};
});
define('languages/portuguese-brazil',[],function() {
return {
'name': 'portuguese-brazil',
'data': {"actionbar_print_selected_item":"Imprimir Item Selecionado","actionbar_print_$_selected_items_plural":"Imprimir $ Itens Selecionados","actionbar_email_selected_item":"Enviar o Item Selecionado por E-mail","actionbar_email_$_selected_items_plural":"Enviar os $ Itens Selecionados por E-mail","actionbar_sort_alphabetically":"Ordenar Alfabeticamente","actionbar_sort_due_date":"Ordernar por Data Limite","actionbar_sort_assignee":"Ordenar por Usuário Atribuído","api_error_account_already_exists":"Já existe uma conta com este endereço de e-mail.","api_error_connection_error":"Ops! Ocorreu um problema ao acessar o servidor. Tente novamente.","api_error_general_error":"Ops! O servidor não pode ser acessado no momento. Tente novamente.","api_error_incorrect_login":"O e-mail ou a senha que você digitou está incorreto.","api_error_incorrect_password":"A senha que você digitou está incorreta.","api_error_service_down":"Uma parte essencial do serviço WunderAPI está inativa.","api_error_unknown":"Ocorreu um erro inesperado ou não processado.","api_error_validation_error_unable_to_signup":"Não fomos capazes de registrá-lo com o e-mail fornecido.","api_error_not_a_beta_user":"Você não é membro do programa Wunderlist beta.","button_back":"Voltar","button_cancel":"Cancelar","button_confirm":"Confirmar","button_download":"Download","button_change":"Alterar","button_choose":"Selecionar","button_connect":"Conectar","button_connect_facebook":"Conectar com o Facebook","button_continue":"Continuar","button_delete":"Excluir","button_disconnect":"Desconectar","button_dismiss":"Ignorar","button_done":"Concluir","button_edit":"Editar","button_get_started":"Vamos Começar","button_go_back":"Voltar","button_go_back_sentence":"Voltar","button_learn_more":"Saiba mais","button_go_back_to_login":"Voltar ao Início da Sessão","button_go_to_web_app":"Ir para o App da Web","button_join_now":"Registrar","button_log_in":"Entrar","button_log_in_with_$":"Entrar com $","button_log_out":"Sair","button_log_in_facebook":"Login com Facebook","button_next":"Proximo","button_no":"Não","button_no_due_date":"Sem data limite","button_ok":"OK","button_remove_due_date":"Remover Data Limite","button_remove_reminder":"Remover Lembrete","button_email_list":"Enviar Lista por E-mail","button_print_list":"Imprimir Lista","button_reset_password":"Redefinir Senha","button_retry":"Tentar Novamente","button_save":"Salvar","button_send":"Enviar","button_sign_up":"Registrar","button_sign_up_with_$":"Registrar com $","button_sign_up_for_free":"Registre-se Gratuitamente","button_sign_up_facebook":"Registrar com o Facebook","button_support_center":"Central de Suporte","button_subscribe":"Incrível! Sim, eu quero!","button_try_again":"Tentar Novamente","button_try_wunderlist":"Testar o Wunderlist","button_yes":"Sim","coachmark_all_list_empty":"Você não adicionou nenhum item ainda. Vá em frente e adicione algum.","coachmark_completed_list_empty":"Você ainda não concluiu nenhum item. Vá em frente, marque alguns itens para tirá-los da sua lista.","coachmark_no_search_results":"Nenhum resultado encontrado","coachmark_sharing_invite_friends_heading":"Convide Seus Amigos","coachmark_sharing_invite_friends_text_$":"Seus amigos poderão criar, remover e marcar itens na lista “$”.","coachmark_sharing_recent_no_contacts_heading":"Sem Contatos Recentes","coachmark_sharing_recent_no_contacts_text_$":"Digite um e-mail ou procure nos seus contatos. Uma vez adicionados, seus amigos poderão criar, remover e marcar itens na lista “$”.","coachmark_assigned_to_me_list_empty":"Não há nada atribuído a você","coachmark_conversations_list_empty":"Não há conversas.","coachmark_starred_list_empty":"Você não tem itens Com Estrela","coachmark_today_list_empty":"Parabéns! Você não tem nada a vencer ou vencido hoje.","coachmark_week_list_empty":"De férias? Você não tem itens vencendo nos próximos 7 dias","error_list_not_found":"A lista que você está procurando não foi encontrada","error_share_not_created":"Ocorreu um problema ao compartilhar sua lista. Tente novamente.","error_task_not_found":"O item que você está procurando não pôde ser localizado","error_page_not_found":"Página não encontrada","error_title_not_found":"Não Encontrado","label_are_you_sure_permanently_delete_item":"Tem certeza que deseja excluir permanentemente este item?","label_are_you_sure_permanently_delete_item_plural":"Tem certeza que deseja excluir permanentemente estes itens?","label_activity_center":"Central de Atividades","label_are_you_sure_permanently_delete_$_list":"Tem certeza que deseja excluir permanentemente a lista “$”?","label_are_you_sure_permanently_delete_$_task":"Tem certeza que deseja excluir permanentemente o item “$”?","label_are_you_sure_permanently_delete_task_plural":"Tem certeza que deseja excluir permanentemente estes itens?","label_are_you_sure_permanently_delete_$_subtask":"Tem certeza que deseja excluir permanentemente a subtarefa “$”?","label_cant_undo":"Você não poderá desfazer esta ação.","label_completed_tasks_heading":"1 Item Concluído","label_$_completed_tasks_heading_plural":"$ Itens Concluídos","label_connecting":"Conectando...","label_minisite_description_line_1":"Registre tudo o que você quer fazer.","label_minisite_description_line_2":"O Wunderlist está disponível gratuitamente em todas as principais plataformas.","label_minisite_share_deleted_or_no_access":"Parece que isto foi excluído ou você não tem acesso.","label_minisite_contact_sender_for_info":"Entre em contato com quem compartilhou esta lista para obter mais informações.","label_minisite_$_invited_you_to_the_list_$":"$1 o convidou para a lista $2","label_minisite_empty_list_$":"Esta lista está vazia, então ajude a começar. É só tocar no botão de registro acima e começar a adicionar itens à lista $.","label_day_0":"DOM","label_day_1":"SEG","label_day_2":"TER","label_day_3":"QUA","label_day_4":"QUI","label_day_5":"SEX","label_day_6":"SÁB","label_delete_file":"Excluir Arquivo","label_delete_list":"Excluir Lista","label_delete_task":"Excluir Item","label_delete_task_plural":"Excluir Itens","label_delete_subtask":"Excluir Subtarefa","label_due_$":"Data Limite: $","label_due_on":"Data Limite: $","label_due_date":"Data Limite","label_email":"E-mail","label_every":"A cada","label_loading":"Carregando...","label_logging_out":"Saindo...","label_name":"Nome","label_newsletter":"Notícias do Wunderlist","label_none":"Nenhum","label_notification":"Notificação","label_oops":"Opa!","label_or":"ou","label_password":"Senha","label_relative_date_today":"Hoje","label_relative_date_today_with_date":"Hoje, $","label_relative_date_today_mid_sentence":"hoje","label_relative_date_tomorrow":"Amanhã","label_relative_date_tomorrow_with_date":"Amanhã, $","label_relative_date_tomorrow_mid_sentence":"amanhã","label_relative_date_yesterday":"Ontem","label_remind_me_at_$":"Lembre-me às $","label_reminder":"Lembrete","label_reminder_message_$":"Um conselho de amigo: $","label_repeat_every_day":"Repetir todos os dias","label_repeat_every_week":"Repetir toda semana","label_repeat_every_month":"Repetir todo mês","label_repeat_every_year":"Repetir todo ano","label_repeat_custom":"Personalizado...","label_repeat_day":"Todos os dias","label_repeat_day_$_plural":"A cada $ dias","label_repeat_month":"Todo mês","label_repeat_month_$_plural":"A cada $ meses","label_repeat_week":"Toda semana","label_repeat_week_$_plural":"A cada $ semanas","label_repeat_never":"Nunca repetir","label_repeat_year":"Todo ano","label_repeat_year_$_plural":"A cada $ anos","label_reset_password":"Redefinir Senha","label_rights_reserved":"Todos os direitos reservados","label_still_fetching_tasks":"Ainda buscando as tarefas...","label_sync":"Sincronização","label_time_am":"AM","label_time_day_plural":"dias","label_time_week_plural":"semanas","label_time_month_plural":"meses","label_time_pm":"PM","label_time_year_plural":"anos","label_assign_to":"Atribuir a","label_unassigned":"Não Atribuído","label_assign_me":"Eu","label_created_$":"Criado $","label_created_by_$":"Criado por $","label_created_on_$":"Criado em $","label_created_$_by_$":"Criado $1 por $2","label_created_by_$_on_$":"Criado por $1 em $2","label_completed_$":"Concluído $","label_completed_on_$":"Concluído em $","label_completed_$_by_$":"Concluído em $1 por $2","label_completed_by_$_on_$":"Concluído por $1 em $2","login_add_photo_hint":"Personalize sua conta do Wunderlist enviando sua foto.","login_already_have_account":"Já tem uma conta?","login_email_not_valid":"Digite um e-mail válido.","login_empty_name":"Digite seu nome.","login_empty_password":"Digite uma senha.","login_password_not_valid":"Digite uma senha válida.","login_empty_email":"Digite um e-mail.","login_enter_name":"Quem é Você?","login_enter_password":"Você está Quase Terminando","login_enter_password_hint":"Escolha uma senha para finalizar a configuração da sua conta do Wunderlist.","login_forgot_password":"Esqueci a Senha","login_forgot_password_heading":"Esqueceu Algo?","login_forgot_password_text":"Digite o e-mail com o qual você se registrou, e nós enviaremos um e-mail com um link para redefinir a senha.","login_no_account_yet":"Não tem uma conta?","login_password_changed":"Senha Atualizada","login_password_not_match":"As senhas não são iguais.","login_password_reset_email_has_been_sent":"Verifique a sua caixa de e-mails para redefinir sua senha.","login_reset_password_heading":"É hora de criar sua nova senha.","login_reset_password_success":"É só clicar no botão abaixo e você estará pronto para voltar ao seu Wunderlist.","login_reset_password_success_heading":"Oba! Sua senha foi alterada com sucesso.","login_password_too_short":"A senha deve conter no mínimo 5 caracteres.","login_sign_up":"Registrar.","login_want_to_try_again":"Quer tentar novamente?","login_accept_terms":"Ao assinar, você aceita nossos $1 e $2.","logout_timeout_title":"Erro de Sincronização","logout_timeout_text":"Não conseguimos sincronizar seus dados. Você quer tentar novamente ou apenas sair?","mobile_tutorial_welcome_to":"Bem-vindo ao","mobile_tutorial_wunderlist_subtitle":"sua lista de tarefas simples e incrível","notifications_desktop_enable_heading":"Ativar Notificações na Área de Trabalho?","notifications_no_notifications":"Sem Atividades","notifications_no_notifications_message":"Os convites para listas compartilhadas e outras atividades aparecem aqui.","notifications_event_accept":"Aceitar","notifications_event_accepted":"Aceito","web_upgrade_ie9_not_supported":"O Wunderlist não é compatível com o Internet Explorer 9. Atualize para $ ou $ para uma experiência melhor.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Parece que você está usando um dispositivo com tela sensível ao toque. Gostaria de ativar uma interface otimizada para toque? Você pode alterar isto quando quiser nas configurações da sua conta.","web_setting_enable_touch_for_$":"Ativar Toque para: $","web_settings_text_refresh_may_be_required":"Pode ser necessário recarregar","rate_label":"Avalie o Wunderlist","rate_app_heading":"Avalie o Wunderlist","rate_app_message_web_chrome":"Obrigado por usar o Wunderlist. Nós adoraríamos ouvir o que você tem a dizer! Conte para a gente avaliando o Wunderlist na Chrome Web Store ★★★★★","rate_app_button_later":"Depois","rate_app_button_no":"Não, Obrigado","rate_app_button_yes":"Avaliar o Wunderlist","placeholder_add_due_today_to_inbox":"Adicionar um item com prazo para hoje à “Caixa de Entrada”...","placeholder_add_list":"Adicionar uma lista...","placeholder_add_subtask":"Adicionar uma subtarefa","placeholder_add_starred_to_inbox":"Adicionar um item com estrela à “Caixa de Entrada”...","placeholder_add_task_to_$":"Adicionar um item a “$”...","placeholder_add_to_inbox":"Adicionar um item à “Caixa de Entrada”","placeholder_new_list":"Nova Lista","placeholder_remind_me":"Lembrar","placeholder_search":"Pesquisar...","placeholder_sharing_search":"Nome ou e-mail...","placeholder_set_due_date":"Definir Data Limite...","browser_outdated_heading":"Hum, parece que seu navegador não está atualizado.","browser_outdated_update":"Atualize seu navegador","browser_outdated_explanation":"O Wunderlist foi feito com tecnologia de ponta. Para usar o Wunderlist, faça o download da versão mais recente do seu navegador.","prenamed_list_movies":"Filmes para Assistir","prenamed_list_private":"Privado","prenamed_list_shopping":"Compras","prenamed_list_wishlist":"Lista de Desejos","prenamed_list_work":"Trabalho","prenamed_list_read_later":"Ler Depois","settings_account_change_email":"Alterar E-mail...","settings_account_change_password":"Alterar Senha...","settings_account_delete_confirmation":"Digite \"Tenho certeza\"","settings_account_delete_confirmation_text":"Tenho certeza","settings_account_drop_image":"Arraste a Imagem até Aqui","settings_account_connect_facebook_account":"Ao conectar sua conta do Wunderlist com o Facebook fica muito mais simples, rápido e fácil compartilhar listas com seus amigos.","settings_general_12_hour":"12 Horas","settings_general_24_hour":"24 Horas","settings_general_confirm_deletion":"Confirmar antes de excluir itens","settings_general_create_new_tasks":"Adicionar novos itens","settings_general_date_format":"Formato de Data","settings_general_language":"Idioma","settings_general_start_of_week":"Início da Semana","settings_general_start_of_week_sunday":"Domingo","settings_general_start_of_week_saturday":"Sábado","settings_general_start_of_week_monday":"Segunda-feira","settings_general_sound_task_completion":"Ativar som ao concluir item","settings_general_sound_new_notifications":"Ativar som para novas notificações","settings_general_print_done_tasks":"Imprimir itens concluídos","settings_general_tasks_bottom":"No Final da Lista","settings_general_tasks_top":"No Topo da Lista","settings_general_time_format":"Formato da Hora","settings_heading_team":"Negócios","settings_heading_about":"Sobre","settings_heading_account":"Conta","settings_heading_general":"Geral","settings_heading_notification":"Notificações","settings_heading_shortcuts":"Atalhos","settings_heading_sidebar":"Barra Lateral","settings_imprint":"Informações","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"Notifique-me de eventos importantes por:","settings_notifications_notify_me_on_text":"Nós enviaremos notificações de certos eventos, como quando alguém aceitar um convite seu para uma lista compartilhada ou quando alguém adicionar ou concluir um item de uma lista compartilhada sua.","settings_sidebar_smart_lists_title":"Mostrar estas Listas Inteligentes na barra lateral:","settings_sidebar_smart_lists_auto":"Auto","settings_sidebar_smart_lists_hidden":"Oculta","settings_sidebar_smart_lists_visible":"Visível","settings_sync_full":"Sincronizar Agora","settings_account_account_backup":"Backup da Conta","settings_account_restore_backup":"Importar Dados de Backup","settings_account_backup_description":"Os dados de Backup incluem todas as suas Listas, Tarefas, Subtarefas, Notas e Lembretes. Lembre-se que não incluem as Listas que foram compartilhadas com você, Arquivos, Comentários, destinatários de Listas Compartilhadas e configurações anteriores do aplicativo.","settings_account_data_is_being_processed":"Aguarde um instante! Seus dados de backup estão sendo processados. Nós lhe enviaremos um e-mail quando tudo estiver concluído.","settings_account_change_password_error":"Houve um problema ao atualizar sua senha. Tente novamente.","settings_account_click_to_download_backup":"Clique para Baixar","settings_account_create_backup":"Criar Backup","settings_account_current_password":"Senha Atual","settings_account_delete_account":"Excluir Conta","settings_account_delete_account_confirm":"Você deseja realmente excluir sua conta?","settings_account_delete_account_confirm_text":"A exclusão da sua conta apagará todas as suas listas e itens permanentemente e não pode ser desfeita.","settings_account_fetching_data":"Buscando dados...","settings_account_new_password":"Nova Senha","settings_account_repeat_new_password":"Repita a Nova Senha","settings_account_right_click_and_save_as":"Clique com o botão direito do mouse e salve","settings_third_party_libraries":"Licenças ","settings_background_credits":"Créditos das imagens de fundo","settings_notifications_email_enabled":"Notificações por E-mail","settings_notifications_desktop_enabled":"Notificações no Desktop","settings_notifications_push_enabled":"Notificações via Push","settings_privacy_policy":"Política de Privacidade","settings_shortcuts_arrow_keys":"Setas do Teclado","settings_shortcuts_delete_item":"Excluir Lista ou Item Selecionado","settings_shortcuts_mark_done":"Marcar Itens Selecionados como \"Concluídos\"","settings_shortcuts_mark_starred":"Marcar os itens selecionados como \"Com Estrela\"","settings_shortcuts_new_list":"Adicionar uma Nova Lista","settings_shortcuts_new_task":"Adicionar um Novo Item","settings_shortcuts_open_all_smart_list":"Abrir a Lista Inteligente \"Todos\"","settings_shortcuts_open_assigned_smart_list":"Abrir a Lista Inteligente \"Atribuído a Mim\"","settings_shortcuts_open_conversations_smart_list":"Abrir a Lista Inteligente \"Conversas\"","settings_shortcuts_open_done_smart_list":"Abrir a Lista Inteligente \"Concluídos\"","settings_shortcuts_open_inbox":"Abrir Caixa de Entrada","settings_shortcuts_open_preferences":"Abrir Preferências","settings_shortcuts_open_search":"Foco na Pesquisa","settings_shortcuts_open_starred_smart_list":"Abrir a Lista Inteligente \"Com Estrela\"","settings_shortcuts_open_today_smart_list":"Abrir a Lista Inteligente \"Hoje\"","settings_shortcuts_open_week_smart_list":"Abrir a Lista Inteligente \"Semana\"","settings_shortcuts_reset":"Restaurar ao Padrão","settings_shortcuts_select_all_tasks":"Selecionar Todos os Itens","settings_shortcuts_show_more":"Mostrar Mais","settings_shortcuts_hide":"Ocultar","settings_shortcuts_show_notifications":"Mostrar Central de Atividades","settings_shortcuts_step_through_list":"Mover Entre Listas","settings_shortcuts_step_through_task":"Mover Entre Itens","settings_terms_of_use":"Termos de Uso","settings_account_header_free":"Grátis","settings_account_header_unregistered":"Registrar","settings_account_header_account_$":"Conta $","settings_account_pro_description":"Adicione comentários e arquivos às suas tarefas e as atribua a seus colegas de trabalho. A colaboração em equipes nunca foi tão fácil!","settings_account_register_wunderlist_description":"Registre-se no Wunderlist para sincronizar suas listas em todos os seus dispositivos.","settings_manage_subscription_button":"Gerenciar Inscrição","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Oba, voce é $!","settings_account_header_pro_description":"Wunderlist Pro é a melhor maneira de manter seus projetos sob controle. Convide seus amigos e colegas para trabalharem juntos e fazerem as coisas acontecer!","settings_upgrade_to_pro_label":"Atualizar para $","settings_label_pro_account":"Conta Pro","settings_label_purchased_from_$":"Comprado em: $","settings_label_purchased_from_$_by_$":"Comprado de $1 por: $2","settings_label_expires_in_$":"Expira em $","setting_label_next_billing_date":"Próxima Data de Cobrança:","setting_label_cancel_subscription":"Cancelar Inscrição","setting_heading_cancel_subscription":"Tem certeza que deseja cancelar sua assinatura do Wunderlist Pro?","setting_description_cancel_subscription":"Você continuará tendo acesso a todos os seus dados, mas quando sua inscrição expirar, você poderá usar somente as funcionalidades padrão do Wunderlist.","setting_label_cancel_subscription_success":"Sua inscrição foi cancelada com sucesso.","settings_label_invoices":"Faturas","settings_label_become_a_pro":"Torne-se um Pro","settings_payment_info_expires_$_relative":"Expira $","settings_payment_info_expires_$_absolute":"Expira em $1 dias: $2","settings_manage_subscription_error":"Desculpe, ocorreu um erro ao gerenciar sua inscrição.","group_billing_packages_title":"Planos para todo tipo de empresa","group_billing_packages_text":"O Wunderlist para Negócios fornece todos os recursos necessários para trabalhar melhor como uma equipe, a um preço acessível. Basta selecionar o plano certo para sua empresa agora mesmo.","group_billing_plan_table_team_size":"Tamanho da Equipe","group_billing_plan_table_price":"Preço","group_billing_plan_table_package_name_$":"$ Membros","group_billing_buy_button_label":"Comprar","group_billing_$_off":"$ de desconto","group_billing_larger_team_$":"Possui uma equipe maior? $","group_billing_contact_us":"Entre em contato!","group_billing_downgrade_error_$_$":"A fim de alterar para o plano de $1 membros, você deve remover $2 colega(s) da conta.","group_billing_manage_team":"Clique aqui para gerenciar sua equipe.","group_billing_button_label_manage":"Gerenciar","group_billing_team_plan_title":"Seu Plano Wunderlist Pro","group_billing_team_plan_text":"O Wunderlist Pro cresce junto com sua equipe! Adicionar membros é super fácil, basta digitar seus endereços de e-mail abaixo. É simples assim, mesmo que eles ainda não sejam usuários do Wunderlist.","group_billing_upgrade_button_label":"Alterar Plano","group_billing_upgrade_plan_button_label":"Upgrade","group_billing_Downgrade_plan_button_label":"Rebaixar","group_billing_view_plans_button_label":"Ver Planos","group_billing_manage_team_header":"Gerenciar Membros da Equipe","group_billing_email_address_input_placeholder":"Endereço de e-mail","group_billing_manage_count_$_of_$":"$1 de $2","group_billing_cancel_team_plan":"Cancelar Seu Plano Wunderlist Pro","group_billing_search_coachmark":"Para adicionar membros, é só informar os endereços de e-mail dos seus colegas, e eles serão adicionados ao seu plano Pro.","group_billing_cancel_header":"Tem certeza que deseja cancelar a assinatura do Wunderlist Pro da sua equipe?","group_billing_change_plan_confirmation_$_$_$":"É fácil alterar planos. Se você mudar para o plano de $1 membros agora, você será cobrado $2 no próximo ciclo de pagamentos que se inicia em $3. Tem certeza que deseja fazer isso?","group_billing_cancel_text":"Sua assinatura Pro vai até o final do mês, e você não será cobrado novamente. Embora você ainda poderá visualizar as funcionalidades Pro, como arquivos anexados a tarefas, você não poderá fazer mudanças.","error_goup_billing_user_already_pro":"Parece que esta pessoa já possui uma conta do Wunderlist Pro. Presenteie outro colega!","error_group_billing_wait_subscription_runs_out":"Você precisa aguardar até que sua assinatura atual termine para comprá-la novamente. Expira em: $.","button_label_buy_wunderlist_for_business":"Acessar o Wunderlist para Negócios","benefit_payment_service_unavailable":"Serviço de Pagamento Indisponível","benefit_name":"Wunderlist Pro","benefit_header_$":"Torne-se um $","benefit_header_description":"A colaboração em equipes e negócios nunca foi tão fácil! Aqui estão quatro boas razões para você se inscrever no Wunderlist Pro.","benefit_button_buy_monthly":"Mensal","benefit_assign_tasks_title":"Atribuir Tarefas","benefit_assign_tasks_description":"Delegue facilmente e monitore o estado de suas tarefas com seus colegas e amigos!","benefit_unlimited_subtasks_title":"Subtarefas Ilimitadas","benefit_unlimited_subtasks_decription":"Divida tarefas grandes em etapas pequenas e fáceis de realizar para melhorar a produtividade, sem limitações.","benefit_comments_title":"Comentários","benefit_comments_description":"Comece uma conversa com sua equipe sobre qualquer uma de suas tarefas. Dê feedback, pergunte algo ou adicione alguma ideia extra.","benefit_backgrounds_update_$":"Para usar nossas novas imagens de fundo, faça o upgrade para uma $","benefit_additional_backgrounds_title":"Novas Imagens de Fundo","benefit_additional_backgrounds_description":"Descubra oito novas imagens de fundo para personalizar o Wunderlist do jeito que você quiser!","benefit_files_title":"Arquivos","benefit_files_description":"Anexe arquivos às suas tarefas e compartilhe-os com sua equipe.","benefit_coming_soon":"Em Breve","benefit_assign_become_pro":"Atribua tarefas a seus colegas com o Wunderlist","benefit_label_accept_terms":"Ao comprar uma inscrição no Wunderlist Pro, você está aceitando $1 e $2.","benefit_label_need_more_subtasks":"Precisa de mais subtarefas?","sharing_connect_facebook_sharing":"Conecte a sua conta do Wunderlist com o Facebook para convidar seus amigos.","sharing_facebook_apprequest_message_$user_$list":"“$1” gostaria de compartilhar a lista “$2” com você","sharing_invite":"Convidar amigos","sharing_invite_friends":"Convidar Amigos","sharing_inviting_requires_account":"Registre-se para convidar seus amigos e colegas para suas listas.","sharing_leave_action":"Tem certeza de que gostaria de sair desta lista?","sharing_leave_button":"Sair da Lista Compartilhada","sharing_list_members":"Membros da Lista","sharing_list_owner":"Proprietário","sharing_list_pending_member":"Pendente","sharing_tab_recents":"Recentes","sharing_shared_with_you_by":"Compartilhada por","smart_list_assigned_to_me":"Atribuído a Mim","smart_list_conversations":"Conversas","smart_list_all":"Todos","smart_list_completed":"Concluídos","smart_list_inbox":"Caixa de Entrada","smart_list_starred":"Com Estrela","smart_list_today":"Hoje","smart_list_week":"Semana","label_tell_friends":"Conte aos seus amigos...","social_sharing_heading":"Adora o Wunderlist? Diga aos seus amigos!","social_sharing_dialog_headline":"Adora o Wunderlist?","social_sharing_dialog_danke":"Obrigado!","social_sharing_button_later":"Depois","social_sharing_button_no_thanks":"Não, obrigado","social_sharing_button_facebook":"Compartilhar","social_sharing_button_follow_us":"Siga","social_sharing_button_like_us":"Curta","social_sharing_heading_thanks":"Siga-nos para ficar sabendo de todas as novidades do Wunderlist.","social_sharing_button_twitter":"Tweetar","general_sharing_placeholder":"Eu estou usando o Wunderlist, minha lista de tarefas simples e incrível. Obtenha agora mesmo de graça em www.wunderlist.com","twitter_sharing_placeholder":"Eu estou usando o @Wunderlist, minha lista de tarefas simples e incrível. Obtenha gratuitamente agora mesmo em www.wunderlist.com","tutorial_welcome_notes_title":"Notas","tutorial_welcome_notes_text":"As notas destacáveis permitem trabalhar dentro e fora do Wunderlist.","tutorial_welcome_notifications_title":"Central de Atividades","tutorial_welcome_notifications_text":"Personalize o modo como você quer ser notificado. Escolha receber convites e atualizações em suas listas por e-mail e notificações na área de trabalho ou veja tudo na Central de Atividades.","tutorial_welcome_sharing_title":"Convidar Amigos","tutorial_welcome_sharing_text":"Agora ficou mais fácil convidar seus amigos e colegas para dar uma mãozinha.","tutorial_welcome_subtasks_title":"Itens Recorrentes, Lembretes e Subtarefas","tutorial_welcome_subtasks_text":"O Wunderlist agora possui uma nova Visualização Detalhada, que permite adicionar facilmente itens recorrentes, lembretes e subtarefas.","tutorial_welcome_user_title":"É Sobre Você!","tutorial_welcome_user_text":"Altere as configurações da sua conta, verifique o status da sincronização e personalize sua imagem de fundo.","tutorial_welcome_newsletter_subscribe":"Notifique-me de atualizações importantes e novos recursos no Wunderlist por e-mail","tutorial_feature_pro_title":"Recursos do Wunderlist Pro","share_list_email_signature":"Enviado com Wunderlist – Minha lista de tarefas simples e incrível\\nGratuito para iPhone, iPad, Android, Mac, Windows e Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ item não sincronizado","userbar_$_unsynced_item_plural":"$ itens não sincronizados","userbar_account_settings":"Configurações de Conta","userbar_change_background":"Alterar a Imagem de Fundo","userbar_last_synced_$":"Última sincronização: $","userbar_no_internet_connection":"Off-line","userbar_preferences":"Preferências","userbar_sync_in_progress":"Sincronizando...","userbar_user_name_for_unregistered_mode":"Registre-se para Sincronizar","whatsnew_title":"Novidades","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Comentários","whatsnew_label_voice":"Entrada de Voz","whatsnew_label_groupbilling":"Valores para Equipes","whatsnew_copy_comments":"Mantenha todas as suas conversas sobre as tarefas em um só lugar com Comentários no Wunderlist Pro. Dê feedback, pergunte algo ou adicione uma ideia nova a qualquer uma de suas tarefas para aprimorar a comunicação entre a sua equipe.","whatsnew_copy_pro_accounts":"Adicione comentários, atribua tarefas, adicione arquivos e crie subtarefas ilimitadas com o Wunderlist Pro para realizar mais, em conjunto.","whatsnew_copy_voice":"Clique no ícone do microfone para ditar suas tarefas ou ainda gravar uma nota de voz e anexá-la como arquivo.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Registre-se para experimentar o Wunderlist Pro e adicionar um Arquivo.","label_add_new_file":"Adicionar um arquivo...","file_uploaded_unsuccessfully":"O envio de $ falhou. Tente novamente.","file_uploaded_failed":"O envio falhou. Tente novamente.","file_uploaded_failed_deleted":"O envio de $ falhou porque o arquivo foi excluído do seu disco rígido.","label_are_you_sure_permanently_delete_$_file":"Tem certeza que você quer remover permanentemente o arquivo “$” do Wunderlist?","upload_file_was_not_synced_yet":"Sincronize","upload_file_not_synced_yet":"Não Sincronizado","placeholder_add_comments":"Adicionar um comentário...","placeholder_reply":"Responder...","button_label_go_pro_to_comment":"Seja Pro para comentar","comment_request_failed":"Desculpe, não foi possível carregar os comentários. Tente novamente.","comment_load_earlier":"Ver mais Comentários","coachmark_no_current_comments":"Ainda não há comentários.\\nInicie sua conversa aqui.","coachmark_comments_not_available":"Desculpe, não foi possível carregar os comentários anteriores. Tente novamente em alguns segundos.","notification_$_commented_on_$":"$1 comentou em $2","notification_$_and_$_commented_on_$":"$1 e $2 comentaram em $3","notification_$_and_$_others_commented_on_$":"$1 e $2 outros comentaram em $3","comments_requires_account":"Registre-se para experimentar o Wunderlist Pro e adicionar um Comentário.","non_pro_trial_free_limit_reached":"Você atingiu seu limite Gratuito!","non_pro_trial_write_next_comment_$":"Você pode adicionar outro Comentário $.","non_pro_trial_upload_next_file_$":"Você poderá adicionar outro Arquivo $.","non_pro_trial_assign_next_to_do_$":"Você pode Atribuir outra tarefa $.","button_signup_or_login":"Registrar ou entrar","button_it_is_completely_free":"É completamente grátis","label_free_download_for_platforms":"Disponível gratuitamente para iPhone, iPad, Android, Windows e Mac","label_wunderlist_to_get_things_done":"Mais de 5 milhões de pessoas usam o Wunderlist para colocar as coisas em prática.","label_people_who_use_wunderlist":"Veja quem já usa o Wunderlist:","label_wunderlist_uses":"Seja para organizar sua empresa, compartilhar uma lista de compras com seu amor ou simplesmente organizar sua vida diária, o Wunderlist é a melhor lista de tarefas para você, sua equipe ou sua família.","label_install_browser_extension":"Instale a extensão do navegador","label_install_chrome_browser_extension":"Instalar a Extensão do Navegador Chrome","label_newsletter_signup":"Assine nosso boletim","label_know_upcoming_features":"Esteja entre os primeiros a saber sobre os novos recursos","label_learn_more_about_wunderlist":"Saiba mais sobre o Wunderlist","label_learn_more":"Saiba mais...","label_your_email_address":"Seu endereço de e-mail","button_subscribe_to_newsletter":"Assinar","button_sending_subscribe_to_newsletter":"Enviando...","iyf4_usermenu_label":"Obtenha o Wunderlist Pro gratuitamente","iyf4_notification_label":"Ganhe até 12 meses gratuitos de Wunderlist Pro ao convidar seus amigos!","iyf4_notification_button_label_var_a":"Comece a convidar","iyf4_notification_button_label_var_b":"Convidar Amigos","iyf4_notification_button_label_var_c":"Obtenha o Wunderlist Pro gratuitamente","iyf4_notification_button_label_var_d":"Compartilhar Wunderlist Pro","iyf4_dialog_invite_headline_$":"Ganhe até $ de Wunderlist Pro ao convidar seus amigos!","iyf4_dialog_invite_headline_incentive":"12 meses gratuitos","iyf4_dialog_invite_incentive_$":"$ Wunderlist, vocês receberão 1 mês gratuito de Wunderlist Pro (até um limite de 12 meses)","iyf4_dialog_invite_incentive_terms":"Para cada amigo que se associar ao","iyf4_dialog_tweet":"Adoro organizar minha vida com o Wunderlist. Obtenha um mês de Wunderlist Pro gratuitamente aqui:","iyf_notification_label":"Recomende Wunderlist para seus amigos e obtenha gratuitamente até 12 meses de Pro!","iyf_notification_button_label":"Torne-se Pro!","iyf_dialog_step1_headline":"Obtenha uma conta Pro gratuita","iyf_dialog_step1_subheadline":"em três etapas simples","iyf_dialog_step1_instruction1_headline":"Comece a convidar seus amigos","iyf_dialog_step1_instruction1_subheadline":"por Facebook, Twitter ou e-mail","iyf_dialog_step1_instruction2_headline":"Seus amigos se registram","iyf_dialog_step1_instruction2_subheadline":"Aguarde enquanto eles se registram no Wunderlist","iyf_dialog_step1_instruction3_headline":"Aproveite sua contra Pro gratuita","iyf_dialog_step1_instruction3_subheadline":"1 mês para cada amigo que aceitar","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 mês para cada $ amigos que aceitarem","iyf_dialog_step1_next_button":"Comece a convidar","iyf_dialog_step2_subheadline":"para obter sua conta Pro gratuita","iyf_dialog_step2_divider_label":"Compartilhe este link","iyf_dialog_share_on_facebook":"Compartilhar no Facebook","iyf_dialog_post_on_twitter":"Compartilhar no Twitter","iyf_dialog_email_placeholder":"Insira um endereço de e-mail...","iyf_dialog_more_placeholder":"Adicionar outro...","iyf_dialog_step3_headline":"Obrigado por compartilhar","iyf_dialog_step3_subheadline":"Aguarde enquanto seus amigos se registram","iyf_dialog_step3_success_headline":"Convites enviados com sucesso","iyf_dialog_step3_success_subheadline":"Você será notificado assim que sua conta Pro estiver disponível.","iyf_dialog_step3_invite_more":"Convidar mais pessoas","meta_title":"Wunderlist 2: sua lista de tarefas simples e incrível","meta_description":"Mais de 5 milhões de pessoas já utilizam o Wunderlist para gerenciar tarefas, listas de tarefas e para colocar as coisas em prática. O Wunderlist é a melhor lista de tarefas para você, para sua equipe ou para sua família.","meta_keywords":"6wunderkinder, produtividade, colaboração, gerenciamento de tarefas, gerenciador de tarefas, tarefas, lista de afazeres, gtd, organizar, planejar, lista de compras, lembretes, subtarefas, listas inteligentes, lista de supermercado, lista de filmes, lista compartilhada","enable_desktop_notifications_text":"Cique em \"Confirmar\" e em \"Permitir\" em seu navegador para ativar as notificações.","notification_add_to_browser":"Mantenha seu Wunderlist a apenas um clique de distância. Adicione o aplicativo do Wunderlist ao seu navegador agora mesmo.","notification_add_extension_to_browser":"Salve rapidamente todo seu conteúdo favorito da web diretamente para o Wunderlist. Instale agora mesmo a extensão do Chrome Adicionar ao Wunderlist.","button_add_to_chrome":"Adicionar ao Chrome","button_add_to_store_added":"Adicionado","aria_activity_center_hint":"Central de Atividades. Pressione Esc para fechar.","aria_exit_search":"Sair da Pesquisa","aria_search":"Pesquisar","aria_sort_list":"Organizar Lista","aria_thank_you":"Esperamos que nossos recursos de acessibilidade tenham sido úteis para você. Envie feedback sobre nossa implementação de acessibilidade para support@wunderlist.com. Obrigado por escolher o Wunderlist.","aria_user_menu_hint":"Menu do usuário. Pressione Esc para fechar.","aria_assign_to_$":"Atribuir a $","momentjs_months":"Janeiro_Fevereiro_Março_Abril_Maio_Junho_Julho_Agosto_Setembro_Outubro_Novembro_Dezembro","momentjs_monthsShort":"Jan_Fev_Mar_Abr_Mai_Jun_Jul_Ago_Set_Out_Nov_Dez","momentjs_weekdays":"Domingo_Segunda-feira_Terça-feira_Quarta-feira_Quinta-feira_Sexta-feira_Sábado","momentjs_weekdaysShort":"Dom_Seg_Ter_Qua_Qui_Sex_Sáb","momentjs_weekdaysMin":"Dom_2ª_3ª_4ª_5ª_6ª_Sáb","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Hoje às] LT","momentjs_calendar_nextDay":"[Amanhã às] LT","momentjs_calendar_nextWeek":"dddd [às] LT","momentjs_calendar_lastDay":"[Ontem às] LT","momentjs_calendar_lastWeek":"[última] dddd [às] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"em %s","momentjs_relativeTime_past":"%s atrás","momentjs_relativeTime_s":"alguns segundos","momentjs_relativeTime_m":"um minuto","momentjs_relativeTime_mm":"%d minutos","momentjs_relativeTime_h":"uma hora","momentjs_relativeTime_hh":"%d horas","momentjs_relativeTime_d":"um dia","momentjs_relativeTime_dd":"%d dias","momentjs_relativeTime_M":"um mês","momentjs_relativeTime_MM":"%d meses","momentjs_relativeTime_y":"um ano","momentjs_relativeTime_yy":"%d anos"}
};
});
define('languages/russian',[],function() {
return {
'name': 'russian',
'data': {"actionbar_print_selected_item":"Печать выбранных","actionbar_print_$_selected_items_plural":"Печать $ выбранных","actionbar_email_selected_item":"Отправить по e-mail","actionbar_email_$_selected_items_plural":"Отправить $ по имейл","actionbar_sort_alphabetically":"Сортировка по-алфавиту","actionbar_sort_due_date":"Сортировка по сроку выполнения","actionbar_sort_assignee":"Сортировка по ответственному","api_error_account_already_exists":"Учетная запись с таким адресом email уже существует.","api_error_connection_error":"Упс, похоже, возникли проблемы с сервером. Пожалуйста, попробуйте еще раз.","api_error_general_error":"Упс, в настоящий момент сервер не отвечает. Пожалуйста, попробуйте еще раз.","api_error_incorrect_login":"Введенный пароль или адрес email неверны.","api_error_incorrect_password":"Введенный пароль неправильный.","api_error_service_down":"Ключевая часть сервиса WunderAPI в данный момент недоступна.","api_error_unknown":"Произошла непредвиденная ошибка","api_error_validation_error_unable_to_signup":"Мы не смогли авторизовать Вас с данным адресом email","api_error_not_a_beta_user":"Вы не член Wunderlist beta.","button_back":"Назад","button_cancel":"Отмена","button_confirm":"Подтвердить","button_download":"Загрузить","button_change":"Изменить","button_choose":"Выбрать","button_connect":"Подключиться","button_connect_facebook":"Подключиться с помощью Facebook","button_continue":"Продолжить","button_delete":"Удалить","button_disconnect":"Отключиться","button_dismiss":"Отклонить","button_done":"Готово","button_edit":"Изменить","button_get_started":"Давайте начнем","button_go_back":"Назад","button_go_back_sentence":"Назад","button_learn_more":"Узнать больше","button_go_back_to_login":"Назад к окну Входа","button_go_to_web_app":"Перейти к web-версии","button_join_now":"Присоединиться","button_log_in":"Войти","button_log_in_with_$":"Войти через $","button_log_out":"Выйти","button_log_in_facebook":"Войти через Facebook","button_next":"След.","button_no":"Нет","button_no_due_date":"Без срока","button_ok":"OK","button_remove_due_date":"Удалить дату выполнения","button_remove_reminder":"Удалить напоминание","button_email_list":"Отправить список по email","button_print_list":"Распечатать список","button_reset_password":"Сбросить пароль","button_retry":"Повторить","button_save":"Сохранить","button_send":"Отправить","button_sign_up":"Зарегистрироваться","button_sign_up_with_$":"Зарегистрироваться через $","button_sign_up_for_free":"Зарегистрироваться бесплатно","button_sign_up_facebook":"Рег-ция через Facebook","button_support_center":"Центр поддержки","button_subscribe":"Да, пожалуйста!","button_try_again":"Повторить","button_try_wunderlist":"Попробовать Wunderlist","button_yes":"Да","coachmark_all_list_empty":"Вы пока не добавили ни одной задачи. Давайте, создайте что-нибудь.","coachmark_completed_list_empty":"Вы еще не завершили ни одной задачи. Давайте, сделайте что-нибудь из Вашего списка!","coachmark_no_search_results":"Ничего не найдено","coachmark_sharing_invite_friends_heading":"Пригласить друзей","coachmark_sharing_invite_friends_text_$":"Ваши друзья получат возможность создавать, удалять и ставить пометки о выполнении в списке “$”.","coachmark_sharing_recent_no_contacts_heading":"Нет недавних контактов","coachmark_sharing_recent_no_contacts_text_$":"Введите адрес email или найдите в Ваших контактах. После добавления, Ваши друзья получат возможность создавать, удалять и ставить пометки о выполнении задачи в списке “$”.","coachmark_assigned_to_me_list_empty":"Порученных Вам нет","coachmark_conversations_list_empty":"Нет переписки.","coachmark_starred_list_empty":"У Вас нет задач со Звездочкой","coachmark_today_list_empty":"Поздравляем! У Вас нет задач на сегодня","coachmark_week_list_empty":"Вы в отпуске? У Вас нет задач на следующие 7 дней","error_list_not_found":"Списки, которые Вы ищете, не найдены","error_share_not_created":"Возникла ошибка при попытке поделиться списком. Пожалуйста, попробуйте еще раз.","error_task_not_found":"Задачи, которые Вы ищете, не найдены","error_page_not_found":"Страница не найдена","error_title_not_found":"Не найдено","label_are_you_sure_permanently_delete_item":"Вы уверены, что хотите навсегда удалить эту задачу?","label_are_you_sure_permanently_delete_item_plural":"Вы уверены, что хотите навсегда удалить эти задачи?","label_activity_center":"Центр Активности","label_are_you_sure_permanently_delete_$_list":"Вы уверены, что хотите навсегда удалить этот список “$”?","label_are_you_sure_permanently_delete_$_task":"Вы уверены, что хотите навсегда удалить эту задачу “$”?","label_are_you_sure_permanently_delete_task_plural":"Вы уверены, что хотите навсегда удалить эти задачи?","label_are_you_sure_permanently_delete_$_subtask":"Вы уверены, что хотите навсегда удалить эту подзадачу “$”? ","label_cant_undo":"Вы не сможете отменить это действие.","label_completed_tasks_heading":"1 выполненная задача","label_$_completed_tasks_heading_plural":"$ выполненных задач","label_connecting":"Соединение...","label_minisite_description_line_1":"Отслеживайте всё, что Вы собираетесь сделать.","label_minisite_description_line_2":"Wunderlist доступен бесплатно на всех популярных платформах.","label_minisite_share_deleted_or_no_access":"Похоже, что это было удалено или Вы больше не имеете к этому доступ.","label_minisite_contact_sender_for_info":"Пожалуйста, свяжитесь с человеком, который поделился этим списком с Вами, для дополнительной информации.","label_minisite_$_invited_you_to_the_list_$":"$1 пригласил Вас в список $2","label_minisite_empty_list_$":"Сейчас этот список пуст, помогите его заполнить. Просто нажмите ниже Зарегистрироваться и начните добавлять задачи в список $.","label_day_0":"Вс","label_day_1":"Пн","label_day_2":"Вт","label_day_3":"Ср","label_day_4":"Чт","label_day_5":"Пт","label_day_6":"Сб","label_delete_file":"Удалить файл","label_delete_list":"Удалить список","label_delete_task":"Удалить задачу","label_delete_task_plural":"Удалить задачи","label_delete_subtask":"Удалить подзадачу","label_due_$":"Выполнить до $","label_due_on":"Срок до $","label_due_date":"Срок выполнения","label_email":"Email","label_every":"каждый","label_loading":"Загрузка...","label_logging_out":"Выход...","label_name":"Имя","label_newsletter":"Новости Wunderlist","label_none":"Нет","label_notification":"Уведомление","label_oops":"Ой!","label_or":"или","label_password":"Пароль","label_relative_date_today":"Сегодня","label_relative_date_today_with_date":"Сегодня, $","label_relative_date_today_mid_sentence":"сегодня","label_relative_date_tomorrow":"Завтра","label_relative_date_tomorrow_with_date":"Завтра, $","label_relative_date_tomorrow_mid_sentence":"завтра","label_relative_date_yesterday":"Вчера","label_remind_me_at_$":"Напомнить мне в $","label_reminder":"Напоминание","label_reminder_message_$":"Просто дружеское напоминание: $","label_repeat_every_day":"Повторять каждый день","label_repeat_every_week":"Повторять каждую неделю","label_repeat_every_month":"Повторять каждый месяц","label_repeat_every_year":"Повторять каждый год","label_repeat_custom":"Настроить...","label_repeat_day":"Каждый день","label_repeat_day_$_plural":"Каждые $ дн.","label_repeat_month":"Ежемесячно","label_repeat_month_$_plural":"Каждые $ мес.","label_repeat_week":"Каждую неделю","label_repeat_week_$_plural":"Каждые $ нед.","label_repeat_never":"Никогда не повторять","label_repeat_year":"Каждый год","label_repeat_year_$_plural":"Каждые $ год.","label_reset_password":"Восстановить пароль","label_rights_reserved":"Все права защищены","label_still_fetching_tasks":"Загрузка задач...","label_sync":"Синхронизация","label_time_am":"AM","label_time_day_plural":"дн.","label_time_week_plural":"нед.","label_time_month_plural":"мес.","label_time_pm":"PM","label_time_year_plural":"г.","label_assign_to":"Поручить","label_unassigned":"Непорученные","label_assign_me":"Я","label_created_$":"Создано $","label_created_by_$":"Создал $","label_created_on_$":"Создано $","label_created_$_by_$":"Создано $1 пользователем $2","label_created_by_$_on_$":"Создал $1 $2","label_completed_$":"Завершено $","label_completed_on_$":"Завершено $","label_completed_$_by_$":"Завершено в $1 пользователем $2","label_completed_by_$_on_$":"Завершил $1 в $2","login_add_photo_hint":"Персонализируйте Вашу учетную запись Wunderlist, загрузив Вашу фотографию.","login_already_have_account":"Уже зарегистрированы?","login_email_not_valid":"Пожалуйста, введите корректный email","login_empty_name":"Пожалуйста, введите Ваше имя.","login_empty_password":"Пожалуйста, введите пароль.","login_password_not_valid":"Пожалуйста, введите правильный пароль.","login_empty_email":"Пожалуйста, введите email.","login_enter_name":"Кто Вы?","login_enter_password":"Вы почти закончили","login_enter_password_hint":"Введите пароль, чтобы закончить настройку Вашей учетной записи Wunderlist.","login_forgot_password":"Забыли пароль?","login_forgot_password_heading":"Забыли что-то?","login_forgot_password_text":"Введите email, указанный при регистрации, и мы вышлем на него ссылку для восстановления пароля.","login_no_account_yet":"Нет учетной записи?","login_password_changed":"Пароль обновлен","login_password_not_match":"Введенные Вами пароли не совпадают","login_password_reset_email_has_been_sent":"Пожалуйста, проверьте свой email для получения инструкций по смене пароля.","login_reset_password_heading":"Пришло время сменить пароль.","login_reset_password_success":"Просто нажмите кнопку ниже - все готово, чтобы войти обратно в Wunderlist.","login_reset_password_success_heading":"Ура! Пароль был успешно изменен.","login_password_too_short":"Пароль должен состоять как минимум из 5 символов.","login_sign_up":"Зарегистрироваться.","login_want_to_try_again":"Хотите попробовать еще раз?","login_accept_terms":"Регистрируясь, Вы соглашаетесь с $1 и $2.","logout_timeout_title":"Ошибка синхронизации","logout_timeout_text":"Мы не можем синхронизировать Ваши данные. Вы хотите повторить или просто выйти?","mobile_tutorial_welcome_to":"Добро пожаловать в","mobile_tutorial_wunderlist_subtitle":"Ваш удобный и простой список задач","notifications_desktop_enable_heading":"Разрешить уведомления на Рабочем столе?","notifications_no_notifications":"Нет активности","notifications_no_notifications_message":"Приглашения в общие списки и другие события отображаются здесь.","notifications_event_accept":"Принять","notifications_event_accepted":"Принято","web_upgrade_ie9_not_supported":"Wunderlist не поддерживает Internet Explorer 9. Пожалуйста, обновитесь до $ или $ для лучшего опыта использования.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Похоже Вы используйте устройство с функцией touch screen. Хотите оптимизировать интерфейс? Вы всегда можете изменить данный параметр в настройках.","web_setting_enable_touch_for_$":"Использовать тач для: $","web_settings_text_refresh_may_be_required":"Требуется обновление","rate_label":"Оценить Wunderlist","rate_app_heading":"Оценить и Оставить отзыв","rate_app_message_web_chrome":"Спасибо за использование Wunderlist! Нам важно знать Ваше мнение. Пожалуйста, присвойте рейтинг или оставьте отзыв о Wunderlist в магазине приложений Chrome Web Store ★★★★★","rate_app_button_later":"Позже","rate_app_button_no":"Нет, спасибо","rate_app_button_yes":"Оценить Wunderlist","placeholder_add_due_today_to_inbox":"Добавить сегодняшнюю задачу во \"Входящие\"...","placeholder_add_list":"Добавить список...","placeholder_add_subtask":"Добавить подзадачу","placeholder_add_starred_to_inbox":"Добавить отмеченную звездочкой задачу во \"Входящие\"...","placeholder_add_task_to_$":"Добавить задачу в “$”...","placeholder_add_to_inbox":"Добавить задачу во “Входящие”","placeholder_new_list":"Новый список","placeholder_remind_me":"Напомнить","placeholder_search":"Поиск...","placeholder_sharing_search":"Имя или адрес e-mail...","placeholder_set_due_date":"Установить срок","browser_outdated_heading":"Похоже Ваш браузер нуждается в обновлении","browser_outdated_update":"Пожалуйста, обновите Ваш браузер","browser_outdated_explanation":"Wunderlist использует самые новые технологии. Для использования Wunderlist необходимо обновить Ваш браузер до последней версии","prenamed_list_movies":"Фильмы к просмотру","prenamed_list_private":"Личное","prenamed_list_shopping":"Покупки","prenamed_list_wishlist":"Список желаний","prenamed_list_work":"Работа","prenamed_list_read_later":"Прочитать позже","settings_account_change_email":"Изменить email...","settings_account_change_password":"Изменить пароль","settings_account_delete_confirmation":"Напишите \"Я уверен\"","settings_account_delete_confirmation_text":"Я уверен","settings_account_drop_image":"Перетяните фото сюда","settings_account_connect_facebook_account":"Свяжите Вашу учетную запись Wunderlist с Facebook и Вы сможете просто, быстро и легко делиться списками со своими друзьями.","settings_general_12_hour":"12 часов","settings_general_24_hour":"24 часа","settings_general_confirm_deletion":"Подтверждение перед удалением задачи","settings_general_create_new_tasks":"Добавить новые задачи","settings_general_date_format":"Формат даты","settings_general_language":"Язык","settings_general_start_of_week":"Начало недели","settings_general_start_of_week_sunday":"Воскресенье","settings_general_start_of_week_saturday":"Суббота","settings_general_start_of_week_monday":"Понедельник","settings_general_sound_task_completion":"Включить звуковое оповещение по завершении задачи","settings_general_sound_new_notifications":"Разрешить звук для новых напоминаний","settings_general_print_done_tasks":"Печатать завершённые задачи","settings_general_tasks_bottom":"В конец списка","settings_general_tasks_top":"В начало списка","settings_general_time_format":"Формат времени","settings_heading_team":"Бизнес","settings_heading_about":"О программе","settings_heading_account":"Учетная запись","settings_heading_general":"Общие","settings_heading_notification":"Уведомления","settings_heading_shortcuts":"Ярлыки","settings_heading_sidebar":"Боковая панель","settings_imprint":"Контакты","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"Уведомлять меня о важных событиях с помощью:","settings_notifications_notify_me_on_text":"Мы уведомим Вас о событиях, таких как, кто-то принимает приглашение к общему списку, или когда кто-то добавляет или завершает задачу в одном из Ваших общих списков.","settings_sidebar_smart_lists_title":"Отображать Умные списки в боковой панели:","settings_sidebar_smart_lists_auto":"Авто","settings_sidebar_smart_lists_hidden":"Скрытый","settings_sidebar_smart_lists_visible":"Видимый","settings_sync_full":"Синхронизировать сейчас","settings_account_account_backup":"Резервная копия учетной записи","settings_account_restore_backup":"Импортировать сохраненные данные","settings_account_backup_description":"Сохраненные данные включают все списки, задачи, подзадачи, заметки и напоминания. Пожалуйста, обратите внимание, что эти данные не включают в себя те списки, в которые Вы были приглашены, файлы, комментарии, списки участников и предыдущие настройки приложения.","settings_account_data_is_being_processed":"Держитесь крепче! Запущен процесс по сохранению Ваших данных. Мы уведомим Вас по электронной почте об окончании процесса.","settings_account_change_password_error":"Возникла проблема при попытке обновить Ваш пароль. Пожалуйста, попробуйте ещё раз.","settings_account_click_to_download_backup":"Нажми, чтобы скачать","settings_account_create_backup":"Создать резервную копию","settings_account_current_password":"Текущий пароль","settings_account_delete_account":"Удалить учетную запись","settings_account_delete_account_confirm":"Вы действительно хотите удалить Вашу учетную запись?","settings_account_delete_account_confirm_text":"Удаление Вашей учетной записи безвозвратно удалит все Ваши списки и задачи. Это действие не может быть отменено.","settings_account_fetching_data":"Извлечение данных...","settings_account_new_password":"Новый пароль","settings_account_repeat_new_password":"Повторите новый пароль","settings_account_right_click_and_save_as":"Нажмите правую кнопку мыши и сохраните","settings_third_party_libraries":"Лицензии","settings_background_credits":"Дополнительные заслуги","settings_notifications_email_enabled":"Уведомления по e-mail","settings_notifications_desktop_enabled":"Уведомления на рабочем столе","settings_notifications_push_enabled":"Push уведомления","settings_privacy_policy":"Политика конфиденциальности ","settings_shortcuts_arrow_keys":"Стрелки","settings_shortcuts_delete_item":"Удалить выбранный Список или Задачу","settings_shortcuts_mark_done":"Отметить выбранную задачу как \"Завершено\"","settings_shortcuts_mark_starred":"Отметить выбранную задачу \"Звездочкой\"","settings_shortcuts_new_list":"Добавить новый список","settings_shortcuts_new_task":"Добавить новую задачу","settings_shortcuts_open_all_smart_list":"Открыть умный список \"Все\"","settings_shortcuts_open_assigned_smart_list":"Открыть Умный список \"Поручено мне\"","settings_shortcuts_open_conversations_smart_list":"Открыть умный список 'Переписки'","settings_shortcuts_open_done_smart_list":"Открыть умный список \"Завершенные\"","settings_shortcuts_open_inbox":"Открыть Входящие","settings_shortcuts_open_preferences":"Открыть настройки","settings_shortcuts_open_search":"Быстрый поиск","settings_shortcuts_open_starred_smart_list":"Открыть умный список \"Отмеченные\"","settings_shortcuts_open_today_smart_list":"Открыть умный список \"Задачи на сегодня\"","settings_shortcuts_open_week_smart_list":"Открыть умный список \"Задачи на неделю\"","settings_shortcuts_reset":"Восстановить стандартные значения","settings_shortcuts_select_all_tasks":"Выбрать все задачи","settings_shortcuts_show_more":"Показать еще","settings_shortcuts_hide":"Скрыть","settings_shortcuts_show_notifications":"Показать Центр Активности","settings_shortcuts_step_through_list":"Пролистать списки","settings_shortcuts_step_through_task":"Пролистать задачи","settings_terms_of_use":"Условия использования","settings_account_header_free":"Бесплатный","settings_account_header_unregistered":"Зарегистрироваться","settings_account_header_account_$":"$ аккаунт","settings_account_pro_description":"Добавьте комментарии и файлы к Вашим делам и поручите их коллегам. Работа в команде никогда не была настолько простой!","settings_account_register_wunderlist_description":"Зарегистрируйтесь в Wunderlist, чтобы синхронизировать все Ваши списки между различными устройствами.","settings_manage_subscription_button":"Управление подписками","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Ура, теперь у Вас $!","settings_account_header_pro_description":"Wunderlist Pro - это лучший способ держать Ваши проекты под контролем. Приглашайте Ваших друзей и коллег к сотрудничеству и достигайте целей вместе!","settings_upgrade_to_pro_label":"Обновить до $","settings_label_pro_account":"Pro аккаунт","settings_label_purchased_from_$":"Приобретено в: $","settings_label_purchased_from_$_by_$":"Приобретено $2 через $1","settings_label_expires_in_$":"Истекает $","setting_label_next_billing_date":"Дата следующей оплаты:","setting_label_cancel_subscription":"Отменить подписку","setting_heading_cancel_subscription":"Вы действительно хотите отменить Pro-подписку Wunderlist?","setting_description_cancel_subscription":"У Вас все еще остается доступ к данным, но Ваша подписка закончилась и Вам доступны только стандартные функции Wunderlist.","setting_label_cancel_subscription_success":"Ваша подписка была успешно отменена.","settings_label_invoices":"Cчета","settings_label_become_a_pro":"Обновить до Pro","settings_payment_info_expires_$_relative":"Истекает $","settings_payment_info_expires_$_absolute":"Истекает через $1 дн.: $2","settings_manage_subscription_error":"К сожалению, произошла ошибка при попытке изменить Вашу подписку.","group_billing_packages_title":"Тарифные планы для бизнеса","group_billing_packages_text":"Wunderlist для бизнеса предоставляет Вам все возможности для работы в  команде по доступной цене. Просто выберите соответствующий тариф для Вашего бизнеса.","group_billing_plan_table_team_size":"Размер команды","group_billing_plan_table_price":"Цена","group_billing_plan_table_package_name_$":"$ участников","group_billing_buy_button_label":"Приобрести","group_billing_$_off":"$ экономии","group_billing_larger_team_$":"У Вас большая команда? $","group_billing_contact_us":"Свяжитесь с нами!","group_billing_downgrade_error_$_$":"Для того, чтобы переключиться на тариф $1, необходимо удалить $2 участников из учетной записи.","group_billing_manage_team":"Кликните здесь, чтобы управлять своей командой.","group_billing_button_label_manage":"Управление","group_billing_team_plan_title":"Ваш тариф Wunderlist Pro","group_billing_team_plan_text":"Wunderlist Pro растет вместе с Вашей командой! Добавить новых членов очень легко - просто введите их адреса электронной почты ниже. Это очень просто, даже если они еще не используют Wunderlist.","group_billing_upgrade_button_label":"Изменить тариф","group_billing_upgrade_plan_button_label":"Обновить","group_billing_Downgrade_plan_button_label":"Понизить","group_billing_view_plans_button_label":"Просмотр тарифов","group_billing_manage_team_header":"Управление членами команды","group_billing_email_address_input_placeholder":"Адрес email","group_billing_manage_count_$_of_$":"$1 из $2","group_billing_cancel_team_plan":"Отменить Ваш тариф Wunderlist Pro","group_billing_search_coachmark":"Для добавления членов, просто введите адреса электронной почты Ваших товарищей по команде, и они будут добавлены в Ваш план Pro.","group_billing_cancel_header":"Вы уверены, что хотите отменить Pro-подписку Wunderlist?","group_billing_change_plan_confirmation_$_$_$":"Поменять тариф очень просто. Если Dы переходите на $1 тариф сейчас, то Вам будет выставлен счет $2 в следующем платежном периоде, начиная с $3. Вы уверены, что хотите сделать это сейчас?","group_billing_cancel_text":"Ваша Pro-подписка продлится до конца месяца, Вам не будет выставлен счет снова. В это время Вы все еще сможете пользоваться Pro-функциями, такими как, файлы, прикрепленные к задачам, но Вы не сможете вносить какие-либо изменения в них.","error_goup_billing_user_already_pro":"Похоже, это человек уже имеет Wunderlist Pro. Подарите Pro другому!","error_group_billing_wait_subscription_runs_out":"Вам придется подождать, пока не закончится Ваш текущий период оплаты. Период истекает:% @.","button_label_buy_wunderlist_for_business":"Перейти в Wunderlist для бизнеса","benefit_payment_service_unavailable":"Платежный сервис недоступен","benefit_name":"Wunderlist Pro","benefit_header_$":"Стать $","benefit_header_description":"Работа в команде и бизнесе никогда не была проще! Вот четыре очень веские причины, чтобы подписаться на Wunderlist Pro.","benefit_button_buy_monthly":"Ежемесячно","benefit_assign_tasks_title":"Поручить задачи","benefit_assign_tasks_description":"Легко и просто назначайте задачи коллегам и друзьям и отслеживайте их статус выполнения!","benefit_unlimited_subtasks_title":"Неограниченное количество подзадач","benefit_unlimited_subtasks_decription":"Разбивайте крупные задачи на более мелкие, достижимые без каких-либо ограничений для повышения продуктивности.","benefit_comments_title":"Комментарии","benefit_comments_description":"Начните переписку с Вашими коллегами. Выскажите свое мнение, задайте вопрос или добавьте дополнительное описание.","benefit_backgrounds_update_$":"Чтобы  получить доступ к новым фоновым рисункам, обновите свою учетную запись до $","benefit_additional_backgrounds_title":"Новые фоновые рисунки","benefit_additional_backgrounds_description":"Откройте для себя 8 новых красивых фоновых рисунков, чтобы обустроить Wunderlist так, как Вам нравится!","benefit_files_title":"Файлы","benefit_files_description":"Прикрепляйте файлы к Вашим задачам и делитесь ими с Вашими товарищами по команде.","benefit_coming_soon":"Скоро","benefit_assign_become_pro":"Назначайте задачи Вашим коллегам с помощью Wunderlist","benefit_label_accept_terms":"Покупая Pro-подписку Wunderlist, Вы принимаете $1 и $2.","benefit_label_need_more_subtasks":"Нужно больше подзадач?","sharing_connect_facebook_sharing":"Подключите Вашу учетную запись Wunderlist с помощью Facebook, чтобы легко приглашать друзей в общие списки.","sharing_facebook_apprequest_message_$user_$list":"“$1” хотел бы поделиться списком “$2” с Вами","sharing_invite":"Пригласить участников","sharing_invite_friends":"Пригласить друзей","sharing_inviting_requires_account":"Зарегистрируйтесь, чтобы пригласить Ваших друзей и коллег в список","sharing_leave_action":"Вы действительно хотите покинуть этот список?","sharing_leave_button":"Покинуть общий список","sharing_list_members":"Список участников","sharing_list_owner":"Владелец","sharing_list_pending_member":"Ожидание","sharing_tab_recents":"Недавние","sharing_shared_with_you_by":"С Вами поделился","smart_list_assigned_to_me":"Поручены мне","smart_list_conversations":"Переписки","smart_list_all":"Все","smart_list_completed":"Завершенные","smart_list_inbox":"Входящие","smart_list_starred":"Отмеченные","smart_list_today":"Сегодня","smart_list_week":"Неделя","label_tell_friends":"Расскажи своим друзьям...","social_sharing_heading":"Нравится Wunderlist? Расскажи друзьям!","social_sharing_dialog_headline":"Нравится Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"Позже","social_sharing_button_no_thanks":"Нет, спасибо","social_sharing_button_facebook":"Поделиться","social_sharing_button_follow_us":"Следите за нами","social_sharing_button_like_us":"Присоединяйтесь к нам","social_sharing_heading_thanks":"Не сомневайтесь, следя за нами Вы получите самые последние новости о Wunderlist.","social_sharing_button_twitter":"Твитнуть","general_sharing_placeholder":"Я пользуюсь Wunderlist - красивым и простым списком задач. Получить бесплатно можно на www.wunderlist.com","twitter_sharing_placeholder":"Я пользуюсь @Wunderlist - красивым и простым списком задач. Получить бесплатно можно на www.wunderlist.com","tutorial_welcome_notes_title":"Заметки","tutorial_welcome_notes_text":"Открепление заметок позволяет работать с ними как внутри приложения Wunderlist, так и вне его.","tutorial_welcome_notifications_title":"Центр Активности","tutorial_welcome_notifications_text":"Укажите способ, котором Вы будете уведомлены. Выберите получение приглашений и обновлений в Ваши совместные списки по электронной почте или просмотр этих действий из Центра Активности.","tutorial_welcome_sharing_title":"Пригласить друзей","tutorial_welcome_sharing_text":"Теперь  пригласить друзей или коллег для совместного проекта стало еще проще.","tutorial_welcome_subtasks_title":"Повторяющиеся задачи, подзадачи и напоминания","tutorial_welcome_subtasks_text":"Wunderlist представляет новую функцию - Детальный просмотр, которая позволит Вам с легкостью добавлять повторяющиеся задачи, подзадачи и напоминания.","tutorial_welcome_user_title":"Это всё о тебе!","tutorial_welcome_user_text":"Настраивайте Вашу учетную запись, проверяйте статусы синхронизации и меняйте фоновые изображения.","tutorial_welcome_newsletter_subscribe":"Уведомлять меня о важных обновлениях и новых функциях по электронной почте","tutorial_feature_pro_title":"Доступно в Wunderlist Pro","share_list_email_signature":"Отправлено из Wunderlist – красивого и простого списка задач.\\nБесплатно для iPhone, iPad, Android, Mac, Windows PC и Web! – www.wunderlist.com","userbar_$_unsynced_item":"$ не синхронизированная задача","userbar_$_unsynced_item_plural":"$ не синхронизированные задачи","userbar_account_settings":"Настройки учетной записи","userbar_change_background":"Изменить фоновое изображение","userbar_last_synced_$":"Синхронизировано $","userbar_no_internet_connection":"Автономно","userbar_preferences":"Настройки","userbar_sync_in_progress":"Идет синхронизация...","userbar_user_name_for_unregistered_mode":"Зарегистрируйтесь для синхронизации","whatsnew_title":"Что нового","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Комментарии","whatsnew_label_voice":"Голосовой ввод","whatsnew_label_groupbilling":"Цены","whatsnew_copy_comments":"Храните всю переписку в одном месте - в Комментариях Wunderlist Pro. Оставьте отзыв, задайте вопрос или добавьте дополнительное описание к любой части Вашей задачи для лучшего понимания внутри Вашей команды.","whatsnew_copy_pro_accounts":"Оставляйте комментарии, назначайте задания, добавляйте файлы и создавайте неограниченное количество подзадач с Wunderlist Pro, чтобы добиться большего, вместе.","whatsnew_copy_voice":"Нажмите на значок микрофона и добавьте задачу или создайте Аудио Заметку и прикрепите ее как файл.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Зарегистрируйся в Wunderlist Pro, чтобы добавлять файлы.","label_add_new_file":"Добавить файл...","file_uploaded_unsuccessfully":"Выгрузка $ не удалась. Пожалуйста, попробуйте ещё раз.","file_uploaded_failed":"Выгрузка не удалась. Пожалуйста, попробуйте еще раз.","file_uploaded_failed_deleted":"Выгрузка $ не удалась, т.к. исходный файл отсутствует на Вашем жестком диске.","label_are_you_sure_permanently_delete_$_file":"Вы уверены, что хотите безвозвратно удалить “$” из Wunderlist?","upload_file_was_not_synced_yet":"Пожалуйста, синхронизируйте","upload_file_not_synced_yet":"Не синхронизирован","placeholder_add_comments":"Добавить комментарий...","placeholder_reply":"Ответить...","button_label_go_pro_to_comment":"Перейти в Pro, чтобы комментировать","comment_request_failed":"Извините, мы не можем загрузить комментарии. Пожалуйста, попробуйте еще раз.","comment_load_earlier":"Больше комментариев","coachmark_no_current_comments":"Еще нет комментариев.\\nНачните переписку здесь.","coachmark_comments_not_available":"Извините, мы не можем загрузить предыдущие комментарии. Пожалуйста, попробуйте через некоторое время.","notification_$_commented_on_$":"$1 прокомментировал в $2","notification_$_and_$_commented_on_$":"$1 и $2 прокомментировали в $3","notification_$_and_$_others_commented_on_$":"$1 и $2 других прокомментировали в $3","comments_requires_account":"Зарегистрируйся в Wunderlist Pro, чтобы добавлять комментарии.","non_pro_trial_free_limit_reached":"Вы превысили бесплатный лимит!","non_pro_trial_write_next_comment_$":"Вы можете добавить комментарий $.","non_pro_trial_upload_next_file_$":"Вы сможете добавить файл $.","non_pro_trial_assign_next_to_do_$":"Вы можете поручить задачу $.","button_signup_or_login":"Зарегистрируйтесь или войдите","button_it_is_completely_free":"Абсолютно бесплатно","label_free_download_for_platforms":"Бесплатно доступно для iPhone, iPad, Android, Windows и Mac","label_wunderlist_to_get_things_done":"Более 5 миллионов людей используют Wunderlist для выполнения дел.","label_people_who_use_wunderlist":"Посмотри, кто уже пользуется Wunderlist:","label_wunderlist_uses":"Организуете ли свой бизнес, делитесь ли своим списком покупок с кем-то или ведете свой дневник, Wunderlist - лучший туду-менеджер для Вас, Вашей команды и Вашей семьи.","label_install_browser_extension":"Установить дополнения для браузеров","label_install_chrome_browser_extension":"Установить расширение для Chrome","label_newsletter_signup":"Зарегистрируйтесь, чтобы быть в курсе наших новостей","label_know_upcoming_features":"Будь первым, кто узнает о нововведениях","label_learn_more_about_wunderlist":"Узнать больше о Wunderlist","label_learn_more":"Узнать больше...","label_your_email_address":"Ваш адрес email","button_subscribe_to_newsletter":"Подписаться","button_sending_subscribe_to_newsletter":"Отправка...","iyf4_usermenu_label":"Получите Wunderlist Pro бесплатно","iyf4_notification_label":"Предложите Wunderlist своим друзьям и станьте Pro бесплатно на 12 месяцев!","iyf4_notification_button_label_var_a":"Начните приглашать","iyf4_notification_button_label_var_b":"Пригласите друзей","iyf4_notification_button_label_var_c":"Получите Wunderlist Pro бесплатно","iyf4_notification_button_label_var_d":"Поделитесь Wunderlist Pro","iyf4_dialog_invite_headline_$":"Предложите Wunderlist своим друзьям и станьте Pro бесплатно на $!","iyf4_dialog_invite_headline_incentive":"12 месяцев бесплатно","iyf4_dialog_invite_incentive_$":"$ Wunderlist, мы дарим Вам обоим 1 месяц бесплатного Wunderlist Pro (лимит - 12 месяцев)","iyf4_dialog_invite_incentive_terms":"Для каждого друга, кто присоединится","iyf4_dialog_tweet":"Я обожаю организовывать свою жизнь с помощью Wunderlist. Получите месяц бесплатного Wunderlist Pro здесь:","iyf_notification_label":"Предложите Wunderlist своим друзьям и станьте Pro бесплатно на 12 месяцев!","iyf_notification_button_label":"Станьте Pro!","iyf_dialog_step1_headline":"Получите бесплатно Pro-аккаунт","iyf_dialog_step1_subheadline":"в 3 простых шага","iyf_dialog_step1_instruction1_headline":"Пригласите своих друзей","iyf_dialog_step1_instruction1_subheadline":"через Facebook, Twitter или E-Mail","iyf_dialog_step1_instruction2_headline":"Ваши друзья зарегистрировались","iyf_dialog_step1_instruction2_subheadline":"подождите, пока они регистрируются в Wunderlist","iyf_dialog_step1_instruction3_headline":"Наслаждайтесь своим бесплатным Pro-аккаунтом","iyf_dialog_step1_instruction3_subheadline":"1 месяц за каждого друга, кто присоединился","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 месяц за каждого $, кто присоединился","iyf_dialog_step1_next_button":"Начните приглашать","iyf_dialog_step2_subheadline":"чтобы получить бесплатный Pro-аккаунт","iyf_dialog_step2_divider_label":"Поделиться этой ссылкой","iyf_dialog_share_on_facebook":"Поделиться через Facebook","iyf_dialog_post_on_twitter":"Твитнуть в Twitter","iyf_dialog_email_placeholder":"Добавить адрес email...","iyf_dialog_more_placeholder":"Добавить еще кого-нибудь...","iyf_dialog_step3_headline":"Спасибо, что поделились","iyf_dialog_step3_subheadline":"Отдохните, пока Ваши друзья присоединяются","iyf_dialog_step3_success_headline":"Приглашения успешно разосланы","iyf_dialog_step3_success_subheadline":"Мы уведомим Вас, когда Ваш Pro-аккаунт будет готов.","iyf_dialog_step3_invite_more":"Пригласить больше людей","meta_title":"Wunderlist 2: Ваш красивый и простой онлайн-список дел","meta_description":"Более 5 миллионов людей используют Wunderlist для управления задачами, составления списка дел, и последующего их выполнения. Wunderlist - лучший список дел для Вас, Вашей команды или Вашей семьи.","meta_keywords":"6wunderkinder, продуктивность, взаимодействие, менеджмент, менеджер, управление, список задач, список покупок, задачи, список, дела, организация, планирование, план, умный список, интеллектуальный список, список фильмов, общий список","enable_desktop_notifications_text":"Нажмите 'Принять' и затем 'Разрешить' в Вашем браузере, чтобы включить уведомления ","notification_add_to_browser":"Держите Ваш Wunderlist на расстоянии одного клика. Добавьте прямо сейчас Расширение Wunderlist в Ваш браузер.","notification_add_extension_to_browser":"Моментально сохраняйте интернет-страницы прямо в Wunderlist. Установите расширение Wunderlist для Chrome!","button_add_to_chrome":"Добавить в Chrome","button_add_to_store_added":"Добавлено","aria_activity_center_hint":"Центр Активности. Нажмите \"выйти\", чтобы закрыть.","aria_exit_search":"Выйти из поиска","aria_search":"Поиск","aria_sort_list":"Сортировать список","aria_thank_you":"Мы надеемся, что наши функции доступа оказались для Вас полезными. Пожалуйста, пришлите нам Ваш отзыв на support@wunderlist.com. Благодарим, что выбрали Wunderlist.","aria_user_menu_hint":"Меню пользователя. Нажмите \"выйти\", чтобы закрыть.","aria_assign_to_$":"Поручить $","momentjs_months":"Январь_Февраль_Март_Апрель_Май_Июнь_Июль_Август_Сентябрь_Октябрь_Ноябрь_Декабрь","momentjs_monthsShort":"Янв_Фев_Мар_Апр_Май_Июн_Июл_Авг_Сен_Окт_Ноя_Дек","momentjs_weekdays":"Воскресенье_Понедельник_Вторник_Среда_Четверг_Пятница_Суббота","momentjs_weekdaysShort":"Вос_Пон_Втор_Сред_Чет_Пят_Суб","momentjs_weekdaysMin":"Вс_Пн_Вт_Ср_Чт_Пт_Сб","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Сегодня в] LT","momentjs_calendar_nextDay":"[Завтра в] LT","momentjs_calendar_nextWeek":"dddd [в] LT","momentjs_calendar_lastDay":"[Вчера в] LT","momentjs_calendar_lastWeek":"[Посл.] dddd [в] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"в %s","momentjs_relativeTime_past":"%s назад","momentjs_relativeTime_s":"несколько секунд","momentjs_relativeTime_m":"минуту","momentjs_relativeTime_mm":"%d минут","momentjs_relativeTime_h":"час","momentjs_relativeTime_hh":"%d часов","momentjs_relativeTime_d":"день","momentjs_relativeTime_dd":"%d дней","momentjs_relativeTime_M":"месяц","momentjs_relativeTime_MM":"%d месяцев","momentjs_relativeTime_y":"год","momentjs_relativeTime_yy":"%d года"}
};
});
define('languages/swedish',[],function() {
return {
'name': 'swedish',
'data': {"actionbar_print_selected_item":"Skriv ut Markerad uppgift","actionbar_print_$_selected_items_plural":"Skriv ut $ markerade uppgifter","actionbar_email_selected_item":"Eposta markerade uppgifter","actionbar_email_$_selected_items_plural":"Eposta $ markerade uppgifter","actionbar_sort_alphabetically":"Sortera alfabetiskt","actionbar_sort_due_date":"Sortera efter förfallodag","actionbar_sort_assignee":"Sortera efter tilldelad","api_error_account_already_exists":"Ett konto med denna mejladress finns redan","api_error_connection_error":"Oj, det verkar ha uppstått ett problem vid anslutning till server. Vänligen försök igen.","api_error_general_error":"Oj, servern kan inte nås för tillfället. Vänligen försök igen.","api_error_incorrect_login":"Mejladressen eller lösenordet stämmer inte.","api_error_incorrect_password":"Lösenordet du angett stämmer inte.","api_error_service_down":"En nyckeldel av WunderAPI-tjänsten är nere för tillfället.","api_error_unknown":"Ett oväntat fel uppstod.","api_error_validation_error_unable_to_signup":"Vi kunde inte registrera dig med den angivna epostadress,","api_error_not_a_beta_user":"Du är inte medlem i Wunderlist beta,","button_back":"Tillbaka","button_cancel":"Avbryt","button_confirm":"Bekräfta","button_download":"Ladda ner","button_change":"Ändra","button_choose":"Välj","button_connect":"Koppla ihop","button_connect_facebook":"Koppla ihop med Facebook","button_continue":"Fortsätt","button_delete":"Radera","button_disconnect":"Koppla ifrån","button_dismiss":"Avbryt","button_done":"Klar","button_edit":"Redigera","button_get_started":"Börja använda Wunderlist","button_go_back":"Gå tillbaka","button_go_back_sentence":"Tillbaka.","button_learn_more":"Läs mer","button_go_back_to_login":"Tillbaka till inloggning","button_go_to_web_app":"Använd webbappen istället","button_join_now":"Gå med nu","button_log_in":"Logga in","button_log_in_with_$":"Logga in med $","button_log_out":"Logga ut","button_log_in_facebook":"Logga in med Facebook","button_next":"Nästa","button_no":"Nej","button_no_due_date":"Ingen förfallodag","button_ok":"OK","button_remove_due_date":"Ta bort förfallodagen","button_remove_reminder":"Ta bort påminnelsen","button_email_list":"E-posta lista","button_print_list":"Skriv ut lista","button_reset_password":"Återställ lösenordet","button_retry":"Försök igen","button_save":"Spara","button_send":"Skicka","button_sign_up":"Registrera","button_sign_up_with_$":"Registrera med $","button_sign_up_for_free":"Registrera Gratis","button_sign_up_facebook":"Registrera med Facebook","button_support_center":"Supportcenter","button_subscribe":"Coolt, ja, gärna!","button_try_again":"Försök igen","button_try_wunderlist":"Pröva Wunderlist","button_yes":"Ja","coachmark_all_list_empty":"Du har inte lagt till några uppgifter ännu. Börja att lägga till någonting.","coachmark_completed_list_empty":"Du har inte genomfört några uppgifter ännu. Kom igång, bocka av några uppgifter från dina listor!","coachmark_no_search_results":"Inga sökresultat","coachmark_sharing_invite_friends_heading":"Bjud in dina vänner","coachmark_sharing_invite_friends_text_$":"Dina vänner kommer att kunna skapa, avlägsna och bocka av uppgifter i listan “$”.","coachmark_sharing_recent_no_contacts_heading":"Inga Senaste kontakter","coachmark_sharing_recent_no_contacts_text_$":"Ange en epostadress eller sök igenom dina kontakter. När en vän är tillagd, så kan hon skapa, flytta eller bocka av uppgifter i listan “$”.","coachmark_assigned_to_me_list_empty":"Det finns inget fördelat till dig","coachmark_conversations_list_empty":"Det finns inga befintliga konversationer.","coachmark_starred_list_empty":"Du har inte några delade uppgifter","coachmark_today_list_empty":"Grattis! Du har inget förfallet eller med slutdatum idag","coachmark_week_list_empty":"På semester? Du har inga uppgifter med slutdatum inom de närmaste 7 dagarna","error_list_not_found":"Listan du söker efter kunde inte hittas","error_share_not_created":"Ett fel uppstod vid försök att dela din lista. Vänligen försök igen","error_task_not_found":"Uppgiften du söker efter kunde inte hittas","error_page_not_found":"Sidan hittades inte","error_title_not_found":"Inte hittad","label_are_you_sure_permanently_delete_item":"Är du säker på att du vill radera uppgiften?","label_are_you_sure_permanently_delete_item_plural":"Är du säker på att du vill radera uppgifterna permanent?","label_activity_center":"Aktivitetscenter","label_are_you_sure_permanently_delete_$_list":"Är du säker på att du vill radera listan “$”?","label_are_you_sure_permanently_delete_$_task":"Är du säker på att du vill radera uppgiften “$”?","label_are_you_sure_permanently_delete_task_plural":"Är du säker på att du vill ta bort uppgifterna för gott?","label_are_you_sure_permanently_delete_$_subtask":"Vill du verkligen radera deluppgift “$”?","label_cant_undo":"Du kommer inte att kunna ångra åtgärden.","label_completed_tasks_heading":"1 genomförd uppgift","label_$_completed_tasks_heading_plural":"$ genomförda uppgifter","label_connecting":"Ansluter...","label_minisite_description_line_1":"Håll koll på allt du vill göra","label_minisite_description_line_2":"Wunderlist är tillgängligt helt gratis på alla större plattformar.","label_minisite_share_deleted_or_no_access":"Det verkar som om den är raderad eller du inte längre har åtkomst.","label_minisite_contact_sender_for_info":"Vänligen kontakta personen som delade den här listan för mer information.","label_minisite_$_invited_you_to_the_list_$":"$1 bjöd in dig till listan $2","label_minisite_empty_list_$":"Den här lista är just nu tom, så hjälp dem att komma igång. Tryck helt enkelt på Registrera-knappen ovanför, och börja lägga till uppgifter till listan $.","label_day_0":"SÖN","label_day_1":"MÅN","label_day_2":"TIS","label_day_3":"ONS","label_day_4":"TOR","label_day_5":"FRE","label_day_6":"LÖR","label_delete_file":"Radera fil","label_delete_list":"Radera listan","label_delete_task":"Radera uppgift","label_delete_task_plural":"Radera uppgifter","label_delete_subtask":"Radera deluppgift","label_due_$":"Klar till $","label_due_on":"Förfaller den $","label_due_date":"Förfallodag","label_email":"E-post","label_every":"varje","label_loading":"Laddar...","label_logging_out":"Loggar ut...","label_name":"Namn","label_newsletter":"Wunderlist nyhetsbrev","label_none":"Ingen","label_notification":"Meddelande","label_oops":"Oops!","label_or":"eller","label_password":"Lösenord","label_relative_date_today":"Idag","label_relative_date_today_with_date":"Idag, $","label_relative_date_today_mid_sentence":"idag","label_relative_date_tomorrow":"Imorgon","label_relative_date_tomorrow_with_date":"Imorgon, $","label_relative_date_tomorrow_mid_sentence":"imorgon","label_relative_date_yesterday":"Igår","label_remind_me_at_$":"Påminn mig kl $","label_reminder":"Påminnelse","label_reminder_message_$":"En vänlig påminnelse om: $","label_repeat_every_day":"Upprepa varje dag","label_repeat_every_week":"Upprepa varje vecka","label_repeat_every_month":"Upprepa varje månad","label_repeat_every_year":"Upprepa varje år","label_repeat_custom":"Annan...","label_repeat_day":"Varje dag","label_repeat_day_$_plural":"Var $ dag","label_repeat_month":"Varje månad","label_repeat_month_$_plural":"Var $ månad","label_repeat_week":"Varje vecka","label_repeat_week_$_plural":"Var $ vecka","label_repeat_never":"Upprepa aldrig","label_repeat_year":"Varje år","label_repeat_year_$_plural":"Var $ år","label_reset_password":"Återställ lösenordet","label_rights_reserved":"Eftertryck förbjudes","label_still_fetching_tasks":"Hämtar fortfarande uppgifter...","label_sync":"Synkronisera","label_time_am":"Efter midnatt","label_time_day_plural":"dagar","label_time_week_plural":"veckor","label_time_month_plural":"månader","label_time_pm":"Före midnatt","label_time_year_plural":"år","label_assign_to":"Fördela till","label_unassigned":"Ej tilldelad","label_assign_me":"Jag","label_created_$":"Skapad $","label_created_by_$":"Skapad av $","label_created_on_$":"Skapad den $","label_created_$_by_$":"Skapad $1 av $2","label_created_by_$_on_$":"Skapad av $1 den $2","label_completed_$":"Slutförde $","label_completed_on_$":"Slutförd den $","label_completed_$_by_$":"Genomförde $1 av $2","label_completed_by_$_on_$":"Slutförd av $1 den $2","login_add_photo_hint":"Gör ditt Wunderlist-konto mer personligt genom att ladda upp en bild.","login_already_have_account":"Har du redan ett konto?","login_email_not_valid":"Ange en giltig e-postadress.","login_empty_name":"Ange ditt namn.","login_empty_password":"Ange ett lösenord.","login_password_not_valid":"Ange ett giltigt lösenord.","login_empty_email":"Vänligen ange en epostadress","login_enter_name":"Vem är du?","login_enter_password":"Snart där...","login_enter_password_hint":"Välj ett lösenord för att slutföra registreringen av ditt Wunderlist-konto.","login_forgot_password":"Glömt lösenord","login_forgot_password_heading":"Glömt något?","login_forgot_password_text":"Ange epostadressen som du har registrerat dig med, så skickar vi en länk för återställande av lösenordet,","login_no_account_yet":"Har du inget konto?","login_password_changed":"Lösenordet är uppdaterat","login_password_not_match":"Lösenorden du angav matchade inte.","login_password_reset_email_has_been_sent":"Kolla din mejl för instruktioner på hur du ersätter ditt lösenord.","login_reset_password_heading":"Det är dags att skapa ditt nya lösenord.","login_reset_password_success":"Klicka på knappen nedanför, så kan du sedan logga in i WUnderlist igen.","login_reset_password_success_heading":"Hurra! Ditt lösenord har ändrats.","login_password_too_short":"Ett giltigt lösenord måste innehålla minst 5 tecken.","login_sign_up":"Registrera.","login_want_to_try_again":"Vill du försöka igen?","login_accept_terms":"Genom att registrera dig så godkänner du våra $1 och $2.","logout_timeout_title":"Synkroniseringsfel","logout_timeout_text":"Vi kunde inte synkronisera dina data. Vill du försöka igen eller bara logga ut?","mobile_tutorial_welcome_to":"Välkommen till","mobile_tutorial_wunderlist_subtitle":"din vackra och enkla att-göra-lista","notifications_desktop_enable_heading":"Slå på notifieringar?","notifications_no_notifications":"Ingen aktivitet","notifications_no_notifications_message":"Inbjudningar till delade listor & andra aktiviteter visas här","notifications_event_accept":"Godkänn","notifications_event_accepted":"Godkänd","web_upgrade_ie9_not_supported":"Wunderlist stödjer inte Internet Explorer 9. Var vänlig installera $ eller $ för en bättre upplevelse.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Det ser ut som att du använder en enhet som har pekskärm. Skulle du vilja aktivera ett mer optimerat gränssnitt för denna enhet? Du kan alltid ändra detta i dina konto inställningar.","web_setting_enable_touch_for_$":"Aktivera touch för $","web_settings_text_refresh_may_be_required":"Uppdatering kan behövas","rate_label":"Betygsätt Wunderlist","rate_app_heading":"Betygsätt och bedöm Wunderlist","rate_app_message_web_chrome":"Tack för att du använder Wunderlist, vi skulle gärna vilja veta vad du tycker! Låt oss veta genom att betygsätta och lämna omdöme på Wunderlist i Chrome Web Store ★★★★★","rate_app_button_later":"Påminn mig senare","rate_app_button_no":"Nej tack","rate_app_button_yes":"Betygsätt Wunderlist","placeholder_add_due_today_to_inbox":"Lägg till uppgift med dagens förfallodatum i \"Inkorgen\"...","placeholder_add_list":"Skapa en ny lista...","placeholder_add_subtask":"Lägg till deluppgift","placeholder_add_starred_to_inbox":"Lägg till stjärnmärkt uppgift i \"inkorgen\"...","placeholder_add_task_to_$":"Lägg till uppgift i “$”...","placeholder_add_to_inbox":"Lägg till en uppgift i \"inkorgen\"","placeholder_new_list":"Ny lista","placeholder_remind_me":"Påminn mig","placeholder_search":"Sök...","placeholder_sharing_search":"Namn eller epostadress...","placeholder_set_due_date":"Ange förfallodag","browser_outdated_heading":"Oups, det ser ut som om din webbläsare inte är uppdaterad.","browser_outdated_update":"Vänligen uppdatera din webbläsare","browser_outdated_explanation":"Wunderlist är byggd med den senaste och bästa teknologin. För att använda Wunderlist, ladda ner den senaste versionen av din webbläsare","prenamed_list_movies":"Filmer att se","prenamed_list_private":"Privat","prenamed_list_shopping":"Att handla","prenamed_list_wishlist":"Önskelista","prenamed_list_work":"Arbete","prenamed_list_read_later":"Läs Senare","settings_account_change_email":"Ändra e-post...","settings_account_change_password":"Ändra lösenord...","settings_account_delete_confirmation":"Skriv \"Jag är säker\"","settings_account_delete_confirmation_text":"Jag är säker","settings_account_drop_image":"Släpp bilden här","settings_account_connect_facebook_account":"Koppla samman ditt Wunderlist-konto med Facebook för att enkelt och snabbt kunna dela listor med dina vänner.","settings_general_12_hour":"12 timmar","settings_general_24_hour":"24 timmar","settings_general_confirm_deletion":"Bekräfta innan uppgifter raderas","settings_general_create_new_tasks":"Lägg till nya uppgifter","settings_general_date_format":"Datumformat","settings_general_language":"Språk","settings_general_start_of_week":"Början av veckan","settings_general_start_of_week_sunday":"Söndag","settings_general_start_of_week_saturday":"Lördag","settings_general_start_of_week_monday":"Måndag","settings_general_sound_task_completion":"Aktivera ljud vid uppgifts genomförande","settings_general_sound_new_notifications":"Aktivera ljud för nya påminnelser","settings_general_print_done_tasks":"Skriv ut genomförda uppgifter","settings_general_tasks_bottom":"Slutet av listan","settings_general_tasks_top":"Toppen av listan","settings_general_time_format":"Datumformat","settings_heading_team":"Företag","settings_heading_about":"Om","settings_heading_account":"Konto","settings_heading_general":"Allmänt","settings_heading_notification":"Påminnelser","settings_heading_shortcuts":"Genvägar","settings_heading_sidebar":"Sidofält","settings_imprint":"Utgivare","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"Meddela mig om viktiga händelser via:","settings_notifications_notify_me_on_text":"Vi meddelar dig vid särskilda tillfällen, som när någon accepterar din inbjudan till en delad lista, eller när någon lägger till eller slutför en uppgift i en av dina delade listor.","settings_sidebar_smart_lists_title":"Visa de här smarta listorna i sidofältet","settings_sidebar_smart_lists_auto":"Auto","settings_sidebar_smart_lists_hidden":"Dold","settings_sidebar_smart_lists_visible":"Synlig","settings_sync_full":"Synkronisera nu","settings_account_account_backup":"Kontobackup","settings_account_restore_backup":"Importera säkerhetskopia","settings_account_backup_description":"Säkerhetskopiering inkluderar data som dina Listor, Uppgifter, Deluppgifter, Noteringar and Påminnelser. Vänligen notera att följande inte är inkluderat: listor som du blivit tilldelad, Filer, Kommentarer, Delade listors mottagare samt tidigare applikations inställningar.","settings_account_data_is_being_processed":"Din säkerhetskopierade data bearbetas nu. Vi kommer skicka ett mail när det är klart.","settings_account_change_password_error":"Det uppstod ett problem vid uppdatering av lösenordet. Vänligen försök igen.","settings_account_click_to_download_backup":"Klicka för att ladda ned","settings_account_create_backup":"Skapa backup","settings_account_current_password":"Nuvarande lösenord","settings_account_delete_account":"Ta bort konto","settings_account_delete_account_confirm":"Vill du verkligen radera ditt konto?","settings_account_delete_account_confirm_text":"Radering av ditt konto innebär att alla listor och uppgifter tas bort, och inte kommer att gå att återfå.","settings_account_fetching_data":"Hämtar data…","settings_account_new_password":"Nytt lösenord","settings_account_repeat_new_password":"Bekräfta Nytt Lösenord","settings_account_right_click_and_save_as":"Högerklicka och spara","settings_third_party_libraries":"Licenser","settings_background_credits":"Bakgrundsinformation","settings_notifications_email_enabled":"E-postmeddelanden","settings_notifications_desktop_enabled":"Notifieringar","settings_notifications_push_enabled":"Push notifiering","settings_privacy_policy":"Sekretespolicy","settings_shortcuts_arrow_keys":"Piltangenter","settings_shortcuts_delete_item":"Radera markerad lista eller uppgift","settings_shortcuts_mark_done":"Markera valda uppgifter som 'Genomförda'","settings_shortcuts_mark_starred":"Markera valda uppgifter som 'Stjärnmärkta'","settings_shortcuts_new_list":"Skapa en ny lista","settings_shortcuts_new_task":"Lägg till ny uppgift...","settings_shortcuts_open_all_smart_list":"Öppna smart lista 'Alla'","settings_shortcuts_open_assigned_smart_list":"Öppna 'Tilldelat till mig'-Smart lista","settings_shortcuts_open_conversations_smart_list":"Öppna smartlistan 'Konversationer'","settings_shortcuts_open_done_smart_list":"Öppna smart lista 'Genomförda'","settings_shortcuts_open_inbox":"Öppna Inkorg","settings_shortcuts_open_preferences":"Öppna Inställningar","settings_shortcuts_open_search":"Visa sökruta","settings_shortcuts_open_starred_smart_list":"Öppna smart lista 'Stjärnmärkta'","settings_shortcuts_open_today_smart_list":"Öppna smart lista 'Idag'","settings_shortcuts_open_week_smart_list":"Öppna smart lista 'Vecka'","settings_shortcuts_reset":"Återställ till förinställningar","settings_shortcuts_select_all_tasks":"Välj alla uppgifter","settings_shortcuts_show_more":"Visa mer","settings_shortcuts_hide":"Göm","settings_shortcuts_show_notifications":"Visa Aktivitetscenter","settings_shortcuts_step_through_list":"Steg-för-steg listor","settings_shortcuts_step_through_task":"Stega igenom uppgifter","settings_terms_of_use":"Användarvillkor","settings_account_header_free":"Gratis","settings_account_header_unregistered":"Registrera dig","settings_account_header_account_$":"$ konto","settings_account_pro_description":"Lägg till kommentarer och filer till dina uppgifter och tilldela de till dina kollegor. Samarbete har aldrig varit lättare!","settings_account_register_wunderlist_description":"Registrera dig för att låta Wunderlist synkronisera dina listor på alla dina enheter","settings_manage_subscription_button":"Hantera prenumeration","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Wow, du är ett $!","settings_account_header_pro_description":"Wunderlist är det bästa sättet att hålla koll på dina projekt. Bjud in vänner och kollegor för att samarbeta och få saker gjorda!","settings_upgrade_to_pro_label":"Uppgradera till $","settings_label_pro_account":"Pro-konto","settings_label_purchased_from_$":"Köpt från: $","settings_label_purchased_from_$_by_$":"Köpt från $1 av: $2","settings_label_expires_in_$":"Upphör om $","setting_label_next_billing_date":"Nästa debiteringsdatum:","setting_label_cancel_subscription":"Avbryt prenumeration","setting_heading_cancel_subscription":"VIll du verkligen avbryta din Wunderlist Pro-prenumeration?","setting_description_cancel_subscription":"Du har fortfarande tillgång till all din data, men när din prenumeration avslutas kommer du bara kunna använda Wunderlists standardfunktioner.","setting_label_cancel_subscription_success":"Din prenumeration är uppsagd.","settings_label_invoices":"Fakturor","settings_label_become_a_pro":"Bli Wunderlist Pro","settings_payment_info_expires_$_relative":"Upphör $","settings_payment_info_expires_$_absolute":"Upphör om $1 dagar: $2","settings_manage_subscription_error":"Tyvärr, ett fel inträffade vid hantering av din prenumeration.","group_billing_packages_title":"Prisplaner fōr alla företag","group_billing_packages_text":"Wunderlist för företag ger dig alla de funktioner som du behöver för att kunna jobba smartare som ett team till ett överkomligt pris. Välj den passande prisplanen för ditt företag nu.","group_billing_plan_table_team_size":"Teamstorlek","group_billing_plan_table_price":"Pris","group_billing_plan_table_package_name_$":"$ medlemmar","group_billing_buy_button_label":"Köp","group_billing_$_off":"$ i rabatt","group_billing_larger_team_$":"Har du ett större team? $","group_billing_contact_us":"Kontakta oss!","group_billing_downgrade_error_$_$":"För att byta till $1 medlemmars abonnemang, så måste du ta bort $2 arbetskamrat(er) från ditt konto.","group_billing_manage_team":"Klicka här för att hantera ditt team.","group_billing_button_label_manage":"Hantera","group_billing_team_plan_title":"Ditt Wunderlist Pro-abonnemang","group_billing_team_plan_text":"Wunderlist Pro växer med ditt team! Att addera en team medlem är super enkelt, ange bara en e-postadress nedan. Det spelar ingen roll om personen du bjuder in är en användare eller inte av Wunderlist.","group_billing_upgrade_button_label":"Ändra prenumeration","group_billing_upgrade_plan_button_label":"Uppgradera","group_billing_Downgrade_plan_button_label":"Nedgradera","group_billing_view_plans_button_label":"Visa prenumerationer","group_billing_manage_team_header":"Hantera teammedlemmar","group_billing_email_address_input_placeholder":"Eposta adress","group_billing_manage_count_$_of_$":"$1 av $2","group_billing_cancel_team_plan":"Säg upp ditt Wunderlist Pro-abonnemang","group_billing_search_coachmark":"För att lägga till medlemmar, vänligen ange dina lagkamraters epostadresser så läggs de till din Pro-prenumeration","group_billing_cancel_header":"Är du säker på att du vill säga upp ditt teams Wunderlist Pro-prenumeration?","group_billing_change_plan_confirmation_$_$_$":"Att ändra din prisplan är enkelt. Om du vill ha $1 medlemsplannen nu, kommer du faktureras $2 i nästa faktureringsperiod som börjar den $3. Är du säker på att du vill göra detta nu?","group_billing_cancel_text":"Din Pro-prenumeration kommer att fortsätta till slutet av månaden och du kommer inte att debiteras igen. Du kommer fortsatt kunna se Pro-funktioner som filer kopplade till uppgifter, men du kommer inte att kunna göra några ändringar.","error_goup_billing_user_already_pro":"Det verkar som att den här personen redan har ett Wunderlist Pro-konto. Ge din Pro-gåva till någon annan av dina teamkamrater!","error_group_billing_wait_subscription_runs_out":"Du måste vänta tills din nuvarande prenumeration upphör innan du kan göra ett nytt köp. Upphör den: $.","button_label_buy_wunderlist_for_business":"Gå till Wunderlist för företag","benefit_payment_service_unavailable":"Betalningstjänsten ej tillgänglig","benefit_name":"Wunderlist Pro","benefit_header_$":"Bli ett $","benefit_header_description":"Samarbete i lag har aldrig varit enklare än nu! Här ä fyra bra anledningar för att du borde bli Wunderlist Pro.","benefit_button_buy_monthly":"Månadsvis","benefit_assign_tasks_title":"Tilldela uppgift","benefit_assign_tasks_description":"Delegera och följ statusen av uppgifter tillsammans med kollegor och vänner!","benefit_unlimited_subtasks_title":"Obegränsade deluppgifter","benefit_unlimited_subtasks_decription":"Dela upp större uppgifter till mindre, uppnåbara steg för förbättrad produktivitet - utan begränsningar.","benefit_comments_title":"Kommentarer","benefit_comments_description":"Starta en konversation med dina kollegor angående någon av dina uppgifter. Lämna feedback, kommentarer och ställ frågor.","benefit_backgrounds_update_$":"För att använda nya bakgrunder, uppgradera till ett $","benefit_additional_backgrounds_title":"Extra bakgrunder","benefit_additional_backgrounds_description":"Upptäck 8 nya vackra bakgrunder för att anpassa Wunderlist precis som du vill ha det!","benefit_files_title":"Filer","benefit_files_description":"Bifoga filer till dina att-göra-uppgifter och dela dem med lagkamrater.","benefit_coming_soon":"Kommer snart","benefit_assign_become_pro":"Fördela att-göra-uppgifter till dina medarbetare med Wunderlist","benefit_label_accept_terms":"Genom att köpa en Wunderlist Pro-prenumeration, så godkänner du $1 och $2.","benefit_label_need_more_subtasks":"Behöver du fler deluppgifter?","sharing_connect_facebook_sharing":"Anslut till ditt Wunderlistkonto med Facebook för att enkelt kunna bjuda in dina vänner.","sharing_facebook_apprequest_message_$user_$list":"“$1” skulle vilja dela listan “$2” med dig","sharing_invite":"Bjud in personer","sharing_invite_friends":"Bjud in vänner","sharing_inviting_requires_account":"Registrera dig för att bjuda in vänner och kollegor till dina listor.","sharing_leave_action":"Är du säker på att du vill lämna listan?","sharing_leave_button":"Lämna denna delade lista","sharing_list_members":"Listmedlemmar","sharing_list_owner":"Ägare","sharing_list_pending_member":"Pågående","sharing_tab_recents":"Senaste","sharing_shared_with_you_by":"Delad av dig med","smart_list_assigned_to_me":"Tilldelad mig","smart_list_conversations":"Konversationer","smart_list_all":"Alla","smart_list_completed":"Klar","smart_list_inbox":"Inkorg","smart_list_starred":"Stjärnmärkt","smart_list_today":"Idag","smart_list_week":"Vecka","label_tell_friends":"Tipsa dina vänner","social_sharing_heading":"Gillar du Wunderlist? Berätta för dina vänner!","social_sharing_dialog_headline":"Kär i Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"Inte Nu","social_sharing_button_no_thanks":"Nej tack","social_sharing_button_facebook":"Dela","social_sharing_button_follow_us":"Följ oss","social_sharing_button_like_us":"Gilla oss","social_sharing_heading_thanks":"Följ oss för att få de senaste Wunderlistnyheterna.","social_sharing_button_twitter":"Tweet","general_sharing_placeholder":"Jag använder Wunderlist, en vacker och enkel att-göra-lista. Skaffa den gratis på www.wunderlist.com","twitter_sharing_placeholder":"Jag använder @Wunderlist, en vacker och enkel att-göra-lista. Skaffa den gratis på www.wunderlist.com","tutorial_welcome_notes_title":"Anteckningar","tutorial_welcome_notes_text":"Löstagbara anteckningar låter dig arbeta i eller utanför Wunderlist","tutorial_welcome_notifications_title":"Aktivitetscenter","tutorial_welcome_notifications_text":"Anpassa sättet du vill bli kontaktad på. Välj att ta emot inbjudningar till dina delade listor via epost eller skrivbordsmeddelanden eller visa allt från Aktivitetscenter.","tutorial_welcome_sharing_title":"Bjud in vänner","tutorial_welcome_sharing_text":"Det är nu ännu enklare att bjuda in vänner eller arbetskollegor för att få en hjälpande hand.","tutorial_welcome_subtasks_title":"Återkommande uppgifter, påminnelser och deluppgifter","tutorial_welcome_subtasks_text":"Wunderlist har nu en helt ny detaljvy som enkelt låter dig lägga till återkommande uppgifter, påminnelser och deluppgifter. ","tutorial_welcome_user_title":"Allt handlar om dig!","tutorial_welcome_user_text":"Ändra dina kontoinställningar, kontrollera statusen eller synkronisera och anpassa din bakgrund.","tutorial_welcome_newsletter_subscribe":"Meddela mig om viktiga uppdateringar och nya funktioner för Wunderlist via mail","tutorial_feature_pro_title":"Wunderlist Pro-funktion","share_list_email_signature":"Skickad med Wunderlist - Min fina och enkla uppgiftslista!\\nDen är gratis för IPhone, Android, Mac, Windows, PC och på Webben! \\nwww.wunderlist.com","userbar_$_unsynced_item":"$ osynkroniserade uppgifter","userbar_$_unsynced_item_plural":"$ ej synkroniserade uppgifter","userbar_account_settings":"Kontoinställningar","userbar_change_background":"Ändra bakgrund","userbar_last_synced_$":"Senast synkroniserad $","userbar_no_internet_connection":"Offline","userbar_preferences":"Inställningar","userbar_sync_in_progress":"Synkroniserar...","userbar_user_name_for_unregistered_mode":"Registrera dig för att synkronisera","whatsnew_title":"Nyheter","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Kommentarer","whatsnew_label_voice":"Ljudinspelning","whatsnew_label_groupbilling":"Teamprissättning","whatsnew_copy_comments":"Samla alla konversationer angående dina uppgifter på ett och samma ställe med Kommentarer i Wunderlist Pro. Förbättra kommunikationen i ditt team genom att exempelvis lämna feedback, tillägga insikter eller ställa frågor till era gemensamma uppgifter.","whatsnew_copy_pro_accounts":"Lägg till kommentarer, filer, tilldela uppgifter, och skapa deluppgifter obegränsat med Wunderlist Pro för att tillsammans åstadkomma mer.","whatsnew_copy_voice":"Klicka på mikrofon ikonen för att styra dina uppgifter eller fōr att spela in en röst memo och lägg till den som en fil.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Registrera dig för att prova Wunderlist Pro och lägga till en fil.","label_add_new_file":"Lägg till en fil...","file_uploaded_unsuccessfully":"Uppladningen av $ misslyckades. Vänligen försök igen.","file_uploaded_failed":"Uppladdning misslyckades. Vänligen försök igen.","file_uploaded_failed_deleted":"Uppladdningen av  $ misslyckades på grund av att filen är rederad från din hårddisk.","label_are_you_sure_permanently_delete_$_file":"Är du säker på att du permanent vill radera filen “$” från Wunderlist?","upload_file_was_not_synced_yet":"Vänligen synkronisera","upload_file_not_synced_yet":"Ej synkroniserad","placeholder_add_comments":"Skapa en kommentar…","placeholder_reply":"Svara…","button_label_go_pro_to_comment":"Uppgradera till Pro för att kommentera","comment_request_failed":"Tyvärr, vi kunde inte ladda kommentarer. Vänligen försök igen.","comment_load_earlier":"Se fler kommentarer","coachmark_no_current_comments":"Inga kommentarer än.\\nStarta din konversation här.","coachmark_comments_not_available":"Tyvärr, vi kunde inte ladda Kommentarer, Vänligen försök igen.","notification_$_commented_on_$":"$1 kommenterade $2","notification_$_and_$_commented_on_$":"$1 och $2 kommenterade $3","notification_$_and_$_others_commented_on_$":"$1 och $2 andra kommenterade $3","comments_requires_account":"Registrera dig för att prova Wunderlist Pro och lägga till en kommentar.","non_pro_trial_free_limit_reached":"Du har nått din kostnadsfria gräns!","non_pro_trial_write_next_comment_$":"Du kan lägga till ytterligare kommentar $.","non_pro_trial_upload_next_file_$":"Du kommer att kunna lägga till en till fil $.","non_pro_trial_assign_next_to_do_$":"Du kan tilldela en annan att-göra $.","button_signup_or_login":"Registrera eller Logga in","button_it_is_completely_free":"Det är helt gratis","label_free_download_for_platforms":"Gratis för iPhone, iPad, Android, WIndows och Mac","label_wunderlist_to_get_things_done":"Över 5 miljoner människor använder Wunderlist för att få saker gjorda.","label_people_who_use_wunderlist":"Se vem som redan använder Wunderlist:","label_wunderlist_uses":"Oavsett om du organiserar ditt företag, delar en shoppinglista med dina nära och kära eller helt enkelt håller ordning och reda på vardagen, så är Wunderlist det bästa listverktyget för dig, dina arbetskamrater eller din familj.","label_install_browser_extension":"Installera browsertillägg","label_install_chrome_browser_extension":"Installera Chrome webbläsartillägg","label_newsletter_signup":"Registrera dig för vårt nyhetsbrev","label_know_upcoming_features":"Var en av de första att få höra om kommande funktioner","label_learn_more_about_wunderlist":"Mer information om Wunderlist","label_learn_more":"Läs mer","label_your_email_address":"Din e-postadress","button_subscribe_to_newsletter":"Prenumerera","button_sending_subscribe_to_newsletter":"Skickar...","iyf4_usermenu_label":"Skaffa Wunderlist Pro kostnadsfritt","iyf4_notification_label":"Få upp till 12 månader gratis med Wunderlist Pro genom att bjuda in dina vänner!","iyf4_notification_button_label_var_a":"Börja bjud in","iyf4_notification_button_label_var_b":"Bjud in vänner","iyf4_notification_button_label_var_c":"Få Wunderlist Pro gratis","iyf4_notification_button_label_var_d":"Dela Wunderlist Pro","iyf4_dialog_invite_headline_$":"Få upp till 12 månader gratis med Wunderlist Pro genom att bjuda in dina vänner!","iyf4_dialog_invite_headline_incentive":"12 månader gratis","iyf4_dialog_invite_incentive_$":"$ Wunderlist, vi ger er båda 1 månad av Wunderlist Pro gratis (upp till max 12månader)","iyf4_dialog_invite_incentive_terms":"För varje vän som ansluter sig","iyf4_dialog_tweet":"Jag älskar att organisera mitt liv med Wunderlist. Få en månad gratis Wunderlist Pro här:","iyf_notification_label":"Rekommendera Wunderlist för dina vänner och bli Pro kostnadsfritt upp till 12 månader!","iyf_notification_button_label":"Bli Pro!","iyf_dialog_step1_headline":"Få ett gratis Pro konto","iyf_dialog_step1_subheadline":"i 3 enkla steg","iyf_dialog_step1_instruction1_headline":"Börja bjuda in dina vänner","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter eller E-Mail","iyf_dialog_step1_instruction2_headline":"Dina vänner registrerar sig","iyf_dialog_step1_instruction2_subheadline":"vänta tills de har gått med i Wunderlist","iyf_dialog_step1_instruction3_headline":"Ha det så kul med ditt gratis Pro Konto","iyf_dialog_step1_instruction3_subheadline":"1 månad för varje vän som accepterar","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 månad per $ vänner som  accepterar","iyf_dialog_step1_next_button":"Börja bjud in","iyf_dialog_step2_subheadline":"för att få ditt gratis Pro konto","iyf_dialog_step2_divider_label":"Dela denna länk","iyf_dialog_share_on_facebook":"Dela på Facebook","iyf_dialog_post_on_twitter":"Tweeta på Twitter","iyf_dialog_email_placeholder":"Fyll i din email adress","iyf_dialog_more_placeholder":"Lägg till fler...","iyf_dialog_step3_headline":"Tack för att du delade","iyf_dialog_step3_subheadline":"Vänta tills dina vänner har registerat sig","iyf_dialog_step3_success_headline":"Inbjudningar skickades framgångsrikt.","iyf_dialog_step3_success_subheadline":"Vi kommer meddela dig så fort som ditt Pro konto är klart.","iyf_dialog_step3_invite_more":"Bjud in fler","meta_title":"Wunderlist 2: Din vackra och enkla att-göra-lista","meta_description":"Över 5 miljoner människor använder redan Wunderlist för att hantera uppgifter, att-göra-listor och för att få mer gjort. Wunderlist är den bästa uppgiftslistan för dig, ditt team och din familj.","meta_keywords":"6wunderkinder, produktivitet, samarbete, uppgiftshantering, uppgiftshanterare, to-do, todo, lista, uppgift, gtd, organisera, planera, shoppinglista, påminnelser, smarta listor, inhandlingslista, filmlista, delad lista","enable_desktop_notifications_text":"Vänligen \"Bekräf'ta\" och \"Tillåt\" sedan i din webbläsare för att aktivera meddelanden.","notification_add_to_browser":"Ha Wunderlist endast ett klick bort. Lägg till Wunderlist webb app till din webbläsare nu.","notification_add_extension_to_browser":"Spara snabbt allt ditt favoritinnehåll på nätet direkt till Wunderlist. Installera Chrome-tillägget Lägg till i Wunderlist nu.","button_add_to_chrome":"Lägg till i Chrome","button_add_to_store_added":"Tillagd","aria_activity_center_hint":"Aktivitets centret. Tryck på escape för att stänga.","aria_exit_search":"Stäng Sök","aria_search":"Sök","aria_sort_list":"Sortera Lista","aria_thank_you":"Vi hoppas att vår tillgänglighetsanpassning har fungerat bra för dig. Vänligen skicka kommentarer angående tillgänglighets implementation till support@wunderlist.com. Tack för att du valt Wunderlist.","aria_user_menu_hint":"Användarmeny. Tryck escape för att stänga.","aria_assign_to_$":"Assign to $","momentjs_months":"Januari_Februari_Mars_April_Maj_Juni_Juli_Augusti_September_Oktober_November_December","momentjs_monthsShort":"Jan_Feb_Mar_Apr_Maj_Jun_Jul_Aug_Sep_Oct_Nov_Dec","momentjs_weekdays":"Söndag_Måndag_Tisdag_Onsdag_Torsdag_Fredag_Lördag","momentjs_weekdaysShort":"Sön_Mån_Tis_Ons_Tor_Fre_Lör","momentjs_weekdaysMin":"Sö_Må_Ti_On_To_Fr_Lö","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Idag kl] LT","momentjs_calendar_nextDay":"[Imorgon kl] LT","momentjs_calendar_nextWeek":"dddd [kl] LT","momentjs_calendar_lastDay":"[Igår kl] LT","momentjs_calendar_lastWeek":"dddd [kl] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"om %s","momentjs_relativeTime_past":"%s sedan","momentjs_relativeTime_s":"några sekunder","momentjs_relativeTime_m":"en minut","momentjs_relativeTime_mm":"%d minuter","momentjs_relativeTime_h":"en timme","momentjs_relativeTime_hh":"%d timmar","momentjs_relativeTime_d":"en dag","momentjs_relativeTime_dd":"%d dagar","momentjs_relativeTime_M":"en månad","momentjs_relativeTime_MM":"%d månader","momentjs_relativeTime_y":"ett år","momentjs_relativeTime_yy":"%d år"}
};
});
define('languages/slovenian',[],function() {
return {
'name': 'slovenian',
'data': {"actionbar_print_selected_item":"Natisni Izbrana opravila","actionbar_print_$_selected_items_plural":"Natisni $ Izbrana opravila","actionbar_email_selected_item":"Pošlji Izbrano opravila","actionbar_email_$_selected_items_plural":"Pošlji $ Izbrana opravila","actionbar_sort_alphabetically":"Razvrsti po abecedi","actionbar_sort_due_date":"Razvrsti po datumu zapadlosti","actionbar_sort_assignee":"Razvrsti po dodeljencih","api_error_account_already_exists":"Račun z tem elektronskim naslovom že obstaja.","api_error_connection_error":"Opa, zdi se, da je nastala težava pri povezavi s strežnikom. Prosimo poskusi znova.","api_error_general_error":"Opa, trenutno se s strežnikom ne moremo povezati. Prosimo poskusi znova.","api_error_incorrect_login":"Vnešen elektronski naslov ali geslo nista pravilna.","api_error_incorrect_password":"Vnešeno geslo ni pravilno.","api_error_service_down":"Pomemben del storitve WunderAPI ni na voljo.","api_error_unknown":"Zgodila se je nepredvidena in neobravnavana napaka.","api_error_validation_error_unable_to_signup":"Ne moremo te vpisati s posredovanim elektronskim naslovom.","api_error_not_a_beta_user":"Nisi član Wunderlist beta.","button_back":"Nazaj","button_cancel":"Prekliči","button_confirm":"Potrdi","button_download":"Prenesi","button_change":"Spremeni","button_choose":"Izberi","button_connect":"Poveži","button_connect_facebook":"Poveži z Facebookom","button_continue":"Nadaljuj","button_delete":"Izbriši","button_disconnect":"Prekini povezavo","button_dismiss":"Zavrni","button_done":"Končano","button_edit":"Uredi","button_get_started":"No pa začnimo","button_go_back":"Pojdi nazaj.","button_go_back_sentence":"Pojdi nazaj.","button_learn_more":"Več informacij","button_go_back_to_login":"Pojdi nazaj na prijavo","button_go_to_web_app":"Pojdi na spletno aplikacijo","button_join_now":"Join Now","button_log_in":"Prijava","button_log_in_with_$":"Log In With $","button_log_out":"Odjava","button_log_in_facebook":"Prijava z Facebookom","button_next":"Naprej","button_no":"Ne","button_no_due_date":"Ni dneva zapadlosti","button_ok":"OK","button_remove_due_date":"Odstrani datum zapadlosti","button_remove_reminder":"Odstrani opomnik","button_email_list":"Pošlji seznam","button_print_list":"Natisni seznam","button_reset_password":"Ponastavi geslo","button_retry":"Ponovi","button_save":"Shrani","button_send":"Pošlji","button_sign_up":"Vpiši se","button_sign_up_with_$":"Sign Up With $","button_sign_up_for_free":"Vpiši se brezplačno","button_sign_up_facebook":"Vpiši se z Facebookom","button_support_center":"Center za podporo","button_subscribe":"Super, Ja prosim!","button_try_again":"Poskusi znova","button_try_wunderlist":"Preizkusi Wunderlist","button_yes":"Da","coachmark_all_list_empty":"Ni nobenega dodanega opravila. Kar pogumno, dodaj nekaj.","coachmark_completed_list_empty":"Nisi še dokončal/a nobenih predmetov. Kar pogumno, preglej nekaj predmetov v tvojih seznamih!","coachmark_no_search_results":"Ni iskani rezultatov","coachmark_sharing_invite_friends_heading":"Povabi tvoje prijatelje","coachmark_sharing_invite_friends_text_$":" Tvojim prijateljem bo omogočeno, da ustvarijo, premaknejo in odkljukajo opravila na seznamu “$”.","coachmark_sharing_recent_no_contacts_heading":"Ni nedavnih kontaktov","coachmark_sharing_recent_no_contacts_text_$":"Vpiši elektronski naslov ali preišči kontakte. Dodanim prijateljem bo omogočeno, da ustvarijo, premaknejo in odkljukajo opravila na seznamu “$”.","coachmark_assigned_to_me_list_empty":"Nimaš nič dodeljenega","coachmark_conversations_list_empty":"There are no current conversations.","coachmark_starred_list_empty":"Nimaš označenih predmetov","coachmark_today_list_empty":"Čestitamo! Za danes nimate nobenih zapadlih opravil","coachmark_week_list_empty":"Ste na dopustu? V naslednjih 7. dneh vam ne zapade nobeno Opravilo","error_list_not_found":"Seznam, ki ga iščeš ni na voljo","error_share_not_created":"Med poskusom deljenja seznama je prišlo do napake. Prosimo poskusi znova.","error_task_not_found":"Iskano opravilo ni na voljo","error_page_not_found":"Stran ni najdena","error_title_not_found":"Ni najdeno","label_are_you_sure_permanently_delete_item":"Ali res želiš trajno izbrisati ta predmet?","label_are_you_sure_permanently_delete_item_plural":"Ali res želiš trajno izbrisati te predmete?","label_activity_center":"Center aktivnosti","label_are_you_sure_permanently_delete_$_list":"Ali res želiš dokončno izbrisati seznam “$”?","label_are_you_sure_permanently_delete_$_task":"Ali res želiš dokončno izbrisati opravilo “$”?","label_are_you_sure_permanently_delete_task_plural":"Ali res želiš izbrisati te predmete?","label_are_you_sure_permanently_delete_$_subtask":"Ali res želiš dokončno izbrisati podopravilo “$”?","label_cant_undo":"Tega dejanja ne boste mogli razveljaviti.","label_completed_tasks_heading":"1 dokončano opravilo","label_$_completed_tasks_heading_plural":"$ dokončanih opravil","label_connecting":"Povezujem...","label_minisite_description_line_1":"Spremljaj vse, kar želiš storiti.","label_minisite_description_line_2":"Wunderlist je brezplačno na voljo na vseh večjih platformah.","label_minisite_share_deleted_or_no_access":"Zdi se, da je izbrisano ali pa nimate več dostopa.","label_minisite_contact_sender_for_info":"Za več informacij prosimo kontaktiraj osebo, ki je delila seznam s teboj.","label_minisite_$_invited_you_to_the_list_$":"$1 te je povabil/a na seznam $2","label_minisite_empty_list_$":"Seznam je trenutno prazen, zato jim pomagaj začeti. Klikni zgornji gumb Vpiši se in prični z dodajanjem opravil v seznam $.","label_day_0":"NED","label_day_1":"PON","label_day_2":"TOR","label_day_3":"SRE","label_day_4":"ČET","label_day_5":"PET","label_day_6":"SOB","label_delete_file":"Delete File","label_delete_list":"Izbriši seznam","label_delete_task":"Izbriši opravilo","label_delete_task_plural":"Izbriši opravila","label_delete_subtask":"Izbriši podnalogo","label_due_$":"Zapade $","label_due_on":"Zapade $","label_due_date":"Datum zapadlosti","label_email":"E-pošta","label_every":"vsak","label_loading":"Nalagam...","label_logging_out":"Odjavljam...","label_name":"Ime","label_newsletter":"Wunderlist E-novice","label_none":"Noben","label_notification":"Obvestilo","label_oops":"Ups!","label_or":"ali","label_password":"Geslo","label_relative_date_today":"Danes","label_relative_date_today_with_date":"Danes, $","label_relative_date_today_mid_sentence":"danes","label_relative_date_tomorrow":"Jutri","label_relative_date_tomorrow_with_date":"Jutri, $","label_relative_date_tomorrow_mid_sentence":"jutri","label_relative_date_yesterday":"Včeraj","label_remind_me_at_$":"Opomni me ob: $","label_reminder":"Opomnik","label_reminder_message_$":"Prijateljski opomnik: $","label_repeat_every_day":"Ponovi vsak dan","label_repeat_every_week":"Ponovi vsak teden","label_repeat_every_month":"Ponovi vsak mesec","label_repeat_every_year":"Ponovi vsako leto","label_repeat_custom":"Po meri","label_repeat_day":"Vsak dan","label_repeat_day_$_plural":"Vsak $ dan","label_repeat_month":"Vsak mesec","label_repeat_month_$_plural":"Vsak $ mesec","label_repeat_week":"Vsak teden","label_repeat_week_$_plural":"Vsak $ teden","label_repeat_never":"Ne ponavljaj","label_repeat_year":"Vsako leto","label_repeat_year_$_plural":"Vsako $ leto","label_reset_password":"Ponastavi geslo","label_rights_reserved":"Vse pravice pridržane","label_still_fetching_tasks":"Še vedno pridobivam naloge ...","label_sync":"Sinhronizacija","label_time_am":"AM","label_time_day_plural":"dni","label_time_week_plural":"tednov","label_time_month_plural":"mesecev","label_time_pm":"PM","label_time_year_plural":"let","label_assign_to":"Dodeli","label_unassigned":"Nedodeljeno","label_assign_me":"Jaz","label_created_$":"Ustvarjeno $","label_created_by_$":"Ustvaril/a  $","label_created_on_$":"Ustvarjeno $","label_created_$_by_$":"Ustvarjeno $1 od $2","label_created_by_$_on_$":"Ustvaril/a $1 dne $2","label_completed_$":"Dokončano $","label_completed_on_$":"Dokončano $","label_completed_$_by_$":"Dokončnano $1 od $2","label_completed_by_$_on_$":"Dokončal/a $1 dne $2","login_add_photo_hint":"Poosebi tvoj Wunderlist račun z lastno fotografijo.","login_already_have_account":"Že imaš račun?","login_email_not_valid":"Prosim vnesi veljavni elektronski naslov.","login_empty_name":"Prosim vnesi ime.","login_empty_password":"Prosim vnesi geslo.","login_password_not_valid":"Prosim vnesi veljavno geslo.","login_empty_email":"Prosim vnesi nov elektronski naslov.","login_enter_name":"Kdo si?","login_enter_password":"Si že skoraj pri koncu","login_enter_password_hint":"Izberi geslo, da zaključiš s pripravo Wunderlist računa.","login_forgot_password":"Pozabljeno geslo","login_forgot_password_heading":"Si kaj pozabil/a?","login_forgot_password_text":"Vpišite elektronski naslov s katerim ste se registrirali in poslali vam bomo povezavo za obnovitev gesla. ","login_no_account_yet":"Nimaš računa?","login_password_changed":"Geslo je posodobljeno","login_password_not_match":"Vnešeni gesli se ne ujemata.","login_password_reset_email_has_been_sent":"Prosimo preveri elektronsko pošto za navodila kako ponastaviti geslo.","login_reset_password_heading":"Čas je, da ustvariš svoje novo geslo.","login_reset_password_success":"Samo pritisni na spodnji gumb in že boš pripravljen/a, da se prijaviš v tvoj Wunderlist.","login_reset_password_success_heading":"Hura! Tvoje geslo je bilo uspešno zamenjano.","login_password_too_short":"Geslo mora vsebovati vsaj 5 znakov.","login_sign_up":"Vpiši se.","login_want_to_try_again":"Želiš poskusiti znova?","login_accept_terms":"By signing up you accept our $1 and $2.","logout_timeout_title":"Napaka sinhronizacije","logout_timeout_text":"Ne moremo sinhronizirati vaših podatkov. Želite ponovno poskusiti ali se boste odjavili?","mobile_tutorial_welcome_to":"Dobrodošli v","mobile_tutorial_wunderlist_subtitle":"tvoj lep in preprost seznam opravil","notifications_desktop_enable_heading":"Omogoči namizna obvestila","notifications_no_notifications":"Ni aktivnosti","notifications_no_notifications_message":"Povabila na deljene sezname in druge aktivnosti se nahajajo tukaj.","notifications_event_accept":"Sprejmi","notifications_event_accepted":"Sprejeto","web_upgrade_ie9_not_supported":"Wunderlist ne podpira brskalnika Internet Explorer 9. Prosimo nadgradite v $ ali $ za boljšo izkušnjo.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Looks like you are using a device with a touch screen. Would you like to enable a touch optimized interface? You can always change this in your account settings.","web_setting_enable_touch_for_$":"Enable Touch for: $","web_settings_text_refresh_may_be_required":"Refresh may be required","rate_label":"Oceni Wunderlist","rate_app_heading":"Podaj mnenje in Oceni Wunderlist","rate_app_message_web_chrome":"Hvala, ker uporabljaš Wunderlist. Želeli bi slišati tvoje mnenje! Prosimo sporoči ga z oceno in svojim mnenjem Wunderlista v Chrome Web Store ★★★★★","rate_app_button_later":"Opomni me kasneje","rate_app_button_no":"Ne hvala","rate_app_button_yes":"Oceni Wunderlist","placeholder_add_due_today_to_inbox":"Dodaj danes zapadla opravila v \"Prejeto\"...","placeholder_add_list":"Dodaj seznam...","placeholder_add_subtask":"Dodaj podnalogo","placeholder_add_starred_to_inbox":"Dodaj z zvezdico označena opravila v \"Prejeto\"...","placeholder_add_task_to_$":"Dodaj predmet na “$”...","placeholder_add_to_inbox":"Dodaj predmet v \"Prejeto\"","placeholder_new_list":"Nov seznam","placeholder_remind_me":"Opomni me","placeholder_search":"Iskanje...","placeholder_sharing_search":"Ime ali elektronski naslov...","placeholder_set_due_date":"Nastavi datum zapadlosti","browser_outdated_heading":"Joj, zdi se, da tvoj brskalnik ni posodobljen","browser_outdated_update":"Prosimo posodobi tvoj brskalnik","browser_outdated_explanation":"Wunderlist je narejen s pomočjo najnovejše tehnologije. Za uporabo Wunderlista prenesi zadnjo različico tvojega brskalnika","prenamed_list_movies":"Filmi za ogled","prenamed_list_private":"Zasebno","prenamed_list_shopping":"Nakupi","prenamed_list_wishlist":"Lista želja","prenamed_list_work":"Služba","prenamed_list_read_later":"Preberi kasneje","settings_account_change_email":"Spremeni elektronski naslov...","settings_account_change_password":"Spremeni geslo...","settings_account_delete_confirmation":"Vnesi \"Sem prepričan\"","settings_account_delete_confirmation_text":"Sem prepričan","settings_account_drop_image":"Spusti sliko tukaj","settings_account_connect_facebook_account":"Povezava Wunderlist računa z Facebookom, omogoči preprosto in hitro deljenje seznama z tvojimi prijatelji.","settings_general_12_hour":"12 ur","settings_general_24_hour":"24 ur","settings_general_confirm_deletion":"Potrdi pred brisanjem predmetov.","settings_general_create_new_tasks":"Dodaj nove predmete","settings_general_date_format":"Format datuma","settings_general_language":"Jezik","settings_general_start_of_week":"Začetek tedna","settings_general_start_of_week_sunday":"Nedelja","settings_general_start_of_week_saturday":"Sobota","settings_general_start_of_week_monday":"Ponedeljek","settings_general_sound_task_completion":"Vključi zvok za zaključena opravila","settings_general_sound_new_notifications":"Vključi zvok za nova opozorila","settings_general_print_done_tasks":"Natisni zaključene predmete","settings_general_tasks_bottom":"Dno seznama","settings_general_tasks_top":"Vrh seznama","settings_general_time_format":"Časovni format","settings_heading_team":"Business","settings_heading_about":"O","settings_heading_account":"Račun","settings_heading_general":"Splošno","settings_heading_notification":"Obvestila","settings_heading_shortcuts":"Bližnjice","settings_heading_sidebar":"Stranska vrstica","settings_imprint":"O nas","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"Obvesti me o pomembnih dogodkih preko:\\n","settings_notifications_notify_me_on_text":"Obvestili te bomo o določenih dogodkih, kot so potrditev vabila v deljeni seznam ali ko nekdo doda oziroma dokončna opravilo v tvojemu deljenemu seznamu.","settings_sidebar_smart_lists_title":"Prikaži te pametne sezname v stranski vrstici.","settings_sidebar_smart_lists_auto":"Samodejno","settings_sidebar_smart_lists_hidden":"Skrito","settings_sidebar_smart_lists_visible":"Vidno","settings_sync_full":"Sinhroniziraj zdaj","settings_account_account_backup":"Account Backup","settings_account_restore_backup":"Import Backup Data","settings_account_backup_description":"Backup data includes all your Lists, Tasks, Subtasks, Notes, and Reminders. Please note it does not include those Lists that were shared with you, Files, Comments, Shared List recipients and previous application settings.","settings_account_data_is_being_processed":"Hold tight! Your backup data is being processed. We will send you an email when everything is complete.","settings_account_change_password_error":"Prišlo je do težav pri posodabljanju gesla. Prosimo poskusi znova.","settings_account_click_to_download_backup":"Click to Download","settings_account_create_backup":"Create Backup","settings_account_current_password":"Trenutno geslo","settings_account_delete_account":"Izbriši račun","settings_account_delete_account_confirm":"Ali res želiš izbrisati račun?","settings_account_delete_account_confirm_text":"Brisanje tvojega računa bo dokončno pobrisalo vse sezname in opravila in jih ne bo mogoče povrniti","settings_account_fetching_data":"Fetching data ...","settings_account_new_password":"Novo geslo","settings_account_repeat_new_password":"Ponovno vnesi novo geslo","settings_account_right_click_and_save_as":"Right Click and Save","settings_third_party_libraries":"Licence","settings_background_credits":"Zasluge za ozadja","settings_notifications_email_enabled":"Obvestila po elektronski pošti","settings_notifications_desktop_enabled":"Namizna obvestila","settings_notifications_push_enabled":"Potisna obvestila","settings_privacy_policy":"Izjava o zasebnosti","settings_shortcuts_arrow_keys":"Smerne tipke","settings_shortcuts_delete_item":"Izbriši izbran seznam ali opravilo","settings_shortcuts_mark_done":"Označi izbrana opravila kot \"Zaključeno\"","settings_shortcuts_mark_starred":"Označi izbrana opravila z 'Zvezdico'","settings_shortcuts_new_list":"Dodaj nov seznam","settings_shortcuts_new_task":"Dodaj novo opravilo","settings_shortcuts_open_all_smart_list":"Odpri pametni seznam \"Vse\"","settings_shortcuts_open_assigned_smart_list":"Odpri 'Dodeljeno meni' Pametni seznam ","settings_shortcuts_open_conversations_smart_list":"Open 'Conversations' Smart List","settings_shortcuts_open_done_smart_list":"Odpri pametni seznam \"Zaključeni\"","settings_shortcuts_open_inbox":"Odpri prejeto","settings_shortcuts_open_preferences":"Odpri nastavitve","settings_shortcuts_open_search":"Usmerjeno iskanje","settings_shortcuts_open_starred_smart_list":"Odpri pametni seznam \"Označeni\"","settings_shortcuts_open_today_smart_list":"Odpri pametni seznam \"Danes\"","settings_shortcuts_open_week_smart_list":"Odpri pametni seznam \"Ta teden\"","settings_shortcuts_reset":"Ponastavi na privzeto","settings_shortcuts_select_all_tasks":"Izberi vsa opravila","settings_shortcuts_show_more":"Prikaži Več","settings_shortcuts_hide":"Skrij","settings_shortcuts_show_notifications":"Prikaži center aktivnosti","settings_shortcuts_step_through_list":"Pojdi skozi sezname","settings_shortcuts_step_through_task":"Pojdi čez opravila","settings_terms_of_use":"Pogoji uporabe","settings_account_header_free":"Brezplačno","settings_account_header_unregistered":"Sign Up","settings_account_header_account_$":"$ Račun","settings_account_pro_description":"Add comments and files to your to-dos and assign them to your colleagues. Collaboration in teams has never been easier!","settings_account_register_wunderlist_description":"Register for Wunderlist to sync your lists across all your devices.","settings_manage_subscription_button":"Urejanje naročnine","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Hura, zdaj si $!","settings_account_header_pro_description":"Wunderlist Pro je najboljši način za upravljanje projektov. Povabi svoje prijatelje in sodelavce za sodelovanje in učinkovito delo!","settings_upgrade_to_pro_label":"Nadgradi v $","settings_label_pro_account":"Pro račun","settings_label_purchased_from_$":"Kupljeno v: $","settings_label_purchased_from_$_by_$":"Purchased from $1 by: $2","settings_label_expires_in_$":"Poteče čez $","setting_label_next_billing_date":"Naslednji datum obračuna:","setting_label_cancel_subscription":"Prekliči naročnino","setting_heading_cancel_subscription":"Ali res želiš preklicati tvojo Wunderlist Pro naročnino?","setting_description_cancel_subscription":"Ko bo naročnina potekla, boš do svojih podatkov še vedno lahko dostopal/a, vendar bodo na voljo le osnovne Wunderlist funkcije.","setting_label_cancel_subscription_success":"Your subscription was cancelled successfully.","settings_label_invoices":"Invoices","settings_label_become_a_pro":"Postani Pro","settings_payment_info_expires_$_relative":"Poteče $","settings_payment_info_expires_$_absolute":"Poteče čez $1 dni: $2","settings_manage_subscription_error":"Se opravičujemo, med upravljanjem vaše naročnine je prišlo do napake.","group_billing_packages_title":"Plans for every business ","group_billing_packages_text":"Wunderlist for Business provides you with all the features you need to work smarter as a team at an affordable price. Simply select the right plan for your business now.","group_billing_plan_table_team_size":"Team Size","group_billing_plan_table_price":"Price","group_billing_plan_table_package_name_$":"$ Members","group_billing_buy_button_label":"Purchase","group_billing_$_off":"$ off","group_billing_larger_team_$":"Have a larger team? $","group_billing_contact_us":"Contact us!","group_billing_downgrade_error_$_$":"In order to switch to the $1 Members plan, you must remove $2 teammate(s) from the account. ","group_billing_manage_team":"Click here to manage your team.","group_billing_button_label_manage":"Manage","group_billing_team_plan_title":"Your Wunderlist Pro Plan","group_billing_team_plan_text":"Wunderlist Pro grows right along with your team! Adding members is super easy, just enter their email addresses below. It’s that simple whether or not they’re already a Wunderlist user.","group_billing_upgrade_button_label":"Change Plan","group_billing_upgrade_plan_button_label":"Upgrade","group_billing_Downgrade_plan_button_label":"Downgrade","group_billing_view_plans_button_label":"View Plans","group_billing_manage_team_header":"Manage Team Members","group_billing_email_address_input_placeholder":"Email address","group_billing_manage_count_$_of_$":"$1 of $2","group_billing_cancel_team_plan":"Cancel Your Wunderlist Pro Plan","group_billing_search_coachmark":"To add members, simply enter the email addresses of your teammates, and they'll be added to your Pro plan.","group_billing_cancel_header":"Are you sure you want to cancel your team’s Wunderlist Pro Subscription?","group_billing_change_plan_confirmation_$_$_$":"Changing plans is easy. If you go for $1 Members plan now, you’ll be billed $2 in the next billing cycle starting on $3. Are you sure you want to do this now?","group_billing_cancel_text":"Your Pro subscription will run until the end of month, and you won’t be billed again. While you’ll still retain the ability to view any Pro features like files attached to tasks, you won’t be able to make any changes to them.","error_goup_billing_user_already_pro":"Looks like this person already has a Wunderlist Pro account. Give the gift of Pro to another teammate!","error_group_billing_wait_subscription_runs_out":"You’ll have to wait until your current subscription runs out before repurchasing. Expires on: $.","button_label_buy_wunderlist_for_business":"Go to Wunderlist for Business","benefit_payment_service_unavailable":"Plačilna storitev ni na voljo","benefit_name":"Wunderlist Pro","benefit_header_$":"Postani $","benefit_header_description":"Poslovno sodelovanje še nikoli ni bilo tako enostavno! Tukaj je 4 zelo dobrih razlogov za prijavo v Wunderlist Pro.","benefit_button_buy_monthly":"Mesečno","benefit_assign_tasks_title":"Dodeli opravila","benefit_assign_tasks_description":"Preprosto prenašaj in spremljaj stanje opravil med sodelavci in prijatelji!","benefit_unlimited_subtasks_title":"Neomejeno podopravil","benefit_unlimited_subtasks_decription":"Razdeli velika opravila v manjša in dosegljive cilje za boljšo produktivnost - brez omejitev.","benefit_comments_title":"Comments","benefit_comments_description":"Start a conversation with your teammates about any of your to-dos. Leave feedback, ask a question or add some extra insight.","benefit_backgrounds_update_$":"Za uporabo novih ozadij nadgradi na $","benefit_additional_backgrounds_title":"Nova ozadja","benefit_additional_backgrounds_description":"Raziščite 8 novih čudovitih ozadij in prilagodite Wunderlist tako, kot je všeč vam!","benefit_files_title":"Datoteke","benefit_files_description":"Pripni datoteke v svoja opravila in jih deli s svojimi sodelavci.","benefit_coming_soon":"Prihaja kmalu","benefit_assign_become_pro":"Dodeli opravila tvojim sodelavcem z Wunderlistom","benefit_label_accept_terms":"Z nakupom Wunderlist Pro naročnine se strinjaš s $1 in $2.","benefit_label_need_more_subtasks":"Potrebuješ več podopravil?","sharing_connect_facebook_sharing":"Za enostavnejše povezovanje s prijatelji, poveži svoj Wunderlist račun s Facebook računom","sharing_facebook_apprequest_message_$user_$list":"“$1” želi deliti seznam “$2” s teboj.","sharing_invite":"Povabi ljudi","sharing_invite_friends":"Povabi prijatelje","sharing_inviting_requires_account":"Prijavi se, da v tvoje Sezname povabiš prijatelje in sodelavce.","sharing_leave_action":"Ali res želiš zapustiti ta seznam?","sharing_leave_button":"Zapusti deljen seznam","sharing_list_members":"Seznam članov","sharing_list_owner":"Lastnik","sharing_list_pending_member":"Na čakanju","sharing_tab_recents":"Nedavni","sharing_shared_with_you_by":"Deljeno z tabo od","smart_list_assigned_to_me":"Dodeljeno meni","smart_list_conversations":"Conversations","smart_list_all":"Vse","smart_list_completed":"Zaključene","smart_list_inbox":"Prejeto","smart_list_starred":"Označeni","smart_list_today":"Danes","smart_list_week":"Teden","label_tell_friends":"Povej prijateljem","social_sharing_heading":"Povej prijateljem na tvojem priljubljenem socialnem omrežju!","social_sharing_dialog_headline":"Love Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"Ne zdaj","social_sharing_button_no_thanks":"Ne hvala","social_sharing_button_facebook":"Deli","social_sharing_button_follow_us":"Spremljaj nas","social_sharing_button_like_us":"Všečkaj nas","social_sharing_heading_thanks":"Spremljaj naše najnovejše Wunderlist novice.","social_sharing_button_twitter":"Čivkaj","general_sharing_placeholder":"I’m using Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","twitter_sharing_placeholder":"I’m using @Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","tutorial_welcome_notes_title":"Zaznamki","tutorial_welcome_notes_text":"Snemljive opombe vam omogočajo delo v ali izven programa Wunderlist","tutorial_welcome_notifications_title":"Center aktivnosti","tutorial_welcome_notifications_text":"Prilagodi si način obveščanja. Izberi prejemanje povabil in posodobitev na svoj skupni seznam preko elektronske pošte in namiznih obvestil ali preglej vse v Centru Aktivnosti. ","tutorial_welcome_sharing_title":"Povabi prijatelje","tutorial_welcome_sharing_text":"Sedaj je še bolj enostavno, da povabiš prijatelje in sodelavce, da ti pomagajo.","tutorial_welcome_subtasks_title":"Ponavljajoči se dogodki, Opomniki in Podopravila","tutorial_welcome_subtasks_text":"Wunderlist zdaj omogoča nov Podrobni pogled, ki omogoča enostavno dodajanje ponavljajočih se dogodkov, opomnikov in podopravil","tutorial_welcome_user_title":"Gre se za tebe!","tutorial_welcome_user_text":"Spremeni nastavitve računa, preveri stanje sinhronizacije in prilagodi ozadje.","tutorial_welcome_newsletter_subscribe":"Pošlji mi obvestila o pomembnih novostih in novih funkcijah Wunderlista po elektronski pošti","tutorial_feature_pro_title":"Wunderlist Pro funkcija","share_list_email_signature":"Sent with Wunderlist – My beautiful and simple to-do list\\nIt’s free for iPhone, iPad, Android, Mac, Windows PC and Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ nesinhroniziranih predmetov","userbar_$_unsynced_item_plural":"$ nesinhroniziranih predmetov","userbar_account_settings":"Nastavitve računa","userbar_change_background":"Spremeni ozadje","userbar_last_synced_$":"Zadnja sinhronizacija: $","userbar_no_internet_connection":"Brez povezave","userbar_preferences":"Nastavitve","userbar_sync_in_progress":"Sinhroniziram...","userbar_user_name_for_unregistered_mode":"Vpiši se za sinnhronizacijo","whatsnew_title":"Kaj je novega","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Comments","whatsnew_label_voice":"Voice Input","whatsnew_label_groupbilling":"Team Pricing","whatsnew_copy_comments":"Keep all the conversations about your to-dos in one place with Comments in Wunderlist Pro. Leave feedback, ask a question or add extra insight to any of your to-dos to greatly improve communication within your team.","whatsnew_copy_pro_accounts":"Add Comments, Assign to-dos, add Files and create Unlimited Subtasks with Wunderlist Pro to accomplish more, together.","whatsnew_copy_voice":"Click the microphone icon to dictate your to-dos or even record a Voice Memo and attach it as a file.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Sign up to try Wunderlist Pro and add a File.","label_add_new_file":"Add a file...","file_uploaded_unsuccessfully":"Upload of $ failed. Please try again.","file_uploaded_failed":"Upload failed. Please try again.","file_uploaded_failed_deleted":"Upload of $ failed, because the file was deleted from your hard drive.","label_are_you_sure_permanently_delete_$_file":"Are you sure you want to permanently delete the file “$” from Wunderlist?","upload_file_was_not_synced_yet":"Please sync","upload_file_not_synced_yet":"Not Synced","placeholder_add_comments":"Add a comment...","placeholder_reply":"Reply...","button_label_go_pro_to_comment":"Go Pro to comment","comment_request_failed":"Sorry, we couldn't load Comments. Please try again.","comment_load_earlier":"View more Comments","coachmark_no_current_comments":"No comments yet.\\nStart your conversation here.","coachmark_comments_not_available":"Sorry, we couldn’t load the previous comments. Please try again in a few moments.","notification_$_commented_on_$":"$1 commented on $2","notification_$_and_$_commented_on_$":"$1 and $2 commented on $3","notification_$_and_$_others_commented_on_$":"$1 and $2 others commented on $3","comments_requires_account":"Sign up to try Wunderlist Pro and add a Comment.","non_pro_trial_free_limit_reached":"You’ve reached your Free limit!","non_pro_trial_write_next_comment_$":"You can add another Comment $.","non_pro_trial_upload_next_file_$":"You’ll be able to add another File $.","non_pro_trial_assign_next_to_do_$":"You can Assign another to-do $.","button_signup_or_login":"Registriraj ali Prijavi se","button_it_is_completely_free":"Je popolnoma brezplačen","label_free_download_for_platforms":"Brezplačno za iPhone, iPad, Android, Windows in Mac","label_wunderlist_to_get_things_done":"More than 5 million people use Wunderlist to get things done.","label_people_who_use_wunderlist":"Poglej, kdo že uporablja Wunderlist","label_wunderlist_uses":"Bodisi, da organiziraš svoje poslovanje, deliš nakupovalni seznam z ljubljenimi ali enostavno želiš biti na tekočem pri vsakodnevnih opravilih, je Wunderlist najboljša aplikacija zate, tvojo ekipo in družino.","label_install_browser_extension":"Inštaliraj Spletni dodatek","label_install_chrome_browser_extension":"Inštaliraj dodatek za Chrome brskanik","label_newsletter_signup":"Prijavi se na naše E-novice","label_know_upcoming_features":"Bodi med prvimi, ki boste zvedeli več glede prihajajočih funkcij","label_learn_more_about_wunderlist":"Več informacij o Wunderlistu","label_learn_more":"Preberi več...","label_your_email_address":"Tvoj elektronski naslov","button_subscribe_to_newsletter":"Naroči se","button_sending_subscribe_to_newsletter":"Pošiljam...","iyf4_usermenu_label":"Get Wunderlist Pro for Free","iyf4_notification_label":"Get up to 12 free months of Wunderlist Pro by inviting your friends!","iyf4_notification_button_label_var_a":"Start Inviting","iyf4_notification_button_label_var_b":"Invite Friends","iyf4_notification_button_label_var_c":"Get Wunderlist Pro for Free","iyf4_notification_button_label_var_d":"Share Wunderlist Pro","iyf4_dialog_invite_headline_$":"Get up to $ of Wunderlist Pro by inviting your friends!","iyf4_dialog_invite_headline_incentive":"12 free months","iyf4_dialog_invite_incentive_$":"$ Wunderlist, we'll give you both 1 month of Wunderlist Pro for free (up to a limit of 12 months)","iyf4_dialog_invite_incentive_terms":"For every friend who joins","iyf4_dialog_tweet":"I love organizing my life with Wunderlist. Get a month of Wunderlist Pro for free here:","iyf_notification_label":"Refer Wunderlist to your friends and get Pro for free up to 12 months!","iyf_notification_button_label":"Go Pro!","iyf_dialog_step1_headline":"Get a free Pro Account","iyf_dialog_step1_subheadline":"in 3 easy steps","iyf_dialog_step1_instruction1_headline":"Start inviting your friends","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter or E-Mail","iyf_dialog_step1_instruction2_headline":"Your friends sign up","iyf_dialog_step1_instruction2_subheadline":"sit tight while they join Wunderlist","iyf_dialog_step1_instruction3_headline":"Enjoy your free Pro Account","iyf_dialog_step1_instruction3_subheadline":"1 month for every friend who accepts","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 month for every $ friends who accept","iyf_dialog_step1_next_button":"Start inviting","iyf_dialog_step2_subheadline":"to get your free Pro Account","iyf_dialog_step2_divider_label":"Share this link","iyf_dialog_share_on_facebook":"Share on Facebook","iyf_dialog_post_on_twitter":"Tweet on Twitter","iyf_dialog_email_placeholder":"Enter an email address...","iyf_dialog_more_placeholder":"Add another...","iyf_dialog_step3_headline":"Thank you for sharing","iyf_dialog_step3_subheadline":"Sit tight while your friends join","iyf_dialog_step3_success_headline":"Invites successfully sent","iyf_dialog_step3_success_subheadline":"We'll notify you as soon as your Pro account is ready.","iyf_dialog_step3_invite_more":"Invite more people","meta_title":"Wunderlist 2: Tvoj lepa in preprosta spletna aplikacija za opravila","meta_description":"Over 5 million people already use Wunderlist to manage tasks, to-do lists, and to get things done.  Wunderlist is the best to-do list for you, your team or your family.","meta_keywords":"6wunderkinder, produktivnost, sodelovanje, urejanje opravil, seznam nakupov, opravila, organizacija, planiranje, načrtovanje, opomniki, podopravila, pametni seznami, seznam za trgovino, seznam filmov, deljeni sezanm","enable_desktop_notifications_text":"V brskalniku klikni \"Potrdi\" in nato \"Dovoli\", da omogočiš obvestila.","notification_add_to_browser":"Naj bo tvoj Wunderlist le en klik stran. Dodaj Wunderlist Spletno aplikacijo v svoj brskalnik zdaj.","notification_add_extension_to_browser":"Hitro shrani vso svojo priljubljeno vsebino neposredno v Wunderlist. Inštaliraj Dodaj v Wunderlist dodatek za Chrome zdaj.","button_add_to_chrome":"Dodaj v Chrome","button_add_to_store_added":"Dodano","aria_activity_center_hint":"Activity Center. Hit escape to close.","aria_exit_search":"Exit Search","aria_search":"Search","aria_sort_list":"Sort List","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"User menu. Hit escape to close.","aria_assign_to_$":"Assign to $","momentjs_months":"Januar_Februar_Marec_April_Maj_Junij_Julij_Avgust_September_Oktober_November_December","momentjs_monthsShort":"Jan_Feb_Mar_Apr_Maj_Jun_Jul_Avg_Sep_Okt_Nov_Dec","momentjs_weekdays":"Nedelja_Ponedeljek_Torek_Sreda_Četrtek_Petek_Sobota","momentjs_weekdaysShort":"Ned_Pon_Tor_Sre_Čet_Pet_Sob","momentjs_weekdaysMin":"Ne_Po_To_Sr_Če_Pe_So","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Danes ob] LT","momentjs_calendar_nextDay":"[Jutri ob] LT","momentjs_calendar_nextWeek":"dddd [ob] LT","momentjs_calendar_lastDay":"[Včeraj ob] LT","momentjs_calendar_lastWeek":"[pretekli/o] dddd [ob] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"v %s","momentjs_relativeTime_past":"pred %s","momentjs_relativeTime_s":"nekaj sekund","momentjs_relativeTime_m":"minuto","momentjs_relativeTime_mm":"%d minut","momentjs_relativeTime_h":"uro","momentjs_relativeTime_hh":"%d ur","momentjs_relativeTime_d":"dan","momentjs_relativeTime_dd":"%d dni","momentjs_relativeTime_M":"mesec","momentjs_relativeTime_MM":"%d meseci","momentjs_relativeTime_y":"leto","momentjs_relativeTime_yy":"%d let"}
};
});
define('languages/turkish',[],function() {
return {
'name': 'turkish',
'data': {"actionbar_print_selected_item":"Seçilen Ögeyi Yazdır","actionbar_print_$_selected_items_plural":"Seçilen $ Ögeyi Yazdır","actionbar_email_selected_item":"Seçilen Ögeyi Epostala","actionbar_email_$_selected_items_plural":"Seçilen $ Ögeyi Epostala","actionbar_sort_alphabetically":"Alfabetik Sırala","actionbar_sort_due_date":"Bitiş Tarihine göre Sırala","actionbar_sort_assignee":"Atanana Göre Sıra","api_error_account_already_exists":"Bu e-posta adresi ile daha önce hesap oluşturulmuş.","api_error_connection_error":"Haydaa, sunucuya ulaşmada bir sorun yaşıyoruz. Lütfen daha sonra tekrar deneyin.","api_error_general_error":"Ters giden bir şeyler var. Sunucuya şu anda ulaşılamıyor. Lütfen tekrar deneyin.","api_error_incorrect_login":"E-posta adresinizi ya da parolanızı yanlış girdiniz.","api_error_incorrect_password":"Parolanızı yanlış girdiniz.","api_error_service_down":"WunderAPI hizmetinin bir parçası çalışmıyor.","api_error_unknown":"Beklenmeyen ve işlenmeyen bir hata oluştu.","api_error_validation_error_unable_to_signup":"Girmiş olduğunuz e-posta adresi ile kaydınızı yapamıyoruz.","api_error_not_a_beta_user":"Wunderlist beta üyesi değilsiniz.","button_back":"Geri","button_cancel":"İptal","button_confirm":"Onayla","button_download":"İndir","button_change":"Değiştir","button_choose":"Seç","button_connect":"Bağlan","button_connect_facebook":"Facebook ile Bağlan","button_continue":"Devam Et","button_delete":"Sil","button_disconnect":"Bağlantıyı Sonlandır","button_dismiss":"Vazgeç","button_done":"Tamam","button_edit":"Düzenle","button_get_started":"Kullanmaya Başlarken","button_go_back":"Geri Dön.","button_go_back_sentence":"Geri Dön.","button_learn_more":"Daha fazla bilgi","button_go_back_to_login":"Giriş Formuna Geri Dön","button_go_to_web_app":"Çevrimiçi Web Uygulamasına Git","button_join_now":"Şimdi Katıl","button_log_in":"Giriş Yap","button_log_in_with_$":"Log In With $","button_log_out":"Çıkış","button_log_in_facebook":"Facebook ile Giriş Yap","button_next":"Sonraki","button_no":"Hayır","button_no_due_date":"Bitiş tarihi yok","button_ok":"Tamam","button_remove_due_date":"Süresi Geçenleri Kaldır","button_remove_reminder":"Hatırlatıcıyı Kaldır","button_email_list":"Eposta Listesi","button_print_list":"Yazdırma Listesi","button_reset_password":"Parolayı Sıfırla","button_retry":"Tekrar dene","button_save":"Kaydet","button_send":"Gönder","button_sign_up":"Kayıt Ol","button_sign_up_with_$":"Sign Up With $","button_sign_up_for_free":"Ücretsiz Kaydolun","button_sign_up_facebook":"Facebook ile Kaydolun","button_support_center":"Destek Merkezi","button_subscribe":"Muhteşem, Tabiki!","button_try_again":"Yeniden Deneyin","button_try_wunderlist":"Wunderlist'i Dene","button_yes":"Evet","coachmark_all_list_empty":"Henüz herhangi bir öğe eklemediniz. Hadi başla ve birşeyler ekle.","coachmark_completed_list_empty":"Henüz herhangi bir öğeyi tamamlamadın. Şimdi listendeki bazı öğeleri kontrol edebilirsin!","coachmark_no_search_results":"Hiçbir Arama Sonucuna Ulaşılamadı","coachmark_sharing_invite_friends_heading":"Arkadaşlarını davet et","coachmark_sharing_invite_friends_text_$":"Arkadaşların yeni öğeler oluşturabilir, silebilir ve \"$\" listesinin öğelerini kontrol edebilirler.","coachmark_sharing_recent_no_contacts_heading":"Son Kişiler Listesi Boş","coachmark_sharing_recent_no_contacts_text_$":"Bir e-posta adresi yazın ya da kişi listenizde arayın. Kişiyi \"$\" listesine ekledikten sonra artık o yeni öğeler oluşturabilir, silebilir ve öğeleri kontrol edebilir.","coachmark_assigned_to_me_list_empty":"Görevlendirildiğiniz hiçbir şey yok","coachmark_conversations_list_empty":"There are no current conversations.","coachmark_starred_list_empty":"\"Yıldızlı\" olarak işaretlenen herhangi bir kayıt yok","coachmark_today_list_empty":"Tebrikler! Bugün yapılacak ya da yapılmamış görev kalmadı","coachmark_week_list_empty":"Tatilde misin? Sonraki 7 gün için yapılacak hiçbir hatırlatma yok.","error_list_not_found":"Bakmakta olduğunuz liste bulunamadı","error_share_not_created":"Listenizi paylaşmaya çalışırken bir sorun oluştu. Lütfen tekrar deneyin.","error_task_not_found":"Aradığınız öge bulunamadı","error_page_not_found":"Sayfa bulunamadı","error_title_not_found":"Bulunamadı","label_are_you_sure_permanently_delete_item":"Kalıcı olarak bu öğeyi silmek istediğinize emin misiniz?","label_are_you_sure_permanently_delete_item_plural":"Kalıcı olarak bu öğeleri silmek istediğinize emin misiniz?","label_activity_center":"Etkinlik Merkezi","label_are_you_sure_permanently_delete_$_list":"Kalıcı olarak \"$\" listesini silmek istediğinize emin misiniz?","label_are_you_sure_permanently_delete_$_task":"Kalıcı olarak \"$\" öğesini silmek istediğinize emin misiniz?","label_are_you_sure_permanently_delete_task_plural":"Bu kayıtları kalıcı olarak silmek istediğinize emin misiniz?","label_are_you_sure_permanently_delete_$_subtask":"Kalıcı olarak \"$\" alt öğesini silmek istediğinize emin misiniz?","label_cant_undo":"Bu işlemi geri alamazsınız.","label_completed_tasks_heading":"1 Tamamlanmış Öge","label_$_completed_tasks_heading_plural":"$ Tamamlanmış Öge","label_connecting":"Bağlanıyor...","label_minisite_description_line_1":"Yapmak istediğiniz herşeyin kaydını tutun.","label_minisite_description_line_2":"Wunderlist tüm önemli platformlarda ücretsiz olarak kullanıma sunulmuştur.","label_minisite_share_deleted_or_no_access":"Anlaşılan paylaşılan bu liste silinmiş ya da erişim hakkınız yok.","label_minisite_contact_sender_for_info":"Daha fazla bilgi için bu listeyi sizin ile paylaşan kişi ile iletişime geçiniz.","label_minisite_$_invited_you_to_the_list_$":"$1 sizi $2 listesine davet etti","label_minisite_empty_list_$":"Bu liste şu anda boş, başlamaları için yardım edin. Sadece yukarıdaki Kayıl Ol butona tıklayın ve $ listesine ögeler eklemeye başlayın.","label_day_0":"PAZ","label_day_1":"PZT","label_day_2":"SAL","label_day_3":"ÇAR","label_day_4":"PER","label_day_5":"CUM","label_day_6":"CMT","label_delete_file":"Dosyayı Sil","label_delete_list":"Listeyi Sil","label_delete_task":"Kaydı Sil","label_delete_task_plural":"Kayıtları Sil","label_delete_subtask":"Alt Görevi Sil","label_due_$":"Bitiş $","label_due_on":"$'e kadar bitirilmeli/tamamlanmalı","label_due_date":"Bitiş Tarihi","label_email":"E-posta","label_every":"her","label_loading":"Yükleniyor...","label_logging_out":"Çıkış Yapılıyor...","label_name":"İsim","label_newsletter":"Wunderlist Haberleri","label_none":"Hiçbiri","label_notification":"Bildirim","label_oops":"Haydaa!","label_or":"veya","label_password":"Parola","label_relative_date_today":"Bugün","label_relative_date_today_with_date":"Bugün, $","label_relative_date_today_mid_sentence":"bugün","label_relative_date_tomorrow":"Yarın","label_relative_date_tomorrow_with_date":"Yarın, $","label_relative_date_tomorrow_mid_sentence":"yarın","label_relative_date_yesterday":"Dün","label_remind_me_at_$":"Bana $ tarihinde hatırlat","label_reminder":"Hatırlatıcı","label_reminder_message_$":"Arkadaşça bir hatırlatma: $","label_repeat_every_day":"Her gün tekrarla","label_repeat_every_week":"Her hafta tekrarla","label_repeat_every_month":"Her ay tekrarla","label_repeat_every_year":"Her yıl tekrarla","label_repeat_custom":"Özelleştir","label_repeat_day":"Her gün","label_repeat_day_$_plural":"Her $ günde bir","label_repeat_month":"Her ay","label_repeat_month_$_plural":"Her $ ayda bir","label_repeat_week":"Her hafta","label_repeat_week_$_plural":"Her $ haftada bir","label_repeat_never":"Asla tekrarlama","label_repeat_year":"Her yıl","label_repeat_year_$_plural":"Her $ yılda bir","label_reset_password":"Parolayı Sıfırla","label_rights_reserved":"Her Hakkı Saklıdır","label_still_fetching_tasks":"Hala görevleri getiriyor...","label_sync":"Senkronizasyon","label_time_am":"Öğleden Önce","label_time_day_plural":"gün","label_time_week_plural":"hafta","label_time_month_plural":"ay","label_time_pm":"Öğleden Sonra","label_time_year_plural":"yıl","label_assign_to":"Ata","label_unassigned":"Atanmamış","label_assign_me":"Ben","label_created_$":"$ oluşturuldu","label_created_by_$":"$ tarafından oluşturuldu","label_created_on_$":"$ tarihinde oluşturuldu","label_created_$_by_$":"$1 $2 tarafından oluşturuldu","label_created_by_$_on_$":"$2 tarihinde $1 tarafından oluşturuldu","label_completed_$":"$ Tamamlandı","label_completed_on_$":"$ tarihinde tamamlandı","label_completed_$_by_$":"$1 $2 tarafından tamamlandı","label_completed_by_$_on_$":"$2 tarihinde $1 tarafından tamamlandı","login_add_photo_hint":"Fotoğraf yükleyerek Wunderlist hesabınızı kişiselleştirin.","login_already_have_account":"Zaten hesabınız var mı?","login_email_not_valid":"Lütfen geçerli bir e-posta adresi girin.","login_empty_name":"Lütfen adınızı girin.","login_empty_password":"Lütfen bir parola girin.","login_password_not_valid":"Lütfen geçerli bir parola giriniz.","login_empty_email":"Bir e-posta adresi girin.","login_enter_name":"Sen Kimsin?","login_enter_password":"Neredeyse Bitti","login_enter_password_hint":"Lütfen Wunderlist hesabınızın kurulumunu bitirmek için bir parola seçin.","login_forgot_password":"Parolayı Unuttum","login_forgot_password_heading":"Bir şey mi unuttun?","login_forgot_password_text":"Eğer kayıtlı olduğunuz e-posta adresini girerseniz, size parolanızı sıfırlamak için  izleyeceğiniz adımları e-posta ile bildireceğiz.","login_no_account_yet":"Hesabınız yok mu?","login_password_changed":"Parolanız Güncellendi","login_password_not_match":"Parola tekrarları uyuşmuyor.","login_password_reset_email_has_been_sent":"Lütfen parola sıfırlama adımlarına ulaşmak için e-posta adresinizi kontrol edin.","login_reset_password_heading":"Artık yeni bir parola oluşturma zamanı.","login_reset_password_success":"Sadece aşağıdaki butona tıklarsanız Wunderlist oturum açmaya hazır hale gelecektir.","login_reset_password_success_heading":"Parolanız başarıyla değiştirildi.","login_password_too_short":"Parolanız en az 5 karakterden oluşmalıdır.","login_sign_up":"Kayıt Ol","login_want_to_try_again":"Tekrar denemek ister misin?","login_accept_terms":"By signing up you accept our $1 and $2.","logout_timeout_title":"Senkronizasyon Hatası","logout_timeout_text":"Verilerinizi senkronize edemedik. Çıkmadan önce yeniden denemek ister misiniz?","mobile_tutorial_welcome_to":"Hoşgeldiniz","mobile_tutorial_wunderlist_subtitle":"şık ve basit yapılacaklar listeniz","notifications_desktop_enable_heading":"Masaüstü Bildirimleri Etkinleştirilsin mi?","notifications_no_notifications":"Herhangi bir etkinlik yok","notifications_no_notifications_message":"Paylaşılan listeler ve diğer faaliyetlerle ilgili davetiyeler burada görünür.","notifications_event_accept":"Onayla","notifications_event_accepted":"Onaylandı","web_upgrade_ie9_not_supported":"Wunderlist Internet Explorer 9 desteklemiyor. Daha iyi bir deneyim için lütfen şunlardan birine yükseltin; $ ya da $.","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"Looks like you are using a device with a touch screen. Would you like to enable a touch optimized interface? You can always change this in your account settings.","web_setting_enable_touch_for_$":"Enable Touch for: $","web_settings_text_refresh_may_be_required":"Refresh may be required","rate_label":"Wunderlist'i Oyla","rate_app_heading":"Wunderlis'i Oyla ve Yorumla","rate_app_message_web_chrome":"Wunderlist'i kullandığınız için teşekkürler. Ne düşündüğünüzü bilmek isteriz. Lütfen ne düşündüğünüzü bizi Chrome Web Mağazasın'da ★★★★★ ile oylayarak ve yorumlayarak söyleyin.","rate_app_button_later":"Daha sonra hatırlat","rate_app_button_no":"Hayır, Teşekkürler","rate_app_button_yes":"Wunderlist'e Oy Ver","placeholder_add_due_today_to_inbox":"\"Gelen\" kutusuna bugün tamamlanması gereken bir öğe ekle...","placeholder_add_list":"Yeni liste ekle...","placeholder_add_subtask":"Alt görev ekle","placeholder_add_starred_to_inbox":"\"Gelen\" kutusuna bugün tamamlanması gereken yıldızlı bir öğe ekle...","placeholder_add_task_to_$":"\"$\" içine öğe ekle","placeholder_add_to_inbox":"\"Gelen\" kutusuna bir kayıt ekle","placeholder_new_list":"Yeni Liste","placeholder_remind_me":"Bana hatırlat","placeholder_search":"Ara...","placeholder_sharing_search":"İsim ya da e-posta adresi...","placeholder_set_due_date":"Bitiş tarihini ayarla","browser_outdated_heading":"Aa, tarayıcınız güncel değil gibi gözüküyor","browser_outdated_update":"Lütfen tarayıcınızı güncelleyin","browser_outdated_explanation":"Wunderlist en son ve en harika teknoloji kullanılarak üretilir. Wunderlist'i kullanmak için tarayıcınızın son sürümünü indirin.","prenamed_list_movies":"Filmi İzle","prenamed_list_private":"Özel","prenamed_list_shopping":"Alışveriş","prenamed_list_wishlist":"İstek","prenamed_list_work":"İş","prenamed_list_read_later":"Sonra oku","settings_account_change_email":"E-posta adresini değiştir...","settings_account_change_password":"Parolanı değiştir...","settings_account_delete_confirmation":"\"Eminim\" yazın","settings_account_delete_confirmation_text":"Eminim","settings_account_drop_image":"Resmi Buraya Bırak","settings_account_connect_facebook_account":"Facebook ile Wunderlist hesabına bağlandığında listelerini arkadaşlarınla basit, hızlı ve kolay bir biçimde paylaşabilirsin.","settings_general_12_hour":"12 Saat","settings_general_24_hour":"24 Saat","settings_general_confirm_deletion":"Silinmek istenen öğelerde onayımı al","settings_general_create_new_tasks":"Yeni öğeler ekle","settings_general_date_format":"Tarih Biçimi","settings_general_language":"Dil","settings_general_start_of_week":"Hafta başlangıcı","settings_general_start_of_week_sunday":"Pazar","settings_general_start_of_week_saturday":"Cumartesi","settings_general_start_of_week_monday":"Pazartesi","settings_general_sound_task_completion":"Öğe tamamlandığında ses aktif","settings_general_sound_new_notifications":"Yeni bildirimler için sesi etkinleştir","settings_general_print_done_tasks":"Tamamlanmış ögeleri yazır","settings_general_tasks_bottom":"Listenin Sonuna Git","settings_general_tasks_top":"Listenin Başına Dön","settings_general_time_format":"Saat Biçimi","settings_heading_team":"Business","settings_heading_about":"Hakkında","settings_heading_account":"Hesap","settings_heading_general":"Genel","settings_heading_notification":"Bildirimler","settings_heading_shortcuts":"Kısayollar","settings_heading_sidebar":"Kenar Çubuğu","settings_imprint":"Hakkımızda","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"Önemli bildirimleri şu şekilde bana bildir:","settings_notifications_notify_me_on_text":"Birinin paylaşılan liste davetinizi kabul etmesi veya paylaşılan listenize öge eklemesi ya da ögeyi tamamlaması gibi bazı olaylarda sizi bilgilendireceğiz.","settings_sidebar_smart_lists_title":"Tercih edilen Akıllı Listeleri yan çubukta göster:","settings_sidebar_smart_lists_auto":"Otomatik","settings_sidebar_smart_lists_hidden":"Gizli","settings_sidebar_smart_lists_visible":"Görünür","settings_sync_full":"Şimdi Senkronize Et","settings_account_account_backup":"Hesap Yedekleme","settings_account_restore_backup":"Import Backup Data","settings_account_backup_description":"Backup data includes all your Lists, Tasks, Subtasks, Notes, and Reminders. Please note it does not include those Lists that were shared with you, Files, Comments, Shared List recipients and previous application settings.","settings_account_data_is_being_processed":"Hold tight! Your backup data is being processed. We will send you an email when everything is complete.","settings_account_change_password_error":"Parolanız güncellenirken bir sorun oluştu. Lütfen tekrar deneyiniz.","settings_account_click_to_download_backup":"İndirmek İçin Tıklayın","settings_account_create_backup":"Yedekleme Oluşturun","settings_account_current_password":"Mevcut Parola","settings_account_delete_account":"Hesabı Sil","settings_account_delete_account_confirm":"Hesabınızı gerçekten silmek istiyor musunuz?","settings_account_delete_account_confirm_text":"Hesabınız silinirken kalıcı tüm listeleriniz ve öğeleriniz de silinir ve geri alınamaz.","settings_account_fetching_data":"Veri alınıyor...","settings_account_new_password":"Yeni Parola","settings_account_repeat_new_password":"Yeni Parola Tekrarı","settings_account_right_click_and_save_as":"Sağ Tıklayın ve Kaydedin","settings_third_party_libraries":"Lisanslar","settings_background_credits":"Yapımcılar","settings_notifications_email_enabled":"E-posta Bildirimleri","settings_notifications_desktop_enabled":"Masaüstü Bildirimleri","settings_notifications_push_enabled":"Bildirimleri Kabul Et","settings_privacy_policy":"Gizlilik Politikası","settings_shortcuts_arrow_keys":"Yön Tuşları","settings_shortcuts_delete_item":"Seçilen Liste veya Öğeyi Sil","settings_shortcuts_mark_done":"Seçilen öğeleri 'Tamamlandı' olarak işaretle","settings_shortcuts_mark_starred":"Seçilen öğeleri 'Yıldızlı' olarak işaretle","settings_shortcuts_new_list":"Yeni Liste Ekle","settings_shortcuts_new_task":"Yeni bir öğe ekle","settings_shortcuts_open_all_smart_list":" 'Tümü' İsimli Akıllı Listeyi Aç","settings_shortcuts_open_assigned_smart_list":"'Bana Atananlar' Akıllı Listesini Aç","settings_shortcuts_open_conversations_smart_list":"Open 'Conversations' Smart List","settings_shortcuts_open_done_smart_list":"'Tamamlanan' İsimli Akıllı Listeyi Aç","settings_shortcuts_open_inbox":"Gelen Kutusunu Aç","settings_shortcuts_open_preferences":"Tercihleri Aç","settings_shortcuts_open_search":"Arama Yap","settings_shortcuts_open_starred_smart_list":"'Yıldızlı' Etiketli Akıllı Listeyi Aç","settings_shortcuts_open_today_smart_list":"'Bugün' İsimli Akıllı Listeyi Aç","settings_shortcuts_open_week_smart_list":"'Hafta' İsimli Akıllı Listeyi Aç","settings_shortcuts_reset":"Varsayılana Sıfırla","settings_shortcuts_select_all_tasks":"Tüm Öğeleri Seç","settings_shortcuts_show_more":"Daha fazla göster","settings_shortcuts_hide":"Gizle","settings_shortcuts_show_notifications":"Etkinlik Merkezini Göster","settings_shortcuts_step_through_list":"Bir Liste Boyu Kadar İlerle","settings_shortcuts_step_through_task":"Bir Liste Boyu Kadar İlerle","settings_terms_of_use":"Kullanım Koşulları","settings_account_header_free":"Ücretsiz","settings_account_header_unregistered":"Kayıt Ol","settings_account_header_account_$":"$  Hesap","settings_account_pro_description":"Add comments and files to your to-dos and assign them to your colleagues. Collaboration in teams has never been easier!","settings_account_register_wunderlist_description":"Tüm cihazlarınızdaki listeleri eşleştirmek için kayıt olun.","settings_manage_subscription_button":"Üyeliği düzenle","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"Yaşasın, siz $'sunuz!","settings_account_header_pro_description":"Wunderlist Pro projelerinizi takip etmek için en iyi yoldur. İşbirliği yapmak ve bir şeyleri gerçekleştirmek için arkadaşlarınızı davet edin.","settings_upgrade_to_pro_label":"$'ya Yükselt","settings_label_pro_account":"Pro Hesap","settings_label_purchased_from_$":"$ Adresinden Satın Alındı","settings_label_purchased_from_$_by_$":"$2 kişisi tarafından $1 mağazasından satın alındı.","settings_label_expires_in_$":"$ Gün İçinde Bitiyor","setting_label_next_billing_date":"Gelecek Fatura Tarihi: ","setting_label_cancel_subscription":"Aboneliği İptal Et","setting_heading_cancel_subscription":"Wunderlist Pro Aboneliğinizi gerçekten iptal etmek istiyor musunuz?","setting_description_cancel_subscription":"Hala verilerinize erişebiliyor olacağız, ama aboneliğiniz bir kere bittiğinde, Wunderlist'in yalnızca standart özelliklerini kullanabiliyor olacaksınız.","setting_label_cancel_subscription_success":"Aboneliğiniz başarıyla iptal edildi.","settings_label_invoices":"Invoices","settings_label_become_a_pro":"Pro Ol","settings_payment_info_expires_$_relative":"$ bitiyor","settings_payment_info_expires_$_absolute":"$1 içinde bitiyor: $2","settings_manage_subscription_error":"Afedersiniz, aboneliğinizi düzenlemeye çalışırken bir hata oluştu.","group_billing_packages_title":"Plans for every business ","group_billing_packages_text":"Wunderlist for Business provides you with all the features you need to work smarter as a team at an affordable price. Simply select the right plan for your business now.","group_billing_plan_table_team_size":"Ekip Büyüklüğü","group_billing_plan_table_price":"Tutar","group_billing_plan_table_package_name_$":"$ Üye","group_billing_buy_button_label":"Satın Al","group_billing_$_off":"$ İndirim ","group_billing_larger_team_$":"Takımınız daha mı büyük? $","group_billing_contact_us":"Bize ulaşın!","group_billing_downgrade_error_$_$":"$1 üye planına geçebilmek için $2 kadar takım arkadaşınızı hesaptan çıkarmalısınız.","group_billing_manage_team":"Takımınızı yönetmek için buraya tıklayın.","group_billing_button_label_manage":"Yönet","group_billing_team_plan_title":"Your Wunderlist Pro Plan","group_billing_team_plan_text":"Wunderlist Pro ekibinizle birlikte büyür. Üye eklemek acayip kolaydır, sadece aşağıya eposta adreslerini girin. Zaten Wunderlist üyesi olup olmamaları kadar basittir.","group_billing_upgrade_button_label":"Planı Değiştir","group_billing_upgrade_plan_button_label":"Yükselt","group_billing_Downgrade_plan_button_label":"Düşür","group_billing_view_plans_button_label":"Planları Gör","group_billing_manage_team_header":"Takım Üyelerini Yönet","group_billing_email_address_input_placeholder":"Eposta adresleri","group_billing_manage_count_$_of_$":"$2 kişinin$1 kişisi","group_billing_cancel_team_plan":"Cancel Your Wunderlist Pro Plan","group_billing_search_coachmark":"Üye eklemek için, takım arkadşlarınızın eposta adreslerini girin ve onları Pro planınıza dahil edin.","group_billing_cancel_header":"Takımınızın Wunderlist Pro Aboneliğini iptal etmek istediğinize emin misiniz?","group_billing_change_plan_confirmation_$_$_$":"Planları değiştirmek kolaydır. $1 üye planını seçerseniz, $3. tarihinde başlayan dönemden itibaren $2 kadar faturalandırılacaksınız. Şimdi bunu yapmak istediğinize emin misiniz?","group_billing_cancel_text":"Pro aboneliğiniz ay sonuna kadar devam edecek ve tekrar faturalandırılmayacaksınız. Görevlere dosya ekleme gibi kimi Pro özelliklerini görebilecek olmanıza rağmen bunlar üzerinde herhangi bir değişiklik yapamayacaksınız.","error_goup_billing_user_already_pro":"Görünüşe göre bu kişinin zaten Wunderlist Pro hesabı var. Pro hediyenizi başka bir arkadşınıza verin!","error_group_billing_wait_subscription_runs_out":"Tekrar satın almadan önce şu anki aboneliğinizin bitmesini beklemek zorundasınız. $.tarihinde sona eecek.","button_label_buy_wunderlist_for_business":"Go to Wunderlist for Business","benefit_payment_service_unavailable":"Ödeme Servisine Ulaşılamıyor","benefit_name":"Wunderlist Pro","benefit_header_$":"Bir $ Ol","benefit_header_description":"İş yaşamında ve ekip çalışmalarında iş birliği hiç bu kadar kolay olmamıştı. İşte size Wunderlist Pro'ya kayıt olmanız için 4 harika neden.","benefit_button_buy_monthly":"Aylık","benefit_assign_tasks_title":"Yapılacakları Ata","benefit_assign_tasks_description":"Kolayca arkadaşlarınız arasında yapılacakları belirleyin ve onları takip edin.","benefit_unlimited_subtasks_title":"Sınırsız Alt Görevler","benefit_unlimited_subtasks_decription":"Gelişmiş bir yaratıcılık için büyük görevleri küçük, başarılabilir adımlara bölün — hiçbir sınır olmadan","benefit_comments_title":"Yorumlar","benefit_comments_description":"Start a conversation with your teammates about any of your to-dos. Leave feedback, ask a question or add some extra insight.","benefit_backgrounds_update_$":"Yeni arkaplanlarımızı kullanmak için lütfen hesabınızı şuna yükseltin; $","benefit_additional_backgrounds_title":"Yeni Arkaplanlar","benefit_additional_backgrounds_description":"Wunderlist'i keyfinizce kişiselleştirmek için 8 yeni harika arkaplanı keşfedin.","benefit_files_title":"Dosyalar","benefit_files_description":"Dosyaları yapılacaklara ekleyip onları ekip arkadaşlarınızla paylaşın.","benefit_coming_soon":"Yakında","benefit_assign_become_pro":"Wunderlist'le iş arkadaşınıza yapılacakları atayın.","benefit_label_accept_terms":"Wunderlist Pro alarak, şunları kabul ediyorsunuz; $1 ve $2.","benefit_label_need_more_subtasks":"Daha fazla alt göreve mi ihtiyacınız var?","sharing_connect_facebook_sharing":"Facebook ile Wunderlist hesabınıza bağlanıp arkadaşlarınızı davet edin.","sharing_facebook_apprequest_message_$user_$list":"“$1” sizinle “$2” listesini paylaşmak istiyor","sharing_invite":"Tanıdıklarını Davet Et","sharing_invite_friends":"Arkadaşlarını davet et","sharing_inviting_requires_account":"Arkadaşlarınızı ve iş arkadaşlarınızı listelerinize davet etmek için kaydolun.","sharing_leave_action":"Bu listeden ayrılmak istediğinize emin misiniz?","sharing_leave_button":"Paylaşılmış Listeden Ayrıl","sharing_list_members":"Listenin Üyeleri","sharing_list_owner":"Sahibi","sharing_list_pending_member":"Beklemede olan","sharing_tab_recents":"Son Kişiler","sharing_shared_with_you_by":"%(who) seninle paylaştı","smart_list_assigned_to_me":"Bana atananlar","smart_list_conversations":"Konuşmalar","smart_list_all":"Tümü","smart_list_completed":"Tamamlandı","smart_list_inbox":"Gelen Kutusu","smart_list_starred":"Yıldızlı","smart_list_today":"Bugün","smart_list_week":"Hafta","label_tell_friends":"Arkadaşlarınıza bahsedin","social_sharing_heading":"En sevdiğiniz sosyal ağdaki arkadaşlarınıza haber verin!","social_sharing_dialog_headline":"Love Wunderlist?","social_sharing_dialog_danke":"Dankeschön!","social_sharing_button_later":"Şimdi Değil","social_sharing_button_no_thanks":"Hayır, Teşekkürler","social_sharing_button_facebook":"Paylaş","social_sharing_button_follow_us":"Bizi Takip edin","social_sharing_button_like_us":"Bizi Beğenin","social_sharing_heading_thanks":"En son Wunderlist haberleri için bizi takip ettiğinizden emin olun.","social_sharing_button_twitter":"Tweetle","general_sharing_placeholder":"I’m using Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","twitter_sharing_placeholder":"I’m using @Wunderlist, my beautiful and simple to-do list. Get it for free now at www.wunderlist.com","tutorial_welcome_notes_title":"Notlar","tutorial_welcome_notes_text":"Wunderlist çalışmalarınız için notlarınızı uygulama içinde ya da dışında kullanmanıza izin verir.","tutorial_welcome_notifications_title":"Etkinlik Merkezi","tutorial_welcome_notifications_text":"Bildirimleri alma biçiminizi belirleyin. Etkinlik merkezinden tümünü görüntüleyebilir ya da e-posta ve masaüstü bildirimleri yoluyla davet edildiğiniz, sizinle paylaşılan güncel listeleri tercih edebilirisiniz.","tutorial_welcome_sharing_title":"Arkadaşlarını davet et","tutorial_welcome_sharing_text":"Arkadaşlarınızı ve iş arkadaşlarınızı davet etmek artık çok kolay. Artık birkaç dokunuşta onlara yardım elinizi uzatabilirsiniz.","tutorial_welcome_subtasks_title":"Tekrarlanan Ögeler, Hatırlatıcılar ve Alt Görevler ","tutorial_welcome_subtasks_text":"Wunderlist sizi kolayca tekrarlanan öge, hatırlatıcı ve alt görev eklemenizi sağlayan yepyeni Detaylı Görünüm'le tanıştırıyor.","tutorial_welcome_user_title":"Her şey senin hakkında!","tutorial_welcome_user_text":"Hesap ayarlarınızı değiştirebilir, senkronizasyon durumunu kontrol edebilir ve arka planınızı özelleştirebilirsiniz.","tutorial_welcome_newsletter_subscribe":"Wunderlist'in güncelleştirmelerini ve yeni özelliklerini bana email ile bildir","tutorial_feature_pro_title":"Wunderlist Pro Özellikleri","share_list_email_signature":"Sent with Wunderlist – My beautiful and simple to-do list\\nIt’s free for iPhone, iPad, Android, Mac, Windows PC and Web!\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ senkronize olmamış öğe","userbar_$_unsynced_item_plural":"$ senkronize olmayan öğeler","userbar_account_settings":"Hesap Ayarları","userbar_change_background":"Arkaplanı Değiştir","userbar_last_synced_$":"Son senkronize zamanı: $","userbar_no_internet_connection":"Çevrimdışı","userbar_preferences":"Tercihler","userbar_sync_in_progress":"Senkronize ediliyor...","userbar_user_name_for_unregistered_mode":"Senkronizasyon için Kayıt Ol","whatsnew_title":"Neler Yeni","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"Yorumlar","whatsnew_label_voice":"Sesli Giriş","whatsnew_label_groupbilling":"Takım Ücretleri","whatsnew_copy_comments":"Keep all the conversations about your to-dos in one place with Comments in Wunderlist Pro. Leave feedback, ask a question or add extra insight to any of your to-dos to greatly improve communication within your team.","whatsnew_copy_pro_accounts":"Add Comments, Assign to-dos, add Files and create Unlimited Subtasks with Wunderlist Pro to accomplish more, together.","whatsnew_copy_voice":"Click the microphone icon to dictate your to-dos or even record a Voice Memo and attach it as a file.","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"Sign up to try Wunderlist Pro and add a File.","label_add_new_file":"Bir dosya ekleyin...","file_uploaded_unsuccessfully":"$ ögesinin yüklenmesi başarısız oldu. Lütfen tekrar deneyin.","file_uploaded_failed":"Yükleme tamamlanamadı. Lütfen tekrar deneyin.","file_uploaded_failed_deleted":"Upload of $ failed, because the file was deleted from your hard drive.","label_are_you_sure_permanently_delete_$_file":"$” tamamen Wunderlist'ten kaldırılsın istiyor musunuz?","upload_file_was_not_synced_yet":"Lütfen eşzamanlayın","upload_file_not_synced_yet":"Eşleşme yapılmamış","placeholder_add_comments":"Yorum ekle...","placeholder_reply":"Yanıtla...","button_label_go_pro_to_comment":"Yorum yapmak için Pro ol","comment_request_failed":"Üzgünüz, yorumlar yüklenemedi. Lütfen tekrar deneyin.","comment_load_earlier":"View more Comments","coachmark_no_current_comments":"No comments yet.\\nStart your conversation here.","coachmark_comments_not_available":"Sorry, we couldn’t load the previous comments. Please try again in a few moments.","notification_$_commented_on_$":"$1 commented on $2","notification_$_and_$_commented_on_$":"$1 and $2 commented on $3","notification_$_and_$_others_commented_on_$":"$1 and $2 others commented on $3","comments_requires_account":"Sign up to try Wunderlist Pro and add a Comment.","non_pro_trial_free_limit_reached":"You’ve reached your Free limit!","non_pro_trial_write_next_comment_$":"You can add another Comment $.","non_pro_trial_upload_next_file_$":"You’ll be able to add another File $.","non_pro_trial_assign_next_to_do_$":"You can Assign another to-do $.","button_signup_or_login":"Üye Ol veya Giriş Yap","button_it_is_completely_free":"Tamamen ücretsiz","label_free_download_for_platforms":"iPhone, iPad, Android, Windows ve Mac için ücretsiz kullanılabilir","label_wunderlist_to_get_things_done":"More than 5 million people use Wunderlist to get things done.","label_people_who_use_wunderlist":"Zaten kim Wunderlist kullanıyor görün:","label_wunderlist_uses":"İster işinizi düzenliyor olun ister sevdiğiniz biriyle alışveriş listenizi başlaşıyor ya da sadece hayatınızdakileri aklınızda tutuyor olun; ekibiniz, aileniz ve kendiniz için en iyi yapılacaklar listesi Wunderlist'tir. ","label_install_browser_extension":"Tarayıcı Eklentisini Yükle","label_install_chrome_browser_extension":"Chrome Eklentisini Yükle","label_newsletter_signup":"Bültenimiz için kaydol","label_know_upcoming_features":"En yeni özellikleri ilk duyanlardan olun","label_learn_more_about_wunderlist":"Wunderlist hakkında daha fazlasını öğren","label_learn_more":"Daha fazlasını öğrenin...","label_your_email_address":"Eposta adresiniz","button_subscribe_to_newsletter":"Abone Ol","button_sending_subscribe_to_newsletter":"Gönderiliyor...","iyf4_usermenu_label":"Get Wunderlist Pro for Free","iyf4_notification_label":"Get up to 12 free months of Wunderlist Pro by inviting your friends!","iyf4_notification_button_label_var_a":"Start Inviting","iyf4_notification_button_label_var_b":"Invite Friends","iyf4_notification_button_label_var_c":"Get Wunderlist Pro for Free","iyf4_notification_button_label_var_d":"Share Wunderlist Pro","iyf4_dialog_invite_headline_$":"Get up to $ of Wunderlist Pro by inviting your friends!","iyf4_dialog_invite_headline_incentive":"12 free months","iyf4_dialog_invite_incentive_$":"$ Wunderlist, we'll give you both 1 month of Wunderlist Pro for free (up to a limit of 12 months)","iyf4_dialog_invite_incentive_terms":"For every friend who joins","iyf4_dialog_tweet":"I love organizing my life with Wunderlist. Get a month of Wunderlist Pro for free here:","iyf_notification_label":"Refer Wunderlist to your friends and get Pro for free up to 12 months!","iyf_notification_button_label":"Go Pro!","iyf_dialog_step1_headline":"Get a free Pro Account","iyf_dialog_step1_subheadline":"in 3 easy steps","iyf_dialog_step1_instruction1_headline":"Start inviting your friends","iyf_dialog_step1_instruction1_subheadline":"via Facebook, Twitter or E-Mail","iyf_dialog_step1_instruction2_headline":"Your friends sign up","iyf_dialog_step1_instruction2_subheadline":"sit tight while they join Wunderlist","iyf_dialog_step1_instruction3_headline":"Enjoy your free Pro Account","iyf_dialog_step1_instruction3_subheadline":"1 month for every friend who accepts","iyf_dialog_step1_instruction3_subheadline_$_plural":"1 month for every $ friends who accept","iyf_dialog_step1_next_button":"Start inviting","iyf_dialog_step2_subheadline":"to get your free Pro Account","iyf_dialog_step2_divider_label":"Share this link","iyf_dialog_share_on_facebook":"Share on Facebook","iyf_dialog_post_on_twitter":"Tweet on Twitter","iyf_dialog_email_placeholder":"Enter an email address...","iyf_dialog_more_placeholder":"Add another...","iyf_dialog_step3_headline":"Thank you for sharing","iyf_dialog_step3_subheadline":"Sit tight while your friends join","iyf_dialog_step3_success_headline":"Invites successfully sent","iyf_dialog_step3_success_subheadline":"We'll notify you as soon as your Pro account is ready.","iyf_dialog_step3_invite_more":"Invite more people","meta_title":"Wunderlist 2: Şık ve sade çevrimiçi yapılacaklar uygulamanız","meta_description":"Over 5 million people already use Wunderlist to manage tasks, to-do lists, and to get things done.  Wunderlist is the best to-do list for you, your team or your family.","meta_keywords":"6wunderkinder, yaratıcılık, işbirliği, görev yönetimi, yapılacaklar, liste, görevler, gtd, organize, plan, alışveriş listesi, hatırlatıcı, alt görevler, akıllı listeler, bakkaliye listesi, film listesi, paylaşılan liste","enable_desktop_notifications_text":"Tarayıcınızda bildirimleri etkinleştirmek için önce \"Onayla\"ya sonra \"İzin Ver\"e basın.","notification_add_to_browser":"Wunderlist bir tık ötenizde. Hadi Wunderlist Web Uygulamasını tarayıcınıza ekleyin.","notification_add_extension_to_browser":"Sevdiğiniz web içeriğini kolayca Wunderlist'e kaydedin. Hemen Wunderlist'e Ekle Chrome eklentisini yükleyin.","button_add_to_chrome":"Chrome'a ekle","button_add_to_store_added":"Eklendi","aria_activity_center_hint":"Activity Center. Hit escape to close.","aria_exit_search":"Exit Search","aria_search":"Search","aria_sort_list":"Sort List","aria_thank_you":"We hope our accessibility features have worked well for you. Please send any feedback regarding our accessibility implementation to support@wunderlist.com. Thank you for choosing Wunderlist.","aria_user_menu_hint":"User menu. Hit escape to close.","aria_assign_to_$":"Assign to $","momentjs_months":"Ocak_Şubat_Mart_Nisan_Mayıs_Haziran_Temmuz_Ağustos_Eylül_Ekim_Kasım_Aralık","momentjs_monthsShort":"Oca_Şub_Mar_Nis_May_Haz_Tem_Ağu_Eyl_Eki_Kas_Ara","momentjs_weekdays":"Pazar_Pazartesi_Salı_Çarşamba_Perşembe_Cuma_Cumartesi","momentjs_weekdaysShort":"Paz_Pzt_Sal_Çar_Per_Cum_Cmt","momentjs_weekdaysMin":"Pz_Pt_Sa_Ça_Pe_Cu_Ct","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[Bugün itaberiyle] LT","momentjs_calendar_nextDay":"[Yarından] LT","momentjs_calendar_nextWeek":"dddd [at] LT","momentjs_calendar_lastDay":"[Dün] LT","momentjs_calendar_lastWeek":"[Geçen] dddd [at] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"%s içinde","momentjs_relativeTime_past":"%s önce","momentjs_relativeTime_s":"birkaç saniye","momentjs_relativeTime_m":"bir dakika","momentjs_relativeTime_mm":"%d dakika","momentjs_relativeTime_h":"bir saat","momentjs_relativeTime_hh":"%d saat","momentjs_relativeTime_d":"bir gün","momentjs_relativeTime_dd":"%d gün","momentjs_relativeTime_M":"bir ay","momentjs_relativeTime_MM":"%d ay","momentjs_relativeTime_y":"bir yıl","momentjs_relativeTime_yy":"%d yıl"}
};
});
define('languages/simplified-chinese-china',[],function() {
return {
'name': 'simplified-chinese-china',
'data': {"actionbar_print_selected_item":"打印所选项目","actionbar_print_$_selected_items_plural":"打印 $ 个所选项目","actionbar_email_selected_item":"通过电子邮件发送所选项目","actionbar_email_$_selected_items_plural":"通过电子邮件发送 $ 个所选项目","actionbar_sort_alphabetically":"按字母顺序排序","actionbar_sort_due_date":"按截止日期排序","actionbar_sort_assignee":"按受托人排序","api_error_account_already_exists":"这个电子邮件地址已经被注册过了。","api_error_connection_error":"哎呀，似乎服务器有点问题，请重试。","api_error_general_error":"哎呀，暂时无法连接到服务器，请重试。","api_error_incorrect_login":"您输入的电子邮件地址或密码不正确。","api_error_incorrect_password":"您输入的密码不正确。","api_error_service_down":"WunderAPI 的关键服务已出现问题。","api_error_unknown":"发生了意想不到且未处理的错误。","api_error_validation_error_unable_to_signup":"我们无法用这个电子邮件地址注册。","api_error_not_a_beta_user":"您不是 Wunderlist 测试版用户。","button_back":"返回","button_cancel":"取消","button_confirm":"确认","button_download":"下载","button_change":"更改","button_choose":"选择","button_connect":"连接","button_connect_facebook":"连接到 Facebook","button_continue":"继续","button_delete":"删除","button_disconnect":"断开","button_dismiss":"关闭","button_done":"完成","button_edit":"编辑","button_get_started":"让我们开始吧！","button_go_back":"返回","button_go_back_sentence":"返回。","button_learn_more":"了解更多","button_go_back_to_login":"返回到登录","button_go_to_web_app":"跳转到网页版应用","button_join_now":"立即加入","button_log_in":"登录","button_log_in_with_$":"通过 $ 登录","button_log_out":"注销","button_log_in_facebook":"用 Facebook 账户登录","button_next":"下一张","button_no":"否","button_no_due_date":"无截止日期","button_ok":"确定","button_remove_due_date":"移除截止日期","button_remove_reminder":"移除提醒","button_email_list":"电子邮件列表","button_print_list":"打印列表","button_reset_password":"重设密码","button_retry":"重试","button_save":"保存","button_send":"发送","button_sign_up":"注册","button_sign_up_with_$":"通过 $ 注册","button_sign_up_for_free":"免费注册","button_sign_up_facebook":"用 Facebook 注册","button_support_center":"技术支持中心","button_subscribe":"真棒！正是我想要的！","button_try_again":"请重试","button_try_wunderlist":"试用 Wunderlist","button_yes":"是","coachmark_all_list_empty":"您还没有添加任何任务。来吧！添加些东西。","coachmark_completed_list_empty":"您还没有完成任何任务。来吧，给您列表里的几个任务打上勾！","coachmark_no_search_results":"无搜索结果","coachmark_sharing_invite_friends_heading":"邀请您的好友","coachmark_sharing_invite_friends_text_$":"您的好友将可以创建、删除和查看 “$” 列表中的任务。","coachmark_sharing_recent_no_contacts_heading":"暂无最近联系人","coachmark_sharing_recent_no_contacts_text_$":"输入一个电子邮件地址或者查找您的通讯录。一旦加入，您的好友将能创建、删除和查看 “$” 列表中的任务。","coachmark_assigned_to_me_list_empty":"没有分配给您任何东西","coachmark_conversations_list_empty":"当前没有对话。","coachmark_starred_list_empty":"您没有加星标的任务","coachmark_today_list_empty":"恭喜！您今天没有截止或逾期的事项。","coachmark_week_list_empty":"在度假吗？下周没有任何即将截止的任务","error_list_not_found":"找不到您要的列表","error_share_not_created":"在尝试共享您的列表时出现问题，请重试。","error_task_not_found":"无法找到您要找的任务","error_page_not_found":"找不到页面","error_title_not_found":"找不到","label_are_you_sure_permanently_delete_item":"您确定要永久删除这个任务吗？","label_are_you_sure_permanently_delete_item_plural":"您确定要永久删除这些任务吗？","label_activity_center":"动态中心","label_are_you_sure_permanently_delete_$_list":"您确定要永久删除 “$” 列表吗？","label_are_you_sure_permanently_delete_$_task":"您确定要永久删除任务 “$” 吗？","label_are_you_sure_permanently_delete_task_plural":"您确定要永久删除这些任务吗？","label_are_you_sure_permanently_delete_$_subtask":"您确定要永久删除这个子任务 “$” 吗？","label_cant_undo":"您将无法撤销此操作","label_completed_tasks_heading":"1 个已完成的任务","label_$_completed_tasks_heading_plural":"$ 个已完成的任务","label_connecting":"连接中...","label_minisite_description_line_1":"跟进您所有待办事项。","label_minisite_description_line_2":"Wunderlist 是免费的且支持各大平台。","label_minisite_share_deleted_or_no_access":"这个看起来已经被删除了或者您已经不再有权限访问。","label_minisite_contact_sender_for_info":"更多信息请询问共享这份列表给您的人。","label_minisite_$_invited_you_to_the_list_$":"$1 邀请您至列表 $2","label_minisite_empty_list_$":"列表现在是空的，需要您协助起个头。点击注册按钮，任何添加任务到列表 $ 。","label_day_0":"周日","label_day_1":"周一","label_day_2":"周二","label_day_3":"周三","label_day_4":"周四","label_day_5":"周五","label_day_6":"周六","label_delete_file":"删除文件","label_delete_list":"删除列表","label_delete_task":"删除任务","label_delete_task_plural":"删除任务","label_delete_subtask":"删除子任务","label_due_$":"截止至 $","label_due_on":"截止至 $","label_due_date":"截止日期","label_email":"电子邮件","label_every":"每","label_loading":"载入中...","label_logging_out":"注销中...","label_name":"名字","label_newsletter":"Wunderlist 电子期刊","label_none":"无","label_notification":"通知","label_oops":"糟糕！","label_or":"或","label_password":"密码","label_relative_date_today":"今天","label_relative_date_today_with_date":"今天，$","label_relative_date_today_mid_sentence":"今天","label_relative_date_tomorrow":"明天","label_relative_date_tomorrow_with_date":"明天，$","label_relative_date_tomorrow_mid_sentence":"明天","label_relative_date_yesterday":"昨天","label_remind_me_at_$":"在 $ 时提醒我","label_reminder":"提醒","label_reminder_message_$":"友善的提醒 : $","label_repeat_every_day":"每天重复","label_repeat_every_week":"每周重复","label_repeat_every_month":"每月重复","label_repeat_every_year":"每年重复","label_repeat_custom":"自定义...","label_repeat_day":"每天","label_repeat_day_$_plural":"每 $ 天","label_repeat_month":"每月","label_repeat_month_$_plural":"每 $ 个月","label_repeat_week":"每周","label_repeat_week_$_plural":"每 $ 周","label_repeat_never":"不要重复","label_repeat_year":"每年","label_repeat_year_$_plural":"每 $ 年","label_reset_password":"重置密码","label_rights_reserved":"保留所有权利","label_still_fetching_tasks":"获取任务中...","label_sync":"同步","label_time_am":"上午","label_time_day_plural":"天","label_time_week_plural":"周","label_time_month_plural":"月","label_time_pm":"下午","label_time_year_plural":"年","label_assign_to":"分配至","label_unassigned":"未分配","label_assign_me":"我","label_created_$":"$ 创建","label_created_by_$":"由 $ 创建 ","label_created_on_$":"在 $ 创建","label_created_$_by_$":"由 $2 创建于 $1","label_created_by_$_on_$":"由 $2 创建于 $1","label_completed_$":"$ 完成","label_completed_on_$":"在 $ 完成","label_completed_$_by_$":"由 $2 $1 完成","label_completed_by_$_on_$":"由 $2 在 $1 完成","login_add_photo_hint":"上传照片来个性化您的 Wunderlist 账户。","login_already_have_account":"已经有账户了？","login_email_not_valid":"请输入一个有效的电子邮件地址。","login_empty_name":"请输入您的名字。","login_empty_password":"请输入密码。","login_password_not_valid":"请输入一个有效的密码。","login_empty_email":"请输入一个电子邮件。","login_enter_name":"您是谁？","login_enter_password":"即将完成","login_enter_password_hint":"请输入一个密码，以便完成您的 Wunderlist 账户设置。","login_forgot_password":"忘记密码？","login_forgot_password_heading":"忘记密码了吗？","login_forgot_password_text":"输入您注册的电子邮件地址，我们会给您发送重置密码的链接。","login_no_account_yet":"没有账户？","login_password_changed":"密码已更新","login_password_not_match":"您输入的密码不一致。","login_password_reset_email_has_been_sent":"请检查您的电子邮件查看重设密码说明。","login_reset_password_heading":"现在可以创建您的新密码了。","login_reset_password_success":"只需点击下面的按钮，您就可以登录到Wunderlist。","login_reset_password_success_heading":"太棒了！您的密码已经修改完成。","login_password_too_short":"密码必须包含至少5个字符。","login_sign_up":"注册。","login_want_to_try_again":"密码又想起来了？","login_accept_terms":"通过注册，您接受我们的 $1 和 $2。","logout_timeout_title":"同步错误","logout_timeout_text":"我们无法同步您的数据。您希望重试还是注销？","mobile_tutorial_welcome_to":"欢迎使用","mobile_tutorial_wunderlist_subtitle":"您最便捷的任务管理软件","notifications_desktop_enable_heading":"开启桌面通知？","notifications_no_notifications":"尚无动态","notifications_no_notifications_message":"这里将显示共享列表的邀请与其他动态。","notifications_event_accept":"接受","notifications_event_accepted":"已接受","web_upgrade_ie9_not_supported":"Wunderlist 不支持 Internet Explorer 9。要获得更好的体验请升级至 $ 或 $ 。","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"似乎您正在使用带触屏的设备。您是否要开启触摸优化界面？您可以在您的账户设置中随时对其进行更改。","web_setting_enable_touch_for_$":"开启触摸：$","web_settings_text_refresh_may_be_required":"可能需要刷新","rate_label":"给 Wunderlist 评分","rate_app_heading":"给 Wunderlist 评分和评论","rate_app_message_web_chrome":"感谢您使用 Wunderlist，我们很乐意听取您的建议！请在 Chrome Web Store 的评分中给 Wunderlist  ★★★★★ 并在评论中留下您的建议。","rate_app_button_later":"稍后","rate_app_button_no":"不，谢谢","rate_app_button_yes":"现在给 Wunderlist 评分","placeholder_add_due_today_to_inbox":"在“收件箱”中添加一个今天要到期的任务...","placeholder_add_list":"添加一个列表...","placeholder_add_subtask":"添加一个子任务","placeholder_add_starred_to_inbox":"在“收件箱”中添加一个加星标的任务...","placeholder_add_task_to_$":"在 “$” 中添加一个任务...","placeholder_add_to_inbox":"在 “收件箱”中添加一个任务","placeholder_new_list":"新列表","placeholder_remind_me":"提醒我","placeholder_search":"搜索...","placeholder_sharing_search":"名字或者电子邮件地址...","placeholder_set_due_date":"设置截止日期","browser_outdated_heading":"噢，看来您的浏览器不是最新的版本。","browser_outdated_update":"请更新您的浏览器","browser_outdated_explanation":"Wunderlist 使用的是最先进的技术。如要使用 Wunderlist，请更新您的浏览器至最新版本。","prenamed_list_movies":"想看的电影","prenamed_list_private":"隐私","prenamed_list_shopping":"购物","prenamed_list_wishlist":"愿望列表","prenamed_list_work":"工作","prenamed_list_read_later":"稍后阅读","settings_account_change_email":"更改电子邮件...","settings_account_change_password":"更改密码...","settings_account_delete_confirmation":"输入“我确定”","settings_account_delete_confirmation_text":"我确定","settings_account_drop_image":"把图片拖到这里","settings_account_connect_facebook_account":"将您的 Wunderlist 账户连接到 Facebook，可以便捷地与您的好友分享列表。","settings_general_12_hour":"12 小时制","settings_general_24_hour":"24 小时制","settings_general_confirm_deletion":"删除任务前先确认","settings_general_create_new_tasks":"添加新任务","settings_general_date_format":"日期格式","settings_general_language":"语言","settings_general_start_of_week":"一周开始于","settings_general_start_of_week_sunday":"周日","settings_general_start_of_week_saturday":"周六","settings_general_start_of_week_monday":"周一","settings_general_sound_task_completion":"任务完成时开启声音通知","settings_general_sound_new_notifications":"开启声音通知","settings_general_print_done_tasks":"打印已完成的任务","settings_general_tasks_bottom":"列表底部","settings_general_tasks_top":"列表顶部","settings_general_time_format":"时间格式","settings_heading_team":"商业","settings_heading_about":"关于","settings_heading_account":"账户","settings_heading_general":"通用","settings_heading_notification":"通知","settings_heading_shortcuts":"快捷方式","settings_heading_sidebar":"侧边栏","settings_imprint":"版权说明","settings_visit_website":"访问我们","settings_get_help":"获得帮助","settings_notifications_notify_me_of_important_events_mobile":"在有重要事件时通知我，通过：","settings_notifications_notify_me_on_text":"当有人接受了共享列表的邀请，或在您的共享列表中添加、完成一个任务时，我们会通知您。","settings_sidebar_smart_lists_title":"在侧边栏显示这些智能列表：","settings_sidebar_smart_lists_auto":"自动","settings_sidebar_smart_lists_hidden":"隐藏","settings_sidebar_smart_lists_visible":"可见","settings_sync_full":"立即同步","settings_account_account_backup":"账户备份","settings_account_restore_backup":"导入备份数据","settings_account_backup_description":"备份数据包含您全部的列表、任务、子任务、笔记和提醒。请注意，其中不包含向您共享的列表、文件、评论、共享列表收件人和以前进行的应用程序设置。","settings_account_data_is_being_processed":"抓紧了！您的备份数据正在处理中。我们将在处理完成时发送电子邮件给您。","settings_account_change_password_error":"在更改密码时遇到了点问题，请重试。","settings_account_click_to_download_backup":"单击下载","settings_account_create_backup":"创建备份","settings_account_current_password":"当前密码","settings_account_delete_account":"删除账户","settings_account_delete_account_confirm":"您真的希望删除您的账户么？","settings_account_delete_account_confirm_text":"删除您的账户将永久删除您所有的列表和任务且不能撤销。","settings_account_fetching_data":"获取数据中...","settings_account_new_password":"新密码","settings_account_repeat_new_password":"重复新密码","settings_account_right_click_and_save_as":"右击并保存","settings_third_party_libraries":"许可证","settings_background_credits":"背景图片提供者","settings_notifications_email_enabled":"电子邮件通知","settings_notifications_desktop_enabled":"桌面通知","settings_notifications_push_enabled":"推送通知","settings_privacy_policy":"隐私政策","settings_shortcuts_arrow_keys":"方向键","settings_shortcuts_delete_item":"删除所选列表或任务","settings_shortcuts_mark_done":"将所选任务标记为“已完成”","settings_shortcuts_mark_starred":"将所选任务标记为“星标”","settings_shortcuts_new_list":"添加一个新列表","settings_shortcuts_new_task":"添加一个新任务","settings_shortcuts_open_all_smart_list":"打开“所有”智能列表","settings_shortcuts_open_assigned_smart_list":"打开“分配给我”智能列表","settings_shortcuts_open_conversations_smart_list":"打开‘对话’智能列表","settings_shortcuts_open_done_smart_list":"打开“已完成”智能列表","settings_shortcuts_open_inbox":"打开收件箱","settings_shortcuts_open_preferences":"打开偏好设置","settings_shortcuts_open_search":"聚焦搜索","settings_shortcuts_open_starred_smart_list":"打开“星标”智能列表","settings_shortcuts_open_today_smart_list":"打开“今天”智能列表","settings_shortcuts_open_week_smart_list":"打开“周”智能列表","settings_shortcuts_reset":"重置为默认值","settings_shortcuts_select_all_tasks":"选择所有任务","settings_shortcuts_show_more":"显示更多","settings_shortcuts_hide":"隐藏","settings_shortcuts_show_notifications":"显示动态中心","settings_shortcuts_step_through_list":"逐步浏览列表","settings_shortcuts_step_through_task":"逐个浏览任务","settings_terms_of_use":"使用条款","settings_account_header_free":"免费","settings_account_header_unregistered":"注册","settings_account_header_account_$":"$ 账户","settings_account_pro_description":"在您的代办事项中添加注释或者附件，并将它分配给您的同事。团队合作从未如此简单。","settings_account_register_wunderlist_description":"注册 Wunderlist 以在您所有的设备上同步您的列表。","settings_manage_subscription_button":"管理订阅","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"耶！您是 $！","settings_account_header_pro_description":"Wunderlist Pro 是让您的项目走上正轨的最佳选择。赶快邀请您的好友和同事来合作完成这些事吧！","settings_upgrade_to_pro_label":"升级到 $","settings_label_pro_account":"Pro 版账户","settings_label_purchased_from_$":"购买来源：$ ","settings_label_purchased_from_$_by_$":"通过 $2 从 $1 上购买","settings_label_expires_in_$":"还有 $ 到期","setting_label_next_billing_date":"下一个结算日：","setting_label_cancel_subscription":"取消订阅","setting_heading_cancel_subscription":"您真的想取消 Wunderlist Pro 的订阅？","setting_description_cancel_subscription":"您仍然有权访问所有数据，但订阅一旦到期，您将只能够使用 Wunderlist 的标准功能。","setting_label_cancel_subscription_success":"您的订阅已成功取消。","settings_label_invoices":"发票","settings_label_become_a_pro":"成为 Pro 版","settings_payment_info_expires_$_relative":"$ 到期","settings_payment_info_expires_$_absolute":"还有 $1 天到期：$2","settings_manage_subscription_error":"对不起，在尝试管理您的订阅时发送错误。","group_billing_packages_title":"各行商业计划","group_billing_packages_text":"商业版 Wunderlist 为您提供了您需要的全部功能，助您以实惠的价格用团队的形式更智能地开展工作。现在只需为您的业务选择适当的计划。","group_billing_plan_table_team_size":"团队规模","group_billing_plan_table_price":"价格","group_billing_plan_table_package_name_$":"$ 位成员","group_billing_buy_button_label":"购买","group_billing_$_off":"$ 关闭","group_billing_larger_team_$":"是否有更大的团队？ $","group_billing_contact_us":"请联系我们！","group_billing_downgrade_error_$_$":"若要切换到 $1 成员计划，您必须从账户中删除 $2 个团队成员。","group_billing_manage_team":"请点击这里，管理您的团队。","group_billing_button_label_manage":"管理","group_billing_team_plan_title":"您的 Wunderlist Pro 计划","group_billing_team_plan_text":"Wunderlist Pro 将伴随您的团队，与您一起成长。添加成员简单、无论他们是否是 Wunderlist 的用户，您只需输入他们的电子邮件地址即可轻松加入。","group_billing_upgrade_button_label":"更该计划","group_billing_upgrade_plan_button_label":"升级","group_billing_Downgrade_plan_button_label":"降级","group_billing_view_plans_button_label":"查看计划","group_billing_manage_team_header":"管理团队成员","group_billing_email_address_input_placeholder":"电子邮件地址","group_billing_manage_count_$_of_$":" $2 的 $1","group_billing_cancel_team_plan":"取消您的 Wunderlist Pro 计划","group_billing_search_coachmark":"添加成员：您只需要输入成员的电子邮件地址，他们就能加入您的 Pro 计划。","group_billing_cancel_header":"您确定真的要取消 Wunderlist Pro 的订阅？","group_billing_change_plan_confirmation_$_$_$":"更改计划很简单。如果您现在选择 $1 成员计划，在开始于 $3 的下一个账单周期，我们将向您收取 $2 费用。您现在是否确定要做此选择？","group_billing_cancel_text":"您的 Pro 订阅将运行至月底，且不会再次向您收费。您仍然能查看所有的 Pro 功能，如附加于任务的文件，但您将不能对其进行任何更改。","error_goup_billing_user_already_pro":"该用户已经拥有 Wunderlist 账户，请您邀请另外一个成员。","error_group_billing_wait_subscription_runs_out":"您必须等到当前订阅用尽后才能再次购买。到期日期：$。","button_label_buy_wunderlist_for_business":"转至商业版 Wunderlist","benefit_payment_service_unavailable":"支付服务不可用","benefit_name":"Wunderlist Pro","benefit_header_$":"成为 $","benefit_header_description":"团队合作或商务合作从未如此简单！这里有4个很好的理由会让您喜欢上 Wunderlist Pro。","benefit_button_buy_monthly":"每月","benefit_assign_tasks_title":"分配待办事项","benefit_assign_tasks_description":"便捷地分配和跟踪待办事项的状态给您的同事和好友！","benefit_unlimited_subtasks_title":"无限子任务","benefit_unlimited_subtasks_decription":"将大任务分解成小任务以提高效率，且无任何限制。","benefit_comments_title":"评论","benefit_comments_description":"开始与您的团队伙伴讨论待办事项。留下反馈、提出问题并添加一些特别见解。","benefit_backgrounds_update_$":"为了使用我们新的背景，请升级为 $","benefit_additional_backgrounds_title":"全新背景","benefit_additional_backgrounds_description":"有 8 个全新新背景可以用来定制您的 Wunderlist！","benefit_files_title":"文件","benefit_files_description":"在您的代办事项中添加附件，并将它与您的队友共享。","benefit_coming_soon":"即将推出","benefit_assign_become_pro":"用 Wunderlist 分配待办事项给您的同事","benefit_label_accept_terms":"购买 Wunderlist Pro 的订阅即表示您接受 $1 和 $2 。","benefit_label_need_more_subtasks":"需要更多子任务？","sharing_connect_facebook_sharing":"将您的 Wunderlist 账户和 Facebook 连接就能便捷地邀请您的好友。","sharing_facebook_apprequest_message_$user_$list":"“$1” 想与您共享 “$2” 列表","sharing_invite":"邀请他人","sharing_invite_friends":"邀请好友","sharing_inviting_requires_account":"注册后邀请您的好友和同事到您的列表。","sharing_leave_action":"您确定要离开此列表吗？","sharing_leave_button":"退出共享列表","sharing_list_members":"成员列表","sharing_list_owner":"所有者","sharing_list_pending_member":"待定","sharing_tab_recents":"最近","sharing_shared_with_you_by":"共享人","smart_list_assigned_to_me":"分配给我","smart_list_conversations":"对话","smart_list_all":"全部","smart_list_completed":"已完成","smart_list_inbox":"收件箱","smart_list_starred":"星标项目","smart_list_today":"今天","smart_list_week":"周","label_tell_friends":"告诉您的好友","social_sharing_heading":"把 Wunderlist 分享给您的好友吧！","social_sharing_dialog_headline":"是否喜爱 Wunderlist？","social_sharing_dialog_danke":"谢谢！","social_sharing_button_later":"稍后","social_sharing_button_no_thanks":"不，谢谢","social_sharing_button_facebook":"共享","social_sharing_button_follow_us":"关注我们","social_sharing_button_like_us":"赞我们","social_sharing_heading_thanks":"关注我们以便获得最新的 Wunderlist 资讯。","social_sharing_button_twitter":"推特","general_sharing_placeholder":"我正在使用美观而简洁的待办事项列表 Wunderlist。立即通过 www.wunderlist.com 免费获取","twitter_sharing_placeholder":"我正在使用美观而简洁的待办事项列表 @Wunderlist。立即通过 www.wunderlist.com 免费获取","tutorial_welcome_notes_title":"笔记","tutorial_welcome_notes_text":"在 Wunderlist 内外都可使用可分离的笔记。","tutorial_welcome_notifications_title":"动态中心","tutorial_welcome_notifications_text":"自定义您所需要的通知方式。可选择邮件通知，或者桌面通知，或者直接在动态中心查看您收到的邀请并且更新您的共享列表。","tutorial_welcome_sharing_title":"邀请好友","tutorial_welcome_sharing_text":"您现在可以更加方便地向您的好友或同事寻求帮助。","tutorial_welcome_subtasks_title":"重复任务、提醒和子任务","tutorial_welcome_subtasks_text":"Wunderlist 有了全新的详细视图，方便您添加重复任务、提醒和子任务。","tutorial_welcome_user_title":"关于您的一切！","tutorial_welcome_user_text":"更改账户设置，检查同步状态以及自定义背景图片。","tutorial_welcome_newsletter_subscribe":"当 Wunderlist  有重要更新和新功能时用邮件通知我","tutorial_feature_pro_title":"Wunderlist Pro 的功能","share_list_email_signature":"通过美观而简洁的待办事项列表 Wunderlist 发送\\n免费提供与 iPhone、iPad、Android、Mac、Windows PC 和 Web！\\nwww.wunderlist.com","userbar_$_unsynced_item":"$ 个未同步任务","userbar_$_unsynced_item_plural":"$ 个未同步任务","userbar_account_settings":"账户设置","userbar_change_background":"更改背景","userbar_last_synced_$":"最后同步 $","userbar_no_internet_connection":"离线","userbar_preferences":"偏好设置","userbar_sync_in_progress":"同步中...","userbar_user_name_for_unregistered_mode":"注册以便启用同步","whatsnew_title":"新特性","whatsnew_label_pro_accounts":"Wunderlist Pro 版","whatsnew_label_comments":"评论","whatsnew_label_voice":"语音输入","whatsnew_label_groupbilling":"团队定价","whatsnew_copy_comments":"将所有有关待办事项的对话保留在一处，且在 Wunderlist Pro 中留下评论。留下反馈、提出问题并添加对于任何待办事项的特别见解，从而大幅改进团队内部的交流。","whatsnew_copy_pro_accounts":"用 Wunderlist Pro 来添加注释，分配待办事项，添加附件，创建无限子任务，可以更高效的完成任务。","whatsnew_copy_voice":"单击麦克风图标以口述您的待办事项，或记录语音备忘录并以文件形式添加该备忘录。","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"注册试用 Wunderlist Pro 并添加文件。","label_add_new_file":"添加一个文件...","file_uploaded_unsuccessfully":"$ 上传失败。请重试。","file_uploaded_failed":"上传失败，请重试。","file_uploaded_failed_deleted":"$ 上传失败，因为该文件已从您的硬盘中删除。","label_are_you_sure_permanently_delete_$_file":"您确定要从 Wunderlist 中永久删除文件 “$” 吗？","upload_file_was_not_synced_yet":"请同步","upload_file_not_synced_yet":"未同步","placeholder_add_comments":"添加评论...","placeholder_reply":"回复...","button_label_go_pro_to_comment":"进入 Pro 进行评论","comment_request_failed":"对不起，我们无法加载评论，请重试。","comment_load_earlier":"查看更多评论","coachmark_no_current_comments":"尚无评论。\\n在此开始您的对话。","coachmark_comments_not_available":"对不起，我们无法加载先前的评论，请重试。","notification_$_commented_on_$":"$1 对 $2 进行评论","notification_$_and_$_commented_on_$":"$1 和 $2 对 $3 进行评论","notification_$_and_$_others_commented_on_$":"$1 和 $2 及他人对 $3 进行评论","comments_requires_account":"注册试用 Wunderlist Pro 并添加评论。","non_pro_trial_free_limit_reached":"您已达到免费限额！","non_pro_trial_write_next_comment_$":"您可以添加另一条评论 $。","non_pro_trial_upload_next_file_$":"您将可以添加另一个文件 $。","non_pro_trial_assign_next_to_do_$":"您可以分配另一项待办事项 $。","button_signup_or_login":"注册或者登录","button_it_is_completely_free":"它完全免费","label_free_download_for_platforms":"在iPhone、iPad、Android、Mac、Windows上都可免费使用！","label_wunderlist_to_get_things_done":"使用 Wunderlist 安排事项的人超过 500 万。","label_people_who_use_wunderlist":"看看谁已经在使用 Wunderlist：","label_wunderlist_uses":"无论是工作规划，还是与您的爱人分享购物清单或者管理您的日常生活，Wunderlist 都是您最好的任务管理软件。","label_install_browser_extension":"安装浏览器扩展程序","label_install_chrome_browser_extension":"安装 Chrome 扩展程序","label_newsletter_signup":"订阅我们的电子期刊","label_know_upcoming_features":"第一时间了解最新功能","label_learn_more_about_wunderlist":"了解更多关于 Wunderlist","label_learn_more":"了解更多...","label_your_email_address":"您的电子邮件地址","button_subscribe_to_newsletter":"订阅","button_sending_subscribe_to_newsletter":"发送中...","iyf4_usermenu_label":"免费获取 Wunderlist Pro","iyf4_notification_label":"邀请好友获得高达 12 个月的 Wunderlist Pro 免费使用额度！","iyf4_notification_button_label_var_a":"开始邀请","iyf4_notification_button_label_var_b":"邀请好友","iyf4_notification_button_label_var_c":"免费获取 Wunderlist Pro","iyf4_notification_button_label_var_d":"分享 Wunderlist Pro","iyf4_dialog_invite_headline_$":"邀请好友获得高达 $ 的 Wunderlist Pro 使用额度！","iyf4_dialog_invite_headline_incentive":"免费使用 12 个月","iyf4_dialog_invite_incentive_$":"$ Wunderlist，您将获得 1 个月的 Wunderlist Pro 免费使用额度（最高为 12 个月）","iyf4_dialog_invite_incentive_terms":"对于加入的每个好友","iyf4_dialog_tweet":"我喜欢用 Wunderlist 整理生活。在此免费获取 1 个月的 Wunderlist Pro 使用额度：","iyf_notification_label":"向您的好友推介 Wunderlist 并获取高达 12 个月的 Pro 免费使用额度！","iyf_notification_button_label":"开始使用 Pro！","iyf_dialog_step1_headline":"获取免费的 Pro 账户","iyf_dialog_step1_subheadline":"通过 3 个简单的步骤","iyf_dialog_step1_instruction1_headline":"开始邀请您的好友","iyf_dialog_step1_instruction1_subheadline":"通过 Facebook、Twitter 或电子邮件","iyf_dialog_step1_instruction2_headline":"您的好友注册","iyf_dialog_step1_instruction2_subheadline":"静待他们加入 Wunderlist","iyf_dialog_step1_instruction3_headline":"享用您免费的 Pro 账户","iyf_dialog_step1_instruction3_subheadline":"每当有好友接受邀请，您就可获得 1 个月的免费使用额度","iyf_dialog_step1_instruction3_subheadline_$_plural":"每当有 $ 个好友接受邀请，您就可获得 1 个月的免费使用额度","iyf_dialog_step1_next_button":"开始邀请","iyf_dialog_step2_subheadline":"以获取免费的 Pro 账户","iyf_dialog_step2_divider_label":"共享此链接","iyf_dialog_share_on_facebook":"在 Facebook 上共享","iyf_dialog_post_on_twitter":"在 Twitter 上推特","iyf_dialog_email_placeholder":"输入一个电子邮件地址...","iyf_dialog_more_placeholder":"添加另一个...","iyf_dialog_step3_headline":"感谢您共享","iyf_dialog_step3_subheadline":"静待您的好友加入","iyf_dialog_step3_success_headline":"邀请已成功发送","iyf_dialog_step3_success_subheadline":"我们将在您的 Pro 账户准备就绪后及时通知您。","iyf_dialog_step3_invite_more":"邀请更多人","meta_title":"Wunderlist 2：您最便捷的任务管理软件","meta_description":"使用 Wunderlist 管理任务、待办事项列表和执行事项的人已超出 500 万。Wunderlist 是最适合您、您的团队或家庭的待办事项列表。","meta_keywords":"6wunderkinder，效率，合作，任务管理，任务管理器，待办事项，待办事项，列表，任务，GTD，规划，计划，购物清单，提醒，子任务，智能列表，购物列表，电影列表，共享列表","enable_desktop_notifications_text":"在您的浏览器里点击\"确认\"后，点击\"允许\"，以便开启通知。","notification_add_to_browser":"让您与 Wunderlist 只有一键之遥。立即新增加 Wunderlist 网页版应用到您的浏览器。","notification_add_extension_to_browser":"在 Wunderlist 中快速储存您喜欢的网页内容，请安装 Wunderlist Chrome 扩展程序。","button_add_to_chrome":"添加到 Chrome","button_add_to_store_added":"已添加","aria_activity_center_hint":"动态中心。点击 Escape 关闭。","aria_exit_search":"退出搜索","aria_search":"搜索","aria_sort_list":"对列表进行分类","aria_thank_you":"我们希望辅助功能适用于您。请将对于辅助功能执行的任何反馈信息发送到 support@wunderlist.com。感谢您选择 Wunderlist。","aria_user_menu_hint":"用户菜单。点击 Escape 关闭。","aria_assign_to_$":"分配至 $","momentjs_months":"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月","momentjs_monthsShort":"一月_二月_三月_四月_五月_六月_七月_八月_九月_十月_十一月_十二月","momentjs_weekdays":"周日_周一_周二_周三_周四_周五_周六","momentjs_weekdaysShort":"周日_周一_周二_周三_周四_周五_周六","momentjs_weekdaysMin":"周日_周一_周二_周三_周四_周五_周六","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[今天] LT","momentjs_calendar_nextDay":"[明天] LT","momentjs_calendar_nextWeek":"dddd [] LT","momentjs_calendar_lastDay":"[昨天] LT","momentjs_calendar_lastWeek":"[上] dddd [] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"在 %s 之内","momentjs_relativeTime_past":"%s 之前","momentjs_relativeTime_s":"几秒钟","momentjs_relativeTime_m":"一分钟","momentjs_relativeTime_mm":"%d 分钟","momentjs_relativeTime_h":"一个小时","momentjs_relativeTime_hh":"%d 小时","momentjs_relativeTime_d":"一天","momentjs_relativeTime_dd":"%d 天","momentjs_relativeTime_M":"一个月","momentjs_relativeTime_MM":"%d 个月","momentjs_relativeTime_y":"一年","momentjs_relativeTime_yy":"%d 年"}
};
});
define('languages/chinese-taiwan',[],function() {
return {
'name': 'chinese-taiwan',
'data': {"actionbar_print_selected_item":"列印選擇的項目","actionbar_print_$_selected_items_plural":"列印$個選擇的項目","actionbar_email_selected_item":"用電子郵件傳送選擇的項目","actionbar_email_$_selected_items_plural":"用電子郵件傳送$個選擇的項目","actionbar_sort_alphabetically":"按照字母順序排序","actionbar_sort_due_date":"按到期日排序","actionbar_sort_assignee":"按被分配人排序","api_error_account_already_exists":"已有帳號使用這個電子郵件地址。","api_error_connection_error":"糟糕，連線到伺服器時發生問題，請再試一次。","api_error_general_error":"糟糕，伺服器暫時無法連線，請再試一次。","api_error_incorrect_login":"您輸入的電子郵件地址或密碼錯誤。","api_error_incorrect_password":"您輸入的密碼錯誤。","api_error_service_down":"WunderAPI服務的重要元件當機。","api_error_unknown":"發生不預期且無法處理的錯誤。","api_error_validation_error_unable_to_signup":"無法用這個電子郵件地址註冊。","api_error_not_a_beta_user":"您不是Wunderlist測試版的使用者。","button_back":"返回","button_cancel":"取消","button_confirm":"確認","button_download":"下載","button_change":"變更","button_choose":"選擇","button_connect":"連線","button_connect_facebook":"與Facebook連結","button_continue":"繼續","button_delete":"刪除","button_disconnect":"取消連線","button_dismiss":"關閉","button_done":"完成","button_edit":"編輯","button_get_started":"開始上手吧！","button_go_back":"返回","button_go_back_sentence":"返回。","button_learn_more":"深入瞭解","button_go_back_to_login":"返回登入畫面","button_go_to_web_app":"開啟網路版應用程式","button_join_now":"立即加入","button_log_in":"登入","button_log_in_with_$":"用$登入","button_log_out":"登出","button_log_in_facebook":"用Facebook帳號登入","button_next":"下一個","button_no":"否","button_no_due_date":"無到期日","button_ok":"確定","button_remove_due_date":"移除到期日","button_remove_reminder":"移除提醒","button_email_list":"郵寄清單","button_print_list":"列印清單","button_reset_password":"重設密碼","button_retry":"重試","button_save":"儲存","button_send":"寄送","button_sign_up":"註冊","button_sign_up_with_$":"用$註冊","button_sign_up_for_free":"免費註冊","button_sign_up_facebook":"使用Facebook帳號註冊","button_support_center":"技術支援中心","button_subscribe":"太棒了，我想要！","button_try_again":"再試一次","button_try_wunderlist":"試用Wunderlist","button_yes":"是","coachmark_all_list_empty":"您尚未加入任何項目。不要客氣，加點東西吧。","coachmark_completed_list_empty":"您尚未完成任何項目。請為清單中的幾個項目打勾吧！","coachmark_no_search_results":"無搜尋結果","coachmark_sharing_invite_friends_heading":"邀請好友","coachmark_sharing_invite_friends_text_$":"您的好友可以建立、移除或查看清單“$”中的項目。","coachmark_sharing_recent_no_contacts_heading":"無最近的聯絡人","coachmark_sharing_recent_no_contacts_text_$":"輸入一個電子郵件地址或者蒐尋你的聯絡人。加入之後，你的朋友可以建立、刪除或查看清單 “$” 中的項目。","coachmark_assigned_to_me_list_empty":"您未被分配到任何項目","coachmark_conversations_list_empty":"目前無任何對話。","coachmark_starred_list_empty":"沒有標示星號的項目","coachmark_today_list_empty":"恭喜！今天沒有任何項目到期或逾期","coachmark_week_list_empty":"放假？下週沒有任何項目到期","error_list_not_found":"你要找的清單不存在","error_share_not_created":"嘗試分享清單時發生問題，請再試一次。","error_task_not_found":"你要找的項目不存在","error_page_not_found":"找不到頁面","error_title_not_found":"找不到","label_are_you_sure_permanently_delete_item":"確定要永久刪除這個項目？","label_are_you_sure_permanently_delete_item_plural":"確定要永久刪除這些項目？","label_activity_center":"動態中心","label_are_you_sure_permanently_delete_$_list":"確定要永久刪除清單「$」？","label_are_you_sure_permanently_delete_$_task":"確定要永久刪除項目「$」？","label_are_you_sure_permanently_delete_task_plural":"確定要永久刪除這些項目？","label_are_you_sure_permanently_delete_$_subtask":"確定要永久刪除子任務「$」？","label_cant_undo":"這個動作無法取消復原。","label_completed_tasks_heading":"1個已完成項目","label_$_completed_tasks_heading_plural":"$個已完成項目","label_connecting":"連線中...","label_minisite_description_line_1":"持續追蹤你想知道的每件事。","label_minisite_description_line_2":"Wunderlist不僅免費，而且支援各大系統平台。","label_minisite_share_deleted_or_no_access":"此項目似乎已經刪除，或是你已經沒有存取的權限。","label_minisite_contact_sender_for_info":"請詢問分享這個清單給你的人。","label_minisite_$_invited_you_to_the_list_$":"$1已邀請您至清單$2","label_minisite_empty_list_$":"此清單目前空白，請協助起個頭。只需按一下上面的「'註冊」按鈕，即可開始將項目加入至清單％@。","label_day_0":"日","label_day_1":"一","label_day_2":"二","label_day_3":"三","label_day_4":"四","label_day_5":"五","label_day_6":"六","label_delete_file":"刪除檔案","label_delete_list":"刪除清單","label_delete_task":"刪除項目","label_delete_task_plural":"刪除項目","label_delete_subtask":"刪除子任務","label_due_$":"$ 到期","label_due_on":"於$到期","label_due_date":"到期日","label_email":"電子郵件","label_every":"每","label_loading":"載入中...","label_logging_out":"登出中...","label_name":"名稱","label_newsletter":"Wunderlist通訊","label_none":"無","label_notification":"通知","label_oops":"糟糕！","label_or":"或","label_password":"密碼","label_relative_date_today":"今天","label_relative_date_today_with_date":"今天，$","label_relative_date_today_mid_sentence":"今天","label_relative_date_tomorrow":"明天","label_relative_date_tomorrow_with_date":"明天，$","label_relative_date_tomorrow_mid_sentence":"明天","label_relative_date_yesterday":"昨天","label_remind_me_at_$":"在$通知我","label_reminder":"提醒","label_reminder_message_$":"友善提醒：$","label_repeat_every_day":"每天重複","label_repeat_every_week":"每週重複","label_repeat_every_month":"每個月重複","label_repeat_every_year":"每年重複","label_repeat_custom":"自訂...","label_repeat_day":"每天","label_repeat_day_$_plural":"每隔$天","label_repeat_month":"每個月","label_repeat_month_$_plural":"每隔$個月","label_repeat_week":"每週","label_repeat_week_$_plural":"每隔$週","label_repeat_never":"別再重複","label_repeat_year":"每年","label_repeat_year_$_plural":"每隔$年","label_reset_password":"重設密碼","label_rights_reserved":"版權所有","label_still_fetching_tasks":"擷取任務中...","label_sync":"同步","label_time_am":"上午","label_time_day_plural":"天","label_time_week_plural":"週","label_time_month_plural":"月","label_time_pm":"下午","label_time_year_plural":"年","label_assign_to":"分配給","label_unassigned":"未分配","label_assign_me":"我","label_created_$":"於$建立","label_created_by_$":"由$建立","label_created_on_$":"於$建立","label_created_$_by_$":"於$1由$2建立","label_created_by_$_on_$":"由$1於$2建立","label_completed_$":"於$完成","label_completed_on_$":"於$完成","label_completed_$_by_$":"於$1由$2完成","label_completed_by_$_on_$":"由$1於$2完成","login_add_photo_hint":"上傳自己的相片來個人化您的Wunderlist帳號","login_already_have_account":"已經有帳號了嗎？","login_email_not_valid":"請輸入有效的電子郵件地址。","login_empty_name":"請輸入您的姓名。","login_empty_password":"請輸入密碼。","login_password_not_valid":"請輸入有效的密碼。","login_empty_email":"請輸入電子郵件地址。","login_enter_name":"您是誰？","login_enter_password":"就快完成囉","login_enter_password_hint":"請選擇密碼以完成您的Wunderlist帳號設定。","login_forgot_password":"忘記密碼","login_forgot_password_heading":"忘記密碼了嗎？","login_forgot_password_text":"請輸入您註冊的電子郵件地址，我們就會寄給您重設密碼的連結。","login_no_account_yet":"沒有帳號嗎？","login_password_changed":"密碼已更新","login_password_not_match":"您輸入的密碼不符。","login_password_reset_email_has_been_sent":"請查看電子郵件中有關重設密碼的說明。","login_reset_password_heading":"現在請輸入您的新密碼。","login_reset_password_success":"只要按底下的按鈕，就能重新登入您的Wunderlist帳號。","login_reset_password_success_heading":"恭喜！您的密碼已經成功變更。","login_password_too_short":"密碼最少必須包含5個字元。","login_sign_up":"註冊。","login_want_to_try_again":"再試一次?","login_accept_terms":"註冊即表示您接受$1及$2。","logout_timeout_title":"同步錯誤","logout_timeout_text":"無法同步資料。再試一次或立即登出？","mobile_tutorial_welcome_to":"歡迎使用","mobile_tutorial_wunderlist_subtitle":"精美和簡潔的工作清單","notifications_desktop_enable_heading":"啟用桌面通知？","notifications_no_notifications":"無動態","notifications_no_notifications_message":"在這裡顯示分享清單與其他的動態。","notifications_event_accept":"接受","notifications_event_accepted":"已接受","web_upgrade_ie9_not_supported":"Wunderlist不支援Internet Explorer 9。請升級為$或$，以享有更美好的使用經驗。","web_upgrade_to_chrome":"Chrome","web_upgrade_to_ie10":"Internet Explorer 10","web_enable_touch_styles_alert":"您使用的裝置似乎有觸控螢幕。是否要啟用觸控最佳化介面？您可在帳號設定中隨時變更此設定。","web_setting_enable_touch_for_$":"啟用觸控功能：$","web_settings_text_refresh_may_be_required":"可能需重新整理","rate_label":"幫Wunderlist評分","rate_app_heading":"幫Wunderlist評分與評論","rate_app_message_web_chrome":"感謝您使用Wunderlist。請告訴我們您的看法！請在Chrome Web Store幫Wunderlist 評分與評論，告訴我們您的寶貴意見★★★★★","rate_app_button_later":"稍後再說","rate_app_button_no":"不用了","rate_app_button_yes":"現在就幫Wunderlist打分數","placeholder_add_due_today_to_inbox":"在「收件匣」新增今天到期的項目...","placeholder_add_list":"新增清單...","placeholder_add_subtask":"新增子任務","placeholder_add_starred_to_inbox":"在「收件匣」新增已加星號的項目...","placeholder_add_task_to_$":"新增項目到「$」...","placeholder_add_to_inbox":"新增項目到「收件夾」","placeholder_new_list":"新增清單","placeholder_remind_me":"提醒我","placeholder_search":"搜尋...","placeholder_sharing_search":"姓名或電子郵件地址...","placeholder_set_due_date":"設定到期日","browser_outdated_heading":"糟糕！看來您的瀏覽器還不是最新版本。","browser_outdated_update":"請更新您的瀏覽器","browser_outdated_explanation":"Wunderlist採用最新最棒的技術打造而成。要使用Wunderlist，請下載最新版本的瀏覽器","prenamed_list_movies":"想看的電影","prenamed_list_private":"隱私","prenamed_list_shopping":"購物","prenamed_list_wishlist":"願望清單","prenamed_list_work":"工作","prenamed_list_read_later":"稍後再看","settings_account_change_email":"變更電子郵件地址...","settings_account_change_password":"變更密碼...","settings_account_delete_confirmation":"輸入「我確定」","settings_account_delete_confirmation_text":"我確定","settings_account_drop_image":"將圖檔拖放到這裡","settings_account_connect_facebook_account":"將您的Wunderlist帳號與Facebook連結，與好友分享清單將變得更為方便、快速又簡單。","settings_general_12_hour":"12小時制","settings_general_24_hour":"24小時制","settings_general_confirm_deletion":"刪除項目前需確認","settings_general_create_new_tasks":"新增項目","settings_general_date_format":"日期格式","settings_general_language":"語言","settings_general_start_of_week":"一週的開始日","settings_general_start_of_week_sunday":"星期日","settings_general_start_of_week_saturday":"星期六","settings_general_start_of_week_monday":"星期一","settings_general_sound_task_completion":"啟用項目完成通知聲","settings_general_sound_new_notifications":"啟用聲音通知","settings_general_print_done_tasks":"列印已完成項目","settings_general_tasks_bottom":"清單底端","settings_general_tasks_top":"清單頂端","settings_general_time_format":"時間格式","settings_heading_team":"業務","settings_heading_about":"關於","settings_heading_account":"帳號","settings_heading_general":"一般","settings_heading_notification":"通知","settings_heading_shortcuts":"捷徑","settings_heading_sidebar":"側欄","settings_imprint":"公司資訊","settings_visit_website":"Visit Us","settings_get_help":"Get Help","settings_notifications_notify_me_of_important_events_mobile":"通知我重要的事件。經由：","settings_notifications_notify_me_on_text":"當有人接受了共用清單的邀請，或是在您的共用清單中加入或完成項目時，我們就會通知您。","settings_sidebar_smart_lists_title":"在側欄顯示智慧型清單：","settings_sidebar_smart_lists_auto":"自動","settings_sidebar_smart_lists_hidden":"隱藏","settings_sidebar_smart_lists_visible":"可見","settings_sync_full":"立即同步","settings_account_account_backup":"帳號備份","settings_account_restore_backup":"匯入備份資料","settings_account_backup_description":"備份資料包括您所有的清單、任務、子任務、筆記及提醒。請注意，備份資料不包括與您分享的清單、檔案、評論、分享清單收件人，以及先前的應用程式設定。","settings_account_data_is_being_processed":"大功告成！您的備份資料已處理完成。我們會在完成所有處理後以電子郵件通知您。","settings_account_change_password_error":"更新密碼時發生問題，請再試一次。","settings_account_click_to_download_backup":"點選以下載","settings_account_create_backup":"建立備份","settings_account_current_password":"目前的密碼","settings_account_delete_account":"刪除帳號","settings_account_delete_account_confirm":"確定要刪除帳號?","settings_account_delete_account_confirm_text":"刪除帳號將永久刪除所有的清單與項目，而且無法回復。","settings_account_fetching_data":"擷取資料中...","settings_account_new_password":"新密碼","settings_account_repeat_new_password":"重複新密碼","settings_account_right_click_and_save_as":"按滑鼠右鍵並儲存","settings_third_party_libraries":"版權宣告","settings_background_credits":"特別感謝","settings_notifications_email_enabled":"電子郵件通知","settings_notifications_desktop_enabled":"桌面通知","settings_notifications_push_enabled":"推播通知","settings_privacy_policy":"隱私權政策","settings_shortcuts_arrow_keys":"方向鍵","settings_shortcuts_delete_item":"刪除選擇的清單或項目","settings_shortcuts_mark_done":"將選擇的項目標示為「已完成」","settings_shortcuts_mark_starred":"將選擇的項目標示「星號」","settings_shortcuts_new_list":"新增清單","settings_shortcuts_new_task":"新增項目","settings_shortcuts_open_all_smart_list":"開啓「所有」智慧型清單","settings_shortcuts_open_assigned_smart_list":"開啟「已分配給我」智慧型清單","settings_shortcuts_open_conversations_smart_list":"開啟「對話」智慧型清單","settings_shortcuts_open_done_smart_list":"開啓「已完成」智慧型清單","settings_shortcuts_open_inbox":"開啟收件匣","settings_shortcuts_open_preferences":"開啓偏好設定","settings_shortcuts_open_search":"開始搜尋","settings_shortcuts_open_starred_smart_list":"開啓「星號」智慧型清單","settings_shortcuts_open_today_smart_list":"開啓「今天」智慧型清單","settings_shortcuts_open_week_smart_list":"開啓「星期」智慧型清單","settings_shortcuts_reset":"重設回預設值","settings_shortcuts_select_all_tasks":"選擇所有的項目","settings_shortcuts_show_more":"顯示更多","settings_shortcuts_hide":"隱藏","settings_shortcuts_show_notifications":"顯示動態中心","settings_shortcuts_step_through_list":"瀏覽清單","settings_shortcuts_step_through_task":"瀏覽項目","settings_terms_of_use":"使用條款","settings_account_header_free":"免費","settings_account_header_unregistered":"註冊","settings_account_header_account_$":"$帳號","settings_account_pro_description":"在待辦事項新增評論和檔案，再分配給同事。團隊協作從來沒有這麼簡單過！","settings_account_register_wunderlist_description":"註冊Wunderlist，即可在所有裝置上同步處理清單。","settings_manage_subscription_button":"管理訂閱","settings_account_header_pro":"Pro","settings_account_header_pro_account_$":"恭喜！您已成為$會員。","settings_account_header_pro_description":"Wunderlist Pro是追蹤專案的最佳方法。邀請朋友和同事一起合作，讓工作順利進行！","settings_upgrade_to_pro_label":"升級至$","settings_label_pro_account":"Pro帳號","settings_label_purchased_from_$":"購自：$","settings_label_purchased_from_$_by_$":"購自$1，購買人：$2","settings_label_expires_in_$":"$後到期","setting_label_next_billing_date":"下個出帳日期：","setting_label_cancel_subscription":"取消訂閱","setting_heading_cancel_subscription":"確定要取消Wunderlist Pro訂閱？","setting_description_cancel_subscription":"你仍可存取你所有的資料，但是當訂閱過期後，就只能使用Wunderlist的標準功能。","setting_label_cancel_subscription_success":"您已成功取消訂閱。","settings_label_invoices":"發票","settings_label_become_a_pro":"成為Pro","settings_payment_info_expires_$_relative":"$到期","settings_payment_info_expires_$_absolute":"$1天後到期：$2","settings_manage_subscription_error":"抱歉，管理您的訂閱時發生錯誤。","group_billing_packages_title":"業務費用方案","group_billing_packages_text":"商業版Wunderlist提供團隊智慧工作所需的全部功能，並且價格經濟實惠。現在就立即選擇適合您所經營業務的費用方案。","group_billing_plan_table_team_size":"團隊人數","group_billing_plan_table_price":"價格","group_billing_plan_table_package_name_$":"$ 人","group_billing_buy_button_label":"立即購買","group_billing_$_off":"$折扣優惠","group_billing_larger_team_$":"團隊人數更多？$","group_billing_contact_us":"聯絡我們！","group_billing_downgrade_error_$_$":"要改為$1人方案，您必須從帳號移除$2 名團隊成員。","group_billing_manage_team":"按此處以管理團隊。","group_billing_button_label_manage":"管理","group_billing_team_plan_title":"您的Wunderlist Pro方案","group_billing_team_plan_text":"Wunderlist Pro伴隨您的團隊共同成長！加入成員非常簡單，只要在下面輸入對方的電子郵件地址即可。無論對方是不是Wunderlist的使用者，都是這麼簡單。","group_billing_upgrade_button_label":"變更方案","group_billing_upgrade_plan_button_label":"升級","group_billing_Downgrade_plan_button_label":"降級","group_billing_view_plans_button_label":"檢視方案","group_billing_manage_team_header":"管理團隊成員","group_billing_email_address_input_placeholder":"電子郵件地址","group_billing_manage_count_$_of_$":"$1/$2","group_billing_cancel_team_plan":"取消Wunderlist Pro方案","group_billing_search_coachmark":"要加入成員，只需輸入團隊成員的電子郵件地址，然後對方就會加入您的Pro方案。","group_billing_cancel_header":"確定要取消團隊的Wunderlist Pro訂閱？","group_billing_change_plan_confirmation_$_$_$":"變更方案十分簡單。若您現在改為$1人方案，從$3算起的下個出帳週期將向您收取$2。確定要立即執行？","group_billing_cancel_text":"您的Pro訂閱將可用到月底，之後不會再向您收費。雖然您仍可使用檢視任務附加檔案等Pro功能，但您將無法進行變更。","error_goup_billing_user_already_pro":"此人似乎已經有Wunderlist Pro帳號。請將Pro好禮送給其他團隊成員！","error_group_billing_wait_subscription_runs_out":"您必須等到目前的訂閱到期才能重新購買。到期：$。","button_label_buy_wunderlist_for_business":"前往商業版Wunderlist","benefit_payment_service_unavailable":"無法使用付款服務","benefit_name":"Wunderlist Pro","benefit_header_$":"成為$","benefit_header_description":"團隊和商務協作從來沒有現在這麼簡單！註冊Wunderlist Pro的四大理由如下。","benefit_button_buy_monthly":"每月","benefit_assign_tasks_title":"分配待辦事項","benefit_assign_tasks_description":"輕鬆委派待辦事項給同事和朋友，追蹤進度簡單無比！","benefit_unlimited_subtasks_title":"無限的子任務","benefit_unlimited_subtasks_decription":"將大工作拆成小部分，分段完成以提高產能——沒有限制。","benefit_comments_title":"評論","benefit_comments_description":"與團隊成員開始對話，討論與待辦事項有關的事情。發表意見、詢問問題或提供精闢見解，在這裡全都一次搞定。","benefit_backgrounds_update_$":"若要使用新背景，請升級至$","benefit_additional_backgrounds_title":"新背景","benefit_additional_backgrounds_description":"探索8種全新美觀背景，按照自己的喜好自訂Wunderlist！","benefit_files_title":"檔案","benefit_files_description":"附加檔案至待辦事項，與團隊成員分享。","benefit_coming_soon":"即將發佈","benefit_assign_become_pro":"用Wunderlist分配待辦事項給同事","benefit_label_accept_terms":"購買Wunderlist Pro訂閱即表示您接受$1和$2。","benefit_label_need_more_subtasks":"需要更多子任務？","sharing_connect_facebook_sharing":"將Wunderlist帳號與Facebook連結，就能輕易邀請好友。","sharing_facebook_apprequest_message_$user_$list":"「$1」想與您分享清單「$2」","sharing_invite":"邀請他人","sharing_invite_friends":"邀請好友","sharing_inviting_requires_account":"註冊以邀請朋友或同事加入您的清單。","sharing_leave_action":"確定要離開這個清單?","sharing_leave_button":"離開分享清單","sharing_list_members":"清單成員","sharing_list_owner":"擁有者","sharing_list_pending_member":"待處理","sharing_tab_recents":"最近","sharing_shared_with_you_by":"分享人","smart_list_assigned_to_me":"已分配給我","smart_list_conversations":"對話","smart_list_all":"全部","smart_list_completed":"已完成","smart_list_inbox":"收件匣","smart_list_starred":"已加星號","smart_list_today":"今天","smart_list_week":"星期","label_tell_friends":"告訴朋友...","social_sharing_heading":"喜歡Wunderlist嗎？告訴您的朋友！","social_sharing_dialog_headline":"喜歡Wunderlist嗎？","social_sharing_dialog_danke":"大感謝！","social_sharing_button_later":"現在不要","social_sharing_button_no_thanks":"不用","social_sharing_button_facebook":"分享","social_sharing_button_follow_us":"關注我們","social_sharing_button_like_us":"幫我們按讚","social_sharing_heading_thanks":"請關注我們以獲取Wunderlist的第一手快訊。","social_sharing_button_twitter":"推文","general_sharing_placeholder":"我正在使用設計美觀、操作簡易的待辦事項清單程式Wunderlist。快來www.wunderlist.com免費取得程式","twitter_sharing_placeholder":"我正在使用設計美觀、操作簡易的待辦事項清單程式@Wunderlist。快來www.wunderlist.com免費取得程式","tutorial_welcome_notes_title":"筆記","tutorial_welcome_notes_text":"在Wunderlis內外都可使用的可分離筆記。","tutorial_welcome_notifications_title":"動態中心","tutorial_welcome_notifications_text":"自訂所需的通知方式。可選擇透過電子郵件和桌面通知接受共享清單的邀請和更新，亦可查看活動中心瞭解詳情。","tutorial_welcome_sharing_title":"邀請好友","tutorial_welcome_sharing_text":"現在能更輕易地邀請朋友或同事助您一臂之力。","tutorial_welcome_subtasks_title":"重複項目、提醒以及子任務","tutorial_welcome_subtasks_text":"Wunderlist現在有了新的完整顯示功能，方便您輕易地新增重複項目、提醒及子任務。","tutorial_welcome_user_title":"重點就是您！","tutorial_welcome_user_text":"變更帳號設定，檢查同步狀態以及自訂背景。","tutorial_welcome_newsletter_subscribe":"Wunderlist有重要更新與新功能時寄信通知我","tutorial_feature_pro_title":"Wunderlist Pro功能","share_list_email_signature":"用Wunderlist寄送 – 設計美觀、操作簡易的待辦事項清單程式\\niPhone、iPad、Android、Mac、Windows PC及網頁版均可免費使用！\\nwww.wunderlist.com","userbar_$_unsynced_item":"$個未同步項目","userbar_$_unsynced_item_plural":"$個未同步項目","userbar_account_settings":"帳號設定","userbar_change_background":"變更背景","userbar_last_synced_$":"上次同步$","userbar_no_internet_connection":"離線","userbar_preferences":"偏好設定","userbar_sync_in_progress":"同步中...","userbar_user_name_for_unregistered_mode":"註冊以同步","whatsnew_title":"最新動向","whatsnew_label_pro_accounts":"Wunderlist Pro","whatsnew_label_comments":"評論","whatsnew_label_voice":"語音輸出","whatsnew_label_groupbilling":"團隊定價","whatsnew_copy_comments":"Wunderlist Pro的評論功能讓您一手掌握與待辦事項有關的對話討論。針對待辦事項發表意見、詢問問題或提供精闢見解，讓團隊間的溝通更上一層樓。","whatsnew_copy_pro_accounts":"運用Wunderlist Pro新增評論、分配待辦事項和建立無限的子任務，全體攜手共創佳績。","whatsnew_copy_voice":"點選麥克風圖示以聽寫處理您的待辦事項，亦可錄製語音備忘錄並附加為檔案。","whatsnew_copy_groupbilling":"Select the Wunderlist Pro package that’s right for your business.  With a simplified billing process upgrading your team to Wunderlist Pro is easy.","files_requires_account":"註冊以試用Wunderlist Pro並新增檔案。","label_add_new_file":"新增檔案...","file_uploaded_unsuccessfully":"上傳$失敗，請再試一次。","file_uploaded_failed":"上傳失敗，請再試一次。","file_uploaded_failed_deleted":"上傳$失敗，因為您已從硬碟刪除檔案。","label_are_you_sure_permanently_delete_$_file":"確定要從Wunderlist永久刪除檔案「$」？","upload_file_was_not_synced_yet":"請同步","upload_file_not_synced_yet":"未同步","placeholder_add_comments":"新增評論","placeholder_reply":"回覆...","button_label_go_pro_to_comment":"使用Pro版以加入評論","comment_request_failed":"抱歉，無法載入評論，請再試一次。","comment_load_earlier":"檢視其他評論","coachmark_no_current_comments":"尚無評論。\\n請在此開始對話。","coachmark_comments_not_available":"抱歉，無法載入先前的評論，請稍後再試一次。","notification_$_commented_on_$":"$1對$2發表了評論","notification_$_and_$_commented_on_$":"$1和$2對$3發表了評論","notification_$_and_$_others_commented_on_$":"$1和$2等人對$3發表了評論","comments_requires_account":"註冊以試用Wunderlist Pro並新增評論。","non_pro_trial_free_limit_reached":"您已達到免費使用的上限！","non_pro_trial_write_next_comment_$":"您可在$新增其他評論。","non_pro_trial_upload_next_file_$":"您將可在$新增其他檔案。","non_pro_trial_assign_next_to_do_$":"您可在$分配其他待辦事項。","button_signup_or_login":"註冊或登入","button_it_is_completely_free":"完全免費","label_free_download_for_platforms":"iPhone、iPad、Android、Windows 及 Mac免費使用","label_wunderlist_to_get_things_done":"Wunderlist深獲超過5百萬人青睞，處理事情快狠準。","label_people_who_use_wunderlist":"查看已在使用Wunderlist的人：","label_wunderlist_uses":"無論您是要整頓業務、與親朋好友分享購物清單，還是要記錄自己的日常生活，Wunderlist都是您個人、團隊及家人的待辦事項清單程式首選。","label_install_browser_extension":"安裝瀏覽器擴充功能","label_install_chrome_browser_extension":"安裝Chrome瀏覽器擴充功能","label_newsletter_signup":"註冊通訊電子報","label_know_upcoming_features":"搶先他人一步瞭解最新功能特色","label_learn_more_about_wunderlist":"深入瞭解Wunderlist","label_learn_more":"深入瞭解...","label_your_email_address":"您的電子郵件地址","button_subscribe_to_newsletter":"訂閱","button_sending_subscribe_to_newsletter":"傳送中...","iyf4_usermenu_label":"免費取得Wunderlist Pro","iyf4_notification_label":"邀請朋友加入，就能免費使用Wunderlist Pro最多12個月！","iyf4_notification_button_label_var_a":"開始邀請","iyf4_notification_button_label_var_b":"邀請好友","iyf4_notification_button_label_var_c":"免費取得Wunderlist Pro","iyf4_notification_button_label_var_d":"分享Wunderlist Pro","iyf4_dialog_invite_headline_$":"邀請朋友加入，就能使用Wunderlist Pro最多$。","iyf4_dialog_invite_headline_incentive":"免費12個月","iyf4_dialog_invite_incentive_$":"$ Wunderlist，兩人均可免費使用Wunderlist Pro 1個月（上限12個月）","iyf4_dialog_invite_incentive_terms":"凡好友加入","iyf4_dialog_tweet":"我喜歡用Wunderlist讓生活變得有條理。在此取得Wunderlist Pro的1個月免費使用權：","iyf_notification_label":"推薦Wunderlist給朋友，就能免費使用Pro版最多12個月！","iyf_notification_button_label":"使用Pro版！","iyf_dialog_step1_headline":"取得免費Pro帳號","iyf_dialog_step1_subheadline":"三個步驟簡單完成","iyf_dialog_step1_instruction1_headline":"開始邀請好友","iyf_dialog_step1_instruction1_subheadline":"用Facebook、Twitter或電子郵件輕鬆搞定","iyf_dialog_step1_instruction2_headline":"邀請朋友註冊","iyf_dialog_step1_instruction2_subheadline":"先別離開，請等朋友完成加入Wunderlist","iyf_dialog_step1_instruction3_headline":"請享用您的免費Pro帳號","iyf_dialog_step1_instruction3_subheadline":"凡朋友接受邀請即享1個月招待","iyf_dialog_step1_instruction3_subheadline_$_plural":"凡$個朋友接受邀請即享1個月招待","iyf_dialog_step1_next_button":"開始邀請","iyf_dialog_step2_subheadline":"以取得免費Pro帳號","iyf_dialog_step2_divider_label":"分享此連結","iyf_dialog_share_on_facebook":"在Facebook分享","iyf_dialog_post_on_twitter":"在Twitter推文","iyf_dialog_email_placeholder":"輸入電子郵件地址...","iyf_dialog_more_placeholder":"新增其他...","iyf_dialog_step3_headline":"感謝您的分享","iyf_dialog_step3_subheadline":"先別離開，請等朋友完成加入","iyf_dialog_step3_success_headline":"已成功寄出邀請","iyf_dialog_step3_success_subheadline":"您的Pro帳號一準備完成便會通知您。","iyf_dialog_step3_invite_more":"邀請其他人","meta_title":"Wunderlist 2：精美簡潔的線上待辦事項清單應用程式","meta_description":"超過5百萬人早已投入Wunderlist的懷抱，運用Wunderlist管理任務、待辦事項清單以及做好工作。Wunderlist是您個人、團隊及家人的待辦事項清單程式首選。","meta_keywords":"6wunderkinder, 產能, 協作, 任務管理, 任務管理員, 待辦事項, 待辦事項, 清單, 任務, gtd, 整理, 規劃, 購物清單, 提醒, 子任務, 智慧型清單, 雜貨清單, 電影清單, 分享清單","enable_desktop_notifications_text":"點選「確認」後，在瀏覽器選「允許」以啟用通知。","notification_add_to_browser":"單鍵快速啟動Wunderlist，立即新增Wunderlist Web App到瀏覽器。","notification_add_extension_to_browser":"將您喜愛的各項網路內容直接快速儲存到Wunderlist中。立即安裝Add to Wunderlist Chrome擴充功能。","button_add_to_chrome":"新增至Chrome","button_add_to_store_added":"已新增","aria_activity_center_hint":"動態中心。按ESC鍵以關閉。","aria_exit_search":"結束搜尋","aria_search":"搜尋","aria_sort_list":"排序清單","aria_thank_you":"希望您還滿意無障礙功能。請將無障礙建置的相關意見寄至support@wunderlist.com。感謝您選用Wunderlist。","aria_user_menu_hint":"使用者選單。按ESC鍵以關閉。","aria_assign_to_$":"分配給$","momentjs_months":"January_February_March_April_May_June_July_August_September_October_November_December","momentjs_monthsShort":"Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec","momentjs_weekdays":"Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday","momentjs_weekdaysShort":"Sun_Mon_Tue_Wed_Thu_Fri_Sat","momentjs_weekdaysMin":"Su_Mo_Tu_We_Th_Fr_Sa","momentjs_longDateFormat_LT":"h:mm A","momentjs_longDateFormat_L":"MM/DD/YYYY","momentjs_longDateFormat_LL":"MMMM D YYYY","momentjs_longDateFormat_LLL":"MMMM D YYYY LT","momentjs_longDateFormat_LLLL":"dddd, MMMM D YYYY LT","momentjs_calendar_sameDay":"[今天於] LT","momentjs_calendar_nextDay":"[明天於] LT","momentjs_calendar_nextWeek":"dddd [於] LT","momentjs_calendar_lastDay":"[昨天於] LT","momentjs_calendar_lastWeek":"[前] dddd [於] LT","momentjs_calendar_sameElse":"L","momentjs_relativeTime_future":"在%s內","momentjs_relativeTime_past":"%s前","momentjs_relativeTime_s":"幾秒鐘","momentjs_relativeTime_m":"一分鐘","momentjs_relativeTime_mm":"%d分鐘","momentjs_relativeTime_h":"一小時","momentjs_relativeTime_hh":"%d小時","momentjs_relativeTime_d":"一天","momentjs_relativeTime_dd":"%d天","momentjs_relativeTime_M":"一個月","momentjs_relativeTime_MM":"%d個月","momentjs_relativeTime_y":"一年","momentjs_relativeTime_yy":"%d年"}
};
});(function () {

  'use strict';

  // Fix paths for template & style loaders
  require.config({
    'paths': {
      'template': 'vendor/require-templates',
      'partial': 'vendor/require-partials',
      'style': 'vendor/require-styles'
    }
  });

  require([

    'application/runtime',

    'backend/IOWunderapi',
    'backend/IOBetaService'

  ], function (runtime, IOWunderapi, IOBetaService, undefined) {

    var $ = runtime.$;
    var browser = runtime.env.getEnvInfo();

    // empty static SEO HTML content as soon as possible!
    $(function () {

      $('body').css('opacity', 1).addClass(browser.browser);
    });

    require(['applications/main/Application'], function (Application) {

      new Application();
    });
  });
}).call(this);